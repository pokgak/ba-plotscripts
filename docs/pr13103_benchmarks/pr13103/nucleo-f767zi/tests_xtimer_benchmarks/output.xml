<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:41:45.014" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:45.564" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:45.572" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:46.696" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:45.562" endtime="20201112 12:41:46.697"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.699" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:46.698" endtime="20201112 12:41:46.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.561" endtime="20201112 12:41:46.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:46.702" endtime="20201112 12:41:46.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.701" endtime="20201112 12:41:46.885"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.898" endtime="20201112 12:41:46.913"></status>
</kw>
<msg timestamp="20201112 12:41:46.913" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.897" endtime="20201112 12:41:46.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.916" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.915" endtime="20201112 12:41:46.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.919" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:46.917" endtime="20201112 12:41:46.919"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.894" endtime="20201112 12:41:46.920"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.892" endtime="20201112 12:41:46.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.890" endtime="20201112 12:41:46.921"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:46.925" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:46.924" endtime="20201112 12:41:46.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.922" endtime="20201112 12:41:46.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.890" endtime="20201112 12:41:46.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.889" endtime="20201112 12:41:46.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.926" endtime="20201112 12:41:46.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.887" endtime="20201112 12:41:46.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.929" endtime="20201112 12:41:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.886" endtime="20201112 12:41:46.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:45.559" endtime="20201112 12:41:46.931"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:46.938" endtime="20201112 12:41:46.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.936" endtime="20201112 12:41:46.958"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.972" endtime="20201112 12:41:46.986"></status>
</kw>
<msg timestamp="20201112 12:41:46.987" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.970" endtime="20201112 12:41:46.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:46.988" endtime="20201112 12:41:46.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:46.992" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:46.990" endtime="20201112 12:41:46.992"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.968" endtime="20201112 12:41:46.993"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:46.966" endtime="20201112 12:41:46.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.964" endtime="20201112 12:41:46.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:46.998" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:46.997" endtime="20201112 12:41:46.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.995" endtime="20201112 12:41:46.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.963" endtime="20201112 12:41:46.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.962" endtime="20201112 12:41:46.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:46.999" endtime="20201112 12:41:47.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.960" endtime="20201112 12:41:47.001"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.958" endtime="20201112 12:41:47.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:46.935" endtime="20201112 12:41:47.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.009" endtime="20201112 12:41:47.019"></status>
</kw>
<msg timestamp="20201112 12:41:47.020" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.008" endtime="20201112 12:41:47.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.022" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:47.021" endtime="20201112 12:41:47.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:47.023" endtime="20201112 12:41:47.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.005" endtime="20201112 12:41:47.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.003" endtime="20201112 12:41:47.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.030" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:41:47.029" endtime="20201112 12:41:47.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.032" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:41:47.031" endtime="20201112 12:41:47.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.027" endtime="20201112 12:41:47.033"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:46.932" endtime="20201112 12:41:47.034" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:45.121" endtime="20201112 12:41:47.037"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:47.091" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:47.099" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:48.256" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:47.090" endtime="20201112 12:41:48.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.260" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:48.258" endtime="20201112 12:41:48.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.089" endtime="20201112 12:41:48.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.263" endtime="20201112 12:41:48.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.261" endtime="20201112 12:41:48.482"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.494" endtime="20201112 12:41:48.509"></status>
</kw>
<msg timestamp="20201112 12:41:48.510" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.493" endtime="20201112 12:41:48.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.512" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.511" endtime="20201112 12:41:48.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.515" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:48.513" endtime="20201112 12:41:48.516"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.491" endtime="20201112 12:41:48.516"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.488" endtime="20201112 12:41:48.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.487" endtime="20201112 12:41:48.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:48.521" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:48.520" endtime="20201112 12:41:48.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.518" endtime="20201112 12:41:48.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.486" endtime="20201112 12:41:48.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.486" endtime="20201112 12:41:48.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.522" endtime="20201112 12:41:48.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.485" endtime="20201112 12:41:48.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.525" endtime="20201112 12:41:48.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.483" endtime="20201112 12:41:48.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:47.087" endtime="20201112 12:41:48.527"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.533" endtime="20201112 12:41:48.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.532" endtime="20201112 12:41:48.553"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.566" endtime="20201112 12:41:48.580"></status>
</kw>
<msg timestamp="20201112 12:41:48.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.564" endtime="20201112 12:41:48.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.583" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.582" endtime="20201112 12:41:48.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.586" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:48.584" endtime="20201112 12:41:48.587"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.562" endtime="20201112 12:41:48.587"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:48.560" endtime="20201112 12:41:48.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.558" endtime="20201112 12:41:48.588"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:48.592" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:48.591" endtime="20201112 12:41:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.589" endtime="20201112 12:41:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.557" endtime="20201112 12:41:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.557" endtime="20201112 12:41:48.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.593" endtime="20201112 12:41:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.555" endtime="20201112 12:41:48.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.554" endtime="20201112 12:41:48.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.530" endtime="20201112 12:41:48.596"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:48.598" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.606" endtime="20201112 12:41:48.615"></status>
</kw>
<msg timestamp="20201112 12:41:48.615" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.604" endtime="20201112 12:41:48.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:48.616" endtime="20201112 12:41:48.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.619" endtime="20201112 12:41:48.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.602" endtime="20201112 12:41:48.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.600" endtime="20201112 12:41:48.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.628" endtime="20201112 12:41:48.913"></status>
</kw>
<msg timestamp="20201112 12:41:48.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062686361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.626" endtime="20201112 12:41:48.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062686361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:48.916" endtime="20201112 12:41:48.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.921" endtime="20201112 12:41:48.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.624" endtime="20201112 12:41:48.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.622" endtime="20201112 12:41:48.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.928" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:48.927" endtime="20201112 12:41:48.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.932" level="INFO">VALUE: [{'time': 0.062684486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062686361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.062687986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.062689639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6530000000042344e-06, 'source_diff': 1.6530000000042344e-06}, {'time': 0.062691222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.062692778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.062694667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999910367e-06, 'source_diff': 1.8889999999910367e-06}, {'time': 0.0626965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8330000000066349e-06, 'source_diff': 1.8330000000066349e-06}, {'time': 0.062697903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.062699903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.062701639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.062703458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.062705361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.062706861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.062708486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999912168e-06, 'source_diff': 1.6249999999912168e-06}, {'time': 0.062710431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.945000000003194e-06, 'source_diff': 1.945000000003194e-06}, {'time': 0.062712333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.06271375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000035543e-06, 'source_diff': 1.4170000000035543e-06}, {'time': 0.062715292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000071488e-06, 'source_diff': 1.5420000000071488e-06}, {'time': 0.062717222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.062718889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.062720653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.062722056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.062723861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.805000000007495e-06, 'source_diff': 1.805000000007495e-06}, {'time': 0.062725611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.062727097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999949913e-06, 'source_diff': 1.4859999999949913e-06}, {'time': 0.062728472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.062730125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6530000000042344e-06, 'source_diff': 1.6530000000042344e-06}, {'time': 0.062731819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.062733861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.042000000007649e-06, 'source_diff': 2.042000000007649e-06}, {'time': 0.062735611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.062737083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.062739, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9170000000040543e-06, 'source_diff': 1.9170000000040543e-06}, {'time': 0.062740417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000035543e-06, 'source_diff': 1.4170000000035543e-06}, {'time': 0.062742333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999990703e-06, 'source_diff': 1.915999999990703e-06}, {'time': 0.062744167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8340000000061085e-06, 'source_diff': 1.8340000000061085e-06}, {'time': 0.062746111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9439999999898427e-06, 'source_diff': 1.9439999999898427e-06}, {'time': 0.062747708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000059548e-06, 'source_diff': 1.5970000000059548e-06}, {'time': 0.062749597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8890000000049145e-06, 'source_diff': 1.8890000000049145e-06}, {'time': 0.062751097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.062752958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.860999999991897e-06, 'source_diff': 1.860999999991897e-06}, {'time': 0.062754569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.062756139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5700000000062886e-06, 'source_diff': 1.5700000000062886e-06}, {'time': 0.062757917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.777999999993951e-06, 'source_diff': 1.777999999993951e-06}, {'time': 0.062759875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9580000000102293e-06, 'source_diff': 1.9580000000102293e-06}, {'time': 0.062761764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999910367e-06, 'source_diff': 1.8889999999910367e-06}, {'time': 0.062763514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.750000000008689e-06, 'source_diff': 1.750000000008689e-06}, {'time': 0.062765139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999912168e-06, 'source_diff': 1.6249999999912168e-06}, {'time': 0.062766778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.062768486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:48.929" endtime="20201112 12:41:48.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.924" endtime="20201112 12:41:48.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:48.947" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:48.933" endtime="20201112 12:41:48.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.950" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:48.950" endtime="20201112 12:41:48.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.954" level="INFO">VALUE: {'sourceeventdiff': [0, 1.8749999999984057e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.8889999999910367e-06, 1.8330000000066349e-06, 1.4029999999970455e-06, 2.000000000002e-06, 1.7360000000021802e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.5000000000015001e-06, 1.6249999999912168e-06, 1.945000000003194e-06, 1.901999999998072e-06, 1.4170000000035543e-06, 1.5420000000071488e-06, 1.9299999999972117e-06, 1.6669999999968654e-06, 1.76400000000132e-06, 1.4029999999970455e-06, 1.805000000007495e-06, 1.7499999999948113e-06, 1.4859999999949913e-06, 1.3749999999979057e-06, 1.6530000000042344e-06, 1.6939999999965316e-06, 2.042000000007649e-06, 1.7499999999948113e-06, 1.4720000000023603e-06, 1.9170000000040543e-06, 1.4170000000035543e-06, 1.915999999990703e-06, 1.8340000000061085e-06, 1.9439999999898427e-06, 1.5970000000059548e-06, 1.8890000000049145e-06, 1.5000000000015001e-06, 1.860999999991897e-06, 1.6109999999985858e-06, 1.5700000000062886e-06, 1.777999999993951e-06, 1.9580000000102293e-06, 1.8889999999910367e-06, 1.750000000008689e-06, 1.6249999999912168e-06, 1.6389999999977256e-06, 1.7080000000030404e-06], 'source_diff': [0, 1.8749999999984057e-06, 1.6250000000050946e-06, 1.6530000000042344e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.8889999999910367e-06, 1.8330000000066349e-06, 1.4029999999970455e-06, 2.000000000002e-06, 1.7360000000021802e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.5000000000015001e-06, 1.6249999999912168e-06, 1.945000000003194e-06, 1.901999999998072e-06, 1.4170000000035543e-06, 1.5420000000071488e-06, 1.9299999999972117e-06, 1.6669999999968654e-06, 1.76400000000132e-06, 1.4029999999970455e-06, 1.805000000007495e-06, 1.7499999999948113e-06, 1.4859999999949913e-06, 1.3749999999979057e-06, 1.6530000000042344e-06, 1.6939999999965316e-06, 2.042000000007649e-06, 1.7499999999948113e-06, 1.4720000000023603e-06, 1.9170000000040543e-06, 1.4170000000035543e-06, 1.915999999990703e-06, 1.8340000000061085e-06, 1.9439999999898427e-06, 1.5970000000059548e-06, 1.8890000000049145e-06, 1.5000000000015001e-06, 1.860999999991897e-06, 1.6109999999985858e-06, 1.5700000000062886e-06, 1.777999999993951e-06, 1.9580000000102293e-06, 1.8889999999910367e-06, 1.750000000008689e-06, 1.6249999999912168e-06, 1.6389999999977256e-06, 1.7080000000030404e-06], 'time': [0.062684486, 0.062686361, 0.062687986, 0.062689639, 0.062691222, 0.062692778, 0.062694667, 0.0626965, 0.062697903, 0.062699903, 0.062701639, 0.062703458, 0.062705361, 0.062706861, 0.062708486, 0.062710431, 0.062712333, 0.06271375, 0.062715292, 0.062717222, 0.062718889, 0.062720653, 0.062722056, 0.062723861, 0.062725611, 0.062727097, 0.062728472, 0.062730125, 0.062731819, 0.062733861, 0.062735611, 0.062737083, 0.062739, 0.062740417, 0.062742333, 0.062744167, 0.062746111, 0.062747708, 0.062749597, 0.062751097, 0.062752958, 0.062754569, 0.062756139, 0.062757917, 0.062759875, 0.062761764, 0.062763514, 0.062765139, 0.062766778, 0.062768486]}</msg>
<status status="PASS" starttime="20201112 12:41:48.952" endtime="20201112 12:41:48.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.948" endtime="20201112 12:41:48.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:48.958" level="INFO">${RESULT} = [{'time': 0.062686361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.062689639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:48.956" endtime="20201112 12:41:48.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:48.966" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:48.959" endtime="20201112 12:41:48.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.970" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:48.969" endtime="20201112 12:41:48.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:48.972" level="INFO">VALUE: [1.8749999999984057e-06, 1.6530000000042344e-06, 1.5559999999997798e-06, 1.8330000000066349e-06, 2.000000000002e-06, 1.819000000000126e-06, 1.5000000000015001e-06, 1.945000000003194e-06, 1.4170000000035543e-06, 1.9299999999972117e-06, 1.76400000000132e-06, 1.805000000007495e-06, 1.4859999999949913e-06, 1.6530000000042344e-06, 2.042000000007649e-06, 1.4720000000023603e-06, 1.4170000000035543e-06, 1.8340000000061085e-06, 1.5970000000059548e-06, 1.5000000000015001e-06, 1.6109999999985858e-06, 1.777999999993951e-06, 1.8889999999910367e-06, 1.6249999999912168e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201112 12:41:48.971" endtime="20201112 12:41:48.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.967" endtime="20201112 12:41:48.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:48.975" endtime="20201112 12:41:48.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:48.979" endtime="20201112 12:41:48.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.977" endtime="20201112 12:41:48.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.974" endtime="20201112 12:41:48.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.599" endtime="20201112 12:41:49.000"></status>
</kw>
<msg timestamp="20201112 12:41:49.000" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.007" endtime="20201112 12:41:49.017"></status>
</kw>
<msg timestamp="20201112 12:41:49.018" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.006" endtime="20201112 12:41:49.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.019" endtime="20201112 12:41:49.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.021" endtime="20201112 12:41:49.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.003" endtime="20201112 12:41:49.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.002" endtime="20201112 12:41:49.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.030" endtime="20201112 12:41:49.296"></status>
</kw>
<msg timestamp="20201112 12:41:49.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018502, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:49.028" endtime="20201112 12:41:49.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018502, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:41:49.299" endtime="20201112 12:41:49.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.304" endtime="20201112 12:41:49.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.026" endtime="20201112 12:41:49.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.024" endtime="20201112 12:41:49.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.311" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:49.310" endtime="20201112 12:41:49.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.315" level="INFO">VALUE: [{'time': 0.018502, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018505736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018507153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018509014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018510528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018512, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018513611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018515069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018516639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018518597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018520083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018521861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018523653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018525569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018527431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.862000000001779e-06, 'source_diff': 1.862000000001779e-06}, {'time': 0.018528931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018530764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.018532375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018533889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018535625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018537472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018538917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018540819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018542236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.01854425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018546056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018547472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.018548958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018550903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018552333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018553903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018555792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018557514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018558917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018561069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.151999999998322e-06, 'source_diff': 2.151999999998322e-06}, {'time': 0.018562528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018564347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018566306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.959000000002764e-06, 'source_diff': 1.959000000002764e-06}, {'time': 0.01856825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018570028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018571694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018573111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018574903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018576708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.0185785, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018579972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018581903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018583361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018585361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:49.312" endtime="20201112 12:41:49.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.308" endtime="20201112 12:41:49.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:49.329" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:49.316" endtime="20201112 12:41:49.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.333" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:49.332" endtime="20201112 12:41:49.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.336" level="INFO">VALUE: {'sourceeventdiff': [0, 1.819000000000126e-06, 1.9169999999971155e-06, 1.4170000000000849e-06, 1.8610000000023053e-06, 1.5139999999976006e-06, 1.4720000000023603e-06, 1.6109999999985858e-06, 1.457999999999321e-06, 1.5700000000028191e-06, 1.957999999999821e-06, 1.4859999999984608e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.915999999997642e-06, 1.862000000001779e-06, 1.4999999999980307e-06, 1.8330000000031654e-06, 1.6109999999985858e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.846999999999266e-06, 1.4449999999992247e-06, 1.9020000000015413e-06, 1.4170000000000849e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.4159999999971418e-06, 1.4860000000019302e-06, 1.9449999999997247e-06, 1.4300000000001811e-06, 1.5699999999993497e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.403000000000515e-06, 2.151999999998322e-06, 1.4589999999987946e-06, 1.819000000000126e-06, 1.959000000002764e-06, 1.944000000000251e-06, 1.7779999999974205e-06, 1.6660000000008612e-06, 1.4170000000000849e-06, 1.7920000000004599e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.4719999999988909e-06, 1.931000000000155e-06, 1.457999999999321e-06, 2.000000000002e-06], 'source_diff': [0, 1.819000000000126e-06, 1.9169999999971155e-06, 1.4170000000000849e-06, 1.8610000000023053e-06, 1.5139999999976006e-06, 1.4720000000023603e-06, 1.6109999999985858e-06, 1.457999999999321e-06, 1.5700000000028191e-06, 1.957999999999821e-06, 1.4859999999984608e-06, 1.77800000000089e-06, 1.7920000000004599e-06, 1.915999999997642e-06, 1.862000000001779e-06, 1.4999999999980307e-06, 1.8330000000031654e-06, 1.6109999999985858e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.846999999999266e-06, 1.4449999999992247e-06, 1.9020000000015413e-06, 1.4170000000000849e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.4159999999971418e-06, 1.4860000000019302e-06, 1.9449999999997247e-06, 1.4300000000001811e-06, 1.5699999999993497e-06, 1.889000000001445e-06, 1.7219999999991409e-06, 1.403000000000515e-06, 2.151999999998322e-06, 1.4589999999987946e-06, 1.819000000000126e-06, 1.959000000002764e-06, 1.944000000000251e-06, 1.7779999999974205e-06, 1.6660000000008612e-06, 1.4170000000000849e-06, 1.7920000000004599e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.4719999999988909e-06, 1.931000000000155e-06, 1.457999999999321e-06, 2.000000000002e-06], 'time': [0.018502, 0.018503819, 0.018505736, 0.018507153, 0.018509014, 0.018510528, 0.018512, 0.018513611, 0.018515069, 0.018516639, 0.018518597, 0.018520083, 0.018521861, 0.018523653, 0.018525569, 0.018527431, 0.018528931, 0.018530764, 0.018532375, 0.018533889, 0.018535625, 0.018537472, 0.018538917, 0.018540819, 0.018542236, 0.01854425, 0.018546056, 0.018547472, 0.018548958, 0.018550903, 0.018552333, 0.018553903, 0.018555792, 0.018557514, 0.018558917, 0.018561069, 0.018562528, 0.018564347, 0.018566306, 0.01856825, 0.018570028, 0.018571694, 0.018573111, 0.018574903, 0.018576708, 0.0185785, 0.018579972, 0.018581903, 0.018583361, 0.018585361]}</msg>
<status status="PASS" starttime="20201112 12:41:49.334" endtime="20201112 12:41:49.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.330" endtime="20201112 12:41:49.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.340" level="INFO">${RESULT} = [{'time': 0.018503819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018507153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:49.338" endtime="20201112 12:41:49.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.350" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:49.341" endtime="20201112 12:41:49.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.354" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:49.353" endtime="20201112 12:41:49.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.356" level="INFO">VALUE: [1.819000000000126e-06, 1.4170000000000849e-06, 1.5139999999976006e-06, 1.6109999999985858e-06, 1.5700000000028191e-06, 1.4859999999984608e-06, 1.7920000000004599e-06, 1.862000000001779e-06, 1.8330000000031654e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.9020000000015413e-06, 2.01400000000157e-06, 1.4159999999971418e-06, 1.9449999999997247e-06, 1.5699999999993497e-06, 1.7219999999991409e-06, 2.151999999998322e-06, 1.819000000000126e-06, 1.944000000000251e-06, 1.6660000000008612e-06, 1.7920000000004599e-06, 1.7920000000004599e-06, 1.931000000000155e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201112 12:41:49.355" endtime="20201112 12:41:49.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.351" endtime="20201112 12:41:49.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.359" endtime="20201112 12:41:49.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.363" endtime="20201112 12:41:49.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.361" endtime="20201112 12:41:49.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.358" endtime="20201112 12:41:49.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.000" endtime="20201112 12:41:49.383"></status>
</kw>
<msg timestamp="20201112 12:41:49.384" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.391" endtime="20201112 12:41:49.400"></status>
</kw>
<msg timestamp="20201112 12:41:49.401" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.390" endtime="20201112 12:41:49.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.403" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.402" endtime="20201112 12:41:49.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.404" endtime="20201112 12:41:49.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.387" endtime="20201112 12:41:49.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.386" endtime="20201112 12:41:49.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.414" endtime="20201112 12:41:49.679"></status>
</kw>
<msg timestamp="20201112 12:41:49.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018239736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.413" endtime="20201112 12:41:49.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018239736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:49.682" endtime="20201112 12:41:49.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.687" endtime="20201112 12:41:49.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.409" endtime="20201112 12:41:49.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.407" endtime="20201112 12:41:49.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.693" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:49.692" endtime="20201112 12:41:49.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.697" level="INFO">VALUE: [{'time': 0.018239736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018241819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.018243417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018245125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018246931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018248722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018250278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.018252153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018253542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018255792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2499999999987808e-06, 'source_diff': 2.2499999999987808e-06}, {'time': 0.018257306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018258944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018260861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018262528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018264056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018265903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018267417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018269236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018270694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018272486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018274306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018276083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018277778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018279611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018281514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018283444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018285153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018287097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018288708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018290458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018292056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018293986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018295708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018297139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018298542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018300111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018301847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018303861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018305667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018307319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.018309069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018310819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018312514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018314403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018316111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018317611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018319181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018320639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018322597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018324236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:49.695" endtime="20201112 12:41:49.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.690" endtime="20201112 12:41:49.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:49.712" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:49.699" endtime="20201112 12:41:49.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.716" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:49.715" endtime="20201112 12:41:49.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.719" level="INFO">VALUE: {'sourceeventdiff': [0, 2.082999999999946e-06, 1.598000000001959e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.7909999999975168e-06, 1.5560000000032492e-06, 1.8749999999984057e-06, 1.389000000000945e-06, 2.2499999999987808e-06, 1.51400000000107e-06, 1.637999999998252e-06, 1.917000000000585e-06, 1.6670000000003349e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.51400000000107e-06, 1.819000000000126e-06, 1.457999999999321e-06, 1.7920000000004599e-06, 1.8199999999995997e-06, 1.7769999999979469e-06, 1.6950000000029442e-06, 1.832999999999696e-06, 1.9029999999975455e-06, 1.930000000000681e-06, 1.7089999999990446e-06, 1.944000000000251e-06, 1.6110000000020552e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.930000000000681e-06, 1.7219999999991409e-06, 1.4309999999996548e-06, 1.403000000000515e-06, 1.568999999999876e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.6519999999978219e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.457999999999321e-06, 1.957999999999821e-06, 1.639000000001195e-06], 'source_diff': [0, 2.082999999999946e-06, 1.598000000001959e-06, 1.707999999999571e-06, 1.8060000000000298e-06, 1.7909999999975168e-06, 1.5560000000032492e-06, 1.8749999999984057e-06, 1.389000000000945e-06, 2.2499999999987808e-06, 1.51400000000107e-06, 1.637999999998252e-06, 1.917000000000585e-06, 1.6670000000003349e-06, 1.52800000000064e-06, 1.846999999999266e-06, 1.51400000000107e-06, 1.819000000000126e-06, 1.457999999999321e-06, 1.7920000000004599e-06, 1.8199999999995997e-06, 1.7769999999979469e-06, 1.6950000000029442e-06, 1.832999999999696e-06, 1.9029999999975455e-06, 1.930000000000681e-06, 1.7089999999990446e-06, 1.944000000000251e-06, 1.6110000000020552e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.930000000000681e-06, 1.7219999999991409e-06, 1.4309999999996548e-06, 1.403000000000515e-06, 1.568999999999876e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.6519999999978219e-06, 1.7500000000017502e-06, 1.7499999999982807e-06, 1.6949999999994747e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.457999999999321e-06, 1.957999999999821e-06, 1.639000000001195e-06], 'time': [0.018239736, 0.018241819, 0.018243417, 0.018245125, 0.018246931, 0.018248722, 0.018250278, 0.018252153, 0.018253542, 0.018255792, 0.018257306, 0.018258944, 0.018260861, 0.018262528, 0.018264056, 0.018265903, 0.018267417, 0.018269236, 0.018270694, 0.018272486, 0.018274306, 0.018276083, 0.018277778, 0.018279611, 0.018281514, 0.018283444, 0.018285153, 0.018287097, 0.018288708, 0.018290458, 0.018292056, 0.018293986, 0.018295708, 0.018297139, 0.018298542, 0.018300111, 0.018301847, 0.018303861, 0.018305667, 0.018307319, 0.018309069, 0.018310819, 0.018312514, 0.018314403, 0.018316111, 0.018317611, 0.018319181, 0.018320639, 0.018322597, 0.018324236]}</msg>
<status status="PASS" starttime="20201112 12:41:49.717" endtime="20201112 12:41:49.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.713" endtime="20201112 12:41:49.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:49.723" level="INFO">${RESULT} = [{'time': 0.018241819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.018245125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:49.720" endtime="20201112 12:41:49.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:49.731" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:49.724" endtime="20201112 12:41:49.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.736" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:49.734" endtime="20201112 12:41:49.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.738" level="INFO">VALUE: [2.082999999999946e-06, 1.707999999999571e-06, 1.7909999999975168e-06, 1.8749999999984057e-06, 2.2499999999987808e-06, 1.637999999998252e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.819000000000126e-06, 1.7920000000004599e-06, 1.7769999999979469e-06, 1.832999999999696e-06, 1.930000000000681e-06, 1.944000000000251e-06, 1.7499999999982807e-06, 1.930000000000681e-06, 1.4309999999996548e-06, 1.568999999999876e-06, 2.01400000000157e-06, 1.6519999999978219e-06, 1.7499999999982807e-06, 1.889000000001445e-06, 1.5000000000015001e-06, 1.457999999999321e-06, 1.639000000001195e-06]</msg>
<status status="PASS" starttime="20201112 12:41:49.737" endtime="20201112 12:41:49.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.732" endtime="20201112 12:41:49.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.742" endtime="20201112 12:41:49.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:49.746" endtime="20201112 12:41:49.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.744" endtime="20201112 12:41:49.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.740" endtime="20201112 12:41:49.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.384" endtime="20201112 12:41:49.766"></status>
</kw>
<msg timestamp="20201112 12:41:49.767" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.774" endtime="20201112 12:41:49.785"></status>
</kw>
<msg timestamp="20201112 12:41:49.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.773" endtime="20201112 12:41:49.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:49.788" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:49.787" endtime="20201112 12:41:49.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.789" endtime="20201112 12:41:49.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.770" endtime="20201112 12:41:49.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.768" endtime="20201112 12:41:49.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:49.798" endtime="20201112 12:41:50.067"></status>
</kw>
<msg timestamp="20201112 12:41:50.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01895825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:49.796" endtime="20201112 12:41:50.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01895825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:50.069" endtime="20201112 12:41:50.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.075" endtime="20201112 12:41:50.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.794" endtime="20201112 12:41:50.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.792" endtime="20201112 12:41:50.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.081" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:50.080" endtime="20201112 12:41:50.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.085" level="INFO">VALUE: [{'time': 0.018956528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01895825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018959778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018961722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018963306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018965181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018967097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018968819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018970764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018972292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018973986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018975472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018977431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018979194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.018980653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018982458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018983931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018985792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018987764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018989514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018991014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018992972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018994736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018996667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9309999999966854e-06, 'source_diff': 1.9309999999966854e-06}, {'time': 0.018998514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.019000181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019001625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019003083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019004681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.019006278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019007861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019009806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019011597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019013, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.0190145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019016, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019017889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019019819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.0190215, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019022972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.019024778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019026542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019028389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019029889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019031556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019033458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.019034931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.019036764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.0190385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019039917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:50.082" endtime="20201112 12:41:50.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.078" endtime="20201112 12:41:50.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:50.099" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.087" endtime="20201112 12:41:50.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.103" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:50.102" endtime="20201112 12:41:50.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.106" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventdiff': [0, 1.7219999999991409e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.5839999999989196e-06, 1.8750000000018752e-06, 1.915999999997642e-06, 1.7220000000026103e-06, 1.9449999999997247e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.4859999999984608e-06, 1.9589999999992946e-06, 1.7630000000018464e-06, 1.4589999999987946e-06, 1.8050000000005562e-06, 1.4729999999983645e-06, 1.8610000000023053e-06, 1.971999999999391e-06, 1.7499999999982807e-06, 1.5000000000015001e-06, 1.957999999999821e-06, 1.76400000000132e-06, 1.9309999999966854e-06, 1.8470000000027353e-06, 1.6670000000003349e-06, 1.443999999999751e-06, 1.457999999999321e-06, 1.5979999999984895e-06, 1.5970000000024853e-06, 1.582999999999446e-06, 1.9449999999997247e-06, 1.7910000000009862e-06, 1.4029999999970455e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.930000000000681e-06, 1.6809999999999048e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.5000000000015001e-06, 1.6670000000003349e-06, 1.901999999998072e-06, 1.473000000001834e-06, 1.832999999999696e-06, 1.7359999999987108e-06, 1.4170000000000849e-06], 'source_diff': [0, 1.7219999999991409e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.5839999999989196e-06, 1.8750000000018752e-06, 1.915999999997642e-06, 1.7220000000026103e-06, 1.9449999999997247e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.4859999999984608e-06, 1.9589999999992946e-06, 1.7630000000018464e-06, 1.4589999999987946e-06, 1.8050000000005562e-06, 1.4729999999983645e-06, 1.8610000000023053e-06, 1.971999999999391e-06, 1.7499999999982807e-06, 1.5000000000015001e-06, 1.957999999999821e-06, 1.76400000000132e-06, 1.9309999999966854e-06, 1.8470000000027353e-06, 1.6670000000003349e-06, 1.443999999999751e-06, 1.457999999999321e-06, 1.5979999999984895e-06, 1.5970000000024853e-06, 1.582999999999446e-06, 1.9449999999997247e-06, 1.7910000000009862e-06, 1.4029999999970455e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.930000000000681e-06, 1.6809999999999048e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.846999999999266e-06, 1.5000000000015001e-06, 1.6670000000003349e-06, 1.901999999998072e-06, 1.473000000001834e-06, 1.832999999999696e-06, 1.7359999999987108e-06, 1.4170000000000849e-06], 'time': [0.018956528, 0.01895825, 0.018959778, 0.018961722, 0.018963306, 0.018965181, 0.018967097, 0.018968819, 0.018970764, 0.018972292, 0.018973986, 0.018975472, 0.018977431, 0.018979194, 0.018980653, 0.018982458, 0.018983931, 0.018985792, 0.018987764, 0.018989514, 0.018991014, 0.018992972, 0.018994736, 0.018996667, 0.018998514, 0.019000181, 0.019001625, 0.019003083, 0.019004681, 0.019006278, 0.019007861, 0.019009806, 0.019011597, 0.019013, 0.0190145, 0.019016, 0.019017889, 0.019019819, 0.0190215, 0.019022972, 0.019024778, 0.019026542, 0.019028389, 0.019029889, 0.019031556, 0.019033458, 0.019034931, 0.019036764, 0.0190385, 0.019039917]}</msg>
<status status="PASS" starttime="20201112 12:41:50.104" endtime="20201112 12:41:50.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.100" endtime="20201112 12:41:50.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:50.111" level="INFO">${RESULT} = [{'time': 0.01895825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018961722, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:41:50.108" endtime="20201112 12:41:50.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:50.119" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.112" endtime="20201112 12:41:50.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.123" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:50.122" endtime="20201112 12:41:50.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.125" level="INFO">VALUE: [1.7219999999991409e-06, 1.944000000000251e-06, 1.8750000000018752e-06, 1.7220000000026103e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.7630000000018464e-06, 1.8050000000005562e-06, 1.8610000000023053e-06, 1.7499999999982807e-06, 1.957999999999821e-06, 1.9309999999966854e-06, 1.6670000000003349e-06, 1.457999999999321e-06, 1.5970000000024853e-06, 1.9449999999997247e-06, 1.4029999999970455e-06, 1.5000000000015001e-06, 1.930000000000681e-06, 1.4719999999988909e-06, 1.76400000000132e-06, 1.5000000000015001e-06, 1.901999999998072e-06, 1.832999999999696e-06, 1.4170000000000849e-06]</msg>
<status status="PASS" starttime="20201112 12:41:50.124" endtime="20201112 12:41:50.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.119" endtime="20201112 12:41:50.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.128" endtime="20201112 12:41:50.129"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.132" endtime="20201112 12:41:50.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.130" endtime="20201112 12:41:50.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.127" endtime="20201112 12:41:50.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:49.767" endtime="20201112 12:41:50.152"></status>
</kw>
<msg timestamp="20201112 12:41:50.152" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.161" endtime="20201112 12:41:50.170"></status>
</kw>
<msg timestamp="20201112 12:41:50.170" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.159" endtime="20201112 12:41:50.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.171" endtime="20201112 12:41:50.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.174" endtime="20201112 12:41:50.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.156" endtime="20201112 12:41:50.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.154" endtime="20201112 12:41:50.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.183" endtime="20201112 12:41:50.447"></status>
</kw>
<msg timestamp="20201112 12:41:50.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019088681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.181" endtime="20201112 12:41:50.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019087181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019088681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.450" endtime="20201112 12:41:50.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.456" endtime="20201112 12:41:50.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.179" endtime="20201112 12:41:50.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.177" endtime="20201112 12:41:50.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.462" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:50.461" endtime="20201112 12:41:50.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.465" level="INFO">VALUE: [{'time': 0.019087181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019088681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019090347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.019092125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019093806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.019095722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.019097486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019099014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019100389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.019102264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019103764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019105556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.019107347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019109208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019110806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.019112444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.019113986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019115792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019117458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.019119333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019120833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019122639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019124167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019125778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019127375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019128792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.019130639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.019132319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.019133986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019135847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019137375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019139278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019140972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019142528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019144278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019146181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019148181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019149722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.019151486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.019152944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.019154417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.019155931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019157583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.019159472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019161069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019162986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019164764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019166208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019167903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019169653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:50.463" endtime="20201112 12:41:50.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.459" endtime="20201112 12:41:50.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:50.480" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.468" endtime="20201112 12:41:50.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.484" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:50.483" endtime="20201112 12:41:50.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.487" level="INFO">VALUE: {'sourceeventdiff': [0, 1.4999999999980307e-06, 1.6660000000008612e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.915999999997642e-06, 1.76400000000132e-06, 1.52800000000064e-06, 1.3749999999979057e-06, 1.8750000000018752e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.598000000001959e-06, 1.637999999998252e-06, 1.5420000000002099e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.8060000000000298e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.4170000000000849e-06, 1.8470000000027353e-06, 1.6799999999969617e-06, 1.6670000000003349e-06, 1.8610000000023053e-06, 1.52800000000064e-06, 1.9029999999975455e-06, 1.694000000000001e-06, 1.5559999999997798e-06, 1.7500000000017502e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.5410000000007362e-06, 1.7639999999978506e-06, 1.4580000000027904e-06, 1.4729999999983645e-06, 1.51400000000107e-06, 1.6519999999978219e-06, 1.889000000001445e-06, 1.5969999999990159e-06, 1.917000000000585e-06, 1.77800000000089e-06, 1.443999999999751e-06, 1.6949999999994747e-06, 1.7499999999982807e-06], 'source_diff': [0, 1.4999999999980307e-06, 1.6660000000008612e-06, 1.77800000000089e-06, 1.6809999999999048e-06, 1.915999999997642e-06, 1.76400000000132e-06, 1.52800000000064e-06, 1.3749999999979057e-06, 1.8750000000018752e-06, 1.4999999999980307e-06, 1.7920000000004599e-06, 1.7910000000009862e-06, 1.8609999999988358e-06, 1.598000000001959e-06, 1.637999999998252e-06, 1.5420000000002099e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.8060000000000298e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.5969999999990159e-06, 1.4170000000000849e-06, 1.8470000000027353e-06, 1.6799999999969617e-06, 1.6670000000003349e-06, 1.8610000000023053e-06, 1.52800000000064e-06, 1.9029999999975455e-06, 1.694000000000001e-06, 1.5559999999997798e-06, 1.7500000000017502e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.5410000000007362e-06, 1.7639999999978506e-06, 1.4580000000027904e-06, 1.4729999999983645e-06, 1.51400000000107e-06, 1.6519999999978219e-06, 1.889000000001445e-06, 1.5969999999990159e-06, 1.917000000000585e-06, 1.77800000000089e-06, 1.443999999999751e-06, 1.6949999999994747e-06, 1.7499999999982807e-06], 'time': [0.019087181, 0.019088681, 0.019090347, 0.019092125, 0.019093806, 0.019095722, 0.019097486, 0.019099014, 0.019100389, 0.019102264, 0.019103764, 0.019105556, 0.019107347, 0.019109208, 0.019110806, 0.019112444, 0.019113986, 0.019115792, 0.019117458, 0.019119333, 0.019120833, 0.019122639, 0.019124167, 0.019125778, 0.019127375, 0.019128792, 0.019130639, 0.019132319, 0.019133986, 0.019135847, 0.019137375, 0.019139278, 0.019140972, 0.019142528, 0.019144278, 0.019146181, 0.019148181, 0.019149722, 0.019151486, 0.019152944, 0.019154417, 0.019155931, 0.019157583, 0.019159472, 0.019161069, 0.019162986, 0.019164764, 0.019166208, 0.019167903, 0.019169653]}</msg>
<status status="PASS" starttime="20201112 12:41:50.485" endtime="20201112 12:41:50.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.481" endtime="20201112 12:41:50.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:50.492" level="INFO">${RESULT} = [{'time': 0.019088681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.019092125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:50.489" endtime="20201112 12:41:50.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:50.500" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.492" endtime="20201112 12:41:50.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.504" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:50.503" endtime="20201112 12:41:50.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.507" level="INFO">VALUE: [1.4999999999980307e-06, 1.77800000000089e-06, 1.915999999997642e-06, 1.52800000000064e-06, 1.8750000000018752e-06, 1.7920000000004599e-06, 1.8609999999988358e-06, 1.637999999998252e-06, 1.8060000000000298e-06, 1.8749999999984057e-06, 1.8060000000000298e-06, 1.6109999999985858e-06, 1.4170000000000849e-06, 1.6799999999969617e-06, 1.8610000000023053e-06, 1.9029999999975455e-06, 1.5559999999997798e-06, 1.903000000001015e-06, 1.5410000000007362e-06, 1.4580000000027904e-06, 1.51400000000107e-06, 1.889000000001445e-06, 1.917000000000585e-06, 1.443999999999751e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 12:41:50.505" endtime="20201112 12:41:50.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.501" endtime="20201112 12:41:50.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.510" endtime="20201112 12:41:50.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.513" endtime="20201112 12:41:50.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.512" endtime="20201112 12:41:50.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.508" endtime="20201112 12:41:50.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.153" endtime="20201112 12:41:50.534"></status>
</kw>
<msg timestamp="20201112 12:41:50.534" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.542" endtime="20201112 12:41:50.552"></status>
</kw>
<msg timestamp="20201112 12:41:50.552" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.541" endtime="20201112 12:41:50.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.555" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.553" endtime="20201112 12:41:50.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.556" endtime="20201112 12:41:50.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.538" endtime="20201112 12:41:50.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.536" endtime="20201112 12:41:50.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.564" endtime="20201112 12:41:50.833"></status>
</kw>
<msg timestamp="20201112 12:41:50.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018778764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018780306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.563" endtime="20201112 12:41:50.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018778764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018780306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.836" endtime="20201112 12:41:50.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.841" endtime="20201112 12:41:50.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.560" endtime="20201112 12:41:50.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.559" endtime="20201112 12:41:50.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.848" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:50.847" endtime="20201112 12:41:50.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.851" level="INFO">VALUE: [{'time': 0.018778764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018780306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018781792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018783542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018786806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018788278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018789694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018791167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.018792847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018794625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018796069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018797722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018799528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018801333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018803083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018804722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018806569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018808486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018810083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018811611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018813528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018815458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018817417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018819361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018821, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018822472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018824153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018826, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018827458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.01882925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018830903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018832736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018834694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018836292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018837764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018839389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018841333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9439999999967816e-06, 'source_diff': 1.9439999999967816e-06}, {'time': 0.018843083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018844611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018846528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018847944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.018849528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018851222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018852681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018854111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018855819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018857583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018859028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018860569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:50.849" endtime="20201112 12:41:50.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.845" endtime="20201112 12:41:50.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:50.867" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.854" endtime="20201112 12:41:50.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.871" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:50.870" endtime="20201112 12:41:50.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.874" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventdiff': [0, 1.5420000000002099e-06, 1.4859999999984608e-06, 1.7500000000017502e-06, 1.457999999999321e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.4160000000006112e-06, 1.473000000001834e-06, 1.6800000000004311e-06, 1.7779999999974205e-06, 1.443999999999751e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.6389999999977256e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.917000000000585e-06, 1.930000000000681e-06, 1.9589999999992946e-06, 1.944000000000251e-06, 1.639000000001195e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.846999999999266e-06, 1.457999999999321e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.832999999999696e-06, 1.957999999999821e-06, 1.598000000001959e-06, 1.4719999999988909e-06, 1.6250000000016251e-06, 1.9439999999967816e-06, 1.7500000000017502e-06, 1.52800000000064e-06, 1.917000000000585e-06, 1.4159999999971418e-06, 1.584000000002389e-06, 1.694000000000001e-06, 1.4589999999987946e-06, 1.4300000000001811e-06, 1.707999999999571e-06, 1.76400000000132e-06, 1.4449999999992247e-06, 1.5410000000007362e-06], 'source_diff': [0, 1.5420000000002099e-06, 1.4859999999984608e-06, 1.7500000000017502e-06, 1.457999999999321e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.4160000000006112e-06, 1.473000000001834e-06, 1.6800000000004311e-06, 1.7779999999974205e-06, 1.443999999999751e-06, 1.653000000000765e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.6389999999977256e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.917000000000585e-06, 1.930000000000681e-06, 1.9589999999992946e-06, 1.944000000000251e-06, 1.639000000001195e-06, 1.4719999999988909e-06, 1.6809999999999048e-06, 1.846999999999266e-06, 1.457999999999321e-06, 1.7920000000004599e-06, 1.653000000000765e-06, 1.832999999999696e-06, 1.957999999999821e-06, 1.598000000001959e-06, 1.4719999999988909e-06, 1.6250000000016251e-06, 1.9439999999967816e-06, 1.7500000000017502e-06, 1.52800000000064e-06, 1.917000000000585e-06, 1.4159999999971418e-06, 1.584000000002389e-06, 1.694000000000001e-06, 1.4589999999987946e-06, 1.4300000000001811e-06, 1.707999999999571e-06, 1.76400000000132e-06, 1.4449999999992247e-06, 1.5410000000007362e-06], 'time': [0.018778764, 0.018780306, 0.018781792, 0.018783542, 0.018785, 0.018786806, 0.018788278, 0.018789694, 0.018791167, 0.018792847, 0.018794625, 0.018796069, 0.018797722, 0.018799528, 0.018801333, 0.018803083, 0.018804722, 0.018806569, 0.018808486, 0.018810083, 0.018811611, 0.018813528, 0.018815458, 0.018817417, 0.018819361, 0.018821, 0.018822472, 0.018824153, 0.018826, 0.018827458, 0.01882925, 0.018830903, 0.018832736, 0.018834694, 0.018836292, 0.018837764, 0.018839389, 0.018841333, 0.018843083, 0.018844611, 0.018846528, 0.018847944, 0.018849528, 0.018851222, 0.018852681, 0.018854111, 0.018855819, 0.018857583, 0.018859028, 0.018860569]}</msg>
<status status="PASS" starttime="20201112 12:41:50.872" endtime="20201112 12:41:50.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.868" endtime="20201112 12:41:50.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:50.878" level="INFO">${RESULT} = [{'time': 0.018780306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018783542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:50.875" endtime="20201112 12:41:50.878"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:50.886" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:50.879" endtime="20201112 12:41:50.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.890" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:50.889" endtime="20201112 12:41:50.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.892" level="INFO">VALUE: [1.5420000000002099e-06, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.4160000000006112e-06, 1.6800000000004311e-06, 1.443999999999751e-06, 1.8060000000000298e-06, 1.7500000000017502e-06, 1.846999999999266e-06, 1.5969999999990159e-06, 1.917000000000585e-06, 1.9589999999992946e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.457999999999321e-06, 1.653000000000765e-06, 1.957999999999821e-06, 1.4719999999988909e-06, 1.9439999999967816e-06, 1.52800000000064e-06, 1.4159999999971418e-06, 1.694000000000001e-06, 1.4300000000001811e-06, 1.76400000000132e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201112 12:41:50.891" endtime="20201112 12:41:50.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.887" endtime="20201112 12:41:50.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.896" endtime="20201112 12:41:50.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:50.900" endtime="20201112 12:41:50.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.898" endtime="20201112 12:41:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.894" endtime="20201112 12:41:50.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.535" endtime="20201112 12:41:50.920"></status>
</kw>
<msg timestamp="20201112 12:41:50.921" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.928" endtime="20201112 12:41:50.937"></status>
</kw>
<msg timestamp="20201112 12:41:50.938" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.927" endtime="20201112 12:41:50.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:50.940" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:50.939" endtime="20201112 12:41:50.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.941" endtime="20201112 12:41:50.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.924" endtime="20201112 12:41:50.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.922" endtime="20201112 12:41:50.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:50.950" endtime="20201112 12:41:51.218"></status>
</kw>
<msg timestamp="20201112 12:41:51.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:50.948" endtime="20201112 12:41:51.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.221" endtime="20201112 12:41:51.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.226" endtime="20201112 12:41:51.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.946" endtime="20201112 12:41:51.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.944" endtime="20201112 12:41:51.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.233" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:51.232" endtime="20201112 12:41:51.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.236" level="INFO">VALUE: [{'time': 0.017986833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.017990472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.017992028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.017993861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.017995264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.017997097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.017998806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018000681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018002347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018003931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018005361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018006875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018008472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018010153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018011889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018013347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018015194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018017014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018018556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018020528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018022458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018024278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018026097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018027861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018029597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018031611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018033208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018034931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.018036417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018038111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018039806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018041667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018043056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018044458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.018046458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018048069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018049708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018051347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018053153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018054847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018056653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018058333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018060028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018061764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018063181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018064875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018066833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018068556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018070389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:51.234" endtime="20201112 12:41:51.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.230" endtime="20201112 12:41:51.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:51.251" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:51.239" endtime="20201112 12:41:51.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.255" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:51.254" endtime="20201112 12:41:51.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.258" level="INFO">VALUE: {'sourceeventdiff': [0, 1.9999999999985307e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.832999999999696e-06, 1.403000000000515e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 1.6659999999973918e-06, 1.584000000002389e-06, 1.4300000000001811e-06, 1.5139999999976006e-06, 1.5970000000024853e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.457999999999321e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.5420000000002099e-06, 1.971999999999391e-06, 1.930000000000681e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 2.0139999999981006e-06, 1.5969999999990159e-06, 1.723000000002084e-06, 1.4859999999984608e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.8610000000023053e-06, 1.3889999999974756e-06, 1.4020000000010413e-06, 2.000000000002e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.4170000000000849e-06, 1.694000000000001e-06, 1.957999999999821e-06, 1.7229999999986145e-06, 1.832999999999696e-06], 'source_diff': [0, 1.9999999999985307e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.832999999999696e-06, 1.403000000000515e-06, 1.832999999999696e-06, 1.7089999999990446e-06, 1.8750000000018752e-06, 1.6659999999973918e-06, 1.584000000002389e-06, 1.4300000000001811e-06, 1.5139999999976006e-06, 1.5970000000024853e-06, 1.6809999999999048e-06, 1.7359999999987108e-06, 1.457999999999321e-06, 1.8470000000027353e-06, 1.8199999999995997e-06, 1.5420000000002099e-06, 1.971999999999391e-06, 1.930000000000681e-06, 1.8199999999995997e-06, 1.819000000000126e-06, 1.7639999999978506e-06, 1.7360000000021802e-06, 2.0139999999981006e-06, 1.5969999999990159e-06, 1.723000000002084e-06, 1.4859999999984608e-06, 1.694000000000001e-06, 1.6949999999994747e-06, 1.8610000000023053e-06, 1.3889999999974756e-06, 1.4020000000010413e-06, 2.000000000002e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 1.8060000000000298e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.7360000000021802e-06, 1.4170000000000849e-06, 1.694000000000001e-06, 1.957999999999821e-06, 1.7229999999986145e-06, 1.832999999999696e-06], 'time': [0.017986833, 0.017988833, 0.017990472, 0.017992028, 0.017993861, 0.017995264, 0.017997097, 0.017998806, 0.018000681, 0.018002347, 0.018003931, 0.018005361, 0.018006875, 0.018008472, 0.018010153, 0.018011889, 0.018013347, 0.018015194, 0.018017014, 0.018018556, 0.018020528, 0.018022458, 0.018024278, 0.018026097, 0.018027861, 0.018029597, 0.018031611, 0.018033208, 0.018034931, 0.018036417, 0.018038111, 0.018039806, 0.018041667, 0.018043056, 0.018044458, 0.018046458, 0.018048069, 0.018049708, 0.018051347, 0.018053153, 0.018054847, 0.018056653, 0.018058333, 0.018060028, 0.018061764, 0.018063181, 0.018064875, 0.018066833, 0.018068556, 0.018070389]}</msg>
<status status="PASS" starttime="20201112 12:41:51.256" endtime="20201112 12:41:51.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.252" endtime="20201112 12:41:51.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:51.263" level="INFO">${RESULT} = [{'time': 0.017988833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.017992028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:51.260" endtime="20201112 12:41:51.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:51.271" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:51.263" endtime="20201112 12:41:51.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.275" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:51.274" endtime="20201112 12:41:51.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.277" level="INFO">VALUE: [1.9999999999985307e-06, 1.5559999999997798e-06, 1.403000000000515e-06, 1.7089999999990446e-06, 1.6659999999973918e-06, 1.4300000000001811e-06, 1.5970000000024853e-06, 1.7359999999987108e-06, 1.8470000000027353e-06, 1.5420000000002099e-06, 1.930000000000681e-06, 1.819000000000126e-06, 1.7360000000021802e-06, 1.5969999999990159e-06, 1.4859999999984608e-06, 1.6949999999994747e-06, 1.3889999999974756e-06, 2.000000000002e-06, 1.639000000001195e-06, 1.8060000000000298e-06, 1.8060000000000298e-06, 1.6949999999994747e-06, 1.4170000000000849e-06, 1.957999999999821e-06, 1.832999999999696e-06]</msg>
<status status="PASS" starttime="20201112 12:41:51.276" endtime="20201112 12:41:51.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.272" endtime="20201112 12:41:51.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.280" endtime="20201112 12:41:51.282"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:51.284" endtime="20201112 12:41:51.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.282" endtime="20201112 12:41:51.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.279" endtime="20201112 12:41:51.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:50.921" endtime="20201112 12:41:51.304"></status>
</kw>
<msg timestamp="20201112 12:41:51.305" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.312" endtime="20201112 12:41:51.322"></status>
</kw>
<msg timestamp="20201112 12:41:51.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.311" endtime="20201112 12:41:51.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.325" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.323" endtime="20201112 12:41:51.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.326" endtime="20201112 12:41:51.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.308" endtime="20201112 12:41:51.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.306" endtime="20201112 12:41:51.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.335" endtime="20201112 12:41:51.603"></status>
</kw>
<msg timestamp="20201112 12:41:51.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018106694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018108333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.333" endtime="20201112 12:41:51.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018106694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018108333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.606" endtime="20201112 12:41:51.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.611" endtime="20201112 12:41:51.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.331" endtime="20201112 12:41:51.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.329" endtime="20201112 12:41:51.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.618" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:51.617" endtime="20201112 12:41:51.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.621" level="INFO">VALUE: [{'time': 0.018106694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018108333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018110014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018112028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018113597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018115236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018116639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018118403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018120361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018122167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018123889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018125681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018127264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018129236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018130736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018132194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018133667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018135181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018136694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.512999999998127e-06, 'source_diff': 1.512999999998127e-06}, {'time': 0.018138278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018139931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018141875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9439999999967816e-06, 'source_diff': 1.9439999999967816e-06}, {'time': 0.018143292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018144986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018146847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018148653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018150486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018152069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.0181535, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018155472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018157389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018159125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018160694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018162181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4869999999979344e-06, 'source_diff': 1.4869999999979344e-06}, {'time': 0.018163667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018165403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018167319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018168792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018172569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.0181745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018176194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018178014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018179542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018181236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018183181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018184833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018186597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018189972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:51.619" endtime="20201112 12:41:51.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.614" endtime="20201112 12:41:51.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:51.637" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:51.624" endtime="20201112 12:41:51.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.641" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:51.640" endtime="20201112 12:41:51.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.644" level="INFO">VALUE: {'sourceeventdiff': [0, 1.639000000001195e-06, 1.6809999999999048e-06, 2.0139999999981006e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.403000000000515e-06, 1.76400000000132e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.582999999999446e-06, 1.971999999999391e-06, 1.5000000000015001e-06, 1.457999999999321e-06, 1.4729999999983645e-06, 1.51400000000107e-06, 1.512999999998127e-06, 1.584000000002389e-06, 1.653000000000765e-06, 1.9439999999967816e-06, 1.4170000000000849e-06, 1.694000000000001e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.582999999999446e-06, 1.4309999999996548e-06, 1.971999999999391e-06, 1.917000000000585e-06, 1.7360000000021802e-06, 1.568999999999876e-06, 1.4869999999979344e-06, 1.4860000000019302e-06, 1.7359999999987108e-06, 1.9160000000011113e-06, 1.4729999999983645e-06, 1.846999999999266e-06, 1.930000000000681e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.8199999999995997e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.9449999999997247e-06, 1.6520000000012913e-06, 1.7639999999978506e-06, 1.4309999999996548e-06, 1.944000000000251e-06], 'source_diff': [0, 1.639000000001195e-06, 1.6809999999999048e-06, 2.0139999999981006e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.403000000000515e-06, 1.76400000000132e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.582999999999446e-06, 1.971999999999391e-06, 1.5000000000015001e-06, 1.457999999999321e-06, 1.4729999999983645e-06, 1.51400000000107e-06, 1.512999999998127e-06, 1.584000000002389e-06, 1.653000000000765e-06, 1.9439999999967816e-06, 1.4170000000000849e-06, 1.694000000000001e-06, 1.8610000000023053e-06, 1.8060000000000298e-06, 1.832999999999696e-06, 1.582999999999446e-06, 1.4309999999996548e-06, 1.971999999999391e-06, 1.917000000000585e-06, 1.7360000000021802e-06, 1.568999999999876e-06, 1.4869999999979344e-06, 1.4860000000019302e-06, 1.7359999999987108e-06, 1.9160000000011113e-06, 1.4729999999983645e-06, 1.846999999999266e-06, 1.930000000000681e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.8199999999995997e-06, 1.52800000000064e-06, 1.694000000000001e-06, 1.9449999999997247e-06, 1.6520000000012913e-06, 1.7639999999978506e-06, 1.4309999999996548e-06, 1.944000000000251e-06], 'time': [0.018106694, 0.018108333, 0.018110014, 0.018112028, 0.018113597, 0.018115236, 0.018116639, 0.018118403, 0.018120361, 0.018122167, 0.018123889, 0.018125681, 0.018127264, 0.018129236, 0.018130736, 0.018132194, 0.018133667, 0.018135181, 0.018136694, 0.018138278, 0.018139931, 0.018141875, 0.018143292, 0.018144986, 0.018146847, 0.018148653, 0.018150486, 0.018152069, 0.0181535, 0.018155472, 0.018157389, 0.018159125, 0.018160694, 0.018162181, 0.018163667, 0.018165403, 0.018167319, 0.018168792, 0.018170639, 0.018172569, 0.0181745, 0.018176194, 0.018178014, 0.018179542, 0.018181236, 0.018183181, 0.018184833, 0.018186597, 0.018188028, 0.018189972]}</msg>
<status status="PASS" starttime="20201112 12:41:51.642" endtime="20201112 12:41:51.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.638" endtime="20201112 12:41:51.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:51.648" level="INFO">${RESULT} = [{'time': 0.018108333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018112028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:51.646" endtime="20201112 12:41:51.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:51.656" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:51.649" endtime="20201112 12:41:51.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.660" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:51.659" endtime="20201112 12:41:51.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.663" level="INFO">VALUE: [1.639000000001195e-06, 2.0139999999981006e-06, 1.639000000001195e-06, 1.76400000000132e-06, 1.8060000000000298e-06, 1.7920000000004599e-06, 1.971999999999391e-06, 1.457999999999321e-06, 1.51400000000107e-06, 1.584000000002389e-06, 1.9439999999967816e-06, 1.694000000000001e-06, 1.8060000000000298e-06, 1.582999999999446e-06, 1.971999999999391e-06, 1.7360000000021802e-06, 1.4869999999979344e-06, 1.7359999999987108e-06, 1.4729999999983645e-06, 1.930000000000681e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.9449999999997247e-06, 1.7639999999978506e-06, 1.944000000000251e-06]</msg>
<status status="PASS" starttime="20201112 12:41:51.661" endtime="20201112 12:41:51.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.657" endtime="20201112 12:41:51.664"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.666" endtime="20201112 12:41:51.667"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:51.669" endtime="20201112 12:41:51.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.668" endtime="20201112 12:41:51.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.665" endtime="20201112 12:41:51.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.305" endtime="20201112 12:41:51.690"></status>
</kw>
<msg timestamp="20201112 12:41:51.690" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.698" endtime="20201112 12:41:51.707"></status>
</kw>
<msg timestamp="20201112 12:41:51.707" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.696" endtime="20201112 12:41:51.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.710" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:51.708" endtime="20201112 12:41:51.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.711" endtime="20201112 12:41:51.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.694" endtime="20201112 12:41:51.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.692" endtime="20201112 12:41:51.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.720" endtime="20201112 12:41:51.984"></status>
</kw>
<msg timestamp="20201112 12:41:51.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.718" endtime="20201112 12:41:51.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018168931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:51.987" endtime="20201112 12:41:51.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:51.992" endtime="20201112 12:41:51.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.716" endtime="20201112 12:41:51.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.714" endtime="20201112 12:41:51.995"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:51.999" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:51.998" endtime="20201112 12:41:51.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.002" level="INFO">VALUE: [{'time': 0.018168931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018170333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.018172597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.018174139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018175986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018177694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018179361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018181236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018183181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018185083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018186556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018188069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5130000000015964e-06, 'source_diff': 1.5130000000015964e-06}, {'time': 0.018189764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.01819125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018194653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.0181965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018198347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.01819975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018201528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018203333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.018204819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018206306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4869999999979344e-06, 'source_diff': 1.4869999999979344e-06}, {'time': 0.018207764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018209375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018211014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018212569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018213958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018216111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018217611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.0182195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018221389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018223361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.01822525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018227208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9580000000032904e-06, 'source_diff': 1.9580000000032904e-06}, {'time': 0.018228708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018230125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018231875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018233375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018234764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018236319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018237972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018239889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018241542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018243014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018244653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018246236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018248, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018249708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018251278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:52.000" endtime="20201112 12:41:52.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.996" endtime="20201112 12:41:52.004"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:52.017" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.005" endtime="20201112 12:41:52.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.021" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:52.020" endtime="20201112 12:41:52.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.024" level="INFO">VALUE: {'sourceeventdiff': [0, 1.4020000000010413e-06, 2.2639999999983507e-06, 1.5420000000002099e-06, 1.8470000000027353e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.8749999999984057e-06, 1.9449999999997247e-06, 1.9020000000015413e-06, 1.4729999999983645e-06, 1.5130000000015964e-06, 1.6949999999994747e-06, 1.4859999999984608e-06, 1.846999999999266e-06, 1.5560000000032492e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.403000000000515e-06, 1.77800000000089e-06, 1.8049999999970867e-06, 1.4860000000019302e-06, 1.4869999999979344e-06, 1.4580000000027904e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.5550000000003061e-06, 1.3889999999974756e-06, 2.153000000001265e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.971999999999391e-06, 1.8889999999979756e-06, 1.9580000000032904e-06, 1.4999999999980307e-06, 1.4170000000000849e-06, 1.7500000000017502e-06, 1.4999999999980307e-06, 1.389000000000945e-06, 1.5550000000003061e-06, 1.653000000000765e-06, 1.9169999999971155e-06, 1.653000000000765e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.5699999999993497e-06], 'source_diff': [0, 1.4020000000010413e-06, 2.2639999999983507e-06, 1.5420000000002099e-06, 1.8470000000027353e-06, 1.707999999999571e-06, 1.6670000000003349e-06, 1.8749999999984057e-06, 1.9449999999997247e-06, 1.9020000000015413e-06, 1.4729999999983645e-06, 1.5130000000015964e-06, 1.6949999999994747e-06, 1.4859999999984608e-06, 1.846999999999266e-06, 1.5560000000032492e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.403000000000515e-06, 1.77800000000089e-06, 1.8049999999970867e-06, 1.4860000000019302e-06, 1.4869999999979344e-06, 1.4580000000027904e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.5550000000003061e-06, 1.3889999999974756e-06, 2.153000000001265e-06, 1.5000000000015001e-06, 1.8889999999979756e-06, 1.889000000001445e-06, 1.971999999999391e-06, 1.8889999999979756e-06, 1.9580000000032904e-06, 1.4999999999980307e-06, 1.4170000000000849e-06, 1.7500000000017502e-06, 1.4999999999980307e-06, 1.389000000000945e-06, 1.5550000000003061e-06, 1.653000000000765e-06, 1.9169999999971155e-06, 1.653000000000765e-06, 1.4719999999988909e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.5699999999993497e-06], 'time': [0.018168931, 0.018170333, 0.018172597, 0.018174139, 0.018175986, 0.018177694, 0.018179361, 0.018181236, 0.018183181, 0.018185083, 0.018186556, 0.018188069, 0.018189764, 0.01819125, 0.018193097, 0.018194653, 0.0181965, 0.018198347, 0.01819975, 0.018201528, 0.018203333, 0.018204819, 0.018206306, 0.018207764, 0.018209375, 0.018211014, 0.018212569, 0.018213958, 0.018216111, 0.018217611, 0.0182195, 0.018221389, 0.018223361, 0.01822525, 0.018227208, 0.018228708, 0.018230125, 0.018231875, 0.018233375, 0.018234764, 0.018236319, 0.018237972, 0.018239889, 0.018241542, 0.018243014, 0.018244653, 0.018246236, 0.018248, 0.018249708, 0.018251278]}</msg>
<status status="PASS" starttime="20201112 12:41:52.022" endtime="20201112 12:41:52.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.018" endtime="20201112 12:41:52.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.028" level="INFO">${RESULT} = [{'time': 0.018170333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.018174139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:52.026" endtime="20201112 12:41:52.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:52.036" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.029" endtime="20201112 12:41:52.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.040" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:52.039" endtime="20201112 12:41:52.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.042" level="INFO">VALUE: [1.4020000000010413e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.8749999999984057e-06, 1.9020000000015413e-06, 1.5130000000015964e-06, 1.4859999999984608e-06, 1.5560000000032492e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.4860000000019302e-06, 1.4580000000027904e-06, 1.639000000001195e-06, 1.3889999999974756e-06, 1.5000000000015001e-06, 1.889000000001445e-06, 1.8889999999979756e-06, 1.4999999999980307e-06, 1.7500000000017502e-06, 1.389000000000945e-06, 1.653000000000765e-06, 1.653000000000765e-06, 1.639000000001195e-06, 1.76400000000132e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201112 12:41:52.041" endtime="20201112 12:41:52.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.037" endtime="20201112 12:41:52.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.046" endtime="20201112 12:41:52.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.049" endtime="20201112 12:41:52.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.048" endtime="20201112 12:41:52.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.044" endtime="20201112 12:41:52.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:51.691" endtime="20201112 12:41:52.070"></status>
</kw>
<msg timestamp="20201112 12:41:52.070" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.078" endtime="20201112 12:41:52.087"></status>
</kw>
<msg timestamp="20201112 12:41:52.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.076" endtime="20201112 12:41:52.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.090" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.089" endtime="20201112 12:41:52.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.091" endtime="20201112 12:41:52.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.073" endtime="20201112 12:41:52.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.072" endtime="20201112 12:41:52.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.101" endtime="20201112 12:41:52.369"></status>
</kw>
<msg timestamp="20201112 12:41:52.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018086861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.099" endtime="20201112 12:41:52.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018086861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.372" endtime="20201112 12:41:52.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.377" endtime="20201112 12:41:52.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.096" endtime="20201112 12:41:52.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.094" endtime="20201112 12:41:52.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.384" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:52.383" endtime="20201112 12:41:52.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.387" level="INFO">VALUE: [{'time': 0.018085361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018086861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.0180885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018090097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.01809175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018093278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018095028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018096597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018098319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018100028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018102014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018103458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018105194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018106667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018108361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018109806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018111625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018113153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018114792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018116472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018118292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018120208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018121653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.018123528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018125292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018127153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018128625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018130167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018131681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018133097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.01813475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018136694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9439999999967816e-06, 'source_diff': 1.9439999999967816e-06}, {'time': 0.018138236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018139764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018141569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018143417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018146611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018148153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018150139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018152014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018153792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018155208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018156569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.018158639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.018160556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018162444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.887999999998502e-06, 'source_diff': 1.887999999998502e-06}, {'time': 0.018164208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018165736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018167458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:52.385" endtime="20201112 12:41:52.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.381" endtime="20201112 12:41:52.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:52.402" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.390" endtime="20201112 12:41:52.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.406" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:52.405" endtime="20201112 12:41:52.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.409" level="INFO">VALUE: {'sourceeventdiff': [0, 1.4999999999980307e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.568999999999876e-06, 1.7220000000026103e-06, 1.7089999999990446e-06, 1.985999999998961e-06, 1.443999999999751e-06, 1.7360000000021802e-06, 1.4729999999983645e-06, 1.694000000000001e-06, 1.4449999999992247e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.4450000000026941e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8609999999988358e-06, 1.4719999999988909e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.4160000000006112e-06, 1.653000000000765e-06, 1.9439999999967816e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.8479999999987395e-06, 1.5830000000029154e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.985999999998961e-06, 1.8750000000018752e-06, 1.7779999999974205e-06, 1.4160000000006112e-06, 1.3610000000018052e-06, 2.0699999999998497e-06, 1.917000000000585e-06, 1.887999999998502e-06, 1.76400000000132e-06, 1.5279999999971705e-06, 1.7220000000026103e-06], 'source_diff': [0, 1.4999999999980307e-06, 1.639000000001195e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.568999999999876e-06, 1.7220000000026103e-06, 1.7089999999990446e-06, 1.985999999998961e-06, 1.443999999999751e-06, 1.7360000000021802e-06, 1.4729999999983645e-06, 1.694000000000001e-06, 1.4449999999992247e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.639000000001195e-06, 1.6800000000004311e-06, 1.8199999999995997e-06, 1.915999999997642e-06, 1.4450000000026941e-06, 1.8749999999984057e-06, 1.76400000000132e-06, 1.8609999999988358e-06, 1.4719999999988909e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.4160000000006112e-06, 1.653000000000765e-06, 1.9439999999967816e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.8050000000005562e-06, 1.8479999999987395e-06, 1.5830000000029154e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.985999999998961e-06, 1.8750000000018752e-06, 1.7779999999974205e-06, 1.4160000000006112e-06, 1.3610000000018052e-06, 2.0699999999998497e-06, 1.917000000000585e-06, 1.887999999998502e-06, 1.76400000000132e-06, 1.5279999999971705e-06, 1.7220000000026103e-06], 'time': [0.018085361, 0.018086861, 0.0180885, 0.018090097, 0.01809175, 0.018093278, 0.018095028, 0.018096597, 0.018098319, 0.018100028, 0.018102014, 0.018103458, 0.018105194, 0.018106667, 0.018108361, 0.018109806, 0.018111625, 0.018113153, 0.018114792, 0.018116472, 0.018118292, 0.018120208, 0.018121653, 0.018123528, 0.018125292, 0.018127153, 0.018128625, 0.018130167, 0.018131681, 0.018133097, 0.01813475, 0.018136694, 0.018138236, 0.018139764, 0.018141569, 0.018143417, 0.018145, 0.018146611, 0.018148153, 0.018150139, 0.018152014, 0.018153792, 0.018155208, 0.018156569, 0.018158639, 0.018160556, 0.018162444, 0.018164208, 0.018165736, 0.018167458]}</msg>
<status status="PASS" starttime="20201112 12:41:52.407" endtime="20201112 12:41:52.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.403" endtime="20201112 12:41:52.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.413" level="INFO">${RESULT} = [{'time': 0.018086861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018090097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:52.411" endtime="20201112 12:41:52.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:52.421" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.414" endtime="20201112 12:41:52.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.426" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:52.424" endtime="20201112 12:41:52.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.428" level="INFO">VALUE: [1.4999999999980307e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.7089999999990446e-06, 1.443999999999751e-06, 1.4729999999983645e-06, 1.4449999999992247e-06, 1.52800000000064e-06, 1.6800000000004311e-06, 1.915999999997642e-06, 1.8749999999984057e-06, 1.8609999999988358e-06, 1.5420000000002099e-06, 1.4160000000006112e-06, 1.9439999999967816e-06, 1.52800000000064e-06, 1.8479999999987395e-06, 1.6109999999985858e-06, 1.985999999998961e-06, 1.7779999999974205e-06, 1.3610000000018052e-06, 1.917000000000585e-06, 1.76400000000132e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201112 12:41:52.427" endtime="20201112 12:41:52.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.422" endtime="20201112 12:41:52.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.431" endtime="20201112 12:41:52.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.434" endtime="20201112 12:41:52.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.433" endtime="20201112 12:41:52.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.429" endtime="20201112 12:41:52.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.071" endtime="20201112 12:41:52.455"></status>
</kw>
<msg timestamp="20201112 12:41:52.455" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.463" endtime="20201112 12:41:52.472"></status>
</kw>
<msg timestamp="20201112 12:41:52.473" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.461" endtime="20201112 12:41:52.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.475" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.474" endtime="20201112 12:41:52.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.476" endtime="20201112 12:41:52.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.459" endtime="20201112 12:41:52.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.457" endtime="20201112 12:41:52.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.486" endtime="20201112 12:41:52.753"></status>
</kw>
<msg timestamp="20201112 12:41:52.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018141111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018142958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.485" endtime="20201112 12:41:52.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018141111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018142958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.755" endtime="20201112 12:41:52.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.761" endtime="20201112 12:41:52.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.482" endtime="20201112 12:41:52.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.480" endtime="20201112 12:41:52.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.767" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:52.766" endtime="20201112 12:41:52.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.771" level="INFO">VALUE: [{'time': 0.018141111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018142958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018144708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018146236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018147722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018149347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018150917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018152833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018154764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018156222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018157806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018159542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018161181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018162764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018164208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018165667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018167236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018169083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018170944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018172819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018174319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018175889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018177389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018178986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018180736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018182361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018184278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018185778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018187708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018189611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018191222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018192889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018194708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018196111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018197694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018199319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018200722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018202861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.139000000001695e-06, 'source_diff': 2.139000000001695e-06}, {'time': 0.018204681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018206181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018207986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018209875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018211639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018213069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4299999999967117e-06, 'source_diff': 1.4299999999967117e-06}, {'time': 0.018214833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018216694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018218583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.01822025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018221861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018223556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:52.768" endtime="20201112 12:41:52.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.764" endtime="20201112 12:41:52.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:52.787" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.773" endtime="20201112 12:41:52.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.791" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:52.790" endtime="20201112 12:41:52.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.794" level="INFO">VALUE: {'sourceeventdiff': [0, 1.846999999999266e-06, 1.7499999999982807e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.9160000000011113e-06, 1.931000000000155e-06, 1.457999999999321e-06, 1.5839999999989196e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.5830000000029154e-06, 1.443999999999751e-06, 1.4589999999987946e-06, 1.568999999999876e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.4999999999980307e-06, 1.5970000000024853e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.930000000000681e-06, 1.903000000001015e-06, 1.6109999999985858e-06, 1.6670000000003349e-06, 1.819000000000126e-06, 1.403000000000515e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.403000000000515e-06, 2.139000000001695e-06, 1.8199999999995997e-06, 1.4999999999980307e-06, 1.8050000000005562e-06, 1.889000000001445e-06, 1.76400000000132e-06, 1.4299999999967117e-06, 1.76400000000132e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.6949999999994747e-06], 'source_diff': [0, 1.846999999999266e-06, 1.7499999999982807e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.9160000000011113e-06, 1.931000000000155e-06, 1.457999999999321e-06, 1.5839999999989196e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.5830000000029154e-06, 1.443999999999751e-06, 1.4589999999987946e-06, 1.568999999999876e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.8749999999984057e-06, 1.5000000000015001e-06, 1.5699999999993497e-06, 1.4999999999980307e-06, 1.5970000000024853e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.930000000000681e-06, 1.903000000001015e-06, 1.6109999999985858e-06, 1.6670000000003349e-06, 1.819000000000126e-06, 1.403000000000515e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.403000000000515e-06, 2.139000000001695e-06, 1.8199999999995997e-06, 1.4999999999980307e-06, 1.8050000000005562e-06, 1.889000000001445e-06, 1.76400000000132e-06, 1.4299999999967117e-06, 1.76400000000132e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.6670000000003349e-06, 1.6109999999985858e-06, 1.6949999999994747e-06], 'time': [0.018141111, 0.018142958, 0.018144708, 0.018146236, 0.018147722, 0.018149347, 0.018150917, 0.018152833, 0.018154764, 0.018156222, 0.018157806, 0.018159542, 0.018161181, 0.018162764, 0.018164208, 0.018165667, 0.018167236, 0.018169083, 0.018170944, 0.018172819, 0.018174319, 0.018175889, 0.018177389, 0.018178986, 0.018180736, 0.018182361, 0.018184278, 0.018185778, 0.018187708, 0.018189611, 0.018191222, 0.018192889, 0.018194708, 0.018196111, 0.018197694, 0.018199319, 0.018200722, 0.018202861, 0.018204681, 0.018206181, 0.018207986, 0.018209875, 0.018211639, 0.018213069, 0.018214833, 0.018216694, 0.018218583, 0.01822025, 0.018221861, 0.018223556]}</msg>
<status status="PASS" starttime="20201112 12:41:52.792" endtime="20201112 12:41:52.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.788" endtime="20201112 12:41:52.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:52.799" level="INFO">${RESULT} = [{'time': 0.018142958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018146236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:52.796" endtime="20201112 12:41:52.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:52.806" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:52.800" endtime="20201112 12:41:52.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.811" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:52.810" endtime="20201112 12:41:52.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.813" level="INFO">VALUE: [1.846999999999266e-06, 1.52800000000064e-06, 1.6249999999981557e-06, 1.9160000000011113e-06, 1.457999999999321e-06, 1.7360000000021802e-06, 1.5830000000029154e-06, 1.4589999999987946e-06, 1.846999999999266e-06, 1.8749999999984057e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.903000000001015e-06, 1.6670000000003349e-06, 1.403000000000515e-06, 1.6249999999981557e-06, 2.139000000001695e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.4299999999967117e-06, 1.8609999999988358e-06, 1.6670000000003349e-06, 1.6949999999994747e-06]</msg>
<status status="PASS" starttime="20201112 12:41:52.812" endtime="20201112 12:41:52.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.807" endtime="20201112 12:41:52.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.816" endtime="20201112 12:41:52.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:52.820" endtime="20201112 12:41:52.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.818" endtime="20201112 12:41:52.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.815" endtime="20201112 12:41:52.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.456" endtime="20201112 12:41:52.840"></status>
</kw>
<msg timestamp="20201112 12:41:52.840" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.849" endtime="20201112 12:41:52.858"></status>
</kw>
<msg timestamp="20201112 12:41:52.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.847" endtime="20201112 12:41:52.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:52.861" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:52.859" endtime="20201112 12:41:52.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.862" endtime="20201112 12:41:52.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.844" endtime="20201112 12:41:52.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.842" endtime="20201112 12:41:52.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:52.870" endtime="20201112 12:41:53.139"></status>
</kw>
<msg timestamp="20201112 12:41:53.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018854597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:52.869" endtime="20201112 12:41:53.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018852847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018854597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.142" endtime="20201112 12:41:53.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.147" endtime="20201112 12:41:53.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.866" endtime="20201112 12:41:53.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.865" endtime="20201112 12:41:53.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.154" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:53.153" endtime="20201112 12:41:53.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.157" level="INFO">VALUE: [{'time': 0.018852847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018854597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018856403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018858222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018860125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018861611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018863597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018865278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018866833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018868681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.018870417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018872083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018873639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018875667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018877569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018879472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018881, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018882667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018884139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018885597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018887208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018889153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018890667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018892431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018894, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018895556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018897292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018899069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018900597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018902264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.018903958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018905569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018907125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018908597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018910153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018911958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018913764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018915472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018917069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018919, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9309999999966854e-06, 'source_diff': 1.9309999999966854e-06}, {'time': 0.018920681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.018922292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018924056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018925542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018927528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018929472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018931069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018932861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018934264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.01893575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:53.155" endtime="20201112 12:41:53.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.150" endtime="20201112 12:41:53.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:53.172" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.160" endtime="20201112 12:41:53.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.176" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:53.175" endtime="20201112 12:41:53.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.179" level="INFO">VALUE: {'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'diff': [0, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.4860000000019302e-06, 1.985999999998961e-06, 1.6809999999999048e-06, 1.5550000000003061e-06, 1.848000000002209e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.5559999999997798e-06, 2.0279999999976706e-06, 1.9020000000015413e-06, 1.903000000001015e-06, 1.5279999999971705e-06, 1.6670000000003349e-06, 1.4720000000023603e-06, 1.457999999999321e-06, 1.6109999999985858e-06, 1.9449999999997247e-06, 1.51400000000107e-06, 1.76400000000132e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.52800000000064e-06, 1.6669999999968654e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.5559999999997798e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.8050000000005562e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.5970000000024853e-06, 1.9309999999966854e-06, 1.6810000000033742e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.4859999999984608e-06, 1.985999999998961e-06, 1.944000000000251e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.403000000000515e-06, 1.4860000000019302e-06], 'source_diff': [0, 1.7500000000017502e-06, 1.8060000000000298e-06, 1.819000000000126e-06, 1.9029999999975455e-06, 1.4860000000019302e-06, 1.985999999998961e-06, 1.6809999999999048e-06, 1.5550000000003061e-06, 1.848000000002209e-06, 1.7359999999987108e-06, 1.6660000000008612e-06, 1.5559999999997798e-06, 2.0279999999976706e-06, 1.9020000000015413e-06, 1.903000000001015e-06, 1.5279999999971705e-06, 1.6670000000003349e-06, 1.4720000000023603e-06, 1.457999999999321e-06, 1.6109999999985858e-06, 1.9449999999997247e-06, 1.51400000000107e-06, 1.76400000000132e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.7359999999987108e-06, 1.7770000000014163e-06, 1.52800000000064e-06, 1.6669999999968654e-06, 1.694000000000001e-06, 1.6110000000020552e-06, 1.5559999999997798e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.8050000000005562e-06, 1.8060000000000298e-06, 1.707999999999571e-06, 1.5970000000024853e-06, 1.9309999999966854e-06, 1.6810000000033742e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.4859999999984608e-06, 1.985999999998961e-06, 1.944000000000251e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.403000000000515e-06, 1.4860000000019302e-06], 'time': [0.018852847, 0.018854597, 0.018856403, 0.018858222, 0.018860125, 0.018861611, 0.018863597, 0.018865278, 0.018866833, 0.018868681, 0.018870417, 0.018872083, 0.018873639, 0.018875667, 0.018877569, 0.018879472, 0.018881, 0.018882667, 0.018884139, 0.018885597, 0.018887208, 0.018889153, 0.018890667, 0.018892431, 0.018894, 0.018895556, 0.018897292, 0.018899069, 0.018900597, 0.018902264, 0.018903958, 0.018905569, 0.018907125, 0.018908597, 0.018910153, 0.018911958, 0.018913764, 0.018915472, 0.018917069, 0.018919, 0.018920681, 0.018922292, 0.018924056, 0.018925542, 0.018927528, 0.018929472, 0.018931069, 0.018932861, 0.018934264, 0.01893575]}</msg>
<status status="PASS" starttime="20201112 12:41:53.177" endtime="20201112 12:41:53.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.173" endtime="20201112 12:41:53.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.183" level="INFO">${RESULT} = [{'time': 0.018854597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018858222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:53.181" endtime="20201112 12:41:53.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:53.191" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.184" endtime="20201112 12:41:53.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.196" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:53.195" endtime="20201112 12:41:53.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.198" level="INFO">VALUE: [1.7500000000017502e-06, 1.819000000000126e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.848000000002209e-06, 1.6660000000008612e-06, 2.0279999999976706e-06, 1.903000000001015e-06, 1.6670000000003349e-06, 1.457999999999321e-06, 1.9449999999997247e-06, 1.76400000000132e-06, 1.5559999999997798e-06, 1.7770000000014163e-06, 1.6669999999968654e-06, 1.6110000000020552e-06, 1.4719999999988909e-06, 1.8050000000005562e-06, 1.707999999999571e-06, 1.9309999999966854e-06, 1.6109999999985858e-06, 1.4859999999984608e-06, 1.944000000000251e-06, 1.7920000000004599e-06, 1.4860000000019302e-06]</msg>
<status status="PASS" starttime="20201112 12:41:53.197" endtime="20201112 12:41:53.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.192" endtime="20201112 12:41:53.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.201" endtime="20201112 12:41:53.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.205" endtime="20201112 12:41:53.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.203" endtime="20201112 12:41:53.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.200" endtime="20201112 12:41:53.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:52.841" endtime="20201112 12:41:53.226"></status>
</kw>
<msg timestamp="20201112 12:41:53.226" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.234" endtime="20201112 12:41:53.243"></status>
</kw>
<msg timestamp="20201112 12:41:53.243" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.232" endtime="20201112 12:41:53.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.246" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.244" endtime="20201112 12:41:53.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.247" endtime="20201112 12:41:53.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.230" endtime="20201112 12:41:53.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.228" endtime="20201112 12:41:53.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.255" endtime="20201112 12:41:53.524"></status>
</kw>
<msg timestamp="20201112 12:41:53.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018810944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.254" endtime="20201112 12:41:53.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018810944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.527" endtime="20201112 12:41:53.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.532" endtime="20201112 12:41:53.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.251" endtime="20201112 12:41:53.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.250" endtime="20201112 12:41:53.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.538" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:53.537" endtime="20201112 12:41:53.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.542" level="INFO">VALUE: [{'time': 0.018810944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018812417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.018814125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018815611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018817319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.01881925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018820861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018822306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018823806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018825417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018827153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018829167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018830833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018832292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018834083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018835931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018837597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018839528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018841347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018843097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018844667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018846333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018847931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018849667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018851347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.01885275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018854486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018855972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018857472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018859125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018860625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018862403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018864056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018865597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018867542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018869417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018871069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018873, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018874722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018876569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018878486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018880111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018882042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018883514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018885333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018887167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018888639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018890472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018892375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018894, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:53.539" endtime="20201112 12:41:53.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.535" endtime="20201112 12:41:53.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:53.557" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.544" endtime="20201112 12:41:53.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.561" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:53.560" endtime="20201112 12:41:53.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.564" level="INFO">VALUE: {'sourceeventdiff': [0, 1.473000000001834e-06, 1.707999999999571e-06, 1.4859999999984608e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.6110000000020552e-06, 1.4449999999992247e-06, 1.4999999999980307e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.6660000000008612e-06, 1.4589999999987946e-06, 1.7910000000009862e-06, 1.8479999999987395e-06, 1.6660000000008612e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.5699999999993497e-06, 1.6660000000008612e-06, 1.5979999999984895e-06, 1.7360000000021802e-06, 1.6800000000004311e-06, 1.403000000000515e-06, 1.7359999999987108e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.653000000000765e-06, 1.4999999999980307e-06, 1.77800000000089e-06, 1.653000000000765e-06, 1.5410000000007362e-06, 1.9449999999997247e-06, 1.8749999999984057e-06, 1.6520000000012913e-06, 1.931000000000155e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.6250000000016251e-06, 1.931000000000155e-06, 1.4719999999988909e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.4719999999988909e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.6250000000016251e-06], 'source_diff': [0, 1.473000000001834e-06, 1.707999999999571e-06, 1.4859999999984608e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.6110000000020552e-06, 1.4449999999992247e-06, 1.4999999999980307e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 2.01400000000157e-06, 1.6660000000008612e-06, 1.4589999999987946e-06, 1.7910000000009862e-06, 1.8479999999987395e-06, 1.6660000000008612e-06, 1.931000000000155e-06, 1.819000000000126e-06, 1.7499999999982807e-06, 1.5699999999993497e-06, 1.6660000000008612e-06, 1.5979999999984895e-06, 1.7360000000021802e-06, 1.6800000000004311e-06, 1.403000000000515e-06, 1.7359999999987108e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.653000000000765e-06, 1.4999999999980307e-06, 1.77800000000089e-06, 1.653000000000765e-06, 1.5410000000007362e-06, 1.9449999999997247e-06, 1.8749999999984057e-06, 1.6520000000012913e-06, 1.931000000000155e-06, 1.7219999999991409e-06, 1.846999999999266e-06, 1.917000000000585e-06, 1.6250000000016251e-06, 1.931000000000155e-06, 1.4719999999988909e-06, 1.819000000000126e-06, 1.8339999999991696e-06, 1.4719999999988909e-06, 1.832999999999696e-06, 1.903000000001015e-06, 1.6250000000016251e-06], 'time': [0.018810944, 0.018812417, 0.018814125, 0.018815611, 0.018817319, 0.01881925, 0.018820861, 0.018822306, 0.018823806, 0.018825417, 0.018827153, 0.018829167, 0.018830833, 0.018832292, 0.018834083, 0.018835931, 0.018837597, 0.018839528, 0.018841347, 0.018843097, 0.018844667, 0.018846333, 0.018847931, 0.018849667, 0.018851347, 0.01885275, 0.018854486, 0.018855972, 0.018857472, 0.018859125, 0.018860625, 0.018862403, 0.018864056, 0.018865597, 0.018867542, 0.018869417, 0.018871069, 0.018873, 0.018874722, 0.018876569, 0.018878486, 0.018880111, 0.018882042, 0.018883514, 0.018885333, 0.018887167, 0.018888639, 0.018890472, 0.018892375, 0.018894]}</msg>
<status status="PASS" starttime="20201112 12:41:53.562" endtime="20201112 12:41:53.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.558" endtime="20201112 12:41:53.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.568" level="INFO">${RESULT} = [{'time': 0.018812417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.473000000001834e-06, 'source_diff': 1.473000000001834e-06}, {'time': 0.018815611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:53.566" endtime="20201112 12:41:53.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:53.576" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.569" endtime="20201112 12:41:53.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.580" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:53.579" endtime="20201112 12:41:53.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.583" level="INFO">VALUE: [1.473000000001834e-06, 1.4859999999984608e-06, 1.931000000000155e-06, 1.4449999999992247e-06, 1.6110000000020552e-06, 2.01400000000157e-06, 1.4589999999987946e-06, 1.8479999999987395e-06, 1.931000000000155e-06, 1.7499999999982807e-06, 1.6660000000008612e-06, 1.7360000000021802e-06, 1.403000000000515e-06, 1.4859999999984608e-06, 1.653000000000765e-06, 1.77800000000089e-06, 1.5410000000007362e-06, 1.8749999999984057e-06, 1.931000000000155e-06, 1.846999999999266e-06, 1.6250000000016251e-06, 1.4719999999988909e-06, 1.8339999999991696e-06, 1.832999999999696e-06, 1.6250000000016251e-06]</msg>
<status status="PASS" starttime="20201112 12:41:53.581" endtime="20201112 12:41:53.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.577" endtime="20201112 12:41:53.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.586" endtime="20201112 12:41:53.587"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.589" endtime="20201112 12:41:53.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.588" endtime="20201112 12:41:53.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.584" endtime="20201112 12:41:53.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.227" endtime="20201112 12:41:53.610"></status>
</kw>
<msg timestamp="20201112 12:41:53.610" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.618" endtime="20201112 12:41:53.627"></status>
</kw>
<msg timestamp="20201112 12:41:53.628" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.616" endtime="20201112 12:41:53.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.630" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:53.629" endtime="20201112 12:41:53.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.631" endtime="20201112 12:41:53.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.614" endtime="20201112 12:41:53.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.612" endtime="20201112 12:41:53.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.640" endtime="20201112 12:41:53.906"></status>
</kw>
<msg timestamp="20201112 12:41:53.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.638" endtime="20201112 12:41:53.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:53.909" endtime="20201112 12:41:53.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.914" endtime="20201112 12:41:53.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.636" endtime="20201112 12:41:53.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.634" endtime="20201112 12:41:53.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.921" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:53.920" endtime="20201112 12:41:53.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.924" level="INFO">VALUE: [{'time': 0.018418542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018420389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018422014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018423764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018425292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018427278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018429042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018430875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018432361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018433917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018435764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018437319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018438736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018440681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018442208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018444194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018446181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.018448, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018449639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018451611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018453528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018455139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018456625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018458181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018459569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.387999999998002e-06, 'source_diff': 1.387999999998002e-06}, {'time': 0.018461486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018462889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018464653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018466403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018468208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018470111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018471806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018473375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018475125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018477042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018478653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018480486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018482222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018484083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018485722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.0184875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018489375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018491361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018492986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018494597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018496569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018498444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018499986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018501681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018503556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:53.922" endtime="20201112 12:41:53.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.918" endtime="20201112 12:41:53.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:53.940" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.927" endtime="20201112 12:41:53.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.944" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:53.943" endtime="20201112 12:41:53.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.947" level="INFO">VALUE: {'sourceeventdiff': [0, 1.846999999999266e-06, 1.6250000000016251e-06, 1.7499999999982807e-06, 1.52800000000064e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.832999999999696e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.846999999999266e-06, 1.5550000000003061e-06, 1.4170000000000849e-06, 1.9449999999997247e-06, 1.5270000000011663e-06, 1.985999999998961e-06, 1.9869999999984345e-06, 1.819000000000126e-06, 1.639000000001195e-06, 1.971999999999391e-06, 1.917000000000585e-06, 1.6109999999985858e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.387999999998002e-06, 1.917000000000585e-06, 1.403000000000515e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.903000000001015e-06, 1.6949999999994747e-06, 1.568999999999876e-06, 1.7499999999982807e-06, 1.917000000000585e-06, 1.6110000000020552e-06, 1.832999999999696e-06, 1.7359999999987108e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.9860000000024303e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.971999999999391e-06, 1.8749999999984057e-06, 1.5420000000002099e-06, 1.6949999999994747e-06, 1.8750000000018752e-06], 'source_diff': [0, 1.846999999999266e-06, 1.6250000000016251e-06, 1.7499999999982807e-06, 1.52800000000064e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.832999999999696e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.846999999999266e-06, 1.5550000000003061e-06, 1.4170000000000849e-06, 1.9449999999997247e-06, 1.5270000000011663e-06, 1.985999999998961e-06, 1.9869999999984345e-06, 1.819000000000126e-06, 1.639000000001195e-06, 1.971999999999391e-06, 1.917000000000585e-06, 1.6109999999985858e-06, 1.4860000000019302e-06, 1.5559999999997798e-06, 1.387999999998002e-06, 1.917000000000585e-06, 1.403000000000515e-06, 1.76400000000132e-06, 1.7499999999982807e-06, 1.8050000000005562e-06, 1.903000000001015e-06, 1.6949999999994747e-06, 1.568999999999876e-06, 1.7499999999982807e-06, 1.917000000000585e-06, 1.6110000000020552e-06, 1.832999999999696e-06, 1.7359999999987108e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.77800000000089e-06, 1.8749999999984057e-06, 1.9860000000024303e-06, 1.6249999999981557e-06, 1.6110000000020552e-06, 1.971999999999391e-06, 1.8749999999984057e-06, 1.5420000000002099e-06, 1.6949999999994747e-06, 1.8750000000018752e-06], 'time': [0.018418542, 0.018420389, 0.018422014, 0.018423764, 0.018425292, 0.018427278, 0.018429042, 0.018430875, 0.018432361, 0.018433917, 0.018435764, 0.018437319, 0.018438736, 0.018440681, 0.018442208, 0.018444194, 0.018446181, 0.018448, 0.018449639, 0.018451611, 0.018453528, 0.018455139, 0.018456625, 0.018458181, 0.018459569, 0.018461486, 0.018462889, 0.018464653, 0.018466403, 0.018468208, 0.018470111, 0.018471806, 0.018473375, 0.018475125, 0.018477042, 0.018478653, 0.018480486, 0.018482222, 0.018484083, 0.018485722, 0.0184875, 0.018489375, 0.018491361, 0.018492986, 0.018494597, 0.018496569, 0.018498444, 0.018499986, 0.018501681, 0.018503556]}</msg>
<status status="PASS" starttime="20201112 12:41:53.945" endtime="20201112 12:41:53.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.941" endtime="20201112 12:41:53.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:53.952" level="INFO">${RESULT} = [{'time': 0.018420389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018423764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:53.949" endtime="20201112 12:41:53.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:53.959" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:53.953" endtime="20201112 12:41:53.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.964" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:53.963" endtime="20201112 12:41:53.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.966" level="INFO">VALUE: [1.846999999999266e-06, 1.7499999999982807e-06, 1.985999999998961e-06, 1.832999999999696e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.9449999999997247e-06, 1.985999999998961e-06, 1.819000000000126e-06, 1.971999999999391e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.917000000000585e-06, 1.76400000000132e-06, 1.8050000000005562e-06, 1.6949999999994747e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.6249999999981557e-06, 1.971999999999391e-06, 1.5420000000002099e-06, 1.8750000000018752e-06]</msg>
<status status="PASS" starttime="20201112 12:41:53.965" endtime="20201112 12:41:53.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.960" endtime="20201112 12:41:53.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:53.969" endtime="20201112 12:41:53.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:53.973" endtime="20201112 12:41:53.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.971" endtime="20201112 12:41:53.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.968" endtime="20201112 12:41:53.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.611" endtime="20201112 12:41:53.993"></status>
</kw>
<msg timestamp="20201112 12:41:53.993" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.001" endtime="20201112 12:41:54.011"></status>
</kw>
<msg timestamp="20201112 12:41:54.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.000" endtime="20201112 12:41:54.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.013" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.012" endtime="20201112 12:41:54.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.015" endtime="20201112 12:41:54.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.997" endtime="20201112 12:41:54.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.995" endtime="20201112 12:41:54.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.023" endtime="20201112 12:41:54.288"></status>
</kw>
<msg timestamp="20201112 12:41:54.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01835925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:54.022" endtime="20201112 12:41:54.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01835925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:54.291" endtime="20201112 12:41:54.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.296" endtime="20201112 12:41:54.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.019" endtime="20201112 12:41:54.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.018" endtime="20201112 12:41:54.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.303" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:54.302" endtime="20201112 12:41:54.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.307" level="INFO">VALUE: [{'time': 0.018357667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01835925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018362625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018364083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018365583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018367194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018368903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018370875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018372361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018374333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018376083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018377819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018379528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018381278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018382944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018384639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018386542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018388361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018390111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018392056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018393681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018395139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018397139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018398569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018400472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018402167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018403611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018405083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018406958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018408556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018410347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018412278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018414222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018416167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018417542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.018419139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018420889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.0184225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018424236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018426153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018428028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018429986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018431528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018433056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018434806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018436569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.762999999998377e-06, 'source_diff': 1.762999999998377e-06}, {'time': 0.018437986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018439694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018441528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:54.305" endtime="20201112 12:41:54.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.300" endtime="20201112 12:41:54.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:54.322" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:54.309" endtime="20201112 12:41:54.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.326" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:54.325" endtime="20201112 12:41:54.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.329" level="INFO">VALUE: {'sourceeventdiff': [0, 1.582999999999446e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.457999999999321e-06, 1.5000000000015001e-06, 1.6109999999985858e-06, 1.7089999999990446e-06, 1.971999999999391e-06, 1.4860000000019302e-06, 1.971999999999391e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.6659999999973918e-06, 1.6950000000029442e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.7500000000017502e-06, 1.9449999999997247e-06, 1.6249999999981557e-06, 1.4580000000027904e-06, 1.9999999999985307e-06, 1.4300000000001811e-06, 1.903000000001015e-06, 1.6949999999994747e-06, 1.443999999999751e-06, 1.4719999999988909e-06, 1.8750000000018752e-06, 1.5979999999984895e-06, 1.7910000000009862e-06, 1.931000000000155e-06, 1.944000000000251e-06, 1.9449999999997247e-06, 1.3749999999979057e-06, 1.5970000000024853e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.957999999999821e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.7500000000017502e-06, 1.762999999998377e-06, 1.4170000000000849e-06, 1.707999999999571e-06, 1.8339999999991696e-06], 'source_diff': [0, 1.582999999999446e-06, 1.7499999999982807e-06, 1.6250000000016251e-06, 1.457999999999321e-06, 1.5000000000015001e-06, 1.6109999999985858e-06, 1.7089999999990446e-06, 1.971999999999391e-06, 1.4860000000019302e-06, 1.971999999999391e-06, 1.7500000000017502e-06, 1.7359999999987108e-06, 1.7089999999990446e-06, 1.7500000000017502e-06, 1.6659999999973918e-06, 1.6950000000029442e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.7500000000017502e-06, 1.9449999999997247e-06, 1.6249999999981557e-06, 1.4580000000027904e-06, 1.9999999999985307e-06, 1.4300000000001811e-06, 1.903000000001015e-06, 1.6949999999994747e-06, 1.443999999999751e-06, 1.4719999999988909e-06, 1.8750000000018752e-06, 1.5979999999984895e-06, 1.7910000000009862e-06, 1.931000000000155e-06, 1.944000000000251e-06, 1.9449999999997247e-06, 1.3749999999979057e-06, 1.5970000000024853e-06, 1.7499999999982807e-06, 1.6110000000020552e-06, 1.7359999999987108e-06, 1.917000000000585e-06, 1.8749999999984057e-06, 1.957999999999821e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.7500000000017502e-06, 1.762999999998377e-06, 1.4170000000000849e-06, 1.707999999999571e-06, 1.8339999999991696e-06], 'time': [0.018357667, 0.01835925, 0.018361, 0.018362625, 0.018364083, 0.018365583, 0.018367194, 0.018368903, 0.018370875, 0.018372361, 0.018374333, 0.018376083, 0.018377819, 0.018379528, 0.018381278, 0.018382944, 0.018384639, 0.018386542, 0.018388361, 0.018390111, 0.018392056, 0.018393681, 0.018395139, 0.018397139, 0.018398569, 0.018400472, 0.018402167, 0.018403611, 0.018405083, 0.018406958, 0.018408556, 0.018410347, 0.018412278, 0.018414222, 0.018416167, 0.018417542, 0.018419139, 0.018420889, 0.0184225, 0.018424236, 0.018426153, 0.018428028, 0.018429986, 0.018431528, 0.018433056, 0.018434806, 0.018436569, 0.018437986, 0.018439694, 0.018441528]}</msg>
<status status="PASS" starttime="20201112 12:41:54.327" endtime="20201112 12:41:54.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.323" endtime="20201112 12:41:54.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:54.333" level="INFO">${RESULT} = [{'time': 0.01835925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018362625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:41:54.330" endtime="20201112 12:41:54.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:54.341" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:54.334" endtime="20201112 12:41:54.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.345" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:54.344" endtime="20201112 12:41:54.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.347" level="INFO">VALUE: [1.582999999999446e-06, 1.6250000000016251e-06, 1.5000000000015001e-06, 1.7089999999990446e-06, 1.4860000000019302e-06, 1.7500000000017502e-06, 1.7089999999990446e-06, 1.6659999999973918e-06, 1.9029999999975455e-06, 1.7500000000017502e-06, 1.6249999999981557e-06, 1.9999999999985307e-06, 1.903000000001015e-06, 1.443999999999751e-06, 1.8750000000018752e-06, 1.7910000000009862e-06, 1.944000000000251e-06, 1.3749999999979057e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.8749999999984057e-06, 1.5420000000002099e-06, 1.7500000000017502e-06, 1.4170000000000849e-06, 1.8339999999991696e-06]</msg>
<status status="PASS" starttime="20201112 12:41:54.346" endtime="20201112 12:41:54.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.342" endtime="20201112 12:41:54.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.351" endtime="20201112 12:41:54.352"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.354" endtime="20201112 12:41:54.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.352" endtime="20201112 12:41:54.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.349" endtime="20201112 12:41:54.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.994" endtime="20201112 12:41:54.375"></status>
</kw>
<msg timestamp="20201112 12:41:54.375" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.382" endtime="20201112 12:41:54.393"></status>
</kw>
<msg timestamp="20201112 12:41:54.393" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.381" endtime="20201112 12:41:54.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.396" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.394" endtime="20201112 12:41:54.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.397" endtime="20201112 12:41:54.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.378" endtime="20201112 12:41:54.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.377" endtime="20201112 12:41:54.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.406" endtime="20201112 12:41:54.671"></status>
</kw>
<msg timestamp="20201112 12:41:54.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.405" endtime="20201112 12:41:54.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018346625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.674" endtime="20201112 12:41:54.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.679" endtime="20201112 12:41:54.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.401" endtime="20201112 12:41:54.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.400" endtime="20201112 12:41:54.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.686" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:54.685" endtime="20201112 12:41:54.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.690" level="INFO">VALUE: [{'time': 0.018346625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018348069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.018349792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018351708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018353528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018355167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018356944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018358653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018360458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018362375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018363917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018365625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018367111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018368653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018370319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018371806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.018373208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4019999999975719e-06, 'source_diff': 1.4019999999975719e-06}, {'time': 0.018374764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018376347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018377944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018379569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018381236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018382792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.01838475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018386153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018388181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018390097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018391861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018393722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018395361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018396931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018398389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.018400389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018401889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018403667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018405389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018407069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018408708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018410528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018412319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018413931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018415528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018417181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018418694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.512999999998127e-06, 'source_diff': 1.512999999998127e-06}, {'time': 0.018420639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018422417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018424333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018425972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018427556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018429361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:54.687" endtime="20201112 12:41:54.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.683" endtime="20201112 12:41:54.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:54.705" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:54.692" endtime="20201112 12:41:54.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.708" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:54.707" endtime="20201112 12:41:54.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.712" level="INFO">VALUE: {'sourceeventdiff': [0, 1.4440000000032205e-06, 1.7229999999986145e-06, 1.9160000000011113e-06, 1.8199999999995997e-06, 1.6389999999977256e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.8050000000005562e-06, 1.917000000000585e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.4859999999984608e-06, 1.5420000000002099e-06, 1.6660000000008612e-06, 1.4870000000014039e-06, 1.4019999999975719e-06, 1.5559999999997798e-06, 1.5830000000029154e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.5559999999997798e-06, 1.957999999999821e-06, 1.403000000000515e-06, 2.02800000000114e-06, 1.9160000000011113e-06, 1.7639999999978506e-06, 1.8610000000023053e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.4580000000027904e-06, 1.9999999999985307e-06, 1.5000000000015001e-06, 1.7779999999974205e-06, 1.7220000000026103e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.6120000000015289e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.512999999998127e-06, 1.9449999999997247e-06, 1.77800000000089e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.584000000002389e-06, 1.8049999999970867e-06], 'source_diff': [0, 1.4440000000032205e-06, 1.7229999999986145e-06, 1.9160000000011113e-06, 1.8199999999995997e-06, 1.6389999999977256e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.8050000000005562e-06, 1.917000000000585e-06, 1.5420000000002099e-06, 1.707999999999571e-06, 1.4859999999984608e-06, 1.5420000000002099e-06, 1.6660000000008612e-06, 1.4870000000014039e-06, 1.4019999999975719e-06, 1.5559999999997798e-06, 1.5830000000029154e-06, 1.5969999999990159e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.5559999999997798e-06, 1.957999999999821e-06, 1.403000000000515e-06, 2.02800000000114e-06, 1.9160000000011113e-06, 1.7639999999978506e-06, 1.8610000000023053e-06, 1.6389999999977256e-06, 1.5699999999993497e-06, 1.4580000000027904e-06, 1.9999999999985307e-06, 1.5000000000015001e-06, 1.7779999999974205e-06, 1.7220000000026103e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.6120000000015289e-06, 1.5969999999990159e-06, 1.653000000000765e-06, 1.512999999998127e-06, 1.9449999999997247e-06, 1.77800000000089e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.584000000002389e-06, 1.8049999999970867e-06], 'time': [0.018346625, 0.018348069, 0.018349792, 0.018351708, 0.018353528, 0.018355167, 0.018356944, 0.018358653, 0.018360458, 0.018362375, 0.018363917, 0.018365625, 0.018367111, 0.018368653, 0.018370319, 0.018371806, 0.018373208, 0.018374764, 0.018376347, 0.018377944, 0.018379569, 0.018381236, 0.018382792, 0.01838475, 0.018386153, 0.018388181, 0.018390097, 0.018391861, 0.018393722, 0.018395361, 0.018396931, 0.018398389, 0.018400389, 0.018401889, 0.018403667, 0.018405389, 0.018407069, 0.018408708, 0.018410528, 0.018412319, 0.018413931, 0.018415528, 0.018417181, 0.018418694, 0.018420639, 0.018422417, 0.018424333, 0.018425972, 0.018427556, 0.018429361]}</msg>
<status status="PASS" starttime="20201112 12:41:54.709" endtime="20201112 12:41:54.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.706" endtime="20201112 12:41:54.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:54.716" level="INFO">${RESULT} = [{'time': 0.018348069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.018351708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:54.713" endtime="20201112 12:41:54.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:54.724" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:54.717" endtime="20201112 12:41:54.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.728" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:54.727" endtime="20201112 12:41:54.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.730" level="INFO">VALUE: [1.4440000000032205e-06, 1.9160000000011113e-06, 1.6389999999977256e-06, 1.7089999999990446e-06, 1.917000000000585e-06, 1.707999999999571e-06, 1.5420000000002099e-06, 1.4870000000014039e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.957999999999821e-06, 2.02800000000114e-06, 1.7639999999978506e-06, 1.6389999999977256e-06, 1.4580000000027904e-06, 1.5000000000015001e-06, 1.7220000000026103e-06, 1.6389999999977256e-06, 1.7910000000009862e-06, 1.5969999999990159e-06, 1.512999999998127e-06, 1.77800000000089e-06, 1.6389999999977256e-06, 1.8049999999970867e-06]</msg>
<status status="PASS" starttime="20201112 12:41:54.729" endtime="20201112 12:41:54.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.725" endtime="20201112 12:41:54.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.733" endtime="20201112 12:41:54.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.737" endtime="20201112 12:41:54.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.735" endtime="20201112 12:41:54.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.732" endtime="20201112 12:41:54.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.375" endtime="20201112 12:41:54.758"></status>
</kw>
<msg timestamp="20201112 12:41:54.758" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.765" endtime="20201112 12:41:54.775"></status>
</kw>
<msg timestamp="20201112 12:41:54.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.764" endtime="20201112 12:41:54.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.778" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.777" endtime="20201112 12:41:54.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.779" endtime="20201112 12:41:54.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.761" endtime="20201112 12:41:54.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.760" endtime="20201112 12:41:54.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.789" endtime="20201112 12:41:55.057"></status>
</kw>
<msg timestamp="20201112 12:41:55.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:54.787" endtime="20201112 12:41:55.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018125903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.060" endtime="20201112 12:41:55.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.065" endtime="20201112 12:41:55.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.785" endtime="20201112 12:41:55.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.783" endtime="20201112 12:41:55.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.072" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:55.071" endtime="20201112 12:41:55.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.075" level="INFO">VALUE: [{'time': 0.018125903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018127569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018129542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.018131236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018132889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018134736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018136236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018138028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018139639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018141083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018142722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018144639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018146389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018148028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018149639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018151278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018153208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018154861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018156833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018158556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.018160333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.01816225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.01816375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018165319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.01816725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018168806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018170222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018172, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018173778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018175458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018177208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018178792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018180611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018182194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018183611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018185403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018187222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018189014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.01819075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018192375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018193889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018195306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018197153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018198903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018200444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018202042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018203514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018205458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018207278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018208764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:55.073" endtime="20201112 12:41:55.076"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.069" endtime="20201112 12:41:55.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:55.091" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.078" endtime="20201112 12:41:55.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.095" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:55.094" endtime="20201112 12:41:55.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.098" level="INFO">VALUE: {'sourceeventdiff': [0, 1.6660000000008612e-06, 1.9729999999988646e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.846999999999266e-06, 1.5000000000015001e-06, 1.7920000000004599e-06, 1.6109999999985858e-06, 1.443999999999751e-06, 1.639000000001195e-06, 1.917000000000585e-06, 1.7499999999982807e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.930000000000681e-06, 1.653000000000765e-06, 1.971999999999391e-06, 1.7229999999986145e-06, 1.7770000000014163e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.5559999999997798e-06, 1.4160000000006112e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.6799999999969617e-06, 1.7500000000017502e-06, 1.5839999999989196e-06, 1.819000000000126e-06, 1.582999999999446e-06, 1.4170000000000849e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.51400000000107e-06, 1.4170000000000849e-06, 1.846999999999266e-06, 1.7499999999982807e-06, 1.5410000000007362e-06, 1.598000000001959e-06, 1.4719999999988909e-06, 1.944000000000251e-06, 1.8199999999995997e-06, 1.4859999999984608e-06], 'source_diff': [0, 1.6660000000008612e-06, 1.9729999999988646e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.846999999999266e-06, 1.5000000000015001e-06, 1.7920000000004599e-06, 1.6109999999985858e-06, 1.443999999999751e-06, 1.639000000001195e-06, 1.917000000000585e-06, 1.7499999999982807e-06, 1.639000000001195e-06, 1.6109999999985858e-06, 1.639000000001195e-06, 1.930000000000681e-06, 1.653000000000765e-06, 1.971999999999391e-06, 1.7229999999986145e-06, 1.7770000000014163e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.568999999999876e-06, 1.931000000000155e-06, 1.5559999999997798e-06, 1.4160000000006112e-06, 1.77800000000089e-06, 1.77800000000089e-06, 1.6799999999969617e-06, 1.7500000000017502e-06, 1.5839999999989196e-06, 1.819000000000126e-06, 1.582999999999446e-06, 1.4170000000000849e-06, 1.7920000000004599e-06, 1.819000000000126e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.6250000000016251e-06, 1.51400000000107e-06, 1.4170000000000849e-06, 1.846999999999266e-06, 1.7499999999982807e-06, 1.5410000000007362e-06, 1.598000000001959e-06, 1.4719999999988909e-06, 1.944000000000251e-06, 1.8199999999995997e-06, 1.4859999999984608e-06], 'time': [0.018125903, 0.018127569, 0.018129542, 0.018131236, 0.018132889, 0.018134736, 0.018136236, 0.018138028, 0.018139639, 0.018141083, 0.018142722, 0.018144639, 0.018146389, 0.018148028, 0.018149639, 0.018151278, 0.018153208, 0.018154861, 0.018156833, 0.018158556, 0.018160333, 0.01816225, 0.01816375, 0.018165319, 0.01816725, 0.018168806, 0.018170222, 0.018172, 0.018173778, 0.018175458, 0.018177208, 0.018178792, 0.018180611, 0.018182194, 0.018183611, 0.018185403, 0.018187222, 0.018189014, 0.01819075, 0.018192375, 0.018193889, 0.018195306, 0.018197153, 0.018198903, 0.018200444, 0.018202042, 0.018203514, 0.018205458, 0.018207278, 0.018208764]}</msg>
<status status="PASS" starttime="20201112 12:41:55.096" endtime="20201112 12:41:55.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.092" endtime="20201112 12:41:55.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.102" level="INFO">${RESULT} = [{'time': 0.018127569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018131236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:55.100" endtime="20201112 12:41:55.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:55.110" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.103" endtime="20201112 12:41:55.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.114" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:55.113" endtime="20201112 12:41:55.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.116" level="INFO">VALUE: [1.6660000000008612e-06, 1.694000000000001e-06, 1.846999999999266e-06, 1.7920000000004599e-06, 1.443999999999751e-06, 1.917000000000585e-06, 1.639000000001195e-06, 1.639000000001195e-06, 1.653000000000765e-06, 1.7229999999986145e-06, 1.917000000000585e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.77800000000089e-06, 1.6799999999969617e-06, 1.5839999999989196e-06, 1.582999999999446e-06, 1.7920000000004599e-06, 1.7920000000004599e-06, 1.6250000000016251e-06, 1.4170000000000849e-06, 1.7499999999982807e-06, 1.598000000001959e-06, 1.944000000000251e-06, 1.4859999999984608e-06]</msg>
<status status="PASS" starttime="20201112 12:41:55.115" endtime="20201112 12:41:55.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.111" endtime="20201112 12:41:55.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.120" endtime="20201112 12:41:55.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.123" endtime="20201112 12:41:55.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.122" endtime="20201112 12:41:55.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.118" endtime="20201112 12:41:55.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.758" endtime="20201112 12:41:55.144"></status>
</kw>
<msg timestamp="20201112 12:41:55.144" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.152" endtime="20201112 12:41:55.161"></status>
</kw>
<msg timestamp="20201112 12:41:55.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.151" endtime="20201112 12:41:55.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.164" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.162" endtime="20201112 12:41:55.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.165" endtime="20201112 12:41:55.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.147" endtime="20201112 12:41:55.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.146" endtime="20201112 12:41:55.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.174" endtime="20201112 12:41:55.443"></status>
</kw>
<msg timestamp="20201112 12:41:55.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018796194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.172" endtime="20201112 12:41:55.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018796194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.446" endtime="20201112 12:41:55.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.451" endtime="20201112 12:41:55.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.170" endtime="20201112 12:41:55.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.168" endtime="20201112 12:41:55.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.457" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:55.456" endtime="20201112 12:41:55.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.461" level="INFO">VALUE: [{'time': 0.018796194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018797833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018799528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018801417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018803083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018805014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9309999999966854e-06, 'source_diff': 1.9309999999966854e-06}, {'time': 0.018806694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018808389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018809889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018811597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018813319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018814847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018816528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018818236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018819792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018821542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018822958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018824639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018826514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018828361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018830181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.018831861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018833778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018835431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018836986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018838583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018840125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018841917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018843542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018845042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018846444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.018848292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018849972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018851847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018853681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018855361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018856792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018858431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018860403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018862, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018863375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.018864778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4029999999970455e-06, 'source_diff': 1.4029999999970455e-06}, {'time': 0.018866708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018868514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018870236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018871653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018873069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018874958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018876431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018878292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:55.458" endtime="20201112 12:41:55.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.454" endtime="20201112 12:41:55.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:55.476" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.463" endtime="20201112 12:41:55.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.479" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:55.478" endtime="20201112 12:41:55.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.482" level="INFO">VALUE: {'sourceeventdiff': [0, 1.639000000001195e-06, 1.6949999999994747e-06, 1.889000000001445e-06, 1.6660000000008612e-06, 1.9309999999966854e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.52800000000064e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.5559999999997798e-06, 1.7500000000017502e-06, 1.4160000000006112e-06, 1.6809999999999048e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.6799999999969617e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.7920000000004599e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.4020000000010413e-06, 1.8479999999987395e-06, 1.6800000000004311e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.6800000000004311e-06, 1.4309999999996548e-06, 1.6389999999977256e-06, 1.9720000000028604e-06, 1.5969999999990159e-06, 1.3750000000013751e-06, 1.4029999999970455e-06, 1.930000000000681e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.4170000000000849e-06, 1.4160000000006112e-06, 1.889000000001445e-06, 1.4729999999983645e-06, 1.8610000000023053e-06], 'source_diff': [0, 1.639000000001195e-06, 1.6949999999994747e-06, 1.889000000001445e-06, 1.6660000000008612e-06, 1.9309999999966854e-06, 1.6800000000004311e-06, 1.6949999999994747e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.7219999999991409e-06, 1.52800000000064e-06, 1.6809999999999048e-06, 1.707999999999571e-06, 1.5559999999997798e-06, 1.7500000000017502e-06, 1.4160000000006112e-06, 1.6809999999999048e-06, 1.8749999999984057e-06, 1.846999999999266e-06, 1.8200000000030692e-06, 1.6799999999969617e-06, 1.917000000000585e-06, 1.653000000000765e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.7920000000004599e-06, 1.6250000000016251e-06, 1.4999999999980307e-06, 1.4020000000010413e-06, 1.8479999999987395e-06, 1.6800000000004311e-06, 1.8750000000018752e-06, 1.8339999999991696e-06, 1.6800000000004311e-06, 1.4309999999996548e-06, 1.6389999999977256e-06, 1.9720000000028604e-06, 1.5969999999990159e-06, 1.3750000000013751e-06, 1.4029999999970455e-06, 1.930000000000681e-06, 1.8060000000000298e-06, 1.7219999999991409e-06, 1.4170000000000849e-06, 1.4160000000006112e-06, 1.889000000001445e-06, 1.4729999999983645e-06, 1.8610000000023053e-06], 'time': [0.018796194, 0.018797833, 0.018799528, 0.018801417, 0.018803083, 0.018805014, 0.018806694, 0.018808389, 0.018809889, 0.018811597, 0.018813319, 0.018814847, 0.018816528, 0.018818236, 0.018819792, 0.018821542, 0.018822958, 0.018824639, 0.018826514, 0.018828361, 0.018830181, 0.018831861, 0.018833778, 0.018835431, 0.018836986, 0.018838583, 0.018840125, 0.018841917, 0.018843542, 0.018845042, 0.018846444, 0.018848292, 0.018849972, 0.018851847, 0.018853681, 0.018855361, 0.018856792, 0.018858431, 0.018860403, 0.018862, 0.018863375, 0.018864778, 0.018866708, 0.018868514, 0.018870236, 0.018871653, 0.018873069, 0.018874958, 0.018876431, 0.018878292]}</msg>
<status status="PASS" starttime="20201112 12:41:55.480" endtime="20201112 12:41:55.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.477" endtime="20201112 12:41:55.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.487" level="INFO">${RESULT} = [{'time': 0.018797833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018801417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:55.484" endtime="20201112 12:41:55.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:55.495" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.488" endtime="20201112 12:41:55.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.499" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:55.498" endtime="20201112 12:41:55.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.501" level="INFO">VALUE: [1.639000000001195e-06, 1.889000000001445e-06, 1.9309999999966854e-06, 1.6949999999994747e-06, 1.707999999999571e-06, 1.52800000000064e-06, 1.707999999999571e-06, 1.7500000000017502e-06, 1.6809999999999048e-06, 1.846999999999266e-06, 1.6799999999969617e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.4999999999980307e-06, 1.8479999999987395e-06, 1.8750000000018752e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.4029999999970455e-06, 1.8060000000000298e-06, 1.4170000000000849e-06, 1.889000000001445e-06, 1.8610000000023053e-06]</msg>
<status status="PASS" starttime="20201112 12:41:55.500" endtime="20201112 12:41:55.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.496" endtime="20201112 12:41:55.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.504" endtime="20201112 12:41:55.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.508" endtime="20201112 12:41:55.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.506" endtime="20201112 12:41:55.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.503" endtime="20201112 12:41:55.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.144" endtime="20201112 12:41:55.529"></status>
</kw>
<msg timestamp="20201112 12:41:55.529" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.537" endtime="20201112 12:41:55.546"></status>
</kw>
<msg timestamp="20201112 12:41:55.546" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.535" endtime="20201112 12:41:55.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.549" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.547" endtime="20201112 12:41:55.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.550" endtime="20201112 12:41:55.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.533" endtime="20201112 12:41:55.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.531" endtime="20201112 12:41:55.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.558" endtime="20201112 12:41:55.827"></status>
</kw>
<msg timestamp="20201112 12:41:55.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018006472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018008403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.557" endtime="20201112 12:41:55.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018006472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018008403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:55.830" endtime="20201112 12:41:55.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.835" endtime="20201112 12:41:55.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.554" endtime="20201112 12:41:55.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.553" endtime="20201112 12:41:55.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.842" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:55.841" endtime="20201112 12:41:55.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.846" level="INFO">VALUE: [{'time': 0.018006472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018008403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018010222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018012194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018013903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018015569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018017542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.018019319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018020806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.018022222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018023917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018025597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018027125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018028875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.01803075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018032208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018033986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018035625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018037528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018039528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018041486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018043458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018045333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018047, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018048653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018050556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018052403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018054208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.018056125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018057819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018059431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018060986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018062778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018064514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018066181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018067569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.387999999998002e-06, 'source_diff': 1.387999999998002e-06}, {'time': 0.018069278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018070708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018072208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018074139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018075764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018077153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.018079056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018080778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018082194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4160000000006112e-06, 'source_diff': 1.4160000000006112e-06}, {'time': 0.018083583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.389000000000945e-06, 'source_diff': 1.389000000000945e-06}, {'time': 0.018085806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2229999999991146e-06, 'source_diff': 2.2229999999991146e-06}, {'time': 0.018087694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8880000000019714e-06, 'source_diff': 1.8880000000019714e-06}, {'time': 0.018089375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018091, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:55.843" endtime="20201112 12:41:55.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.839" endtime="20201112 12:41:55.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:55.931" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.918" endtime="20201112 12:41:55.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.935" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:55.934" endtime="20201112 12:41:55.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.938" level="INFO">VALUE: {'sourceeventdiff': [0, 1.931000000000155e-06, 1.819000000000126e-06, 1.971999999999391e-06, 1.709000000002514e-06, 1.6659999999973918e-06, 1.973000000002334e-06, 1.7769999999979469e-06, 1.4870000000014039e-06, 1.4160000000006112e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.8750000000018752e-06, 1.457999999999321e-06, 1.7779999999974205e-06, 1.639000000001195e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.957999999999821e-06, 1.971999999999391e-06, 1.8750000000018752e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8049999999970867e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.387999999998002e-06, 1.709000000002514e-06, 1.4300000000001811e-06, 1.4999999999980307e-06, 1.931000000000155e-06, 1.6250000000016251e-06, 1.3889999999974756e-06, 1.903000000001015e-06, 1.7219999999991409e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 2.2229999999991146e-06, 1.8880000000019714e-06, 1.6809999999999048e-06, 1.6249999999981557e-06], 'source_diff': [0, 1.931000000000155e-06, 1.819000000000126e-06, 1.971999999999391e-06, 1.709000000002514e-06, 1.6659999999973918e-06, 1.973000000002334e-06, 1.7769999999979469e-06, 1.4870000000014039e-06, 1.4160000000006112e-06, 1.6949999999994747e-06, 1.6800000000004311e-06, 1.52800000000064e-06, 1.7499999999982807e-06, 1.8750000000018752e-06, 1.457999999999321e-06, 1.7779999999974205e-06, 1.639000000001195e-06, 1.903000000001015e-06, 1.9999999999985307e-06, 1.957999999999821e-06, 1.971999999999391e-06, 1.8750000000018752e-06, 1.6670000000003349e-06, 1.653000000000765e-06, 1.9029999999975455e-06, 1.8470000000027353e-06, 1.8049999999970867e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 1.7920000000004599e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 1.387999999998002e-06, 1.709000000002514e-06, 1.4300000000001811e-06, 1.4999999999980307e-06, 1.931000000000155e-06, 1.6250000000016251e-06, 1.3889999999974756e-06, 1.903000000001015e-06, 1.7219999999991409e-06, 1.4160000000006112e-06, 1.389000000000945e-06, 2.2229999999991146e-06, 1.8880000000019714e-06, 1.6809999999999048e-06, 1.6249999999981557e-06], 'time': [0.018006472, 0.018008403, 0.018010222, 0.018012194, 0.018013903, 0.018015569, 0.018017542, 0.018019319, 0.018020806, 0.018022222, 0.018023917, 0.018025597, 0.018027125, 0.018028875, 0.01803075, 0.018032208, 0.018033986, 0.018035625, 0.018037528, 0.018039528, 0.018041486, 0.018043458, 0.018045333, 0.018047, 0.018048653, 0.018050556, 0.018052403, 0.018054208, 0.018056125, 0.018057819, 0.018059431, 0.018060986, 0.018062778, 0.018064514, 0.018066181, 0.018067569, 0.018069278, 0.018070708, 0.018072208, 0.018074139, 0.018075764, 0.018077153, 0.018079056, 0.018080778, 0.018082194, 0.018083583, 0.018085806, 0.018087694, 0.018089375, 0.018091]}</msg>
<status status="PASS" starttime="20201112 12:41:55.936" endtime="20201112 12:41:55.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.932" endtime="20201112 12:41:55.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:55.942" level="INFO">${RESULT} = [{'time': 0.018008403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018012194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:55.940" endtime="20201112 12:41:55.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:55.951" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:55.943" endtime="20201112 12:41:55.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.955" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:55.954" endtime="20201112 12:41:55.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.957" level="INFO">VALUE: [1.931000000000155e-06, 1.971999999999391e-06, 1.6659999999973918e-06, 1.7769999999979469e-06, 1.4160000000006112e-06, 1.6800000000004311e-06, 1.7499999999982807e-06, 1.457999999999321e-06, 1.639000000001195e-06, 1.9999999999985307e-06, 1.971999999999391e-06, 1.6670000000003349e-06, 1.9029999999975455e-06, 1.8049999999970867e-06, 1.694000000000001e-06, 1.5550000000003061e-06, 1.7359999999987108e-06, 1.387999999998002e-06, 1.4300000000001811e-06, 1.931000000000155e-06, 1.3889999999974756e-06, 1.7219999999991409e-06, 1.389000000000945e-06, 1.8880000000019714e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201112 12:41:55.956" endtime="20201112 12:41:55.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.951" endtime="20201112 12:41:55.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.960" endtime="20201112 12:41:55.962"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:55.964" endtime="20201112 12:41:55.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.962" endtime="20201112 12:41:55.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.959" endtime="20201112 12:41:55.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.530" endtime="20201112 12:41:55.984"></status>
</kw>
<msg timestamp="20201112 12:41:55.985" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:55.992" endtime="20201112 12:41:56.001"></status>
</kw>
<msg timestamp="20201112 12:41:56.002" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:55.991" endtime="20201112 12:41:56.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.003" endtime="20201112 12:41:56.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.005" endtime="20201112 12:41:56.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.988" endtime="20201112 12:41:56.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.986" endtime="20201112 12:41:56.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.014" endtime="20201112 12:41:56.278"></status>
</kw>
<msg timestamp="20201112 12:41:56.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018177528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.013" endtime="20201112 12:41:56.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018177528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.281" endtime="20201112 12:41:56.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.286" endtime="20201112 12:41:56.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.010" endtime="20201112 12:41:56.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.008" endtime="20201112 12:41:56.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.293" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:56.292" endtime="20201112 12:41:56.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.296" level="INFO">VALUE: [{'time': 0.018177528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018179306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018181222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018183042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018184736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018186264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018188208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018190167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018191681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018193097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.018194597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018196528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018198097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018199972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018201639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018203153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018204653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018206056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018207694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.018209375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018210944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018212917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.018214319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4020000000010413e-06, 'source_diff': 1.4020000000010413e-06}, {'time': 0.018216375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018217778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.018219708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018221153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018222972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.0182245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018225931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018227861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018229306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018230986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018232792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018234208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4159999999971418e-06, 'source_diff': 1.4159999999971418e-06}, {'time': 0.018235667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018237528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018238958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018240722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018242639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018244194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5549999999968367e-06, 'source_diff': 1.5549999999968367e-06}, {'time': 0.018245903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018247569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018249167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018250764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018252431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018254069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.018255903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018257528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018259097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:56.294" endtime="20201112 12:41:56.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.289" endtime="20201112 12:41:56.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:56.312" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:56.298" endtime="20201112 12:41:56.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.316" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:56.315" endtime="20201112 12:41:56.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.319" level="INFO">VALUE: {'sourceeventdiff': [0, 1.77800000000089e-06, 1.9160000000011113e-06, 1.8199999999995997e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.9589999999992946e-06, 1.51400000000107e-06, 1.4159999999971418e-06, 1.5000000000015001e-06, 1.931000000000155e-06, 1.568999999999876e-06, 1.8749999999984057e-06, 1.6670000000003349e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.403000000000515e-06, 1.637999999998252e-06, 1.6809999999999048e-06, 1.568999999999876e-06, 1.9729999999988646e-06, 1.4020000000010413e-06, 2.05600000000028e-06, 1.403000000000515e-06, 1.930000000000681e-06, 1.4449999999992247e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.4309999999996548e-06, 1.930000000000681e-06, 1.4449999999992247e-06, 1.6800000000004311e-06, 1.8060000000000298e-06, 1.4159999999971418e-06, 1.459000000002264e-06, 1.8609999999988358e-06, 1.4300000000001811e-06, 1.76400000000132e-06, 1.917000000000585e-06, 1.5549999999968367e-06, 1.709000000002514e-06, 1.6660000000008612e-06, 1.5979999999984895e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.6380000000017214e-06, 1.8339999999991696e-06, 1.6249999999981557e-06, 1.568999999999876e-06], 'source_diff': [0, 1.77800000000089e-06, 1.9160000000011113e-06, 1.8199999999995997e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.9589999999992946e-06, 1.51400000000107e-06, 1.4159999999971418e-06, 1.5000000000015001e-06, 1.931000000000155e-06, 1.568999999999876e-06, 1.8749999999984057e-06, 1.6670000000003349e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.403000000000515e-06, 1.637999999998252e-06, 1.6809999999999048e-06, 1.568999999999876e-06, 1.9729999999988646e-06, 1.4020000000010413e-06, 2.05600000000028e-06, 1.403000000000515e-06, 1.930000000000681e-06, 1.4449999999992247e-06, 1.819000000000126e-06, 1.52800000000064e-06, 1.4309999999996548e-06, 1.930000000000681e-06, 1.4449999999992247e-06, 1.6800000000004311e-06, 1.8060000000000298e-06, 1.4159999999971418e-06, 1.459000000002264e-06, 1.8609999999988358e-06, 1.4300000000001811e-06, 1.76400000000132e-06, 1.917000000000585e-06, 1.5549999999968367e-06, 1.709000000002514e-06, 1.6660000000008612e-06, 1.5979999999984895e-06, 1.5969999999990159e-06, 1.6670000000003349e-06, 1.6380000000017214e-06, 1.8339999999991696e-06, 1.6249999999981557e-06, 1.568999999999876e-06], 'time': [0.018177528, 0.018179306, 0.018181222, 0.018183042, 0.018184736, 0.018186264, 0.018188208, 0.018190167, 0.018191681, 0.018193097, 0.018194597, 0.018196528, 0.018198097, 0.018199972, 0.018201639, 0.018203153, 0.018204653, 0.018206056, 0.018207694, 0.018209375, 0.018210944, 0.018212917, 0.018214319, 0.018216375, 0.018217778, 0.018219708, 0.018221153, 0.018222972, 0.0182245, 0.018225931, 0.018227861, 0.018229306, 0.018230986, 0.018232792, 0.018234208, 0.018235667, 0.018237528, 0.018238958, 0.018240722, 0.018242639, 0.018244194, 0.018245903, 0.018247569, 0.018249167, 0.018250764, 0.018252431, 0.018254069, 0.018255903, 0.018257528, 0.018259097]}</msg>
<status status="PASS" starttime="20201112 12:41:56.317" endtime="20201112 12:41:56.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.313" endtime="20201112 12:41:56.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.323" level="INFO">${RESULT} = [{'time': 0.018179306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018183042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:41:56.321" endtime="20201112 12:41:56.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:56.331" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:56.324" endtime="20201112 12:41:56.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.335" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:56.334" endtime="20201112 12:41:56.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.338" level="INFO">VALUE: [1.77800000000089e-06, 1.8199999999995997e-06, 1.52800000000064e-06, 1.9589999999992946e-06, 1.4159999999971418e-06, 1.931000000000155e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.403000000000515e-06, 1.6809999999999048e-06, 1.9729999999988646e-06, 2.05600000000028e-06, 1.930000000000681e-06, 1.819000000000126e-06, 1.4309999999996548e-06, 1.4449999999992247e-06, 1.8060000000000298e-06, 1.459000000002264e-06, 1.4300000000001811e-06, 1.917000000000585e-06, 1.709000000002514e-06, 1.5979999999984895e-06, 1.6670000000003349e-06, 1.8339999999991696e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201112 12:41:56.336" endtime="20201112 12:41:56.338"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.332" endtime="20201112 12:41:56.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.341" endtime="20201112 12:41:56.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.344" endtime="20201112 12:41:56.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.343" endtime="20201112 12:41:56.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.339" endtime="20201112 12:41:56.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.985" endtime="20201112 12:41:56.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:48.597" endtime="20201112 12:41:56.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.370" endtime="20201112 12:41:56.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.368" endtime="20201112 12:41:56.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.367" endtime="20201112 12:41:56.390"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:48.528" endtime="20201112 12:41:56.390" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.399" endtime="20201112 12:41:56.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.397" endtime="20201112 12:41:56.419"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.432" endtime="20201112 12:41:56.446"></status>
</kw>
<msg timestamp="20201112 12:41:56.447" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.430" endtime="20201112 12:41:56.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.449" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.448" endtime="20201112 12:41:56.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.452" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:56.450" endtime="20201112 12:41:56.452"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.427" endtime="20201112 12:41:56.453"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.425" endtime="20201112 12:41:56.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.424" endtime="20201112 12:41:56.454"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:56.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:56.457" endtime="20201112 12:41:56.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.455" endtime="20201112 12:41:56.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.423" endtime="20201112 12:41:56.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.422" endtime="20201112 12:41:56.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.459" endtime="20201112 12:41:56.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.421" endtime="20201112 12:41:56.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.419" endtime="20201112 12:41:56.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.396" endtime="20201112 12:41:56.462"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:56.464" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.472" endtime="20201112 12:41:56.484"></status>
</kw>
<msg timestamp="20201112 12:41:56.484" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.470" endtime="20201112 12:41:56.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.486" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.485" endtime="20201112 12:41:56.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.487" endtime="20201112 12:41:56.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.468" endtime="20201112 12:41:56.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.466" endtime="20201112 12:41:56.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.496" endtime="20201112 12:41:56.783"></status>
</kw>
<msg timestamp="20201112 12:41:56.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064524153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064525514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.495" endtime="20201112 12:41:56.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064524153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064525514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.787" endtime="20201112 12:41:56.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.796" endtime="20201112 12:41:56.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.492" endtime="20201112 12:41:56.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.491" endtime="20201112 12:41:56.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.802" level="INFO">${RESULT} = [{'time': 0.064525514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000052747e-06, 'source_diff': 1.3610000000052747e-06}, {'time': 0.064527875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:56.799" endtime="20201112 12:41:56.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:56.816" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:56.803" endtime="20201112 12:41:56.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.820" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:56.819" endtime="20201112 12:41:56.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.823" level="INFO">VALUE: [1.3610000000052747e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.1250000000045945e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0699999999919108e-06, 1.054999999999806e-06, 1.1249999999907168e-06, 1.041999999992771e-06, 1.0420000000066487e-06, 1.096999999991577e-06, 1.041000000007175e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.069000000006315e-06, 1.054999999999806e-06, 1.0270000000006663e-06, 1.041000000007175e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0689999999924371e-06, 1.0409999999932973e-06, 1.041999999992771e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.069000000006315e-06, 1.0559999999992797e-06, 1.0700000000057885e-06, 1.041000000007175e-06, 1.0700000000057885e-06, 1.069000000006315e-06, 1.0420000000066487e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0420000000066487e-06, 1.054999999999806e-06, 1.1250000000045945e-06, 1.0699999999919108e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:41:56.821" endtime="20201112 12:41:56.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.817" endtime="20201112 12:41:56.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.826" endtime="20201112 12:41:56.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.829" endtime="20201112 12:41:56.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.827" endtime="20201112 12:41:56.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.824" endtime="20201112 12:41:56.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.465" endtime="20201112 12:41:56.850"></status>
</kw>
<msg timestamp="20201112 12:41:56.850" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.858" endtime="20201112 12:41:56.869"></status>
</kw>
<msg timestamp="20201112 12:41:56.870" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.857" endtime="20201112 12:41:56.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.872" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.871" endtime="20201112 12:41:56.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.873" endtime="20201112 12:41:56.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.854" endtime="20201112 12:41:56.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.852" endtime="20201112 12:41:56.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.882" endtime="20201112 12:41:57.165"></status>
</kw>
<msg timestamp="20201112 12:41:57.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:56.881" endtime="20201112 12:41:57.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0202795, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020280847, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:57.169" endtime="20201112 12:41:57.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.177" endtime="20201112 12:41:57.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.878" endtime="20201112 12:41:57.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.877" endtime="20201112 12:41:57.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.184" level="INFO">${RESULT} = [{'time': 0.020280847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.020283611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:57.180" endtime="20201112 12:41:57.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.198" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:57.185" endtime="20201112 12:41:57.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.202" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:57.201" endtime="20201112 12:41:57.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.204" level="INFO">VALUE: [1.3470000000022353e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.070000000002319e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.139000000000695e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0279999999966705e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.203" endtime="20201112 12:41:57.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.199" endtime="20201112 12:41:57.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.207" endtime="20201112 12:41:57.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.211" endtime="20201112 12:41:57.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.209" endtime="20201112 12:41:57.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.206" endtime="20201112 12:41:57.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.851" endtime="20201112 12:41:57.232"></status>
</kw>
<msg timestamp="20201112 12:41:57.232" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.240" endtime="20201112 12:41:57.251"></status>
</kw>
<msg timestamp="20201112 12:41:57.251" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.238" endtime="20201112 12:41:57.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.253" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.252" endtime="20201112 12:41:57.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.254" endtime="20201112 12:41:57.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.236" endtime="20201112 12:41:57.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.234" endtime="20201112 12:41:57.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.263" endtime="20201112 12:41:57.544"></status>
</kw>
<msg timestamp="20201112 12:41:57.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01919275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:57.262" endtime="20201112 12:41:57.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01919275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019194097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:41:57.548" endtime="20201112 12:41:57.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.556" endtime="20201112 12:41:57.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.259" endtime="20201112 12:41:57.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.258" endtime="20201112 12:41:57.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.563" level="INFO">${RESULT} = [{'time': 0.019194097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019196958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:57.560" endtime="20201112 12:41:57.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.578" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:57.564" endtime="20201112 12:41:57.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.582" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:57.581" endtime="20201112 12:41:57.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.584" level="INFO">VALUE: [1.3469999999987659e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.0410000000002362e-06, 1.0420000000031793e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.070000000002319e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0550000000032755e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.583" endtime="20201112 12:41:57.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.579" endtime="20201112 12:41:57.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.588" endtime="20201112 12:41:57.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.591" endtime="20201112 12:41:57.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.590" endtime="20201112 12:41:57.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.586" endtime="20201112 12:41:57.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.232" endtime="20201112 12:41:57.612"></status>
</kw>
<msg timestamp="20201112 12:41:57.612" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.620" endtime="20201112 12:41:57.630"></status>
</kw>
<msg timestamp="20201112 12:41:57.631" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.618" endtime="20201112 12:41:57.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.633" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.632" endtime="20201112 12:41:57.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.634" endtime="20201112 12:41:57.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.616" endtime="20201112 12:41:57.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.614" endtime="20201112 12:41:57.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.643" endtime="20201112 12:41:57.924"></status>
</kw>
<msg timestamp="20201112 12:41:57.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.642" endtime="20201112 12:41:57.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019223125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019224458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.928" endtime="20201112 12:41:57.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.937" endtime="20201112 12:41:57.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.639" endtime="20201112 12:41:57.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.638" endtime="20201112 12:41:57.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.943" level="INFO">${RESULT} = [{'time': 0.019224458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.332999999999196e-06, 'source_diff': 1.332999999999196e-06}, {'time': 0.019226764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:57.940" endtime="20201112 12:41:57.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.957" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:57.944" endtime="20201112 12:41:57.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.961" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:57.960" endtime="20201112 12:41:57.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.964" level="INFO">VALUE: [1.332999999999196e-06, 1.0559999999992797e-06, 1.0270000000006663e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 9.860000000014302e-07, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0409999999967667e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.0550000000032755e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.1249999999976557e-06, 9.859999999979607e-07, 1.1110000000015552e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0410000000002362e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.962" endtime="20201112 12:41:57.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.958" endtime="20201112 12:41:57.966"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.968" endtime="20201112 12:41:57.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.971" endtime="20201112 12:41:57.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.970" endtime="20201112 12:41:57.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.966" endtime="20201112 12:41:57.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.613" endtime="20201112 12:41:57.992"></status>
</kw>
<msg timestamp="20201112 12:41:57.992" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.000" endtime="20201112 12:41:58.010"></status>
</kw>
<msg timestamp="20201112 12:41:58.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.998" endtime="20201112 12:41:58.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.012" endtime="20201112 12:41:58.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.015" endtime="20201112 12:41:58.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.996" endtime="20201112 12:41:58.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.994" endtime="20201112 12:41:58.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.023" endtime="20201112 12:41:58.312"></status>
</kw>
<msg timestamp="20201112 12:41:58.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.022" endtime="20201112 12:41:58.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.316" endtime="20201112 12:41:58.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.324" endtime="20201112 12:41:58.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.019" endtime="20201112 12:41:58.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.018" endtime="20201112 12:41:58.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.331" level="INFO">${RESULT} = [{'time': 0.019582458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019585014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:58.327" endtime="20201112 12:41:58.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:58.345" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:58.332" endtime="20201112 12:41:58.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.349" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:58.348" endtime="20201112 12:41:58.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.351" level="INFO">VALUE: [1.3610000000018052e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.012999999997627e-06, 1.0559999999992797e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:41:58.350" endtime="20201112 12:41:58.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.346" endtime="20201112 12:41:58.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.355" endtime="20201112 12:41:58.356"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.358" endtime="20201112 12:41:58.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.357" endtime="20201112 12:41:58.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.353" endtime="20201112 12:41:58.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.993" endtime="20201112 12:41:58.379"></status>
</kw>
<msg timestamp="20201112 12:41:58.379" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.386" endtime="20201112 12:41:58.397"></status>
</kw>
<msg timestamp="20201112 12:41:58.398" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.385" endtime="20201112 12:41:58.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.400" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.399" endtime="20201112 12:41:58.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.401" endtime="20201112 12:41:58.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.382" endtime="20201112 12:41:58.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.381" endtime="20201112 12:41:58.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.410" endtime="20201112 12:41:58.691"></status>
</kw>
<msg timestamp="20201112 12:41:58.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019267097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019268458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.409" endtime="20201112 12:41:58.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019267097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019268458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.695" endtime="20201112 12:41:58.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.703" endtime="20201112 12:41:58.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.406" endtime="20201112 12:41:58.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.404" endtime="20201112 12:41:58.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.710" level="INFO">${RESULT} = [{'time': 0.019268458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019271222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:58.706" endtime="20201112 12:41:58.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:58.724" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:58.711" endtime="20201112 12:41:58.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.728" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:58.727" endtime="20201112 12:41:58.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.730" level="INFO">VALUE: [1.3609999999983358e-06, 1.0410000000002362e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0279999999966705e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.098000000001459e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.000000000001e-06, 1.0699999999988496e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:41:58.729" endtime="20201112 12:41:58.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.725" endtime="20201112 12:41:58.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.734" endtime="20201112 12:41:58.735"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.737" endtime="20201112 12:41:58.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.736" endtime="20201112 12:41:58.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.732" endtime="20201112 12:41:58.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.379" endtime="20201112 12:41:58.758"></status>
</kw>
<msg timestamp="20201112 12:41:58.758" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.765" endtime="20201112 12:41:58.777"></status>
</kw>
<msg timestamp="20201112 12:41:58.777" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.764" endtime="20201112 12:41:58.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.780" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.779" endtime="20201112 12:41:58.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.781" endtime="20201112 12:41:58.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.761" endtime="20201112 12:41:58.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.760" endtime="20201112 12:41:58.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.790" endtime="20201112 12:41:59.075"></status>
</kw>
<msg timestamp="20201112 12:41:59.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019399778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.788" endtime="20201112 12:41:59.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019399778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019401139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.079" endtime="20201112 12:41:59.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.088" endtime="20201112 12:41:59.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.786" endtime="20201112 12:41:59.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.784" endtime="20201112 12:41:59.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.095" level="INFO">${RESULT} = [{'time': 0.019401139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019403458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.091" endtime="20201112 12:41:59.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.110" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:59.096" endtime="20201112 12:41:59.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.114" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:59.113" endtime="20201112 12:41:59.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.117" level="INFO">VALUE: [1.3610000000018052e-06, 1.054999999999806e-06, 1.0270000000006663e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.115" endtime="20201112 12:41:59.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.111" endtime="20201112 12:41:59.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.120" endtime="20201112 12:41:59.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.124" endtime="20201112 12:41:59.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.122" endtime="20201112 12:41:59.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.119" endtime="20201112 12:41:59.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.759" endtime="20201112 12:41:59.145"></status>
</kw>
<msg timestamp="20201112 12:41:59.145" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.153" endtime="20201112 12:41:59.164"></status>
</kw>
<msg timestamp="20201112 12:41:59.164" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.151" endtime="20201112 12:41:59.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.167" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.165" endtime="20201112 12:41:59.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.168" endtime="20201112 12:41:59.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.149" endtime="20201112 12:41:59.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.147" endtime="20201112 12:41:59.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.177" endtime="20201112 12:41:59.475"></status>
</kw>
<msg timestamp="20201112 12:41:59.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019961444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.176" endtime="20201112 12:41:59.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019961444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019962792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.485" endtime="20201112 12:41:59.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.504" endtime="20201112 12:41:59.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.173" endtime="20201112 12:41:59.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.171" endtime="20201112 12:41:59.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.519" level="INFO">${RESULT} = [{'time': 0.019962792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.348000000001709e-06, 'source_diff': 1.348000000001709e-06}, {'time': 0.019965153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:59.512" endtime="20201112 12:41:59.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.537" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:59.521" endtime="20201112 12:41:59.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.542" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:59.541" endtime="20201112 12:41:59.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.544" level="INFO">VALUE: [1.348000000001709e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.1380000000012214e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.01400000000057e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0270000000006663e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.543" endtime="20201112 12:41:59.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.538" endtime="20201112 12:41:59.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.548" endtime="20201112 12:41:59.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.551" endtime="20201112 12:41:59.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.550" endtime="20201112 12:41:59.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.546" endtime="20201112 12:41:59.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.146" endtime="20201112 12:41:59.572"></status>
</kw>
<msg timestamp="20201112 12:41:59.572" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.581" endtime="20201112 12:41:59.591"></status>
</kw>
<msg timestamp="20201112 12:41:59.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.579" endtime="20201112 12:41:59.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.595" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.593" endtime="20201112 12:41:59.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.596" endtime="20201112 12:41:59.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.576" endtime="20201112 12:41:59.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.574" endtime="20201112 12:41:59.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.605" endtime="20201112 12:41:59.886"></status>
</kw>
<msg timestamp="20201112 12:41:59.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.604" endtime="20201112 12:41:59.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020152347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.891" endtime="20201112 12:41:59.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.900" endtime="20201112 12:41:59.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.601" endtime="20201112 12:41:59.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.599" endtime="20201112 12:41:59.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.907" level="INFO">${RESULT} = [{'time': 0.020153708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.020156181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.903" endtime="20201112 12:41:59.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.921" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:41:59.908" endtime="20201112 12:41:59.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.926" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:41:59.924" endtime="20201112 12:41:59.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.928" level="INFO">VALUE: [1.3609999999983358e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.1249999999976557e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0420000000031793e-06, 1.098000000001459e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.927" endtime="20201112 12:41:59.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.922" endtime="20201112 12:41:59.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.932" endtime="20201112 12:41:59.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.935" endtime="20201112 12:41:59.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.934" endtime="20201112 12:41:59.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.930" endtime="20201112 12:41:59.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.573" endtime="20201112 12:41:59.956"></status>
</kw>
<msg timestamp="20201112 12:41:59.957" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.964" endtime="20201112 12:41:59.975"></status>
</kw>
<msg timestamp="20201112 12:41:59.976" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.963" endtime="20201112 12:41:59.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.978" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.977" endtime="20201112 12:41:59.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.979" endtime="20201112 12:41:59.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.960" endtime="20201112 12:41:59.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.958" endtime="20201112 12:41:59.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.989" endtime="20201112 12:42:00.279"></status>
</kw>
<msg timestamp="20201112 12:42:00.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:41:59.987" endtime="20201112 12:42:00.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0198915, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019892861, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:00.283" endtime="20201112 12:42:00.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.292" endtime="20201112 12:42:00.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.984" endtime="20201112 12:42:00.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.983" endtime="20201112 12:42:00.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.299" level="INFO">${RESULT} = [{'time': 0.019892861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019895264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:00.295" endtime="20201112 12:42:00.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.313" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:00.300" endtime="20201112 12:42:00.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.318" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:00.317" endtime="20201112 12:42:00.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.320" level="INFO">VALUE: [1.3610000000018052e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0969999999985158e-06, 1.1120000000010288e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.319" endtime="20201112 12:42:00.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.314" endtime="20201112 12:42:00.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.324" endtime="20201112 12:42:00.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.328" endtime="20201112 12:42:00.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.326" endtime="20201112 12:42:00.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.322" endtime="20201112 12:42:00.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.957" endtime="20201112 12:42:00.348"></status>
</kw>
<msg timestamp="20201112 12:42:00.349" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.356" endtime="20201112 12:42:00.368"></status>
</kw>
<msg timestamp="20201112 12:42:00.368" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.355" endtime="20201112 12:42:00.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.369" endtime="20201112 12:42:00.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.372" endtime="20201112 12:42:00.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.352" endtime="20201112 12:42:00.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.350" endtime="20201112 12:42:00.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.381" endtime="20201112 12:42:00.661"></status>
</kw>
<msg timestamp="20201112 12:42:00.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020046139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.380" endtime="20201112 12:42:00.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020044792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020046139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.666" endtime="20201112 12:42:00.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.674" endtime="20201112 12:42:00.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.377" endtime="20201112 12:42:00.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.375" endtime="20201112 12:42:00.677"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.681" level="INFO">${RESULT} = [{'time': 0.020046139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.020048722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:00.678" endtime="20201112 12:42:00.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.696" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:00.682" endtime="20201112 12:42:00.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.701" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:00.700" endtime="20201112 12:42:00.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.703" level="INFO">VALUE: [1.3470000000022353e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0409999999967667e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 9.999999999975306e-07, 1.02800000000014e-06, 1.0830000000024154e-06, 1.0420000000031793e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0979999999979895e-06, 1.125000000001125e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.0560000000027492e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.702" endtime="20201112 12:42:00.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.697" endtime="20201112 12:42:00.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.707" endtime="20201112 12:42:00.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.711" endtime="20201112 12:42:00.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.709" endtime="20201112 12:42:00.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.705" endtime="20201112 12:42:00.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.349" endtime="20201112 12:42:00.731"></status>
</kw>
<msg timestamp="20201112 12:42:00.732" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.740" endtime="20201112 12:42:00.751"></status>
</kw>
<msg timestamp="20201112 12:42:00.752" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.738" endtime="20201112 12:42:00.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.754" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.753" endtime="20201112 12:42:00.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.755" endtime="20201112 12:42:00.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.735" endtime="20201112 12:42:00.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.733" endtime="20201112 12:42:00.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.764" endtime="20201112 12:42:01.054"></status>
</kw>
<msg timestamp="20201112 12:42:01.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019894486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.763" endtime="20201112 12:42:01.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019894486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019895847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.059" endtime="20201112 12:42:01.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.067" endtime="20201112 12:42:01.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.760" endtime="20201112 12:42:01.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.758" endtime="20201112 12:42:01.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.074" level="INFO">${RESULT} = [{'time': 0.019895847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3610000000018052e-06, 'source_diff': 1.3610000000018052e-06}, {'time': 0.019898583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:01.071" endtime="20201112 12:42:01.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.089" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:01.075" endtime="20201112 12:42:01.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.093" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:01.092" endtime="20201112 12:42:01.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.096" level="INFO">VALUE: [1.3610000000018052e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0550000000032755e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0550000000032755e-06, 1.068999999999376e-06, 1.0420000000031793e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:42:01.094" endtime="20201112 12:42:01.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.089" endtime="20201112 12:42:01.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.963" endtime="20201112 12:42:01.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.973" endtime="20201112 12:42:01.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.969" endtime="20201112 12:42:01.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.959" endtime="20201112 12:42:01.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.732" endtime="20201112 12:42:02.000"></status>
</kw>
<msg timestamp="20201112 12:42:02.001" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.023" endtime="20201112 12:42:02.042"></status>
</kw>
<msg timestamp="20201112 12:42:02.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.018" endtime="20201112 12:42:02.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.049" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.046" endtime="20201112 12:42:02.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.052" endtime="20201112 12:42:02.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.010" endtime="20201112 12:42:02.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.006" endtime="20201112 12:42:02.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.074" endtime="20201112 12:42:02.356"></status>
</kw>
<msg timestamp="20201112 12:42:02.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043776389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043777778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.072" endtime="20201112 12:42:02.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043776389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043777778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.361" endtime="20201112 12:42:02.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.369" endtime="20201112 12:42:02.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.068" endtime="20201112 12:42:02.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.063" endtime="20201112 12:42:02.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.376" level="INFO">${RESULT} = [{'time': 0.043777778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3890000000044145e-06, 'source_diff': 1.3890000000044145e-06}, {'time': 0.043780167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.373" endtime="20201112 12:42:02.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.391" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:02.377" endtime="20201112 12:42:02.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.395" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:02.394" endtime="20201112 12:42:02.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.398" level="INFO">VALUE: [1.3890000000044145e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0560000000062186e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0560000000062186e-06, 1.1249999999976557e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0700000000057885e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0700000000057885e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0700000000057885e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0420000000066487e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.1250000000045945e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0409999999932973e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.396" endtime="20201112 12:42:02.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.392" endtime="20201112 12:42:02.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.401" endtime="20201112 12:42:02.403"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.405" endtime="20201112 12:42:02.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.403" endtime="20201112 12:42:02.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.400" endtime="20201112 12:42:02.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.002" endtime="20201112 12:42:02.426"></status>
</kw>
<msg timestamp="20201112 12:42:02.426" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.434" endtime="20201112 12:42:02.445"></status>
</kw>
<msg timestamp="20201112 12:42:02.445" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.432" endtime="20201112 12:42:02.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.448" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.446" endtime="20201112 12:42:02.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.449" endtime="20201112 12:42:02.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.429" endtime="20201112 12:42:02.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.428" endtime="20201112 12:42:02.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.458" endtime="20201112 12:42:02.740"></status>
</kw>
<msg timestamp="20201112 12:42:02.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.457" endtime="20201112 12:42:02.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020224819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020226208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.744" endtime="20201112 12:42:02.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.753" endtime="20201112 12:42:02.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.454" endtime="20201112 12:42:02.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.452" endtime="20201112 12:42:02.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.760" level="INFO">${RESULT} = [{'time': 0.020226208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3889999999974756e-06, 'source_diff': 1.3889999999974756e-06}, {'time': 0.020228514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.756" endtime="20201112 12:42:02.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.774" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:02.761" endtime="20201112 12:42:02.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.779" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:02.778" endtime="20201112 12:42:02.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.781" level="INFO">VALUE: [1.3889999999974756e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.1109999999980857e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.02800000000014e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.070000000002319e-06, 9.860000000014302e-07, 1.000000000001e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0130000000010964e-06, 1.02800000000014e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.0419999999997098e-06, 1.0409999999967667e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.780" endtime="20201112 12:42:02.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.775" endtime="20201112 12:42:02.783"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.785" endtime="20201112 12:42:02.786"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.789" endtime="20201112 12:42:02.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.787" endtime="20201112 12:42:02.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.783" endtime="20201112 12:42:02.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.426" endtime="20201112 12:42:02.809"></status>
</kw>
<msg timestamp="20201112 12:42:02.809" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.817" endtime="20201112 12:42:02.829"></status>
</kw>
<msg timestamp="20201112 12:42:02.829" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.816" endtime="20201112 12:42:02.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.832" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.830" endtime="20201112 12:42:02.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.833" endtime="20201112 12:42:02.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.813" endtime="20201112 12:42:02.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.811" endtime="20201112 12:42:02.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.842" endtime="20201112 12:42:03.132"></status>
</kw>
<msg timestamp="20201112 12:42:03.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.841" endtime="20201112 12:42:03.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019866861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.136" endtime="20201112 12:42:03.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.145" endtime="20201112 12:42:03.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.838" endtime="20201112 12:42:03.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.836" endtime="20201112 12:42:03.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.151" level="INFO">${RESULT} = [{'time': 0.019866861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3749999999979057e-06, 'source_diff': 1.3749999999979057e-06}, {'time': 0.019869583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.148" endtime="20201112 12:42:03.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.167" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:03.152" endtime="20201112 12:42:03.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.171" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:03.170" endtime="20201112 12:42:03.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.173" level="INFO">VALUE: [1.3749999999979057e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0130000000010964e-06, 1.000000000001e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 9.999999999975306e-07, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.0420000000031793e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 9.999999999975306e-07, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.1110000000015552e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.084000000001889e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.172" endtime="20201112 12:42:03.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.168" endtime="20201112 12:42:03.175"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.177" endtime="20201112 12:42:03.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.181" endtime="20201112 12:42:03.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.179" endtime="20201112 12:42:03.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.175" endtime="20201112 12:42:03.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.810" endtime="20201112 12:42:03.201"></status>
</kw>
<msg timestamp="20201112 12:42:03.202" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.209" endtime="20201112 12:42:03.221"></status>
</kw>
<msg timestamp="20201112 12:42:03.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.208" endtime="20201112 12:42:03.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.224" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.222" endtime="20201112 12:42:03.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.225" endtime="20201112 12:42:03.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.205" endtime="20201112 12:42:03.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.203" endtime="20201112 12:42:03.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.234" endtime="20201112 12:42:03.524"></status>
</kw>
<msg timestamp="20201112 12:42:03.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.232" endtime="20201112 12:42:03.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019767375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019768736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.528" endtime="20201112 12:42:03.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.537" endtime="20201112 12:42:03.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.230" endtime="20201112 12:42:03.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.228" endtime="20201112 12:42:03.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.544" level="INFO">${RESULT} = [{'time': 0.019768736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019771278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.540" endtime="20201112 12:42:03.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.558" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:03.545" endtime="20201112 12:42:03.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.563" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:03.561" endtime="20201112 12:42:03.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.565" level="INFO">VALUE: [1.3609999999983358e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 9.720000000018603e-07, 1.0270000000006663e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.0550000000032755e-06, 1.02800000000014e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.564" endtime="20201112 12:42:03.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.559" endtime="20201112 12:42:03.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.569" endtime="20201112 12:42:03.570"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.572" endtime="20201112 12:42:03.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.571" endtime="20201112 12:42:03.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.567" endtime="20201112 12:42:03.593"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.202" endtime="20201112 12:42:03.593"></status>
</kw>
<msg timestamp="20201112 12:42:03.593" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.601" endtime="20201112 12:42:03.612"></status>
</kw>
<msg timestamp="20201112 12:42:03.612" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.600" endtime="20201112 12:42:03.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.615" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.613" endtime="20201112 12:42:03.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.616" endtime="20201112 12:42:03.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.597" endtime="20201112 12:42:03.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.595" endtime="20201112 12:42:03.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.625" endtime="20201112 12:42:03.914"></status>
</kw>
<msg timestamp="20201112 12:42:03.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.624" endtime="20201112 12:42:03.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019793111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.919" endtime="20201112 12:42:03.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.927" endtime="20201112 12:42:03.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.621" endtime="20201112 12:42:03.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.619" endtime="20201112 12:42:03.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.934" level="INFO">${RESULT} = [{'time': 0.019794486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019796875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.930" endtime="20201112 12:42:03.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.948" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:03.935" endtime="20201112 12:42:03.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.953" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:03.952" endtime="20201112 12:42:03.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.955" level="INFO">VALUE: [1.3750000000013751e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.01400000000057e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.0270000000006663e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0279999999966705e-06, 1.084000000001889e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.02800000000014e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.954" endtime="20201112 12:42:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.949" endtime="20201112 12:42:03.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.959" endtime="20201112 12:42:03.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.963" endtime="20201112 12:42:03.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.961" endtime="20201112 12:42:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.957" endtime="20201112 12:42:03.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.594" endtime="20201112 12:42:03.984"></status>
</kw>
<msg timestamp="20201112 12:42:03.984" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.992" endtime="20201112 12:42:04.003"></status>
</kw>
<msg timestamp="20201112 12:42:04.004" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.990" endtime="20201112 12:42:04.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.006" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.005" endtime="20201112 12:42:04.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.007" endtime="20201112 12:42:04.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.988" endtime="20201112 12:42:04.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.986" endtime="20201112 12:42:04.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.017" endtime="20201112 12:42:04.306"></status>
</kw>
<msg timestamp="20201112 12:42:04.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.015" endtime="20201112 12:42:04.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020378403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.311" endtime="20201112 12:42:04.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.319" endtime="20201112 12:42:04.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.012" endtime="20201112 12:42:04.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.010" endtime="20201112 12:42:04.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.327" level="INFO">${RESULT} = [{'time': 0.020378403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.020380931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:04.324" endtime="20201112 12:42:04.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.341" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:04.328" endtime="20201112 12:42:04.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.345" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:04.344" endtime="20201112 12:42:04.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.348" level="INFO">VALUE: [1.3609999999983358e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.1110000000015552e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0420000000031793e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0270000000006663e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.346" endtime="20201112 12:42:04.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.342" endtime="20201112 12:42:04.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.351" endtime="20201112 12:42:04.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.355" endtime="20201112 12:42:04.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.353" endtime="20201112 12:42:04.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.350" endtime="20201112 12:42:04.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.984" endtime="20201112 12:42:04.376"></status>
</kw>
<msg timestamp="20201112 12:42:04.376" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.384" endtime="20201112 12:42:04.395"></status>
</kw>
<msg timestamp="20201112 12:42:04.396" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.382" endtime="20201112 12:42:04.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.398" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.397" endtime="20201112 12:42:04.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.399" endtime="20201112 12:42:04.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.380" endtime="20201112 12:42:04.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.378" endtime="20201112 12:42:04.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.408" endtime="20201112 12:42:04.694"></status>
</kw>
<msg timestamp="20201112 12:42:04.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.407" endtime="20201112 12:42:04.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019936792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.699" endtime="20201112 12:42:04.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.707" endtime="20201112 12:42:04.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.404" endtime="20201112 12:42:04.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.402" endtime="20201112 12:42:04.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.714" level="INFO">${RESULT} = [{'time': 0.019938167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3750000000013751e-06, 'source_diff': 1.3750000000013751e-06}, {'time': 0.019940722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:04.711" endtime="20201112 12:42:04.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.729" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:04.715" endtime="20201112 12:42:04.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.733" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:04.732" endtime="20201112 12:42:04.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.736" level="INFO">VALUE: [1.3750000000013751e-06, 1.054999999999806e-06, 9.999999999975306e-07, 1.0410000000002362e-06, 1.02800000000014e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0270000000006663e-06, 1.1120000000010288e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.02800000000014e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.734" endtime="20201112 12:42:04.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.730" endtime="20201112 12:42:04.737"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.739" endtime="20201112 12:42:04.741"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.743" endtime="20201112 12:42:04.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.741" endtime="20201112 12:42:04.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.738" endtime="20201112 12:42:04.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.377" endtime="20201112 12:42:04.764"></status>
</kw>
<msg timestamp="20201112 12:42:04.764" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.772" endtime="20201112 12:42:04.783"></status>
</kw>
<msg timestamp="20201112 12:42:04.783" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.770" endtime="20201112 12:42:04.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.786" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.784" endtime="20201112 12:42:04.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.787" endtime="20201112 12:42:04.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.768" endtime="20201112 12:42:04.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.766" endtime="20201112 12:42:04.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.796" endtime="20201112 12:42:05.079"></status>
</kw>
<msg timestamp="20201112 12:42:05.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.795" endtime="20201112 12:42:05.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020094625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.084" endtime="20201112 12:42:05.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.092" endtime="20201112 12:42:05.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.792" endtime="20201112 12:42:05.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.790" endtime="20201112 12:42:05.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.099" level="INFO">${RESULT} = [{'time': 0.020094625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.020097222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:05.096" endtime="20201112 12:42:05.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.113" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:05.100" endtime="20201112 12:42:05.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.117" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:05.116" endtime="20201112 12:42:05.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.120" level="INFO">VALUE: [1.403000000000515e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0550000000032755e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.0270000000006663e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:42:05.118" endtime="20201112 12:42:05.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.114" endtime="20201112 12:42:05.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.123" endtime="20201112 12:42:05.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.127" endtime="20201112 12:42:05.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.125" endtime="20201112 12:42:05.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.122" endtime="20201112 12:42:05.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.765" endtime="20201112 12:42:05.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.463" endtime="20201112 12:42:05.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.157" endtime="20201112 12:42:05.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.156" endtime="20201112 12:42:05.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.154" endtime="20201112 12:42:05.178"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:56.393" endtime="20201112 12:42:05.178" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.189" endtime="20201112 12:42:05.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.187" endtime="20201112 12:42:05.209"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.222" endtime="20201112 12:42:05.238"></status>
</kw>
<msg timestamp="20201112 12:42:05.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.220" endtime="20201112 12:42:05.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.241" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.239" endtime="20201112 12:42:05.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.244" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:05.242" endtime="20201112 12:42:05.244"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.218" endtime="20201112 12:42:05.245"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.215" endtime="20201112 12:42:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.214" endtime="20201112 12:42:05.246"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:05.250" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:05.249" endtime="20201112 12:42:05.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.247" endtime="20201112 12:42:05.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.213" endtime="20201112 12:42:05.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.212" endtime="20201112 12:42:05.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.252" endtime="20201112 12:42:05.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.211" endtime="20201112 12:42:05.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.209" endtime="20201112 12:42:05.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.185" endtime="20201112 12:42:05.254"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.264" endtime="20201112 12:42:05.283"></status>
</kw>
<msg timestamp="20201112 12:42:05.283" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.263" endtime="20201112 12:42:05.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.286" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.285" endtime="20201112 12:42:05.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.287" endtime="20201112 12:42:05.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.260" endtime="20201112 12:42:05.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.258" endtime="20201112 12:42:05.290"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.292" endtime="20201112 12:42:05.294"></status>
</kw>
<msg timestamp="20201112 12:42:05.294" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:05.291" endtime="20201112 12:42:05.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.298" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:05.297" endtime="20201112 12:42:05.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.301" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:05.300" endtime="20201112 12:42:05.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.295" endtime="20201112 12:42:05.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.306" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:05.304" endtime="20201112 12:42:05.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.308" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:05.307" endtime="20201112 12:42:05.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.302" endtime="20201112 12:42:05.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.315" endtime="20201112 12:42:05.607"></status>
</kw>
<msg timestamp="20201112 12:42:05.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068749042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068752208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.313" endtime="20201112 12:42:05.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068749042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068752208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.611" endtime="20201112 12:42:05.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.619" endtime="20201112 12:42:05.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.311" endtime="20201112 12:42:05.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.309" endtime="20201112 12:42:05.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.626" level="INFO">${RESULT} = [{'time': 0.068752208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.165999999998892e-06, 'source_diff': 3.165999999998892e-06}, {'time': 0.068756472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:05.623" endtime="20201112 12:42:05.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.640" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:05.627" endtime="20201112 12:42:05.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.645" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:05.644" endtime="20201112 12:42:05.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.648" level="INFO">VALUE: [3.165999999998892e-06, 2.4029999999980456e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.278000000008329e-06, 2.2360000000026803e-06, 2.26400000000182e-06, 2.278000000008329e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.3060000000074687e-06, 2.2219999999961715e-06, 2.3060000000074687e-06, 2.3049999999941173e-06, 2.333000000007135e-06, 2.3060000000074687e-06, 2.278000000008329e-06, 2.278000000008329e-06, 2.2910000000014863e-06, 2.29200000000096e-06, 2.29200000000096e-06, 2.2499999999953113e-06, 2.2909999999876085e-06, 2.29200000000096e-06, 2.26400000000182e-06, 2.277999999994451e-06, 2.2910000000014863e-06, 2.277999999994451e-06, 2.29200000000096e-06, 2.277999999994451e-06, 2.2910000000014863e-06, 2.2499999999953113e-06, 2.278000000008329e-06, 2.278000000008329e-06, 2.277999999994451e-06, 2.26400000000182e-06, 2.2770000000088553e-06, 2.278000000008329e-06, 2.29200000000096e-06, 2.3049999999941173e-06, 2.305000000007995e-06, 2.29200000000096e-06, 2.2770000000088553e-06, 2.291999999987082e-06, 2.26400000000182e-06, 2.305000000007995e-06, 2.305999999993591e-06, 2.277999999994451e-06, 2.319000000000626e-06]</msg>
<status status="PASS" starttime="20201112 12:42:05.646" endtime="20201112 12:42:05.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.641" endtime="20201112 12:42:05.649"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.651" endtime="20201112 12:42:05.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.654" endtime="20201112 12:42:05.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.653" endtime="20201112 12:42:05.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.649" endtime="20201112 12:42:05.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.256" endtime="20201112 12:42:05.675"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:05.182" endtime="20201112 12:42:05.677" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.687" endtime="20201112 12:42:05.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.685" endtime="20201112 12:42:05.707"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.721" endtime="20201112 12:42:05.735"></status>
</kw>
<msg timestamp="20201112 12:42:05.736" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.719" endtime="20201112 12:42:05.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.738" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.737" endtime="20201112 12:42:05.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.741" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:05.739" endtime="20201112 12:42:05.742"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.716" endtime="20201112 12:42:05.742"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.713" endtime="20201112 12:42:05.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.712" endtime="20201112 12:42:05.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:05.747" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:05.746" endtime="20201112 12:42:05.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.744" endtime="20201112 12:42:05.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.711" endtime="20201112 12:42:05.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.711" endtime="20201112 12:42:05.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.749" endtime="20201112 12:42:05.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.709" endtime="20201112 12:42:05.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.708" endtime="20201112 12:42:05.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.684" endtime="20201112 12:42:05.752"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.762" endtime="20201112 12:42:05.799"></status>
</kw>
<msg timestamp="20201112 12:42:05.799" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.760" endtime="20201112 12:42:05.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.802" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.800" endtime="20201112 12:42:05.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.803" endtime="20201112 12:42:05.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.758" endtime="20201112 12:42:05.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.755" endtime="20201112 12:42:05.806"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.808" endtime="20201112 12:42:05.810"></status>
</kw>
<msg timestamp="20201112 12:42:05.810" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:05.807" endtime="20201112 12:42:05.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.814" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:05.813" endtime="20201112 12:42:05.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.817" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:05.816" endtime="20201112 12:42:05.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.811" endtime="20201112 12:42:05.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.821" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:05.820" endtime="20201112 12:42:05.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.823" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:05.823" endtime="20201112 12:42:05.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.818" endtime="20201112 12:42:05.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.832" endtime="20201112 12:42:06.118"></status>
</kw>
<msg timestamp="20201112 12:42:06.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068092611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068105986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.829" endtime="20201112 12:42:06.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.068092611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.068105986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.122" endtime="20201112 12:42:06.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.131" endtime="20201112 12:42:06.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.827" endtime="20201112 12:42:06.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.825" endtime="20201112 12:42:06.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.138" level="INFO">${RESULT} = [{'time': 0.068105986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3374999999996029e-05, 'source_diff': 1.3374999999996029e-05}, {'time': 0.068485944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:06.134" endtime="20201112 12:42:06.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.153" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:06.139" endtime="20201112 12:42:06.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.591" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:07.589" endtime="20201112 12:42:07.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.596" level="INFO">VALUE: [1.3374999999996029e-05, 1.3222000000007172e-05, 1.3194999999993628e-05, 1.3180000000001524e-05, 1.3180000000001524e-05, 1.3221999999993295e-05, 1.3221999999993295e-05, 1.3278000000005452e-05, 1.3195000000007506e-05, 1.3208000000000664e-05, 1.3221999999993295e-05, 1.3222000000007172e-05, 1.3223000000006646e-05, 1.3221999999993295e-05, 1.3209000000000137e-05, 1.3181000000000997e-05, 1.3221999999993295e-05, 1.3235999999999803e-05, 1.3180000000001524e-05, 1.3222000000007172e-05, 1.3209000000000137e-05, 1.3194999999993628e-05, 1.3209000000000137e-05, 1.3208000000000664e-05, 1.3193999999994155e-05, 1.3194999999993628e-05, 1.3193999999994155e-05, 1.320899999998626e-05, 1.3194000000008033e-05, 1.3180000000001524e-05, 1.3194000000008033e-05, 1.318099999998712e-05, 1.3208000000000664e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3208000000000664e-05, 1.3194999999993628e-05, 1.3209000000000137e-05, 1.3208000000000664e-05, 1.3235999999999803e-05, 1.3223000000006646e-05, 1.3194999999993628e-05, 1.3208000000000664e-05, 1.3209000000000137e-05, 1.3138999999995349e-05, 1.3207999999986786e-05, 1.3222000000007172e-05, 1.3208000000000664e-05, 1.3193999999994155e-05, 1.3194999999993628e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.593" endtime="20201112 12:42:07.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.583" endtime="20201112 12:42:07.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.603" endtime="20201112 12:42:07.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.610" endtime="20201112 12:42:07.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.607" endtime="20201112 12:42:07.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.600" endtime="20201112 12:42:07.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.753" endtime="20201112 12:42:07.634"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:05.680" endtime="20201112 12:42:07.636" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.650" endtime="20201112 12:42:07.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.647" endtime="20201112 12:42:07.673"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.702" endtime="20201112 12:42:07.719"></status>
</kw>
<msg timestamp="20201112 12:42:07.720" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.697" endtime="20201112 12:42:07.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.723" endtime="20201112 12:42:07.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.732" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:07.728" endtime="20201112 12:42:07.732"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:07.691" endtime="20201112 12:42:07.734"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:07.686" endtime="20201112 12:42:07.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.684" endtime="20201112 12:42:07.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:07.743" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:07.741" endtime="20201112 12:42:07.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.737" endtime="20201112 12:42:07.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.682" endtime="20201112 12:42:07.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.680" endtime="20201112 12:42:07.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.745" endtime="20201112 12:42:07.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.678" endtime="20201112 12:42:07.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.674" endtime="20201112 12:42:07.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.644" endtime="20201112 12:42:07.748"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.756" endtime="20201112 12:42:07.842"></status>
</kw>
<msg timestamp="20201112 12:42:07.843" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.755" endtime="20201112 12:42:07.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.845" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.844" endtime="20201112 12:42:07.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.846" endtime="20201112 12:42:07.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.752" endtime="20201112 12:42:07.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.750" endtime="20201112 12:42:07.849"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.851" endtime="20201112 12:42:07.852"></status>
</kw>
<msg timestamp="20201112 12:42:07.853" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:07.849" endtime="20201112 12:42:07.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.857" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:07.856" endtime="20201112 12:42:07.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.859" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:07.858" endtime="20201112 12:42:07.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.853" endtime="20201112 12:42:07.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.863" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:07.862" endtime="20201112 12:42:07.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.865" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:07.864" endtime="20201112 12:42:07.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.860" endtime="20201112 12:42:07.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.872" endtime="20201112 12:42:08.172"></status>
</kw>
<msg timestamp="20201112 12:42:08.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.098667403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098692556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.871" endtime="20201112 12:42:08.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.098667403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.098692556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.176" endtime="20201112 12:42:08.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.184" endtime="20201112 12:42:08.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.868" endtime="20201112 12:42:08.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.867" endtime="20201112 12:42:08.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.191" level="INFO">${RESULT} = [{'time': 0.098692556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.515299999999998e-05, 'source_diff': 2.515299999999998e-05}, {'time': 0.100058792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:08.187" endtime="20201112 12:42:08.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:08.204" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:08.192" endtime="20201112 12:42:08.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.209" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:08.208" endtime="20201112 12:42:08.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.211" level="INFO">VALUE: [2.515299999999998e-05, 2.497299999999758e-05, 2.4985999999990738e-05, 2.4971999999998107e-05, 2.5014000000003755e-05, 2.4999999999997247e-05, 2.4999999999997247e-05, 2.497299999999758e-05, 2.5000000000011124e-05, 2.4971999999998107e-05, 2.4986000000004616e-05, 2.4971999999998107e-05, 2.4986000000004616e-05, 2.4985999999990738e-05, 2.4971999999998107e-05, 2.4999999999997247e-05, 2.4986000000004616e-05, 2.4986000000004616e-05, 2.4985999999990738e-05, 2.4986000000004616e-05, 2.5014000000017633e-05, 2.4986000000004616e-05, 2.4999999999997247e-05, 2.4999999999997247e-05, 2.4972000000011985e-05, 2.4972000000011985e-05, 2.4986000000004616e-05, 2.498700000000409e-05, 2.4957999999991598e-05, 2.5014000000017633e-05, 2.4999999999997247e-05, 2.498599999997686e-05, 2.5013999999989878e-05, 2.502700000001079e-05, 2.5013999999989878e-05, 2.4958000000019354e-05, 2.5013999999989878e-05, 2.497199999998423e-05, 2.5013999999989878e-05, 2.4986000000004616e-05, 2.4943999999998967e-05, 2.4972000000011985e-05, 2.5056000000023282e-05, 2.4986000000004616e-05, 2.4999999999997247e-05, 2.4958000000019354e-05, 2.5042000000002895e-05, 2.4986000000004616e-05, 2.4999999999997247e-05, 2.4999999999997247e-05]</msg>
<status status="PASS" starttime="20201112 12:42:08.210" endtime="20201112 12:42:08.212"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.205" endtime="20201112 12:42:08.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.214" endtime="20201112 12:42:08.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.218" endtime="20201112 12:42:08.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.216" endtime="20201112 12:42:08.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.213" endtime="20201112 12:42:08.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.748" endtime="20201112 12:42:08.238"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:07.639" endtime="20201112 12:42:08.239" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.246" endtime="20201112 12:42:08.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.245" endtime="20201112 12:42:08.266"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.279" endtime="20201112 12:42:08.293"></status>
</kw>
<msg timestamp="20201112 12:42:08.294" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.277" endtime="20201112 12:42:08.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.296" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.295" endtime="20201112 12:42:08.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.299" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:08.297" endtime="20201112 12:42:08.300"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:08.275" endtime="20201112 12:42:08.300"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:08.272" endtime="20201112 12:42:08.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.271" endtime="20201112 12:42:08.301"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:08.305" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:08.304" endtime="20201112 12:42:08.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.302" endtime="20201112 12:42:08.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.270" endtime="20201112 12:42:08.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.270" endtime="20201112 12:42:08.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.307" endtime="20201112 12:42:08.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.268" endtime="20201112 12:42:08.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.267" endtime="20201112 12:42:08.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.243" endtime="20201112 12:42:08.309"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.318" endtime="20201112 12:42:08.338"></status>
</kw>
<msg timestamp="20201112 12:42:08.338" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.317" endtime="20201112 12:42:08.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.341" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.339" endtime="20201112 12:42:08.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.342" endtime="20201112 12:42:08.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.314" endtime="20201112 12:42:08.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.312" endtime="20201112 12:42:08.344"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.346" endtime="20201112 12:42:08.348"></status>
</kw>
<msg timestamp="20201112 12:42:08.348" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:08.345" endtime="20201112 12:42:08.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.352" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:08.351" endtime="20201112 12:42:08.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.354" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:08.353" endtime="20201112 12:42:08.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.349" endtime="20201112 12:42:08.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.359" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:08.358" endtime="20201112 12:42:08.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.361" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:08.360" endtime="20201112 12:42:08.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.356" endtime="20201112 12:42:08.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.368" endtime="20201112 12:42:08.651"></status>
</kw>
<msg timestamp="20201112 12:42:08.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064798639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.367" endtime="20201112 12:42:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064797903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064798639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.655" endtime="20201112 12:42:08.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.663" endtime="20201112 12:42:08.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.364" endtime="20201112 12:42:08.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.362" endtime="20201112 12:42:08.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.670" level="INFO">${RESULT} = [{'time': 0.064798639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.360000000011802e-07, 'source_diff': 7.360000000011802e-07}, {'time': 0.064802931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:08.667" endtime="20201112 12:42:08.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:08.683" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:08.671" endtime="20201112 12:42:08.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.688" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:08.687" endtime="20201112 12:42:08.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.690" level="INFO">VALUE: [7.360000000011802e-07, 5.559999999987797e-07, 5.420000000061487e-07, 5.829999999984459e-07, 5.829999999984459e-07, 5.41000000006675e-07, 5.54999999999306e-07, 5.829999999984459e-07, 5.839999999979195e-07, 5.839999999979195e-07, 5.559999999987797e-07, 5.419999999922709e-07, 5.830000000123237e-07, 5.409999999927972e-07, 5.420000000061487e-07, 5.829999999984459e-07, 5.839999999979195e-07, 5.840000000117973e-07, 5.839999999979195e-07, 5.54999999999306e-07, 5.54999999999306e-07, 5.41000000006675e-07, 5.839999999979195e-07, 5.420000000061487e-07, 5.559999999987797e-07, 5.839999999979195e-07, 5.829999999984459e-07, 5.420000000061487e-07, 5.829999999984459e-07, 5.54999999999306e-07, 5.829999999984459e-07, 5.829999999984459e-07, 5.839999999979195e-07, 5.420000000061487e-07, 5.839999999979195e-07, 5.41000000006675e-07, 5.830000000123237e-07, 5.829999999984459e-07, 5.829999999984459e-07, 5.420000000061487e-07, 5.54999999999306e-07, 5.830000000123237e-07, 5.54999999999306e-07, 5.54999999999306e-07, 5.559999999987797e-07, 5.839999999979195e-07, 5.839999999979195e-07, 5.420000000061487e-07, 5.829999999984459e-07, 5.829999999984459e-07]</msg>
<status status="PASS" starttime="20201112 12:42:08.689" endtime="20201112 12:42:08.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.684" endtime="20201112 12:42:08.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.693" endtime="20201112 12:42:08.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.697" endtime="20201112 12:42:08.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.695" endtime="20201112 12:42:08.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.692" endtime="20201112 12:42:08.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.310" endtime="20201112 12:42:08.717"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:08.241" endtime="20201112 12:42:08.718" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.725" endtime="20201112 12:42:08.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.724" endtime="20201112 12:42:08.745"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.759" endtime="20201112 12:42:08.773"></status>
</kw>
<msg timestamp="20201112 12:42:08.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.757" endtime="20201112 12:42:08.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.774" endtime="20201112 12:42:08.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.779" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:08.777" endtime="20201112 12:42:08.779"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:08.754" endtime="20201112 12:42:08.780"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:08.752" endtime="20201112 12:42:08.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.751" endtime="20201112 12:42:08.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:08.785" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:08.784" endtime="20201112 12:42:08.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.782" endtime="20201112 12:42:08.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.750" endtime="20201112 12:42:08.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.749" endtime="20201112 12:42:08.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.786" endtime="20201112 12:42:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.748" endtime="20201112 12:42:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.746" endtime="20201112 12:42:08.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.723" endtime="20201112 12:42:08.789"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.798" endtime="20201112 12:42:08.836"></status>
</kw>
<msg timestamp="20201112 12:42:08.837" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.796" endtime="20201112 12:42:08.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.839" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.838" endtime="20201112 12:42:08.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.840" endtime="20201112 12:42:08.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.794" endtime="20201112 12:42:08.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.792" endtime="20201112 12:42:08.843"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.845" endtime="20201112 12:42:08.846"></status>
</kw>
<msg timestamp="20201112 12:42:08.847" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:08.843" endtime="20201112 12:42:08.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.851" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:08.850" endtime="20201112 12:42:08.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.853" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:08.852" endtime="20201112 12:42:08.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.848" endtime="20201112 12:42:08.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.858" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:08.857" endtime="20201112 12:42:08.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.860" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:08.859" endtime="20201112 12:42:08.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.854" endtime="20201112 12:42:08.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.868" endtime="20201112 12:42:09.159"></status>
</kw>
<msg timestamp="20201112 12:42:09.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065444833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065446389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.865" endtime="20201112 12:42:09.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065444833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065446389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.163" endtime="20201112 12:42:09.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.171" endtime="20201112 12:42:09.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.863" endtime="20201112 12:42:09.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.861" endtime="20201112 12:42:09.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.178" level="INFO">${RESULT} = [{'time': 0.065446389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.065828472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:09.174" endtime="20201112 12:42:09.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:09.193" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:09.178" endtime="20201112 12:42:09.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.197" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:09.196" endtime="20201112 12:42:09.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.200" level="INFO">VALUE: [1.5559999999997798e-06, 1.4440000000032205e-06, 1.4579999999958515e-06, 1.4859999999949913e-06, 1.4720000000023603e-06, 1.4579999999958515e-06, 1.4579999999958515e-06, 1.4589999999953251e-06, 1.4589999999953251e-06, 1.4589999999953251e-06, 1.4170000000035543e-06, 1.486999999994465e-06, 1.4440000000032205e-06, 1.514000000008009e-06, 1.4160000000040807e-06, 1.459000000009203e-06, 1.4299999999967117e-06, 1.4999999999876223e-06, 1.4300000000105895e-06, 1.4589999999953251e-06, 1.5420000000071488e-06, 1.4440000000032205e-06, 1.4589999999953251e-06, 1.4439999999893427e-06, 1.459000000009203e-06, 1.4580000000097293e-06, 1.4580000000097293e-06, 1.4720000000023603e-06, 1.4579999999958515e-06, 1.4579999999958515e-06, 1.473000000001834e-06, 1.4450000000026941e-06, 1.473000000001834e-06, 1.4589999999953251e-06, 1.4299999999967117e-06, 1.4580000000097293e-06, 1.459000000009203e-06, 1.459000000009203e-06, 1.4440000000032205e-06, 1.4579999999958515e-06, 1.459000000009203e-06, 1.4579999999958515e-06, 1.4589999999953251e-06, 1.4719999999884825e-06, 1.4720000000023603e-06, 1.459000000009203e-06, 1.4579999999958515e-06, 1.4450000000026941e-06, 1.4720000000023603e-06, 1.4579999999958515e-06]</msg>
<status status="PASS" starttime="20201112 12:42:09.199" endtime="20201112 12:42:09.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.194" endtime="20201112 12:42:09.201"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.203" endtime="20201112 12:42:09.204"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.206" endtime="20201112 12:42:09.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.205" endtime="20201112 12:42:09.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.201" endtime="20201112 12:42:09.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.790" endtime="20201112 12:42:09.227"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:08.720" endtime="20201112 12:42:09.228" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.236" endtime="20201112 12:42:09.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.235" endtime="20201112 12:42:09.256"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.270" endtime="20201112 12:42:09.283"></status>
</kw>
<msg timestamp="20201112 12:42:09.284" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.267" endtime="20201112 12:42:09.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.286" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.285" endtime="20201112 12:42:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.290" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:09.287" endtime="20201112 12:42:09.290"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:09.265" endtime="20201112 12:42:09.291"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:09.262" endtime="20201112 12:42:09.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.261" endtime="20201112 12:42:09.291"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:09.295" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:09.294" endtime="20201112 12:42:09.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.292" endtime="20201112 12:42:09.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.260" endtime="20201112 12:42:09.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.260" endtime="20201112 12:42:09.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.297" endtime="20201112 12:42:09.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.258" endtime="20201112 12:42:09.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.257" endtime="20201112 12:42:09.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.233" endtime="20201112 12:42:09.299"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.309" endtime="20201112 12:42:09.396"></status>
</kw>
<msg timestamp="20201112 12:42:09.396" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.307" endtime="20201112 12:42:09.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.399" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.397" endtime="20201112 12:42:09.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.400" endtime="20201112 12:42:09.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.304" endtime="20201112 12:42:09.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.302" endtime="20201112 12:42:09.402"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.404" endtime="20201112 12:42:09.406"></status>
</kw>
<msg timestamp="20201112 12:42:09.406" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 12:42:09.403" endtime="20201112 12:42:09.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.410" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:09.409" endtime="20201112 12:42:09.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.412" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:09.411" endtime="20201112 12:42:09.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.407" endtime="20201112 12:42:09.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.417" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:09.416" endtime="20201112 12:42:09.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.419" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:09.418" endtime="20201112 12:42:09.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.413" endtime="20201112 12:42:09.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.426" endtime="20201112 12:42:09.717"></status>
</kw>
<msg timestamp="20201112 12:42:09.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066062986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066065458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.424" endtime="20201112 12:42:09.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066062986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066065458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.721" endtime="20201112 12:42:09.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.730" endtime="20201112 12:42:09.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.422" endtime="20201112 12:42:09.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.420" endtime="20201112 12:42:09.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.736" level="INFO">${RESULT} = [{'time': 0.066065458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4719999999894826e-06, 'source_diff': 2.4719999999894826e-06}, {'time': 0.067435625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:09.733" endtime="20201112 12:42:09.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:09.750" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:09.737" endtime="20201112 12:42:09.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.754" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:09.753" endtime="20201112 12:42:09.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.757" level="INFO">VALUE: [2.4719999999894826e-06, 2.4440000000042206e-06, 2.473000000002834e-06, 2.3749999999989058e-06, 2.3619999999918706e-06, 2.3750000000127836e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.3890000000054146e-06, 2.3889999999915368e-06, 2.4170000000045544e-06, 2.3889999999915368e-06, 2.3889999999915368e-06, 2.3889999999915368e-06, 2.29200000000096e-06, 2.3749999999989058e-06, 2.4439999999903428e-06, 2.3889999999915368e-06, 2.4439999999903428e-06, 2.3479999999992396e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.4309999999971854e-06, 2.3889999999915368e-06, 2.3890000000054146e-06, 2.333000000007135e-06, 2.3750000000127836e-06, 2.4029999999980456e-06, 2.4029999999980456e-06, 2.346999999999766e-06, 2.3889999999915368e-06, 2.3889999999915368e-06, 2.333000000007135e-06, 2.4029999999980456e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3890000000054146e-06, 2.401999999998572e-06, 2.4169999999906766e-06, 2.3749999999989058e-06, 2.401999999998572e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.3890000000054146e-06, 2.401999999984694e-06, 2.3889999999915368e-06, 2.3749999999989058e-06, 2.4160000000050808e-06, 2.3749999999989058e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201112 12:42:09.755" endtime="20201112 12:42:09.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.750" endtime="20201112 12:42:09.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.760" endtime="20201112 12:42:09.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.763" endtime="20201112 12:42:09.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.761" endtime="20201112 12:42:09.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.758" endtime="20201112 12:42:09.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.300" endtime="20201112 12:42:09.783"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:09.230" endtime="20201112 12:42:09.784" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:47.045" endtime="20201112 12:42:09.792"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.859" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:09.867" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:10.967" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:09.857" endtime="20201112 12:42:10.968"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.971" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:10.969" endtime="20201112 12:42:10.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.856" endtime="20201112 12:42:10.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.973" endtime="20201112 12:42:11.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.972" endtime="20201112 12:42:11.159"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.171" endtime="20201112 12:42:11.186"></status>
</kw>
<msg timestamp="20201112 12:42:11.186" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.170" endtime="20201112 12:42:11.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.187" endtime="20201112 12:42:11.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.192" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:11.190" endtime="20201112 12:42:11.192"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:11.167" endtime="20201112 12:42:11.192"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:11.165" endtime="20201112 12:42:11.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.163" endtime="20201112 12:42:11.193"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:11.198" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:11.196" endtime="20201112 12:42:11.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.194" endtime="20201112 12:42:11.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.163" endtime="20201112 12:42:11.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.162" endtime="20201112 12:42:11.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.200" endtime="20201112 12:42:11.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.161" endtime="20201112 12:42:11.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.203" endtime="20201112 12:42:11.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.159" endtime="20201112 12:42:11.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.854" endtime="20201112 12:42:11.205"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.211" endtime="20201112 12:42:11.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.210" endtime="20201112 12:42:11.231"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.244" endtime="20201112 12:42:11.258"></status>
</kw>
<msg timestamp="20201112 12:42:11.258" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.242" endtime="20201112 12:42:11.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.261" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.259" endtime="20201112 12:42:11.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.264" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:11.262" endtime="20201112 12:42:11.264"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:11.240" endtime="20201112 12:42:11.265"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:11.237" endtime="20201112 12:42:11.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.236" endtime="20201112 12:42:11.265"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:11.269" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:11.269" endtime="20201112 12:42:11.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.266" endtime="20201112 12:42:11.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.235" endtime="20201112 12:42:11.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.235" endtime="20201112 12:42:11.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.271" endtime="20201112 12:42:11.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.233" endtime="20201112 12:42:11.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.232" endtime="20201112 12:42:11.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.208" endtime="20201112 12:42:11.274"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.285" endtime="20201112 12:42:11.302"></status>
</kw>
<msg timestamp="20201112 12:42:11.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.283" endtime="20201112 12:42:11.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.305" endtime="20201112 12:42:11.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.310" endtime="20201112 12:42:11.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.280" endtime="20201112 12:42:11.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.278" endtime="20201112 12:42:11.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.329" endtime="20201112 12:42:11.631"></status>
</kw>
<msg timestamp="20201112 12:42:11.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067750736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067753389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.326" endtime="20201112 12:42:11.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067750736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067753389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.635" endtime="20201112 12:42:11.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.643" endtime="20201112 12:42:11.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.320" endtime="20201112 12:42:11.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.317" endtime="20201112 12:42:11.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.650" level="INFO">${RESULT} = [{'time': 0.067753389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999913567e-06, 'source_diff': 2.6529999999913567e-06}, {'time': 0.067757347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:11.647" endtime="20201112 12:42:11.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:11.663" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:11.651" endtime="20201112 12:42:11.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.668" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:11.667" endtime="20201112 12:42:11.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.670" level="INFO">VALUE: [2.6529999999913567e-06, 2.124999999991717e-06, 1.7360000000021802e-06, 2.3200000000000998e-06, 1.5409999999937973e-06, 2.3890000000054146e-06, 1.582999999999446e-06, 2.3610000000062747e-06, 1.596999999992077e-06, 2.3749999999989058e-06, 2.1389999999982257e-06, 1.7920000000004599e-06, 1.76400000000132e-06, 2.333000000007135e-06, 1.5550000000003061e-06, 2.3749999999989058e-06, 2.082999999999946e-06, 1.5559999999997798e-06, 1.473000000001834e-06, 1.541999999993271e-06, 1.9020000000119497e-06, 2.3749999999989058e-06, 2.069999999992911e-06, 1.5559999999997798e-06, 2.3750000000127836e-06, 2.0979999999920507e-06, 1.7780000000078289e-06, 2.082999999999946e-06, 2.2499999999953113e-06, 1.5559999999997798e-06, 1.4720000000023603e-06, 2.360999999992397e-06, 2.082999999999946e-06, 1.7920000000004599e-06, 2.082999999999946e-06, 2.3200000000000998e-06, 1.5550000000003061e-06, 1.4579999999958515e-06, 1.9029999999975455e-06, 1.8890000000049145e-06, 1.9029999999975455e-06, 1.4720000000023603e-06, 1.4720000000023603e-06, 2.3749999999989058e-06, 1.5559999999997798e-06, 2.3610000000062747e-06, 1.777999999993951e-06, 1.5700000000062886e-06, 2.4020000000124497e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201112 12:42:11.669" endtime="20201112 12:42:11.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.664" endtime="20201112 12:42:11.671"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.674" endtime="20201112 12:42:11.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.677" endtime="20201112 12:42:11.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.676" endtime="20201112 12:42:11.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.672" endtime="20201112 12:42:11.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.276" endtime="20201112 12:42:11.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.275" endtime="20201112 12:42:11.698"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.706" endtime="20201112 12:42:11.721"></status>
</kw>
<msg timestamp="20201112 12:42:11.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.705" endtime="20201112 12:42:11.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.722" endtime="20201112 12:42:11.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.725" endtime="20201112 12:42:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.702" endtime="20201112 12:42:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.700" endtime="20201112 12:42:11.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.734" endtime="20201112 12:42:12.023"></status>
</kw>
<msg timestamp="20201112 12:42:12.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.732" endtime="20201112 12:42:12.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022293708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022297083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.028" endtime="20201112 12:42:12.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.036" endtime="20201112 12:42:12.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.730" endtime="20201112 12:42:12.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.728" endtime="20201112 12:42:12.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.042" level="INFO">${RESULT} = [{'time': 0.022297083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.022302125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.039" endtime="20201112 12:42:12.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.056" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:12.043" endtime="20201112 12:42:12.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.061" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.060" endtime="20201112 12:42:12.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.063" level="INFO">VALUE: [3.374999999999906e-06, 3.0139999999991007e-06, 3.3059999999980605e-06, 2.333000000000196e-06, 2.55600000000078e-06, 3.2639999999993508e-06, 2.333000000000196e-06, 2.7639999999988507e-06, 2.6110000000030553e-06, 2.55600000000078e-06, 3.2779999999989207e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 2.55600000000078e-06, 2.55600000000078e-06, 2.5549999999978368e-06, 2.55600000000078e-06, 2.5549999999978368e-06, 3.249999999999781e-06, 2.5559999999973104e-06, 2.55600000000078e-06, 2.77800000000189e-06, 3.2770000000029165e-06, 2.5549999999978368e-06, 2.569000000000876e-06, 2.3200000000000998e-06, 2.346999999999766e-06, 2.5700000000003498e-06, 2.5550000000013062e-06, 2.7919999999979905e-06, 3.0279999999986706e-06, 3.2639999999993508e-06, 3.249999999999781e-06, 2.540999999998267e-06, 2.8200000000006e-06, 2.3339999999996697e-06, 3.29200000000196e-06, 3.2639999999993508e-06, 2.7910000000019863e-06, 2.5550000000013062e-06, 2.3200000000000998e-06, 3.2639999999993508e-06, 3.2919999999984906e-06, 2.5419999999977405e-06, 3.2779999999989207e-06, 2.5699999999968803e-06, 2.7910000000019863e-06, 3.26400000000282e-06, 3.262999999999877e-06, 2.5000000000025002e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.062" endtime="20201112 12:42:12.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.057" endtime="20201112 12:42:12.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.067" endtime="20201112 12:42:12.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.070" endtime="20201112 12:42:12.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.069" endtime="20201112 12:42:12.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.065" endtime="20201112 12:42:12.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.699" endtime="20201112 12:42:12.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.698" endtime="20201112 12:42:12.091"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.099" endtime="20201112 12:42:12.113"></status>
</kw>
<msg timestamp="20201112 12:42:12.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.098" endtime="20201112 12:42:12.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.115" endtime="20201112 12:42:12.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.118" endtime="20201112 12:42:12.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.095" endtime="20201112 12:42:12.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.093" endtime="20201112 12:42:12.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.128" endtime="20201112 12:42:12.417"></status>
</kw>
<msg timestamp="20201112 12:42:12.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.126" endtime="20201112 12:42:12.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021536611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.421" endtime="20201112 12:42:12.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.429" endtime="20201112 12:42:12.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.124" endtime="20201112 12:42:12.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.122" endtime="20201112 12:42:12.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.436" level="INFO">${RESULT} = [{'time': 0.021536611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999999741e-06, 'source_diff': 4.541999999999741e-06}, {'time': 0.021542514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.432" endtime="20201112 12:42:12.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.449" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:12.437" endtime="20201112 12:42:12.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.453" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.452" endtime="20201112 12:42:12.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.456" level="INFO">VALUE: [4.541999999999741e-06, 3.971999999997922e-06, 3.763999999999851e-06, 3.500000000000031e-06, 4.445000000002225e-06, 4.4449999999987555e-06, 4.222000000001641e-06, 3.5139999999996008e-06, 3.736000000000711e-06, 4.223000000001115e-06, 3.679999999998962e-06, 3.7219999999976716e-06, 4.166999999999366e-06, 4.443999999999282e-06, 3.4999999999965614e-06, 4.207999999998602e-06, 3.5279999999991707e-06, 4.222000000001641e-06, 3.513000000000127e-06, 4.209000000001545e-06, 4.222000000001641e-06, 4.221999999998172e-06, 3.736000000000711e-06, 3.750000000000281e-06, 4.208000000002071e-06, 3.986999999996965e-06, 3.500000000000031e-06, 4.430999999999186e-06, 4.207999999998602e-06, 4.443999999999282e-06, 3.486000000000461e-06, 4.443999999999282e-06, 3.5139999999996008e-06, 4.222000000001641e-06, 3.832999999998227e-06, 3.5139999999996008e-06, 4.207999999998602e-06, 3.5139999999996008e-06, 4.457999999998852e-06, 3.5279999999991707e-06, 3.500000000000031e-06, 4.193999999999032e-06, 3.736000000000711e-06, 3.500000000000031e-06, 3.736000000000711e-06, 4.208000000002071e-06, 4.236000000001211e-06, 4.222000000001641e-06, 3.750000000000281e-06, 3.750000000000281e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.454" endtime="20201112 12:42:12.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.450" endtime="20201112 12:42:12.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.459" endtime="20201112 12:42:12.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.463" endtime="20201112 12:42:12.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.461" endtime="20201112 12:42:12.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.458" endtime="20201112 12:42:12.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.092" endtime="20201112 12:42:12.483"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.091" endtime="20201112 12:42:12.483"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.492" endtime="20201112 12:42:12.506"></status>
</kw>
<msg timestamp="20201112 12:42:12.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.490" endtime="20201112 12:42:12.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.507" endtime="20201112 12:42:12.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.510" endtime="20201112 12:42:12.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.488" endtime="20201112 12:42:12.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.486" endtime="20201112 12:42:12.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.520" endtime="20201112 12:42:12.815"></status>
</kw>
<msg timestamp="20201112 12:42:12.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021387694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.518" endtime="20201112 12:42:12.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021387694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.825" endtime="20201112 12:42:12.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.844" endtime="20201112 12:42:12.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.516" endtime="20201112 12:42:12.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.514" endtime="20201112 12:42:12.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.860" level="INFO">${RESULT} = [{'time': 0.021393208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.514000000001601e-06, 'source_diff': 5.514000000001601e-06}, {'time': 0.021400194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:12.852" endtime="20201112 12:42:12.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:12.891" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:12.862" endtime="20201112 12:42:12.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.901" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:12.899" endtime="20201112 12:42:12.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.905" level="INFO">VALUE: [5.514000000001601e-06, 4.930000000000212e-06, 5.375000000001906e-06, 4.721999999998672e-06, 4.4449999999987555e-06, 4.443999999999282e-06, 4.445000000002225e-06, 4.6949999999990055e-06, 4.4449999999987555e-06, 4.653000000000296e-06, 4.443999999999282e-06, 5.388000000002002e-06, 5.360999999998867e-06, 5.167000000000366e-06, 4.458999999998325e-06, 5.180999999999936e-06, 4.472000000001891e-06, 4.458999999998325e-06, 5.153000000000796e-06, 4.457999999998852e-06, 4.443999999999282e-06, 4.679999999999962e-06, 5.389000000001476e-06, 5.403000000001046e-06, 4.500000000001031e-06, 4.389000000000476e-06, 5.402000000001572e-06, 4.4449999999987555e-06, 5.417000000000616e-06, 5.389000000001476e-06, 4.458999999998325e-06, 4.693999999999532e-06, 5.152000000001322e-06, 4.443999999999282e-06, 4.4449999999987555e-06, 4.679999999999962e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.3889999999980065e-06, 5.457999999999852e-06, 5.403000000001046e-06, 4.487000000000935e-06, 4.445000000002225e-06, 4.680999999999436e-06, 4.430999999999186e-06, 5.152000000001322e-06, 5.194000000000032e-06, 4.445000000002225e-06, 4.375000000000906e-06, 4.694000000003001e-06]</msg>
<status status="PASS" starttime="20201112 12:42:12.903" endtime="20201112 12:42:12.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.893" endtime="20201112 12:42:12.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.908" endtime="20201112 12:42:12.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.912" endtime="20201112 12:42:12.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.910" endtime="20201112 12:42:12.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.907" endtime="20201112 12:42:12.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.484" endtime="20201112 12:42:12.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.484" endtime="20201112 12:42:12.933"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.942" endtime="20201112 12:42:12.956"></status>
</kw>
<msg timestamp="20201112 12:42:12.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.940" endtime="20201112 12:42:12.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.957" endtime="20201112 12:42:12.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.960" endtime="20201112 12:42:12.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.937" endtime="20201112 12:42:12.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.935" endtime="20201112 12:42:12.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.970" endtime="20201112 12:42:13.260"></status>
</kw>
<msg timestamp="20201112 12:42:13.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.969" endtime="20201112 12:42:13.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022195528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.265" endtime="20201112 12:42:13.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.273" endtime="20201112 12:42:13.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.966" endtime="20201112 12:42:13.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.964" endtime="20201112 12:42:13.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.280" level="INFO">${RESULT} = [{'time': 0.022195528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.022203486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:13.277" endtime="20201112 12:42:13.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.294" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.281" endtime="20201112 12:42:13.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.298" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.297" endtime="20201112 12:42:13.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.301" level="INFO">VALUE: [5.971999999999922e-06, 5.875000000002406e-06, 5.332999999999727e-06, 5.389000000001476e-06, 6.319000000001157e-06, 5.625000000002156e-06, 6.139000000002226e-06, 5.5979999999990204e-06, 6.125000000002656e-06, 5.624999999998687e-06, 6.347000000000297e-06, 5.625000000002156e-06, 5.610999999999117e-06, 5.596999999999547e-06, 6.166000000001892e-06, 5.86199999999884e-06, 6.110999999999617e-06, 6.318999999997688e-06, 5.610999999999117e-06, 6.3479999999997705e-06, 6.319000000001157e-06, 5.6529999999978264e-06, 5.444000000000282e-06, 5.6389999999982565e-06, 5.402999999997576e-06, 5.625000000002156e-06, 5.374999999998437e-06, 6.3479999999997705e-06, 5.639000000001726e-06, 6.09800000000299e-06, 5.625000000002156e-06, 6.347000000000297e-06, 6.083000000000477e-06, 6.110999999999617e-06, 5.6389999999982565e-06, 5.8479999999992704e-06, 6.111000000003086e-06, 5.389000000001476e-06, 5.401999999998103e-06, 5.610999999999117e-06, 5.611000000002586e-06, 5.637999999998783e-06, 6.334000000000201e-06, 6.333000000000727e-06, 6.124999999999187e-06, 5.417000000000616e-06, 5.624999999998687e-06, 6.347000000000297e-06, 5.624999999998687e-06, 5.417000000000616e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.300" endtime="20201112 12:42:13.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.295" endtime="20201112 12:42:13.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.305" endtime="20201112 12:42:13.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.308" endtime="20201112 12:42:13.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.307" endtime="20201112 12:42:13.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.303" endtime="20201112 12:42:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.933" endtime="20201112 12:42:13.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.933" endtime="20201112 12:42:13.329"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.338" endtime="20201112 12:42:13.352"></status>
</kw>
<msg timestamp="20201112 12:42:13.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.337" endtime="20201112 12:42:13.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.353" endtime="20201112 12:42:13.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.356" endtime="20201112 12:42:13.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.334" endtime="20201112 12:42:13.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.332" endtime="20201112 12:42:13.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.367" endtime="20201112 12:42:13.653"></status>
</kw>
<msg timestamp="20201112 12:42:13.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:13.365" endtime="20201112 12:42:13.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022021, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027708, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:13.657" endtime="20201112 12:42:13.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.665" endtime="20201112 12:42:13.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.362" endtime="20201112 12:42:13.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.360" endtime="20201112 12:42:13.667"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.671" level="INFO">${RESULT} = [{'time': 0.022027708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.022036875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:13.668" endtime="20201112 12:42:13.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:13.686" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:13.672" endtime="20201112 12:42:13.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.690" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:13.689" endtime="20201112 12:42:13.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.692" level="INFO">VALUE: [6.708000000001102e-06, 7.097000000001047e-06, 7.263999999999882e-06, 7.290999999999548e-06, 6.805000000002087e-06, 7.2779999999994516e-06, 6.388999999999007e-06, 6.583000000000977e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.305999999998591e-06, 6.319000000001157e-06, 6.888999999999507e-06, 7.042000000002241e-06, 6.568999999997938e-06, 6.513999999999132e-06, 6.3329999999972575e-06, 6.818999999998188e-06, 6.624999999999687e-06, 7.304999999999118e-06, 7.2919999999990215e-06, 7.2919999999990215e-06, 7.2219999999977025e-06, 6.597000000000547e-06, 7.278000000002921e-06, 7.2779999999994516e-06, 6.583000000000977e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 6.804999999998618e-06, 7.263999999999882e-06, 7.292000000002491e-06, 6.804999999998618e-06, 7.290999999999548e-06, 6.319000000001157e-06, 6.805000000002087e-06, 6.555999999997841e-06, 6.36199999999934e-06, 6.624999999999687e-06, 6.8480000000002705e-06, 6.583000000000977e-06, 6.584000000000451e-06, 6.569000000001407e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.0419999999987715e-06, 6.834000000000701e-06, 6.583000000000977e-06, 6.555000000001837e-06, 6.569000000001407e-06]</msg>
<status status="PASS" starttime="20201112 12:42:13.691" endtime="20201112 12:42:13.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.686" endtime="20201112 12:42:13.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.696" endtime="20201112 12:42:13.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.699" endtime="20201112 12:42:13.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.698" endtime="20201112 12:42:13.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.694" endtime="20201112 12:42:13.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.330" endtime="20201112 12:42:13.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.330" endtime="20201112 12:42:13.720"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.729" endtime="20201112 12:42:13.743"></status>
</kw>
<msg timestamp="20201112 12:42:13.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.728" endtime="20201112 12:42:13.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.745" endtime="20201112 12:42:13.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.748" endtime="20201112 12:42:13.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.725" endtime="20201112 12:42:13.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.723" endtime="20201112 12:42:13.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.758" endtime="20201112 12:42:14.048"></status>
</kw>
<msg timestamp="20201112 12:42:14.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.757" endtime="20201112 12:42:14.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022345528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022353389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.052" endtime="20201112 12:42:14.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.060" endtime="20201112 12:42:14.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.754" endtime="20201112 12:42:14.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.752" endtime="20201112 12:42:14.063"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.067" level="INFO">${RESULT} = [{'time': 0.022353389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.861000000001367e-06, 'source_diff': 7.861000000001367e-06}, {'time': 0.022363222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:14.063" endtime="20201112 12:42:14.067"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.080" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.068" endtime="20201112 12:42:14.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.084" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.083" endtime="20201112 12:42:14.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.087" level="INFO">VALUE: [7.861000000001367e-06, 8.235999999998272e-06, 7.514000000000132e-06, 8.221999999998703e-06, 8.207999999999133e-06, 7.514000000000132e-06, 7.514000000000132e-06, 8.221999999998703e-06, 7.694000000002532e-06, 8.235999999998272e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.5419999999992715e-06, 8.221999999998703e-06, 7.499999999997092e-06, 7.750000000000812e-06, 7.514000000000132e-06, 7.486000000000992e-06, 7.514000000000132e-06, 7.500000000000562e-06, 7.514000000000132e-06, 7.791000000000048e-06, 8.221999999998703e-06, 7.527999999999702e-06, 7.500000000000562e-06, 7.764000000000382e-06, 8.236999999997746e-06, 8.221999999998703e-06, 7.514000000000132e-06, 7.721999999998203e-06, 7.527999999999702e-06, 8.221999999998703e-06, 7.777999999999952e-06, 7.721999999998203e-06, 7.2919999999990215e-06, 7.749999999997342e-06, 8.514000000001132e-06, 7.500000000000562e-06, 8.458999999998856e-06, 7.292000000002491e-06, 7.750000000000812e-06, 7.513000000000658e-06, 7.2779999999994516e-06, 7.791999999999522e-06, 7.500000000000562e-06, 8.485999999998523e-06, 7.514000000000132e-06, 7.5419999999992715e-06, 7.750000000000812e-06, 8.222000000002172e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.085" endtime="20201112 12:42:14.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.081" endtime="20201112 12:42:14.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.090" endtime="20201112 12:42:14.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.093" endtime="20201112 12:42:14.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.092" endtime="20201112 12:42:14.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.088" endtime="20201112 12:42:14.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.721" endtime="20201112 12:42:14.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.721" endtime="20201112 12:42:14.114"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.123" endtime="20201112 12:42:14.136"></status>
</kw>
<msg timestamp="20201112 12:42:14.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.121" endtime="20201112 12:42:14.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.138" endtime="20201112 12:42:14.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.141" endtime="20201112 12:42:14.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.119" endtime="20201112 12:42:14.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.117" endtime="20201112 12:42:14.145"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.151" endtime="20201112 12:42:14.435"></status>
</kw>
<msg timestamp="20201112 12:42:14.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.150" endtime="20201112 12:42:14.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021655861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021665167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.439" endtime="20201112 12:42:14.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.447" endtime="20201112 12:42:14.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.147" endtime="20201112 12:42:14.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.145" endtime="20201112 12:42:14.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.454" level="INFO">${RESULT} = [{'time': 0.021665167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.306000000000592e-06, 'source_diff': 9.306000000000592e-06}, {'time': 0.021675986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:14.450" endtime="20201112 12:42:14.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.467" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.455" endtime="20201112 12:42:14.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.471" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.470" endtime="20201112 12:42:14.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.474" level="INFO">VALUE: [9.306000000000592e-06, 8.930000000000743e-06, 9.166999999997427e-06, 9.124999999998717e-06, 8.917000000000647e-06, 9.431000000000717e-06, 9.167000000000897e-06, 8.457999999999383e-06, 8.694000000000063e-06, 9.458000000000383e-06, 9.166000000001423e-06, 9.167000000000897e-06, 8.721999999999203e-06, 8.485999999998523e-06, 8.694999999999536e-06, 8.472000000002422e-06, 8.457999999999383e-06, 9.430999999997247e-06, 8.457999999999383e-06, 8.651999999997884e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.458000000002852e-06, 9.167000000000897e-06, 8.749999999998342e-06, 8.485999999998523e-06, 9.181000000000467e-06, 9.403000000001577e-06, 8.472000000002422e-06, 8.528000000000702e-06, 8.458999999998856e-06, 9.431000000000717e-06, 9.167000000000897e-06, 8.471999999998953e-06, 9.208999999999606e-06, 8.721999999999203e-06, 9.403000000001577e-06, 8.457999999999383e-06, 9.153000000001327e-06, 9.180000000000993e-06, 8.694000000000063e-06, 8.473000000001896e-06, 9.111000000002617e-06, 8.680999999999967e-06, 9.166000000001423e-06, 9.402999999998107e-06, 9.416999999997677e-06, 8.723000000002146e-06, 9.429999999997773e-06, 9.138999999998287e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.472" endtime="20201112 12:42:14.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.468" endtime="20201112 12:42:14.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.477" endtime="20201112 12:42:14.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.481" endtime="20201112 12:42:14.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.479" endtime="20201112 12:42:14.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.476" endtime="20201112 12:42:14.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.115" endtime="20201112 12:42:14.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.115" endtime="20201112 12:42:14.501"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.510" endtime="20201112 12:42:14.524"></status>
</kw>
<msg timestamp="20201112 12:42:14.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.508" endtime="20201112 12:42:14.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.526" endtime="20201112 12:42:14.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.528" endtime="20201112 12:42:14.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.506" endtime="20201112 12:42:14.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.504" endtime="20201112 12:42:14.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.538" endtime="20201112 12:42:14.824"></status>
</kw>
<msg timestamp="20201112 12:42:14.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021458778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.536" endtime="20201112 12:42:14.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021458778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.828" endtime="20201112 12:42:14.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.837" endtime="20201112 12:42:14.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.534" endtime="20201112 12:42:14.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.532" endtime="20201112 12:42:14.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.843" level="INFO">${RESULT} = [{'time': 0.021458778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0681000000001967e-05, 'source_diff': 1.0681000000001967e-05}, {'time': 0.021470861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.840" endtime="20201112 12:42:14.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:14.856" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:14.844" endtime="20201112 12:42:14.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.861" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:14.860" endtime="20201112 12:42:14.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.863" level="INFO">VALUE: [1.0681000000001967e-05, 1.0124999999999718e-05, 9.403000000001577e-06, 9.639000000002257e-06, 9.667000000001397e-06, 1.0124999999999718e-05, 9.652999999998357e-06, 1.0333000000001258e-05, 1.0361999999999871e-05, 9.403000000001577e-06, 1.0348000000000301e-05, 9.653000000001827e-06, 9.401999999998634e-06, 9.874999999999468e-06, 1.0347000000000828e-05, 1.0361000000000398e-05, 1.0111000000000148e-05, 9.625000000002687e-06, 1.0374999999999968e-05, 9.417000000001147e-06, 9.639000000002257e-06, 1.0402999999999107e-05, 9.652999999998357e-06, 9.638999999998787e-06, 9.665999999998454e-06, 9.416999999997677e-06, 1.0361000000000398e-05, 9.401999999998634e-06, 9.651999999998884e-06, 1.0124999999999718e-05, 9.458000000000383e-06, 9.638999999998787e-06, 9.638999999998787e-06, 9.653000000001827e-06, 9.638999999998787e-06, 1.0124999999999718e-05, 1.0346999999997358e-05, 1.0124999999999718e-05, 9.415999999998204e-06, 1.0361000000000398e-05, 1.0124999999999718e-05, 9.374999999998967e-06, 9.860999999999898e-06, 9.639000000002257e-06, 1.0166999999998427e-05, 9.416999999997677e-06, 1.0361000000000398e-05, 1.0153000000002327e-05, 1.0361000000000398e-05, 9.417000000001147e-06]</msg>
<status status="PASS" starttime="20201112 12:42:14.862" endtime="20201112 12:42:14.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.857" endtime="20201112 12:42:14.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.867" endtime="20201112 12:42:14.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.870" endtime="20201112 12:42:14.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.869" endtime="20201112 12:42:14.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.865" endtime="20201112 12:42:14.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.502" endtime="20201112 12:42:14.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.502" endtime="20201112 12:42:14.891"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.899" endtime="20201112 12:42:14.914"></status>
</kw>
<msg timestamp="20201112 12:42:14.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.898" endtime="20201112 12:42:14.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.915" endtime="20201112 12:42:14.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.918" endtime="20201112 12:42:14.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.895" endtime="20201112 12:42:14.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.893" endtime="20201112 12:42:14.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.927" endtime="20201112 12:42:15.214"></status>
</kw>
<msg timestamp="20201112 12:42:15.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.926" endtime="20201112 12:42:15.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021929917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.218" endtime="20201112 12:42:15.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.226" endtime="20201112 12:42:15.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.923" endtime="20201112 12:42:15.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.922" endtime="20201112 12:42:15.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.233" level="INFO">${RESULT} = [{'time': 0.021929917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.021942861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:15.229" endtime="20201112 12:42:15.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.247" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.234" endtime="20201112 12:42:15.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.251" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.250" endtime="20201112 12:42:15.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.254" level="INFO">VALUE: [1.1389000000000538e-05, 1.1069000000002438e-05, 1.1277999999999982e-05, 1.0375000000003437e-05, 1.0833000000001758e-05, 1.0402999999999107e-05, 1.0583000000001508e-05, 1.0541999999998802e-05, 1.0361000000000398e-05, 1.0597000000001078e-05, 1.1070000000001912e-05, 1.0806000000002092e-05, 1.1069999999998442e-05, 1.1291000000000079e-05, 1.0832999999998288e-05, 1.1305999999999122e-05, 1.1069000000002438e-05, 1.0348000000000301e-05, 1.0388999999999537e-05, 1.0611000000000648e-05, 1.0846999999997858e-05, 1.0583000000001508e-05, 1.1041999999999302e-05, 1.1318999999999219e-05, 1.0583999999997512e-05, 1.0570000000001412e-05, 1.0361000000000398e-05, 1.1292000000003022e-05, 1.0833000000001758e-05, 1.1291000000000079e-05, 1.1054999999999399e-05, 1.0583000000001508e-05, 1.0346999999997358e-05, 1.0583999999997512e-05, 1.0598000000000551e-05, 1.1236000000001273e-05, 1.0582999999998038e-05, 1.1292000000003022e-05, 1.0361000000000398e-05, 1.1304999999999649e-05, 1.0347000000000828e-05, 1.1306000000002592e-05, 1.0806000000002092e-05, 1.1305999999999122e-05, 1.0597000000001078e-05, 1.0847000000001328e-05, 1.1291999999999552e-05, 1.0361000000000398e-05, 1.0610999999997178e-05, 1.1277999999999982e-05]</msg>
<status status="PASS" starttime="20201112 12:42:15.252" endtime="20201112 12:42:15.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.248" endtime="20201112 12:42:15.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.257" endtime="20201112 12:42:15.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.261" endtime="20201112 12:42:15.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.259" endtime="20201112 12:42:15.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.256" endtime="20201112 12:42:15.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.892" endtime="20201112 12:42:15.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.891" endtime="20201112 12:42:15.282"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.290" endtime="20201112 12:42:15.304"></status>
</kw>
<msg timestamp="20201112 12:42:15.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.288" endtime="20201112 12:42:15.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.306" endtime="20201112 12:42:15.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.308" endtime="20201112 12:42:15.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.286" endtime="20201112 12:42:15.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.284" endtime="20201112 12:42:15.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.318" endtime="20201112 12:42:15.602"></status>
</kw>
<msg timestamp="20201112 12:42:15.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.317" endtime="20201112 12:42:15.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021634736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.607" endtime="20201112 12:42:15.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.615" endtime="20201112 12:42:15.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.314" endtime="20201112 12:42:15.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.312" endtime="20201112 12:42:15.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.621" level="INFO">${RESULT} = [{'time': 0.021647056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2319999999999692e-05, 'source_diff': 1.2319999999999692e-05}, {'time': 0.021661181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:15.618" endtime="20201112 12:42:15.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:15.635" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:15.622" endtime="20201112 12:42:15.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.639" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:15.638" endtime="20201112 12:42:15.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.641" level="INFO">VALUE: [1.2319999999999692e-05, 1.2014000000001163e-05, 1.1541999999999802e-05, 1.1541000000000329e-05, 1.2236000000002273e-05, 1.1291999999999552e-05, 1.1764000000000913e-05, 1.2014000000001163e-05, 1.2249999999998373e-05, 1.1749999999997873e-05, 1.1528000000000233e-05, 1.2249999999998373e-05, 1.1514000000000663e-05, 1.152699999999729e-05, 1.1291000000000079e-05, 1.1541999999999802e-05, 1.1541999999999802e-05, 1.2236000000002273e-05, 1.1291999999999552e-05, 1.2235999999998803e-05, 1.2236999999998277e-05, 1.1778000000000483e-05, 1.2237000000001746e-05, 1.2278000000000983e-05, 1.2221999999999233e-05, 1.2249999999998373e-05, 1.1291999999999552e-05, 1.1764000000000913e-05, 1.1541999999999802e-05, 1.2235999999998803e-05, 1.2235999999998803e-05, 1.1528000000000233e-05, 1.1528000000000233e-05, 1.1541999999999802e-05, 1.1305999999999122e-05, 1.1527000000000759e-05, 1.1528000000000233e-05, 1.1778000000000483e-05, 1.1528000000000233e-05, 1.2249999999998373e-05, 1.2014000000001163e-05, 1.2250000000001843e-05, 1.177699999999754e-05, 1.2264000000001413e-05, 1.2249999999998373e-05, 1.1528000000000233e-05, 1.1764000000000913e-05, 1.1499999999997623e-05, 1.2237000000001746e-05, 1.1514000000000663e-05]</msg>
<status status="PASS" starttime="20201112 12:42:15.640" endtime="20201112 12:42:15.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.635" endtime="20201112 12:42:15.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.645" endtime="20201112 12:42:15.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.648" endtime="20201112 12:42:15.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.647" endtime="20201112 12:42:15.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.643" endtime="20201112 12:42:15.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.282" endtime="20201112 12:42:15.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.282" endtime="20201112 12:42:15.669"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.678" endtime="20201112 12:42:15.692"></status>
</kw>
<msg timestamp="20201112 12:42:15.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.676" endtime="20201112 12:42:15.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.694" endtime="20201112 12:42:15.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.696" endtime="20201112 12:42:15.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.673" endtime="20201112 12:42:15.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.671" endtime="20201112 12:42:15.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.706" endtime="20201112 12:42:15.991"></status>
</kw>
<msg timestamp="20201112 12:42:15.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.704" endtime="20201112 12:42:15.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021729069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.995" endtime="20201112 12:42:16.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.003" endtime="20201112 12:42:16.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.702" endtime="20201112 12:42:16.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.700" endtime="20201112 12:42:16.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.010" level="INFO">${RESULT} = [{'time': 0.021729069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3041000000001829e-05, 'source_diff': 1.3041000000001829e-05}, {'time': 0.021744028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:16.007" endtime="20201112 12:42:16.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.023" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.011" endtime="20201112 12:42:16.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.028" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.027" endtime="20201112 12:42:16.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.030" level="INFO">VALUE: [1.3041000000001829e-05, 1.2958999999999887e-05, 1.2708999999999637e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.3431000000001247e-05, 1.3194000000001094e-05, 1.2931000000000747e-05, 1.2471999999999483e-05, 1.3430999999997778e-05, 1.2485999999999053e-05, 1.2500000000002093e-05, 1.2485999999999053e-05, 1.3153000000001858e-05, 1.3430999999997778e-05, 1.2471999999999483e-05, 1.3430999999997778e-05, 1.2485999999999053e-05, 1.2695000000000067e-05, 1.2416000000001204e-05, 1.2472000000002953e-05, 1.2471999999999483e-05, 1.3152999999998388e-05, 1.2499999999998623e-05, 1.3250000000002843e-05, 1.2708000000000164e-05, 1.3193999999997624e-05, 1.2471999999999483e-05, 1.3360999999999928e-05, 1.2471999999999483e-05, 1.2723000000002677e-05, 1.2721999999999734e-05, 1.3486000000000054e-05, 1.3429999999998304e-05, 1.3416999999998208e-05, 1.3167000000001428e-05, 1.2471999999999483e-05, 1.3431000000001247e-05, 1.2458999999999387e-05, 1.3472000000000484e-05, 1.3193999999997624e-05, 1.2486000000002523e-05, 1.2681000000000497e-05, 1.3387999999999595e-05, 1.3444000000001344e-05, 1.2471999999999483e-05, 1.3402999999998638e-05, 1.2721999999999734e-05, 1.3179999999998054e-05, 1.3430000000001774e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.029" endtime="20201112 12:42:16.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.024" endtime="20201112 12:42:16.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.034" endtime="20201112 12:42:16.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.037" endtime="20201112 12:42:16.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.036" endtime="20201112 12:42:16.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.032" endtime="20201112 12:42:16.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.670" endtime="20201112 12:42:16.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.669" endtime="20201112 12:42:16.058"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.066" endtime="20201112 12:42:16.081"></status>
</kw>
<msg timestamp="20201112 12:42:16.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.065" endtime="20201112 12:42:16.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.082" endtime="20201112 12:42:16.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.085" endtime="20201112 12:42:16.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.062" endtime="20201112 12:42:16.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.060" endtime="20201112 12:42:16.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.095" endtime="20201112 12:42:16.380"></status>
</kw>
<msg timestamp="20201112 12:42:16.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.093" endtime="20201112 12:42:16.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021555861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.385" endtime="20201112 12:42:16.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.393" endtime="20201112 12:42:16.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.091" endtime="20201112 12:42:16.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.089" endtime="20201112 12:42:16.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.399" level="INFO">${RESULT} = [{'time': 0.021555861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.021571722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:16.396" endtime="20201112 12:42:16.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.413" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.400" endtime="20201112 12:42:16.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.417" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.416" endtime="20201112 12:42:16.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.419" level="INFO">VALUE: [1.3763999999999443e-05, 1.4125000000000248e-05, 1.4362000000000402e-05, 1.4305999999998653e-05, 1.4374999999997029e-05, 1.4361000000000929e-05, 1.3652999999998888e-05, 1.3417000000001678e-05, 1.3416999999998208e-05, 1.3666999999998458e-05, 1.4389000000000068e-05, 1.3653000000002358e-05, 1.3430000000001774e-05, 1.4320000000001692e-05, 1.4361000000000929e-05, 1.3653000000002358e-05, 1.3374999999999498e-05, 1.3667000000001928e-05, 1.4361000000000929e-05, 1.4375000000000498e-05, 1.3597000000000609e-05, 1.4361000000000929e-05, 1.4361000000000929e-05, 1.4181000000001998e-05, 1.3681000000001498e-05, 1.3431000000001247e-05, 1.3624999999999748e-05, 1.3652000000002884e-05, 1.3666999999998458e-05, 1.4374999999997029e-05, 1.4221999999997764e-05, 1.3681000000001498e-05, 1.434699999999789e-05, 1.4152999999999388e-05, 1.3665999999998985e-05, 1.4125000000000248e-05, 1.4444999999998348e-05, 1.3402999999998638e-05, 1.3667000000001928e-05, 1.3653000000002358e-05, 1.3374999999999498e-05, 1.4375000000000498e-05, 1.4389000000000068e-05, 1.4138999999999818e-05, 1.3666000000002454e-05, 1.3611000000000179e-05, 1.4166000000002954e-05, 1.3431000000001247e-05, 1.3651999999999415e-05, 1.3652999999998888e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.418" endtime="20201112 12:42:16.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.414" endtime="20201112 12:42:16.421"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.423" endtime="20201112 12:42:16.424"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.426" endtime="20201112 12:42:16.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.425" endtime="20201112 12:42:16.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.421" endtime="20201112 12:42:16.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.059" endtime="20201112 12:42:16.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.058" endtime="20201112 12:42:16.447"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.456" endtime="20201112 12:42:16.470"></status>
</kw>
<msg timestamp="20201112 12:42:16.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.454" endtime="20201112 12:42:16.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.472" endtime="20201112 12:42:16.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.474" endtime="20201112 12:42:16.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.452" endtime="20201112 12:42:16.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.450" endtime="20201112 12:42:16.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.484" endtime="20201112 12:42:16.769"></status>
</kw>
<msg timestamp="20201112 12:42:16.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.482" endtime="20201112 12:42:16.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021595944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021610875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.773" endtime="20201112 12:42:16.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.781" endtime="20201112 12:42:16.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.480" endtime="20201112 12:42:16.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.478" endtime="20201112 12:42:16.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.788" level="INFO">${RESULT} = [{'time': 0.021610875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4931000000002748e-05, 'source_diff': 1.4931000000002748e-05}, {'time': 0.021627847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:16.785" endtime="20201112 12:42:16.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:16.802" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:16.789" endtime="20201112 12:42:16.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.807" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:16.806" endtime="20201112 12:42:16.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.809" level="INFO">VALUE: [1.4931000000002748e-05, 1.530500000000018e-05, 1.527699999999757e-05, 1.4639000000000318e-05, 1.5292000000000083e-05, 1.4625000000000749e-05, 1.508299999999907e-05, 1.5264000000000943e-05, 1.480499999999968e-05, 1.5319999999999223e-05, 1.5306000000003123e-05, 1.4833000000002289e-05, 1.5264000000000943e-05, 1.4361000000000929e-05, 1.4625000000000749e-05, 1.4611000000001179e-05, 1.5305999999999653e-05, 1.4360999999997459e-05, 1.4305999999998653e-05, 1.458299999999857e-05, 1.4916000000000235e-05, 1.5262999999998e-05, 1.461099999999771e-05, 1.4375000000000498e-05, 1.4861000000001429e-05, 1.430499999999918e-05, 1.4319000000002219e-05, 1.461099999999771e-05, 1.531899999999975e-05, 1.530500000000018e-05, 1.531899999999975e-05, 1.4611000000001179e-05, 1.4583000000002039e-05, 1.531899999999975e-05, 1.4833999999998293e-05, 1.4597000000001609e-05, 1.5278000000000513e-05, 1.5320000000002693e-05, 1.5292000000000083e-05, 1.4597000000001609e-05, 1.4568999999999e-05, 1.4375000000000498e-05, 1.5333999999998793e-05, 1.5069999999998973e-05, 1.4389000000000068e-05, 1.4861000000001429e-05, 1.5083000000002539e-05, 1.531899999999975e-05, 1.5305999999999653e-05, 1.4861000000001429e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.808" endtime="20201112 12:42:16.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.803" endtime="20201112 12:42:16.810"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.813" endtime="20201112 12:42:16.814"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.816" endtime="20201112 12:42:16.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.814" endtime="20201112 12:42:16.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.811" endtime="20201112 12:42:16.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.448" endtime="20201112 12:42:16.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.447" endtime="20201112 12:42:16.837"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.845" endtime="20201112 12:42:16.859"></status>
</kw>
<msg timestamp="20201112 12:42:16.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.843" endtime="20201112 12:42:16.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.861" endtime="20201112 12:42:16.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.863" endtime="20201112 12:42:16.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.841" endtime="20201112 12:42:16.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.839" endtime="20201112 12:42:16.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.873" endtime="20201112 12:42:17.158"></status>
</kw>
<msg timestamp="20201112 12:42:17.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021444583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021460458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.872" endtime="20201112 12:42:17.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021444583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021460458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.162" endtime="20201112 12:42:17.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.170" endtime="20201112 12:42:17.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.869" endtime="20201112 12:42:17.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.867" endtime="20201112 12:42:17.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.177" level="INFO">${RESULT} = [{'time': 0.021460458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5875000000002e-05, 'source_diff': 1.5875000000002e-05}, {'time': 0.021478319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1...</msg>
<status status="PASS" starttime="20201112 12:42:17.174" endtime="20201112 12:42:17.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.190" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.178" endtime="20201112 12:42:17.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.195" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.194" endtime="20201112 12:42:17.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.198" level="INFO">VALUE: [1.5875000000002e-05, 1.6249999999998904e-05, 1.5471999999999014e-05, 1.531899999999975e-05, 1.6263999999998474e-05, 1.5778000000001013e-05, 1.558300000000304e-05, 1.5264000000000943e-05, 1.6262999999999e-05, 1.5569999999999473e-05, 1.6250000000002374e-05, 1.6249999999998904e-05, 1.5528000000000763e-05, 1.627699999999857e-05, 1.6264000000001944e-05, 1.6194000000000625e-05, 1.6249999999998904e-05, 1.6262999999999e-05, 1.554100000000086e-05, 1.554100000000086e-05, 1.5542000000000333e-05, 1.5555999999999903e-05, 1.6263999999998474e-05, 1.5584000000002513e-05, 1.555500000000043e-05, 1.630499999999771e-05, 1.5792000000000583e-05, 1.554100000000086e-05, 1.6262999999999e-05, 1.6235999999999334e-05, 1.554100000000086e-05, 1.554100000000086e-05, 1.6249999999998904e-05, 1.6250000000002374e-05, 1.5597999999998613e-05, 1.580499999999721e-05, 1.558300000000304e-05, 1.6249999999998904e-05, 1.6249999999998904e-05, 1.5778000000001013e-05, 1.6000000000002124e-05, 1.5555999999999903e-05, 1.5847999999998863e-05, 1.5319999999999223e-05, 1.5792000000000583e-05, 1.5569e-05, 1.5542000000000333e-05, 1.5721999999999264e-05, 1.5500000000001624e-05, 1.555500000000043e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.197" endtime="20201112 12:42:17.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.191" endtime="20201112 12:42:17.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.202" endtime="20201112 12:42:17.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.205" endtime="20201112 12:42:17.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.203" endtime="20201112 12:42:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.200" endtime="20201112 12:42:17.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.838" endtime="20201112 12:42:17.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.837" endtime="20201112 12:42:17.226"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.234" endtime="20201112 12:42:17.249"></status>
</kw>
<msg timestamp="20201112 12:42:17.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.233" endtime="20201112 12:42:17.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.251" endtime="20201112 12:42:17.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.253" endtime="20201112 12:42:17.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.230" endtime="20201112 12:42:17.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.228" endtime="20201112 12:42:17.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.263" endtime="20201112 12:42:17.548"></status>
</kw>
<msg timestamp="20201112 12:42:17.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.261" endtime="20201112 12:42:17.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021801847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.552" endtime="20201112 12:42:17.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.561" endtime="20201112 12:42:17.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.259" endtime="20201112 12:42:17.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.257" endtime="20201112 12:42:17.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.567" level="INFO">${RESULT} = [{'time': 0.021819375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7527999999999294e-05, 'source_diff': 1.7527999999999294e-05}, {'time': 0.0218385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.564" endtime="20201112 12:42:17.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.580" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.568" endtime="20201112 12:42:17.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.585" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.584" endtime="20201112 12:42:17.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.587" level="INFO">VALUE: [1.7527999999999294e-05, 1.7194000000001625e-05, 1.7193999999998155e-05, 1.7152000000002915e-05, 1.6500000000002624e-05, 1.7179999999998585e-05, 1.7180000000002055e-05, 1.6500000000002624e-05, 1.6500000000002624e-05, 1.6499999999999154e-05, 1.651300000000272e-05, 1.6972999999999988e-05, 1.6722999999999738e-05, 1.741699999999874e-05, 1.6528000000001764e-05, 1.6485999999999584e-05, 1.6499999999999154e-05, 1.7207999999997725e-05, 1.7236000000000334e-05, 1.7194000000001625e-05, 1.7207999999997725e-05, 1.6722000000000264e-05, 1.6499999999999154e-05, 1.6472000000000014e-05, 1.6958000000000945e-05, 1.7194000000001625e-05, 1.6695000000000598e-05, 1.6499999999999154e-05, 1.7193999999998155e-05, 1.6735999999999834e-05, 1.7195000000001098e-05, 1.6472000000000014e-05, 1.6709000000000168e-05, 1.7195000000001098e-05, 1.7208000000001195e-05, 1.6499999999999154e-05, 1.7459000000000918e-05, 1.6695000000000598e-05, 1.654100000000186e-05, 1.658300000000057e-05, 1.643100000000078e-05, 1.7208000000001195e-05, 1.7165999999999015e-05, 1.6722000000000264e-05, 1.7180000000002055e-05, 1.6722000000000264e-05, 1.6499999999999154e-05, 1.6499999999999154e-05, 1.6763999999998974e-05, 1.6514000000002194e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.586" endtime="20201112 12:42:17.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.581" endtime="20201112 12:42:17.589"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.591" endtime="20201112 12:42:17.592"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.594" endtime="20201112 12:42:17.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.593" endtime="20201112 12:42:17.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.589" endtime="20201112 12:42:17.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.227" endtime="20201112 12:42:17.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.226" endtime="20201112 12:42:17.615"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.623" endtime="20201112 12:42:17.637"></status>
</kw>
<msg timestamp="20201112 12:42:17.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.622" endtime="20201112 12:42:17.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.639" endtime="20201112 12:42:17.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.641" endtime="20201112 12:42:17.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.619" endtime="20201112 12:42:17.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.617" endtime="20201112 12:42:17.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.651" endtime="20201112 12:42:17.938"></status>
</kw>
<msg timestamp="20201112 12:42:17.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.650" endtime="20201112 12:42:17.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021423986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021442708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.942" endtime="20201112 12:42:17.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.950" endtime="20201112 12:42:17.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.647" endtime="20201112 12:42:17.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.646" endtime="20201112 12:42:17.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.956" level="INFO">${RESULT} = [{'time': 0.021442708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8722000000002265e-05, 'source_diff': 1.8722000000002265e-05}, {'time': 0.021462667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:17.953" endtime="20201112 12:42:17.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:17.969" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:17.957" endtime="20201112 12:42:17.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.974" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:17.973" endtime="20201112 12:42:17.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.976" level="INFO">VALUE: [1.8722000000002265e-05, 1.83890000000006e-05, 1.7430000000002305e-05, 1.811100000000121e-05, 1.78890000000001e-05, 1.834700000000189e-05, 1.83890000000006e-05, 1.80829999999986e-05, 1.7666000000002985e-05, 1.837500000000103e-05, 1.8152000000000446e-05, 1.837500000000103e-05, 1.7429999999998835e-05, 1.7915999999999765e-05, 1.8097999999997644e-05, 1.7459000000000918e-05, 1.744499999999788e-05, 1.8388000000001126e-05, 1.8166000000000015e-05, 1.831899999999928e-05, 1.7444000000001875e-05, 1.7693999999998655e-05, 1.763899999999985e-05, 1.8388000000001126e-05, 1.768099999999856e-05, 1.837500000000103e-05, 1.8179999999999585e-05, 1.8179999999999585e-05, 1.741699999999874e-05, 1.743099999999831e-05, 1.815299999999992e-05, 1.7500000000000154e-05, 1.815299999999992e-05, 1.766699999999899e-05, 1.73889999999996e-05, 1.7473000000000488e-05, 1.837500000000103e-05, 1.7679999999999085e-05, 1.744500000000135e-05, 1.765299999999942e-05, 1.7723000000000738e-05, 1.743099999999831e-05, 1.743100000000178e-05, 1.7444000000001875e-05, 1.7973000000000988e-05, 1.831900000000275e-05, 1.7665999999999515e-05, 1.766699999999899e-05, 1.740300000000264e-05, 1.815299999999992e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.975" endtime="20201112 12:42:17.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.970" endtime="20201112 12:42:17.978"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.980" endtime="20201112 12:42:17.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.983" endtime="20201112 12:42:18.002"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.982" endtime="20201112 12:42:18.003"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.978" endtime="20201112 12:42:18.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.616" endtime="20201112 12:42:18.004"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.615" endtime="20201112 12:42:18.004"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.012" endtime="20201112 12:42:18.027"></status>
</kw>
<msg timestamp="20201112 12:42:18.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.011" endtime="20201112 12:42:18.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.029" endtime="20201112 12:42:18.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.031" endtime="20201112 12:42:18.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.008" endtime="20201112 12:42:18.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.006" endtime="20201112 12:42:18.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.041" endtime="20201112 12:42:18.326"></status>
</kw>
<msg timestamp="20201112 12:42:18.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.039" endtime="20201112 12:42:18.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.330" endtime="20201112 12:42:18.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.338" endtime="20201112 12:42:18.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.037" endtime="20201112 12:42:18.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.035" endtime="20201112 12:42:18.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.345" level="INFO">${RESULT} = [{'time': 0.022022194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9179999999997116e-05, 'source_diff': 1.9179999999997116e-05}, {'time': 0.022043167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:18.342" endtime="20201112 12:42:18.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.359" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.346" endtime="20201112 12:42:18.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.364" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.363" endtime="20201112 12:42:18.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.366" level="INFO">VALUE: [1.9179999999997116e-05, 1.9333999999999324e-05, 1.837500000000103e-05, 1.9319999999999754e-05, 1.83890000000006e-05, 1.862500000000128e-05, 1.8847999999998394e-05, 1.862499999999781e-05, 1.931900000000028e-05, 1.834700000000189e-05, 1.862500000000128e-05, 1.931900000000028e-05, 1.840300000000017e-05, 1.931899999999681e-05, 1.8611999999997714e-05, 1.906900000000003e-05, 1.834699999999842e-05, 1.83890000000006e-05, 1.8638000000001376e-05, 1.8402000000000696e-05, 1.837499999999756e-05, 1.933299999999985e-05, 1.863900000000085e-05, 1.887499999999806e-05, 1.906900000000003e-05, 1.863899999999738e-05, 1.906900000000003e-05, 1.911100000000221e-05, 1.861100000000171e-05, 1.9292000000000614e-05, 1.9333999999999324e-05, 1.8637999999997906e-05, 1.884700000000239e-05, 1.909699999999917e-05, 1.840300000000017e-05, 1.862500000000128e-05, 1.836099999999799e-05, 1.929099999999767e-05, 1.837499999999756e-05, 1.83890000000006e-05, 1.937499999999856e-05, 1.90829999999996e-05, 1.8862000000001433e-05, 1.840300000000017e-05, 1.9320000000003223e-05, 1.8443999999999405e-05, 1.862499999999781e-05, 1.9361999999998464e-05, 1.8612000000001183e-05, 1.861099999999824e-05]</msg>
<status status="PASS" starttime="20201112 12:42:18.365" endtime="20201112 12:42:18.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.360" endtime="20201112 12:42:18.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.370" endtime="20201112 12:42:18.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.373" endtime="20201112 12:42:18.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.371" endtime="20201112 12:42:18.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.368" endtime="20201112 12:42:18.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.005" endtime="20201112 12:42:18.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.004" endtime="20201112 12:42:18.394"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.402" endtime="20201112 12:42:18.416"></status>
</kw>
<msg timestamp="20201112 12:42:18.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.401" endtime="20201112 12:42:18.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.418" endtime="20201112 12:42:18.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.420" endtime="20201112 12:42:18.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.398" endtime="20201112 12:42:18.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.396" endtime="20201112 12:42:18.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.430" endtime="20201112 12:42:18.716"></status>
</kw>
<msg timestamp="20201112 12:42:18.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.429" endtime="20201112 12:42:18.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021588069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.720" endtime="20201112 12:42:18.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.728" endtime="20201112 12:42:18.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.426" endtime="20201112 12:42:18.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.424" endtime="20201112 12:42:18.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:18.735" level="INFO">${RESULT} = [{'time': 0.021588069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9916000000001766e-05, 'source_diff': 1.9916000000001766e-05}, {'time': 0.021610014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:18.731" endtime="20201112 12:42:18.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:18.748" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:18.736" endtime="20201112 12:42:18.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.752" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:18.751" endtime="20201112 12:42:18.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.755" level="INFO">VALUE: [1.9916000000001766e-05, 2.011099999999974e-05, 1.9777999999998075e-05, 1.956900000000053e-05, 2.0263999999999005e-05, 1.9556000000000434e-05, 2.0277999999998575e-05, 2.0249999999999435e-05, 1.956899999999706e-05, 1.9791999999997645e-05, 1.9570000000000004e-05, 1.955500000000096e-05, 1.95830000000001e-05, 1.9556000000000434e-05, 1.955500000000096e-05, 1.9957999999997006e-05, 1.9583999999999574e-05, 2.029099999999867e-05, 2.0263000000003e-05, 2.0263999999999005e-05, 2.0194000000001155e-05, 1.9570000000000004e-05, 1.9805999999997215e-05, 1.955500000000096e-05, 1.9778000000001544e-05, 2.029100000000214e-05, 1.9806000000000684e-05, 1.9514000000001724e-05, 1.931900000000028e-05, 1.9542000000000864e-05, 1.9597999999999144e-05, 2.030499999999824e-05, 1.956900000000053e-05, 1.931900000000028e-05, 1.9584000000003043e-05, 1.9555999999996965e-05, 2.0235999999999865e-05, 1.9556000000000434e-05, 2.030499999999824e-05, 1.956900000000053e-05, 1.9556000000000434e-05, 1.9556000000000434e-05, 2.0235999999999865e-05, 1.97769999999986e-05, 1.9556000000000434e-05, 2.0277999999998575e-05, 2.0263999999999005e-05, 1.956900000000053e-05, 2.02769999999991e-05, 2.0263999999999005e-05]</msg>
<status status="PASS" starttime="20201112 12:42:18.753" endtime="20201112 12:42:18.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.749" endtime="20201112 12:42:18.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.758" endtime="20201112 12:42:18.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:18.762" endtime="20201112 12:42:18.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.760" endtime="20201112 12:42:18.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.757" endtime="20201112 12:42:18.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.395" endtime="20201112 12:42:18.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.394" endtime="20201112 12:42:18.782"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.791" endtime="20201112 12:42:18.805"></status>
</kw>
<msg timestamp="20201112 12:42:18.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.789" endtime="20201112 12:42:18.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:18.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:18.807" endtime="20201112 12:42:18.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.809" endtime="20201112 12:42:18.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.787" endtime="20201112 12:42:18.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.785" endtime="20201112 12:42:18.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:18.819" endtime="20201112 12:42:19.105"></status>
</kw>
<msg timestamp="20201112 12:42:19.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:18.818" endtime="20201112 12:42:19.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021616736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.109" endtime="20201112 12:42:19.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.117" endtime="20201112 12:42:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.815" endtime="20201112 12:42:19.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.813" endtime="20201112 12:42:19.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.124" level="INFO">${RESULT} = [{'time': 0.021638292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1555999999998965e-05, 'source_diff': 2.1555999999998965e-05}, {'time': 0.021661417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:19.121" endtime="20201112 12:42:19.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.137" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.125" endtime="20201112 12:42:19.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.142" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.141" endtime="20201112 12:42:19.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.144" level="INFO">VALUE: [2.1555999999998965e-05, 2.147299999999755e-05, 2.0972000000001045e-05, 2.0764000000002975e-05, 2.056900000000153e-05, 2.145899999999798e-05, 2.0986000000000615e-05, 2.0749999999999935e-05, 2.0499999999999685e-05, 2.0500000000003155e-05, 2.144499999999841e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.145900000000145e-05, 2.0513999999999255e-05, 2.0736000000000365e-05, 2.1221999999997826e-05, 2.0513999999999255e-05, 2.0514000000002724e-05, 2.0499999999999685e-05, 2.0805999999998215e-05, 2.1221999999997826e-05, 2.0527999999998825e-05, 2.0486000000000115e-05, 2.1236000000000865e-05, 2.0499999999999685e-05, 2.0736000000000365e-05, 2.1193999999998686e-05, 2.113899999999988e-05, 2.122300000000077e-05, 2.1222000000001295e-05, 2.1221999999997826e-05, 2.073699999999984e-05, 2.1207999999998256e-05, 2.119500000000163e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.143099999999884e-05, 2.1443999999998936e-05, 2.0527999999998825e-05, 2.1180000000002586e-05, 2.0736000000000365e-05, 2.1457999999998506e-05, 2.0499999999999685e-05, 2.0486000000000115e-05, 2.0499999999999685e-05, 2.0513999999999255e-05, 2.1222000000001295e-05, 2.1193999999998686e-05]</msg>
<status status="PASS" starttime="20201112 12:42:19.143" endtime="20201112 12:42:19.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.138" endtime="20201112 12:42:19.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.148" endtime="20201112 12:42:19.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.151" endtime="20201112 12:42:19.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.149" endtime="20201112 12:42:19.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.146" endtime="20201112 12:42:19.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.783" endtime="20201112 12:42:19.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:18.783" endtime="20201112 12:42:19.172"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.180" endtime="20201112 12:42:19.195"></status>
</kw>
<msg timestamp="20201112 12:42:19.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.179" endtime="20201112 12:42:19.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.197" endtime="20201112 12:42:19.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.199" endtime="20201112 12:42:19.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.176" endtime="20201112 12:42:19.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.174" endtime="20201112 12:42:19.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.209" endtime="20201112 12:42:19.495"></status>
</kw>
<msg timestamp="20201112 12:42:19.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.207" endtime="20201112 12:42:19.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021601847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.500" endtime="20201112 12:42:19.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.508" endtime="20201112 12:42:19.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.205" endtime="20201112 12:42:19.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.203" endtime="20201112 12:42:19.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.514" level="INFO">${RESULT} = [{'time': 0.021601847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2500000000001685e-05, 'source_diff': 2.2500000000001685e-05}, {'time': 0.021625861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:19.511" endtime="20201112 12:42:19.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.527" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.515" endtime="20201112 12:42:19.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.532" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.531" endtime="20201112 12:42:19.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.534" level="INFO">VALUE: [2.2500000000001685e-05, 2.19030000000002e-05, 2.1457999999998506e-05, 2.14029999999997e-05, 2.216700000000002e-05, 2.1458000000001975e-05, 2.2305999999999715e-05, 2.1666000000000046e-05, 2.216700000000002e-05, 2.145900000000145e-05, 2.1679999999999616e-05, 2.1693999999999186e-05, 2.1514000000000255e-05, 2.1443999999998936e-05, 2.24030000000007e-05, 2.2180000000000116e-05, 2.169499999999866e-05, 2.145900000000145e-05, 2.144499999999841e-05, 2.1679999999999616e-05, 2.2152000000000976e-05, 2.213900000000088e-05, 2.24030000000007e-05, 2.237500000000156e-05, 2.169499999999866e-05, 2.24030000000007e-05, 2.169499999999866e-05, 2.238900000000113e-05, 2.1693999999999186e-05, 2.22090000000022e-05, 2.212500000000131e-05, 2.2472000000002545e-05, 2.215299999999698e-05, 2.1472000000001545e-05, 2.166699999999952e-05, 2.1443999999998936e-05, 2.215300000000045e-05, 2.1444000000002406e-05, 2.24030000000007e-05, 2.1443999999998936e-05, 2.1443999999998936e-05, 2.1472000000001545e-05, 2.1457999999998506e-05, 2.144499999999841e-05, 2.1443999999998936e-05, 2.144499999999841e-05, 2.1458000000001975e-05, 2.1443999999998936e-05, 2.219499999999916e-05, 2.1472000000001545e-05]</msg>
<status status="PASS" starttime="20201112 12:42:19.533" endtime="20201112 12:42:19.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.528" endtime="20201112 12:42:19.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.538" endtime="20201112 12:42:19.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.541" endtime="20201112 12:42:19.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.540" endtime="20201112 12:42:19.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.536" endtime="20201112 12:42:19.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.172" endtime="20201112 12:42:19.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.172" endtime="20201112 12:42:19.562"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.570" endtime="20201112 12:42:19.585"></status>
</kw>
<msg timestamp="20201112 12:42:19.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.569" endtime="20201112 12:42:19.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.587" endtime="20201112 12:42:19.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.589" endtime="20201112 12:42:19.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.566" endtime="20201112 12:42:19.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.564" endtime="20201112 12:42:19.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.599" endtime="20201112 12:42:19.885"></status>
</kw>
<msg timestamp="20201112 12:42:19.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021494403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.598" endtime="20201112 12:42:19.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021470736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021494403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.889" endtime="20201112 12:42:19.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.898" endtime="20201112 12:42:19.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.595" endtime="20201112 12:42:19.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.593" endtime="20201112 12:42:19.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.904" level="INFO">${RESULT} = [{'time': 0.021494403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.366699999999805e-05, 'source_diff': 2.366699999999805e-05}, {'time': 0.021519319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:19.901" endtime="20201112 12:42:19.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.918" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:19.905" endtime="20201112 12:42:19.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.923" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.922" endtime="20201112 12:42:19.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.925" level="INFO">VALUE: [2.366699999999805e-05, 2.287499999999859e-05, 2.263900000000138e-05, 2.263899999999791e-05, 2.262499999999834e-05, 2.2402000000001226e-05, 2.262499999999834e-05, 2.2443999999999936e-05, 2.2861999999998495e-05, 2.2402000000001226e-05, 2.263900000000138e-05, 2.288900000000163e-05, 2.241700000000027e-05, 2.3333999999999855e-05, 2.30969999999997e-05, 2.337500000000256e-05, 2.334699999999995e-05, 2.3333999999999855e-05, 2.333300000000038e-05, 2.2443999999999936e-05, 2.262499999999834e-05, 2.336099999999952e-05, 2.263900000000138e-05, 2.262500000000181e-05, 2.3292000000001145e-05, 2.30969999999997e-05, 2.262499999999834e-05, 2.240299999999723e-05, 2.2611999999998245e-05, 2.3097999999999175e-05, 2.263899999999791e-05, 2.263899999999791e-05, 2.238899999999766e-05, 2.3333999999999855e-05, 2.243099999999984e-05, 2.287500000000206e-05, 2.312499999999884e-05, 2.233299999999938e-05, 2.245900000000245e-05, 2.24030000000007e-05, 2.311099999999927e-05, 2.286099999999902e-05, 2.336100000000299e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.24030000000007e-05, 2.333300000000038e-05, 2.2887999999998687e-05, 2.30969999999997e-05, 2.336099999999952e-05]</msg>
<status status="PASS" starttime="20201112 12:42:19.924" endtime="20201112 12:42:19.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.919" endtime="20201112 12:42:19.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.929" endtime="20201112 12:42:19.930"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.932" endtime="20201112 12:42:19.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.931" endtime="20201112 12:42:19.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.927" endtime="20201112 12:42:19.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.563" endtime="20201112 12:42:19.953"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.562" endtime="20201112 12:42:19.953"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.961" endtime="20201112 12:42:19.976"></status>
</kw>
<msg timestamp="20201112 12:42:19.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.960" endtime="20201112 12:42:19.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.978" endtime="20201112 12:42:19.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.980" endtime="20201112 12:42:19.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.957" endtime="20201112 12:42:19.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.955" endtime="20201112 12:42:19.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.990" endtime="20201112 12:42:20.274"></status>
</kw>
<msg timestamp="20201112 12:42:20.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.989" endtime="20201112 12:42:20.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.279" endtime="20201112 12:42:20.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.287" endtime="20201112 12:42:20.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.986" endtime="20201112 12:42:20.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.984" endtime="20201112 12:42:20.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.293" level="INFO">${RESULT} = [{'time': 0.021872903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.413899999999941e-05, 'source_diff': 2.413899999999941e-05}, {'time': 0.021898903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.290" endtime="20201112 12:42:20.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.307" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.294" endtime="20201112 12:42:20.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.311" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.310" endtime="20201112 12:42:20.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.314" level="INFO">VALUE: [2.413899999999941e-05, 2.4056000000001465e-05, 2.3333999999999855e-05, 2.3570000000000535e-05, 2.333300000000038e-05, 2.4290999999999202e-05, 2.356900000000106e-05, 2.3611999999999245e-05, 2.4042000000001895e-05, 2.3582999999997162e-05, 2.380500000000174e-05, 2.3986000000000146e-05, 2.4263999999999536e-05, 2.3596999999996732e-05, 2.3568999999997592e-05, 2.3542000000001395e-05, 2.3584000000000105e-05, 2.381900000000131e-05, 2.4291999999998676e-05, 2.3570000000000535e-05, 2.4263999999999536e-05, 2.3582999999997162e-05, 2.429100000000267e-05, 2.3834000000000355e-05, 2.4291999999998676e-05, 2.3570000000000535e-05, 2.3514000000002255e-05, 2.333300000000038e-05, 2.3542000000001395e-05, 2.3582999999997162e-05, 2.4041999999998426e-05, 2.4292000000002145e-05, 2.429100000000267e-05, 2.4277999999999106e-05, 2.4304999999998772e-05, 2.4041999999998426e-05, 2.358300000000063e-05, 2.4263999999999536e-05, 2.4277999999999106e-05, 2.3806000000001215e-05, 2.4278000000002575e-05, 2.4054999999998522e-05, 2.4290999999999202e-05, 2.4263999999999536e-05, 2.334699999999995e-05, 2.3778000000002075e-05, 2.3584000000000105e-05, 2.4291999999998676e-05, 2.411100000000027e-05, 2.3597999999999675e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.312" endtime="20201112 12:42:20.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.308" endtime="20201112 12:42:20.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.317" endtime="20201112 12:42:20.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.320" endtime="20201112 12:42:20.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.319" endtime="20201112 12:42:20.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.316" endtime="20201112 12:42:20.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.954" endtime="20201112 12:42:20.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.953" endtime="20201112 12:42:20.341"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.350" endtime="20201112 12:42:20.365"></status>
</kw>
<msg timestamp="20201112 12:42:20.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.348" endtime="20201112 12:42:20.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.366" endtime="20201112 12:42:20.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.369" endtime="20201112 12:42:20.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.346" endtime="20201112 12:42:20.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.343" endtime="20201112 12:42:20.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.378" endtime="20201112 12:42:20.664"></status>
</kw>
<msg timestamp="20201112 12:42:20.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.377" endtime="20201112 12:42:20.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021569458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021594319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.668" endtime="20201112 12:42:20.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.676" endtime="20201112 12:42:20.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.374" endtime="20201112 12:42:20.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.373" endtime="20201112 12:42:20.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.683" level="INFO">${RESULT} = [{'time': 0.021594319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.486100000000102e-05, 'source_diff': 2.486100000000102e-05}, {'time': 0.021621375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.680" endtime="20201112 12:42:20.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.696" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:20.684" endtime="20201112 12:42:20.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.701" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.700" endtime="20201112 12:42:20.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.703" level="INFO">VALUE: [2.486100000000102e-05, 2.5222000000001826e-05, 2.5222000000001826e-05, 2.4708000000001756e-05, 2.4249999999999966e-05, 2.4764000000000036e-05, 2.4721999999997857e-05, 2.5429999999999897e-05, 2.4527999999999356e-05, 2.5236000000001396e-05, 2.4764000000000036e-05, 2.4736000000000896e-05, 2.4513999999999786e-05, 2.5221999999998357e-05, 2.4458000000001506e-05, 2.5166000000000077e-05, 2.4527999999999356e-05, 2.5235999999997927e-05, 2.4513999999999786e-05, 2.4764000000000036e-05, 2.495900000000148e-05, 2.4777999999999606e-05, 2.458300000000163e-05, 2.5250000000000966e-05, 2.4527999999999356e-05, 2.4513000000000312e-05, 2.4486000000000646e-05, 2.4679999999999147e-05, 2.4513000000000312e-05, 2.522299999999783e-05, 2.4513999999999786e-05, 2.4513999999999786e-05, 2.4500000000000216e-05, 2.5236000000001396e-05, 2.5221999999998357e-05, 2.4764000000000036e-05, 2.4555999999998496e-05, 2.5236000000001396e-05, 2.4513000000000312e-05, 2.4513999999999786e-05, 2.4584000000001105e-05, 2.4290999999999202e-05, 2.5179999999999647e-05, 2.4527999999999356e-05, 2.4764000000000036e-05, 2.518099999999912e-05, 2.522299999999783e-05, 2.4513999999999786e-05, 2.4526999999999882e-05, 2.4540999999999452e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.702" endtime="20201112 12:42:20.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.697" endtime="20201112 12:42:20.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.707" endtime="20201112 12:42:20.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.710" endtime="20201112 12:42:20.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.708" endtime="20201112 12:42:20.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.705" endtime="20201112 12:42:20.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.342" endtime="20201112 12:42:20.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.341" endtime="20201112 12:42:20.731"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.739" endtime="20201112 12:42:20.756"></status>
</kw>
<msg timestamp="20201112 12:42:20.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.738" endtime="20201112 12:42:20.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.757" endtime="20201112 12:42:20.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.760" endtime="20201112 12:42:20.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.735" endtime="20201112 12:42:20.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.733" endtime="20201112 12:42:20.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.770" endtime="20201112 12:42:21.055"></status>
</kw>
<msg timestamp="20201112 12:42:21.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.768" endtime="20201112 12:42:21.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021633861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.059" endtime="20201112 12:42:21.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.067" endtime="20201112 12:42:21.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.766" endtime="20201112 12:42:21.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.764" endtime="20201112 12:42:21.069"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.073" level="INFO">${RESULT} = [{'time': 0.021633861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5986000000002146e-05, 'source_diff': 2.5986000000002146e-05}, {'time': 0.021661583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:21.070" endtime="20201112 12:42:21.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.087" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.074" endtime="20201112 12:42:21.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.091" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.090" endtime="20201112 12:42:21.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.093" level="INFO">VALUE: [2.5986000000002146e-05, 2.5694000000003187e-05, 2.6471999999999607e-05, 2.616700000000055e-05, 2.5693999999999717e-05, 2.5707999999999287e-05, 2.568100000000309e-05, 2.640299999999776e-05, 2.5471999999998607e-05, 2.543099999999937e-05, 2.570899999999876e-05, 2.618100000000012e-05, 2.5514000000000786e-05, 2.6166000000001077e-05, 2.640299999999776e-05, 2.5486000000001646e-05, 2.566700000000005e-05, 2.5693999999999717e-05, 2.618100000000012e-05, 2.543099999999937e-05, 2.6236000000002396e-05, 2.5486000000001646e-05, 2.640300000000123e-05, 2.6165999999997608e-05, 2.5707999999999287e-05, 2.569499999999919e-05, 2.569499999999919e-05, 2.545899999999851e-05, 2.5471999999998607e-05, 2.545899999999851e-05, 2.5735999999998427e-05, 2.54169999999998e-05, 2.6360999999999052e-05, 2.5471999999998607e-05, 2.6166000000001077e-05, 2.5693999999999717e-05, 2.619499999999969e-05, 2.569499999999919e-05, 2.6151999999998038e-05, 2.6319000000000342e-05, 2.538900000000066e-05, 2.545899999999851e-05, 2.5457999999999037e-05, 2.5457999999999037e-05, 2.5707999999999287e-05, 2.548700000000112e-05, 2.5764000000001036e-05, 2.618100000000012e-05, 2.6180000000000647e-05, 2.5721999999998857e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.092" endtime="20201112 12:42:21.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.088" endtime="20201112 12:42:21.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.097" endtime="20201112 12:42:21.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.100" endtime="20201112 12:42:21.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.099" endtime="20201112 12:42:21.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.095" endtime="20201112 12:42:21.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.732" endtime="20201112 12:42:21.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.731" endtime="20201112 12:42:21.121"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.130" endtime="20201112 12:42:21.144"></status>
</kw>
<msg timestamp="20201112 12:42:21.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.128" endtime="20201112 12:42:21.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.145" endtime="20201112 12:42:21.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.148" endtime="20201112 12:42:21.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.126" endtime="20201112 12:42:21.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.123" endtime="20201112 12:42:21.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.158" endtime="20201112 12:42:21.443"></status>
</kw>
<msg timestamp="20201112 12:42:21.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.156" endtime="20201112 12:42:21.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021526236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.447" endtime="20201112 12:42:21.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.456" endtime="20201112 12:42:21.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.154" endtime="20201112 12:42:21.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.152" endtime="20201112 12:42:21.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.462" level="INFO">${RESULT} = [{'time': 0.021526236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.021555139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:21.459" endtime="20201112 12:42:21.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.476" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.463" endtime="20201112 12:42:21.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.481" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.480" endtime="20201112 12:42:21.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.483" level="INFO">VALUE: [2.7222000000000357e-05, 2.690300000000173e-05, 2.64170000000008e-05, 2.7347999999999956e-05, 2.7333000000000912e-05, 2.643100000000037e-05, 2.7361000000000052e-05, 2.7320000000000816e-05, 2.665299999999801e-05, 2.6624999999998872e-05, 2.669500000000019e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6443999999996998e-05, 2.665300000000148e-05, 2.6651999999998538e-05, 2.662500000000234e-05, 2.65970000000032e-05, 2.7347000000000482e-05, 2.665300000000148e-05, 2.7110999999999802e-05, 2.64170000000008e-05, 2.7347000000000482e-05, 2.7361999999999526e-05, 2.64170000000008e-05, 2.6665999999998108e-05, 2.6624999999998872e-05, 2.641699999999733e-05, 2.638899999999819e-05, 2.6638999999998442e-05, 2.64170000000008e-05, 2.644499999999994e-05, 2.6666000000001577e-05, 2.665300000000148e-05, 2.7110999999999802e-05, 2.6624999999998872e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.6651999999998538e-05, 2.7124999999999372e-05, 2.6583000000000162e-05, 2.7097000000000232e-05, 2.670899999999976e-05, 2.640299999999776e-05, 2.672299999999933e-05, 2.6401999999998288e-05, 2.663900000000191e-05, 2.6415999999997858e-05, 2.7333000000000912e-05, 2.6638999999998442e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.482" endtime="20201112 12:42:21.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.477" endtime="20201112 12:42:21.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.487" endtime="20201112 12:42:21.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.490" endtime="20201112 12:42:21.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.489" endtime="20201112 12:42:21.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.485" endtime="20201112 12:42:21.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.122" endtime="20201112 12:42:21.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.121" endtime="20201112 12:42:21.511"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.519" endtime="20201112 12:42:21.534"></status>
</kw>
<msg timestamp="20201112 12:42:21.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.518" endtime="20201112 12:42:21.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.536" endtime="20201112 12:42:21.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.538" endtime="20201112 12:42:21.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.515" endtime="20201112 12:42:21.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.513" endtime="20201112 12:42:21.542"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.548" endtime="20201112 12:42:21.832"></status>
</kw>
<msg timestamp="20201112 12:42:21.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.546" endtime="20201112 12:42:21.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.836" endtime="20201112 12:42:21.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.845" endtime="20201112 12:42:21.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.544" endtime="20201112 12:42:21.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.542" endtime="20201112 12:42:21.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.851" level="INFO">${RESULT} = [{'time': 0.021908028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8639000000000442e-05, 'source_diff': 2.8639000000000442e-05}, {'time': 0.021937819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:21.848" endtime="20201112 12:42:21.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.864" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:21.852" endtime="20201112 12:42:21.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.869" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.868" endtime="20201112 12:42:21.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.871" level="INFO">VALUE: [2.8639000000000442e-05, 2.8069000000002092e-05, 2.7583000000001162e-05, 2.7584000000000636e-05, 2.7611000000000302e-05, 2.8000000000000247e-05, 2.7512999999999843e-05, 2.7333000000000912e-05, 2.8347000000001482e-05, 2.7361000000000052e-05, 2.7888999999999692e-05, 2.8291000000003202e-05, 2.8222000000001357e-05, 2.7624999999999872e-05, 2.8290999999999733e-05, 2.7513999999999317e-05, 2.7597000000000732e-05, 2.8305999999998777e-05, 2.7582999999997693e-05, 2.7611000000000302e-05, 2.8305999999998777e-05, 2.7612000000003245e-05, 2.7583000000001162e-05, 2.7597000000000732e-05, 2.7347000000000482e-05, 2.7361000000000052e-05, 2.7306000000001246e-05, 2.7347000000000482e-05, 2.7596999999997263e-05, 2.8290999999999733e-05, 2.7347000000000482e-05, 2.7596999999997263e-05, 2.7610999999996833e-05, 2.7556000000001496e-05, 2.7584000000000636e-05, 2.7584000000000636e-05, 2.7597000000000732e-05, 2.8041999999998957e-05, 2.7582999999997693e-05, 2.8277000000000163e-05, 2.7569000000001592e-05, 2.8304999999999303e-05, 2.8277999999999637e-05, 2.7610999999996833e-05, 2.8332999999998443e-05, 2.8320000000001816e-05, 2.7584000000000636e-05, 2.7818999999998373e-05, 2.7583000000001162e-05, 2.7361000000000052e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.870" endtime="20201112 12:42:21.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.865" endtime="20201112 12:42:21.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.875" endtime="20201112 12:42:21.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.878" endtime="20201112 12:42:21.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.877" endtime="20201112 12:42:21.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.873" endtime="20201112 12:42:21.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.512" endtime="20201112 12:42:21.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.511" endtime="20201112 12:42:21.899"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.907" endtime="20201112 12:42:21.922"></status>
</kw>
<msg timestamp="20201112 12:42:21.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.906" endtime="20201112 12:42:21.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.924" endtime="20201112 12:42:21.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.926" endtime="20201112 12:42:21.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.903" endtime="20201112 12:42:21.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.901" endtime="20201112 12:42:21.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.936" endtime="20201112 12:42:22.221"></status>
</kw>
<msg timestamp="20201112 12:42:22.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.935" endtime="20201112 12:42:22.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.225" endtime="20201112 12:42:22.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.233" endtime="20201112 12:42:22.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.932" endtime="20201112 12:42:22.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.930" endtime="20201112 12:42:22.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.240" level="INFO">${RESULT} = [{'time': 0.021905125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9596999999999263e-05, 'source_diff': 2.9596999999999263e-05}, {'time': 0.021936014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:22.237" endtime="20201112 12:42:22.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.253" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.241" endtime="20201112 12:42:22.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.258" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.257" endtime="20201112 12:42:22.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.260" level="INFO">VALUE: [2.9596999999999263e-05, 2.8791999999999707e-05, 2.8750000000000997e-05, 2.9167000000000082e-05, 2.8791000000000233e-05, 2.8527999999999887e-05, 2.9264000000001067e-05, 2.8554999999999553e-05, 2.9193999999999748e-05, 2.8527999999999887e-05, 2.8999999999997778e-05, 2.8319999999998346e-05, 2.8540999999999983e-05, 2.8736000000001427e-05, 2.8722000000001857e-05, 2.9250000000001497e-05, 2.9499999999998278e-05, 2.9249999999998028e-05, 2.8540999999999983e-05, 2.8457999999998568e-05, 2.8778000000000137e-05, 2.9235999999998458e-05, 2.8555999999999027e-05, 2.9249999999998028e-05, 2.8555999999999027e-05, 2.8540999999999983e-05, 2.8514000000000317e-05, 2.870900000000176e-05, 2.9250000000001497e-05, 2.8527000000000413e-05, 2.8514000000000317e-05, 2.8540999999999983e-05, 2.8555999999999027e-05, 2.8513000000000843e-05, 2.8846999999998513e-05, 2.8541999999999457e-05, 2.8778000000000137e-05, 2.9221999999998888e-05, 2.8791999999999707e-05, 2.8471999999998138e-05, 2.8500000000000747e-05, 2.8540999999999983e-05, 2.8527999999999887e-05, 2.8471999999998138e-05, 2.8554999999999553e-05, 2.8542000000002926e-05, 2.8514000000000317e-05, 2.9249999999998028e-05, 2.8750000000000997e-05, 2.9207999999999318e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.259" endtime="20201112 12:42:22.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.254" endtime="20201112 12:42:22.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.264" endtime="20201112 12:42:22.266"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.268" endtime="20201112 12:42:22.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.266" endtime="20201112 12:42:22.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.262" endtime="20201112 12:42:22.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.900" endtime="20201112 12:42:22.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.899" endtime="20201112 12:42:22.289"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.298" endtime="20201112 12:42:22.312"></status>
</kw>
<msg timestamp="20201112 12:42:22.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.296" endtime="20201112 12:42:22.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.314" endtime="20201112 12:42:22.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.316" endtime="20201112 12:42:22.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.293" endtime="20201112 12:42:22.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.291" endtime="20201112 12:42:22.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.326" endtime="20201112 12:42:22.611"></status>
</kw>
<msg timestamp="20201112 12:42:22.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.325" endtime="20201112 12:42:22.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021638069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.615" endtime="20201112 12:42:22.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.623" endtime="20201112 12:42:22.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.322" endtime="20201112 12:42:22.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.321" endtime="20201112 12:42:22.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.630" level="INFO">${RESULT} = [{'time': 0.021668597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.052800000000189e-05, 'source_diff': 3.052800000000189e-05}, {'time': 0.0217005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:22.627" endtime="20201112 12:42:22.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.643" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:22.631" endtime="20201112 12:42:22.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.648" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.647" endtime="20201112 12:42:22.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.650" level="INFO">VALUE: [3.052800000000189e-05, 3.0194000000000748e-05, 2.9540999999997514e-05, 2.9735999999998958e-05, 2.9486000000002177e-05, 2.9707999999999818e-05, 3.020799999999685e-05, 2.9778000000001137e-05, 3.019399999999728e-05, 2.9471999999999138e-05, 2.9513999999997848e-05, 2.9513999999997848e-05, 2.9540999999997514e-05, 2.970899999999929e-05, 3.0194000000000748e-05, 2.9707999999999818e-05, 3.0208000000000318e-05, 2.9471999999999138e-05, 2.9500000000001747e-05, 2.9485999999998708e-05, 3.0180000000001178e-05, 2.9499999999998278e-05, 2.9667000000000582e-05, 3.0181000000000652e-05, 2.969499999999972e-05, 2.9471999999999138e-05, 2.9721999999999388e-05, 2.9472000000002607e-05, 3.0208000000000318e-05, 2.9721999999999388e-05, 2.9776999999998194e-05, 3.019500000000022e-05, 2.9721999999999388e-05, 2.9513999999997848e-05, 2.972299999999886e-05, 2.9667000000000582e-05, 3.0180000000001178e-05, 2.9472000000002607e-05, 2.9707999999999818e-05, 2.9735999999998958e-05, 3.0444999999997002e-05, 3.0221999999999888e-05, 3.0194000000000748e-05, 3.015199999999857e-05, 2.9528000000000887e-05, 2.970899999999929e-05, 2.9916999999997362e-05, 2.9485999999998708e-05, 3.0389000000002192e-05, 3.0181000000000652e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.649" endtime="20201112 12:42:22.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.644" endtime="20201112 12:42:22.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.653" endtime="20201112 12:42:22.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.657" endtime="20201112 12:42:22.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.655" endtime="20201112 12:42:22.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.652" endtime="20201112 12:42:22.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.290" endtime="20201112 12:42:22.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.289" endtime="20201112 12:42:22.678"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.686" endtime="20201112 12:42:22.701"></status>
</kw>
<msg timestamp="20201112 12:42:22.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.684" endtime="20201112 12:42:22.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.703" endtime="20201112 12:42:22.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.705" endtime="20201112 12:42:22.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.682" endtime="20201112 12:42:22.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.680" endtime="20201112 12:42:22.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.715" endtime="20201112 12:42:23.001"></status>
</kw>
<msg timestamp="20201112 12:42:23.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021560875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.713" endtime="20201112 12:42:23.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021526556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021560875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.005" endtime="20201112 12:42:23.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.013" endtime="20201112 12:42:23.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.711" endtime="20201112 12:42:23.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.709" endtime="20201112 12:42:23.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.019" level="INFO">${RESULT} = [{'time': 0.021560875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4319000000001404e-05, 'source_diff': 3.4319000000001404e-05}, {'time': 0.021599653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:23.016" endtime="20201112 12:42:23.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.034" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.020" endtime="20201112 12:42:23.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.038" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.037" endtime="20201112 12:42:23.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.040" level="INFO">VALUE: [3.4319000000001404e-05, 3.416700000000161e-05, 3.379199999999777e-05, 3.3610999999999364e-05, 3.361199999999884e-05, 3.3860999999999614e-05, 3.400000000000278e-05, 3.384800000000299e-05, 3.359800000000274e-05, 3.3569000000000654e-05, 3.398599999999974e-05, 3.398699999999921e-05, 3.3777000000002194e-05, 3.3874999999999184e-05, 3.369400000000078e-05, 3.3874999999999184e-05, 3.3583000000000224e-05, 3.4110999999999864e-05, 3.3569000000000654e-05, 3.3874999999999184e-05, 3.4110999999999864e-05, 3.397200000000017e-05, 3.365299999999807e-05, 3.3555000000001084e-05, 3.370800000000035e-05, 3.365300000000154e-05, 3.3541000000001514e-05, 3.3569000000000654e-05, 3.3624999999998934e-05, 3.3583000000000224e-05, 3.354200000000099e-05, 3.376399999999863e-05, 3.39450000000005e-05, 3.405599999999759e-05, 3.397200000000017e-05, 3.376399999999863e-05, 3.3596999999999794e-05, 3.4083000000000724e-05, 3.372199999999992e-05, 3.37640000000021e-05, 3.382000000000038e-05, 3.395900000000007e-05, 3.379200000000124e-05, 3.359799999999927e-05, 3.384799999999952e-05, 3.393100000000093e-05, 3.373599999999949e-05, 3.3610999999999364e-05, 3.35839999999997e-05, 3.390299999999832e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.039" endtime="20201112 12:42:23.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.035" endtime="20201112 12:42:23.048"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.050" endtime="20201112 12:42:23.052"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.054" endtime="20201112 12:42:23.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.052" endtime="20201112 12:42:23.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.049" endtime="20201112 12:42:23.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.678" endtime="20201112 12:42:23.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.678" endtime="20201112 12:42:23.075"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.083" endtime="20201112 12:42:23.099"></status>
</kw>
<msg timestamp="20201112 12:42:23.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.081" endtime="20201112 12:42:23.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.101" endtime="20201112 12:42:23.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.103" endtime="20201112 12:42:23.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.079" endtime="20201112 12:42:23.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.077" endtime="20201112 12:42:23.107"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.113" endtime="20201112 12:42:23.398"></status>
</kw>
<msg timestamp="20201112 12:42:23.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.111" endtime="20201112 12:42:23.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021857986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021892931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.402" endtime="20201112 12:42:23.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.411" endtime="20201112 12:42:23.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.109" endtime="20201112 12:42:23.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.107" endtime="20201112 12:42:23.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.417" level="INFO">${RESULT} = [{'time': 0.021892931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.49450000000015e-05, 'source_diff': 3.49450000000015e-05}, {'time': 0.021932722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:23.414" endtime="20201112 12:42:23.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.430" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.418" endtime="20201112 12:42:23.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.435" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.434" endtime="20201112 12:42:23.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.437" level="INFO">VALUE: [3.49450000000015e-05, 3.5055000000002584e-05, 3.49719999999977e-05, 3.494399999999856e-05, 3.502799999999945e-05, 3.472200000000092e-05, 3.4568999999998185e-05, 3.47779999999992e-05, 3.4583000000001224e-05, 3.4555000000002084e-05, 3.463900000000297e-05, 3.475000000000006e-05, 3.466699999999864e-05, 3.4847000000001044e-05, 3.454200000000199e-05, 3.491599999999942e-05, 3.504199999999902e-05, 3.476399999999963e-05, 3.509800000000077e-05, 3.49580000000016e-05, 3.457000000000113e-05, 3.50979999999973e-05, 3.475000000000006e-05, 3.501399999999988e-05, 3.470900000000082e-05, 3.511199999999687e-05, 3.4638999999999504e-05, 3.4652999999999073e-05, 3.5111000000000864e-05, 3.5166999999999143e-05, 3.45840000000007e-05, 3.4776999999999725e-05, 3.466700000000211e-05, 3.4790999999999295e-05, 3.498599999999727e-05, 3.491599999999942e-05, 3.5026999999999975e-05, 3.4833000000001474e-05, 3.498600000000074e-05, 3.4818999999998435e-05, 3.4611000000000364e-05, 3.498600000000074e-05, 3.494399999999856e-05, 3.5096999999997824e-05, 3.470799999999788e-05, 3.4875000000000184e-05, 3.473600000000049e-05, 3.466599999999917e-05, 3.497200000000117e-05, 3.4875000000000184e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.436" endtime="20201112 12:42:23.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.431" endtime="20201112 12:42:23.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.441" endtime="20201112 12:42:23.442"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.444" endtime="20201112 12:42:23.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.443" endtime="20201112 12:42:23.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.439" endtime="20201112 12:42:23.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.076" endtime="20201112 12:42:23.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.075" endtime="20201112 12:42:23.465"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.473" endtime="20201112 12:42:23.490"></status>
</kw>
<msg timestamp="20201112 12:42:23.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.472" endtime="20201112 12:42:23.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.491" endtime="20201112 12:42:23.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.493" endtime="20201112 12:42:23.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.469" endtime="20201112 12:42:23.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.467" endtime="20201112 12:42:23.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.503" endtime="20201112 12:42:23.788"></status>
</kw>
<msg timestamp="20201112 12:42:23.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.502" endtime="20201112 12:42:23.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021878847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.792" endtime="20201112 12:42:23.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.800" endtime="20201112 12:42:23.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.499" endtime="20201112 12:42:23.802"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.498" endtime="20201112 12:42:23.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.807" level="INFO">${RESULT} = [{'time': 0.021915208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6360999999998644e-05, 'source_diff': 3.6360999999998644e-05}, {'time': 0.021956014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:23.803" endtime="20201112 12:42:23.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.820" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:23.808" endtime="20201112 12:42:23.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.825" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.823" endtime="20201112 12:42:23.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.827" level="INFO">VALUE: [3.6360999999998644e-05, 3.595799999999913e-05, 3.600000000000131e-05, 3.5568999999999185e-05, 3.579199999999977e-05, 3.5597000000001794e-05, 3.5653000000000074e-05, 3.552799999999995e-05, 3.569500000000225e-05, 3.5639000000000504e-05, 3.572200000000192e-05, 3.55840000000017e-05, 3.577799999999673e-05, 3.5846999999998574e-05, 3.581999999999891e-05, 3.60979999999983e-05, 3.5416999999999393e-05, 3.594499999999903e-05, 3.581999999999891e-05, 3.555599999999909e-05, 3.604200000000002e-05, 3.568099999999921e-05, 3.576400000000063e-05, 3.600000000000131e-05, 3.5776999999997255e-05, 3.5568999999999185e-05, 3.5846999999998574e-05, 3.57780000000002e-05, 3.5554999999999615e-05, 3.6097000000002294e-05, 3.5541000000000045e-05, 3.5611000000001364e-05, 3.567999999999974e-05, 3.569399999999931e-05, 3.5653000000000074e-05, 3.592999999999999e-05, 3.5888999999997284e-05, 3.57780000000002e-05, 3.567999999999974e-05, 3.554199999999952e-05, 3.6110999999998394e-05, 3.572200000000192e-05, 3.5582999999998755e-05, 3.581999999999891e-05, 3.570799999999888e-05, 3.606999999999916e-05, 3.5639000000000504e-05, 3.582000000000238e-05, 3.552799999999995e-05, 3.60840000000022e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.826" endtime="20201112 12:42:23.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.821" endtime="20201112 12:42:23.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.830" endtime="20201112 12:42:23.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.834" endtime="20201112 12:42:23.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.832" endtime="20201112 12:42:23.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.829" endtime="20201112 12:42:23.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.466" endtime="20201112 12:42:23.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.465" endtime="20201112 12:42:23.855"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.863" endtime="20201112 12:42:23.878"></status>
</kw>
<msg timestamp="20201112 12:42:23.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.861" endtime="20201112 12:42:23.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.879" endtime="20201112 12:42:23.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.882" endtime="20201112 12:42:23.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.859" endtime="20201112 12:42:23.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.857" endtime="20201112 12:42:23.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.892" endtime="20201112 12:42:24.177"></status>
</kw>
<msg timestamp="20201112 12:42:24.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021536472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.890" endtime="20201112 12:42:24.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021536472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021573542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.181" endtime="20201112 12:42:24.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.190" endtime="20201112 12:42:24.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.888" endtime="20201112 12:42:24.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.886" endtime="20201112 12:42:24.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.196" level="INFO">${RESULT} = [{'time': 0.021573542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.707000000000016e-05, 'source_diff': 3.707000000000016e-05}, {'time': 0.021615306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:24.193" endtime="20201112 12:42:24.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.209" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.197" endtime="20201112 12:42:24.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.214" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.213" endtime="20201112 12:42:24.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.216" level="INFO">VALUE: [3.707000000000016e-05, 3.7153000000001574e-05, 3.691600000000142e-05, 3.6846999999999575e-05, 3.6582999999999755e-05, 3.7054999999997645e-05, 3.7041000000001545e-05, 3.6833000000000005e-05, 3.673599999999902e-05, 3.698599999999927e-05, 3.6805000000000865e-05, 3.694400000000056e-05, 3.6889000000001754e-05, 3.698599999999927e-05, 3.6888999999998284e-05, 3.6846999999999575e-05, 3.6569000000000185e-05, 3.679200000000077e-05, 3.705600000000059e-05, 3.697200000000317e-05, 3.676400000000163e-05, 3.6861000000002614e-05, 3.672199999999945e-05, 3.702799999999798e-05, 3.701400000000188e-05, 3.6875000000002184e-05, 3.6917000000000894e-05, 3.6667000000000644e-05, 3.707000000000016e-05, 3.681999999999991e-05, 3.6860999999999144e-05, 3.69719999999997e-05, 3.701399999999841e-05, 3.6846999999999575e-05, 3.705599999999712e-05, 3.6874999999998714e-05, 3.707000000000016e-05, 3.6888999999998284e-05, 3.6666999999997174e-05, 3.650000000000181e-05, 3.708399999999973e-05, 3.6596999999999325e-05, 3.6638999999998034e-05, 3.656999999999966e-05, 3.6875000000002184e-05, 3.6846999999999575e-05, 3.7096999999999825e-05, 3.665199999999813e-05, 3.699999999999884e-05, 3.7012999999998936e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.215" endtime="20201112 12:42:24.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.210" endtime="20201112 12:42:24.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.220" endtime="20201112 12:42:24.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.223" endtime="20201112 12:42:24.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.222" endtime="20201112 12:42:24.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.218" endtime="20201112 12:42:24.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.855" endtime="20201112 12:42:24.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.855" endtime="20201112 12:42:24.244"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.252" endtime="20201112 12:42:24.269"></status>
</kw>
<msg timestamp="20201112 12:42:24.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.251" endtime="20201112 12:42:24.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.270" endtime="20201112 12:42:24.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.273" endtime="20201112 12:42:24.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.248" endtime="20201112 12:42:24.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.246" endtime="20201112 12:42:24.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.282" endtime="20201112 12:42:24.568"></status>
</kw>
<msg timestamp="20201112 12:42:24.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.281" endtime="20201112 12:42:24.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021635361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.573" endtime="20201112 12:42:24.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.581" endtime="20201112 12:42:24.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.278" endtime="20201112 12:42:24.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.277" endtime="20201112 12:42:24.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.587" level="INFO">${RESULT} = [{'time': 0.021635361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.770799999999741e-05, 'source_diff': 3.770799999999741e-05}, {'time': 0.021678153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:24.584" endtime="20201112 12:42:24.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.601" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.588" endtime="20201112 12:42:24.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.606" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.605" endtime="20201112 12:42:24.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.608" level="INFO">VALUE: [3.770799999999741e-05, 3.7861000000000145e-05, 3.801399999999941e-05, 3.798600000000027e-05, 3.802799999999898e-05, 3.7652999999998604e-05, 3.79590000000006e-05, 3.777799999999873e-05, 3.807000000000116e-05, 3.797300000000017e-05, 3.782000000000091e-05, 3.7972999999996704e-05, 3.7708999999996884e-05, 3.770900000000035e-05, 3.772200000000045e-05, 3.792999999999852e-05, 3.7695000000000783e-05, 3.801399999999941e-05, 3.7847000000000575e-05, 3.772200000000045e-05, 3.799999999999984e-05, 3.7860999999996675e-05, 3.763799999999956e-05, 3.765199999999913e-05, 3.7832999999997535e-05, 3.770799999999741e-05, 3.8040999999999076e-05, 3.8054999999998645e-05, 3.7902999999998854e-05, 3.7833000000001005e-05, 3.798600000000027e-05, 3.8055000000002115e-05, 3.7917000000001894e-05, 3.7681000000001214e-05, 3.8054999999998645e-05, 3.7695000000000783e-05, 3.7888999999999284e-05, 3.7624999999999464e-05, 3.754199999999805e-05, 3.7916999999998424e-05, 3.782000000000091e-05, 3.755600000000109e-05, 3.7861000000000145e-05, 3.772200000000045e-05, 3.7889000000002754e-05, 3.77780000000022e-05, 3.774999999999959e-05, 3.7596999999996855e-05, 3.758399999999676e-05, 3.774999999999959e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.607" endtime="20201112 12:42:24.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.602" endtime="20201112 12:42:24.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.612" endtime="20201112 12:42:24.613"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.615" endtime="20201112 12:42:24.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.614" endtime="20201112 12:42:24.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.610" endtime="20201112 12:42:24.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.245" endtime="20201112 12:42:24.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.244" endtime="20201112 12:42:24.636"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.644" endtime="20201112 12:42:24.661"></status>
</kw>
<msg timestamp="20201112 12:42:24.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.643" endtime="20201112 12:42:24.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.662" endtime="20201112 12:42:24.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.665" endtime="20201112 12:42:24.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.640" endtime="20201112 12:42:24.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.638" endtime="20201112 12:42:24.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.675" endtime="20201112 12:42:24.959"></status>
</kw>
<msg timestamp="20201112 12:42:24.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.673" endtime="20201112 12:42:24.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021950611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.963" endtime="20201112 12:42:24.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.971" endtime="20201112 12:42:24.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.671" endtime="20201112 12:42:24.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.669" endtime="20201112 12:42:24.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.978" level="INFO">${RESULT} = [{'time': 0.021950611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.89859999999978e-05, 'source_diff': 3.89859999999978e-05}, {'time': 0.021994389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:24.975" endtime="20201112 12:42:24.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.991" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:24.979" endtime="20201112 12:42:24.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.996" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.995" endtime="20201112 12:42:24.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.998" level="INFO">VALUE: [3.89859999999978e-05, 3.904199999999955e-05, 3.901400000000041e-05, 3.8708999999997884e-05, 3.9124999999997495e-05, 3.900000000000084e-05, 3.8916999999999424e-05, 3.8625000000000465e-05, 3.8777000000000256e-05, 3.8889000000000284e-05, 3.861200000000037e-05, 3.877799999999973e-05, 3.898600000000127e-05, 3.8555000000002615e-05, 3.865200000000013e-05, 3.8944999999998564e-05, 3.8583000000001755e-05, 3.8554999999999146e-05, 3.8777000000000256e-05, 3.8818999999998965e-05, 3.8583000000001755e-05, 3.876400000000016e-05, 3.8818999999998965e-05, 3.86659999999997e-05, 3.9054999999999646e-05, 3.8804999999999396e-05, 3.8652999999999604e-05, 3.854200000000252e-05, 3.8611000000000895e-05, 3.8639000000000034e-05, 3.8833000000002005e-05, 3.9082999999998785e-05, 3.8833000000002005e-05, 3.8902999999999854e-05, 3.8833000000002005e-05, 3.8681000000002214e-05, 3.905599999999912e-05, 3.895800000000213e-05, 3.872300000000092e-05, 3.877799999999973e-05, 3.857000000000166e-05, 3.8639000000000034e-05, 3.901400000000041e-05, 3.898600000000127e-05, 3.858399999999776e-05, 3.8611000000000895e-05, 3.8902999999999854e-05, 3.909799999999783e-05, 3.884800000000105e-05, 3.856999999999819e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.997" endtime="20201112 12:42:24.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.992" endtime="20201112 12:42:24.999"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.002" endtime="20201112 12:42:25.003"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.005" endtime="20201112 12:42:25.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.003" endtime="20201112 12:42:25.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.000" endtime="20201112 12:42:25.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.637" endtime="20201112 12:42:25.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.636" endtime="20201112 12:42:25.026"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.034" endtime="20201112 12:42:25.051"></status>
</kw>
<msg timestamp="20201112 12:42:25.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.033" endtime="20201112 12:42:25.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.052" endtime="20201112 12:42:25.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.055" endtime="20201112 12:42:25.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.030" endtime="20201112 12:42:25.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.028" endtime="20201112 12:42:25.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.064" endtime="20201112 12:42:25.350"></status>
</kw>
<msg timestamp="20201112 12:42:25.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.063" endtime="20201112 12:42:25.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.354" endtime="20201112 12:42:25.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.362" endtime="20201112 12:42:25.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.060" endtime="20201112 12:42:25.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.059" endtime="20201112 12:42:25.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.369" level="INFO">${RESULT} = [{'time': 0.021638333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.951400000000091e-05, 'source_diff': 3.951400000000091e-05}, {'time': 0.021683125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.366" endtime="20201112 12:42:25.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.382" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:25.370" endtime="20201112 12:42:25.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.387" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.386" endtime="20201112 12:42:25.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.389" level="INFO">VALUE: [3.951400000000091e-05, 3.9875000000001715e-05, 3.9846999999999105e-05, 4.006999999999969e-05, 3.9903000000000854e-05, 4.001399999999794e-05, 3.975000000000159e-05, 3.955599999999962e-05, 3.973599999999855e-05, 3.979199999999683e-05, 3.980599999999987e-05, 3.973599999999855e-05, 3.95980000000018e-05, 3.952800000000048e-05, 4.001399999999794e-05, 4.006999999999969e-05, 3.990200000000138e-05, 3.9818999999999966e-05, 4.005600000000012e-05, 4.000000000000184e-05, 3.9846999999999105e-05, 4.0069000000000216e-05, 3.970799999999941e-05, 3.9818999999999966e-05, 3.9861000000002145e-05, 3.9582999999999285e-05, 3.994400000000009e-05, 3.973600000000202e-05, 3.9568999999999716e-05, 3.9624999999997995e-05, 3.972200000000245e-05, 4.0110999999998925e-05, 3.947199999999873e-05, 3.952800000000048e-05, 3.973599999999855e-05, 3.97920000000003e-05, 3.9832999999999535e-05, 3.955599999999962e-05, 3.951399999999744e-05, 3.969399999999984e-05, 3.9625000000001465e-05, 3.975000000000159e-05, 3.977800000000073e-05, 3.9610999999998425e-05, 3.955600000000309e-05, 4.005600000000012e-05, 4.008399999999926e-05, 3.9889000000001285e-05, 3.9611000000001895e-05, 3.977800000000073e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.388" endtime="20201112 12:42:25.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.383" endtime="20201112 12:42:25.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.393" endtime="20201112 12:42:25.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.396" endtime="20201112 12:42:25.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.394" endtime="20201112 12:42:25.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.391" endtime="20201112 12:42:25.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.027" endtime="20201112 12:42:25.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.026" endtime="20201112 12:42:25.417"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.425" endtime="20201112 12:42:25.441"></status>
</kw>
<msg timestamp="20201112 12:42:25.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.424" endtime="20201112 12:42:25.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.443" endtime="20201112 12:42:25.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.445" endtime="20201112 12:42:25.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.421" endtime="20201112 12:42:25.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.419" endtime="20201112 12:42:25.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.455" endtime="20201112 12:42:25.740"></status>
</kw>
<msg timestamp="20201112 12:42:25.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.454" endtime="20201112 12:42:25.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.744" endtime="20201112 12:42:25.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.753" endtime="20201112 12:42:25.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.451" endtime="20201112 12:42:25.755"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.449" endtime="20201112 12:42:25.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.759" level="INFO">${RESULT} = [{'time': 0.022024792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.100000000000284e-05, 'source_diff': 4.100000000000284e-05}, {'time': 0.022070569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.756" endtime="20201112 12:42:25.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.772" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:25.760" endtime="20201112 12:42:25.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.777" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.776" endtime="20201112 12:42:25.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.779" level="INFO">VALUE: [4.100000000000284e-05, 4.1013000000002936e-05, 4.090200000000238e-05, 4.0819000000000966e-05, 4.0569000000000716e-05, 4.0541000000001576e-05, 4.0569000000000716e-05, 4.0889000000002285e-05, 4.1124999999999495e-05, 4.101399999999894e-05, 4.093000000000152e-05, 4.0888999999998815e-05, 4.0860999999999675e-05, 4.1097000000000355e-05, 4.072199999999998e-05, 4.072199999999998e-05, 4.1110999999999925e-05, 4.104199999999808e-05, 4.0903000000001855e-05, 4.0596999999999855e-05, 4.09859999999998e-05, 4.080600000000087e-05, 4.09859999999998e-05, 4.051400000000191e-05, 4.0888999999998815e-05, 4.074999999999912e-05, 4.101399999999894e-05, 4.077799999999826e-05, 4.101399999999894e-05, 4.083400000000001e-05, 4.0638999999998565e-05, 4.0959000000000134e-05, 4.077799999999826e-05, 4.09859999999998e-05, 4.0624999999998995e-05, 4.0624999999998995e-05, 4.0625000000002465e-05, 4.100000000000284e-05, 4.108400000000026e-05, 4.082000000000044e-05, 4.1083000000000786e-05, 4.0874999999999245e-05, 4.068000000000127e-05, 4.0596999999999855e-05, 4.0569000000000716e-05, 4.065200000000213e-05, 4.095800000000066e-05, 4.072199999999998e-05, 4.0540999999998106e-05, 4.099999999999937e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.778" endtime="20201112 12:42:25.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.773" endtime="20201112 12:42:25.781"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.783" endtime="20201112 12:42:25.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.786" endtime="20201112 12:42:25.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.785" endtime="20201112 12:42:25.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.781" endtime="20201112 12:42:25.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.418" endtime="20201112 12:42:25.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.417" endtime="20201112 12:42:25.807"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.816" endtime="20201112 12:42:25.832"></status>
</kw>
<msg timestamp="20201112 12:42:25.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.814" endtime="20201112 12:42:25.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.834" endtime="20201112 12:42:25.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.836" endtime="20201112 12:42:25.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.811" endtime="20201112 12:42:25.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.809" endtime="20201112 12:42:25.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.846" endtime="20201112 12:42:26.131"></status>
</kw>
<msg timestamp="20201112 12:42:26.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.844" endtime="20201112 12:42:26.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.135" endtime="20201112 12:42:26.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.143" endtime="20201112 12:42:26.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.842" endtime="20201112 12:42:26.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.840" endtime="20201112 12:42:26.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.150" level="INFO">${RESULT} = [{'time': 0.022038111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1818999999998496e-05, 'source_diff': 4.1818999999998496e-05}, {'time': 0.022084903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:26.147" endtime="20201112 12:42:26.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.151" endtime="20201112 12:42:26.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.169" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.168" endtime="20201112 12:42:26.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.171" level="INFO">VALUE: [4.1818999999998496e-05, 4.179199999999883e-05, 4.155600000000162e-05, 4.17920000000023e-05, 4.173599999999708e-05, 4.1638999999999565e-05, 4.19860000000008e-05, 4.1611000000000425e-05, 4.1987000000000274e-05, 4.1652999999999135e-05, 4.1916999999998955e-05, 4.1652999999999135e-05, 4.1875000000000245e-05, 4.1790999999999356e-05, 4.175000000000012e-05, 4.200000000000037e-05, 4.1930999999998525e-05, 4.170799999999794e-05, 4.2027000000000037e-05, 4.169400000000184e-05, 4.151399999999944e-05, 4.2040999999999606e-05, 4.202799999999951e-05, 4.191599999999948e-05, 4.1652999999999135e-05, 4.175000000000012e-05, 4.1624999999999995e-05, 4.2068999999998746e-05, 4.1833000000001536e-05, 4.2068999999998746e-05, 4.176399999999969e-05, 4.195799999999819e-05, 4.1833000000001536e-05, 4.157000000000119e-05, 4.175000000000012e-05, 4.1944999999998095e-05, 4.204199999999908e-05, 4.1945000000001564e-05, 4.21120000000004e-05, 4.1902999999999385e-05, 4.202799999999951e-05, 4.1973000000000704e-05, 4.1681000000001744e-05, 4.176399999999969e-05, 4.209800000000083e-05, 4.1554999999998676e-05, 4.200000000000037e-05, 4.151399999999944e-05, 4.2110999999997456e-05, 4.177799999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.170" endtime="20201112 12:42:26.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.165" endtime="20201112 12:42:26.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.175" endtime="20201112 12:42:26.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.178" endtime="20201112 12:42:26.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.176" endtime="20201112 12:42:26.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.173" endtime="20201112 12:42:26.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.808" endtime="20201112 12:42:26.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.807" endtime="20201112 12:42:26.199"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.207" endtime="20201112 12:42:26.223"></status>
</kw>
<msg timestamp="20201112 12:42:26.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.206" endtime="20201112 12:42:26.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.225" endtime="20201112 12:42:26.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.227" endtime="20201112 12:42:26.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.203" endtime="20201112 12:42:26.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.201" endtime="20201112 12:42:26.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.237" endtime="20201112 12:42:26.523"></status>
</kw>
<msg timestamp="20201112 12:42:26.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021502139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.236" endtime="20201112 12:42:26.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021458917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021502139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.527" endtime="20201112 12:42:26.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.535" endtime="20201112 12:42:26.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.233" endtime="20201112 12:42:26.537"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.231" endtime="20201112 12:42:26.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.542" level="INFO">${RESULT} = [{'time': 0.021502139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.322199999999901e-05, 'source_diff': 4.322199999999901e-05}, {'time': 0.021549931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.539" endtime="20201112 12:42:26.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.555" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.543" endtime="20201112 12:42:26.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.559" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.558" endtime="20201112 12:42:26.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.562" level="INFO">VALUE: [4.322199999999901e-05, 4.283400000000201e-05, 4.2709000000001884e-05, 4.2987000000001274e-05, 4.288800000000134e-05, 4.2791000000000357e-05, 4.277800000000026e-05, 4.279199999999983e-05, 4.2568999999999246e-05, 4.2639000000000565e-05, 4.3068999999999746e-05, 4.2804999999999926e-05, 4.2875000000001245e-05, 4.2582999999998816e-05, 4.269400000000284e-05, 4.2582999999998816e-05, 4.291600000000048e-05, 4.2818999999999496e-05, 4.304200000000008e-05, 4.2582999999998816e-05, 4.272200000000198e-05, 4.295799999999919e-05, 4.3068999999999746e-05, 4.2666999999999705e-05, 4.277800000000026e-05, 4.2611000000001426e-05, 4.277800000000026e-05, 4.255599999999915e-05, 4.3082999999999316e-05, 4.297199999999876e-05, 4.2582999999998816e-05, 4.252800000000001e-05, 4.2903000000000385e-05, 4.306999999999922e-05, 4.304200000000008e-05, 4.2611000000001426e-05, 4.298599999999833e-05, 4.304200000000008e-05, 4.274999999999765e-05, 4.277700000000079e-05, 4.304200000000008e-05, 4.308400000000226e-05, 4.252800000000001e-05, 4.302700000000104e-05, 4.295799999999919e-05, 4.2596999999998386e-05, 4.2791000000000357e-05, 4.3041000000000607e-05, 4.281999999999897e-05, 4.3082999999999316e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.560" endtime="20201112 12:42:26.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.556" endtime="20201112 12:42:26.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.565" endtime="20201112 12:42:26.567"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.569" endtime="20201112 12:42:26.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.567" endtime="20201112 12:42:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.564" endtime="20201112 12:42:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.200" endtime="20201112 12:42:26.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.199" endtime="20201112 12:42:26.590"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.598" endtime="20201112 12:42:26.614"></status>
</kw>
<msg timestamp="20201112 12:42:26.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.597" endtime="20201112 12:42:26.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.616" endtime="20201112 12:42:26.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.618" endtime="20201112 12:42:26.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.594" endtime="20201112 12:42:26.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.592" endtime="20201112 12:42:26.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.628" endtime="20201112 12:42:26.915"></status>
</kw>
<msg timestamp="20201112 12:42:26.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.627" endtime="20201112 12:42:26.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021645958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.919" endtime="20201112 12:42:26.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.927" endtime="20201112 12:42:26.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.624" endtime="20201112 12:42:26.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.622" endtime="20201112 12:42:26.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.934" level="INFO">${RESULT} = [{'time': 0.021689625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3667000000000705e-05, 'source_diff': 4.3667000000000705e-05}, {'time': 0.021738417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:26.931" endtime="20201112 12:42:26.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.947" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:26.935" endtime="20201112 12:42:26.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.952" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.951" endtime="20201112 12:42:26.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.954" level="INFO">VALUE: [4.3667000000000705e-05, 4.3972999999999235e-05, 4.3874999999998776e-05, 4.402700000000204e-05, 4.375000000000212e-05, 4.404200000000108e-05, 4.386199999999868e-05, 4.398599999999933e-05, 4.4096999999999886e-05, 4.350000000000187e-05, 4.3582999999999816e-05, 4.3624999999998526e-05, 4.376399999999822e-05, 4.366599999999776e-05, 4.402800000000151e-05, 4.376400000000169e-05, 4.3653000000001135e-05, 4.3569000000000246e-05, 4.3874999999998776e-05, 4.3805000000000927e-05, 4.401400000000194e-05, 4.376400000000169e-05, 4.405600000000065e-05, 4.3610999999998956e-05, 4.4069000000000746e-05, 4.397199999999976e-05, 4.402800000000151e-05, 4.383399999999954e-05, 4.405600000000065e-05, 4.3903000000001385e-05, 4.397199999999976e-05, 4.39999999999989e-05, 4.381999999999997e-05, 4.398599999999933e-05, 4.404200000000108e-05, 4.3708999999999415e-05, 4.373599999999908e-05, 4.356999999999972e-05, 4.3708999999999415e-05, 4.3680999999996806e-05, 4.3737000000002024e-05, 4.3846999999999636e-05, 4.3624999999998526e-05, 4.390199999999844e-05, 4.3596999999999386e-05, 4.408299999999685e-05, 4.3625000000001996e-05, 4.3874999999998776e-05, 4.398599999999933e-05, 4.4124999999999026e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.953" endtime="20201112 12:42:26.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.948" endtime="20201112 12:42:26.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.958" endtime="20201112 12:42:26.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.961" endtime="20201112 12:42:26.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.959" endtime="20201112 12:42:26.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.956" endtime="20201112 12:42:26.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.590" endtime="20201112 12:42:26.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.590" endtime="20201112 12:42:26.982"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.990" endtime="20201112 12:42:27.006"></status>
</kw>
<msg timestamp="20201112 12:42:27.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.989" endtime="20201112 12:42:27.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.007" endtime="20201112 12:42:27.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.010" endtime="20201112 12:42:27.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.986" endtime="20201112 12:42:27.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.984" endtime="20201112 12:42:27.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.020" endtime="20201112 12:42:27.304"></status>
</kw>
<msg timestamp="20201112 12:42:27.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:27.018" endtime="20201112 12:42:27.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021753, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:27.308" endtime="20201112 12:42:27.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.316" endtime="20201112 12:42:27.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.016" endtime="20201112 12:42:27.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.014" endtime="20201112 12:42:27.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.323" level="INFO">${RESULT} = [{'time': 0.021753, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5083000000001316e-05, 'source_diff': 4.5083000000001316e-05}, {'time': 0.021802792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:27.319" endtime="20201112 12:42:27.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.336" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:27.324" endtime="20201112 12:42:27.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.341" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.340" endtime="20201112 12:42:27.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.344" level="INFO">VALUE: [4.5083000000001316e-05, 4.5209000000000915e-05, 4.4916999999998486e-05, 4.4666999999998236e-05, 4.4610999999999956e-05, 4.459799999999986e-05, 4.486199999999968e-05, 4.4874999999999776e-05, 4.477799999999879e-05, 4.502799999999904e-05, 4.477700000000279e-05, 4.4722999999999985e-05, 4.481899999999803e-05, 4.506899999999828e-05, 4.502699999999957e-05, 4.491599999999901e-05, 4.480499999999846e-05, 4.497200000000076e-05, 4.497200000000076e-05, 4.454100000000211e-05, 4.4917000000001955e-05, 4.509699999999742e-05, 4.504099999999914e-05, 4.481899999999803e-05, 4.456899999999778e-05, 4.4666999999998236e-05, 4.4902999999998916e-05, 4.502799999999904e-05, 4.4931000000001525e-05, 4.473600000000008e-05, 4.4667000000001705e-05, 4.4639000000002566e-05, 4.497199999999729e-05, 4.4597000000000386e-05, 4.4695000000000845e-05, 4.502799999999904e-05, 4.48060000000014e-05, 4.474999999999965e-05, 4.507000000000122e-05, 4.504200000000208e-05, 4.477800000000226e-05, 4.479200000000183e-05, 4.4875000000003246e-05, 4.480599999999793e-05, 4.4694999999997376e-05, 4.502799999999904e-05, 4.4736999999999555e-05, 4.4569000000001247e-05, 4.465199999999919e-05, 4.465200000000266e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.342" endtime="20201112 12:42:27.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.337" endtime="20201112 12:42:27.345"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.348" endtime="20201112 12:42:27.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.352" endtime="20201112 12:42:27.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.350" endtime="20201112 12:42:27.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.346" endtime="20201112 12:42:27.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.983" endtime="20201112 12:42:27.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.982" endtime="20201112 12:42:27.373"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.382" endtime="20201112 12:42:27.397"></status>
</kw>
<msg timestamp="20201112 12:42:27.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.380" endtime="20201112 12:42:27.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.399" endtime="20201112 12:42:27.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.401" endtime="20201112 12:42:27.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.378" endtime="20201112 12:42:27.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.375" endtime="20201112 12:42:27.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.411" endtime="20201112 12:42:27.697"></status>
</kw>
<msg timestamp="20201112 12:42:27.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.410" endtime="20201112 12:42:27.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.701" endtime="20201112 12:42:27.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.710" endtime="20201112 12:42:27.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.407" endtime="20201112 12:42:27.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.406" endtime="20201112 12:42:27.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.716" level="INFO">${RESULT} = [{'time': 0.021978903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.623600000000158e-05, 'source_diff': 4.623600000000158e-05}, {'time': 0.022028708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:27.713" endtime="20201112 12:42:27.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.731" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:27.717" endtime="20201112 12:42:27.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.735" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.734" endtime="20201112 12:42:27.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.738" level="INFO">VALUE: [4.623600000000158e-05, 4.527699999999982e-05, 4.594399999999915e-05, 4.581899999999903e-05, 4.56939999999989e-05, 4.5625000000000526e-05, 4.580499999999946e-05, 4.555499999999921e-05, 4.605499999999971e-05, 4.6083000000002317e-05, 4.6097000000001886e-05, 4.5569000000002247e-05, 4.5625000000000526e-05, 4.5611000000000956e-05, 4.6125000000001026e-05, 4.601400000000047e-05, 4.579199999999936e-05, 4.5583000000001817e-05, 4.605600000000265e-05, 4.5666999999999236e-05, 4.587499999999731e-05, 4.5861000000001206e-05, 4.575000000000065e-05, 4.5875000000000776e-05, 4.60000000000009e-05, 4.559699999999792e-05, 4.5930999999999056e-05, 4.563800000000062e-05, 4.588899999999688e-05, 4.567999999999933e-05, 4.5723000000000985e-05, 4.611200000000093e-05, 4.5987000000000805e-05, 4.574999999999718e-05, 4.570800000000194e-05, 4.597200000000176e-05, 4.572199999999804e-05, 4.556899999999878e-05, 4.56800000000028e-05, 4.566599999999976e-05, 4.577799999999979e-05, 4.56939999999989e-05, 4.608299999999885e-05, 4.566599999999976e-05, 4.56939999999989e-05, 4.5875000000000776e-05, 4.5902999999999916e-05, 4.5625000000000526e-05, 4.6111000000001456e-05, 4.5652999999999666e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.736" endtime="20201112 12:42:27.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.732" endtime="20201112 12:42:27.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.741" endtime="20201112 12:42:27.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.745" endtime="20201112 12:42:27.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.743" endtime="20201112 12:42:27.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.740" endtime="20201112 12:42:27.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.374" endtime="20201112 12:42:27.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.373" endtime="20201112 12:42:27.769"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.789" endtime="20201112 12:42:27.807"></status>
</kw>
<msg timestamp="20201112 12:42:27.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.785" endtime="20201112 12:42:27.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.811" endtime="20201112 12:42:27.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.816" endtime="20201112 12:42:27.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.779" endtime="20201112 12:42:27.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.774" endtime="20201112 12:42:27.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.837" endtime="20201112 12:42:28.124"></status>
</kw>
<msg timestamp="20201112 12:42:28.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037095347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037142653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.833" endtime="20201112 12:42:28.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037095347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037142653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.128" endtime="20201112 12:42:28.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.137" endtime="20201112 12:42:28.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.828" endtime="20201112 12:42:28.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.824" endtime="20201112 12:42:28.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.144" level="INFO">${RESULT} = [{'time': 0.037142653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.730599999999696e-05, 'source_diff': 4.730599999999696e-05}, {'time': 0.037194444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.140" endtime="20201112 12:42:28.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.157" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.145" endtime="20201112 12:42:28.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.162" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.161" endtime="20201112 12:42:28.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.165" level="INFO">VALUE: [4.730599999999696e-05, 4.7111000000002456e-05, 4.66939999999999e-05, 4.709699999999595e-05, 4.656900000000325e-05, 4.706900000000375e-05, 4.670799999999947e-05, 4.7139000000001596e-05, 4.691600000000101e-05, 4.695799999999972e-05, 4.686099999999527e-05, 4.679100000000436e-05, 4.709699999999595e-05, 4.68190000000035e-05, 4.6583000000002817e-05, 4.6667000000000236e-05, 4.676399999999775e-05, 4.682000000000297e-05, 4.654199999999664e-05, 4.708300000000332e-05, 4.697199999999929e-05, 4.6653000000000666e-05, 4.6639000000001096e-05, 4.6625000000001526e-05, 4.677799999999732e-05, 4.6639000000001096e-05, 4.701400000000494e-05, 4.687499999999484e-05, 4.6667000000000236e-05, 4.677800000000426e-05, 4.6708999999998946e-05, 4.68060000000034e-05, 4.6723000000005455e-05, 4.68469999999957e-05, 4.656900000000325e-05, 4.6847000000002637e-05, 4.654099999999717e-05, 4.665200000000119e-05, 4.683300000000307e-05, 4.695799999999972e-05, 4.674999999999818e-05, 4.706900000000375e-05, 4.712499999999509e-05, 4.6903000000000916e-05, 4.668000000000033e-05, 4.709699999999595e-05, 4.702799999999757e-05, 4.6917000000000486e-05, 4.704199999999714e-05, 4.7139000000001596e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.163" endtime="20201112 12:42:28.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.158" endtime="20201112 12:42:28.171"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.174" endtime="20201112 12:42:28.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.177" endtime="20201112 12:42:28.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.176" endtime="20201112 12:42:28.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.172" endtime="20201112 12:42:28.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.771" endtime="20201112 12:42:28.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.770" endtime="20201112 12:42:28.198"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.207" endtime="20201112 12:42:28.224"></status>
</kw>
<msg timestamp="20201112 12:42:28.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.206" endtime="20201112 12:42:28.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.225" endtime="20201112 12:42:28.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.228" endtime="20201112 12:42:28.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.203" endtime="20201112 12:42:28.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.201" endtime="20201112 12:42:28.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.238" endtime="20201112 12:42:28.529"></status>
</kw>
<msg timestamp="20201112 12:42:28.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.237" endtime="20201112 12:42:28.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022129139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.534" endtime="20201112 12:42:28.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.542" endtime="20201112 12:42:28.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.234" endtime="20201112 12:42:28.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.232" endtime="20201112 12:42:28.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.549" level="INFO">${RESULT} = [{'time': 0.022129139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.826399999999925e-05, 'source_diff': 4.826399999999925e-05}, {'time': 0.022181931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.546" endtime="20201112 12:42:28.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.573" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.550" endtime="20201112 12:42:28.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.583" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.581" endtime="20201112 12:42:28.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.589" level="INFO">VALUE: [4.826399999999925e-05, 4.802799999999857e-05, 4.80269999999991e-05, 4.794399999999768e-05, 4.756899999999731e-05, 4.805499999999824e-05, 4.790200000000244e-05, 4.804100000000214e-05, 4.775000000000265e-05, 4.779100000000189e-05, 4.768000000000133e-05, 4.758300000000035e-05, 4.774999999999918e-05, 4.747199999999979e-05, 4.806900000000128e-05, 4.776399999999875e-05, 4.761099999999949e-05, 4.804199999999814e-05, 4.777799999999832e-05, 4.784800000000311e-05, 4.7681000000000806e-05, 4.808300000000085e-05, 4.807000000000075e-05, 4.7959000000000196e-05, 4.7695000000000376e-05, 4.772200000000004e-05, 4.798599999999986e-05, 4.748599999999936e-05, 4.802799999999857e-05, 4.78330000000006e-05, 4.807000000000075e-05, 4.7723000000002985e-05, 4.779200000000136e-05, 4.799999999999943e-05, 4.7625000000002526e-05, 4.761200000000243e-05, 4.780500000000146e-05, 4.799999999999943e-05, 4.794400000000115e-05, 4.808300000000085e-05, 4.762499999999906e-05, 4.754100000000164e-05, 4.806900000000128e-05, 4.790299999999845e-05, 4.745800000000022e-05, 4.779099999999842e-05, 4.78330000000006e-05, 4.783299999999713e-05, 4.812499999999956e-05, 4.752799999999807e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.586" endtime="20201112 12:42:28.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.575" endtime="20201112 12:42:28.592"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.597" endtime="20201112 12:42:28.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.604" endtime="20201112 12:42:28.627"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.601" endtime="20201112 12:42:28.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.593" endtime="20201112 12:42:28.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.199" endtime="20201112 12:42:28.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.199" endtime="20201112 12:42:28.630"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.649" endtime="20201112 12:42:28.667"></status>
</kw>
<msg timestamp="20201112 12:42:28.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.646" endtime="20201112 12:42:28.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.668" endtime="20201112 12:42:28.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.671" endtime="20201112 12:42:28.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.640" endtime="20201112 12:42:28.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.635" endtime="20201112 12:42:28.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.681" endtime="20201112 12:42:28.967"></status>
</kw>
<msg timestamp="20201112 12:42:28.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038120556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038169069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.679" endtime="20201112 12:42:28.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038120556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038169069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.971" endtime="20201112 12:42:28.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.980" endtime="20201112 12:42:28.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.677" endtime="20201112 12:42:28.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.675" endtime="20201112 12:42:28.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.987" level="INFO">${RESULT} = [{'time': 0.038169069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.851300000000003e-05, 'source_diff': 4.851300000000003e-05}, {'time': 0.038222861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.983" endtime="20201112 12:42:28.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.001" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:28.988" endtime="20201112 12:42:29.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.005" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.004" endtime="20201112 12:42:29.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.008" level="INFO">VALUE: [4.851300000000003e-05, 4.909699999999795e-05, 4.909699999999795e-05, 4.895800000000172e-05, 4.894400000000215e-05, 4.877799999999932e-05, 4.879199999999889e-05, 4.8611000000003957e-05, 4.875000000000018e-05, 4.8639000000003096e-05, 4.8709000000000946e-05, 4.891699999999555e-05, 4.908300000000532e-05, 4.856999999999778e-05, 4.876399999999975e-05, 4.8723000000000516e-05, 4.894400000000215e-05, 4.872299999999358e-05, 4.8625000000003527e-05, 4.888899999999641e-05, 4.898600000000086e-05, 4.905499999999924e-05, 4.875000000000018e-05, 4.902799999999957e-05, 4.898600000000086e-05, 4.87219999999941e-05, 4.905499999999924e-05, 4.905499999999924e-05, 4.884700000000464e-05, 4.859699999999745e-05, 4.8651999999996254e-05, 4.909700000000489e-05, 4.8653000000002666e-05, 4.8611000000003957e-05, 4.88469999999977e-05, 4.883299999999813e-05, 4.909700000000489e-05, 4.895800000000172e-05, 4.856899999999831e-05, 4.8681000000001806e-05, 4.855599999999821e-05, 4.876400000000669e-05, 4.872200000000104e-05, 4.895800000000172e-05, 4.898600000000086e-05, 4.854199999999864e-05, 4.905599999999871e-05, 4.900000000000043e-05, 4.8931000000002056e-05, 4.9014e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.006" endtime="20201112 12:42:29.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.002" endtime="20201112 12:42:29.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.011" endtime="20201112 12:42:29.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.015" endtime="20201112 12:42:29.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.013" endtime="20201112 12:42:29.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.010" endtime="20201112 12:42:29.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.632" endtime="20201112 12:42:29.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.631" endtime="20201112 12:42:29.036"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.045" endtime="20201112 12:42:29.062"></status>
</kw>
<msg timestamp="20201112 12:42:29.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.043" endtime="20201112 12:42:29.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.063" endtime="20201112 12:42:29.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.066" endtime="20201112 12:42:29.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.041" endtime="20201112 12:42:29.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.038" endtime="20201112 12:42:29.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.076" endtime="20201112 12:42:29.362"></status>
</kw>
<msg timestamp="20201112 12:42:29.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.075" endtime="20201112 12:42:29.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022329958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022380403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.367" endtime="20201112 12:42:29.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.382" endtime="20201112 12:42:29.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.072" endtime="20201112 12:42:29.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.070" endtime="20201112 12:42:29.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.389" level="INFO">${RESULT} = [{'time': 0.022380403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.044499999999966e-05, 'source_diff': 5.044499999999966e-05}, {'time': 0.022435125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.386" endtime="20201112 12:42:29.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.404" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:29.390" endtime="20201112 12:42:29.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.408" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.407" endtime="20201112 12:42:29.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.411" level="INFO">VALUE: [5.044499999999966e-05, 4.998600000000186e-05, 4.968099999999934e-05, 4.980599999999946e-05, 4.962499999999759e-05, 4.9709000000001946e-05, 4.973600000000161e-05, 5.011100000000199e-05, 4.980499999999999e-05, 4.991700000000002e-05, 4.991700000000002e-05, 4.962500000000106e-05, 4.988900000000088e-05, 4.96530000000002e-05, 4.98469999999987e-05, 4.9931000000003056e-05, 4.979199999999989e-05, 4.9651999999997254e-05, 4.994399999999968e-05, 4.969399999999943e-05, 4.981899999999956e-05, 5.006899999999981e-05, 4.995800000000272e-05, 5.0014000000001e-05, 4.972200000000204e-05, 4.954100000000017e-05, 5.006899999999981e-05, 4.977800000000032e-05, 4.98330000000026e-05, 4.955599999999921e-05, 4.976399999999728e-05, 5.006899999999981e-05, 4.969399999999943e-05, 4.979199999999989e-05, 4.979199999999989e-05, 4.958300000000235e-05, 4.997199999999882e-05, 4.981999999999903e-05, 4.954199999999964e-05, 5.016700000000027e-05, 4.947199999999832e-05, 4.9723000000001516e-05, 5.0014000000001e-05, 4.98200000000025e-05, 4.9737000000001086e-05, 4.981999999999903e-05, 4.9707999999999e-05, 4.9929999999996644e-05, 5.002800000000057e-05, 4.967999999999986e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.409" endtime="20201112 12:42:29.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.405" endtime="20201112 12:42:29.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.414" endtime="20201112 12:42:29.416"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.418" endtime="20201112 12:42:29.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.416" endtime="20201112 12:42:29.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.413" endtime="20201112 12:42:29.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.037" endtime="20201112 12:42:29.438"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.036" endtime="20201112 12:42:29.439"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.447" endtime="20201112 12:42:29.464"></status>
</kw>
<msg timestamp="20201112 12:42:29.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.446" endtime="20201112 12:42:29.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.465" endtime="20201112 12:42:29.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.468" endtime="20201112 12:42:29.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.443" endtime="20201112 12:42:29.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.441" endtime="20201112 12:42:29.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.478" endtime="20201112 12:42:29.764"></status>
</kw>
<msg timestamp="20201112 12:42:29.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.476" endtime="20201112 12:42:29.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.768" endtime="20201112 12:42:29.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.776" endtime="20201112 12:42:29.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.473" endtime="20201112 12:42:29.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.472" endtime="20201112 12:42:29.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.783" level="INFO">${RESULT} = [{'time': 0.022036972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.083300000000013e-05, 'source_diff': 5.083300000000013e-05}, {'time': 0.022092792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:29.779" endtime="20201112 12:42:29.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.796" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:29.784" endtime="20201112 12:42:29.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.801" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.800" endtime="20201112 12:42:29.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.803" level="INFO">VALUE: [5.083300000000013e-05, 5.086099999999927e-05, 5.086099999999927e-05, 5.093100000000059e-05, 5.10279999999981e-05, 5.104199999999767e-05, 5.065299999999773e-05, 5.105600000000071e-05, 5.077800000000132e-05, 5.077799999999785e-05, 5.104199999999767e-05, 5.062499999999859e-05, 5.104100000000167e-05, 5.059800000000239e-05, 5.074999999999871e-05, 5.0986999999998867e-05, 5.0679999999997394e-05, 5.0901999999998504e-05, 5.0902000000001973e-05, 5.0708e-05, 5.056900000000031e-05, 5.068000000000086e-05, 5.072199999999957e-05, 5.0929999999997644e-05, 5.105500000000124e-05, 5.058299999999988e-05, 5.104100000000167e-05, 5.088899999999841e-05, 5.088899999999841e-05, 5.086100000000274e-05, 5.076400000000175e-05, 5.062499999999859e-05, 5.073599999999914e-05, 5.101399999999853e-05, 5.093100000000059e-05, 5.086100000000274e-05, 5.0708e-05, 5.101399999999853e-05, 5.10279999999981e-05, 5.062500000000206e-05, 5.069499999999991e-05, 5.0708e-05, 5.061199999999849e-05, 5.088899999999841e-05, 5.076399999999828e-05, 5.079200000000089e-05, 5.088900000000188e-05, 5.111099999999952e-05, 5.106900000000081e-05, 5.080500000000099e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.802" endtime="20201112 12:42:29.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.797" endtime="20201112 12:42:29.804"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.807" endtime="20201112 12:42:29.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.810" endtime="20201112 12:42:29.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.809" endtime="20201112 12:42:29.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.805" endtime="20201112 12:42:29.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.440" endtime="20201112 12:42:29.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.439" endtime="20201112 12:42:29.831"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.840" endtime="20201112 12:42:29.856"></status>
</kw>
<msg timestamp="20201112 12:42:29.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.838" endtime="20201112 12:42:29.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.858" endtime="20201112 12:42:29.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.860" endtime="20201112 12:42:29.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.836" endtime="20201112 12:42:29.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.833" endtime="20201112 12:42:29.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.870" endtime="20201112 12:42:30.156"></status>
</kw>
<msg timestamp="20201112 12:42:30.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.869" endtime="20201112 12:42:30.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.160" endtime="20201112 12:42:30.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.168" endtime="20201112 12:42:30.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.866" endtime="20201112 12:42:30.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.864" endtime="20201112 12:42:30.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.175" level="INFO">${RESULT} = [{'time': 0.021856222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.168000000000186e-05, 'source_diff': 5.168000000000186e-05}, {'time': 0.021913069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:30.172" endtime="20201112 12:42:30.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.188" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.176" endtime="20201112 12:42:30.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.193" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.192" endtime="20201112 12:42:30.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.195" level="INFO">VALUE: [5.168000000000186e-05, 5.2151999999999754e-05, 5.155600000000121e-05, 5.179199999999842e-05, 5.172200000000057e-05, 5.155599999999774e-05, 5.211100000000052e-05, 5.205600000000171e-05, 5.162499999999959e-05, 5.157000000000078e-05, 5.191700000000202e-05, 5.161200000000296e-05, 5.1735999999996674e-05, 5.20409999999992e-05, 5.1929999999998644e-05, 5.1651999999999254e-05, 5.190299999999898e-05, 5.193000000000211e-05, 5.2014000000003e-05, 5.188900000000288e-05, 5.15279999999986e-05, 5.1665999999998824e-05, 5.174999999999971e-05, 5.183300000000113e-05, 5.1708000000001e-05, 5.154200000000164e-05, 5.194400000000168e-05, 5.209700000000095e-05, 5.188900000000288e-05, 5.2165999999999324e-05, 5.190299999999898e-05, 5.20279999999991e-05, 5.176399999999928e-05, 5.154199999999817e-05, 5.199999999999996e-05, 5.199999999999996e-05, 5.205600000000171e-05, 5.172300000000005e-05, 5.180600000000146e-05, 5.162500000000306e-05, 5.206999999999781e-05, 5.195900000000073e-05, 5.1915999999999074e-05, 5.1915999999999074e-05, 5.159700000000045e-05, 5.198600000000039e-05, 5.156900000000131e-05, 5.1679999999998394e-05, 5.163899999999916e-05, 5.162499999999959e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.194" endtime="20201112 12:42:30.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.189" endtime="20201112 12:42:30.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.199" endtime="20201112 12:42:30.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.202" endtime="20201112 12:42:30.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.201" endtime="20201112 12:42:30.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.197" endtime="20201112 12:42:30.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.832" endtime="20201112 12:42:30.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.831" endtime="20201112 12:42:30.223"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.232" endtime="20201112 12:42:30.248"></status>
</kw>
<msg timestamp="20201112 12:42:30.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.230" endtime="20201112 12:42:30.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.250" endtime="20201112 12:42:30.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.252" endtime="20201112 12:42:30.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.228" endtime="20201112 12:42:30.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.226" endtime="20201112 12:42:30.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.262" endtime="20201112 12:42:30.549"></status>
</kw>
<msg timestamp="20201112 12:42:30.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.261" endtime="20201112 12:42:30.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022338833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022392181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.553" endtime="20201112 12:42:30.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.561" endtime="20201112 12:42:30.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.258" endtime="20201112 12:42:30.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.256" endtime="20201112 12:42:30.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.568" level="INFO">${RESULT} = [{'time': 0.022392181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.334800000000167e-05, 'source_diff': 5.334800000000167e-05}, {'time': 0.022449931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:30.565" endtime="20201112 12:42:30.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.581" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.569" endtime="20201112 12:42:30.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.586" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.585" endtime="20201112 12:42:30.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.588" level="INFO">VALUE: [5.334800000000167e-05, 5.291699999999955e-05, 5.275000000000071e-05, 5.311099999999805e-05, 5.280499999999952e-05, 5.302699999999716e-05, 5.305499999999977e-05, 5.266700000000277e-05, 5.2693999999998964e-05, 5.305499999999977e-05, 5.311099999999805e-05, 5.2943999999999214e-05, 5.275000000000071e-05, 5.302700000000063e-05, 5.305499999999977e-05, 5.266700000000277e-05, 5.273600000000114e-05, 5.304199999999967e-05, 5.263900000000016e-05, 5.279199999999942e-05, 5.268099999999887e-05, 5.262500000000059e-05, 5.283300000000213e-05, 5.2735999999997674e-05, 5.306999999999881e-05, 5.280600000000246e-05, 5.279199999999942e-05, 5.282000000000203e-05, 5.288900000000041e-05, 5.257000000000178e-05, 5.284699999999823e-05, 5.309699999999848e-05, 5.298600000000139e-05, 5.30280000000001e-05, 5.254199999999917e-05, 5.309800000000142e-05, 5.2707999999998534e-05, 5.258300000000188e-05, 5.263900000000016e-05, 5.311100000000152e-05, 5.2985999999997924e-05, 5.273600000000114e-05, 5.300000000000096e-05, 5.309699999999848e-05, 5.28470000000017e-05, 5.2930000000003113e-05, 5.263900000000016e-05, 5.280499999999952e-05, 5.304199999999967e-05, 5.281899999999909e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.587" endtime="20201112 12:42:30.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.582" endtime="20201112 12:42:30.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.592" endtime="20201112 12:42:30.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.595" endtime="20201112 12:42:30.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.594" endtime="20201112 12:42:30.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.590" endtime="20201112 12:42:30.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.224" endtime="20201112 12:42:30.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.223" endtime="20201112 12:42:30.616"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.625" endtime="20201112 12:42:30.641"></status>
</kw>
<msg timestamp="20201112 12:42:30.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.623" endtime="20201112 12:42:30.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.643" endtime="20201112 12:42:30.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.645" endtime="20201112 12:42:30.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.621" endtime="20201112 12:42:30.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.619" endtime="20201112 12:42:30.649"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.655" endtime="20201112 12:42:30.941"></status>
</kw>
<msg timestamp="20201112 12:42:30.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:30.654" endtime="20201112 12:42:30.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022293, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:30.945" endtime="20201112 12:42:30.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.953" endtime="20201112 12:42:30.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.651" endtime="20201112 12:42:30.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.649" endtime="20201112 12:42:30.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.960" level="INFO">${RESULT} = [{'time': 0.022293, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.359699999999898e-05, 'source_diff': 5.359699999999898e-05}, {'time': 0.022350819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:30.957" endtime="20201112 12:42:30.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.974" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:30.961" endtime="20201112 12:42:30.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.979" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.978" endtime="20201112 12:42:30.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.981" level="INFO">VALUE: [5.359699999999898e-05, 5.33470000000022e-05, 5.359699999999898e-05, 5.358399999999888e-05, 5.375000000000171e-05, 5.3985999999998924e-05, 5.381999999999956e-05, 5.411099999999905e-05, 5.400000000000196e-05, 5.380500000000052e-05, 5.391700000000055e-05, 5.383299999999966e-05, 5.355500000000027e-05, 5.379099999999748e-05, 5.358300000000288e-05, 5.381900000000009e-05, 5.35410000000007e-05, 5.363900000000116e-05, 5.38609999999988e-05, 5.3999999999998494e-05, 5.365300000000073e-05, 5.400000000000196e-05, 5.3721999999999104e-05, 5.400000000000196e-05, 5.380599999999999e-05, 5.3985999999998924e-05, 5.363899999999769e-05, 5.3721999999999104e-05, 5.397299999999883e-05, 5.3707999999999534e-05, 5.377800000000085e-05, 5.3985999999998924e-05, 5.381999999999956e-05, 5.356899999999984e-05, 5.369499999999944e-05, 5.383399999999913e-05, 5.380500000000052e-05, 5.361100000000202e-05, 5.387499999999837e-05, 5.3999999999998494e-05, 5.388900000000141e-05, 5.406900000000034e-05, 5.40549999999973e-05, 5.365300000000073e-05, 5.376400000000128e-05, 5.383299999999966e-05, 5.363900000000116e-05, 5.388899999999794e-05, 5.369500000000291e-05, 5.381900000000009e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.980" endtime="20201112 12:42:30.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.975" endtime="20201112 12:42:30.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.985" endtime="20201112 12:42:30.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.988" endtime="20201112 12:42:31.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.987" endtime="20201112 12:42:31.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.983" endtime="20201112 12:42:31.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.617" endtime="20201112 12:42:31.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.617" endtime="20201112 12:42:31.009"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.018" endtime="20201112 12:42:31.034"></status>
</kw>
<msg timestamp="20201112 12:42:31.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.016" endtime="20201112 12:42:31.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.036" endtime="20201112 12:42:31.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.038" endtime="20201112 12:42:31.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.014" endtime="20201112 12:42:31.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.012" endtime="20201112 12:42:31.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.048" endtime="20201112 12:42:31.334"></status>
</kw>
<msg timestamp="20201112 12:42:31.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.047" endtime="20201112 12:42:31.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.338" endtime="20201112 12:42:31.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.346" endtime="20201112 12:42:31.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.044" endtime="20201112 12:42:31.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.043" endtime="20201112 12:42:31.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.353" level="INFO">${RESULT} = [{'time': 0.021814806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5249999999999744e-05, 'source_diff': 5.5249999999999744e-05}, {'time': 0.021874597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.349" endtime="20201112 12:42:31.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:31.354" endtime="20201112 12:42:31.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.371" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.370" endtime="20201112 12:42:31.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.373" level="INFO">VALUE: [5.5249999999999744e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.493099999999765e-05, 5.4999999999999494e-05, 5.511100000000005e-05, 5.479200000000142e-05, 5.491700000000155e-05, 5.505600000000124e-05, 5.479200000000142e-05, 5.490300000000198e-05, 5.488900000000241e-05, 5.48609999999998e-05, 5.488900000000241e-05, 5.50280000000021e-05, 5.508400000000038e-05, 5.465300000000173e-05, 5.491700000000155e-05, 5.516699999999833e-05, 5.469500000000044e-05, 5.483300000000066e-05, 5.459699999999998e-05, 5.4999999999999494e-05, 5.4958000000000784e-05, 5.459699999999998e-05, 5.4985999999999924e-05, 5.4722000000000104e-05, 5.4929999999998175e-05, 5.483300000000066e-05, 5.463899999999869e-05, 5.4958000000000784e-05, 5.506899999999787e-05, 5.4791999999997953e-05, 5.480499999999805e-05, 5.4763999999998814e-05, 5.48609999999998e-05, 5.459699999999998e-05, 5.4985999999999924e-05, 5.466699999999783e-05, 5.4527999999998134e-05, 5.4791999999997953e-05, 5.470900000000001e-05, 5.482000000000056e-05, 5.480599999999752e-05, 5.470900000000001e-05, 5.463900000000216e-05, 5.481900000000109e-05, 5.476400000000228e-05, 5.482000000000056e-05, 5.501300000000306e-05]</msg>
<status status="PASS" starttime="20201112 12:42:31.372" endtime="20201112 12:42:31.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.367" endtime="20201112 12:42:31.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.377" endtime="20201112 12:42:31.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.380" endtime="20201112 12:42:31.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.378" endtime="20201112 12:42:31.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.375" endtime="20201112 12:42:31.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.010" endtime="20201112 12:42:31.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.010" endtime="20201112 12:42:31.401"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.410" endtime="20201112 12:42:31.427"></status>
</kw>
<msg timestamp="20201112 12:42:31.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.408" endtime="20201112 12:42:31.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.428" endtime="20201112 12:42:31.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.431" endtime="20201112 12:42:31.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.405" endtime="20201112 12:42:31.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.403" endtime="20201112 12:42:31.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.441" endtime="20201112 12:42:31.727"></status>
</kw>
<msg timestamp="20201112 12:42:31.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.439" endtime="20201112 12:42:31.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022531306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022586958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.731" endtime="20201112 12:42:31.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.740" endtime="20201112 12:42:31.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.437" endtime="20201112 12:42:31.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.435" endtime="20201112 12:42:31.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.746" level="INFO">${RESULT} = [{'time': 0.022586958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5651999999999785e-05, 'source_diff': 5.5651999999999785e-05}, {'time': 0.022647736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.743" endtime="20201112 12:42:31.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.760" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:31.747" endtime="20201112 12:42:31.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.764" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.763" endtime="20201112 12:42:31.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.767" level="INFO">VALUE: [5.5651999999999785e-05, 5.580500000000252e-05, 5.5763999999999814e-05, 5.5957999999998315e-05, 5.6014000000000064e-05, 5.559800000000045e-05, 5.56809999999984e-05, 5.583399999999766e-05, 5.587500000000037e-05, 5.5722000000001104e-05, 5.5763999999999814e-05, 5.5541999999998704e-05, 5.561100000000055e-05, 5.5750000000000244e-05, 5.5527999999999134e-05, 5.557000000000131e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5707999999998065e-05, 5.583300000000166e-05, 5.5722000000001104e-05, 5.586099999999733e-05, 5.5777999999999384e-05, 5.562500000000012e-05, 5.584700000000123e-05, 5.5957999999998315e-05, 5.6000000000000494e-05, 5.568100000000187e-05, 5.580500000000252e-05, 5.606899999999887e-05, 5.56809999999984e-05, 5.611100000000105e-05, 5.586099999999733e-05, 5.5805999999998523e-05, 5.593099999999865e-05, 5.5763999999999814e-05, 5.569499999999797e-05, 5.583399999999766e-05, 5.590299999999951e-05, 5.609699999999801e-05, 5.606999999999834e-05, 5.6014000000000064e-05, 5.6014000000000064e-05, 5.590299999999951e-05, 5.558399999999741e-05, 5.580499999999905e-05, 5.587500000000037e-05, 5.604099999999973e-05, 5.608299999999844e-05, 5.584699999999776e-05]</msg>
<status status="PASS" starttime="20201112 12:42:31.765" endtime="20201112 12:42:31.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.761" endtime="20201112 12:42:31.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.770" endtime="20201112 12:42:31.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.773" endtime="20201112 12:42:31.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.772" endtime="20201112 12:42:31.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.769" endtime="20201112 12:42:31.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.402" endtime="20201112 12:42:31.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.401" endtime="20201112 12:42:31.794"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.803" endtime="20201112 12:42:31.820"></status>
</kw>
<msg timestamp="20201112 12:42:31.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.801" endtime="20201112 12:42:31.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.821" endtime="20201112 12:42:31.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.824" endtime="20201112 12:42:31.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.799" endtime="20201112 12:42:31.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.797" endtime="20201112 12:42:31.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.834" endtime="20201112 12:42:32.119"></status>
</kw>
<msg timestamp="20201112 12:42:32.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.832" endtime="20201112 12:42:32.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021801444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.123" endtime="20201112 12:42:32.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.131" endtime="20201112 12:42:32.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.830" endtime="20201112 12:42:32.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.828" endtime="20201112 12:42:32.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.138" level="INFO">${RESULT} = [{'time': 0.021801444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.730500000000055e-05, 'source_diff': 5.730500000000055e-05}, {'time': 0.021863236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.135" endtime="20201112 12:42:32.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.152" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.139" endtime="20201112 12:42:32.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.156" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.155" endtime="20201112 12:42:32.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.159" level="INFO">VALUE: [5.730500000000055e-05, 5.68610000000018e-05, 5.68480000000017e-05, 5.7013999999997594e-05, 5.659699999999851e-05, 5.684699999999876e-05, 5.6805999999999524e-05, 5.663899999999722e-05, 5.657000000000231e-05, 5.658399999999841e-05, 5.7000000000001494e-05, 5.666699999999983e-05, 5.6778000000000384e-05, 5.713900000000119e-05, 5.6986000000001924e-05, 5.665300000000026e-05, 5.6902000000001035e-05, 5.709799999999848e-05, 5.663899999999722e-05, 5.708299999999944e-05, 5.6666000000000355e-05, 5.701300000000159e-05, 5.6902000000001035e-05, 5.6708000000002534e-05, 5.6679999999999925e-05, 5.705499999999683e-05, 5.7027999999997164e-05, 5.658299999999894e-05, 5.684700000000223e-05, 5.691700000000008e-05, 5.6791999999999954e-05, 5.683299999999919e-05, 5.7055999999999774e-05, 5.7055999999999774e-05, 5.661099999999808e-05, 5.6541999999999704e-05, 5.6971999999998885e-05, 5.712499999999815e-05, 5.7027999999997164e-05, 5.666699999999983e-05, 5.6819999999999093e-05, 5.695900000000226e-05, 5.6791999999999954e-05, 5.673700000000115e-05, 5.693099999999965e-05, 5.690300000000051e-05, 5.6555999999999274e-05, 5.661099999999808e-05, 5.68610000000018e-05, 5.6749999999997774e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.157" endtime="20201112 12:42:32.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.152" endtime="20201112 12:42:32.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.162" endtime="20201112 12:42:32.163"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.166" endtime="20201112 12:42:32.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.164" endtime="20201112 12:42:32.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.161" endtime="20201112 12:42:32.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.795" endtime="20201112 12:42:32.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.795" endtime="20201112 12:42:32.187"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.195" endtime="20201112 12:42:32.212"></status>
</kw>
<msg timestamp="20201112 12:42:32.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.194" endtime="20201112 12:42:32.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.214" endtime="20201112 12:42:32.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.216" endtime="20201112 12:42:32.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.191" endtime="20201112 12:42:32.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.189" endtime="20201112 12:42:32.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.226" endtime="20201112 12:42:32.513"></status>
</kw>
<msg timestamp="20201112 12:42:32.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.225" endtime="20201112 12:42:32.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.517" endtime="20201112 12:42:32.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.525" endtime="20201112 12:42:32.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.222" endtime="20201112 12:42:32.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.220" endtime="20201112 12:42:32.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.532" level="INFO">${RESULT} = [{'time': 0.022085222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7666000000001355e-05, 'source_diff': 5.7666000000001355e-05}, {'time': 0.022148014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:32.528" endtime="20201112 12:42:32.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.546" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.533" endtime="20201112 12:42:32.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.551" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.550" endtime="20201112 12:42:32.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.553" level="INFO">VALUE: [5.7666000000001355e-05, 5.7735999999999205e-05, 5.7820000000000094e-05, 5.7971999999999885e-05, 5.7999999999999025e-05, 5.8055999999997304e-05, 5.7556000000000274e-05, 5.8028000000001634e-05, 5.76810000000004e-05, 5.7749999999998775e-05, 5.787500000000237e-05, 5.811199999999905e-05, 5.78749999999989e-05, 5.806900000000087e-05, 5.808300000000044e-05, 5.781900000000062e-05, 5.762499999999865e-05, 5.808300000000044e-05, 5.758299999999994e-05, 5.7708000000000065e-05, 5.7721999999999635e-05, 5.7791999999997484e-05, 5.791699999999761e-05, 5.7971999999999885e-05, 5.7735999999999205e-05, 5.7749999999998775e-05, 5.763900000000169e-05, 5.7792000000000954e-05, 5.7806000000000524e-05, 5.793099999999718e-05, 5.7666000000001355e-05, 5.8070000000000344e-05, 5.790300000000151e-05, 5.8097999999999483e-05, 5.791699999999761e-05, 5.7985999999999455e-05, 5.765300000000126e-05, 5.7916000000001605e-05, 5.783300000000019e-05, 5.7651999999998316e-05, 5.805499999999783e-05, 5.7665999999997886e-05, 5.7916000000001605e-05, 5.811099999999958e-05, 5.784699999999976e-05, 5.813899999999872e-05, 5.80689999999974e-05, 5.78749999999989e-05, 5.766700000000083e-05, 5.763900000000169e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.552" endtime="20201112 12:42:32.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.547" endtime="20201112 12:42:32.554"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.557" endtime="20201112 12:42:32.558"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.560" endtime="20201112 12:42:32.579"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.559" endtime="20201112 12:42:32.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.555" endtime="20201112 12:42:32.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.187" endtime="20201112 12:42:32.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.187" endtime="20201112 12:42:32.581"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.590" endtime="20201112 12:42:32.606"></status>
</kw>
<msg timestamp="20201112 12:42:32.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.588" endtime="20201112 12:42:32.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.607" endtime="20201112 12:42:32.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.610" endtime="20201112 12:42:32.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.585" endtime="20201112 12:42:32.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.583" endtime="20201112 12:42:32.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.620" endtime="20201112 12:42:32.905"></status>
</kw>
<msg timestamp="20201112 12:42:32.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.618" endtime="20201112 12:42:32.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021802847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.910" endtime="20201112 12:42:32.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.918" endtime="20201112 12:42:32.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.616" endtime="20201112 12:42:32.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.614" endtime="20201112 12:42:32.920"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.925" level="INFO">${RESULT} = [{'time': 0.021861764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.891699999999861e-05, 'source_diff': 5.891699999999861e-05}, {'time': 0.021925556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.921" endtime="20201112 12:42:32.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.938" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:32.926" endtime="20201112 12:42:32.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.943" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.942" endtime="20201112 12:42:32.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.945" level="INFO">VALUE: [5.891699999999861e-05, 5.898699999999993e-05, 5.861199999999955e-05, 5.895900000000079e-05, 5.85550000000018e-05, 5.862499999999965e-05, 5.884700000000076e-05, 5.877699999999944e-05, 5.90550000000023e-05, 5.8957999999997845e-05, 5.890299999999904e-05, 5.865299999999879e-05, 5.865300000000226e-05, 5.8792000000001954e-05, 5.8958000000001315e-05, 5.8944000000001745e-05, 5.891699999999861e-05, 5.894499999999775e-05, 5.9055999999998304e-05, 5.88749999999999e-05, 5.9041999999998734e-05, 5.88749999999999e-05, 5.8500000000002994e-05, 5.8556000000001274e-05, 5.9041999999998734e-05, 5.890299999999904e-05, 5.912500000000015e-05, 5.8736000000000205e-05, 5.9000000000000025e-05, 5.8570000000000844e-05, 5.877700000000291e-05, 5.9000000000000025e-05, 5.865300000000226e-05, 5.88749999999999e-05, 5.879099999999901e-05, 5.861100000000008e-05, 5.863899999999922e-05, 5.8944000000001745e-05, 5.8597999999999983e-05, 5.904099999999926e-05, 5.862500000000312e-05, 5.886100000000033e-05, 5.8722000000000635e-05, 5.905499999999883e-05, 5.8722000000000635e-05, 5.8777999999998914e-05, 5.8806000000001524e-05, 5.909700000000101e-05, 5.888900000000294e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.944" endtime="20201112 12:42:32.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.939" endtime="20201112 12:42:32.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.949" endtime="20201112 12:42:32.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.952" endtime="20201112 12:42:32.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.950" endtime="20201112 12:42:32.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.947" endtime="20201112 12:42:32.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.582" endtime="20201112 12:42:32.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.581" endtime="20201112 12:42:32.973"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.981" endtime="20201112 12:42:32.998"></status>
</kw>
<msg timestamp="20201112 12:42:32.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.980" endtime="20201112 12:42:32.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.000" endtime="20201112 12:42:33.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.002" endtime="20201112 12:42:33.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.977" endtime="20201112 12:42:33.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.975" endtime="20201112 12:42:33.006"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.012" endtime="20201112 12:42:33.293"></status>
</kw>
<msg timestamp="20201112 12:42:33.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.011" endtime="20201112 12:42:33.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021887611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.297" endtime="20201112 12:42:33.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.305" endtime="20201112 12:42:33.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.008" endtime="20201112 12:42:33.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.006" endtime="20201112 12:42:33.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.312" level="INFO">${RESULT} = [{'time': 0.021887611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.962500000000065e-05, 'source_diff': 5.962500000000065e-05}, {'time': 0.021952389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:33.308" endtime="20201112 12:42:33.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.325" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:33.313" endtime="20201112 12:42:33.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.330" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.329" endtime="20201112 12:42:33.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.332" level="INFO">VALUE: [5.962500000000065e-05, 6.0014000000000595e-05, 5.961100000000108e-05, 6.0084000000001914e-05, 5.965299999999979e-05, 6.0014000000000595e-05, 5.9847999999997764e-05, 6.0084000000001914e-05, 5.995899999999832e-05, 6.008299999999897e-05, 6.00550000000033e-05, 6.009699999999854e-05, 5.9764000000000345e-05, 5.9902000000000566e-05, 6.011099999999811e-05, 5.987499999999743e-05, 5.9679999999999456e-05, 5.965299999999979e-05, 5.981899999999915e-05, 5.986100000000133e-05, 6.005499999999983e-05, 5.9971999999998415e-05, 5.9556000000002274e-05, 5.9707999999998596e-05, 6.0041999999999734e-05, 5.993099999999918e-05, 5.991699999999961e-05, 5.993100000000265e-05, 6.009699999999854e-05, 5.9750000000000775e-05, 6.0083999999998444e-05, 5.9736000000001205e-05, 5.9806000000002524e-05, 5.998700000000093e-05, 5.9736000000001205e-05, 6.0166000000000386e-05, 5.9736000000001205e-05, 5.966699999999936e-05, 6.005499999999983e-05, 5.956900000000237e-05, 5.9750000000000775e-05, 5.9750000000000775e-05, 5.9902000000000566e-05, 6.009700000000201e-05, 5.9999999999997555e-05, 5.9527999999999665e-05, 5.959700000000151e-05, 5.9679999999999456e-05, 5.9958000000002315e-05, 5.9542000000002704e-05]</msg>
<status status="PASS" starttime="20201112 12:42:33.331" endtime="20201112 12:42:33.336"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.326" endtime="20201112 12:42:33.337"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.340" endtime="20201112 12:42:33.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.343" endtime="20201112 12:42:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.341" endtime="20201112 12:42:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.338" endtime="20201112 12:42:33.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.974" endtime="20201112 12:42:33.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.973" endtime="20201112 12:42:33.364"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.372" endtime="20201112 12:42:33.389"></status>
</kw>
<msg timestamp="20201112 12:42:33.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.371" endtime="20201112 12:42:33.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.390" endtime="20201112 12:42:33.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.393" endtime="20201112 12:42:33.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.368" endtime="20201112 12:42:33.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.366" endtime="20201112 12:42:33.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.403" endtime="20201112 12:42:33.689"></status>
</kw>
<msg timestamp="20201112 12:42:33.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.401" endtime="20201112 12:42:33.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021710694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021771181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.694" endtime="20201112 12:42:33.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.702" endtime="20201112 12:42:33.703"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.399" endtime="20201112 12:42:33.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.397" endtime="20201112 12:42:33.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.709" level="INFO">${RESULT} = [{'time': 0.021771181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.048700000000143e-05, 'source_diff': 6.048700000000143e-05}, {'time': 0.021836972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:33.705" endtime="20201112 12:42:33.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.722" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:33.710" endtime="20201112 12:42:33.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.727" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.726" endtime="20201112 12:42:33.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.729" level="INFO">VALUE: [6.048700000000143e-05, 6.111099999999911e-05, 6.0721999999999166e-05, 6.081900000000015e-05, 6.0542000000000235e-05, 6.0694000000000026e-05, 6.0528000000000665e-05, 6.070899999999907e-05, 6.094499999999975e-05, 6.061099999999861e-05, 6.0750000000001775e-05, 6.061099999999861e-05, 6.0527999999997195e-05, 6.113899999999825e-05, 6.044499999999925e-05, 6.0764000000001345e-05, 6.0819999999999624e-05, 6.080500000000058e-05, 6.063899999999775e-05, 6.1028000000001165e-05, 6.058299999999947e-05, 6.083299999999972e-05, 6.061099999999861e-05, 6.052700000000119e-05, 6.052700000000119e-05, 6.0957999999999846e-05, 6.0749999999998305e-05, 6.0930000000000706e-05, 6.109699999999954e-05, 6.063900000000122e-05, 6.0764000000001345e-05, 6.087499999999843e-05, 6.0792000000000485e-05, 6.0528000000000665e-05, 6.086099999999886e-05, 6.0777999999997445e-05, 6.0806000000000054e-05, 6.1013999999998125e-05, 6.0806000000000054e-05, 6.0792000000000485e-05, 6.065300000000079e-05, 6.0999999999998555e-05, 6.0722000000002635e-05, 6.0542000000000235e-05, 6.068099999999993e-05, 6.093100000000018e-05, 6.0707999999999596e-05, 6.0569999999999374e-05, 6.0749999999998305e-05, 6.10690000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:42:33.728" endtime="20201112 12:42:33.730"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.723" endtime="20201112 12:42:33.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.733" endtime="20201112 12:42:33.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.736" endtime="20201112 12:42:33.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.735" endtime="20201112 12:42:33.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.731" endtime="20201112 12:42:33.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.365" endtime="20201112 12:42:33.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.364" endtime="20201112 12:42:33.757"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.766" endtime="20201112 12:42:33.784"></status>
</kw>
<msg timestamp="20201112 12:42:33.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.764" endtime="20201112 12:42:33.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.785" endtime="20201112 12:42:33.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.788" endtime="20201112 12:42:33.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.762" endtime="20201112 12:42:33.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.760" endtime="20201112 12:42:33.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.798" endtime="20201112 12:42:34.084"></status>
</kw>
<msg timestamp="20201112 12:42:34.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.796" endtime="20201112 12:42:34.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022423889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022485875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.089" endtime="20201112 12:42:34.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.097" endtime="20201112 12:42:34.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.794" endtime="20201112 12:42:34.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.792" endtime="20201112 12:42:34.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.103" level="INFO">${RESULT} = [{'time': 0.022485875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.198599999999999e-05, 'source_diff': 6.198599999999999e-05}, {'time': 0.022552667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:34.100" endtime="20201112 12:42:34.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.118" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.104" endtime="20201112 12:42:34.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.123" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.121" endtime="20201112 12:42:34.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.125" level="INFO">VALUE: [6.198599999999999e-05, 6.22089999999971e-05, 6.17080000000006e-05, 6.204200000000173e-05, 6.212499999999968e-05, 6.19019999999991e-05, 6.19439999999978e-05, 6.186100000000333e-05, 6.204099999999879e-05, 6.20829999999975e-05, 6.167999999999799e-05, 6.204200000000173e-05, 6.181900000000115e-05, 6.179099999999854e-05, 6.177800000000191e-05, 6.165300000000179e-05, 6.186099999999986e-05, 6.195800000000085e-05, 6.179200000000148e-05, 6.177800000000191e-05, 6.173599999999974e-05, 6.170900000000007e-05, 6.201399999999913e-05, 6.198599999999999e-05, 6.162500000000265e-05, 6.20560000000013e-05, 6.20560000000013e-05, 6.154200000000123e-05, 6.186099999999986e-05, 6.194500000000075e-05, 6.205500000000183e-05, 6.172200000000017e-05, 6.208300000000097e-05, 6.194400000000128e-05, 6.20690000000014e-05, 6.205500000000183e-05, 6.159700000000004e-05, 6.204099999999879e-05, 6.165300000000179e-05, 6.194400000000128e-05, 6.165300000000179e-05, 6.159700000000004e-05, 6.201399999999913e-05, 6.158300000000047e-05, 6.165300000000179e-05, 6.20560000000013e-05, 6.172200000000017e-05, 6.182000000000062e-05, 6.177799999999845e-05, 6.161099999999961e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.124" endtime="20201112 12:42:34.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.119" endtime="20201112 12:42:34.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.129" endtime="20201112 12:42:34.130"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.132" endtime="20201112 12:42:34.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.131" endtime="20201112 12:42:34.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.127" endtime="20201112 12:42:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.758" endtime="20201112 12:42:34.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.757" endtime="20201112 12:42:34.153"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.162" endtime="20201112 12:42:34.179"></status>
</kw>
<msg timestamp="20201112 12:42:34.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.160" endtime="20201112 12:42:34.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.181" endtime="20201112 12:42:34.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.183" endtime="20201112 12:42:34.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.158" endtime="20201112 12:42:34.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.156" endtime="20201112 12:42:34.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.193" endtime="20201112 12:42:34.480"></status>
</kw>
<msg timestamp="20201112 12:42:34.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.192" endtime="20201112 12:42:34.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022203833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022267042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.485" endtime="20201112 12:42:34.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.493" endtime="20201112 12:42:34.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.189" endtime="20201112 12:42:34.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.187" endtime="20201112 12:42:34.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.500" level="INFO">${RESULT} = [{'time': 0.022267042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.320900000000157e-05, 'source_diff': 6.320900000000157e-05}, {'time': 0.022334819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:34.496" endtime="20201112 12:42:34.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.513" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.501" endtime="20201112 12:42:34.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.518" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.517" endtime="20201112 12:42:34.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.520" level="INFO">VALUE: [6.320900000000157e-05, 6.313799999999731e-05, 6.309700000000154e-05, 6.267999999999899e-05, 6.298599999999752e-05, 6.311099999999764e-05, 6.265199999999985e-05, 6.27080000000016e-05, 6.290299999999957e-05, 6.268099999999846e-05, 6.273600000000074e-05, 6.291599999999967e-05, 6.280499999999911e-05, 6.29439999999988e-05, 6.302700000000022e-05, 6.309699999999807e-05, 6.280599999999859e-05, 6.311099999999764e-05, 6.30560000000023e-05, 6.265299999999932e-05, 6.277699999999997e-05, 6.26950000000015e-05, 6.284700000000129e-05, 6.25279999999992e-05, 6.300000000000056e-05, 6.272300000000064e-05, 6.254099999999929e-05, 6.259800000000051e-05, 6.305599999999884e-05, 6.294400000000228e-05, 6.284699999999782e-05, 6.280600000000205e-05, 6.258300000000147e-05, 6.265299999999932e-05, 6.25279999999992e-05, 6.265299999999932e-05, 6.262500000000018e-05, 6.2582999999998e-05, 6.272200000000117e-05, 6.290299999999957e-05, 6.298600000000099e-05, 6.276399999999988e-05, 6.273600000000074e-05, 6.304099999999979e-05, 6.290300000000304e-05, 6.300000000000056e-05, 6.254199999999877e-05, 6.295900000000132e-05, 6.29020000000001e-05, 6.304199999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.519" endtime="20201112 12:42:34.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.514" endtime="20201112 12:42:34.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.523" endtime="20201112 12:42:34.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.527" endtime="20201112 12:42:34.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.525" endtime="20201112 12:42:34.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.522" endtime="20201112 12:42:34.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.154" endtime="20201112 12:42:34.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.153" endtime="20201112 12:42:34.548"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.556" endtime="20201112 12:42:34.573"></status>
</kw>
<msg timestamp="20201112 12:42:34.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.555" endtime="20201112 12:42:34.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.575" endtime="20201112 12:42:34.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.577" endtime="20201112 12:42:34.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.552" endtime="20201112 12:42:34.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.550" endtime="20201112 12:42:34.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.587" endtime="20201112 12:42:34.873"></status>
</kw>
<msg timestamp="20201112 12:42:34.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:34.586" endtime="20201112 12:42:34.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021734083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02179825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:34.877" endtime="20201112 12:42:34.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.885" endtime="20201112 12:42:34.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.583" endtime="20201112 12:42:34.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.581" endtime="20201112 12:42:34.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.892" level="INFO">${RESULT} = [{'time': 0.02179825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.416700000000039e-05, 'source_diff': 6.416700000000039e-05}, {'time': 0.021867042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:34.889" endtime="20201112 12:42:34.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.906" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:34.893" endtime="20201112 12:42:34.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.910" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.909" endtime="20201112 12:42:34.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.912" level="INFO">VALUE: [6.416700000000039e-05, 6.418099999999996e-05, 6.3582999999999e-05, 6.380599999999959e-05, 6.40829999999995e-05, 6.394500000000275e-05, 6.379200000000002e-05, 6.388899999999753e-05, 6.397300000000189e-05, 6.409699999999907e-05, 6.388800000000153e-05, 6.3889000000001e-05, 6.395900000000232e-05, 6.370799999999913e-05, 6.374999999999784e-05, 6.395799999999938e-05, 6.359699999999857e-05, 6.373600000000174e-05, 6.37500000000013e-05, 6.397200000000242e-05, 6.369399999999956e-05, 6.406899999999993e-05, 6.359699999999857e-05, 6.397199999999895e-05, 6.3582999999999e-05, 6.373700000000121e-05, 6.361100000000161e-05, 6.359699999999857e-05, 6.37080000000026e-05, 6.387500000000143e-05, 6.374999999999784e-05, 6.383399999999873e-05, 6.409799999999855e-05, 6.394499999999928e-05, 6.383399999999873e-05, 6.362500000000118e-05, 6.412499999999821e-05, 6.359800000000151e-05, 6.381899999999968e-05, 6.391600000000067e-05, 6.376400000000088e-05, 6.393000000000024e-05, 6.384700000000229e-05, 6.390300000000057e-05, 6.358300000000247e-05, 6.376400000000088e-05, 6.37080000000026e-05, 6.379200000000002e-05, 6.369399999999956e-05, 6.359700000000204e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.911" endtime="20201112 12:42:34.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.906" endtime="20201112 12:42:34.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.916" endtime="20201112 12:42:34.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.919" endtime="20201112 12:42:34.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.918" endtime="20201112 12:42:34.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.914" endtime="20201112 12:42:34.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.549" endtime="20201112 12:42:34.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.548" endtime="20201112 12:42:34.940"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.949" endtime="20201112 12:42:34.966"></status>
</kw>
<msg timestamp="20201112 12:42:34.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.948" endtime="20201112 12:42:34.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.967" endtime="20201112 12:42:34.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.970" endtime="20201112 12:42:34.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.945" endtime="20201112 12:42:34.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.943" endtime="20201112 12:42:34.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.980" endtime="20201112 12:42:35.265"></status>
</kw>
<msg timestamp="20201112 12:42:35.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.978" endtime="20201112 12:42:35.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021962819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.269" endtime="20201112 12:42:35.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.277" endtime="20201112 12:42:35.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.975" endtime="20201112 12:42:35.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.974" endtime="20201112 12:42:35.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.284" level="INFO">${RESULT} = [{'time': 0.022027861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.50419999999978e-05, 'source_diff': 6.50419999999978e-05}, {'time': 0.022097722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:35.281" endtime="20201112 12:42:35.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.297" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:35.285" endtime="20201112 12:42:35.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.302" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.301" endtime="20201112 12:42:35.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.304" level="INFO">VALUE: [6.50419999999978e-05, 6.501399999999866e-05, 6.504200000000127e-05, 6.47089999999996e-05, 6.509799999999955e-05, 6.49440000000008e-05, 6.454099999999782e-05, 6.481899999999721e-05, 6.513900000000225e-05, 6.463800000000228e-05, 6.479100000000154e-05, 6.455500000000086e-05, 6.4583e-05, 6.470800000000013e-05, 6.495800000000038e-05, 6.459699999999957e-05, 6.506900000000093e-05, 6.465300000000132e-05, 6.459699999999957e-05, 6.502799999999823e-05, 6.469500000000003e-05, 6.470800000000013e-05, 6.509700000000007e-05, 6.462500000000218e-05, 6.455600000000034e-05, 6.469500000000003e-05, 6.483399999999973e-05, 6.487500000000243e-05, 6.445900000000282e-05, 6.491700000000114e-05, 6.495899999999985e-05, 6.49159999999982e-05, 6.465199999999838e-05, 6.452699999999825e-05, 6.50830000000005e-05, 6.461100000000261e-05, 6.49440000000008e-05, 6.484699999999982e-05, 6.479100000000154e-05, 6.456900000000043e-05, 6.454099999999782e-05, 6.497199999999995e-05, 6.501400000000213e-05, 6.516599999999845e-05, 6.481899999999721e-05, 6.47639999999984e-05, 6.497199999999995e-05, 6.480599999999712e-05, 6.474999999999884e-05, 6.504100000000179e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.303" endtime="20201112 12:42:35.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.298" endtime="20201112 12:42:35.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.308" endtime="20201112 12:42:35.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.311" endtime="20201112 12:42:35.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.310" endtime="20201112 12:42:35.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.306" endtime="20201112 12:42:35.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.941" endtime="20201112 12:42:35.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.941" endtime="20201112 12:42:35.332"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.341" endtime="20201112 12:42:35.358"></status>
</kw>
<msg timestamp="20201112 12:42:35.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.339" endtime="20201112 12:42:35.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.360" endtime="20201112 12:42:35.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.362" endtime="20201112 12:42:35.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.337" endtime="20201112 12:42:35.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.335" endtime="20201112 12:42:35.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.372" endtime="20201112 12:42:35.657"></status>
</kw>
<msg timestamp="20201112 12:42:35.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021706125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.370" endtime="20201112 12:42:35.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021706125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.661" endtime="20201112 12:42:35.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.670" endtime="20201112 12:42:35.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.368" endtime="20201112 12:42:35.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.366" endtime="20201112 12:42:35.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.676" level="INFO">${RESULT} = [{'time': 0.021772264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.613899999999978e-05, 'source_diff': 6.613899999999978e-05}, {'time': 0.021843056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:35.673" endtime="20201112 12:42:35.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.691" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:35.677" endtime="20201112 12:42:35.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.695" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.694" endtime="20201112 12:42:35.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.698" level="INFO">VALUE: [6.613899999999978e-05, 6.583400000000073e-05, 6.57220000000007e-05, 6.569400000000156e-05, 6.601300000000018e-05, 6.587500000000343e-05, 6.559700000000057e-05, 6.581899999999821e-05, 6.581900000000168e-05, 6.598600000000052e-05, 6.595800000000138e-05, 6.597200000000095e-05, 6.562500000000318e-05, 6.558299999999753e-05, 6.548600000000002e-05, 6.593099999999824e-05, 6.591699999999867e-05, 6.552799999999873e-05, 6.562499999999971e-05, 6.609800000000055e-05, 6.566699999999842e-05, 6.556999999999744e-05, 6.580599999999812e-05, 6.595900000000085e-05, 6.605599999999837e-05, 6.580500000000211e-05, 6.600000000000009e-05, 6.580499999999864e-05, 6.556899999999796e-05, 6.605499999999889e-05, 6.552699999999925e-05, 6.605499999999889e-05, 6.559700000000057e-05, 6.579200000000202e-05, 6.595900000000085e-05, 6.583300000000125e-05, 6.561100000000014e-05, 6.59029999999991e-05, 6.574999999999984e-05, 6.591699999999867e-05, 6.573600000000027e-05, 6.565300000000232e-05, 6.556999999999744e-05, 6.584699999999735e-05, 6.601399999999966e-05, 6.561100000000014e-05, 6.586199999999987e-05, 6.579200000000202e-05, 6.595900000000085e-05, 6.57500000000033e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.696" endtime="20201112 12:42:35.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.692" endtime="20201112 12:42:35.699"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.701" endtime="20201112 12:42:35.703"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.705" endtime="20201112 12:42:35.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.703" endtime="20201112 12:42:35.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.700" endtime="20201112 12:42:35.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.333" endtime="20201112 12:42:35.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.333" endtime="20201112 12:42:35.726"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.734" endtime="20201112 12:42:35.751"></status>
</kw>
<msg timestamp="20201112 12:42:35.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.733" endtime="20201112 12:42:35.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.753" endtime="20201112 12:42:35.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.755" endtime="20201112 12:42:35.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.730" endtime="20201112 12:42:35.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.728" endtime="20201112 12:42:35.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.765" endtime="20201112 12:42:36.051"></status>
</kw>
<msg timestamp="20201112 12:42:36.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.764" endtime="20201112 12:42:36.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021796083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.056" endtime="20201112 12:42:36.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.064" endtime="20201112 12:42:36.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.761" endtime="20201112 12:42:36.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.759" endtime="20201112 12:42:36.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.071" level="INFO">${RESULT} = [{'time': 0.021863014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.693099999999924e-05, 'source_diff': 6.693099999999924e-05}, {'time': 0.021933792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.067" endtime="20201112 12:42:36.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.084" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.072" endtime="20201112 12:42:36.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.088" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.087" endtime="20201112 12:42:36.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.091" level="INFO">VALUE: [6.693099999999924e-05, 6.62639999999999e-05, 6.674999999999737e-05, 6.687500000000096e-05, 6.693100000000271e-05, 6.665299999999985e-05, 6.681900000000268e-05, 6.670799999999866e-05, 6.673600000000127e-05, 6.701400000000066e-05, 6.705499999999989e-05, 6.67640000000004e-05, 6.697199999999848e-05, 6.681900000000268e-05, 6.656899999999896e-05, 6.711100000000164e-05, 6.702800000000023e-05, 6.691699999999967e-05, 6.680600000000259e-05, 6.659799999999758e-05, 6.700000000000109e-05, 6.672199999999823e-05, 6.65700000000019e-05, 6.669500000000203e-05, 6.695899999999838e-05, 6.711099999999817e-05, 6.705599999999937e-05, 6.695900000000185e-05, 6.697299999999795e-05, 6.686100000000139e-05, 6.663900000000028e-05, 6.670799999999866e-05, 6.700000000000109e-05, 6.652700000000025e-05, 6.704100000000032e-05, 6.674999999999737e-05, 6.65419999999993e-05, 6.695799999999891e-05, 6.688900000000053e-05, 6.67640000000004e-05, 6.649999999999712e-05, 6.701400000000066e-05, 6.680599999999912e-05, 6.695799999999891e-05, 6.70700000000024e-05, 6.701400000000066e-05, 6.693099999999924e-05, 6.70969999999986e-05, 6.686099999999792e-05, 6.705599999999937e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.089" endtime="20201112 12:42:36.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.085" endtime="20201112 12:42:36.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.095" endtime="20201112 12:42:36.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.098" endtime="20201112 12:42:36.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.097" endtime="20201112 12:42:36.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.093" endtime="20201112 12:42:36.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.726" endtime="20201112 12:42:36.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.726" endtime="20201112 12:42:36.119"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.127" endtime="20201112 12:42:36.145"></status>
</kw>
<msg timestamp="20201112 12:42:36.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.126" endtime="20201112 12:42:36.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.147" endtime="20201112 12:42:36.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.149" endtime="20201112 12:42:36.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.123" endtime="20201112 12:42:36.152"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.121" endtime="20201112 12:42:36.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.159" endtime="20201112 12:42:36.445"></status>
</kw>
<msg timestamp="20201112 12:42:36.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.157" endtime="20201112 12:42:36.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022022597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.449" endtime="20201112 12:42:36.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.457" endtime="20201112 12:42:36.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.155" endtime="20201112 12:42:36.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.153" endtime="20201112 12:42:36.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.464" level="INFO">${RESULT} = [{'time': 0.022022597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.743000000000027e-05, 'source_diff': 6.743000000000027e-05}, {'time': 0.022095403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.461" endtime="20201112 12:42:36.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.478" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.465" endtime="20201112 12:42:36.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.482" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.481" endtime="20201112 12:42:36.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.485" level="INFO">VALUE: [6.743000000000027e-05, 6.799999999999862e-05, 6.762499999999824e-05, 6.797200000000295e-05, 6.769499999999956e-05, 6.765300000000085e-05, 6.759800000000205e-05, 6.808300000000003e-05, 6.808300000000003e-05, 6.79160000000012e-05, 6.7583000000003e-05, 6.761100000000214e-05, 6.794400000000034e-05, 6.791599999999773e-05, 6.795799999999991e-05, 6.811099999999917e-05, 6.748599999999855e-05, 6.766600000000095e-05, 6.761099999999867e-05, 6.801399999999819e-05, 6.791700000000067e-05, 6.762500000000171e-05, 6.802800000000123e-05, 6.765300000000085e-05, 6.787500000000196e-05, 6.779200000000055e-05, 6.783399999999926e-05, 6.772300000000217e-05, 6.795899999999938e-05, 6.77229999999987e-05, 6.813799999999884e-05, 6.769499999999956e-05, 6.80420000000008e-05, 6.75969999999991e-05, 6.761099999999867e-05, 6.770799999999966e-05, 6.808300000000003e-05, 6.797199999999948e-05, 6.784700000000282e-05, 6.777800000000098e-05, 6.774999999999837e-05, 6.756900000000343e-05, 6.779200000000055e-05, 6.780500000000064e-05, 6.788899999999806e-05, 6.765300000000085e-05, 6.802800000000123e-05, 6.806999999999994e-05, 6.758299999999953e-05, 6.799999999999862e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.483" endtime="20201112 12:42:36.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.478" endtime="20201112 12:42:36.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.489" endtime="20201112 12:42:36.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.492" endtime="20201112 12:42:36.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.491" endtime="20201112 12:42:36.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.487" endtime="20201112 12:42:36.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.120" endtime="20201112 12:42:36.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.119" endtime="20201112 12:42:36.514"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.522" endtime="20201112 12:42:36.539"></status>
</kw>
<msg timestamp="20201112 12:42:36.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.521" endtime="20201112 12:42:36.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.541" endtime="20201112 12:42:36.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.543" endtime="20201112 12:42:36.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.518" endtime="20201112 12:42:36.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.516" endtime="20201112 12:42:36.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.553" endtime="20201112 12:42:36.840"></status>
</kw>
<msg timestamp="20201112 12:42:36.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.552" endtime="20201112 12:42:36.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021759806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021828486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.844" endtime="20201112 12:42:36.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.852" endtime="20201112 12:42:36.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.549" endtime="20201112 12:42:36.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.548" endtime="20201112 12:42:36.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.859" level="INFO">${RESULT} = [{'time': 0.021828486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.868000000000152e-05, 'source_diff': 6.868000000000152e-05}, {'time': 0.021901278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.855" endtime="20201112 12:42:36.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.872" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:36.860" endtime="20201112 12:42:36.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.877" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.876" endtime="20201112 12:42:36.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.879" level="INFO">VALUE: [6.868000000000152e-05, 6.82359999999993e-05, 6.89030000000021e-05, 6.861099999999967e-05, 6.90559999999979e-05, 6.887499999999949e-05, 6.898699999999952e-05, 6.861099999999967e-05, 6.898600000000005e-05, 6.891599999999873e-05, 6.858300000000053e-05, 6.905499999999842e-05, 6.884700000000035e-05, 6.884700000000035e-05, 6.891599999999873e-05, 6.908300000000103e-05, 6.866700000000142e-05, 6.908300000000103e-05, 6.894400000000134e-05, 6.905600000000137e-05, 6.882000000000069e-05, 6.874999999999937e-05, 6.85970000000001e-05, 6.869500000000056e-05, 6.887499999999949e-05, 6.89169999999982e-05, 6.909800000000008e-05, 6.876399999999894e-05, 6.862499999999924e-05, 6.866599999999848e-05, 6.852699999999878e-05, 6.87359999999998e-05, 6.863899999999881e-05, 6.898600000000005e-05, 6.872200000000023e-05, 6.884700000000035e-05, 6.867999999999805e-05, 6.865299999999838e-05, 6.866700000000142e-05, 6.861099999999967e-05, 6.870800000000066e-05, 6.907000000000094e-05, 6.861099999999967e-05, 6.880600000000112e-05, 6.874999999999937e-05, 6.90840000000005e-05, 6.90840000000005e-05, 6.854199999999783e-05, 6.869500000000056e-05, 6.90559999999979e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.878" endtime="20201112 12:42:36.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.873" endtime="20201112 12:42:36.880"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.883" endtime="20201112 12:42:36.884"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.886" endtime="20201112 12:42:36.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.885" endtime="20201112 12:42:36.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.881" endtime="20201112 12:42:36.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.514" endtime="20201112 12:42:36.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.514" endtime="20201112 12:42:36.907"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.916" endtime="20201112 12:42:36.933"></status>
</kw>
<msg timestamp="20201112 12:42:36.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.914" endtime="20201112 12:42:36.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.934" endtime="20201112 12:42:36.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.937" endtime="20201112 12:42:36.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.911" endtime="20201112 12:42:36.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.909" endtime="20201112 12:42:36.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.947" endtime="20201112 12:42:37.233"></status>
</kw>
<msg timestamp="20201112 12:42:37.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.945" endtime="20201112 12:42:37.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022208528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.238" endtime="20201112 12:42:37.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.246" endtime="20201112 12:42:37.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.943" endtime="20201112 12:42:37.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.941" endtime="20201112 12:42:37.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.253" level="INFO">${RESULT} = [{'time': 0.022208528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972200000000123e-05, 'source_diff': 6.972200000000123e-05}, {'time': 0.022283306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.249" endtime="20201112 12:42:37.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.267" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:37.253" endtime="20201112 12:42:37.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.271" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.270" endtime="20201112 12:42:37.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.274" level="INFO">VALUE: [6.972200000000123e-05, 6.99169999999992e-05, 6.961200000000015e-05, 7.002700000000028e-05, 6.981899999999874e-05, 6.977700000000003e-05, 7.004099999999985e-05, 6.988900000000006e-05, 7.005499999999942e-05, 6.99299999999993e-05, 6.977799999999951e-05, 7.00970000000016e-05, 6.972200000000123e-05, 6.987500000000049e-05, 6.980599999999865e-05, 6.987500000000049e-05, 6.952799999999926e-05, 6.955600000000187e-05, 6.962500000000024e-05, 7.01109999999977e-05, 6.984700000000135e-05, 6.990200000000016e-05, 6.979199999999908e-05, 6.973700000000027e-05, 6.95420000000023e-05, 6.980499999999917e-05, 6.984700000000135e-05, 6.980500000000264e-05, 7.006899999999899e-05, 6.958300000000153e-05, 7.002700000000028e-05, 6.998600000000105e-05, 6.999999999999715e-05, 6.987500000000049e-05, 6.988900000000006e-05, 7.005499999999942e-05, 6.993099999999877e-05, 6.955600000000187e-05, 7.004199999999933e-05, 6.986099999999745e-05, 6.961100000000067e-05, 6.994500000000181e-05, 6.975000000000037e-05, 6.95559999999984e-05, 6.984699999999788e-05, 6.95979999999971e-05, 6.963899999999981e-05, 6.969400000000209e-05, 6.9584000000001e-05, 7.001300000000071e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.272" endtime="20201112 12:42:37.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.268" endtime="20201112 12:42:37.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.277" endtime="20201112 12:42:37.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.281" endtime="20201112 12:42:37.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.279" endtime="20201112 12:42:37.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.276" endtime="20201112 12:42:37.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.908" endtime="20201112 12:42:37.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.907" endtime="20201112 12:42:37.301"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.310" endtime="20201112 12:42:37.328"></status>
</kw>
<msg timestamp="20201112 12:42:37.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.308" endtime="20201112 12:42:37.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.330" endtime="20201112 12:42:37.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.332" endtime="20201112 12:42:37.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.306" endtime="20201112 12:42:37.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.304" endtime="20201112 12:42:37.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.342" endtime="20201112 12:42:37.629"></status>
</kw>
<msg timestamp="20201112 12:42:37.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.341" endtime="20201112 12:42:37.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022013486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022084569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.633" endtime="20201112 12:42:37.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.641" endtime="20201112 12:42:37.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.338" endtime="20201112 12:42:37.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.336" endtime="20201112 12:42:37.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.648" level="INFO">${RESULT} = [{'time': 0.022084569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.108299999999956e-05, 'source_diff': 7.108299999999956e-05}, {'time': 0.022160361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.644" endtime="20201112 12:42:37.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.661" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:37.649" endtime="20201112 12:42:37.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.666" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.665" endtime="20201112 12:42:37.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.668" level="INFO">VALUE: [7.108299999999956e-05, 7.076400000000094e-05, 7.052800000000026e-05, 7.052800000000026e-05, 7.099999999999815e-05, 7.095800000000291e-05, 7.077800000000051e-05, 7.059800000000158e-05, 7.072200000000223e-05, 7.062499999999777e-05, 7.094499999999934e-05, 7.094499999999934e-05, 7.059800000000158e-05, 7.081999999999922e-05, 7.099999999999815e-05, 7.07230000000017e-05, 7.065199999999744e-05, 7.055499999999992e-05, 7.090200000000116e-05, 7.069399999999962e-05, 7.080500000000017e-05, 7.06109999999982e-05, 7.100000000000162e-05, 7.068000000000005e-05, 7.063900000000081e-05, 7.095799999999944e-05, 7.09170000000002e-05, 7.080500000000017e-05, 7.108299999999956e-05, 7.061100000000167e-05, 7.097199999999901e-05, 7.088900000000106e-05, 7.05559999999994e-05, 7.058299999999906e-05, 7.072299999999823e-05, 7.099999999999815e-05, 7.0584000000002e-05, 7.106999999999947e-05, 7.083400000000226e-05, 7.088900000000106e-05, 7.086100000000192e-05, 7.055499999999992e-05, 7.069399999999962e-05, 7.070800000000266e-05, 7.077700000000103e-05, 7.087500000000149e-05, 7.097199999999901e-05, 7.090299999999716e-05, 7.094399999999987e-05, 7.065300000000038e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.667" endtime="20201112 12:42:37.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.662" endtime="20201112 12:42:37.669"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.672" endtime="20201112 12:42:37.673"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.675" endtime="20201112 12:42:37.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.673" endtime="20201112 12:42:37.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.670" endtime="20201112 12:42:37.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.302" endtime="20201112 12:42:37.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.302" endtime="20201112 12:42:37.696"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.705" endtime="20201112 12:42:37.721"></status>
</kw>
<msg timestamp="20201112 12:42:37.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.703" endtime="20201112 12:42:37.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.723" endtime="20201112 12:42:37.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.726" endtime="20201112 12:42:37.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.700" endtime="20201112 12:42:37.729"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.698" endtime="20201112 12:42:37.729"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.736" endtime="20201112 12:42:38.023"></status>
</kw>
<msg timestamp="20201112 12:42:38.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.734" endtime="20201112 12:42:38.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.027" endtime="20201112 12:42:38.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.035" endtime="20201112 12:42:38.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.731" endtime="20201112 12:42:38.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.730" endtime="20201112 12:42:38.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.042" level="INFO">${RESULT} = [{'time': 0.021913111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.199999999999915e-05, 'source_diff': 7.199999999999915e-05}, {'time': 0.021989903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.039" endtime="20201112 12:42:38.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.055" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.043" endtime="20201112 12:42:38.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.060" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.059" endtime="20201112 12:42:38.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.062" level="INFO">VALUE: [7.199999999999915e-05, 7.202800000000176e-05, 7.187500000000249e-05, 7.173599999999933e-05, 7.172199999999976e-05, 7.202800000000176e-05, 7.165299999999791e-05, 7.195899999999991e-05, 7.17360000000028e-05, 7.180600000000065e-05, 7.162500000000224e-05, 7.175000000000237e-05, 7.209700000000013e-05, 7.190199999999869e-05, 7.173599999999933e-05, 7.176399999999847e-05, 7.2069000000001e-05, 7.16109999999992e-05, 7.202800000000176e-05, 7.183399999999979e-05, 7.188899999999859e-05, 7.20560000000009e-05, 7.172199999999976e-05, 7.204199999999786e-05, 7.157000000000344e-05, 7.190300000000163e-05, 7.16109999999992e-05, 7.179200000000108e-05, 7.166700000000095e-05, 7.15560000000004e-05, 7.168099999999705e-05, 7.175000000000237e-05, 7.207000000000047e-05, 7.175000000000237e-05, 7.166600000000148e-05, 7.195800000000044e-05, 7.154100000000135e-05, 7.205499999999795e-05, 7.181899999999727e-05, 7.159699999999963e-05, 7.199999999999915e-05, 7.15560000000004e-05, 7.190300000000163e-05, 7.209700000000013e-05, 7.180600000000065e-05, 7.205599999999743e-05, 7.162500000000224e-05, 7.190300000000163e-05, 7.169500000000009e-05, 7.188900000000206e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.061" endtime="20201112 12:42:38.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.056" endtime="20201112 12:42:38.063"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.066" endtime="20201112 12:42:38.067"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.069" endtime="20201112 12:42:38.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.068" endtime="20201112 12:42:38.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.064" endtime="20201112 12:42:38.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.697" endtime="20201112 12:42:38.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.696" endtime="20201112 12:42:38.090"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.099" endtime="20201112 12:42:38.116"></status>
</kw>
<msg timestamp="20201112 12:42:38.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.097" endtime="20201112 12:42:38.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.117" endtime="20201112 12:42:38.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.120" endtime="20201112 12:42:38.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.095" endtime="20201112 12:42:38.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.092" endtime="20201112 12:42:38.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.130" endtime="20201112 12:42:38.415"></status>
</kw>
<msg timestamp="20201112 12:42:38.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.128" endtime="20201112 12:42:38.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.419" endtime="20201112 12:42:38.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.427" endtime="20201112 12:42:38.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.126" endtime="20201112 12:42:38.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.124" endtime="20201112 12:42:38.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.434" level="INFO">${RESULT} = [{'time': 0.022155347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.338900000000009e-05, 'source_diff': 7.338900000000009e-05}, {'time': 0.022232097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.430" endtime="20201112 12:42:38.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.447" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.435" endtime="20201112 12:42:38.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.451" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.450" endtime="20201112 12:42:38.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.454" level="INFO">VALUE: [7.338900000000009e-05, 7.220800000000069e-05, 7.273600000000033e-05, 7.308399999999757e-05, 7.272200000000076e-05, 7.290300000000263e-05, 7.29309999999983e-05, 7.312500000000027e-05, 7.26110000000002e-05, 7.257000000000097e-05, 7.272200000000076e-05, 7.279200000000208e-05, 7.257000000000097e-05, 7.291699999999873e-05, 7.284799999999689e-05, 7.280599999999818e-05, 7.295900000000091e-05, 7.293100000000177e-05, 7.265300000000238e-05, 7.269399999999815e-05, 7.266599999999901e-05, 7.255499999999845e-05, 7.270800000000119e-05, 7.27910000000026e-05, 7.305500000000242e-05, 7.27499999999999e-05, 7.300000000000015e-05, 7.26110000000002e-05, 7.291699999999873e-05, 7.27499999999999e-05, 7.273600000000033e-05, 7.286100000000045e-05, 7.286099999999698e-05, 7.281999999999775e-05, 7.277799999999904e-05, 7.308400000000104e-05, 7.273600000000033e-05, 7.2763e-05, 7.27499999999999e-05, 7.270899999999719e-05, 7.255599999999793e-05, 7.270800000000119e-05, 7.269400000000162e-05, 7.277699999999956e-05, 7.309700000000113e-05, 7.298599999999711e-05, 7.277799999999904e-05, 7.286100000000045e-05, 7.28049999999987e-05, 7.263899999999934e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.452" endtime="20201112 12:42:38.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.448" endtime="20201112 12:42:38.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.457" endtime="20201112 12:42:38.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.461" endtime="20201112 12:42:38.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.459" endtime="20201112 12:42:38.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.456" endtime="20201112 12:42:38.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.091" endtime="20201112 12:42:38.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.090" endtime="20201112 12:42:38.481"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.490" endtime="20201112 12:42:38.507"></status>
</kw>
<msg timestamp="20201112 12:42:38.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.488" endtime="20201112 12:42:38.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.508" endtime="20201112 12:42:38.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.511" endtime="20201112 12:42:38.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.486" endtime="20201112 12:42:38.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.484" endtime="20201112 12:42:38.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.521" endtime="20201112 12:42:38.822"></status>
</kw>
<msg timestamp="20201112 12:42:38.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021489375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.520" endtime="20201112 12:42:38.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021415472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021489375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.826" endtime="20201112 12:42:38.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.834" endtime="20201112 12:42:38.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.517" endtime="20201112 12:42:38.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.515" endtime="20201112 12:42:38.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.841" level="INFO">${RESULT} = [{'time': 0.021489375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.390300000000016e-05, 'source_diff': 7.390300000000016e-05}, {'time': 0.021568181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.838" endtime="20201112 12:42:38.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.855" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:38.842" endtime="20201112 12:42:38.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.860" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.859" endtime="20201112 12:42:38.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.862" level="INFO">VALUE: [7.390300000000016e-05, 7.386199999999746e-05, 7.388900000000059e-05, 7.398599999999811e-05, 7.409699999999866e-05, 7.391600000000026e-05, 7.392999999999983e-05, 7.380500000000317e-05, 7.356899999999902e-05, 7.383300000000231e-05, 7.37500000000009e-05, 7.397199999999854e-05, 7.39309999999993e-05, 7.390300000000016e-05, 7.363900000000034e-05, 7.406899999999952e-05, 7.358300000000206e-05, 7.381999999999875e-05, 7.370900000000166e-05, 7.394499999999887e-05, 7.362500000000077e-05, 7.40560000000029e-05, 7.384799999999789e-05, 7.393100000000277e-05, 7.359699999999816e-05, 7.362500000000077e-05, 7.41110000000017e-05, 7.35690000000025e-05, 7.351400000000022e-05, 7.37500000000009e-05, 7.405500000000342e-05, 7.370799999999872e-05, 7.406899999999952e-05, 7.37500000000009e-05, 7.387500000000102e-05, 7.390300000000016e-05, 7.401400000000072e-05, 7.386100000000145e-05, 7.352799999999979e-05, 7.369500000000209e-05, 7.380599999999918e-05, 7.370900000000166e-05, 7.399999999999768e-05, 7.404199999999986e-05, 7.370899999999819e-05, 7.40829999999991e-05, 7.37500000000009e-05, 7.3763000000001e-05, 7.372200000000176e-05, 7.352700000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.861" endtime="20201112 12:42:38.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.856" endtime="20201112 12:42:38.863"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.866" endtime="20201112 12:42:38.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.869" endtime="20201112 12:42:38.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.867" endtime="20201112 12:42:38.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.864" endtime="20201112 12:42:38.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.482" endtime="20201112 12:42:38.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.482" endtime="20201112 12:42:38.890"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.898" endtime="20201112 12:42:38.915"></status>
</kw>
<msg timestamp="20201112 12:42:38.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.897" endtime="20201112 12:42:38.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.916" endtime="20201112 12:42:38.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.919" endtime="20201112 12:42:38.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.894" endtime="20201112 12:42:38.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.892" endtime="20201112 12:42:38.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.928" endtime="20201112 12:42:39.214"></status>
</kw>
<msg timestamp="20201112 12:42:39.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021454375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.927" endtime="20201112 12:42:39.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021454375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.218" endtime="20201112 12:42:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.226" endtime="20201112 12:42:39.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.924" endtime="20201112 12:42:39.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.923" endtime="20201112 12:42:39.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.233" level="INFO">${RESULT} = [{'time': 0.021528986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.461099999999873e-05, 'source_diff': 7.461099999999873e-05}, {'time': 0.021608778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:39.229" endtime="20201112 12:42:39.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.246" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:39.234" endtime="20201112 12:42:39.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.250" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.249" endtime="20201112 12:42:39.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.253" level="INFO">VALUE: [7.461099999999873e-05, 7.499999999999868e-05, 7.484800000000236e-05, 7.507e-05, 7.459799999999864e-05, 7.498599999999911e-05, 7.4763999999998e-05, 7.486099999999898e-05, 7.495799999999997e-05, 7.484699999999941e-05, 7.484699999999941e-05, 7.50830000000001e-05, 7.459699999999916e-05, 7.488900000000159e-05, 7.479200000000061e-05, 7.505500000000095e-05, 7.488900000000159e-05, 7.473600000000233e-05, 7.495799999999997e-05, 7.494499999999987e-05, 7.459700000000263e-05, 7.463900000000134e-05, 7.504099999999791e-05, 7.4763999999998e-05, 7.507e-05, 7.511099999999923e-05, 7.476299999999853e-05, 7.497300000000248e-05, 7.500000000000215e-05, 7.513899999999837e-05, 7.495799999999997e-05, 7.491600000000126e-05, 7.48050000000007e-05, 7.463899999999787e-05, 7.487499999999855e-05, 7.502800000000129e-05, 7.486099999999898e-05, 7.474999999999843e-05, 7.487500000000202e-05, 7.450000000000165e-05, 7.481999999999975e-05, 7.46110000000022e-05, 7.490300000000116e-05, 7.465199999999797e-05, 7.474999999999843e-05, 7.508399999999957e-05, 7.472300000000223e-05, 7.469499999999962e-05, 7.49029999999977e-05, 7.486099999999898e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.251" endtime="20201112 12:42:39.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.247" endtime="20201112 12:42:39.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.256" endtime="20201112 12:42:39.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.260" endtime="20201112 12:42:39.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.258" endtime="20201112 12:42:39.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.255" endtime="20201112 12:42:39.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.890" endtime="20201112 12:42:39.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.890" endtime="20201112 12:42:39.280"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.289" endtime="20201112 12:42:39.306"></status>
</kw>
<msg timestamp="20201112 12:42:39.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.287" endtime="20201112 12:42:39.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.307" endtime="20201112 12:42:39.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.310" endtime="20201112 12:42:39.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.285" endtime="20201112 12:42:39.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.283" endtime="20201112 12:42:39.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.319" endtime="20201112 12:42:39.606"></status>
</kw>
<msg timestamp="20201112 12:42:39.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.318" endtime="20201112 12:42:39.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021618014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.610" endtime="20201112 12:42:39.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.618" endtime="20201112 12:42:39.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.315" endtime="20201112 12:42:39.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.314" endtime="20201112 12:42:39.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.625" level="INFO">${RESULT} = [{'time': 0.021618014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597200000000054e-05, 'source_diff': 7.597200000000054e-05}, {'time': 0.021698806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:39.621" endtime="20201112 12:42:39.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.638" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:39.626" endtime="20201112 12:42:39.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.642" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.641" endtime="20201112 12:42:39.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.645" level="INFO">VALUE: [7.597200000000054e-05, 7.608400000000057e-05, 7.554200000000136e-05, 7.605500000000195e-05, 7.569500000000062e-05, 7.588799999999965e-05, 7.561099999999973e-05, 7.583299999999737e-05, 7.554099999999841e-05, 7.58189999999978e-05, 7.554099999999841e-05, 7.584699999999694e-05, 7.611100000000023e-05, 7.593099999999783e-05, 7.55700000000005e-05, 7.602799999999882e-05, 7.608400000000057e-05, 7.601399999999925e-05, 7.574999999999943e-05, 7.608400000000057e-05, 7.583400000000032e-05, 7.604199999999839e-05, 7.551399999999875e-05, 7.563899999999887e-05, 7.551399999999875e-05, 7.587499999999955e-05, 7.587499999999955e-05, 7.597199999999707e-05, 7.588899999999912e-05, 7.595800000000097e-05, 7.598600000000011e-05, 7.581900000000127e-05, 7.586099999999998e-05, 7.592999999999836e-05, 7.604199999999839e-05, 7.55700000000005e-05, 7.579199999999814e-05, 7.569499999999715e-05, 7.559700000000016e-05, 7.599999999999968e-05, 7.566700000000148e-05, 7.563899999999887e-05, 7.552799999999832e-05, 7.587499999999955e-05, 7.554200000000136e-05, 7.587499999999955e-05, 7.555500000000145e-05, 7.572200000000029e-05, 7.568000000000158e-05, 7.579099999999866e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.643" endtime="20201112 12:42:39.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.639" endtime="20201112 12:42:39.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.648" endtime="20201112 12:42:39.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.652" endtime="20201112 12:42:39.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.650" endtime="20201112 12:42:39.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.647" endtime="20201112 12:42:39.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.281" endtime="20201112 12:42:39.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.281" endtime="20201112 12:42:39.672"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.681" endtime="20201112 12:42:39.698"></status>
</kw>
<msg timestamp="20201112 12:42:39.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.679" endtime="20201112 12:42:39.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.700" endtime="20201112 12:42:39.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.702" endtime="20201112 12:42:39.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.677" endtime="20201112 12:42:39.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.675" endtime="20201112 12:42:39.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.712" endtime="20201112 12:42:39.998"></status>
</kw>
<msg timestamp="20201112 12:42:40.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.711" endtime="20201112 12:42:40.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021445375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021522014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.002" endtime="20201112 12:42:40.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.010" endtime="20201112 12:42:40.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.708" endtime="20201112 12:42:40.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.706" endtime="20201112 12:42:40.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.017" level="INFO">${RESULT} = [{'time': 0.021522014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.663899999999987e-05, 'source_diff': 7.663899999999987e-05}, {'time': 0.021603778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.013" endtime="20201112 12:42:40.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.030" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.018" endtime="20201112 12:42:40.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.034" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.033" endtime="20201112 12:42:40.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.037" level="INFO">VALUE: [7.663899999999987e-05, 7.677799999999957e-05, 7.705599999999896e-05, 7.688900000000012e-05, 7.665299999999944e-05, 7.668100000000205e-05, 7.695899999999797e-05, 7.652799999999932e-05, 7.70969999999982e-05, 7.65969999999977e-05, 7.670799999999825e-05, 7.666599999999954e-05, 7.677799999999957e-05, 7.661099999999726e-05, 7.663899999999987e-05, 7.68189999999988e-05, 7.683299999999837e-05, 7.666699999999901e-05, 7.666700000000248e-05, 7.672200000000129e-05, 7.665299999999944e-05, 7.697200000000154e-05, 7.666699999999901e-05, 7.683399999999785e-05, 7.66250000000003e-05, 7.701400000000025e-05, 7.69449999999984e-05, 7.65700000000015e-05, 7.683300000000184e-05, 7.700000000000068e-05, 7.665199999999997e-05, 7.70830000000021e-05, 7.679099999999967e-05, 7.697199999999807e-05, 7.702799999999982e-05, 7.688900000000012e-05, 7.661100000000073e-05, 7.668099999999858e-05, 7.675000000000043e-05, 7.658299999999812e-05, 7.697299999999754e-05, 7.677799999999957e-05, 7.687500000000055e-05, 7.663899999999987e-05, 7.6764e-05, 7.702800000000329e-05, 7.705599999999896e-05, 7.650000000000018e-05, 7.66250000000003e-05, 7.702700000000035e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.035" endtime="20201112 12:42:40.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.031" endtime="20201112 12:42:40.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.040" endtime="20201112 12:42:40.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.043" endtime="20201112 12:42:40.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.042" endtime="20201112 12:42:40.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.039" endtime="20201112 12:42:40.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.673" endtime="20201112 12:42:40.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.673" endtime="20201112 12:42:40.064"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.073" endtime="20201112 12:42:40.090"></status>
</kw>
<msg timestamp="20201112 12:42:40.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.071" endtime="20201112 12:42:40.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.091" endtime="20201112 12:42:40.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.094" endtime="20201112 12:42:40.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.069" endtime="20201112 12:42:40.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.067" endtime="20201112 12:42:40.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.103" endtime="20201112 12:42:40.389"></status>
</kw>
<msg timestamp="20201112 12:42:40.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:40.102" endtime="20201112 12:42:40.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021692, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021769653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:40.393" endtime="20201112 12:42:40.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.401" endtime="20201112 12:42:40.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.099" endtime="20201112 12:42:40.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.098" endtime="20201112 12:42:40.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.408" level="INFO">${RESULT} = [{'time': 0.021769653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.765300000000044e-05, 'source_diff': 7.765300000000044e-05}, {'time': 0.021851458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.404" endtime="20201112 12:42:40.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.422" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.409" endtime="20201112 12:42:40.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.426" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.425" endtime="20201112 12:42:40.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.429" level="INFO">VALUE: [7.765300000000044e-05, 7.729100000000017e-05, 7.802699999999788e-05, 7.783300000000284e-05, 7.791600000000079e-05, 7.780599999999971e-05, 7.76250000000013e-05, 7.80969999999992e-05, 7.784699999999894e-05, 7.770799999999925e-05, 7.775000000000143e-05, 7.788900000000112e-05, 7.795900000000244e-05, 7.772300000000176e-05, 7.786099999999851e-05, 7.794500000000287e-05, 7.77229999999983e-05, 7.791700000000026e-05, 7.784699999999894e-05, 7.773699999999786e-05, 7.806900000000006e-05, 7.774999999999796e-05, 7.76519999999975e-05, 7.786100000000198e-05, 7.799999999999821e-05, 7.79579999999995e-05, 7.75969999999987e-05, 7.80969999999992e-05, 7.775000000000143e-05, 7.774999999999796e-05, 7.766700000000001e-05, 7.805599999999996e-05, 7.802800000000082e-05, 7.808299999999962e-05, 7.763900000000087e-05, 7.773600000000186e-05, 7.788899999999765e-05, 7.791700000000026e-05, 7.766700000000001e-05, 7.797199999999907e-05, 7.77770000000011e-05, 7.766600000000054e-05, 7.773599999999839e-05, 7.770799999999925e-05, 7.811099999999876e-05, 7.763900000000087e-05, 7.772199999999882e-05, 7.768099999999958e-05, 7.783299999999937e-05, 7.79449999999994e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.427" endtime="20201112 12:42:40.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.423" endtime="20201112 12:42:40.430"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.432" endtime="20201112 12:42:40.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.436" endtime="20201112 12:42:40.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.434" endtime="20201112 12:42:40.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.431" endtime="20201112 12:42:40.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.065" endtime="20201112 12:42:40.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.065" endtime="20201112 12:42:40.456"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.465" endtime="20201112 12:42:40.482"></status>
</kw>
<msg timestamp="20201112 12:42:40.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.463" endtime="20201112 12:42:40.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.484" endtime="20201112 12:42:40.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.486" endtime="20201112 12:42:40.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.461" endtime="20201112 12:42:40.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.459" endtime="20201112 12:42:40.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.496" endtime="20201112 12:42:40.781"></status>
</kw>
<msg timestamp="20201112 12:42:40.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.494" endtime="20201112 12:42:40.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021533028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021612319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.785" endtime="20201112 12:42:40.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.793" endtime="20201112 12:42:40.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.492" endtime="20201112 12:42:40.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.490" endtime="20201112 12:42:40.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.800" level="INFO">${RESULT} = [{'time': 0.021612319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.929100000000217e-05, 'source_diff': 7.929100000000217e-05}, {'time': 0.021696111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.796" endtime="20201112 12:42:40.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.813" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:40.801" endtime="20201112 12:42:40.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.817" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.816" endtime="20201112 12:42:40.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.820" level="INFO">VALUE: [7.929100000000217e-05, 7.89030000000017e-05, 7.899999999999921e-05, 7.874999999999896e-05, 7.880599999999724e-05, 7.90970000000002e-05, 7.888899999999865e-05, 7.880600000000071e-05, 7.85839999999996e-05, 7.893100000000083e-05, 7.907000000000053e-05, 7.888900000000212e-05, 7.89169999999978e-05, 7.859799999999917e-05, 7.905499999999802e-05, 7.904099999999845e-05, 7.861100000000273e-05, 7.887500000000255e-05, 7.906900000000106e-05, 7.870800000000025e-05, 7.869399999999721e-05, 7.890299999999822e-05, 7.852799999999785e-05, 7.875000000000243e-05, 7.902800000000182e-05, 7.905600000000096e-05, 7.862499999999883e-05, 7.855600000000046e-05, 7.904199999999792e-05, 7.869500000000015e-05, 7.869499999999668e-05, 7.901400000000225e-05, 7.905600000000096e-05, 7.891600000000179e-05, 7.884699999999994e-05, 7.869500000000015e-05, 7.883300000000037e-05, 7.872199999999982e-05, 7.867999999999764e-05, 7.902799999999835e-05, 7.868100000000058e-05, 7.887499999999908e-05, 7.859799999999917e-05, 7.912499999999933e-05, 7.882000000000028e-05, 7.899999999999921e-05, 7.861099999999926e-05, 7.899999999999921e-05, 7.85839999999996e-05, 7.869500000000015e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.818" endtime="20201112 12:42:40.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.814" endtime="20201112 12:42:40.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.823" endtime="20201112 12:42:40.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.827" endtime="20201112 12:42:40.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.825" endtime="20201112 12:42:40.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.822" endtime="20201112 12:42:40.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.457" endtime="20201112 12:42:40.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.457" endtime="20201112 12:42:40.847"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.856" endtime="20201112 12:42:40.873"></status>
</kw>
<msg timestamp="20201112 12:42:40.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.854" endtime="20201112 12:42:40.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.874" endtime="20201112 12:42:40.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.877" endtime="20201112 12:42:40.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.852" endtime="20201112 12:42:40.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.850" endtime="20201112 12:42:40.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.887" endtime="20201112 12:42:41.172"></status>
</kw>
<msg timestamp="20201112 12:42:41.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.885" endtime="20201112 12:42:41.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.176" endtime="20201112 12:42:41.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.184" endtime="20201112 12:42:41.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.883" endtime="20201112 12:42:41.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.881" endtime="20201112 12:42:41.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.191" level="INFO">${RESULT} = [{'time': 0.021685861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.000000000000021e-05, 'source_diff': 8.000000000000021e-05}, {'time': 0.021770653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.187" endtime="20201112 12:42:41.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.204" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.192" endtime="20201112 12:42:41.204"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.208" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.207" endtime="20201112 12:42:41.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.211" level="INFO">VALUE: [8.000000000000021e-05, 8.015299999999947e-05, 7.986199999999999e-05, 7.986100000000051e-05, 7.987500000000008e-05, 8.000000000000021e-05, 7.95840000000006e-05, 7.974999999999996e-05, 8.002699999999988e-05, 7.956899999999809e-05, 7.994399999999846e-05, 7.994399999999846e-05, 7.990199999999975e-05, 7.98190000000018e-05, 7.980500000000224e-05, 7.990299999999922e-05, 8.001399999999978e-05, 7.993099999999836e-05, 7.986100000000051e-05, 7.987500000000008e-05, 7.954200000000189e-05, 7.955600000000146e-05, 7.955599999999799e-05, 7.995900000000097e-05, 7.981899999999834e-05, 7.988899999999965e-05, 7.987500000000008e-05, 7.955499999999852e-05, 8.01389999999999e-05, 7.983300000000138e-05, 7.980500000000224e-05, 7.958300000000113e-05, 8.005499999999902e-05, 7.99719999999976e-05, 7.95970000000007e-05, 7.979200000000214e-05, 8.008300000000163e-05, 7.952800000000232e-05, 7.9764000000003e-05, 7.986099999999705e-05, 7.973600000000039e-05, 7.998600000000064e-05, 7.991599999999932e-05, 7.965300000000244e-05, 8.001399999999978e-05, 8.002799999999935e-05, 8.009800000000067e-05, 7.969399999999821e-05, 7.980600000000171e-05, 7.961100000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.209" endtime="20201112 12:42:41.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.205" endtime="20201112 12:42:41.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.214" endtime="20201112 12:42:41.216"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.218" endtime="20201112 12:42:41.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.216" endtime="20201112 12:42:41.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.213" endtime="20201112 12:42:41.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.848" endtime="20201112 12:42:41.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.848" endtime="20201112 12:42:41.238"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.247" endtime="20201112 12:42:41.264"></status>
</kw>
<msg timestamp="20201112 12:42:41.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.245" endtime="20201112 12:42:41.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.266" endtime="20201112 12:42:41.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.268" endtime="20201112 12:42:41.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.243" endtime="20201112 12:42:41.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.241" endtime="20201112 12:42:41.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.278" endtime="20201112 12:42:41.563"></status>
</kw>
<msg timestamp="20201112 12:42:41.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021599694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.277" endtime="20201112 12:42:41.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021518639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021599694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.568" endtime="20201112 12:42:41.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.576" endtime="20201112 12:42:41.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.274" endtime="20201112 12:42:41.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.272" endtime="20201112 12:42:41.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.583" level="INFO">${RESULT} = [{'time': 0.021599694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.105500000000002e-05, 'source_diff': 8.105500000000002e-05}, {'time': 0.021684486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.580" endtime="20201112 12:42:41.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.584" endtime="20201112 12:42:41.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.601" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.600" endtime="20201112 12:42:41.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.603" level="INFO">VALUE: [8.105500000000002e-05, 8.025000000000046e-05, 8.056900000000256e-05, 8.055499999999952e-05, 8.112499999999787e-05, 8.108299999999916e-05, 8.09169999999998e-05, 8.07780000000001e-05, 8.061100000000126e-05, 8.061100000000126e-05, 8.099999999999774e-05, 8.066699999999954e-05, 8.072299999999782e-05, 8.055600000000246e-05, 8.098699999999764e-05, 8.06390000000004e-05, 8.080499999999977e-05, 8.084699999999848e-05, 8.074999999999749e-05, 8.11109999999983e-05, 8.0458000000002e-05, 8.056899999999909e-05, 8.105599999999949e-05, 8.093099999999936e-05, 8.06109999999978e-05, 8.070799999999878e-05, 8.06390000000004e-05, 8.079199999999967e-05, 8.080599999999924e-05, 8.070900000000172e-05, 8.069499999999868e-05, 8.105600000000296e-05, 8.108399999999863e-05, 8.076400000000053e-05, 8.104199999999992e-05, 8.08190000000028e-05, 8.11109999999983e-05, 8.055599999999899e-05, 8.06109999999978e-05, 8.070799999999878e-05, 8.108299999999916e-05, 8.109699999999873e-05, 8.073600000000139e-05, 8.056899999999909e-05, 8.06390000000004e-05, 8.09169999999998e-05, 8.066699999999954e-05, 8.06109999999978e-05, 8.101400000000078e-05, 8.074999999999749e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.602" endtime="20201112 12:42:41.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.597" endtime="20201112 12:42:41.604"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.607" endtime="20201112 12:42:41.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.610" endtime="20201112 12:42:41.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.608" endtime="20201112 12:42:41.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.605" endtime="20201112 12:42:41.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.239" endtime="20201112 12:42:41.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.239" endtime="20201112 12:42:41.631"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.639" endtime="20201112 12:42:41.658"></status>
</kw>
<msg timestamp="20201112 12:42:41.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.638" endtime="20201112 12:42:41.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.659" endtime="20201112 12:42:41.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.661" endtime="20201112 12:42:41.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.635" endtime="20201112 12:42:41.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.633" endtime="20201112 12:42:41.665"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.671" endtime="20201112 12:42:41.956"></status>
</kw>
<msg timestamp="20201112 12:42:41.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.670" endtime="20201112 12:42:41.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021611125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021693528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.960" endtime="20201112 12:42:41.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.968" endtime="20201112 12:42:41.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.667" endtime="20201112 12:42:41.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.666" endtime="20201112 12:42:41.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.975" level="INFO">${RESULT} = [{'time': 0.021693528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.240300000000172e-05, 'source_diff': 8.240300000000172e-05}, {'time': 0.021779306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.972" endtime="20201112 12:42:41.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.989" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:41.976" endtime="20201112 12:42:41.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.994" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.993" endtime="20201112 12:42:41.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.996" level="INFO">VALUE: [8.240300000000172e-05, 8.12369999999979e-05, 8.168000000000064e-05, 8.177700000000163e-05, 8.187499999999862e-05, 8.204099999999798e-05, 8.187500000000208e-05, 8.179200000000067e-05, 8.169400000000021e-05, 8.173600000000239e-05, 8.170799999999978e-05, 8.162499999999837e-05, 8.177799999999763e-05, 8.208300000000016e-05, 8.198599999999917e-05, 8.176399999999806e-05, 8.19309999999969e-05, 8.169499999999968e-05, 8.166700000000054e-05, 8.152800000000085e-05, 8.206899999999712e-05, 8.195800000000003e-05, 8.155500000000052e-05, 8.184699999999948e-05, 8.212499999999887e-05, 8.156900000000009e-05, 8.204200000000092e-05, 8.184700000000295e-05, 8.190300000000122e-05, 8.168100000000011e-05, 8.180600000000024e-05, 8.188899999999819e-05, 8.170800000000325e-05, 8.155599999999999e-05, 8.186099999999905e-05, 8.177799999999763e-05, 8.155599999999999e-05, 8.212499999999887e-05, 8.143099999999986e-05, 8.154199999999695e-05, 8.208399999999963e-05, 8.195800000000003e-05, 8.190199999999828e-05, 8.19719999999996e-05, 8.208300000000016e-05, 8.199999999999874e-05, 8.156900000000009e-05, 8.190299999999776e-05, 8.169400000000021e-05, 8.179099999999773e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.995" endtime="20201112 12:42:41.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.990" endtime="20201112 12:42:41.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.000" endtime="20201112 12:42:42.001"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.003" endtime="20201112 12:42:42.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.002" endtime="20201112 12:42:42.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.998" endtime="20201112 12:42:42.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.632" endtime="20201112 12:42:42.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.631" endtime="20201112 12:42:42.024"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.032" endtime="20201112 12:42:42.050"></status>
</kw>
<msg timestamp="20201112 12:42:42.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.031" endtime="20201112 12:42:42.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.051" endtime="20201112 12:42:42.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.053" endtime="20201112 12:42:42.056"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.028" endtime="20201112 12:42:42.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.026" endtime="20201112 12:42:42.057"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.063" endtime="20201112 12:42:42.348"></status>
</kw>
<msg timestamp="20201112 12:42:42.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.062" endtime="20201112 12:42:42.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021449903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.352" endtime="20201112 12:42:42.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.360" endtime="20201112 12:42:42.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.059" endtime="20201112 12:42:42.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.058" endtime="20201112 12:42:42.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.367" level="INFO">${RESULT} = [{'time': 0.021533208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.330500000000227e-05, 'source_diff': 8.330500000000227e-05}, {'time': 0.021621, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:42.363" endtime="20201112 12:42:42.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.380" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.368" endtime="20201112 12:42:42.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.384" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.383" endtime="20201112 12:42:42.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.387" level="INFO">VALUE: [8.330500000000227e-05, 8.273599999999992e-05, 8.288900000000265e-05, 8.298600000000017e-05, 8.283400000000038e-05, 8.309700000000073e-05, 8.262499999999937e-05, 8.266700000000154e-05, 8.254200000000142e-05, 8.311099999999683e-05, 8.26659999999986e-05, 8.267999999999817e-05, 8.294399999999799e-05, 8.295799999999756e-05, 8.29720000000006e-05, 8.306899999999812e-05, 8.294399999999799e-05, 8.29720000000006e-05, 8.309700000000073e-05, 8.298600000000017e-05, 8.272200000000035e-05, 8.263899999999894e-05, 8.305600000000149e-05, 8.299999999999974e-05, 8.272200000000035e-05, 8.290299999999876e-05, 8.263899999999894e-05, 8.255600000000099e-05, 8.282000000000081e-05, 8.290199999999928e-05, 8.281900000000134e-05, 8.274999999999949e-05, 8.309700000000073e-05, 8.259700000000023e-05, 8.268000000000164e-05, 8.27919999999982e-05, 8.305500000000202e-05, 8.304200000000192e-05, 8.270800000000078e-05, 8.266700000000154e-05, 8.26390000000024e-05, 8.31110000000003e-05, 8.269500000000068e-05, 8.305600000000149e-05, 8.280500000000177e-05, 8.297300000000007e-05, 8.295799999999756e-05, 8.25979999999997e-05, 8.288899999999919e-05, 8.31110000000003e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.385" endtime="20201112 12:42:42.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.381" endtime="20201112 12:42:42.388"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.390" endtime="20201112 12:42:42.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.394" endtime="20201112 12:42:42.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.392" endtime="20201112 12:42:42.413"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.389" endtime="20201112 12:42:42.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.025" endtime="20201112 12:42:42.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.024" endtime="20201112 12:42:42.414"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.423" endtime="20201112 12:42:42.441"></status>
</kw>
<msg timestamp="20201112 12:42:42.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.421" endtime="20201112 12:42:42.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.442" endtime="20201112 12:42:42.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.445" endtime="20201112 12:42:42.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.419" endtime="20201112 12:42:42.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.417" endtime="20201112 12:42:42.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.455" endtime="20201112 12:42:42.739"></status>
</kw>
<msg timestamp="20201112 12:42:42.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021614361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.453" endtime="20201112 12:42:42.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021530861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021614361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.743" endtime="20201112 12:42:42.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.751" endtime="20201112 12:42:42.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.451" endtime="20201112 12:42:42.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.449" endtime="20201112 12:42:42.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.758" level="INFO">${RESULT} = [{'time': 0.021614361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.350000000000024e-05, 'source_diff': 8.350000000000024e-05}, {'time': 0.021703194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:42.755" endtime="20201112 12:42:42.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.771" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:42.759" endtime="20201112 12:42:42.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.776" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.775" endtime="20201112 12:42:42.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.778" level="INFO">VALUE: [8.350000000000024e-05, 8.381899999999887e-05, 8.357000000000156e-05, 8.359700000000123e-05, 8.359799999999723e-05, 8.41110000000013e-05, 8.394400000000246e-05, 8.408299999999869e-05, 8.406899999999912e-05, 8.409700000000173e-05, 8.376400000000006e-05, 8.394399999999899e-05, 8.390299999999976e-05, 8.397199999999813e-05, 8.409699999999826e-05, 8.391699999999933e-05, 8.369500000000168e-05, 8.404199999999945e-05, 8.391699999999933e-05, 8.39590000000015e-05, 8.37919999999992e-05, 8.380599999999877e-05, 8.404199999999945e-05, 8.394499999999847e-05, 8.363800000000046e-05, 8.373600000000092e-05, 8.376300000000059e-05, 8.373600000000092e-05, 8.39720000000016e-05, 8.381899999999887e-05, 8.391599999999985e-05, 8.36110000000008e-05, 8.399999999999727e-05, 8.3846999999998e-05, 8.369499999999822e-05, 8.370799999999831e-05, 8.352799999999938e-05, 8.39720000000016e-05, 8.373600000000092e-05, 8.36529999999995e-05, 8.354199999999895e-05, 8.357000000000156e-05, 8.405499999999955e-05, 8.369500000000168e-05, 8.363800000000046e-05, 8.404099999999998e-05, 8.404099999999998e-05, 8.400000000000074e-05, 8.350000000000024e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.777" endtime="20201112 12:42:42.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.772" endtime="20201112 12:42:42.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.782" endtime="20201112 12:42:42.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.785" endtime="20201112 12:42:42.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.783" endtime="20201112 12:42:42.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.780" endtime="20201112 12:42:42.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.415" endtime="20201112 12:42:42.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.415" endtime="20201112 12:42:42.806"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.814" endtime="20201112 12:42:42.832"></status>
</kw>
<msg timestamp="20201112 12:42:42.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.813" endtime="20201112 12:42:42.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.834" endtime="20201112 12:42:42.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.836" endtime="20201112 12:42:42.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.810" endtime="20201112 12:42:42.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.808" endtime="20201112 12:42:42.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.846" endtime="20201112 12:42:43.132"></status>
</kw>
<msg timestamp="20201112 12:42:43.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634639, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:42:42.845" endtime="20201112 12:42:43.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634639, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 12:42:43.136" endtime="20201112 12:42:43.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.144" endtime="20201112 12:42:43.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.842" endtime="20201112 12:42:43.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.840" endtime="20201112 12:42:43.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.150" level="INFO">${RESULT} = [{'time': 0.021634639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.463900000000094e-05, 'source_diff': 8.463900000000094e-05}, {'time': 0.021724431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.147" endtime="20201112 12:42:43.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.164" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.151" endtime="20201112 12:42:43.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.168" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.167" endtime="20201112 12:42:43.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.170" level="INFO">VALUE: [8.463900000000094e-05, 8.491700000000033e-05, 8.490200000000128e-05, 8.470799999999931e-05, 8.458300000000266e-05, 8.495799999999956e-05, 8.46249999999979e-05, 8.472199999999888e-05, 8.474999999999802e-05, 8.454199999999995e-05, 8.462500000000137e-05, 8.469499999999922e-05, 8.452800000000038e-05, 8.4846999999999e-05, 8.483299999999944e-05, 8.473599999999845e-05, 8.452800000000038e-05, 8.477800000000063e-05, 8.452800000000038e-05, 8.459699999999876e-05, 8.475000000000149e-05, 8.46110000000018e-05, 8.487500000000162e-05, 8.473599999999845e-05, 8.455500000000005e-05, 8.462500000000137e-05, 8.472199999999888e-05, 8.49720000000026e-05, 8.454199999999995e-05, 8.476399999999759e-05, 8.495799999999956e-05, 8.504200000000045e-05, 8.46530000000005e-05, 8.451400000000081e-05, 8.506999999999959e-05, 8.454199999999995e-05, 8.468099999999965e-05, 8.470900000000225e-05, 8.51249999999984e-05, 8.455599999999952e-05, 8.48050000000003e-05, 8.458299999999919e-05, 8.459700000000223e-05, 8.476400000000106e-05, 8.458299999999919e-05, 8.458299999999919e-05, 8.487499999999815e-05, 8.483299999999944e-05, 8.4846999999999e-05, 8.473599999999845e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.169" endtime="20201112 12:42:43.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.165" endtime="20201112 12:42:43.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.174" endtime="20201112 12:42:43.175"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.177" endtime="20201112 12:42:43.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.176" endtime="20201112 12:42:43.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.172" endtime="20201112 12:42:43.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.807" endtime="20201112 12:42:43.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.806" endtime="20201112 12:42:43.198"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.207" endtime="20201112 12:42:43.225"></status>
</kw>
<msg timestamp="20201112 12:42:43.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.205" endtime="20201112 12:42:43.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.226" endtime="20201112 12:42:43.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.229" endtime="20201112 12:42:43.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.203" endtime="20201112 12:42:43.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.201" endtime="20201112 12:42:43.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.239" endtime="20201112 12:42:43.524"></status>
</kw>
<msg timestamp="20201112 12:42:43.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.237" endtime="20201112 12:42:43.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.528" endtime="20201112 12:42:43.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.536" endtime="20201112 12:42:43.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.235" endtime="20201112 12:42:43.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.233" endtime="20201112 12:42:43.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.543" level="INFO">${RESULT} = [{'time': 0.021765694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.590199999999881e-05, 'source_diff': 8.590199999999881e-05}, {'time': 0.021856486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.539" endtime="20201112 12:42:43.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.557" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.544" endtime="20201112 12:42:43.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.561" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.560" endtime="20201112 12:42:43.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.564" level="INFO">VALUE: [8.590199999999881e-05, 8.600000000000274e-05, 8.57920000000012e-05, 8.582000000000034e-05, 8.586099999999958e-05, 8.561099999999933e-05, 8.565199999999856e-05, 8.568000000000117e-05, 8.552799999999791e-05, 8.607000000000059e-05, 8.583300000000044e-05, 8.588900000000219e-05, 8.598699999999918e-05, 8.595800000000056e-05, 8.590199999999881e-05, 8.57920000000012e-05, 8.569400000000074e-05, 8.574999999999902e-05, 8.563899999999847e-05, 8.577800000000163e-05, 8.569400000000074e-05, 8.595800000000056e-05, 8.572199999999988e-05, 8.597200000000013e-05, 8.559699999999976e-05, 8.588899999999872e-05, 8.554199999999748e-05, 8.588900000000219e-05, 8.582000000000034e-05, 8.601400000000231e-05, 8.569400000000074e-05, 8.577699999999869e-05, 8.606899999999765e-05, 8.591599999999838e-05, 8.555499999999758e-05, 8.580499999999783e-05, 8.5847e-05, 8.554099999999801e-05, 8.608300000000069e-05, 8.582000000000034e-05, 8.574999999999902e-05, 8.568100000000065e-05, 8.559699999999976e-05, 8.56669999999976e-05, 8.579100000000173e-05, 8.606900000000112e-05, 8.569500000000022e-05, 8.555600000000052e-05, 8.5847e-05, 8.605600000000102e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.562" endtime="20201112 12:42:43.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.558" endtime="20201112 12:42:43.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.571" endtime="20201112 12:42:43.572"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.574" endtime="20201112 12:42:43.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.573" endtime="20201112 12:42:43.594"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.569" endtime="20201112 12:42:43.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.199" endtime="20201112 12:42:43.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.199" endtime="20201112 12:42:43.595"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.605" endtime="20201112 12:42:43.624"></status>
</kw>
<msg timestamp="20201112 12:42:43.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.603" endtime="20201112 12:42:43.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.625" endtime="20201112 12:42:43.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.628" endtime="20201112 12:42:43.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.600" endtime="20201112 12:42:43.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.598" endtime="20201112 12:42:43.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.638" endtime="20201112 12:42:43.924"></status>
</kw>
<msg timestamp="20201112 12:42:43.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023299306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.636" endtime="20201112 12:42:43.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023299306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023386292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.928" endtime="20201112 12:42:43.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.936" endtime="20201112 12:42:43.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.633" endtime="20201112 12:42:43.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.632" endtime="20201112 12:42:43.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.943" level="INFO">${RESULT} = [{'time': 0.023386292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.69860000000007e-05, 'source_diff': 8.69860000000007e-05}, {'time': 0.023478083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:43.939" endtime="20201112 12:42:43.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.956" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:43.943" endtime="20201112 12:42:43.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.960" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.959" endtime="20201112 12:42:43.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.963" level="INFO">VALUE: [8.69860000000007e-05, 8.720800000000181e-05, 8.697200000000113e-05, 8.691600000000285e-05, 8.658299999999772e-05, 8.669399999999827e-05, 8.701399999999984e-05, 8.688899999999972e-05, 8.695800000000156e-05, 8.672200000000088e-05, 8.66249999999999e-05, 8.654199999999848e-05, 8.708400000000116e-05, 8.661100000000033e-05, 8.675000000000002e-05, 8.658400000000066e-05, 8.672199999999741e-05, 8.690199999999981e-05, 8.663799999999999e-05, 8.693000000000242e-05, 8.71250000000004e-05, 8.662500000000337e-05, 8.66249999999999e-05, 8.691699999999886e-05, 8.655600000000152e-05, 8.677799999999916e-05, 8.691699999999886e-05, 8.673599999999698e-05, 8.66249999999999e-05, 8.687500000000015e-05, 8.69860000000007e-05, 8.709800000000073e-05, 8.69730000000006e-05, 8.706999999999812e-05, 8.677799999999916e-05, 8.691699999999886e-05, 8.66249999999999e-05, 8.708300000000169e-05, 8.658300000000119e-05, 8.708299999999822e-05, 8.670900000000079e-05, 8.669400000000174e-05, 8.686100000000058e-05, 8.687500000000015e-05, 8.673599999999698e-05, 8.681999999999787e-05, 8.655600000000152e-05, 8.705600000000202e-05, 8.676399999999959e-05, 8.677799999999916e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.961" endtime="20201112 12:42:43.963"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.957" endtime="20201112 12:42:43.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.966" endtime="20201112 12:42:43.967"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.969" endtime="20201112 12:42:43.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.968" endtime="20201112 12:42:43.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.964" endtime="20201112 12:42:43.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.596" endtime="20201112 12:42:43.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.596" endtime="20201112 12:42:43.990"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.999" endtime="20201112 12:42:44.017"></status>
</kw>
<msg timestamp="20201112 12:42:44.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.997" endtime="20201112 12:42:44.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.019" endtime="20201112 12:42:44.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.021" endtime="20201112 12:42:44.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.995" endtime="20201112 12:42:44.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.992" endtime="20201112 12:42:44.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.031" endtime="20201112 12:42:44.316"></status>
</kw>
<msg timestamp="20201112 12:42:44.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.030" endtime="20201112 12:42:44.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021809347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.320" endtime="20201112 12:42:44.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.328" endtime="20201112 12:42:44.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.027" endtime="20201112 12:42:44.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.026" endtime="20201112 12:42:44.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.335" level="INFO">${RESULT} = [{'time': 0.021896847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000000077e-05, 'source_diff': 8.750000000000077e-05}, {'time': 0.021989639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.332" endtime="20201112 12:42:44.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.348" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.336" endtime="20201112 12:42:44.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.353" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.352" endtime="20201112 12:42:44.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.355" level="INFO">VALUE: [8.750000000000077e-05, 8.790299999999682e-05, 8.786099999999811e-05, 8.768100000000265e-05, 8.763799999999752e-05, 8.786100000000158e-05, 8.752799999999991e-05, 8.81120000000013e-05, 8.786199999999758e-05, 8.775000000000102e-05, 8.795799999999909e-05, 8.76799999999997e-05, 8.808299999999922e-05, 8.758299999999872e-05, 8.769400000000274e-05, 8.795799999999909e-05, 8.780499999999983e-05, 8.78059999999993e-05, 8.762499999999743e-05, 8.784699999999854e-05, 8.770900000000179e-05, 8.79999999999978e-05, 8.779199999999973e-05, 8.763900000000047e-05, 8.813900000000097e-05, 8.755599999999905e-05, 8.790200000000081e-05, 8.759700000000176e-05, 8.763900000000047e-05, 8.76799999999997e-05, 8.775000000000102e-05, 8.770799999999884e-05, 8.786100000000158e-05, 8.758300000000219e-05, 8.801400000000084e-05, 8.793099999999943e-05, 8.806899999999965e-05, 8.809700000000226e-05, 8.802800000000041e-05, 8.777800000000016e-05, 8.786099999999811e-05, 8.770900000000179e-05, 8.762499999999743e-05, 8.800000000000127e-05, 8.759799999999776e-05, 8.752799999999991e-05, 8.805500000000008e-05, 8.788900000000072e-05, 8.754100000000001e-05, 8.775000000000102e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.354" endtime="20201112 12:42:44.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.349" endtime="20201112 12:42:44.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.359" endtime="20201112 12:42:44.360"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.362" endtime="20201112 12:42:44.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.361" endtime="20201112 12:42:44.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.357" endtime="20201112 12:42:44.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.991" endtime="20201112 12:42:44.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.990" endtime="20201112 12:42:44.383"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.391" endtime="20201112 12:42:44.410"></status>
</kw>
<msg timestamp="20201112 12:42:44.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.390" endtime="20201112 12:42:44.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.411" endtime="20201112 12:42:44.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.413" endtime="20201112 12:42:44.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.387" endtime="20201112 12:42:44.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.385" endtime="20201112 12:42:44.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.423" endtime="20201112 12:42:44.709"></status>
</kw>
<msg timestamp="20201112 12:42:44.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021692264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.422" endtime="20201112 12:42:44.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021692264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.713" endtime="20201112 12:42:44.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.721" endtime="20201112 12:42:44.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.419" endtime="20201112 12:42:44.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.418" endtime="20201112 12:42:44.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.728" level="INFO">${RESULT} = [{'time': 0.021692264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861099999999886e-05, 'source_diff': 8.861099999999886e-05}, {'time': 0.021786056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.725" endtime="20201112 12:42:44.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.741" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:44.729" endtime="20201112 12:42:44.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.746" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.745" endtime="20201112 12:42:44.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.748" level="INFO">VALUE: [8.861099999999886e-05, 8.8945e-05, 8.888800000000224e-05, 8.888900000000172e-05, 8.906900000000065e-05, 8.887500000000215e-05, 8.883299999999997e-05, 8.856900000000015e-05, 8.902799999999794e-05, 8.86670000000006e-05, 8.886100000000258e-05, 8.895800000000009e-05, 8.893100000000043e-05, 8.907000000000012e-05, 8.900000000000227e-05, 8.904200000000098e-05, 8.86670000000006e-05, 8.870899999999932e-05, 8.852800000000091e-05, 8.855600000000005e-05, 8.891599999999791e-05, 8.877699999999822e-05, 8.890200000000181e-05, 8.897199999999966e-05, 8.861099999999886e-05, 8.897199999999966e-05, 8.89860000000027e-05, 8.862499999999843e-05, 8.861099999999886e-05, 8.869400000000027e-05, 8.86250000000019e-05, 8.872199999999941e-05, 8.855600000000005e-05, 8.888899999999825e-05, 8.900000000000227e-05, 8.908399999999969e-05, 8.888899999999825e-05, 8.859699999999929e-05, 8.902800000000141e-05, 8.886100000000258e-05, 8.888799999999877e-05, 8.912499999999893e-05, 8.89999999999988e-05, 8.890300000000129e-05, 8.891699999999739e-05, 8.897199999999966e-05, 8.891699999999739e-05, 8.912499999999893e-05, 8.874999999999855e-05, 8.880599999999683e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.747" endtime="20201112 12:42:44.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.742" endtime="20201112 12:42:44.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.751" endtime="20201112 12:42:44.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.755" endtime="20201112 12:42:44.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.753" endtime="20201112 12:42:44.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.750" endtime="20201112 12:42:44.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.384" endtime="20201112 12:42:44.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.383" endtime="20201112 12:42:44.776"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.784" endtime="20201112 12:42:44.803"></status>
</kw>
<msg timestamp="20201112 12:42:44.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.783" endtime="20201112 12:42:44.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.804" endtime="20201112 12:42:44.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.807" endtime="20201112 12:42:44.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.780" endtime="20201112 12:42:44.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.778" endtime="20201112 12:42:44.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.817" endtime="20201112 12:42:45.102"></status>
</kw>
<msg timestamp="20201112 12:42:45.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02161925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:44.815" endtime="20201112 12:42:45.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02161925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021709167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:45.106" endtime="20201112 12:42:45.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.115" endtime="20201112 12:42:45.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.813" endtime="20201112 12:42:45.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.811" endtime="20201112 12:42:45.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.121" level="INFO">${RESULT} = [{'time': 0.021709167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.991700000000186e-05, 'source_diff': 8.991700000000186e-05}, {'time': 0.021803958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.118" endtime="20201112 12:42:45.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.135" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.122" endtime="20201112 12:42:45.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.140" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.139" endtime="20201112 12:42:45.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.142" level="INFO">VALUE: [8.991700000000186e-05, 9.012499999999993e-05, 8.96250000000029e-05, 8.991599999999891e-05, 9.01519999999996e-05, 9.001399999999937e-05, 8.973599999999998e-05, 8.962499999999943e-05, 8.986100000000011e-05, 8.954199999999801e-05, 8.984700000000054e-05, 8.962499999999943e-05, 8.974999999999955e-05, 8.970900000000032e-05, 8.997200000000066e-05, 8.957000000000062e-05, 8.968099999999771e-05, 8.993000000000195e-05, 8.987499999999968e-05, 8.984700000000054e-05, 8.961099999999986e-05, 8.979100000000226e-05, 8.98060000000013e-05, 8.956900000000115e-05, 8.962499999999943e-05, 8.995800000000109e-05, 9.002800000000241e-05, 8.979200000000173e-05, 8.994499999999753e-05, 8.977800000000216e-05, 9.005599999999808e-05, 8.980599999999783e-05, 8.968099999999771e-05, 8.981899999999793e-05, 9.004099999999904e-05, 8.98190000000014e-05, 8.9638999999999e-05, 8.9638999999999e-05, 9.012499999999993e-05, 8.969499999999728e-05, 8.986100000000011e-05, 8.973599999999998e-05, 8.995800000000109e-05, 8.976399999999912e-05, 8.968100000000118e-05, 8.959700000000029e-05, 8.962499999999943e-05, 8.959700000000029e-05, 8.986100000000011e-05, 8.99869999999997e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.141" endtime="20201112 12:42:45.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.136" endtime="20201112 12:42:45.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.146" endtime="20201112 12:42:45.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.149" endtime="20201112 12:42:45.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.148" endtime="20201112 12:42:45.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.144" endtime="20201112 12:42:45.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.777" endtime="20201112 12:42:45.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.776" endtime="20201112 12:42:45.170"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.178" endtime="20201112 12:42:45.197"></status>
</kw>
<msg timestamp="20201112 12:42:45.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.177" endtime="20201112 12:42:45.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.198" endtime="20201112 12:42:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.201" endtime="20201112 12:42:45.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.174" endtime="20201112 12:42:45.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.172" endtime="20201112 12:42:45.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.211" endtime="20201112 12:42:45.496"></status>
</kw>
<msg timestamp="20201112 12:42:45.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.209" endtime="20201112 12:42:45.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.500" endtime="20201112 12:42:45.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.508" endtime="20201112 12:42:45.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.207" endtime="20201112 12:42:45.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.205" endtime="20201112 12:42:45.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.515" level="INFO">${RESULT} = [{'time': 0.021971778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.061100000000086e-05, 'source_diff': 9.061100000000086e-05}, {'time': 0.022066569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.511" endtime="20201112 12:42:45.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.528" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.516" endtime="20201112 12:42:45.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.532" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.531" endtime="20201112 12:42:45.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.535" level="INFO">VALUE: [9.061100000000086e-05, 9.027699999999972e-05, 9.094399999999905e-05, 9.088900000000025e-05, 9.090299999999982e-05, 9.105499999999961e-05, 9.073599999999751e-05, 9.094400000000252e-05, 9.108299999999875e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.054199999999901e-05, 9.065299999999957e-05, 9.093099999999896e-05, 9.072300000000089e-05, 9.092999999999948e-05, 9.0639e-05, 9.111099999999789e-05, 9.06939999999988e-05, 9.10000000000008e-05, 9.069400000000227e-05, 9.051399999999987e-05, 9.094399999999905e-05, 9.091599999999991e-05, 9.076400000000012e-05, 9.101400000000037e-05, 9.097200000000166e-05, 9.072199999999794e-05, 9.080599999999883e-05, 9.061100000000086e-05, 9.093099999999896e-05, 9.080599999999883e-05, 9.079200000000273e-05, 9.0639e-05, 9.063800000000052e-05, 9.080500000000283e-05, 9.088800000000077e-05, 9.070799999999837e-05, 9.072199999999794e-05, 9.066699999999914e-05, 9.061100000000086e-05, 9.054200000000248e-05, 9.065299999999957e-05, 9.112500000000093e-05, 9.098600000000123e-05, 9.070799999999837e-05, 9.098600000000123e-05, 9.090299999999982e-05, 9.099999999999733e-05, 9.109800000000126e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.533" endtime="20201112 12:42:45.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.529" endtime="20201112 12:42:45.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.538" endtime="20201112 12:42:45.539"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.542" endtime="20201112 12:42:45.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.540" endtime="20201112 12:42:45.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.537" endtime="20201112 12:42:45.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.171" endtime="20201112 12:42:45.562"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.170" endtime="20201112 12:42:45.562"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.571" endtime="20201112 12:42:45.590"></status>
</kw>
<msg timestamp="20201112 12:42:45.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.569" endtime="20201112 12:42:45.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.591" endtime="20201112 12:42:45.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.594" endtime="20201112 12:42:45.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.567" endtime="20201112 12:42:45.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.565" endtime="20201112 12:42:45.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.603" endtime="20201112 12:42:45.885"></status>
</kw>
<msg timestamp="20201112 12:42:45.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.602" endtime="20201112 12:42:45.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.889" endtime="20201112 12:42:45.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.897" endtime="20201112 12:42:45.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.599" endtime="20201112 12:42:45.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.598" endtime="20201112 12:42:45.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.903" level="INFO">${RESULT} = [{'time': 0.021638403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.143099999999946e-05, 'source_diff': 9.143099999999946e-05}, {'time': 0.021735194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.900" endtime="20201112 12:42:45.904"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.917" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:45.904" endtime="20201112 12:42:45.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.921" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.920" endtime="20201112 12:42:45.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.923" level="INFO">VALUE: [9.143099999999946e-05, 9.218000000000073e-05, 9.211100000000236e-05, 9.176400000000112e-05, 9.20000000000018e-05, 9.198600000000223e-05, 9.212499999999846e-05, 9.165300000000057e-05, 9.175000000000155e-05, 9.177799999999722e-05, 9.184700000000254e-05, 9.202800000000094e-05, 9.155599999999958e-05, 9.206999999999965e-05, 9.174999999999808e-05, 9.177800000000069e-05, 9.212499999999846e-05, 9.163799999999805e-05, 9.158299999999925e-05, 9.209699999999932e-05, 9.195799999999962e-05, 9.170799999999937e-05, 9.204199999999704e-05, 9.205500000000061e-05, 9.154200000000001e-05, 9.159700000000229e-05, 9.198600000000223e-05, 9.204200000000051e-05, 9.183400000000244e-05, 9.155599999999958e-05, 9.176399999999765e-05, 9.159700000000229e-05, 9.168000000000023e-05, 9.19589999999991e-05, 9.194400000000005e-05, 9.206900000000018e-05, 9.158300000000272e-05, 9.166600000000066e-05, 9.190199999999787e-05, 9.194400000000005e-05, 9.202800000000094e-05, 9.194400000000005e-05, 9.177800000000069e-05, 9.176399999999765e-05, 9.194499999999953e-05, 9.179099999999732e-05, 9.18329999999995e-05, 9.162500000000143e-05, 9.179200000000026e-05, 9.175000000000155e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.922" endtime="20201112 12:42:45.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.918" endtime="20201112 12:42:45.925"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.927" endtime="20201112 12:42:45.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.930" endtime="20201112 12:42:45.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.929" endtime="20201112 12:42:45.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.925" endtime="20201112 12:42:45.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.563" endtime="20201112 12:42:45.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.563" endtime="20201112 12:42:45.951"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.959" endtime="20201112 12:42:45.979"></status>
</kw>
<msg timestamp="20201112 12:42:45.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.958" endtime="20201112 12:42:45.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.980" endtime="20201112 12:42:45.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.982" endtime="20201112 12:42:45.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.955" endtime="20201112 12:42:45.986"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.953" endtime="20201112 12:42:45.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.992" endtime="20201112 12:42:46.278"></status>
</kw>
<msg timestamp="20201112 12:42:46.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.991" endtime="20201112 12:42:46.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021657125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.282" endtime="20201112 12:42:46.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.290" endtime="20201112 12:42:46.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.988" endtime="20201112 12:42:46.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.987" endtime="20201112 12:42:46.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.297" level="INFO">${RESULT} = [{'time': 0.021657125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.274999999999908e-05, 'source_diff': 9.274999999999908e-05}, {'time': 0.021753917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.293" endtime="20201112 12:42:46.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.310" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.298" endtime="20201112 12:42:46.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.314" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.313" endtime="20201112 12:42:46.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.317" level="INFO">VALUE: [9.274999999999908e-05, 9.223600000000248e-05, 9.266600000000166e-05, 9.274999999999908e-05, 9.281900000000093e-05, 9.258300000000025e-05, 9.294400000000105e-05, 9.26940000000008e-05, 9.273599999999951e-05, 9.269399999999733e-05, 9.291700000000139e-05, 9.265300000000157e-05, 9.294400000000105e-05, 9.283399999999997e-05, 9.287499999999921e-05, 9.261099999999939e-05, 9.274999999999908e-05, 9.297299999999967e-05, 9.311099999999989e-05, 9.276399999999865e-05, 9.287499999999921e-05, 9.31390000000025e-05, 9.258300000000025e-05, 9.295800000000062e-05, 9.311099999999989e-05, 9.255500000000111e-05, 9.290299999999835e-05, 9.261099999999939e-05, 9.284700000000007e-05, 9.291699999999792e-05, 9.305600000000108e-05, 9.275000000000255e-05, 9.279200000000126e-05, 9.269500000000028e-05, 9.2639000000002e-05, 9.302799999999847e-05, 9.266700000000114e-05, 9.272299999999942e-05, 9.259799999999929e-05, 9.2639000000002e-05, 9.304099999999857e-05, 9.298599999999976e-05, 9.31529999999986e-05, 9.262500000000243e-05, 9.291600000000191e-05, 9.286099999999964e-05, 9.258300000000025e-05, 9.311099999999989e-05, 9.280600000000083e-05, 9.30139999999989e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.315" endtime="20201112 12:42:46.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.311" endtime="20201112 12:42:46.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.320" endtime="20201112 12:42:46.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.323" endtime="20201112 12:42:46.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.322" endtime="20201112 12:42:46.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.319" endtime="20201112 12:42:46.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.952" endtime="20201112 12:42:46.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.951" endtime="20201112 12:42:46.344"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.353" endtime="20201112 12:42:46.371"></status>
</kw>
<msg timestamp="20201112 12:42:46.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.351" endtime="20201112 12:42:46.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.373" endtime="20201112 12:42:46.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.375" endtime="20201112 12:42:46.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.349" endtime="20201112 12:42:46.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.347" endtime="20201112 12:42:46.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.385" endtime="20201112 12:42:46.671"></status>
</kw>
<msg timestamp="20201112 12:42:46.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021649333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.384" endtime="20201112 12:42:46.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021555431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021649333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.675" endtime="20201112 12:42:46.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.683" endtime="20201112 12:42:46.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.381" endtime="20201112 12:42:46.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.379" endtime="20201112 12:42:46.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.690" level="INFO">${RESULT} = [{'time': 0.021649333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.390199999999987e-05, 'source_diff': 9.390199999999987e-05}, {'time': 0.021748139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.687" endtime="20201112 12:42:46.690"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.704" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:46.691" endtime="20201112 12:42:46.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.709" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.708" endtime="20201112 12:42:46.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.711" level="INFO">VALUE: [9.390199999999987e-05, 9.376399999999965e-05, 9.411100000000089e-05, 9.366700000000214e-05, 9.366699999999867e-05, 9.393099999999849e-05, 9.359700000000082e-05, 9.390299999999935e-05, 9.368100000000171e-05, 9.358399999999725e-05, 9.40139999999999e-05, 9.36529999999991e-05, 9.390199999999987e-05, 9.409700000000132e-05, 9.354099999999907e-05, 9.383299999999803e-05, 9.38330000000015e-05, 9.397199999999772e-05, 9.355600000000158e-05, 9.37079999999979e-05, 9.406999999999818e-05, 9.398600000000076e-05, 9.384700000000107e-05, 9.359700000000082e-05, 9.373699999999999e-05, 9.363899999999953e-05, 9.352799999999897e-05, 9.379099999999932e-05, 9.373600000000051e-05, 9.354099999999907e-05, 9.372199999999747e-05, 9.409699999999785e-05, 9.390299999999935e-05, 9.390300000000282e-05, 9.377800000000269e-05, 9.404200000000251e-05, 9.358299999999778e-05, 9.357000000000115e-05, 9.387500000000021e-05, 9.361100000000039e-05, 9.40139999999999e-05, 9.379199999999879e-05, 9.355599999999811e-05, 9.381900000000193e-05, 9.386200000000011e-05, 9.369399999999833e-05, 9.387500000000021e-05, 9.381899999999846e-05, 9.377699999999975e-05, 9.394400000000205e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.710" endtime="20201112 12:42:46.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.705" endtime="20201112 12:42:46.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.715" endtime="20201112 12:42:46.716"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.718" endtime="20201112 12:42:46.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.717" endtime="20201112 12:42:46.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.713" endtime="20201112 12:42:46.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.345" endtime="20201112 12:42:46.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.345" endtime="20201112 12:42:46.739"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.747" endtime="20201112 12:42:46.765"></status>
</kw>
<msg timestamp="20201112 12:42:46.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.746" endtime="20201112 12:42:46.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.767" endtime="20201112 12:42:46.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.769" endtime="20201112 12:42:46.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.743" endtime="20201112 12:42:46.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.741" endtime="20201112 12:42:46.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.779" endtime="20201112 12:42:47.064"></status>
</kw>
<msg timestamp="20201112 12:42:47.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.778" endtime="20201112 12:42:47.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021551236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021646125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.069" endtime="20201112 12:42:47.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.077" endtime="20201112 12:42:47.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.775" endtime="20201112 12:42:47.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.773" endtime="20201112 12:42:47.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.083" level="INFO">${RESULT} = [{'time': 0.021646125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.488899999999731e-05, 'source_diff': 9.488899999999731e-05}, {'time': 0.021745917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.080" endtime="20201112 12:42:47.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.096" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.084" endtime="20201112 12:42:47.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.101" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.100" endtime="20201112 12:42:47.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.103" level="INFO">VALUE: [9.488899999999731e-05, 9.516700000000017e-05, 9.494499999999906e-05, 9.500000000000133e-05, 9.493100000000296e-05, 9.500000000000133e-05, 9.472200000000194e-05, 9.502800000000047e-05, 9.493000000000001e-05, 9.504100000000057e-05, 9.466699999999967e-05, 9.462500000000096e-05, 9.457000000000215e-05, 9.477800000000022e-05, 9.500000000000133e-05, 9.459699999999835e-05, 9.458400000000172e-05, 9.480599999999936e-05, 9.480599999999936e-05, 9.465200000000062e-05, 9.491699999999992e-05, 9.486199999999764e-05, 9.511100000000189e-05, 9.451399999999693e-05, 9.455499999999964e-05, 9.486099999999817e-05, 9.497199999999872e-05, 9.459700000000182e-05, 9.49859999999983e-05, 9.508300000000275e-05, 9.468099999999924e-05, 9.462500000000096e-05, 9.455599999999911e-05, 9.502800000000047e-05, 9.508399999999875e-05, 9.491699999999992e-05, 9.470899999999838e-05, 9.483400000000197e-05, 9.479199999999979e-05, 9.48330000000025e-05, 9.469399999999933e-05, 9.469399999999933e-05, 9.454100000000007e-05, 9.487500000000121e-05, 9.483299999999903e-05, 9.477800000000022e-05, 9.480599999999936e-05, 9.508299999999928e-05, 9.505599999999961e-05, 9.476400000000065e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.102" endtime="20201112 12:42:47.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.097" endtime="20201112 12:42:47.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.107" endtime="20201112 12:42:47.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.110" endtime="20201112 12:42:47.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.109" endtime="20201112 12:42:47.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.105" endtime="20201112 12:42:47.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.740" endtime="20201112 12:42:47.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.739" endtime="20201112 12:42:47.131"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.139" endtime="20201112 12:42:47.159"></status>
</kw>
<msg timestamp="20201112 12:42:47.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.138" endtime="20201112 12:42:47.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.160" endtime="20201112 12:42:47.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.162" endtime="20201112 12:42:47.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.135" endtime="20201112 12:42:47.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.133" endtime="20201112 12:42:47.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.172" endtime="20201112 12:42:47.459"></status>
</kw>
<msg timestamp="20201112 12:42:47.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021544403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021640431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.171" endtime="20201112 12:42:47.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021544403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021640431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.463" endtime="20201112 12:42:47.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.471" endtime="20201112 12:42:47.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.168" endtime="20201112 12:42:47.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.167" endtime="20201112 12:42:47.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.477" level="INFO">${RESULT} = [{'time': 0.021640431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.602800000000147e-05, 'source_diff': 9.602800000000147e-05}, {'time': 0.021740222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.474" endtime="20201112 12:42:47.478"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.491" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.478" endtime="20201112 12:42:47.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.495" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.494" endtime="20201112 12:42:47.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.497" level="INFO">VALUE: [9.602800000000147e-05, 9.530500000000039e-05, 9.580499999999742e-05, 9.577799999999775e-05, 9.593100000000049e-05, 9.566700000000067e-05, 9.559699999999935e-05, 9.600000000000233e-05, 9.56530000000011e-05, 9.598699999999877e-05, 9.601399999999843e-05, 9.606899999999724e-05, 9.579100000000132e-05, 9.577700000000175e-05, 9.59859999999993e-05, 9.572199999999947e-05, 9.586100000000264e-05, 9.583300000000003e-05, 9.583300000000003e-05, 9.604199999999757e-05, 9.556999999999968e-05, 9.606900000000071e-05, 9.563900000000153e-05, 9.568100000000024e-05, 9.570899999999938e-05, 9.55140000000014e-05, 9.604200000000104e-05, 9.588899999999831e-05, 9.563900000000153e-05, 9.579200000000079e-05, 9.568100000000024e-05, 9.611099999999942e-05, 9.59019999999984e-05, 9.609700000000332e-05, 9.563900000000153e-05, 9.586099999999917e-05, 9.579200000000079e-05, 9.586099999999917e-05, 9.608300000000028e-05, 9.56530000000011e-05, 9.576399999999818e-05, 9.569499999999981e-05, 9.583400000000297e-05, 9.594500000000006e-05, 9.58339999999995e-05, 9.580499999999742e-05, 9.584800000000254e-05, 9.611100000000289e-05, 9.599999999999886e-05, 9.574999999999861e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.496" endtime="20201112 12:42:47.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.491" endtime="20201112 12:42:47.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.501" endtime="20201112 12:42:47.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.504" endtime="20201112 12:42:47.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.503" endtime="20201112 12:42:47.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.499" endtime="20201112 12:42:47.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.132" endtime="20201112 12:42:47.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.131" endtime="20201112 12:42:47.525"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.533" endtime="20201112 12:42:47.552"></status>
</kw>
<msg timestamp="20201112 12:42:47.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.532" endtime="20201112 12:42:47.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.554" endtime="20201112 12:42:47.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.556" endtime="20201112 12:42:47.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.530" endtime="20201112 12:42:47.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.528" endtime="20201112 12:42:47.560"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.566" endtime="20201112 12:42:47.852"></status>
</kw>
<msg timestamp="20201112 12:42:47.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.564" endtime="20201112 12:42:47.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021723986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.856" endtime="20201112 12:42:47.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.864" endtime="20201112 12:42:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.562" endtime="20201112 12:42:47.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.560" endtime="20201112 12:42:47.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.871" level="INFO">${RESULT} = [{'time': 0.021820597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.661099999999992e-05, 'source_diff': 9.661099999999992e-05}, {'time': 0.021922403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.867" endtime="20201112 12:42:47.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.884" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:47.872" endtime="20201112 12:42:47.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.888" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.887" endtime="20201112 12:42:47.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.891" level="INFO">VALUE: [9.661099999999992e-05, 9.680600000000136e-05, 9.67920000000018e-05, 9.677800000000222e-05, 9.676399999999918e-05, 9.711199999999989e-05, 9.686199999999964e-05, 9.661200000000286e-05, 9.681900000000146e-05, 9.691599999999898e-05, 9.663899999999906e-05, 9.702699999999953e-05, 9.661099999999992e-05, 9.705499999999867e-05, 9.694399999999812e-05, 9.694399999999812e-05, 9.665299999999863e-05, 9.69860000000003e-05, 9.68470000000006e-05, 9.690299999999888e-05, 9.7027999999999e-05, 9.672299999999995e-05, 9.677800000000222e-05, 9.662499999999949e-05, 9.687499999999974e-05, 9.674999999999961e-05, 9.669399999999786e-05, 9.695799999999768e-05, 9.669400000000133e-05, 9.656899999999774e-05, 9.712499999999999e-05, 9.645800000000065e-05, 9.686100000000017e-05, 9.655600000000111e-05, 9.7027999999999e-05, 9.704199999999857e-05, 9.701399999999943e-05, 9.657000000000068e-05, 9.708400000000075e-05, 9.672200000000047e-05, 9.694400000000158e-05, 9.657000000000068e-05, 9.661099999999992e-05, 9.690299999999888e-05, 9.681899999999799e-05, 9.706900000000171e-05, 9.697200000000072e-05, 9.692999999999855e-05, 9.7027999999999e-05, 9.674999999999961e-05]</msg>
<status status="PASS" starttime="20201112 12:42:47.889" endtime="20201112 12:42:47.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.885" endtime="20201112 12:42:47.892"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.894" endtime="20201112 12:42:47.896"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.898" endtime="20201112 12:42:47.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.896" endtime="20201112 12:42:47.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.893" endtime="20201112 12:42:47.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.526" endtime="20201112 12:42:47.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.525" endtime="20201112 12:42:47.919"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.927" endtime="20201112 12:42:47.945"></status>
</kw>
<msg timestamp="20201112 12:42:47.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.926" endtime="20201112 12:42:47.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.946" endtime="20201112 12:42:47.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.949" endtime="20201112 12:42:47.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.923" endtime="20201112 12:42:47.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.921" endtime="20201112 12:42:47.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.958" endtime="20201112 12:42:48.243"></status>
</kw>
<msg timestamp="20201112 12:42:48.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:47.957" endtime="20201112 12:42:48.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021539833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:48.247" endtime="20201112 12:42:48.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.255" endtime="20201112 12:42:48.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.954" endtime="20201112 12:42:48.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.953" endtime="20201112 12:42:48.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.262" level="INFO">${RESULT} = [{'time': 0.0216375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.76669999999992e-05, 'source_diff': 9.76669999999992e-05}, {'time': 0.021740306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:42:48.259" endtime="20201112 12:42:48.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.276" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.263" endtime="20201112 12:42:48.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.281" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.280" endtime="20201112 12:42:48.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.283" level="INFO">VALUE: [9.76669999999992e-05, 9.779199999999932e-05, 9.8028e-05, 9.79730000000012e-05, 9.79860000000013e-05, 9.780499999999942e-05, 9.809700000000185e-05, 9.786100000000117e-05, 9.777799999999975e-05, 9.811100000000142e-05, 9.805600000000261e-05, 9.795799999999869e-05, 9.800000000000086e-05, 9.805599999999914e-05, 9.79860000000013e-05, 9.770900000000138e-05, 9.777799999999975e-05, 9.781999999999846e-05, 9.794500000000206e-05, 9.802699999999706e-05, 9.761200000000039e-05, 9.758300000000178e-05, 9.770799999999843e-05, 9.781899999999899e-05, 9.809700000000185e-05, 9.80410000000001e-05, 9.783299999999856e-05, 9.775000000000061e-05, 9.765299999999963e-05, 9.805599999999914e-05, 9.792999999999955e-05, 9.795799999999869e-05, 9.772300000000095e-05, 9.786100000000117e-05, 9.772200000000147e-05, 9.776400000000018e-05, 9.779099999999985e-05, 9.808299999999881e-05, 9.77080000000019e-05, 9.761100000000092e-05, 9.809699999999838e-05, 9.79860000000013e-05, 9.76799999999993e-05, 9.8028e-05, 9.75279999999995e-05, 9.758299999999831e-05, 9.765299999999963e-05, 9.800000000000086e-05, 9.813800000000109e-05, 9.762500000000049e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.282" endtime="20201112 12:42:48.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.277" endtime="20201112 12:42:48.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.286" endtime="20201112 12:42:48.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.290" endtime="20201112 12:42:48.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.288" endtime="20201112 12:42:48.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.285" endtime="20201112 12:42:48.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.919" endtime="20201112 12:42:48.310"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.919" endtime="20201112 12:42:48.311"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.319" endtime="20201112 12:42:48.338"></status>
</kw>
<msg timestamp="20201112 12:42:48.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.318" endtime="20201112 12:42:48.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.340" endtime="20201112 12:42:48.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.342" endtime="20201112 12:42:48.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.315" endtime="20201112 12:42:48.345"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.313" endtime="20201112 12:42:48.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.352" endtime="20201112 12:42:48.637"></status>
</kw>
<msg timestamp="20201112 12:42:48.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.350" endtime="20201112 12:42:48.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021974958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022073792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.641" endtime="20201112 12:42:48.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.649" endtime="20201112 12:42:48.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.348" endtime="20201112 12:42:48.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.346" endtime="20201112 12:42:48.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.656" level="INFO">${RESULT} = [{'time': 0.022073792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.883399999999903e-05, 'source_diff': 9.883399999999903e-05}, {'time': 0.022177583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.653" endtime="20201112 12:42:48.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.669" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:48.657" endtime="20201112 12:42:48.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.674" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.673" endtime="20201112 12:42:48.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.677" level="INFO">VALUE: [9.883399999999903e-05, 9.877700000000128e-05, 9.873599999999857e-05, 9.883299999999956e-05, 9.883399999999903e-05, 9.895799999999969e-05, 9.854200000000007e-05, 9.906999999999971e-05, 9.881999999999946e-05, 9.888900000000131e-05, 9.888899999999784e-05, 9.879200000000032e-05, 9.856999999999921e-05, 9.906900000000024e-05, 9.905600000000014e-05, 9.912499999999852e-05, 9.880499999999695e-05, 9.880500000000042e-05, 9.9028000000001e-05, 9.880500000000042e-05, 9.894400000000012e-05, 9.88609999999987e-05, 9.900000000000186e-05, 9.886199999999817e-05, 9.890299999999741e-05, 9.86670000000002e-05, 9.865300000000063e-05, 9.888800000000184e-05, 9.872300000000195e-05, 9.894499999999959e-05, 9.862500000000149e-05, 9.859699999999888e-05, 9.904099999999763e-05, 9.863899999999759e-05, 9.866600000000073e-05, 9.858300000000278e-05, 9.85410000000006e-05, 9.894400000000012e-05, 9.883300000000303e-05, 9.854200000000007e-05, 9.898700000000177e-05, 9.85280000000005e-05, 9.895899999999916e-05, 9.908399999999928e-05, 9.877800000000075e-05, 9.887499999999827e-05, 9.909800000000232e-05, 9.895799999999969e-05, 9.85410000000006e-05, 9.880500000000042e-05]</msg>
<status status="PASS" starttime="20201112 12:42:48.675" endtime="20201112 12:42:48.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.670" endtime="20201112 12:42:48.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.685" endtime="20201112 12:42:48.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.688" endtime="20201112 12:42:48.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.687" endtime="20201112 12:42:48.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.683" endtime="20201112 12:42:48.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.311" endtime="20201112 12:42:48.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.311" endtime="20201112 12:42:48.709"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.718" endtime="20201112 12:42:48.737"></status>
</kw>
<msg timestamp="20201112 12:42:48.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.716" endtime="20201112 12:42:48.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.738" endtime="20201112 12:42:48.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.741" endtime="20201112 12:42:48.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.714" endtime="20201112 12:42:48.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.712" endtime="20201112 12:42:48.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.751" endtime="20201112 12:42:49.036"></status>
</kw>
<msg timestamp="20201112 12:42:49.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.749" endtime="20201112 12:42:49.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.040" endtime="20201112 12:42:49.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.048" endtime="20201112 12:42:49.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.747" endtime="20201112 12:42:49.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.745" endtime="20201112 12:42:49.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.054" level="INFO">${RESULT} = [{'time': 0.021733306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010009799999999985, 'source_diff': 0.00010009799999999985}, {'time': 0.021838097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:49.051" endtime="20201112 12:42:49.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.068" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.055" endtime="20201112 12:42:49.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.072" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.071" endtime="20201112 12:42:49.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.075" level="INFO">VALUE: [0.00010009799999999985, 0.0001001800000000018, 9.998599999999983e-05, 9.956900000000074e-05, 9.987499999999927e-05, 9.963899999999859e-05, 9.99999999999994e-05, 0.00010005599999999767, 9.990299999999841e-05, 9.96809999999973e-05, 9.974999999999914e-05, 0.00010000000000000286, 0.00010008400000000028, 9.958300000000031e-05, 9.994400000000112e-05, 9.9722e-05, 0.00010006900000000124, 9.981900000000099e-05, 9.9722e-05, 9.974999999999914e-05, 9.973599999999957e-05, 0.00010011099999999995, 9.975000000000261e-05, 0.00010009700000000038, 9.9722e-05, 9.98609999999997e-05, 0.00010001400000000243, 9.98060000000009e-05, 0.00010009799999999985, 0.00010002799999999853, 9.968100000000077e-05, 0.00010006900000000124, 9.965199999999869e-05, 0.00010008299999999734, 9.970799999999697e-05, 0.00010006900000000124, 9.973600000000304e-05, 9.988900000000231e-05, 9.98060000000009e-05, 9.977800000000175e-05, 9.995800000000069e-05, 9.973600000000304e-05, 9.958399999999978e-05, 9.995900000000016e-05, 9.976399999999871e-05, 9.958300000000031e-05, 9.979199999999785e-05, 0.00010008299999999734, 9.987500000000274e-05, 9.977700000000228e-05]</msg>
<status status="PASS" starttime="20201112 12:42:49.073" endtime="20201112 12:42:49.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.069" endtime="20201112 12:42:49.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.078" endtime="20201112 12:42:49.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.081" endtime="20201112 12:42:49.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.080" endtime="20201112 12:42:49.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.076" endtime="20201112 12:42:49.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.710" endtime="20201112 12:42:49.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.710" endtime="20201112 12:42:49.102"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.110" endtime="20201112 12:42:49.129"></status>
</kw>
<msg timestamp="20201112 12:42:49.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.109" endtime="20201112 12:42:49.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.131" endtime="20201112 12:42:49.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.133" endtime="20201112 12:42:49.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.107" endtime="20201112 12:42:49.136"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.104" endtime="20201112 12:42:49.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.143" endtime="20201112 12:42:49.428"></status>
</kw>
<msg timestamp="20201112 12:42:49.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021457722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.141" endtime="20201112 12:42:49.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021457722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021558139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.432" endtime="20201112 12:42:49.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.440" endtime="20201112 12:42:49.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.139" endtime="20201112 12:42:49.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.137" endtime="20201112 12:42:49.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.447" level="INFO">${RESULT} = [{'time': 0.021558139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010041700000000195, 'source_diff': 0.00010041700000000195}, {'time': 0.021662931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:49.443" endtime="20201112 12:42:49.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.460" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.448" endtime="20201112 12:42:49.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.464" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.463" endtime="20201112 12:42:49.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.466" level="INFO">VALUE: [0.00010041700000000195, 0.00010032000000000096, 0.00010075000000000014, 0.00010106899999999877, 0.00010083299999999809, 0.00010076399999999971, 0.00010084699999999766, 0.00010084700000000113, 0.00010084700000000113, 0.00010083299999999809, 0.00010079199999999885, 0.00010098599999999736, 0.00010079200000000232, 0.00010061100000000045, 0.0001004999999999999, 0.00010075000000000014, 0.00010061100000000045, 0.00010088899999999984, 0.00010095800000000169, 0.00010062500000000002, 0.00010058300000000131, 0.0001010419999999991, 0.00010093099999999855, 0.00010083299999999809, 0.00010072199999999754, 0.00010059700000000088, 0.00010062500000000002, 0.00010097200000000126, 0.00010076399999999971, 0.00010080599999999842, 0.0001008610000000007, 0.00010105599999999867, 0.00010061100000000045, 0.00010099999999999693, 0.00010072199999999754, 0.00010104099999999963, 0.0001009159999999995, 0.00010101399999999996, 0.00010062500000000002, 0.0001008060000000019, 0.00010087500000000027, 0.00010075000000000014, 0.00010112500000000052, 0.00010094499999999812, 0.0001010419999999991, 0.00010075000000000014, 0.00010095900000000116, 0.00010093100000000202, 0.00010072300000000048, 0.00010059800000000035]</msg>
<status status="PASS" starttime="20201112 12:42:49.465" endtime="20201112 12:42:49.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.460" endtime="20201112 12:42:49.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.470" endtime="20201112 12:42:49.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.473" endtime="20201112 12:42:49.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.472" endtime="20201112 12:42:49.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.468" endtime="20201112 12:42:49.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.103" endtime="20201112 12:42:49.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.102" endtime="20201112 12:42:49.494"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.502" endtime="20201112 12:42:49.521"></status>
</kw>
<msg timestamp="20201112 12:42:49.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.501" endtime="20201112 12:42:49.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.522" endtime="20201112 12:42:49.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.525" endtime="20201112 12:42:49.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.498" endtime="20201112 12:42:49.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.496" endtime="20201112 12:42:49.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.534" endtime="20201112 12:42:49.820"></status>
</kw>
<msg timestamp="20201112 12:42:49.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021520972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.533" endtime="20201112 12:42:49.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021520972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.824" endtime="20201112 12:42:49.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.832" endtime="20201112 12:42:49.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.530" endtime="20201112 12:42:49.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.529" endtime="20201112 12:42:49.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.838" level="INFO">${RESULT} = [{'time': 0.021622597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010162500000000102, 'source_diff': 0.00010162500000000102}, {'time': 0.021729319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:49.835" endtime="20201112 12:42:49.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.852" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:49.839" endtime="20201112 12:42:49.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.857" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.856" endtime="20201112 12:42:49.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.859" level="INFO">VALUE: [0.00010162500000000102, 0.00010213800000000162, 0.00010183299999999909, 0.00010172199999999854, 0.00010159699999999841, 0.00010184699999999866, 0.00010194400000000312, 0.00010195799999999922, 0.00010163899999999712, 0.00010177800000000028, 0.00010163900000000059, 0.00010166699999999973, 0.00010165300000000016, 0.00010166699999999973, 0.00010163900000000059, 0.00010194399999999965, 0.00010175000000000115, 0.00010179199999999985, 0.00010194399999999965, 0.00010181899999999952, 0.00010190300000000041, 0.00010193099999999955, 0.00010198600000000183, 0.00010161099999999798, 0.00010159700000000188, 0.00010184699999999866, 0.00010162500000000102, 0.00010152800000000003, 0.00010187500000000127, 0.00010190300000000041, 0.00010186200000000117, 0.00010179100000000038, 0.00010183300000000256, 0.00010156899999999927, 0.00010156900000000274, 0.0001020420000000001, 0.00010184699999999866, 0.00010181899999999952, 0.00010195800000000269, 0.00010212500000000152, 0.00010193099999999955, 0.00010161099999999798, 0.00010170900000000191, 0.00010161099999999798, 0.00010213900000000109, 0.00010165300000000016, 0.00010163900000000059, 0.00010197299999999826, 0.00010161100000000145, 0.00010156899999999927]</msg>
<status status="PASS" starttime="20201112 12:42:49.858" endtime="20201112 12:42:49.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.853" endtime="20201112 12:42:49.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.862" endtime="20201112 12:42:49.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.866" endtime="20201112 12:42:49.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.864" endtime="20201112 12:42:49.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.861" endtime="20201112 12:42:49.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.495" endtime="20201112 12:42:49.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.494" endtime="20201112 12:42:49.887"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.895" endtime="20201112 12:42:49.914"></status>
</kw>
<msg timestamp="20201112 12:42:49.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.893" endtime="20201112 12:42:49.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.916" endtime="20201112 12:42:49.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.918" endtime="20201112 12:42:49.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.891" endtime="20201112 12:42:49.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.889" endtime="20201112 12:42:49.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.928" endtime="20201112 12:42:50.213"></status>
</kw>
<msg timestamp="20201112 12:42:50.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.927" endtime="20201112 12:42:50.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021558861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.217" endtime="20201112 12:42:50.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.225" endtime="20201112 12:42:50.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.924" endtime="20201112 12:42:50.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.922" endtime="20201112 12:42:50.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.231" level="INFO">${RESULT} = [{'time': 0.021662194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010333300000000059, 'source_diff': 0.00010333300000000059}, {'time': 0.021769972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:50.228" endtime="20201112 12:42:50.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.244" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.232" endtime="20201112 12:42:50.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.249" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.248" endtime="20201112 12:42:50.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.251" level="INFO">VALUE: [0.00010333300000000059, 0.00010283300000000009, 0.00010294400000000065, 0.00010280600000000042, 0.00010295800000000022, 0.00010283300000000009, 0.0001025420000000006, 0.00010280600000000042, 0.0001027359999999991, 0.00010274999999999868, 0.00010262500000000202, 0.00010265300000000116, 0.00010294500000000012, 0.00010281900000000052, 0.00010272199999999954, 0.00010277800000000128, 0.00010259699999999941, 0.00010295800000000022, 0.00010263899999999812, 0.00010283300000000009, 0.00010308300000000034, 0.0001026810000000003, 0.00010282, 0.00010299999999999893, 0.00010283400000000303, 0.00010265299999999769, 0.00010255600000000017, 0.00010265199999999822, 0.00010299999999999893, 0.00010293100000000055, 0.00010306900000000077, 0.0001028749999999988, 0.00010298599999999936, 0.00010277799999999782, 0.00010302800000000154, 0.00010291700000000098, 0.00010302799999999807, 0.00010308300000000034, 0.00010298600000000283, 0.00010307000000000024, 0.0001027359999999991, 0.00010274999999999868, 0.00010290300000000141, 0.00010293100000000055, 0.00010265200000000169, 0.00010263799999999865, 0.00010302800000000154, 0.0001029299999999976, 0.00010293000000000108, 0.00010280500000000095]</msg>
<status status="PASS" starttime="20201112 12:42:50.250" endtime="20201112 12:42:50.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.245" endtime="20201112 12:42:50.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.255" endtime="20201112 12:42:50.256"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.258" endtime="20201112 12:42:50.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.257" endtime="20201112 12:42:50.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.253" endtime="20201112 12:42:50.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.887" endtime="20201112 12:42:50.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.887" endtime="20201112 12:42:50.279"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.287" endtime="20201112 12:42:50.306"></status>
</kw>
<msg timestamp="20201112 12:42:50.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.286" endtime="20201112 12:42:50.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.308" endtime="20201112 12:42:50.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.310" endtime="20201112 12:42:50.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.283" endtime="20201112 12:42:50.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.281" endtime="20201112 12:42:50.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.320" endtime="20201112 12:42:50.606"></status>
</kw>
<msg timestamp="20201112 12:42:50.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.318" endtime="20201112 12:42:50.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021847625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.610" endtime="20201112 12:42:50.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.618" endtime="20201112 12:42:50.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.316" endtime="20201112 12:42:50.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.314" endtime="20201112 12:42:50.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.624" level="INFO">${RESULT} = [{'time': 0.021951431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010380600000000142, 'source_diff': 0.00010380600000000142}, {'time': 0.022060264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:50.621" endtime="20201112 12:42:50.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.637" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:50.625" endtime="20201112 12:42:50.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.641" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.640" endtime="20201112 12:42:50.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.644" level="INFO">VALUE: [0.00010380600000000142, 0.00010397200000000079, 0.00010391700000000198, 0.00010408300000000134, 0.00010409700000000091, 0.00010407000000000124, 0.0001038749999999998, 0.00010365299999999869, 0.00010374999999999968, 0.00010372300000000001, 0.00010379199999999839, 0.00010395799999999775, 0.00010390199999999947, 0.00010359700000000041, 0.00010380500000000195, 0.00010354100000000213, 0.00010377800000000229, 0.00010395800000000122, 0.00010395900000000069, 0.00010399999999999993, 0.00010366700000000173, 0.00010395799999999775, 0.00010380500000000195, 0.00010365299999999869, 0.00010380599999999796, 0.0001037360000000001, 0.00010373699999999958, 0.00010386100000000023, 0.00010359700000000041, 0.00010372200000000054, 0.0001038749999999998, 0.00010402800000000254, 0.0001040420000000021, 0.0001036810000000013, 0.00010366700000000173, 0.00010381899999999805, 0.00010398699999999983, 0.00010372200000000054, 0.00010406999999999778, 0.00010380599999999796, 0.00010383400000000056, 0.00010354099999999866, 0.00010388899999999937, 0.00010413899999999962, 0.00010384700000000066, 0.00010395800000000122, 0.00010356900000000127, 0.00010361099999999998, 0.00010412500000000005, 0.00010372199999999707]</msg>
<status status="PASS" starttime="20201112 12:42:50.642" endtime="20201112 12:42:50.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.638" endtime="20201112 12:42:50.645"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.647" endtime="20201112 12:42:50.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.651" endtime="20201112 12:42:50.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.649" endtime="20201112 12:42:50.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.646" endtime="20201112 12:42:50.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.280" endtime="20201112 12:42:50.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.279" endtime="20201112 12:42:50.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.275" endtime="20201112 12:42:50.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.676" endtime="20201112 12:42:50.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.674" endtime="20201112 12:42:50.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.673" endtime="20201112 12:42:50.696"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:11.206" endtime="20201112 12:42:50.697" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.704" endtime="20201112 12:42:50.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.703" endtime="20201112 12:42:50.725"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.738" endtime="20201112 12:42:50.752"></status>
</kw>
<msg timestamp="20201112 12:42:50.753" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.737" endtime="20201112 12:42:50.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.755" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.754" endtime="20201112 12:42:50.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.758" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:50.756" endtime="20201112 12:42:50.758"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:50.734" endtime="20201112 12:42:50.759"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:50.732" endtime="20201112 12:42:50.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.731" endtime="20201112 12:42:50.760"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:50.764" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:50.763" endtime="20201112 12:42:50.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.761" endtime="20201112 12:42:50.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.730" endtime="20201112 12:42:50.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.728" endtime="20201112 12:42:50.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.765" endtime="20201112 12:42:50.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.727" endtime="20201112 12:42:50.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.725" endtime="20201112 12:42:50.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.702" endtime="20201112 12:42:50.768"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.778" endtime="20201112 12:42:50.792"></status>
</kw>
<msg timestamp="20201112 12:42:50.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.776" endtime="20201112 12:42:50.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.794" endtime="20201112 12:42:50.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.796" endtime="20201112 12:42:50.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.774" endtime="20201112 12:42:50.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.772" endtime="20201112 12:42:50.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.806" endtime="20201112 12:42:51.095"></status>
</kw>
<msg timestamp="20201112 12:42:51.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066000861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066004972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.803" endtime="20201112 12:42:51.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066000861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.066004972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.099" endtime="20201112 12:42:51.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.108" endtime="20201112 12:42:51.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.801" endtime="20201112 12:42:51.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.799" endtime="20201112 12:42:51.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.114" level="INFO">${RESULT} = [{'time': 0.066004972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.066010583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.111" endtime="20201112 12:42:51.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.115" endtime="20201112 12:42:51.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.132" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.131" endtime="20201112 12:42:51.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.134" level="INFO">VALUE: [4.111000000001086e-06, 3.7499999999968114e-06, 3.3480000000002397e-06, 3.6250000000070948e-06, 3.611000000000586e-06, 3.6250000000070948e-06, 3.6250000000070948e-06, 3.624999999993217e-06, 3.596999999994077e-06, 3.611000000000586e-06, 3.6389999999997258e-06, 4.180999999991997e-06, 3.4029999999990457e-06, 3.611000000000586e-06, 3.6120000000000596e-06, 3.26400000000282e-06, 3.611000000000586e-06, 3.6120000000000596e-06, 4.1810000000058745e-06, 3.347000000000766e-06, 3.624999999993217e-06, 3.2499999999963114e-06, 3.596999999994077e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.2499999999963114e-06, 3.624999999993217e-06, 3.611000000000586e-06, 3.26400000000282e-06, 3.611000000000586e-06, 3.596999999994077e-06, 4.1810000000058745e-06, 3.347000000000766e-06, 3.6389999999997258e-06, 3.624999999993217e-06, 3.6250000000070948e-06, 3.2629999999894688e-06, 3.611000000000586e-06, 3.611000000000586e-06, 3.624999999993217e-06, 4.139000000000226e-06, 3.888999999993037e-06, 3.5550000000023063e-06, 3.361000000007275e-06, 3.624999999993217e-06, 3.6250000000070948e-06, 3.6250000000070948e-06, 3.2630000000033466e-06, 3.652999999992357e-06, 3.569000000008815e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.133" endtime="20201112 12:42:51.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.128" endtime="20201112 12:42:51.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.137" endtime="20201112 12:42:51.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.141" endtime="20201112 12:42:51.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.139" endtime="20201112 12:42:51.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.136" endtime="20201112 12:42:51.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.770" endtime="20201112 12:42:51.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.769" endtime="20201112 12:42:51.162"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.170" endtime="20201112 12:42:51.185"></status>
</kw>
<msg timestamp="20201112 12:42:51.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.169" endtime="20201112 12:42:51.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.186" endtime="20201112 12:42:51.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.188" endtime="20201112 12:42:51.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.166" endtime="20201112 12:42:51.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.164" endtime="20201112 12:42:51.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.197" endtime="20201112 12:42:51.486"></status>
</kw>
<msg timestamp="20201112 12:42:51.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.196" endtime="20201112 12:42:51.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022517917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022522903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.490" endtime="20201112 12:42:51.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.498" endtime="20201112 12:42:51.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.193" endtime="20201112 12:42:51.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.192" endtime="20201112 12:42:51.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.505" level="INFO">${RESULT} = [{'time': 0.022522903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.986000000001961e-06, 'source_diff': 4.986000000001961e-06}, {'time': 0.022529569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:51.501" endtime="20201112 12:42:51.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.518" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.506" endtime="20201112 12:42:51.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.522" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.521" endtime="20201112 12:42:51.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.524" level="INFO">VALUE: [4.986000000001961e-06, 4.777000000000947e-06, 4.347000000001766e-06, 4.58400000000192e-06, 4.860999999998367e-06, 4.347000000001766e-06, 4.5839999999984504e-06, 4.34800000000124e-06, 4.346999999998297e-06, 4.346999999998297e-06, 4.5839999999984504e-06, 4.34800000000124e-06, 4.568999999999407e-06, 4.8199999999991305e-06, 4.596999999998547e-06, 4.5839999999984504e-06, 4.3339999999982e-06, 4.805000000000087e-06, 4.57000000000235e-06, 4.332999999998727e-06, 4.583000000002446e-06, 4.818999999999657e-06, 4.361000000001336e-06, 4.805000000000087e-06, 4.597000000002016e-06, 4.818999999999657e-06, 4.36200000000081e-06, 4.3199999999986305e-06, 4.583000000002446e-06, 4.346999999998297e-06, 4.5839999999984504e-06, 4.361000000001336e-06, 4.361000000001336e-06, 4.582999999998977e-06, 4.818999999999657e-06, 4.805000000000087e-06, 5.0699999999993806e-06, 4.541999999999741e-06, 4.346999999998297e-06, 4.5699999999988805e-06, 4.34800000000124e-06, 4.8200000000026e-06, 4.346999999998297e-06, 4.347000000001766e-06, 4.5699999999988805e-06, 4.818999999999657e-06, 4.818999999999657e-06, 4.555999999999311e-06, 4.332999999998727e-06, 4.818999999999657e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.523" endtime="20201112 12:42:51.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.518" endtime="20201112 12:42:51.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.527" endtime="20201112 12:42:51.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.531" endtime="20201112 12:42:51.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.530" endtime="20201112 12:42:51.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.526" endtime="20201112 12:42:51.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.163" endtime="20201112 12:42:51.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.162" endtime="20201112 12:42:51.552"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.560" endtime="20201112 12:42:51.574"></status>
</kw>
<msg timestamp="20201112 12:42:51.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.559" endtime="20201112 12:42:51.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.576" endtime="20201112 12:42:51.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.578" endtime="20201112 12:42:51.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.556" endtime="20201112 12:42:51.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.554" endtime="20201112 12:42:51.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.587" endtime="20201112 12:42:51.877"></status>
</kw>
<msg timestamp="20201112 12:42:51.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:51.585" endtime="20201112 12:42:51.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021479361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:51.881" endtime="20201112 12:42:51.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.889" endtime="20201112 12:42:51.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.583" endtime="20201112 12:42:51.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.581" endtime="20201112 12:42:51.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.895" level="INFO">${RESULT} = [{'time': 0.021486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.021493694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:51.892" endtime="20201112 12:42:51.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.908" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:51.896" endtime="20201112 12:42:51.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.913" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.912" endtime="20201112 12:42:51.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.915" level="INFO">VALUE: [6.639000000002726e-06, 5.985999999999492e-06, 5.7639999999983815e-06, 5.749999999998812e-06, 5.749999999998812e-06, 5.541000000001267e-06, 5.985999999999492e-06, 5.457999999999852e-06, 5.527000000001697e-06, 5.514000000001601e-06, 5.750000000002281e-06, 5.7779999999979514e-06, 5.750000000002281e-06, 5.542000000000741e-06, 5.541999999997271e-06, 5.556000000000311e-06, 5.527000000001697e-06, 5.528000000001171e-06, 5.750000000002281e-06, 5.291999999997021e-06, 5.305000000000587e-06, 5.485999999998992e-06, 5.750000000002281e-06, 5.5139999999981315e-06, 5.292000000000491e-06, 5.291000000001017e-06, 5.514000000001601e-06, 5.7779999999979514e-06, 5.514000000001601e-06, 5.764000000001851e-06, 5.292000000000491e-06, 5.790999999998048e-06, 5.276999999997978e-06, 6.014000000002101e-06, 5.512999999998658e-06, 5.945000000000256e-06, 5.749999999998812e-06, 5.542000000000741e-06, 5.778000000001421e-06, 5.7639999999983815e-06, 5.514000000001601e-06, 5.528000000001171e-06, 5.764000000001851e-06, 5.34799999999877e-06, 5.999999999999062e-06, 5.514000000001601e-06, 5.278000000000921e-06, 5.528000000001171e-06, 5.528000000001171e-06, 5.526999999998228e-06]</msg>
<status status="PASS" starttime="20201112 12:42:51.914" endtime="20201112 12:42:51.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.909" endtime="20201112 12:42:51.917"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.919" endtime="20201112 12:42:51.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.922" endtime="20201112 12:42:51.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.921" endtime="20201112 12:42:51.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.917" endtime="20201112 12:42:51.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.553" endtime="20201112 12:42:51.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.552" endtime="20201112 12:42:51.943"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.951" endtime="20201112 12:42:51.966"></status>
</kw>
<msg timestamp="20201112 12:42:51.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.950" endtime="20201112 12:42:51.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.967" endtime="20201112 12:42:51.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.969" endtime="20201112 12:42:51.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.947" endtime="20201112 12:42:51.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.945" endtime="20201112 12:42:51.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.978" endtime="20201112 12:42:52.267"></status>
</kw>
<msg timestamp="20201112 12:42:52.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021491611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.977" endtime="20201112 12:42:52.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021491611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.271" endtime="20201112 12:42:52.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.280" endtime="20201112 12:42:52.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.974" endtime="20201112 12:42:52.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.973" endtime="20201112 12:42:52.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.286" level="INFO">${RESULT} = [{'time': 0.021491611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.375000000000437e-06, 'source_diff': 7.375000000000437e-06}, {'time': 0.021500319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.283" endtime="20201112 12:42:52.286"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.299" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.287" endtime="20201112 12:42:52.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.304" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.303" endtime="20201112 12:42:52.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.306" level="INFO">VALUE: [7.375000000000437e-06, 6.986000000000492e-06, 6.778000000002421e-06, 6.694000000001532e-06, 6.694000000001532e-06, 6.222000000000172e-06, 6.958000000001352e-06, 6.401999999999103e-06, 6.458000000000852e-06, 6.472000000000422e-06, 6.930000000002212e-06, 6.235999999999742e-06, 6.166000000001892e-06, 6.9579999999978825e-06, 6.208000000000602e-06, 6.708000000001102e-06, 6.291000000002017e-06, 6.709000000000576e-06, 6.7779999999989515e-06, 6.458000000000852e-06, 6.709000000000576e-06, 6.693999999998063e-06, 6.249999999999312e-06, 6.722000000000672e-06, 6.485999999999992e-06, 6.972999999996926e-06, 6.249999999999312e-06, 6.4579999999973825e-06, 6.458000000000852e-06, 6.472000000000422e-06, 6.222000000000172e-06, 6.445000000000756e-06, 6.4729999999998955e-06, 6.694000000001532e-06, 6.722000000000672e-06, 6.458000000000852e-06, 6.7079999999976325e-06, 6.2639999999988816e-06, 6.4729999999998955e-06, 6.235999999999742e-06, 6.458000000000852e-06, 6.722000000000672e-06, 6.6669999999983964e-06, 6.695000000001006e-06, 6.471999999996952e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.4579999999973825e-06, 6.444000000001282e-06, 6.485999999999992e-06]</msg>
<status status="PASS" starttime="20201112 12:42:52.305" endtime="20201112 12:42:52.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.300" endtime="20201112 12:42:52.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.310" endtime="20201112 12:42:52.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.313" endtime="20201112 12:42:52.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.311" endtime="20201112 12:42:52.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.308" endtime="20201112 12:42:52.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.944" endtime="20201112 12:42:52.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.943" endtime="20201112 12:42:52.334"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.342" endtime="20201112 12:42:52.356"></status>
</kw>
<msg timestamp="20201112 12:42:52.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.341" endtime="20201112 12:42:52.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.358" endtime="20201112 12:42:52.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.360" endtime="20201112 12:42:52.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.338" endtime="20201112 12:42:52.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.336" endtime="20201112 12:42:52.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.369" endtime="20201112 12:42:52.653"></status>
</kw>
<msg timestamp="20201112 12:42:52.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.367" endtime="20201112 12:42:52.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021663681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021672458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.657" endtime="20201112 12:42:52.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.665" endtime="20201112 12:42:52.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.365" endtime="20201112 12:42:52.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.363" endtime="20201112 12:42:52.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.672" level="INFO">${RESULT} = [{'time': 0.021672458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.776999999998009e-06, 'source_diff': 8.776999999998009e-06}, {'time': 0.021682167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.669" endtime="20201112 12:42:52.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.685" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:52.673" endtime="20201112 12:42:52.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.690" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.689" endtime="20201112 12:42:52.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.692" level="INFO">VALUE: [8.776999999998009e-06, 8.153000000000327e-06, 7.431000000002186e-06, 7.679999999999493e-06, 7.417000000002616e-06, 7.888999999997037e-06, 7.4169999999991465e-06, 7.652999999999827e-06, 7.402999999999577e-06, 7.4169999999991465e-06, 7.624999999997217e-06, 7.667000000002866e-06, 7.652999999999827e-06, 7.4169999999991465e-06, 7.666999999999397e-06, 7.431000000002186e-06, 7.652999999999827e-06, 7.667000000002866e-06, 7.652999999999827e-06, 7.902000000000603e-06, 7.402999999999577e-06, 7.652999999999827e-06, 7.431000000002186e-06, 7.889000000000507e-06, 7.360999999997397e-06, 7.652999999999827e-06, 7.583999999997981e-06, 7.179999999998993e-06, 7.625000000000687e-06, 7.361000000000867e-06, 7.429999999999243e-06, 7.347000000001297e-06, 7.638000000000783e-06, 7.402999999999577e-06, 7.4169999999991465e-06, 7.639000000000257e-06, 7.875000000000937e-06, 7.625000000000687e-06, 7.4169999999991465e-06, 7.348000000000771e-06, 7.639000000000257e-06, 7.180999999998466e-06, 7.652999999999827e-06, 7.4169999999991465e-06, 7.652999999999827e-06, 7.639000000000257e-06, 7.403000000003046e-06, 7.639000000000257e-06, 7.194999999998036e-06, 7.611000000001117e-06]</msg>
<status status="PASS" starttime="20201112 12:42:52.691" endtime="20201112 12:42:52.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.686" endtime="20201112 12:42:52.693"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.695" endtime="20201112 12:42:52.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.699" endtime="20201112 12:42:52.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.697" endtime="20201112 12:42:52.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.694" endtime="20201112 12:42:52.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.335" endtime="20201112 12:42:52.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.334" endtime="20201112 12:42:52.720"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.728" endtime="20201112 12:42:52.742"></status>
</kw>
<msg timestamp="20201112 12:42:52.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.727" endtime="20201112 12:42:52.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.744" endtime="20201112 12:42:52.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.747" endtime="20201112 12:42:52.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.724" endtime="20201112 12:42:52.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.722" endtime="20201112 12:42:52.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.756" endtime="20201112 12:42:53.040"></status>
</kw>
<msg timestamp="20201112 12:42:53.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.754" endtime="20201112 12:42:53.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021781264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.045" endtime="20201112 12:42:53.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.053" endtime="20201112 12:42:53.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.752" endtime="20201112 12:42:53.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.750" endtime="20201112 12:42:53.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.059" level="INFO">${RESULT} = [{'time': 0.021781264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.021791972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:53.056" endtime="20201112 12:42:53.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.117" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.060" endtime="20201112 12:42:53.117"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.121" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.120" endtime="20201112 12:42:53.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.124" level="INFO">VALUE: [9.250000000002312e-06, 9.055000000000868e-06, 8.610999999998648e-06, 8.361000000001867e-06, 8.610999999998648e-06, 8.624999999998217e-06, 8.596999999999078e-06, 8.8340000000027e-06, 8.360999999998397e-06, 8.582999999999508e-06, 8.347000000002297e-06, 8.555999999999842e-06, 8.582999999999508e-06, 8.832999999999758e-06, 8.542000000000272e-06, 8.361000000001867e-06, 8.846999999999328e-06, 8.332999999999258e-06, 8.833999999999231e-06, 8.361000000001867e-06, 8.346999999998828e-06, 8.583999999998981e-06, 8.847000000002797e-06, 8.555000000000368e-06, 8.375000000001437e-06, 8.374999999997967e-06, 8.125000000001187e-06, 8.652000000001353e-06, 8.360999999998397e-06, 8.790999999997579e-06, 8.833000000003227e-06, 8.361000000001867e-06, 8.582999999999508e-06, 8.36200000000134e-06, 8.347000000002297e-06, 8.582999999999508e-06, 8.361000000001867e-06, 8.819999999999661e-06, 8.540999999997329e-06, 8.819999999999661e-06, 8.360999999998397e-06, 8.819000000000188e-06, 8.346999999998828e-06, 8.59800000000202e-06, 8.625000000001687e-06, 8.597000000002547e-06, 8.374999999997967e-06, 8.597000000002547e-06, 8.361000000001867e-06, 8.374999999997967e-06]</msg>
<status status="PASS" starttime="20201112 12:42:53.122" endtime="20201112 12:42:53.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.118" endtime="20201112 12:42:53.125"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.127" endtime="20201112 12:42:53.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.130" endtime="20201112 12:42:53.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.129" endtime="20201112 12:42:53.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.126" endtime="20201112 12:42:53.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.720" endtime="20201112 12:42:53.151"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.720" endtime="20201112 12:42:53.151"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.160" endtime="20201112 12:42:53.175"></status>
</kw>
<msg timestamp="20201112 12:42:53.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.159" endtime="20201112 12:42:53.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.176" endtime="20201112 12:42:53.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.179" endtime="20201112 12:42:53.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.156" endtime="20201112 12:42:53.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.153" endtime="20201112 12:42:53.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.187" endtime="20201112 12:42:53.474"></status>
</kw>
<msg timestamp="20201112 12:42:53.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02228025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:53.186" endtime="20201112 12:42:53.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02228025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022290708, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:53.479" endtime="20201112 12:42:53.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.487" endtime="20201112 12:42:53.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.183" endtime="20201112 12:42:53.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.182" endtime="20201112 12:42:53.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.493" level="INFO">${RESULT} = [{'time': 0.022290708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0457999999997913e-05, 'source_diff': 1.0457999999997913e-05}, {'time': 0.022301472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.490" endtime="20201112 12:42:53.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.506" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.494" endtime="20201112 12:42:53.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.511" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.510" endtime="20201112 12:42:53.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.513" level="INFO">VALUE: [1.0457999999997913e-05, 9.304999999997648e-06, 9.555999999997372e-06, 9.777999999998482e-06, 9.541999999997802e-06, 9.999999999999593e-06, 9.556000000000842e-06, 9.527999999998232e-06, 9.528000000001702e-06, 9.778000000001952e-06, 9.513999999998662e-06, 9.820000000000662e-06, 9.763999999998912e-06, 9.320000000000161e-06, 9.527999999998232e-06, 9.708000000000633e-06, 9.777999999998482e-06, 9.778000000001952e-06, 9.542000000001272e-06, 9.735999999999773e-06, 9.749999999999343e-06, 9.527999999998232e-06, 9.306000000000592e-06, 9.292000000001022e-06, 9.776999999999009e-06, 9.542000000001272e-06, 9.763999999998912e-06, 9.374999999998967e-06, 9.305000000001118e-06, 9.542000000001272e-06, 9.556000000000842e-06, 9.790999999998579e-06, 9.305000000001118e-06, 9.762999999999439e-06, 9.540999999998329e-06, 9.986000000000023e-06, 9.776999999999009e-06, 9.319999999996692e-06, 9.763999999998912e-06, 9.555999999997372e-06, 9.292000000001022e-06, 9.542000000001272e-06, 9.292000000001022e-06, 9.554999999997899e-06, 9.583000000000508e-06, 9.292000000001022e-06, 9.749999999999343e-06, 9.526999999998759e-06, 9.777999999998482e-06, 9.306000000000592e-06]</msg>
<status status="PASS" starttime="20201112 12:42:53.512" endtime="20201112 12:42:53.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.507" endtime="20201112 12:42:53.515"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.517" endtime="20201112 12:42:53.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.520" endtime="20201112 12:42:53.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.519" endtime="20201112 12:42:53.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.515" endtime="20201112 12:42:53.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.152" endtime="20201112 12:42:53.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.152" endtime="20201112 12:42:53.541"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.550" endtime="20201112 12:42:53.565"></status>
</kw>
<msg timestamp="20201112 12:42:53.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.549" endtime="20201112 12:42:53.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.566" endtime="20201112 12:42:53.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.569" endtime="20201112 12:42:53.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.545" endtime="20201112 12:42:53.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.543" endtime="20201112 12:42:53.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.578" endtime="20201112 12:42:53.861"></status>
</kw>
<msg timestamp="20201112 12:42:53.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.576" endtime="20201112 12:42:53.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022661319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.865" endtime="20201112 12:42:53.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.873" endtime="20201112 12:42:53.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.573" endtime="20201112 12:42:53.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.572" endtime="20201112 12:42:53.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.881" level="INFO">${RESULT} = [{'time': 0.022672708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1389000000000538e-05, 'source_diff': 1.1389000000000538e-05}, {'time': 0.022685361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.877" endtime="20201112 12:42:53.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.896" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:53.882" endtime="20201112 12:42:53.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.901" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.900" endtime="20201112 12:42:53.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.904" level="INFO">VALUE: [1.1389000000000538e-05, 1.0958000000001883e-05, 1.0500000000000093e-05, 1.0236000000000273e-05, 1.0486000000000523e-05, 1.0485999999997053e-05, 1.0957999999998413e-05, 1.0722000000001203e-05, 1.0458000000001383e-05, 1.0278000000002452e-05, 1.0472000000000953e-05, 1.0708000000001633e-05, 1.0723000000000676e-05, 1.0472000000000953e-05, 1.0471999999997483e-05, 1.0236000000000273e-05, 1.0722999999997207e-05, 1.0722000000001203e-05, 1.0249999999999843e-05, 1.0473000000000426e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.0694000000002063e-05, 1.0708999999997637e-05, 1.0708000000001633e-05, 1.0957999999998413e-05, 1.0473000000000426e-05, 1.0985999999997553e-05, 1.0249999999999843e-05, 1.0736000000000773e-05, 1.0707999999998163e-05, 1.0944999999998317e-05, 1.0486000000000523e-05, 1.0944000000002313e-05, 1.1193999999999094e-05, 1.0721999999997733e-05, 1.0804999999999149e-05, 1.0750000000000343e-05, 1.0486000000000523e-05, 1.0708999999997637e-05, 1.0444000000001813e-05, 1.0472000000000953e-05, 1.0472000000000953e-05, 1.0540999999999329e-05, 1.0722000000001203e-05, 1.0500000000000093e-05, 1.0723000000000676e-05, 1.0708000000001633e-05, 1.0471999999997483e-05, 1.0221999999997233e-05]</msg>
<status status="PASS" starttime="20201112 12:42:53.902" endtime="20201112 12:42:53.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.897" endtime="20201112 12:42:53.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.907" endtime="20201112 12:42:53.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.911" endtime="20201112 12:42:53.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.909" endtime="20201112 12:42:53.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.906" endtime="20201112 12:42:53.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.542" endtime="20201112 12:42:53.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.541" endtime="20201112 12:42:53.931"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.940" endtime="20201112 12:42:53.955"></status>
</kw>
<msg timestamp="20201112 12:42:53.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.938" endtime="20201112 12:42:53.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.957" endtime="20201112 12:42:53.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.959" endtime="20201112 12:42:53.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.936" endtime="20201112 12:42:53.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.934" endtime="20201112 12:42:53.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.968" endtime="20201112 12:42:54.252"></status>
</kw>
<msg timestamp="20201112 12:42:54.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.966" endtime="20201112 12:42:54.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022753806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.257" endtime="20201112 12:42:54.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.265" endtime="20201112 12:42:54.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.964" endtime="20201112 12:42:54.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.962" endtime="20201112 12:42:54.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.271" level="INFO">${RESULT} = [{'time': 0.022753806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1834000000002232e-05, 'source_diff': 1.1834000000002232e-05}, {'time': 0.022767542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:54.268" endtime="20201112 12:42:54.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.285" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.272" endtime="20201112 12:42:54.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.289" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.288" endtime="20201112 12:42:54.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.291" level="INFO">VALUE: [1.1834000000002232e-05, 1.1903000000000608e-05, 1.1416000000000204e-05, 1.1652999999996888e-05, 1.1429999999999774e-05, 1.1917000000000177e-05, 1.1209000000001607e-05, 1.1416000000000204e-05, 1.1429999999999774e-05, 1.1666999999999927e-05, 1.1666999999999927e-05, 1.1429999999999774e-05, 1.1416999999999677e-05, 1.1430999999999247e-05, 1.1193999999999094e-05, 1.1680000000000024e-05, 1.1901999999997664e-05, 1.1888999999997568e-05, 1.1180999999998997e-05, 1.1653000000000358e-05, 1.1430999999999247e-05, 1.1680000000000024e-05, 1.1666999999999927e-05, 1.1403000000000107e-05, 1.1416000000000204e-05, 1.1430999999999247e-05, 1.1429999999999774e-05, 1.1722000000002203e-05, 1.1236000000001273e-05, 1.1596999999998608e-05, 1.1652000000000884e-05, 1.1832999999999289e-05, 1.1430999999999247e-05, 1.1152999999999857e-05, 1.1903000000000608e-05, 1.1652000000000884e-05, 1.1666999999999927e-05, 1.1430999999999247e-05, 1.1416000000000204e-05, 1.1652999999996888e-05, 1.1416999999999677e-05, 1.1416999999999677e-05, 1.1666000000000454e-05, 1.1666000000000454e-05, 1.1430999999999247e-05, 1.1680999999999497e-05, 1.1666999999999927e-05, 1.1666999999999927e-05, 1.1430999999999247e-05, 1.1666999999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.290" endtime="20201112 12:42:54.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.286" endtime="20201112 12:42:54.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.295" endtime="20201112 12:42:54.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.298" endtime="20201112 12:42:54.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.297" endtime="20201112 12:42:54.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.293" endtime="20201112 12:42:54.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.932" endtime="20201112 12:42:54.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.932" endtime="20201112 12:42:54.319"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.327" endtime="20201112 12:42:54.343"></status>
</kw>
<msg timestamp="20201112 12:42:54.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.326" endtime="20201112 12:42:54.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.344" endtime="20201112 12:42:54.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.347" endtime="20201112 12:42:54.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.323" endtime="20201112 12:42:54.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.321" endtime="20201112 12:42:54.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.356" endtime="20201112 12:42:54.641"></status>
</kw>
<msg timestamp="20201112 12:42:54.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.354" endtime="20201112 12:42:54.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021891875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.645" endtime="20201112 12:42:54.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.653" endtime="20201112 12:42:54.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.352" endtime="20201112 12:42:54.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.350" endtime="20201112 12:42:54.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.660" level="INFO">${RESULT} = [{'time': 0.021905083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3207999999997194e-05, 'source_diff': 1.3207999999997194e-05}, {'time': 0.021919806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:54.657" endtime="20201112 12:42:54.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.674" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:54.661" endtime="20201112 12:42:54.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.679" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.678" endtime="20201112 12:42:54.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.681" level="INFO">VALUE: [1.3207999999997194e-05, 1.2833999999999762e-05, 1.2333999999999262e-05, 1.2402999999997638e-05, 1.2638999999998318e-05, 1.2625000000002218e-05, 1.2374999999998498e-05, 1.2375000000001968e-05, 1.2846999999999859e-05, 1.2431000000000247e-05, 1.2361000000002398e-05, 1.2833000000000289e-05, 1.2125000000001718e-05, 1.2389000000001538e-05, 1.2610999999999178e-05, 1.2846999999999859e-05, 1.2833999999999762e-05, 1.2625000000002218e-05, 1.2846999999999859e-05, 1.2846999999999859e-05, 1.2375000000001968e-05, 1.2846999999999859e-05, 1.2860999999999428e-05, 1.2597999999999082e-05, 1.2611000000002648e-05, 1.2596999999999609e-05, 1.2860999999999428e-05, 1.2651999999998415e-05, 1.2610999999999178e-05, 1.2846999999999859e-05, 1.2374999999998498e-05, 1.2360999999998928e-05, 1.2374999999998498e-05, 1.2846999999999859e-05, 1.2374999999998498e-05, 1.2611000000002648e-05, 1.2624999999998748e-05, 1.2833999999999762e-05, 1.2611000000002648e-05, 1.2638999999998318e-05, 1.2528000000001233e-05, 1.2361000000002398e-05, 1.2596999999999609e-05, 1.2833000000000289e-05, 1.2360999999998928e-05, 1.2597999999999082e-05, 1.2888999999998568e-05, 1.2361000000002398e-05, 1.2610999999999178e-05, 1.2610999999999178e-05]</msg>
<status status="PASS" starttime="20201112 12:42:54.680" endtime="20201112 12:42:54.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.675" endtime="20201112 12:42:54.682"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.685" endtime="20201112 12:42:54.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.688" endtime="20201112 12:42:54.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.687" endtime="20201112 12:42:54.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.683" endtime="20201112 12:42:54.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.320" endtime="20201112 12:42:54.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.319" endtime="20201112 12:42:54.709"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.717" endtime="20201112 12:42:54.732"></status>
</kw>
<msg timestamp="20201112 12:42:54.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.716" endtime="20201112 12:42:54.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.734" endtime="20201112 12:42:54.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.736" endtime="20201112 12:42:54.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.713" endtime="20201112 12:42:54.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.711" endtime="20201112 12:42:54.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.746" endtime="20201112 12:42:55.031"></status>
</kw>
<msg timestamp="20201112 12:42:55.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.745" endtime="20201112 12:42:55.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021792083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.035" endtime="20201112 12:42:55.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.044" endtime="20201112 12:42:55.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.742" endtime="20201112 12:42:55.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.740" endtime="20201112 12:42:55.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.050" level="INFO">${RESULT} = [{'time': 0.021792083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4429999999999304e-05, 'source_diff': 1.4429999999999304e-05}, {'time': 0.021807583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:55.047" endtime="20201112 12:42:55.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.063" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.051" endtime="20201112 12:42:55.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.068" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.067" endtime="20201112 12:42:55.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.070" level="INFO">VALUE: [1.4429999999999304e-05, 1.377699999999954e-05, 1.3333000000000789e-05, 1.3791000000002579e-05, 1.3791999999998583e-05, 1.3292000000001553e-05, 1.3555999999997903e-05, 1.3541999999998333e-05, 1.3556000000001373e-05, 1.379099999999911e-05, 1.3611000000000179e-05, 1.3542000000001803e-05, 1.3556000000001373e-05, 1.3777999999999013e-05, 1.351299999999972e-05, 1.3542000000001803e-05, 1.3777999999999013e-05, 1.355499999999843e-05, 1.377699999999954e-05, 1.3555999999997903e-05, 1.330499999999818e-05, 1.3569999999997473e-05, 1.3555999999997903e-05, 1.330499999999818e-05, 1.3778000000002483e-05, 1.3791999999998583e-05, 1.379099999999911e-05, 1.330499999999818e-05, 1.3791000000002579e-05, 1.3749999999999873e-05, 1.3791999999998583e-05, 1.3305999999997653e-05, 1.3472000000000484e-05, 1.3306000000001122e-05, 1.3235999999999803e-05, 1.3569000000001469e-05, 1.379099999999911e-05, 1.3305000000001649e-05, 1.3556000000001373e-05, 1.3360999999999928e-05, 1.3556000000001373e-05, 1.3541999999998333e-05, 1.3568999999998e-05, 1.3791999999998583e-05, 1.3763999999999443e-05, 1.4028000000002733e-05, 1.3764000000002913e-05, 1.3319000000001219e-05, 1.3305000000001649e-05, 1.3709000000000637e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.069" endtime="20201112 12:42:55.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.064" endtime="20201112 12:42:55.072"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.074" endtime="20201112 12:42:55.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.077" endtime="20201112 12:42:55.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.076" endtime="20201112 12:42:55.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.072" endtime="20201112 12:42:55.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.710" endtime="20201112 12:42:55.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.709" endtime="20201112 12:42:55.098"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.106" endtime="20201112 12:42:55.121"></status>
</kw>
<msg timestamp="20201112 12:42:55.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.105" endtime="20201112 12:42:55.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.123" endtime="20201112 12:42:55.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.125" endtime="20201112 12:42:55.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.102" endtime="20201112 12:42:55.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.100" endtime="20201112 12:42:55.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.135" endtime="20201112 12:42:55.420"></status>
</kw>
<msg timestamp="20201112 12:42:55.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.133" endtime="20201112 12:42:55.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021718167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.424" endtime="20201112 12:42:55.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.432" endtime="20201112 12:42:55.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.131" endtime="20201112 12:42:55.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.129" endtime="20201112 12:42:55.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.439" level="INFO">${RESULT} = [{'time': 0.021718167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.021733708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:55.436" endtime="20201112 12:42:55.439"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.452" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.440" endtime="20201112 12:42:55.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.457" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.456" endtime="20201112 12:42:55.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.459" level="INFO">VALUE: [1.5681000000000028e-05, 1.4180000000002524e-05, 1.4500000000000624e-05, 1.4527999999999763e-05, 1.4223000000000707e-05, 1.4958000000002414e-05, 1.4500000000000624e-05, 1.4945000000002318e-05, 1.4500000000000624e-05, 1.4263999999999943e-05, 1.4749999999997404e-05, 1.4207999999998194e-05, 1.4263999999999943e-05, 1.4736000000001304e-05, 1.4750000000000874e-05, 1.4791999999999583e-05, 1.4722000000001734e-05, 1.4721999999998264e-05, 1.4736000000001304e-05, 1.4500000000000624e-05, 1.4737000000000777e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4736000000001304e-05, 1.4514000000000193e-05, 1.4721999999998264e-05, 1.4971999999998514e-05, 1.4499999999997154e-05, 1.4959000000001887e-05, 1.4486000000001054e-05, 1.4749999999997404e-05, 1.4514000000000193e-05, 1.4764000000000443e-05, 1.4971999999998514e-05, 1.4971999999998514e-05, 1.4527999999999763e-05, 1.4250000000000373e-05, 1.4208000000001664e-05, 1.4737000000000777e-05, 1.4736000000001304e-05, 1.4250000000000373e-05, 1.4778000000000013e-05, 1.4514000000000193e-05, 1.4737000000000777e-05, 1.4500000000000624e-05, 1.4277999999999513e-05, 1.4527999999999763e-05, 1.4722000000001734e-05, 1.4250000000000373e-05, 1.4957999999998944e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.458" endtime="20201112 12:42:55.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.453" endtime="20201112 12:42:55.460"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.462" endtime="20201112 12:42:55.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.466" endtime="20201112 12:42:55.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.464" endtime="20201112 12:42:55.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.461" endtime="20201112 12:42:55.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.099" endtime="20201112 12:42:55.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.098" endtime="20201112 12:42:55.487"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.495" endtime="20201112 12:42:55.510"></status>
</kw>
<msg timestamp="20201112 12:42:55.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.493" endtime="20201112 12:42:55.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.512" endtime="20201112 12:42:55.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.514" endtime="20201112 12:42:55.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.491" endtime="20201112 12:42:55.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.489" endtime="20201112 12:42:55.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.524" endtime="20201112 12:42:55.809"></status>
</kw>
<msg timestamp="20201112 12:42:55.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02196275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:55.523" endtime="20201112 12:42:55.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02196275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:55.813" endtime="20201112 12:42:55.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.822" endtime="20201112 12:42:55.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.520" endtime="20201112 12:42:55.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.519" endtime="20201112 12:42:55.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.828" level="INFO">${RESULT} = [{'time': 0.021978653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.590300000000114e-05, 'source_diff': 1.590300000000114e-05}, {'time': 0.021995292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:55.825" endtime="20201112 12:42:55.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.842" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:55.829" endtime="20201112 12:42:55.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.846" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.845" endtime="20201112 12:42:55.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.849" level="INFO">VALUE: [1.590300000000114e-05, 1.5180999999999528e-05, 1.588900000000157e-05, 1.5679999999997085e-05, 1.5694000000000125e-05, 1.5444999999999348e-05, 1.566700000000046e-05, 1.5207999999999194e-05, 1.5430000000000305e-05, 1.5735999999998834e-05, 1.591699999999724e-05, 1.5651999999997945e-05, 1.541700000000021e-05, 1.5430000000000305e-05, 1.5680000000000555e-05, 1.5208999999998668e-05, 1.5443999999999874e-05, 1.5681000000000028e-05, 1.5666000000000985e-05, 1.5207999999999194e-05, 1.5430999999999778e-05, 1.591700000000071e-05, 1.5931000000000278e-05, 1.5208999999998668e-05, 1.5931000000000278e-05, 1.5443999999999874e-05, 1.5930000000000805e-05, 1.5443999999999874e-05, 1.5445000000002818e-05, 1.53889999999976e-05, 1.5694000000000125e-05, 1.5680000000000555e-05, 1.5444999999999348e-05, 1.5694999999999598e-05, 1.5207999999999194e-05, 1.5916000000001235e-05, 1.5430999999999778e-05, 1.5430999999999778e-05, 1.566700000000046e-05, 1.5430999999999778e-05, 1.5487000000001527e-05, 1.5694000000000125e-05, 1.5222999999998238e-05, 1.590300000000114e-05, 1.5193999999999624e-05, 1.591700000000071e-05, 1.615300000000139e-05, 1.5194999999999098e-05, 1.5443999999999874e-05, 1.5457999999999444e-05]</msg>
<status status="PASS" starttime="20201112 12:42:55.847" endtime="20201112 12:42:55.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.843" endtime="20201112 12:42:55.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.852" endtime="20201112 12:42:55.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.856" endtime="20201112 12:42:55.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.854" endtime="20201112 12:42:55.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.851" endtime="20201112 12:42:55.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.488" endtime="20201112 12:42:55.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.487" endtime="20201112 12:42:55.876"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.885" endtime="20201112 12:42:55.899"></status>
</kw>
<msg timestamp="20201112 12:42:55.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.883" endtime="20201112 12:42:55.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.901" endtime="20201112 12:42:55.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.903" endtime="20201112 12:42:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.881" endtime="20201112 12:42:55.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.879" endtime="20201112 12:42:55.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.913" endtime="20201112 12:42:56.198"></status>
</kw>
<msg timestamp="20201112 12:42:56.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:55.911" endtime="20201112 12:42:56.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021767, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:56.203" endtime="20201112 12:42:56.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.211" endtime="20201112 12:42:56.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.909" endtime="20201112 12:42:56.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.907" endtime="20201112 12:42:56.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.218" level="INFO">${RESULT} = [{'time': 0.021767, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7528000000002764e-05, 'source_diff': 1.7528000000002764e-05}, {'time': 0.021785556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:56.214" endtime="20201112 12:42:56.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.232" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.219" endtime="20201112 12:42:56.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.236" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.235" endtime="20201112 12:42:56.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.238" level="INFO">VALUE: [1.7528000000002764e-05, 1.6861999999999433e-05, 1.684700000000039e-05, 1.662499999999928e-05, 1.6929999999998335e-05, 1.615300000000139e-05, 1.686100000000343e-05, 1.688900000000257e-05, 1.663899999999885e-05, 1.63889999999986e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.6611999999999183e-05, 1.615300000000139e-05, 1.6637999999999376e-05, 1.637499999999903e-05, 1.63889999999986e-05, 1.633300000000032e-05, 1.686099999999996e-05, 1.6901999999999195e-05, 1.659700000000014e-05, 1.662499999999928e-05, 1.638900000000207e-05, 1.661099999999971e-05, 1.637499999999903e-05, 1.637499999999903e-05, 1.659700000000014e-05, 1.638900000000207e-05, 1.636099999999946e-05, 1.662500000000275e-05, 1.663899999999885e-05, 1.684700000000039e-05, 1.613900000000182e-05, 1.6320000000000223e-05, 1.6611999999999183e-05, 1.615300000000139e-05, 1.684700000000039e-05, 1.662500000000275e-05, 1.686099999999996e-05, 1.638900000000207e-05, 1.637499999999903e-05, 1.662500000000275e-05, 1.638900000000207e-05, 1.63889999999986e-05, 1.687499999999953e-05, 1.63750000000025e-05, 1.658300000000057e-05, 1.6612000000002652e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.237" endtime="20201112 12:42:56.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.233" endtime="20201112 12:42:56.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.242" endtime="20201112 12:42:56.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.245" endtime="20201112 12:42:56.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.244" endtime="20201112 12:42:56.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.240" endtime="20201112 12:42:56.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.877" endtime="20201112 12:42:56.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.877" endtime="20201112 12:42:56.266"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.274" endtime="20201112 12:42:56.289"></status>
</kw>
<msg timestamp="20201112 12:42:56.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.273" endtime="20201112 12:42:56.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.290" endtime="20201112 12:42:56.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.293" endtime="20201112 12:42:56.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.271" endtime="20201112 12:42:56.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.269" endtime="20201112 12:42:56.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.302" endtime="20201112 12:42:56.587"></status>
</kw>
<msg timestamp="20201112 12:42:56.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.301" endtime="20201112 12:42:56.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022038056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.591" endtime="20201112 12:42:56.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.599" endtime="20201112 12:42:56.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.298" endtime="20201112 12:42:56.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.297" endtime="20201112 12:42:56.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.606" level="INFO">${RESULT} = [{'time': 0.022056056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8000000000000654e-05, 'source_diff': 1.8000000000000654e-05}, {'time': 0.022074806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:56.602" endtime="20201112 12:42:56.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.619" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.606" endtime="20201112 12:42:56.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.623" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.622" endtime="20201112 12:42:56.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.625" level="INFO">VALUE: [1.8000000000000654e-05, 1.7333999999997324e-05, 1.755499999999896e-05, 1.731900000000175e-05, 1.734699999999742e-05, 1.736099999999699e-05, 1.756899999999853e-05, 1.7791999999999114e-05, 1.761099999999724e-05, 1.781899999999878e-05, 1.758300000000157e-05, 1.709700000000064e-05, 1.7556000000001903e-05, 1.7791999999999114e-05, 1.730499999999871e-05, 1.758300000000157e-05, 1.709700000000064e-05, 1.7805999999998684e-05, 1.734699999999742e-05, 1.7513999999999724e-05, 1.7333999999997324e-05, 1.7820000000001723e-05, 1.7584000000001043e-05, 1.780499999999921e-05, 1.7569000000002e-05, 1.7792000000002584e-05, 1.7777999999999544e-05, 1.7777999999999544e-05, 1.7791999999999114e-05, 1.7806000000002153e-05, 1.780499999999921e-05, 1.756899999999853e-05, 1.7792000000002584e-05, 1.755499999999896e-05, 1.7569999999998004e-05, 1.7334000000000793e-05, 1.733300000000132e-05, 1.731899999999828e-05, 1.7750000000000404e-05, 1.7777999999999544e-05, 1.759699999999767e-05, 1.7569999999998004e-05, 1.7791999999999114e-05, 1.780500000000268e-05, 1.733299999999785e-05, 1.7569000000002e-05, 1.7555999999998434e-05, 1.7500000000000154e-05, 1.7334000000000793e-05, 1.731900000000175e-05]</msg>
<status status="PASS" starttime="20201112 12:42:56.624" endtime="20201112 12:42:56.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.619" endtime="20201112 12:42:56.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.629" endtime="20201112 12:42:56.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.632" endtime="20201112 12:42:56.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.631" endtime="20201112 12:42:56.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.627" endtime="20201112 12:42:56.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.267" endtime="20201112 12:42:56.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.266" endtime="20201112 12:42:56.653"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.662" endtime="20201112 12:42:56.676"></status>
</kw>
<msg timestamp="20201112 12:42:56.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.660" endtime="20201112 12:42:56.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.678" endtime="20201112 12:42:56.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.680" endtime="20201112 12:42:56.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.658" endtime="20201112 12:42:56.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.656" endtime="20201112 12:42:56.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.690" endtime="20201112 12:42:56.976"></status>
</kw>
<msg timestamp="20201112 12:42:56.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.689" endtime="20201112 12:42:56.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021720972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.980" endtime="20201112 12:42:56.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.989" endtime="20201112 12:42:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.686" endtime="20201112 12:42:56.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.684" endtime="20201112 12:42:56.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.995" level="INFO">${RESULT} = [{'time': 0.021720972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.936100000000246e-05, 'source_diff': 1.936100000000246e-05}, {'time': 0.021740556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:56.992" endtime="20201112 12:42:56.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.008" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:56.996" endtime="20201112 12:42:57.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.013" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.012" endtime="20201112 12:42:57.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.015" level="INFO">VALUE: [1.936100000000246e-05, 1.8278000000000044e-05, 1.8291999999999614e-05, 1.8514000000000724e-05, 1.8528000000000294e-05, 1.8278000000000044e-05, 1.8514000000000724e-05, 1.8750000000001404e-05, 1.8749999999997935e-05, 1.8264000000000474e-05, 1.8513999999997255e-05, 1.8264000000000474e-05, 1.8278000000000044e-05, 1.8750000000001404e-05, 1.8514000000000724e-05, 1.86950000000026e-05, 1.9000000000001654e-05, 1.8749999999997935e-05, 1.8500000000001154e-05, 1.8513999999997255e-05, 1.8764000000000974e-05, 1.8763999999997505e-05, 1.866699999999999e-05, 1.8514000000000724e-05, 1.9014000000001224e-05, 1.8319999999998754e-05, 1.8750000000001404e-05, 1.8749999999997935e-05, 1.8735999999998365e-05, 1.8500000000001154e-05, 1.8750000000001404e-05, 1.8971999999999045e-05, 1.8264000000000474e-05, 1.8985999999998615e-05, 1.827700000000057e-05, 1.8736000000001835e-05, 1.8999999999998185e-05, 1.8778000000000544e-05, 1.8221999999998295e-05, 1.8749999999997935e-05, 1.8792000000000114e-05, 1.8514000000000724e-05, 1.8528000000000294e-05, 1.8763999999997505e-05, 1.8763999999997505e-05, 1.8736000000001835e-05, 1.8764000000000974e-05, 1.8514000000000724e-05, 1.8750000000001404e-05, 1.8514000000000724e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.014" endtime="20201112 12:42:57.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.009" endtime="20201112 12:42:57.017"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.019" endtime="20201112 12:42:57.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.022" endtime="20201112 12:42:57.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.021" endtime="20201112 12:42:57.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.017" endtime="20201112 12:42:57.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.654" endtime="20201112 12:42:57.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.654" endtime="20201112 12:42:57.043"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.051" endtime="20201112 12:42:57.066"></status>
</kw>
<msg timestamp="20201112 12:42:57.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.050" endtime="20201112 12:42:57.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.068" endtime="20201112 12:42:57.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.070" endtime="20201112 12:42:57.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.047" endtime="20201112 12:42:57.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.045" endtime="20201112 12:42:57.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.080" endtime="20201112 12:42:57.364"></status>
</kw>
<msg timestamp="20201112 12:42:57.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.078" endtime="20201112 12:42:57.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021822681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.369" endtime="20201112 12:42:57.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.377" endtime="20201112 12:42:57.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.076" endtime="20201112 12:42:57.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.074" endtime="20201112 12:42:57.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.384" level="INFO">${RESULT} = [{'time': 0.021842556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.987499999999906e-05, 'source_diff': 1.987499999999906e-05}, {'time': 0.021863222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.380" endtime="20201112 12:42:57.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.385" endtime="20201112 12:42:57.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.401" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.400" endtime="20201112 12:42:57.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.404" level="INFO">VALUE: [1.987499999999906e-05, 1.929100000000114e-05, 1.9915999999998296e-05, 1.969500000000013e-05, 1.9430000000000835e-05, 1.944499999999988e-05, 1.97089999999997e-05, 1.944499999999988e-05, 1.966700000000099e-05, 1.9750000000002405e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.9471999999999545e-05, 1.9930000000001336e-05, 1.9694000000000655e-05, 1.9444000000000405e-05, 1.9444000000000405e-05, 1.969499999999666e-05, 1.9444000000000405e-05, 1.9221999999999295e-05, 1.9930000000001336e-05, 2.012499999999931e-05, 1.9444000000000405e-05, 1.9499999999998685e-05, 1.920900000000267e-05, 1.9486000000002585e-05, 1.969500000000013e-05, 1.9944000000000905e-05, 1.969500000000013e-05, 1.9457999999999975e-05, 1.9221999999999295e-05, 1.969500000000013e-05, 1.954099999999792e-05, 1.9387999999998656e-05, 1.969500000000013e-05, 1.9444000000000405e-05, 1.9680000000001086e-05, 1.99029999999982e-05, 1.968100000000056e-05, 1.968100000000056e-05, 1.947299999999902e-05, 1.970900000000317e-05, 1.9485999999999115e-05, 1.9471999999999545e-05, 1.9457999999999975e-05, 1.969500000000013e-05, 1.9221999999999295e-05, 1.9694000000000655e-05, 1.9694000000000655e-05, 1.9679999999997616e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.402" endtime="20201112 12:42:57.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.398" endtime="20201112 12:42:57.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.407" endtime="20201112 12:42:57.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.411" endtime="20201112 12:42:57.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.409" endtime="20201112 12:42:57.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.406" endtime="20201112 12:42:57.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.044" endtime="20201112 12:42:57.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.043" endtime="20201112 12:42:57.431"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.440" endtime="20201112 12:42:57.454"></status>
</kw>
<msg timestamp="20201112 12:42:57.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.438" endtime="20201112 12:42:57.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.456" endtime="20201112 12:42:57.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.458" endtime="20201112 12:42:57.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.436" endtime="20201112 12:42:57.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.434" endtime="20201112 12:42:57.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.468" endtime="20201112 12:42:57.753"></status>
</kw>
<msg timestamp="20201112 12:42:57.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:57.466" endtime="20201112 12:42:57.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021794458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02181625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:57.757" endtime="20201112 12:42:57.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.765" endtime="20201112 12:42:57.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.464" endtime="20201112 12:42:57.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.462" endtime="20201112 12:42:57.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.772" level="INFO">${RESULT} = [{'time': 0.02181625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1791999999999645e-05, 'source_diff': 2.1791999999999645e-05}, {'time': 0.021838819, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:57.769" endtime="20201112 12:42:57.772"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.786" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:57.773" endtime="20201112 12:42:57.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.791" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.790" endtime="20201112 12:42:57.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.793" level="INFO">VALUE: [2.1791999999999645e-05, 2.111099999999727e-05, 2.0693999999998186e-05, 2.018099999999759e-05, 2.087500000000006e-05, 2.066699999999852e-05, 2.068099999999809e-05, 2.0444000000001405e-05, 2.086100000000049e-05, 2.016700000000149e-05, 2.086100000000049e-05, 2.065300000000242e-05, 2.037499999999956e-05, 2.062499999999981e-05, 2.063900000000285e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.016700000000149e-05, 2.062499999999981e-05, 2.037499999999956e-05, 2.0707999999997756e-05, 2.063899999999938e-05, 2.068100000000156e-05, 2.04029999999987e-05, 2.061100000000024e-05, 2.041699999999827e-05, 2.087500000000006e-05, 2.0429999999998366e-05, 2.043100000000131e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.05969999999972e-05, 2.062499999999981e-05, 2.080499999999874e-05, 2.058299999999763e-05, 2.04029999999987e-05, 2.0347999999999894e-05, 2.0665999999999046e-05, 2.037499999999956e-05, 2.063899999999938e-05, 2.087500000000006e-05, 2.041699999999827e-05, 2.0611999999999714e-05, 2.03890000000026e-05, 2.0401999999999226e-05, 2.062500000000328e-05, 2.0180000000001586e-05, 2.086100000000049e-05, 2.0472000000000545e-05, 2.040300000000217e-05]</msg>
<status status="PASS" starttime="20201112 12:42:57.792" endtime="20201112 12:42:57.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.787" endtime="20201112 12:42:57.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.796" endtime="20201112 12:42:57.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.800" endtime="20201112 12:42:57.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.798" endtime="20201112 12:42:57.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.795" endtime="20201112 12:42:57.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.432" endtime="20201112 12:42:57.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.432" endtime="20201112 12:42:57.821"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.830" endtime="20201112 12:42:57.845"></status>
</kw>
<msg timestamp="20201112 12:42:57.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.828" endtime="20201112 12:42:57.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.847" endtime="20201112 12:42:57.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.849" endtime="20201112 12:42:57.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.826" endtime="20201112 12:42:57.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.823" endtime="20201112 12:42:57.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.859" endtime="20201112 12:42:58.145"></status>
</kw>
<msg timestamp="20201112 12:42:58.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.858" endtime="20201112 12:42:58.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023165806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023188069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.149" endtime="20201112 12:42:58.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.157" endtime="20201112 12:42:58.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.855" endtime="20201112 12:42:58.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.853" endtime="20201112 12:42:58.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.164" level="INFO">${RESULT} = [{'time': 0.023188069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2262999999998062e-05, 'source_diff': 2.2262999999998062e-05}, {'time': 0.023211639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:58.160" endtime="20201112 12:42:58.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.177" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.165" endtime="20201112 12:42:58.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.181" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.180" endtime="20201112 12:42:58.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.184" level="INFO">VALUE: [2.2262999999998062e-05, 2.1985999999998146e-05, 2.205499999999999e-05, 2.1583999999998105e-05, 2.181899999999931e-05, 2.1362000000000464e-05, 2.1819999999998785e-05, 2.12770000000001e-05, 2.180499999999974e-05, 2.134699999999795e-05, 2.181899999999931e-05, 2.134700000000142e-05, 2.1362000000000464e-05, 2.1584000000001574e-05, 2.158299999999863e-05, 2.130499999999924e-05, 2.1584000000001574e-05, 2.184700000000192e-05, 2.156899999999906e-05, 2.156899999999906e-05, 2.136099999999752e-05, 2.1569999999998535e-05, 2.1583999999998105e-05, 2.133299999999838e-05, 2.181899999999931e-05, 2.2055999999999465e-05, 2.180499999999974e-05, 2.1569999999998535e-05, 2.156900000000253e-05, 2.129099999999967e-05, 2.163899999999691e-05, 2.156899999999906e-05, 2.134700000000142e-05, 2.1834000000001824e-05, 2.137499999999709e-05, 2.1764000000000505e-05, 2.1098000000000644e-05, 2.180499999999974e-05, 2.158299999999863e-05, 2.156899999999906e-05, 2.134699999999795e-05, 2.133300000000185e-05, 2.184699999999845e-05, 2.136100000000099e-05, 2.1555999999998965e-05, 2.1319999999998285e-05, 2.1334000000001324e-05, 2.1527999999999825e-05, 2.134699999999795e-05, 2.136100000000099e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.182" endtime="20201112 12:42:58.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.178" endtime="20201112 12:42:58.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.187" endtime="20201112 12:42:58.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.191" endtime="20201112 12:42:58.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.189" endtime="20201112 12:42:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.186" endtime="20201112 12:42:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.822" endtime="20201112 12:42:58.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.821" endtime="20201112 12:42:58.211"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.220" endtime="20201112 12:42:58.234"></status>
</kw>
<msg timestamp="20201112 12:42:58.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.218" endtime="20201112 12:42:58.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.236" endtime="20201112 12:42:58.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.238" endtime="20201112 12:42:58.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.216" endtime="20201112 12:42:58.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.214" endtime="20201112 12:42:58.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.248" endtime="20201112 12:42:58.533"></status>
</kw>
<msg timestamp="20201112 12:42:58.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.247" endtime="20201112 12:42:58.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021731833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.537" endtime="20201112 12:42:58.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.545" endtime="20201112 12:42:58.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.244" endtime="20201112 12:42:58.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.242" endtime="20201112 12:42:58.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.552" level="INFO">${RESULT} = [{'time': 0.021755722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.388900000000263e-05, 'source_diff': 2.388900000000263e-05}, {'time': 0.021780333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:58.549" endtime="20201112 12:42:58.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.553" endtime="20201112 12:42:58.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.570" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.569" endtime="20201112 12:42:58.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.572" level="INFO">VALUE: [2.388900000000263e-05, 2.2763999999998036e-05, 2.230500000000024e-05, 2.2749999999998466e-05, 2.2513999999997786e-05, 2.2514000000001255e-05, 2.2528000000000825e-05, 2.2528000000000825e-05, 2.2542000000000395e-05, 2.281900000000031e-05, 2.2486000000002115e-05, 2.2527999999997356e-05, 2.231899999999981e-05, 2.2792000000000645e-05, 2.2999999999998716e-05, 2.2292000000000145e-05, 2.2764000000001505e-05, 2.254100000000092e-05, 2.251300000000178e-05, 2.255500000000049e-05, 2.2527999999997356e-05, 2.252700000000135e-05, 2.229100000000067e-05, 2.283299999999988e-05, 2.2736000000002365e-05, 2.2290999999997202e-05, 2.2971999999999576e-05, 2.2527999999997356e-05, 2.2749999999998466e-05, 2.2527999999997356e-05, 2.229100000000067e-05, 2.2763999999998036e-05, 2.2749999999998466e-05, 2.2457999999999506e-05, 2.2277999999997106e-05, 2.2249999999997966e-05, 2.2527999999997356e-05, 2.2764000000001505e-05, 2.2735999999998896e-05, 2.2526999999997882e-05, 2.2528000000000825e-05, 2.2292000000000145e-05, 2.2777999999997606e-05, 2.2249999999997966e-05, 2.2764000000001505e-05, 2.2528000000000825e-05, 2.2764000000001505e-05, 2.2763999999998036e-05, 2.252700000000135e-05, 2.2276999999997632e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.571" endtime="20201112 12:42:58.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.566" endtime="20201112 12:42:58.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.576" endtime="20201112 12:42:58.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.579" endtime="20201112 12:42:58.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.577" endtime="20201112 12:42:58.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.574" endtime="20201112 12:42:58.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.212" endtime="20201112 12:42:58.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.212" endtime="20201112 12:42:58.600"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.608" endtime="20201112 12:42:58.623"></status>
</kw>
<msg timestamp="20201112 12:42:58.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.607" endtime="20201112 12:42:58.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.624" endtime="20201112 12:42:58.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.627" endtime="20201112 12:42:58.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.604" endtime="20201112 12:42:58.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.602" endtime="20201112 12:42:58.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.637" endtime="20201112 12:42:58.921"></status>
</kw>
<msg timestamp="20201112 12:42:58.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.635" endtime="20201112 12:42:58.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021765569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021790153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.925" endtime="20201112 12:42:58.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.933" endtime="20201112 12:42:58.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.633" endtime="20201112 12:42:58.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.631" endtime="20201112 12:42:58.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.940" level="INFO">${RESULT} = [{'time': 0.021790153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4584000000001105e-05, 'source_diff': 2.4584000000001105e-05}, {'time': 0.021815778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:58.937" endtime="20201112 12:42:58.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.953" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:58.941" endtime="20201112 12:42:58.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.958" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.957" endtime="20201112 12:42:58.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.960" level="INFO">VALUE: [2.4584000000001105e-05, 2.393100000000134e-05, 2.3235999999999396e-05, 2.393100000000134e-05, 2.3193999999997217e-05, 2.3708000000000756e-05, 2.3485999999999646e-05, 2.345899999999998e-05, 2.3722000000000326e-05, 2.3263999999998536e-05, 2.3929999999998397e-05, 2.3221999999999826e-05, 2.3472000000000076e-05, 2.3680000000001616e-05, 2.3485999999999646e-05, 2.3472000000000076e-05, 2.3694000000001186e-05, 2.3666000000002047e-05, 2.3194000000000686e-05, 2.3708000000000756e-05, 2.3749999999999466e-05, 2.3457999999997037e-05, 2.3166000000001546e-05, 2.3472000000000076e-05, 2.37229999999998e-05, 2.3472000000000076e-05, 2.3708000000000756e-05, 2.3542000000001395e-05, 2.320899999999973e-05, 2.345899999999998e-05, 2.369500000000066e-05, 2.3514000000002255e-05, 2.348700000000259e-05, 2.3458000000000506e-05, 2.3749999999999466e-05, 2.3235999999999396e-05, 2.3916000000002297e-05, 2.3221999999999826e-05, 2.365299999999848e-05, 2.365300000000195e-05, 2.37229999999998e-05, 2.3472000000000076e-05, 2.3708000000000756e-05, 2.3665999999998577e-05, 2.32229999999993e-05, 2.370900000000023e-05, 2.3208000000000256e-05, 2.3458000000000506e-05, 2.3971999999997107e-05, 2.3472000000000076e-05]</msg>
<status status="PASS" starttime="20201112 12:42:58.959" endtime="20201112 12:42:58.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.954" endtime="20201112 12:42:58.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.964" endtime="20201112 12:42:58.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.967" endtime="20201112 12:42:58.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.966" endtime="20201112 12:42:58.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.962" endtime="20201112 12:42:58.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.601" endtime="20201112 12:42:58.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.600" endtime="20201112 12:42:58.988"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.997" endtime="20201112 12:42:59.012"></status>
</kw>
<msg timestamp="20201112 12:42:59.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.995" endtime="20201112 12:42:59.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.013" endtime="20201112 12:42:59.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.016" endtime="20201112 12:42:59.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.993" endtime="20201112 12:42:59.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.991" endtime="20201112 12:42:59.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.026" endtime="20201112 12:42:59.310"></status>
</kw>
<msg timestamp="20201112 12:42:59.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.024" endtime="20201112 12:42:59.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021836403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021862194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.314" endtime="20201112 12:42:59.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.322" endtime="20201112 12:42:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.021" endtime="20201112 12:42:59.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.020" endtime="20201112 12:42:59.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.329" level="INFO">${RESULT} = [{'time': 0.021862194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5791000000000702e-05, 'source_diff': 2.5791000000000702e-05}, {'time': 0.021888792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:59.325" endtime="20201112 12:42:59.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.343" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.330" endtime="20201112 12:42:59.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.347" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.346" endtime="20201112 12:42:59.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.350" level="INFO">VALUE: [2.5791000000000702e-05, 2.486100000000102e-05, 2.4430000000002366e-05, 2.466700000000252e-05, 2.444499999999794e-05, 2.4638000000000437e-05, 2.443100000000184e-05, 2.465300000000295e-05, 2.4652000000000007e-05, 2.4179999999998647e-05, 2.488900000000016e-05, 2.440299999999923e-05, 2.434700000000095e-05, 2.465300000000295e-05, 2.4430000000002366e-05, 2.4415999999999327e-05, 2.487500000000059e-05, 2.4165999999999077e-05, 2.4416000000002797e-05, 2.486100000000102e-05, 2.44169999999988e-05, 2.463899999999991e-05, 2.465299999999948e-05, 2.433300000000138e-05, 2.488900000000016e-05, 2.438899999999966e-05, 2.4415999999999327e-05, 2.488900000000016e-05, 2.463899999999991e-05, 2.488900000000016e-05, 2.463899999999991e-05, 2.494499999999844e-05, 2.443099999999837e-05, 2.4832999999998412e-05, 2.462499999999687e-05, 2.441700000000227e-05, 2.4430000000002366e-05, 2.4471999999997607e-05, 2.440299999999923e-05, 2.468099999999862e-05, 2.418099999999812e-05, 2.487500000000059e-05, 2.4708000000001756e-05, 2.466699999999905e-05, 2.44169999999988e-05, 2.463899999999991e-05, 2.4429999999998897e-05, 2.465299999999948e-05, 2.441700000000227e-05, 2.462500000000034e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.348" endtime="20201112 12:42:59.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.344" endtime="20201112 12:42:59.351"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.353" endtime="20201112 12:42:59.354"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.357" endtime="20201112 12:42:59.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.355" endtime="20201112 12:42:59.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.352" endtime="20201112 12:42:59.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.989" endtime="20201112 12:42:59.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.989" endtime="20201112 12:42:59.377"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.386" endtime="20201112 12:42:59.401"></status>
</kw>
<msg timestamp="20201112 12:42:59.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.384" endtime="20201112 12:42:59.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.402" endtime="20201112 12:42:59.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.405" endtime="20201112 12:42:59.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.382" endtime="20201112 12:42:59.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.380" endtime="20201112 12:42:59.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.414" endtime="20201112 12:42:59.698"></status>
</kw>
<msg timestamp="20201112 12:42:59.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:59.413" endtime="20201112 12:42:59.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02182575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:59.702" endtime="20201112 12:42:59.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.711" endtime="20201112 12:42:59.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.410" endtime="20201112 12:42:59.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.409" endtime="20201112 12:42:59.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.717" level="INFO">${RESULT} = [{'time': 0.02182575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6014000000001286e-05, 'source_diff': 2.6014000000001286e-05}, {'time': 0.021853403, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:59.714" endtime="20201112 12:42:59.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.730" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:42:59.718" endtime="20201112 12:42:59.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.735" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.734" endtime="20201112 12:42:59.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.737" level="INFO">VALUE: [2.6014000000001286e-05, 2.5819999999999316e-05, 2.5347999999997956e-05, 2.5582999999999162e-05, 2.5832999999999412e-05, 2.5360999999998052e-05, 2.5596999999998732e-05, 2.5818999999999842e-05, 2.537499999999762e-05, 2.5596999999998732e-05, 2.5776999999997663e-05, 2.540300000000023e-05, 2.5818999999999842e-05, 2.5818999999999842e-05, 2.5583999999998636e-05, 2.5304999999999772e-05, 2.5583999999998636e-05, 2.5596999999998732e-05, 2.5582999999999162e-05, 2.5304999999999772e-05, 2.538900000000066e-05, 2.5318999999999342e-05, 2.5848000000001925e-05, 2.512499999999737e-05, 2.5805999999999746e-05, 2.536100000000152e-05, 2.5597999999998206e-05, 2.5834000000002355e-05, 2.5584000000002105e-05, 2.5332999999998912e-05, 2.561100000000177e-05, 2.5596999999998732e-05, 2.5834000000002355e-05, 2.536100000000152e-05, 2.5833999999998886e-05, 2.536100000000152e-05, 2.5832999999999412e-05, 2.568099999999962e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.5596999999998732e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.536100000000152e-05, 2.538900000000066e-05, 2.536100000000152e-05, 2.5832999999999412e-05, 2.5346999999998482e-05, 2.5387999999997718e-05, 2.5624999999997872e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.736" endtime="20201112 12:42:59.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.731" endtime="20201112 12:42:59.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.741" endtime="20201112 12:42:59.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.744" endtime="20201112 12:42:59.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.743" endtime="20201112 12:42:59.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.739" endtime="20201112 12:42:59.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.378" endtime="20201112 12:42:59.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.378" endtime="20201112 12:42:59.765"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.773" endtime="20201112 12:42:59.789"></status>
</kw>
<msg timestamp="20201112 12:42:59.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.772" endtime="20201112 12:42:59.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.792" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.790" endtime="20201112 12:42:59.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.793" endtime="20201112 12:42:59.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.769" endtime="20201112 12:42:59.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.767" endtime="20201112 12:42:59.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.802" endtime="20201112 12:43:00.088"></status>
</kw>
<msg timestamp="20201112 12:43:00.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.801" endtime="20201112 12:43:00.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021686194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.092" endtime="20201112 12:43:00.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.100" endtime="20201112 12:43:00.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.798" endtime="20201112 12:43:00.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.797" endtime="20201112 12:43:00.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.107" level="INFO">${RESULT} = [{'time': 0.021686194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6958000000000537e-05, 'source_diff': 2.6958000000000537e-05}, {'time': 0.021714847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.103" endtime="20201112 12:43:00.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.120" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.108" endtime="20201112 12:43:00.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.125" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.124" endtime="20201112 12:43:00.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.127" level="INFO">VALUE: [2.6958000000000537e-05, 2.6763999999998567e-05, 2.6554999999997553e-05, 2.6527000000001882e-05, 2.6319000000000342e-05, 2.6319000000000342e-05, 2.6541000000001452e-05, 2.6235999999998927e-05, 2.6763000000002563e-05, 2.6833000000000412e-05, 2.6542000000000926e-05, 2.6776999999998663e-05, 2.6792000000001176e-05, 2.634700000000295e-05, 2.6276999999998163e-05, 2.6304999999997303e-05, 2.6763999999998567e-05, 2.6554999999997553e-05, 2.6485999999999177e-05, 2.6305000000000772e-05, 2.6527000000001882e-05, 2.6598000000002675e-05, 2.6819000000000842e-05, 2.6541999999997457e-05, 2.6528000000001356e-05, 2.6776999999998663e-05, 2.6540999999997983e-05, 2.6514000000001786e-05, 2.6290999999997733e-05, 2.6778000000001606e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.6528000000001356e-05, 2.6556000000000496e-05, 2.6542000000000926e-05, 2.6305000000000772e-05, 2.6542000000000926e-05, 2.6596999999999732e-05, 2.6542000000000926e-05, 2.6542000000000926e-05, 2.6541999999997457e-05, 2.6236000000002396e-05, 2.6764000000002036e-05, 2.6778000000001606e-05, 2.6306000000000246e-05, 2.6763999999998567e-05, 2.6458000000000037e-05, 2.6527999999997887e-05, 2.6556000000000496e-05, 2.6570000000000066e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.126" endtime="20201112 12:43:00.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.121" endtime="20201112 12:43:00.128"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.131" endtime="20201112 12:43:00.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.134" endtime="20201112 12:43:00.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.132" endtime="20201112 12:43:00.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.129" endtime="20201112 12:43:00.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.766" endtime="20201112 12:43:00.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.765" endtime="20201112 12:43:00.155"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.163" endtime="20201112 12:43:00.179"></status>
</kw>
<msg timestamp="20201112 12:43:00.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.162" endtime="20201112 12:43:00.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.180" endtime="20201112 12:43:00.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.182" endtime="20201112 12:43:00.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.159" endtime="20201112 12:43:00.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.157" endtime="20201112 12:43:00.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.192" endtime="20201112 12:43:00.477"></status>
</kw>
<msg timestamp="20201112 12:43:00.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.191" endtime="20201112 12:43:00.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.481" endtime="20201112 12:43:00.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.489" endtime="20201112 12:43:00.491"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.188" endtime="20201112 12:43:00.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.187" endtime="20201112 12:43:00.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.496" level="INFO">${RESULT} = [{'time': 0.021755833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.021785542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.493" endtime="20201112 12:43:00.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.509" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.497" endtime="20201112 12:43:00.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.514" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.513" endtime="20201112 12:43:00.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.516" level="INFO">VALUE: [2.8138999999999942e-05, 2.820900000000126e-05, 2.7486000000000177e-05, 2.7499999999999747e-05, 2.747300000000008e-05, 2.7235999999999927e-05, 2.7486000000000177e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.7444000000001467e-05, 2.7499999999999747e-05, 2.7722000000000857e-05, 2.7472000000000607e-05, 2.7485999999996708e-05, 2.745900000000051e-05, 2.7249999999999497e-05, 2.7736000000000427e-05, 2.7471999999997138e-05, 2.7707999999997818e-05, 2.7722000000000857e-05, 2.7486000000000177e-05, 2.7500000000003216e-05, 2.8013999999999817e-05, 2.768100000000162e-05, 2.7471999999997138e-05, 2.7707999999997818e-05, 2.7707999999997818e-05, 2.7722000000000857e-05, 2.7722000000000857e-05, 2.7777999999999137e-05, 2.7722000000000857e-05, 2.7235999999999927e-05, 2.7708000000001287e-05, 2.7486000000000177e-05, 2.7722000000000857e-05, 2.7499999999999747e-05, 2.7499999999999747e-05, 2.7486000000000177e-05, 2.7222000000000357e-05, 2.7486000000000177e-05, 2.7416000000002327e-05, 2.7250000000002966e-05, 2.740299999999876e-05, 2.7486000000000177e-05, 2.744499999999747e-05, 2.7472000000000607e-05, 2.7512999999999843e-05, 2.7249999999999497e-05, 2.7791999999998707e-05, 2.7235999999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.515" endtime="20201112 12:43:00.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.510" endtime="20201112 12:43:00.517"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.520" endtime="20201112 12:43:00.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.523" endtime="20201112 12:43:00.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.521" endtime="20201112 12:43:00.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.518" endtime="20201112 12:43:00.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.156" endtime="20201112 12:43:00.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.155" endtime="20201112 12:43:00.544"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.552" endtime="20201112 12:43:00.567"></status>
</kw>
<msg timestamp="20201112 12:43:00.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.551" endtime="20201112 12:43:00.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.569" endtime="20201112 12:43:00.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.571" endtime="20201112 12:43:00.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.548" endtime="20201112 12:43:00.574"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.546" endtime="20201112 12:43:00.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.581" endtime="20201112 12:43:00.866"></status>
</kw>
<msg timestamp="20201112 12:43:00.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.580" endtime="20201112 12:43:00.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021773458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.870" endtime="20201112 12:43:00.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.879" endtime="20201112 12:43:00.880"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.577" endtime="20201112 12:43:00.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.575" endtime="20201112 12:43:00.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.885" level="INFO">${RESULT} = [{'time': 0.021773458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9332999999999443e-05, 'source_diff': 2.9332999999999443e-05}, {'time': 0.021804236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.882" endtime="20201112 12:43:00.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.900" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:00.886" endtime="20201112 12:43:00.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.904" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.903" endtime="20201112 12:43:00.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.906" level="INFO">VALUE: [2.9332999999999443e-05, 2.8903000000000262e-05, 2.8194000000002217e-05, 2.868099999999915e-05, 2.841699999999933e-05, 2.868099999999915e-05, 2.8429999999999428e-05, 2.84309999999989e-05, 2.8666999999999582e-05, 2.868100000000262e-05, 2.8429999999999428e-05, 2.8679999999999678e-05, 2.8707999999998818e-05, 2.8443999999998998e-05, 2.8666999999999582e-05, 2.8250000000000497e-05, 2.869499999999872e-05, 2.843100000000237e-05, 2.8208000000001787e-05, 2.8444000000002467e-05, 2.866700000000305e-05, 2.84309999999989e-05, 2.8653000000000012e-05, 2.8666999999999582e-05, 2.8194000000002217e-05, 2.8666000000000108e-05, 2.8429999999999428e-05, 2.84309999999989e-05, 2.868099999999915e-05, 2.844500000000194e-05, 2.8889000000000692e-05, 2.8653000000000012e-05, 2.8903000000000262e-05, 2.866700000000305e-05, 2.8402999999999762e-05, 2.8888999999997222e-05, 2.843100000000237e-05, 2.8666999999999582e-05, 2.843100000000237e-05, 2.8165999999999608e-05, 2.844500000000194e-05, 2.8402999999999762e-05, 2.8679999999999678e-05, 2.8207999999998318e-05, 2.8444000000002467e-05, 2.8666999999999582e-05, 2.818099999999865e-05, 2.8653000000000012e-05, 2.8888000000001218e-05, 2.8666000000000108e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.905" endtime="20201112 12:43:00.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.900" endtime="20201112 12:43:00.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.910" endtime="20201112 12:43:00.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.913" endtime="20201112 12:43:00.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.912" endtime="20201112 12:43:00.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.908" endtime="20201112 12:43:00.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.545" endtime="20201112 12:43:00.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.544" endtime="20201112 12:43:00.934"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.942" endtime="20201112 12:43:00.958"></status>
</kw>
<msg timestamp="20201112 12:43:00.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.941" endtime="20201112 12:43:00.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.960" endtime="20201112 12:43:00.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.962" endtime="20201112 12:43:00.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.938" endtime="20201112 12:43:00.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.936" endtime="20201112 12:43:00.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.972" endtime="20201112 12:43:01.258"></status>
</kw>
<msg timestamp="20201112 12:43:01.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:00.971" endtime="20201112 12:43:01.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021826264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021857, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:01.262" endtime="20201112 12:43:01.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.270" endtime="20201112 12:43:01.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.968" endtime="20201112 12:43:01.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.966" endtime="20201112 12:43:01.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.277" level="INFO">${RESULT} = [{'time': 0.021857, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073599999999996e-05, 'source_diff': 3.073599999999996e-05}, {'time': 0.021888694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:01.274" endtime="20201112 12:43:01.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.290" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.278" endtime="20201112 12:43:01.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.295" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.294" endtime="20201112 12:43:01.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.297" level="INFO">VALUE: [3.073599999999996e-05, 3.0096999999999763e-05, 2.9596999999999263e-05, 2.9624999999998403e-05, 2.9375000000001622e-05, 2.9389000000001192e-05, 2.9153000000000512e-05, 2.9582999999999693e-05, 2.9124999999997903e-05, 2.9917000000000832e-05, 2.9375000000001622e-05, 2.9612000000001776e-05, 2.9596999999999263e-05, 2.9375000000001622e-05, 2.9846999999999513e-05, 2.9361000000002052e-05, 2.9360999999998583e-05, 2.9375000000001622e-05, 2.9361000000002052e-05, 2.9139000000000942e-05, 2.9375000000001622e-05, 2.9375000000001622e-05, 2.9846999999999513e-05, 2.9374999999998153e-05, 2.9596999999999263e-05, 2.9610999999998833e-05, 2.9847999999998986e-05, 2.9846999999999513e-05, 2.9611000000002302e-05, 2.9374999999998153e-05, 2.9834000000002886e-05, 2.9610999999998833e-05, 2.9596999999999263e-05, 2.9846999999999513e-05, 2.9583999999999167e-05, 2.9610999999998833e-05, 2.9403000000000762e-05, 2.9374999999998153e-05, 2.9832999999999943e-05, 2.9764000000001567e-05, 2.9582999999999693e-05, 2.9832999999999943e-05, 2.9610999999998833e-05, 2.9625000000001872e-05, 2.9848000000002456e-05, 2.9848000000002456e-05, 2.9832999999999943e-05, 2.9068999999999623e-05, 2.9375000000001622e-05, 2.9374999999998153e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.296" endtime="20201112 12:43:01.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.291" endtime="20201112 12:43:01.298"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.301" endtime="20201112 12:43:01.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.304" endtime="20201112 12:43:01.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.302" endtime="20201112 12:43:01.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.299" endtime="20201112 12:43:01.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.935" endtime="20201112 12:43:01.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.934" endtime="20201112 12:43:01.325"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.333" endtime="20201112 12:43:01.349"></status>
</kw>
<msg timestamp="20201112 12:43:01.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.331" endtime="20201112 12:43:01.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.351" endtime="20201112 12:43:01.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.353" endtime="20201112 12:43:01.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.329" endtime="20201112 12:43:01.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.327" endtime="20201112 12:43:01.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.363" endtime="20201112 12:43:01.650"></status>
</kw>
<msg timestamp="20201112 12:43:01.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.361" endtime="20201112 12:43:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022035847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.654" endtime="20201112 12:43:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.662" endtime="20201112 12:43:01.664"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.359" endtime="20201112 12:43:01.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.357" endtime="20201112 12:43:01.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.669" level="INFO">${RESULT} = [{'time': 0.022067069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.122200000000089e-05, 'source_diff': 3.122200000000089e-05}, {'time': 0.022099708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.666" endtime="20201112 12:43:01.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.682" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:01.670" endtime="20201112 12:43:01.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.687" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.686" endtime="20201112 12:43:01.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.689" level="INFO">VALUE: [3.122200000000089e-05, 3.1040999999999014e-05, 3.077799999999867e-05, 3.079200000000171e-05, 3.104200000000196e-05, 3.0304999999997834e-05, 3.077799999999867e-05, 3.0305000000001303e-05, 3.052799999999842e-05, 3.080600000000128e-05, 3.0554999999998084e-05, 3.05700000000006e-05, 3.0320000000000347e-05, 3.055500000000155e-05, 3.0333000000000443e-05, 3.0776999999999194e-05, 3.058300000000069e-05, 3.055599999999756e-05, 3.055599999999756e-05, 3.0818999999997904e-05, 3.0319000000000873e-05, 3.054199999999799e-05, 3.0319999999996877e-05, 3.0790999999998764e-05, 3.0319000000000873e-05, 3.080599999999781e-05, 3.079199999999824e-05, 3.05700000000006e-05, 3.0292000000001207e-05, 3.063899999999897e-05, 3.054100000000198e-05, 3.0319999999996877e-05, 3.054200000000146e-05, 3.0319000000000873e-05, 3.07639999999991e-05, 3.077800000000214e-05, 3.0540999999998514e-05, 3.055600000000103e-05, 3.058300000000069e-05, 3.0319000000000873e-05, 3.077799999999867e-05, 3.0776999999999194e-05, 3.0320000000000347e-05, 3.0333000000000443e-05, 3.079100000000223e-05, 3.0304999999997834e-05, 3.0568999999997654e-05, 3.076400000000257e-05, 3.0306000000000777e-05, 3.0554999999998084e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.688" endtime="20201112 12:43:01.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.683" endtime="20201112 12:43:01.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.693" endtime="20201112 12:43:01.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.696" endtime="20201112 12:43:01.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.695" endtime="20201112 12:43:01.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.691" endtime="20201112 12:43:01.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.326" endtime="20201112 12:43:01.717"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.325" endtime="20201112 12:43:01.717"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.725" endtime="20201112 12:43:01.741"></status>
</kw>
<msg timestamp="20201112 12:43:01.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.724" endtime="20201112 12:43:01.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.742" endtime="20201112 12:43:01.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.745" endtime="20201112 12:43:01.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.721" endtime="20201112 12:43:01.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.719" endtime="20201112 12:43:01.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.755" endtime="20201112 12:43:02.040"></status>
</kw>
<msg timestamp="20201112 12:43:02.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.753" endtime="20201112 12:43:02.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021763639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.045" endtime="20201112 12:43:02.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.053" endtime="20201112 12:43:02.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.751" endtime="20201112 12:43:02.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.749" endtime="20201112 12:43:02.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.059" level="INFO">${RESULT} = [{'time': 0.021795792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.215300000000004e-05, 'source_diff': 3.215300000000004e-05}, {'time': 0.021828431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.056" endtime="20201112 12:43:02.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.060" endtime="20201112 12:43:02.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.077" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.076" endtime="20201112 12:43:02.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.079" level="INFO">VALUE: [3.215300000000004e-05, 3.125000000000003e-05, 3.195900000000154e-05, 3.150000000000028e-05, 3.173700000000043e-05, 3.173599999999749e-05, 3.148599999999724e-05, 3.166699999999911e-05, 3.127799999999917e-05, 3.168099999999868e-05, 3.170900000000129e-05, 3.173700000000043e-05, 3.150000000000028e-05, 3.150000000000028e-05, 3.127799999999917e-05, 3.151399999999985e-05, 3.12639999999996e-05, 3.190299999999979e-05, 3.127799999999917e-05, 3.151399999999985e-05, 3.127800000000264e-05, 3.170800000000182e-05, 3.150000000000028e-05, 3.19579999999986e-05, 3.129199999999874e-05, 3.172199999999792e-05, 3.144399999999853e-05, 3.194399999999903e-05, 3.1332999999997974e-05, 3.194399999999903e-05, 3.148599999999724e-05, 3.144500000000147e-05, 3.150000000000028e-05, 3.202799999999992e-05, 3.170799999999835e-05, 3.151399999999985e-05, 3.148700000000018e-05, 3.173700000000043e-05, 3.195800000000207e-05, 3.177799999999967e-05, 3.150000000000028e-05, 3.12639999999996e-05, 3.170900000000129e-05, 3.168100000000215e-05, 3.155599999999856e-05, 3.150000000000028e-05, 3.173700000000043e-05, 3.174999999999706e-05, 3.151399999999985e-05, 3.194399999999903e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.078" endtime="20201112 12:43:02.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.073" endtime="20201112 12:43:02.081"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.083" endtime="20201112 12:43:02.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.086" endtime="20201112 12:43:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.085" endtime="20201112 12:43:02.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.081" endtime="20201112 12:43:02.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.718" endtime="20201112 12:43:02.107"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.717" endtime="20201112 12:43:02.107"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.116" endtime="20201112 12:43:02.131"></status>
</kw>
<msg timestamp="20201112 12:43:02.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.114" endtime="20201112 12:43:02.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.133" endtime="20201112 12:43:02.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.135" endtime="20201112 12:43:02.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.112" endtime="20201112 12:43:02.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.110" endtime="20201112 12:43:02.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.145" endtime="20201112 12:43:02.429"></status>
</kw>
<msg timestamp="20201112 12:43:02.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.143" endtime="20201112 12:43:02.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021746431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021787736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.434" endtime="20201112 12:43:02.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.442" endtime="20201112 12:43:02.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.141" endtime="20201112 12:43:02.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.139" endtime="20201112 12:43:02.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.448" level="INFO">${RESULT} = [{'time': 0.021787736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1304999999998426e-05, 'source_diff': 4.1304999999998426e-05}, {'time': 0.021831736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:02.445" endtime="20201112 12:43:02.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.463" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.449" endtime="20201112 12:43:02.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.467" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.466" endtime="20201112 12:43:02.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.469" level="INFO">VALUE: [4.1304999999998426e-05, 4.176399999999969e-05, 4.1416999999998455e-05, 4.1652999999999135e-05, 4.1861000000000675e-05, 4.145800000000116e-05, 4.1611000000000425e-05, 4.1681000000001744e-05, 4.155599999999815e-05, 4.1417000000001924e-05, 4.130600000000137e-05, 4.1445000000001064e-05, 4.14860000000003e-05, 4.1652999999999135e-05, 4.1652999999999135e-05, 4.1361000000000175e-05, 4.170799999999794e-05, 4.166599999999923e-05, 4.1611000000000425e-05, 4.144400000000159e-05, 4.1652999999999135e-05, 4.136199999999965e-05, 4.1652999999999135e-05, 4.1473000000000204e-05, 4.1555000000002146e-05, 4.152799999999901e-05, 4.1596999999997386e-05, 4.1569000000001716e-05, 4.1875000000000245e-05, 4.1554999999998676e-05, 4.169400000000184e-05, 4.1875000000000245e-05, 4.190199999999991e-05, 4.141600000000245e-05, 4.166599999999923e-05, 4.1860999999997206e-05, 4.151399999999944e-05, 4.1347000000000605e-05, 4.1597000000000856e-05, 4.1847000000001106e-05, 4.183399999999754e-05, 4.1347000000000605e-05, 4.1847000000001106e-05, 4.1597000000000856e-05, 4.179199999999883e-05, 4.157000000000119e-05, 4.197200000000123e-05, 4.176400000000316e-05, 4.147200000000073e-05, 4.154199999999858e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.468" endtime="20201112 12:43:02.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.463" endtime="20201112 12:43:02.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.473" endtime="20201112 12:43:02.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.476" endtime="20201112 12:43:02.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.475" endtime="20201112 12:43:02.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.471" endtime="20201112 12:43:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.108" endtime="20201112 12:43:02.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.107" endtime="20201112 12:43:02.497"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.505" endtime="20201112 12:43:02.522"></status>
</kw>
<msg timestamp="20201112 12:43:02.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.504" endtime="20201112 12:43:02.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.523" endtime="20201112 12:43:02.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.526" endtime="20201112 12:43:02.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.501" endtime="20201112 12:43:02.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.499" endtime="20201112 12:43:02.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.536" endtime="20201112 12:43:02.820"></status>
</kw>
<msg timestamp="20201112 12:43:02.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.534" endtime="20201112 12:43:02.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021852472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021894833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.824" endtime="20201112 12:43:02.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.832" endtime="20201112 12:43:02.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.531" endtime="20201112 12:43:02.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.530" endtime="20201112 12:43:02.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.839" level="INFO">${RESULT} = [{'time': 0.021894833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2360999999997706e-05, 'source_diff': 4.2360999999997706e-05}, {'time': 0.021939819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:02.836" endtime="20201112 12:43:02.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.852" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:02.840" endtime="20201112 12:43:02.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.856" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.855" endtime="20201112 12:43:02.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.859" level="INFO">VALUE: [4.2360999999997706e-05, 4.2610999999997956e-05, 4.277699999999732e-05, 4.266600000000023e-05, 4.24860000000013e-05, 4.2818999999999496e-05, 4.2804999999999926e-05, 4.2875000000001245e-05, 4.273600000000155e-05, 4.2875000000001245e-05, 4.277800000000026e-05, 4.245799999999869e-05, 4.2568999999999246e-05, 4.2416999999999455e-05, 4.2568999999999246e-05, 4.254199999999958e-05, 4.2360999999997706e-05, 4.2916999999999955e-05, 4.2346999999998136e-05, 4.2833000000002536e-05, 4.256999999999872e-05, 4.254199999999958e-05, 4.2402999999999885e-05, 4.2653000000000135e-05, 4.2625000000000995e-05, 4.280600000000287e-05, 4.266600000000023e-05, 4.2832999999999066e-05, 4.265200000000066e-05, 4.2166999999999205e-05, 4.283399999999854e-05, 4.2472999999997735e-05, 4.261199999999743e-05, 4.274999999999765e-05, 4.2624999999997526e-05, 4.250000000000087e-05, 4.242999999999955e-05, 4.2610999999997956e-05, 4.24860000000013e-05, 4.273600000000155e-05, 4.2389000000000315e-05, 4.2861000000001676e-05, 4.242999999999955e-05, 4.275000000000112e-05, 4.269399999999937e-05, 4.2804999999999926e-05, 4.2653000000000135e-05, 4.252800000000001e-05, 4.242999999999955e-05, 4.277800000000026e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.858" endtime="20201112 12:43:02.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.853" endtime="20201112 12:43:02.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.862" endtime="20201112 12:43:02.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.866" endtime="20201112 12:43:02.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.864" endtime="20201112 12:43:02.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.861" endtime="20201112 12:43:02.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.498" endtime="20201112 12:43:02.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.497" endtime="20201112 12:43:02.887"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.896" endtime="20201112 12:43:02.912"></status>
</kw>
<msg timestamp="20201112 12:43:02.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.894" endtime="20201112 12:43:02.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.914" endtime="20201112 12:43:02.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.916" endtime="20201112 12:43:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.891" endtime="20201112 12:43:02.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.889" endtime="20201112 12:43:02.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.926" endtime="20201112 12:43:03.211"></status>
</kw>
<msg timestamp="20201112 12:43:03.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.924" endtime="20201112 12:43:03.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022849528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022892736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.215" endtime="20201112 12:43:03.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.223" endtime="20201112 12:43:03.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.922" endtime="20201112 12:43:03.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.920" endtime="20201112 12:43:03.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.230" level="INFO">${RESULT} = [{'time': 0.022892736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.320799999999944e-05, 'source_diff': 4.320799999999944e-05}, {'time': 0.022938736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.227" endtime="20201112 12:43:03.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.243" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.231" endtime="20201112 12:43:03.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.248" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.247" endtime="20201112 12:43:03.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.250" level="INFO">VALUE: [4.320799999999944e-05, 4.3805000000000927e-05, 4.34999999999984e-05, 4.3653000000001135e-05, 4.3389000000001315e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.3388999999997846e-05, 4.351399999999797e-05, 4.370799999999994e-05, 4.351400000000144e-05, 4.3444999999999595e-05, 4.3610999999998956e-05, 4.3610999999998956e-05, 4.3861000000002676e-05, 4.3861000000002676e-05, 4.354199999999711e-05, 4.374999999999865e-05, 4.3473000000002204e-05, 4.3459000000002634e-05, 4.376299999999875e-05, 4.3638999999998096e-05, 4.3722999999998985e-05, 4.3583000000003286e-05, 4.372199999999951e-05, 4.377699999999832e-05, 4.3332999999999566e-05, 4.3596999999999386e-05, 4.350000000000187e-05, 4.3388999999997846e-05, 4.3874999999998776e-05, 4.350000000000187e-05, 4.373600000000255e-05, 4.3487000000001774e-05, 4.3860999999999206e-05, 4.36800000000008e-05, 4.3861000000002676e-05, 4.3360999999998706e-05, 4.3610999999998956e-05, 4.3931000000000525e-05, 4.376400000000169e-05, 4.3860999999999206e-05, 4.355600000000015e-05, 4.3624999999998526e-05, 4.381999999999997e-05, 4.3625000000001996e-05, 4.3431000000000025e-05, 4.381999999999997e-05, 4.3653000000001135e-05, 4.3875000000002246e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.249" endtime="20201112 12:43:03.251"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.244" endtime="20201112 12:43:03.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.253" endtime="20201112 12:43:03.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.257" endtime="20201112 12:43:03.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.255" endtime="20201112 12:43:03.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.252" endtime="20201112 12:43:03.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.887" endtime="20201112 12:43:03.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.887" endtime="20201112 12:43:03.278"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.286" endtime="20201112 12:43:03.302"></status>
</kw>
<msg timestamp="20201112 12:43:03.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.284" endtime="20201112 12:43:03.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.303" endtime="20201112 12:43:03.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.306" endtime="20201112 12:43:03.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.282" endtime="20201112 12:43:03.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.280" endtime="20201112 12:43:03.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.315" endtime="20201112 12:43:03.600"></status>
</kw>
<msg timestamp="20201112 12:43:03.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.314" endtime="20201112 12:43:03.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021916972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.604" endtime="20201112 12:43:03.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.612" endtime="20201112 12:43:03.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.311" endtime="20201112 12:43:03.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.310" endtime="20201112 12:43:03.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.619" level="INFO">${RESULT} = [{'time': 0.021961056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.408399999999979e-05, 'source_diff': 4.408399999999979e-05}, {'time': 0.022008056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.615" endtime="20201112 12:43:03.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.632" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:03.620" endtime="20201112 12:43:03.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.636" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.635" endtime="20201112 12:43:03.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.639" level="INFO">VALUE: [4.408399999999979e-05, 4.4375000000002746e-05, 4.4902999999998916e-05, 4.473600000000008e-05, 4.466599999999876e-05, 4.452799999999854e-05, 4.4695000000000845e-05, 4.4388999999998846e-05, 4.4403000000001885e-05, 4.438799999999937e-05, 4.4583000000000816e-05, 4.473600000000008e-05, 4.465200000000266e-05, 4.4597000000000386e-05, 4.452800000000201e-05, 4.448599999999983e-05, 4.443000000000155e-05, 4.4597000000000386e-05, 4.4610999999999956e-05, 4.472200000000051e-05, 4.476400000000269e-05, 4.474999999999965e-05, 4.470800000000094e-05, 4.4360999999999706e-05, 4.4902999999998916e-05, 4.4847000000000636e-05, 4.4374999999999276e-05, 4.4360999999999706e-05, 4.4555000000001677e-05, 4.472200000000051e-05, 4.457000000000072e-05, 4.44999999999994e-05, 4.4709000000000415e-05, 4.4861000000000206e-05, 4.4610999999999956e-05, 4.4638999999999096e-05, 4.4624999999999526e-05, 4.474999999999965e-05, 4.4402999999998416e-05, 4.4639000000002566e-05, 4.474999999999965e-05, 4.458400000000029e-05, 4.467999999999833e-05, 4.480500000000193e-05, 4.4819000000001497e-05, 4.447200000000026e-05, 4.4847000000000636e-05, 4.442999999999808e-05, 4.472200000000051e-05, 4.477699999999932e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.637" endtime="20201112 12:43:03.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.633" endtime="20201112 12:43:03.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.642" endtime="20201112 12:43:03.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.646" endtime="20201112 12:43:03.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.644" endtime="20201112 12:43:03.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.641" endtime="20201112 12:43:03.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.278" endtime="20201112 12:43:03.666"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.278" endtime="20201112 12:43:03.666"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.675" endtime="20201112 12:43:03.691"></status>
</kw>
<msg timestamp="20201112 12:43:03.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.673" endtime="20201112 12:43:03.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.694" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.693" endtime="20201112 12:43:03.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.695" endtime="20201112 12:43:03.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.671" endtime="20201112 12:43:03.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.669" endtime="20201112 12:43:03.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.705" endtime="20201112 12:43:03.990"></status>
</kw>
<msg timestamp="20201112 12:43:03.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:03.703" endtime="20201112 12:43:03.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0217735, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021819347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:03.995" endtime="20201112 12:43:04.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.003" endtime="20201112 12:43:04.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.701" endtime="20201112 12:43:04.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.699" endtime="20201112 12:43:04.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.010" level="INFO">${RESULT} = [{'time': 0.021819347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.584699999999817e-05, 'source_diff': 4.584699999999817e-05}, {'time': 0.021867319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.006" endtime="20201112 12:43:04.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.024" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.011" endtime="20201112 12:43:04.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.028" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.027" endtime="20201112 12:43:04.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.031" level="INFO">VALUE: [4.584699999999817e-05, 4.53329999999981e-05, 4.577700000000032e-05, 4.551399999999997e-05, 4.58190000000025e-05, 4.5833000000002067e-05, 4.587499999999731e-05, 4.5695000000001845e-05, 4.58190000000025e-05, 4.5652999999999666e-05, 4.555499999999921e-05, 4.579199999999936e-05, 4.570799999999847e-05, 4.572200000000151e-05, 4.555600000000215e-05, 4.5680999999998806e-05, 4.580599999999893e-05, 4.5680999999998806e-05, 4.555499999999921e-05, 4.5445000000001595e-05, 4.548600000000083e-05, 4.577799999999979e-05, 4.5889000000000346e-05, 4.583400000000154e-05, 4.5652999999999666e-05, 4.5459000000001165e-05, 4.5902999999999916e-05, 4.548600000000083e-05, 4.5653000000003136e-05, 4.558299999999835e-05, 4.544400000000212e-05, 4.552799999999954e-05, 4.5458999999997696e-05, 4.555599999999868e-05, 4.580499999999946e-05, 4.547200000000126e-05, 4.570800000000194e-05, 4.5875000000000776e-05, 4.559699999999792e-05, 4.5402999999999416e-05, 4.554099999999964e-05, 4.5847000000001636e-05, 4.575000000000065e-05, 4.541599999999951e-05, 4.542999999999908e-05, 4.551399999999997e-05, 4.581899999999903e-05, 4.5902999999999916e-05, 4.554199999999911e-05, 4.551399999999997e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.029" endtime="20201112 12:43:04.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.025" endtime="20201112 12:43:04.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.040" endtime="20201112 12:43:04.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.044" endtime="20201112 12:43:04.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.042" endtime="20201112 12:43:04.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.039" endtime="20201112 12:43:04.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.667" endtime="20201112 12:43:04.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.667" endtime="20201112 12:43:04.064"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.073" endtime="20201112 12:43:04.089"></status>
</kw>
<msg timestamp="20201112 12:43:04.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.071" endtime="20201112 12:43:04.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.091" endtime="20201112 12:43:04.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.093" endtime="20201112 12:43:04.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.069" endtime="20201112 12:43:04.096"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.067" endtime="20201112 12:43:04.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.103" endtime="20201112 12:43:04.388"></status>
</kw>
<msg timestamp="20201112 12:43:04.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.101" endtime="20201112 12:43:04.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022074028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022120792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.392" endtime="20201112 12:43:04.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.401" endtime="20201112 12:43:04.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.099" endtime="20201112 12:43:04.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.097" endtime="20201112 12:43:04.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.407" level="INFO">${RESULT} = [{'time': 0.022120792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.676400000000122e-05, 'source_diff': 4.676400000000122e-05}, {'time': 0.022169806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.404" endtime="20201112 12:43:04.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.420" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.408" endtime="20201112 12:43:04.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.425" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.424" endtime="20201112 12:43:04.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.427" level="INFO">VALUE: [4.676400000000122e-05, 4.6625000000001526e-05, 4.672199999999904e-05, 4.6667000000000236e-05, 4.640200000000094e-05, 4.641599999999704e-05, 4.645799999999922e-05, 4.668000000000033e-05, 4.665200000000119e-05, 4.670799999999947e-05, 4.647199999999879e-05, 4.644399999999965e-05, 4.6333000000002567e-05, 4.6889000000001346e-05, 4.677800000000079e-05, 4.636099999999824e-05, 4.673599999999861e-05, 4.666600000000076e-05, 4.652800000000054e-05, 4.6653000000000666e-05, 4.6889000000001346e-05, 4.677800000000079e-05, 4.656899999999978e-05, 4.6583000000002817e-05, 4.673600000000208e-05, 4.652799999999707e-05, 4.670799999999947e-05, 4.677799999999732e-05, 4.68329999999996e-05, 4.6903000000000916e-05, 4.6139000000000596e-05, 4.673599999999861e-05, 4.686099999999874e-05, 4.659799999999839e-05, 4.6389000000000846e-05, 4.6722999999998516e-05, 4.679200000000036e-05, 4.640200000000094e-05, 4.666600000000076e-05, 4.6416999999999986e-05, 4.637499999999781e-05, 4.673599999999861e-05, 4.652700000000107e-05, 4.677700000000132e-05, 4.659699999999892e-05, 4.691600000000101e-05, 4.68329999999996e-05, 4.648599999999836e-05, 4.652800000000054e-05, 4.6597000000002387e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.426" endtime="20201112 12:43:04.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.421" endtime="20201112 12:43:04.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.431" endtime="20201112 12:43:04.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.434" endtime="20201112 12:43:04.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.433" endtime="20201112 12:43:04.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.429" endtime="20201112 12:43:04.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.065" endtime="20201112 12:43:04.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.065" endtime="20201112 12:43:04.455"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.463" endtime="20201112 12:43:04.480"></status>
</kw>
<msg timestamp="20201112 12:43:04.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.462" endtime="20201112 12:43:04.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.482" endtime="20201112 12:43:04.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.484" endtime="20201112 12:43:04.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.459" endtime="20201112 12:43:04.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.457" endtime="20201112 12:43:04.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.494" endtime="20201112 12:43:04.780"></status>
</kw>
<msg timestamp="20201112 12:43:04.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.492" endtime="20201112 12:43:04.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022180458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.784" endtime="20201112 12:43:04.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.792" endtime="20201112 12:43:04.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.490" endtime="20201112 12:43:04.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.488" endtime="20201112 12:43:04.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.799" level="INFO">${RESULT} = [{'time': 0.022180458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.780500000000146e-05, 'source_diff': 4.780500000000146e-05}, {'time': 0.022230472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.795" endtime="20201112 12:43:04.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.812" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:04.800" endtime="20201112 12:43:04.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.816" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.815" endtime="20201112 12:43:04.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.819" level="INFO">VALUE: [4.780500000000146e-05, 4.754100000000164e-05, 4.766599999999829e-05, 4.766600000000176e-05, 4.738899999999838e-05, 4.748599999999936e-05, 4.736099999999924e-05, 4.76940000000009e-05, 4.776399999999875e-05, 4.754200000000111e-05, 4.7417000000000986e-05, 4.7889000000002346e-05, 4.7375000000002276e-05, 4.755600000000068e-05, 4.772200000000004e-05, 4.7653000000001666e-05, 4.749999999999893e-05, 4.7695000000000376e-05, 4.758300000000035e-05, 4.736099999999924e-05, 4.773599999999961e-05, 4.779200000000136e-05, 4.779200000000136e-05, 4.7431000000000556e-05, 4.7486999999998836e-05, 4.783299999999713e-05, 4.773599999999961e-05, 4.748600000000283e-05, 4.786099999999974e-05, 4.755500000000121e-05, 4.7403000000001416e-05, 4.749999999999893e-05, 4.740200000000194e-05, 4.773599999999961e-05, 4.784700000000017e-05, 4.762499999999906e-05, 4.749999999999893e-05, 4.752700000000207e-05, 4.762499999999906e-05, 4.7389000000001846e-05, 4.779199999999789e-05, 4.742999999999761e-05, 4.7403000000001416e-05, 4.763899999999863e-05, 4.7611000000002957e-05, 4.7361000000002706e-05, 4.7403000000001416e-05, 4.748599999999936e-05, 4.784700000000017e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.817" endtime="20201112 12:43:04.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.813" endtime="20201112 12:43:04.820"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.822" endtime="20201112 12:43:04.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.826" endtime="20201112 12:43:04.845"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.824" endtime="20201112 12:43:04.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.821" endtime="20201112 12:43:04.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.456" endtime="20201112 12:43:04.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.455" endtime="20201112 12:43:04.846"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.855" endtime="20201112 12:43:04.871"></status>
</kw>
<msg timestamp="20201112 12:43:04.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.853" endtime="20201112 12:43:04.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.873" endtime="20201112 12:43:04.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.875" endtime="20201112 12:43:04.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.851" endtime="20201112 12:43:04.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.849" endtime="20201112 12:43:04.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.885" endtime="20201112 12:43:05.170"></status>
</kw>
<msg timestamp="20201112 12:43:05.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.883" endtime="20201112 12:43:05.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021848028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.174" endtime="20201112 12:43:05.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.183" endtime="20201112 12:43:05.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.881" endtime="20201112 12:43:05.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.879" endtime="20201112 12:43:05.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.189" level="INFO">${RESULT} = [{'time': 0.021848028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.818099999999784e-05, 'source_diff': 4.818099999999784e-05}, {'time': 0.021899028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.186" endtime="20201112 12:43:05.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.202" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.190" endtime="20201112 12:43:05.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.207" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.206" endtime="20201112 12:43:05.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.209" level="INFO">VALUE: [4.818099999999784e-05, 4.879200000000236e-05, 4.86529999999992e-05, 4.88339999999976e-05, 4.8417000000001986e-05, 4.879199999999889e-05, 4.8723000000000516e-05, 4.837499999999981e-05, 4.837499999999981e-05, 4.881999999999803e-05, 4.863899999999963e-05, 4.865199999999972e-05, 4.862500000000006e-05, 4.8375000000003276e-05, 4.817999999999836e-05, 4.837499999999981e-05, 4.86940000000019e-05, 4.876399999999975e-05, 4.876399999999975e-05, 4.845800000000122e-05, 4.859700000000092e-05, 4.863899999999963e-05, 4.870800000000147e-05, 4.852799999999907e-05, 4.837499999999981e-05, 4.86940000000019e-05, 4.875000000000018e-05, 4.848600000000036e-05, 4.852799999999907e-05, 4.840299999999895e-05, 4.8931000000002056e-05, 4.880600000000193e-05, 4.875000000000018e-05, 4.8444999999997657e-05, 4.888899999999988e-05, 4.874999999999671e-05, 4.8445000000001126e-05, 4.8709000000000946e-05, 4.85139999999995e-05, 4.834799999999667e-05, 4.86529999999992e-05, 4.866599999999929e-05, 4.838899999999938e-05, 4.863800000000015e-05, 4.849999999999993e-05, 4.88469999999977e-05, 4.838899999999938e-05, 4.816599999999879e-05, 4.890299999999945e-05, 4.891599999999954e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.208" endtime="20201112 12:43:05.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.203" endtime="20201112 12:43:05.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.213" endtime="20201112 12:43:05.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.216" endtime="20201112 12:43:05.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.215" endtime="20201112 12:43:05.236"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.211" endtime="20201112 12:43:05.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.847" endtime="20201112 12:43:05.237"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.847" endtime="20201112 12:43:05.237"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.245" endtime="20201112 12:43:05.262"></status>
</kw>
<msg timestamp="20201112 12:43:05.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.244" endtime="20201112 12:43:05.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.264" endtime="20201112 12:43:05.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.266" endtime="20201112 12:43:05.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.241" endtime="20201112 12:43:05.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.239" endtime="20201112 12:43:05.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.276" endtime="20201112 12:43:05.561"></status>
</kw>
<msg timestamp="20201112 12:43:05.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.275" endtime="20201112 12:43:05.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021797819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021846792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.566" endtime="20201112 12:43:05.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.574" endtime="20201112 12:43:05.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.272" endtime="20201112 12:43:05.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.270" endtime="20201112 12:43:05.576"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.580" level="INFO">${RESULT} = [{'time': 0.021846792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8973000000000766e-05, 'source_diff': 4.8973000000000766e-05}, {'time': 0.021898778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:05.577" endtime="20201112 12:43:05.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.595" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.581" endtime="20201112 12:43:05.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.599" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.598" endtime="20201112 12:43:05.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.601" level="INFO">VALUE: [4.8973000000000766e-05, 4.962500000000106e-05, 4.991700000000002e-05, 4.936200000000071e-05, 4.988900000000088e-05, 4.952800000000007e-05, 4.962500000000106e-05, 4.95270000000006e-05, 4.941600000000004e-05, 4.942999999999961e-05, 4.95140000000005e-05, 4.958299999999888e-05, 4.958299999999888e-05, 4.9431000000002556e-05, 4.963900000000063e-05, 4.940299999999995e-05, 4.949999999999746e-05, 4.969399999999943e-05, 4.947199999999832e-05, 4.93469999999982e-05, 4.963900000000063e-05, 4.944400000000265e-05, 4.944400000000265e-05, 4.956899999999931e-05, 4.958300000000235e-05, 4.975000000000118e-05, 4.911100000000099e-05, 4.943099999999909e-05, 4.936099999999777e-05, 4.944499999999866e-05, 4.958299999999888e-05, 4.988899999999741e-05, 4.93469999999982e-05, 4.975000000000118e-05, 4.963899999999716e-05, 4.977800000000032e-05, 4.9709000000001946e-05, 4.916699999999927e-05, 4.979100000000042e-05, 4.966600000000029e-05, 4.966600000000029e-05, 4.976400000000075e-05, 4.973600000000161e-05, 4.945799999999875e-05, 4.983299999999913e-05, 4.95140000000005e-05, 4.936099999999777e-05, 4.983299999999913e-05, 4.979100000000042e-05, 4.963899999999716e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.600" endtime="20201112 12:43:05.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.596" endtime="20201112 12:43:05.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.605" endtime="20201112 12:43:05.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.608" endtime="20201112 12:43:05.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.607" endtime="20201112 12:43:05.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.603" endtime="20201112 12:43:05.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.238" endtime="20201112 12:43:05.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.237" endtime="20201112 12:43:05.629"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.638" endtime="20201112 12:43:05.654"></status>
</kw>
<msg timestamp="20201112 12:43:05.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.636" endtime="20201112 12:43:05.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.656" endtime="20201112 12:43:05.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.658" endtime="20201112 12:43:05.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.633" endtime="20201112 12:43:05.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.631" endtime="20201112 12:43:05.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.668" endtime="20201112 12:43:05.952"></status>
</kw>
<msg timestamp="20201112 12:43:05.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.666" endtime="20201112 12:43:05.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021760708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021811542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.957" endtime="20201112 12:43:05.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.965" endtime="20201112 12:43:05.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.664" endtime="20201112 12:43:05.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.662" endtime="20201112 12:43:05.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.972" level="INFO">${RESULT} = [{'time': 0.021811542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.08339999999996e-05, 'source_diff': 5.08339999999996e-05}, {'time': 0.021864528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:05.968" endtime="20201112 12:43:05.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.985" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:05.973" endtime="20201112 12:43:05.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.989" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.988" endtime="20201112 12:43:05.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.992" level="INFO">VALUE: [5.08339999999996e-05, 5.068100000000034e-05, 5.06530000000012e-05, 5.048599999999889e-05, 5.069499999999991e-05, 5.031999999999953e-05, 5.0902000000001973e-05, 5.079199999999742e-05, 5.088899999999841e-05, 5.08339999999996e-05, 5.059799999999892e-05, 5.062499999999859e-05, 5.048599999999889e-05, 5.0388000000001903e-05, 5.030499999999702e-05, 5.041600000000104e-05, 5.080500000000099e-05, 5.077700000000185e-05, 5.036099999999877e-05, 5.063899999999816e-05, 5.043000000000061e-05, 5.079200000000089e-05, 5.05279999999976e-05, 5.044499999999966e-05, 5.05279999999976e-05, 5.062499999999859e-05, 5.073599999999914e-05, 5.066700000000077e-05, 5.058299999999988e-05, 5.047199999999932e-05, 5.073599999999914e-05, 5.074999999999871e-05, 5.041700000000052e-05, 5.031999999999953e-05, 5.075000000000218e-05, 5.088899999999841e-05, 5.079200000000089e-05, 5.074999999999871e-05, 5.068099999999687e-05, 5.08339999999996e-05, 5.08339999999996e-05, 5.044499999999966e-05, 5.0487000000001836e-05, 5.073599999999914e-05, 5.043000000000061e-05, 5.079100000000142e-05, 5.048600000000236e-05, 5.0915999999998074e-05, 5.074999999999871e-05, 5.050000000000193e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.990" endtime="20201112 12:43:05.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.986" endtime="20201112 12:43:05.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.995" endtime="20201112 12:43:05.997"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.999" endtime="20201112 12:43:06.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.997" endtime="20201112 12:43:06.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.994" endtime="20201112 12:43:06.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.630" endtime="20201112 12:43:06.019"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.629" endtime="20201112 12:43:06.020"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.028" endtime="20201112 12:43:06.045"></status>
</kw>
<msg timestamp="20201112 12:43:06.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.027" endtime="20201112 12:43:06.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.047" endtime="20201112 12:43:06.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.049" endtime="20201112 12:43:06.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.024" endtime="20201112 12:43:06.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.022" endtime="20201112 12:43:06.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.059" endtime="20201112 12:43:06.345"></status>
</kw>
<msg timestamp="20201112 12:43:06.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.058" endtime="20201112 12:43:06.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022184458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.349" endtime="20201112 12:43:06.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.357" endtime="20201112 12:43:06.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.055" endtime="20201112 12:43:06.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.053" endtime="20201112 12:43:06.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.364" level="INFO">${RESULT} = [{'time': 0.022184458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.173600000000014e-05, 'source_diff': 5.173600000000014e-05}, {'time': 0.022238458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.361" endtime="20201112 12:43:06.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.377" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.365" endtime="20201112 12:43:06.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.381" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.380" endtime="20201112 12:43:06.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.384" level="INFO">VALUE: [5.173600000000014e-05, 5.149999999999946e-05, 5.13340000000001e-05, 5.163899999999916e-05, 5.191699999999855e-05, 5.159799999999992e-05, 5.165299999999873e-05, 5.169500000000091e-05, 5.1429999999998144e-05, 5.172200000000057e-05, 5.186100000000027e-05, 5.15409999999987e-05, 5.154200000000164e-05, 5.149999999999946e-05, 5.158300000000088e-05, 5.137499999999934e-05, 5.136099999999977e-05, 5.193100000000159e-05, 5.154200000000164e-05, 5.1707999999997534e-05, 5.157000000000078e-05, 5.165299999999873e-05, 5.176399999999928e-05, 5.151399999999903e-05, 5.166700000000177e-05, 5.145800000000075e-05, 5.140300000000195e-05, 5.162499999999959e-05, 5.1471999999996854e-05, 5.140299999999848e-05, 5.163899999999916e-05, 5.179200000000189e-05, 5.13470000000002e-05, 5.179199999999842e-05, 5.172300000000005e-05, 5.162499999999959e-05, 5.151399999999903e-05, 5.176399999999928e-05, 5.177699999999938e-05, 5.190300000000245e-05, 5.1887999999999934e-05, 5.144400000000118e-05, 5.149999999999946e-05, 5.150000000000293e-05, 5.180500000000199e-05, 5.159700000000045e-05, 5.161100000000002e-05, 5.179200000000189e-05, 5.147200000000032e-05, 5.172200000000057e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.383" endtime="20201112 12:43:06.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.378" endtime="20201112 12:43:06.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.387" endtime="20201112 12:43:06.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.391" endtime="20201112 12:43:06.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.389" endtime="20201112 12:43:06.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.386" endtime="20201112 12:43:06.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.020" endtime="20201112 12:43:06.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.020" endtime="20201112 12:43:06.412"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.420" endtime="20201112 12:43:06.436"></status>
</kw>
<msg timestamp="20201112 12:43:06.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.419" endtime="20201112 12:43:06.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.437" endtime="20201112 12:43:06.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.440" endtime="20201112 12:43:06.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.416" endtime="20201112 12:43:06.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.414" endtime="20201112 12:43:06.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.449" endtime="20201112 12:43:06.734"></status>
</kw>
<msg timestamp="20201112 12:43:06.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.448" endtime="20201112 12:43:06.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021805806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.739" endtime="20201112 12:43:06.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.747" endtime="20201112 12:43:06.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.445" endtime="20201112 12:43:06.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.444" endtime="20201112 12:43:06.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.753" level="INFO">${RESULT} = [{'time': 0.021805806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.222300000000055e-05, 'source_diff': 5.222300000000055e-05}, {'time': 0.021860778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.750" endtime="20201112 12:43:06.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.767" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:06.755" endtime="20201112 12:43:06.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.771" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.770" endtime="20201112 12:43:06.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.773" level="INFO">VALUE: [5.222300000000055e-05, 5.265299999999973e-05, 5.290299999999998e-05, 5.269499999999844e-05, 5.279199999999942e-05, 5.250000000000046e-05, 5.250000000000046e-05, 5.288900000000041e-05, 5.263900000000016e-05, 5.273700000000062e-05, 5.251300000000056e-05, 5.2679999999999394e-05, 5.277700000000038e-05, 5.268099999999887e-05, 5.263900000000016e-05, 5.231899999999859e-05, 5.286100000000127e-05, 5.248600000000089e-05, 5.288900000000041e-05, 5.247200000000132e-05, 5.275000000000071e-05, 5.240299999999948e-05, 5.288900000000041e-05, 5.245800000000175e-05, 5.280599999999899e-05, 5.241699999999905e-05, 5.2443999999998714e-05, 5.286100000000127e-05, 5.248600000000089e-05, 5.287500000000084e-05, 5.238899999999991e-05, 5.2388000000000434e-05, 5.277799999999985e-05, 5.234800000000067e-05, 5.273600000000114e-05, 5.248700000000037e-05, 5.287500000000084e-05, 5.270899999999801e-05, 5.281999999999856e-05, 5.277800000000332e-05, 5.240299999999948e-05, 5.287500000000084e-05, 5.2679999999999394e-05, 5.277700000000038e-05, 5.272200000000157e-05, 5.280499999999952e-05, 5.277799999999985e-05, 5.237500000000034e-05, 5.236100000000077e-05, 5.2749999999997244e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.772" endtime="20201112 12:43:06.774"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.768" endtime="20201112 12:43:06.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.777" endtime="20201112 12:43:06.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.780" endtime="20201112 12:43:06.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.779" endtime="20201112 12:43:06.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.775" endtime="20201112 12:43:06.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.412" endtime="20201112 12:43:06.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.412" endtime="20201112 12:43:06.801"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.810" endtime="20201112 12:43:06.826"></status>
</kw>
<msg timestamp="20201112 12:43:06.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.808" endtime="20201112 12:43:06.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.828" endtime="20201112 12:43:06.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.830" endtime="20201112 12:43:06.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.806" endtime="20201112 12:43:06.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.804" endtime="20201112 12:43:06.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.840" endtime="20201112 12:43:07.127"></status>
</kw>
<msg timestamp="20201112 12:43:07.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.838" endtime="20201112 12:43:07.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021722444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021775833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.131" endtime="20201112 12:43:07.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.139" endtime="20201112 12:43:07.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.836" endtime="20201112 12:43:07.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.834" endtime="20201112 12:43:07.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.146" level="INFO">${RESULT} = [{'time': 0.021775833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.338900000000091e-05, 'source_diff': 5.338900000000091e-05}, {'time': 0.021831861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.143" endtime="20201112 12:43:07.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.160" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.147" endtime="20201112 12:43:07.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.165" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.164" endtime="20201112 12:43:07.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.167" level="INFO">VALUE: [5.338900000000091e-05, 5.387500000000184e-05, 5.3749999999998244e-05, 5.365300000000073e-05, 5.3527999999997133e-05, 5.351400000000103e-05, 5.31669999999998e-05, 5.3471999999998854e-05, 5.384699999999923e-05, 5.334699999999873e-05, 5.363900000000116e-05, 5.348600000000189e-05, 5.369499999999944e-05, 5.368099999999987e-05, 5.345900000000223e-05, 5.3527999999997133e-05, 5.390299999999751e-05, 5.361099999999855e-05, 5.387499999999837e-05, 5.386199999999827e-05, 5.341700000000005e-05, 5.3457999999999284e-05, 5.3443999999999714e-05, 5.363899999999769e-05, 5.388900000000141e-05, 5.33609999999983e-05, 5.3666000000000824e-05, 5.3902000000001504e-05, 5.376400000000128e-05, 5.3652000000001254e-05, 5.352700000000113e-05, 5.345800000000275e-05, 5.358299999999941e-05, 5.3471999999998854e-05, 5.333299999999916e-05, 5.337499999999787e-05, 5.334699999999873e-05, 5.336100000000177e-05, 5.337500000000134e-05, 5.358299999999941e-05, 5.341700000000005e-05, 5.383399999999913e-05, 5.343099999999962e-05, 5.361099999999855e-05, 5.3763999999997814e-05, 5.388900000000141e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.338900000000091e-05, 5.380599999999999e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.166" endtime="20201112 12:43:07.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.161" endtime="20201112 12:43:07.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.171" endtime="20201112 12:43:07.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.174" endtime="20201112 12:43:07.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.172" endtime="20201112 12:43:07.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.169" endtime="20201112 12:43:07.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.802" endtime="20201112 12:43:07.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.801" endtime="20201112 12:43:07.195"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.203" endtime="20201112 12:43:07.220"></status>
</kw>
<msg timestamp="20201112 12:43:07.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.202" endtime="20201112 12:43:07.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.222" endtime="20201112 12:43:07.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.224" endtime="20201112 12:43:07.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.199" endtime="20201112 12:43:07.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.197" endtime="20201112 12:43:07.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.234" endtime="20201112 12:43:07.519"></status>
</kw>
<msg timestamp="20201112 12:43:07.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.232" endtime="20201112 12:43:07.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021843833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.523" endtime="20201112 12:43:07.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.532" endtime="20201112 12:43:07.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.230" endtime="20201112 12:43:07.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.228" endtime="20201112 12:43:07.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.538" level="INFO">${RESULT} = [{'time': 0.021843833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4651999999998785e-05, 'source_diff': 5.4651999999998785e-05}, {'time': 0.021900833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:07.535" endtime="20201112 12:43:07.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.551" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.539" endtime="20201112 12:43:07.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.556" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.555" endtime="20201112 12:43:07.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.558" level="INFO">VALUE: [5.4651999999998785e-05, 5.459699999999998e-05, 5.481900000000109e-05, 5.438900000000191e-05, 5.4651999999998785e-05, 5.483300000000066e-05, 5.43470000000032e-05, 5.4708000000000534e-05, 5.4499999999998994e-05, 5.466699999999783e-05, 5.454200000000117e-05, 5.494500000000069e-05, 5.455600000000074e-05, 5.441700000000105e-05, 5.455599999999727e-05, 5.4958000000000784e-05, 5.459699999999998e-05, 5.480600000000099e-05, 5.4749999999999244e-05, 5.476400000000228e-05, 5.4735999999999674e-05, 5.447299999999933e-05, 5.4707999999997065e-05, 5.4416000000001574e-05, 5.480500000000152e-05, 5.4513999999998564e-05, 5.479100000000195e-05, 5.483299999999719e-05, 5.4430000000001144e-05, 5.452699999999866e-05, 5.480599999999752e-05, 5.4708000000000534e-05, 5.4415999999998105e-05, 5.463900000000216e-05, 5.45549999999978e-05, 5.43609999999993e-05, 5.45280000000016e-05, 5.455599999999727e-05, 5.48609999999998e-05, 5.4722000000000104e-05, 5.456900000000084e-05, 5.433300000000016e-05, 5.434699999999973e-05, 5.413899999999819e-05, 5.4749999999999244e-05, 5.4499999999998994e-05, 5.483300000000066e-05, 5.472299999999958e-05, 5.465299999999826e-05, 5.480499999999805e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.557" endtime="20201112 12:43:07.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.552" endtime="20201112 12:43:07.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.562" endtime="20201112 12:43:07.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.565" endtime="20201112 12:43:07.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.564" endtime="20201112 12:43:07.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.560" endtime="20201112 12:43:07.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.196" endtime="20201112 12:43:07.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.195" endtime="20201112 12:43:07.586"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.594" endtime="20201112 12:43:07.611"></status>
</kw>
<msg timestamp="20201112 12:43:07.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.593" endtime="20201112 12:43:07.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.613" endtime="20201112 12:43:07.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.615" endtime="20201112 12:43:07.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.590" endtime="20201112 12:43:07.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.588" endtime="20201112 12:43:07.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.625" endtime="20201112 12:43:07.910"></status>
</kw>
<msg timestamp="20201112 12:43:07.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.623" endtime="20201112 12:43:07.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021800403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.914" endtime="20201112 12:43:07.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.922" endtime="20201112 12:43:07.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.621" endtime="20201112 12:43:07.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.619" endtime="20201112 12:43:07.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.929" level="INFO">${RESULT} = [{'time': 0.021856083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5679999999998925e-05, 'source_diff': 5.5679999999998925e-05}, {'time': 0.021914097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:07.926" endtime="20201112 12:43:07.929"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.942" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:07.930" endtime="20201112 12:43:07.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.947" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.946" endtime="20201112 12:43:07.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.949" level="INFO">VALUE: [5.5679999999998925e-05, 5.5736000000000674e-05, 5.5763999999999814e-05, 5.552699999999966e-05, 5.5777999999999384e-05, 5.591699999999908e-05, 5.566699999999883e-05, 5.5722000000001104e-05, 5.53610000000003e-05, 5.587500000000037e-05, 5.583400000000113e-05, 5.579099999999948e-05, 5.5513999999999564e-05, 5.562500000000012e-05, 5.587500000000037e-05, 5.58749999999969e-05, 5.557000000000131e-05, 5.537499999999987e-05, 5.588899999999994e-05, 5.5750000000000244e-05, 5.5791999999998954e-05, 5.58480000000007e-05, 5.5680000000002394e-05, 5.53610000000003e-05, 5.557000000000131e-05, 5.540299999999901e-05, 5.536199999999977e-05, 5.5486000000000424e-05, 5.593100000000212e-05, 5.5887999999996996e-05, 5.53610000000003e-05, 5.55280000000026e-05, 5.5763999999999814e-05, 5.537499999999987e-05, 5.534700000000073e-05, 5.580499999999905e-05, 5.554200000000217e-05, 5.5750000000000244e-05, 5.5749999999996774e-05, 5.544499999999772e-05, 5.5763999999999814e-05, 5.561100000000055e-05, 5.5555999999998273e-05, 5.565299999999926e-05, 5.538899999999944e-05, 5.56670000000023e-05, 5.5513999999999564e-05, 5.562500000000012e-05, 5.540300000000248e-05, 5.581999999999809e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.948" endtime="20201112 12:43:07.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.943" endtime="20201112 12:43:07.950"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.953" endtime="20201112 12:43:07.954"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.956" endtime="20201112 12:43:07.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.955" endtime="20201112 12:43:07.976"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.951" endtime="20201112 12:43:07.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.587" endtime="20201112 12:43:07.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.586" endtime="20201112 12:43:07.977"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.987" endtime="20201112 12:43:08.004"></status>
</kw>
<msg timestamp="20201112 12:43:08.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.985" endtime="20201112 12:43:08.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.006" endtime="20201112 12:43:08.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.008" endtime="20201112 12:43:08.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.982" endtime="20201112 12:43:08.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.980" endtime="20201112 12:43:08.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.018" endtime="20201112 12:43:08.303"></status>
</kw>
<msg timestamp="20201112 12:43:08.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023513181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.016" endtime="20201112 12:43:08.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023513181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.308" endtime="20201112 12:43:08.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.316" endtime="20201112 12:43:08.317"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.014" endtime="20201112 12:43:08.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.012" endtime="20201112 12:43:08.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.322" level="INFO">${RESULT} = [{'time': 0.023513181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.02357225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:08.319" endtime="20201112 12:43:08.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.336" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.323" endtime="20201112 12:43:08.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.340" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.339" endtime="20201112 12:43:08.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.343" level="INFO">VALUE: [5.6528000000000134e-05, 5.688900000000094e-05, 5.682000000000256e-05, 5.64870000000009e-05, 5.63480000000012e-05, 5.6444000000002714e-05, 5.6471999999998385e-05, 5.6444000000002714e-05, 5.6457999999998815e-05, 5.63610000000013e-05, 5.6443999999999245e-05, 5.63610000000013e-05, 5.644499999999872e-05, 5.683299999999919e-05, 5.638900000000044e-05, 5.6707999999999065e-05, 5.6500000000000994e-05, 5.659700000000198e-05, 5.684699999999876e-05, 5.661099999999808e-05, 5.66809999999994e-05, 5.6514000000000564e-05, 5.658299999999894e-05, 5.6555999999999274e-05, 5.6819999999999093e-05, 5.6721999999998635e-05, 5.684799999999823e-05, 5.6722000000002104e-05, 5.669499999999897e-05, 5.6749999999997774e-05, 5.636099999999783e-05, 5.6569999999998843e-05, 5.6555999999999274e-05, 5.641699999999958e-05, 5.663900000000069e-05, 5.634700000000173e-05, 5.6679999999999925e-05, 5.6415999999996636e-05, 5.6915999999997136e-05, 5.6457999999998815e-05, 5.688900000000094e-05, 5.6694000000002964e-05, 5.681900000000309e-05, 5.659700000000198e-05, 5.688900000000094e-05, 5.666699999999983e-05, 5.6472000000001854e-05, 5.684700000000223e-05, 5.6722000000002104e-05, 5.6457999999998815e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.341" endtime="20201112 12:43:08.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.337" endtime="20201112 12:43:08.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.346" endtime="20201112 12:43:08.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.350" endtime="20201112 12:43:08.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.348" endtime="20201112 12:43:08.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.345" endtime="20201112 12:43:08.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.978" endtime="20201112 12:43:08.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.977" endtime="20201112 12:43:08.370"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.379" endtime="20201112 12:43:08.396"></status>
</kw>
<msg timestamp="20201112 12:43:08.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.377" endtime="20201112 12:43:08.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.397" endtime="20201112 12:43:08.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.400" endtime="20201112 12:43:08.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.375" endtime="20201112 12:43:08.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.373" endtime="20201112 12:43:08.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.409" endtime="20201112 12:43:08.695"></status>
</kw>
<msg timestamp="20201112 12:43:08.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.408" endtime="20201112 12:43:08.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021642222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021700028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.699" endtime="20201112 12:43:08.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.707" endtime="20201112 12:43:08.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.406" endtime="20201112 12:43:08.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.404" endtime="20201112 12:43:08.710"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.714" level="INFO">${RESULT} = [{'time': 0.021700028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7806000000000524e-05, 'source_diff': 5.7806000000000524e-05}, {'time': 0.021760028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:08.710" endtime="20201112 12:43:08.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.728" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:08.715" endtime="20201112 12:43:08.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.732" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.731" endtime="20201112 12:43:08.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.735" level="INFO">VALUE: [5.7806000000000524e-05, 5.7764000000001814e-05, 5.770900000000301e-05, 5.7958000000000315e-05, 5.766700000000083e-05, 5.738900000000144e-05, 5.759800000000245e-05, 5.7583999999999413e-05, 5.738900000000144e-05, 5.787500000000237e-05, 5.7708000000000065e-05, 5.7833999999999663e-05, 5.787500000000237e-05, 5.780499999999758e-05, 5.7651999999998316e-05, 5.7708000000000065e-05, 5.762500000000212e-05, 5.780499999999758e-05, 5.736099999999883e-05, 5.783300000000019e-05, 5.743100000000015e-05, 5.7707999999996595e-05, 5.738899999999797e-05, 5.7680000000000925e-05, 5.765300000000126e-05, 5.7791999999997484e-05, 5.762499999999865e-05, 5.7806000000000524e-05, 5.7833999999999663e-05, 5.7763999999998344e-05, 5.738900000000144e-05, 5.762499999999865e-05, 5.7833999999999663e-05, 5.7528000000001134e-05, 5.769499999999997e-05, 5.766700000000083e-05, 5.787500000000237e-05, 5.7791999999997484e-05, 5.7833999999999663e-05, 5.736099999999883e-05, 5.740299999999754e-05, 5.7679999999997456e-05, 5.761099999999908e-05, 5.7749999999998775e-05, 5.786099999999933e-05, 5.738899999999797e-05, 5.7764000000001814e-05, 5.7500000000001994e-05, 5.756900000000037e-05, 5.73749999999984e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.733" endtime="20201112 12:43:08.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.729" endtime="20201112 12:43:08.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.738" endtime="20201112 12:43:08.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.742" endtime="20201112 12:43:08.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.740" endtime="20201112 12:43:08.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.737" endtime="20201112 12:43:08.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.371" endtime="20201112 12:43:08.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.371" endtime="20201112 12:43:08.762"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.771" endtime="20201112 12:43:08.787"></status>
</kw>
<msg timestamp="20201112 12:43:08.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.769" endtime="20201112 12:43:08.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.789" endtime="20201112 12:43:08.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.791" endtime="20201112 12:43:08.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.767" endtime="20201112 12:43:08.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.765" endtime="20201112 12:43:08.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.801" endtime="20201112 12:43:09.086"></status>
</kw>
<msg timestamp="20201112 12:43:09.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:08.800" endtime="20201112 12:43:09.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02167525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021733722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:09.090" endtime="20201112 12:43:09.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.099" endtime="20201112 12:43:09.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.797" endtime="20201112 12:43:09.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.795" endtime="20201112 12:43:09.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.105" level="INFO">${RESULT} = [{'time': 0.021733722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8472000000000385e-05, 'source_diff': 5.8472000000000385e-05}, {'time': 0.021794736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.102" endtime="20201112 12:43:09.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.118" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.106" endtime="20201112 12:43:09.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.123" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.122" endtime="20201112 12:43:09.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.125" level="INFO">VALUE: [5.8472000000000385e-05, 5.866699999999836e-05, 5.86949999999975e-05, 5.883299999999772e-05, 5.8805999999998054e-05, 5.8722000000000635e-05, 5.863899999999922e-05, 5.890299999999904e-05, 5.85689999999979e-05, 5.8542000000001704e-05, 5.834700000000026e-05, 5.862499999999965e-05, 5.870900000000054e-05, 5.8778000000002384e-05, 5.865299999999879e-05, 5.861100000000008e-05, 5.8541999999998234e-05, 5.890300000000251e-05, 5.863899999999922e-05, 5.8444000000001245e-05, 5.861199999999955e-05, 5.8429999999998206e-05, 5.8916000000002605e-05, 5.884700000000076e-05, 5.884700000000076e-05, 5.8499999999999525e-05, 5.837500000000287e-05, 5.856900000000137e-05, 5.85550000000018e-05, 5.8472000000000385e-05, 5.85689999999979e-05, 5.880500000000205e-05, 5.88749999999999e-05, 5.863900000000269e-05, 5.8707999999997595e-05, 5.840300000000201e-05, 5.8736000000000205e-05, 5.841699999999811e-05, 5.868099999999793e-05, 5.8528000000002134e-05, 5.840300000000201e-05, 5.8499999999999525e-05, 5.840300000000201e-05, 5.868099999999793e-05, 5.863899999999922e-05, 5.838899999999897e-05, 5.840300000000201e-05, 5.8848000000000233e-05, 5.886100000000033e-05, 5.856900000000137e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.124" endtime="20201112 12:43:09.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.119" endtime="20201112 12:43:09.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.133" endtime="20201112 12:43:09.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.136" endtime="20201112 12:43:09.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.135" endtime="20201112 12:43:09.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.131" endtime="20201112 12:43:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.763" endtime="20201112 12:43:09.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.763" endtime="20201112 12:43:09.157"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.166" endtime="20201112 12:43:09.183"></status>
</kw>
<msg timestamp="20201112 12:43:09.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.164" endtime="20201112 12:43:09.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.184" endtime="20201112 12:43:09.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.187" endtime="20201112 12:43:09.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.161" endtime="20201112 12:43:09.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.159" endtime="20201112 12:43:09.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.196" endtime="20201112 12:43:09.481"></status>
</kw>
<msg timestamp="20201112 12:43:09.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.195" endtime="20201112 12:43:09.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021738333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021797528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.486" endtime="20201112 12:43:09.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.494" endtime="20201112 12:43:09.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.192" endtime="20201112 12:43:09.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.191" endtime="20201112 12:43:09.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.501" level="INFO">${RESULT} = [{'time': 0.021797528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.919500000000147e-05, 'source_diff': 5.919500000000147e-05}, {'time': 0.021859597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:09.497" endtime="20201112 12:43:09.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.514" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.501" endtime="20201112 12:43:09.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.518" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.517" endtime="20201112 12:43:09.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.520" level="INFO">VALUE: [5.919500000000147e-05, 5.9665999999999886e-05, 5.9805999999999054e-05, 5.938899999999997e-05, 5.9820000000002094e-05, 5.9736000000001205e-05, 5.963900000000022e-05, 5.93750000000004e-05, 5.9514000000000095e-05, 5.9764000000000345e-05, 5.9569999999998374e-05, 5.9736000000001205e-05, 5.962500000000065e-05, 5.9514000000000095e-05, 5.9500000000000525e-05, 5.977700000000044e-05, 5.9444000000002245e-05, 5.9514000000000095e-05, 5.9791999999999484e-05, 5.9527999999999665e-05, 5.9693999999999026e-05, 5.931899999999865e-05, 5.9458000000001815e-05, 5.98750000000009e-05, 5.959700000000151e-05, 5.944499999999825e-05, 5.959699999999804e-05, 5.9569999999998374e-05, 5.944500000000172e-05, 5.9736000000001205e-05, 5.93750000000004e-05, 5.9750000000000775e-05, 5.966699999999936e-05, 5.986099999999786e-05, 5.9430000000002675e-05, 5.973700000000068e-05, 5.9444000000002245e-05, 5.9888999999997e-05, 5.984699999999829e-05, 5.9402000000000066e-05, 5.9651999999996846e-05, 5.93750000000004e-05, 5.9458000000001815e-05, 5.984699999999829e-05, 5.983299999999872e-05, 5.9764000000000345e-05, 5.940300000000301e-05, 5.966700000000283e-05, 5.962500000000065e-05, 5.9486000000000955e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.519" endtime="20201112 12:43:09.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.515" endtime="20201112 12:43:09.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.524" endtime="20201112 12:43:09.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.527" endtime="20201112 12:43:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.526" endtime="20201112 12:43:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.522" endtime="20201112 12:43:09.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.158" endtime="20201112 12:43:09.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.157" endtime="20201112 12:43:09.548"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.557" endtime="20201112 12:43:09.574"></status>
</kw>
<msg timestamp="20201112 12:43:09.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.555" endtime="20201112 12:43:09.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.575" endtime="20201112 12:43:09.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.578" endtime="20201112 12:43:09.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.553" endtime="20201112 12:43:09.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.551" endtime="20201112 12:43:09.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.588" endtime="20201112 12:43:09.873"></status>
</kw>
<msg timestamp="20201112 12:43:09.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.586" endtime="20201112 12:43:09.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021963153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022023403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.877" endtime="20201112 12:43:09.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.885" endtime="20201112 12:43:09.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.584" endtime="20201112 12:43:09.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.582" endtime="20201112 12:43:09.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.892" level="INFO">${RESULT} = [{'time': 0.022023403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0250000000001275e-05, 'source_diff': 6.0250000000001275e-05}, {'time': 0.022086403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.889" endtime="20201112 12:43:09.892"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.905" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:09.893" endtime="20201112 12:43:09.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.910" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.909" endtime="20201112 12:43:09.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.912" level="INFO">VALUE: [6.0250000000001275e-05, 6.0778000000000915e-05, 6.040300000000054e-05, 6.086100000000233e-05, 6.072299999999864e-05, 6.048699999999796e-05, 6.0485999999998485e-05, 6.055500000000033e-05, 6.06949999999995e-05, 6.051300000000162e-05, 6.0749999999998305e-05, 6.081900000000015e-05, 6.079099999999754e-05, 6.063900000000122e-05, 6.061100000000208e-05, 6.059699999999904e-05, 6.0471999999998916e-05, 6.0666000000000886e-05, 6.0514000000001095e-05, 6.036099999999836e-05, 6.040300000000054e-05, 6.066700000000036e-05, 6.0528000000000665e-05, 6.0457999999999346e-05, 6.038900000000097e-05, 6.0792000000000485e-05, 6.0736000000002205e-05, 6.0792000000000485e-05, 6.040299999999707e-05, 6.045899999999882e-05, 6.066700000000036e-05, 6.038900000000097e-05, 6.0569999999999374e-05, 6.0430000000000206e-05, 6.052700000000119e-05, 6.0777999999997445e-05, 6.0444000000003245e-05, 6.062499999999818e-05, 6.0707999999999596e-05, 6.0471999999998916e-05, 6.0500000000001525e-05, 6.066700000000036e-05, 6.0458000000002815e-05, 6.0707999999999596e-05, 6.0915999999997666e-05, 6.016700000000333e-05, 6.0792000000000485e-05, 6.0499999999998055e-05, 6.0694000000000026e-05, 6.0499999999998055e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.911" endtime="20201112 12:43:09.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.906" endtime="20201112 12:43:09.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.916" endtime="20201112 12:43:09.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.920" endtime="20201112 12:43:09.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.918" endtime="20201112 12:43:09.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.915" endtime="20201112 12:43:09.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.549" endtime="20201112 12:43:09.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.548" endtime="20201112 12:43:09.940"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.949" endtime="20201112 12:43:09.965"></status>
</kw>
<msg timestamp="20201112 12:43:09.966" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.947" endtime="20201112 12:43:09.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.967" endtime="20201112 12:43:09.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.969" endtime="20201112 12:43:09.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.945" endtime="20201112 12:43:09.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.943" endtime="20201112 12:43:09.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.979" endtime="20201112 12:43:10.264"></status>
</kw>
<msg timestamp="20201112 12:43:10.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.978" endtime="20201112 12:43:10.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021773667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.268" endtime="20201112 12:43:10.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.277" endtime="20201112 12:43:10.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.975" endtime="20201112 12:43:10.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.973" endtime="20201112 12:43:10.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.283" level="INFO">${RESULT} = [{'time': 0.021835542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.187499999999943e-05, 'source_diff': 6.187499999999943e-05}, {'time': 0.021899556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.280" endtime="20201112 12:43:10.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.297" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.284" endtime="20201112 12:43:10.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.302" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.301" endtime="20201112 12:43:10.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.304" level="INFO">VALUE: [6.187499999999943e-05, 6.1888999999999e-05, 6.161100000000308e-05, 6.148599999999949e-05, 6.136099999999936e-05, 6.14019999999986e-05, 6.163900000000222e-05, 6.17499999999993e-05, 6.17499999999993e-05, 6.1582999999997e-05, 6.17499999999993e-05, 6.155500000000133e-05, 6.156899999999743e-05, 6.152800000000166e-05, 6.162499999999918e-05, 6.15279999999982e-05, 6.163900000000222e-05, 6.166699999999789e-05, 6.165300000000179e-05, 6.165299999999832e-05, 6.177699999999897e-05, 6.161100000000308e-05, 6.149999999999906e-05, 6.138900000000197e-05, 6.136199999999883e-05, 6.137499999999893e-05, 6.148599999999949e-05, 6.181900000000115e-05, 6.15690000000009e-05, 6.15560000000008e-05, 6.155500000000133e-05, 6.172200000000017e-05, 6.152699999999872e-05, 6.163900000000222e-05, 6.116599999999792e-05, 6.116599999999792e-05, 6.140300000000154e-05, 6.187499999999943e-05, 6.144400000000078e-05, 6.16950000000005e-05, 6.134699999999979e-05, 6.158300000000047e-05, 6.179200000000148e-05, 6.15690000000009e-05, 6.180600000000105e-05, 6.141699999999764e-05, 6.166700000000136e-05, 6.13889999999985e-05, 6.195800000000085e-05, 6.152800000000166e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.303" endtime="20201112 12:43:10.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.298" endtime="20201112 12:43:10.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.308" endtime="20201112 12:43:10.309"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.311" endtime="20201112 12:43:10.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.310" endtime="20201112 12:43:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.306" endtime="20201112 12:43:10.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.941" endtime="20201112 12:43:10.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.941" endtime="20201112 12:43:10.332"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.340" endtime="20201112 12:43:10.358"></status>
</kw>
<msg timestamp="20201112 12:43:10.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.339" endtime="20201112 12:43:10.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.359" endtime="20201112 12:43:10.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.362" endtime="20201112 12:43:10.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.336" endtime="20201112 12:43:10.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.334" endtime="20201112 12:43:10.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.372" endtime="20201112 12:43:10.658"></status>
</kw>
<msg timestamp="20201112 12:43:10.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.370" endtime="20201112 12:43:10.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021579444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021642194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.662" endtime="20201112 12:43:10.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.670" endtime="20201112 12:43:10.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.368" endtime="20201112 12:43:10.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.366" endtime="20201112 12:43:10.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.677" level="INFO">${RESULT} = [{'time': 0.021642194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.021707194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:10.673" endtime="20201112 12:43:10.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.690" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:10.678" endtime="20201112 12:43:10.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.694" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.693" endtime="20201112 12:43:10.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.697" level="INFO">VALUE: [6.27500000000003e-05, 6.277699999999997e-05, 6.2889e-05, 6.262500000000018e-05, 6.24439999999983e-05, 6.27500000000003e-05, 6.291599999999967e-05, 6.216599999999892e-05, 6.28340000000012e-05, 6.242999999999874e-05, 6.245799999999788e-05, 6.283300000000172e-05, 6.283300000000172e-05, 6.241699999999864e-05, 6.272200000000117e-05, 6.248600000000049e-05, 6.258399999999747e-05, 6.262500000000018e-05, 6.25560000000018e-05, 6.236100000000036e-05, 6.286099999999739e-05, 6.268100000000193e-05, 6.291699999999914e-05, 6.2889e-05, 6.250000000000006e-05, 6.250000000000006e-05, 6.266699999999889e-05, 6.27630000000004e-05, 6.281900000000215e-05, 6.236100000000036e-05, 6.234699999999732e-05, 6.234700000000079e-05, 6.267999999999899e-05, 6.256899999999843e-05, 6.27080000000016e-05, 6.251399999999963e-05, 6.255599999999834e-05, 6.249999999999659e-05, 6.240299999999907e-05, 6.273600000000074e-05, 6.263899999999975e-05, 6.272200000000117e-05, 6.241699999999864e-05, 6.277800000000291e-05, 6.25279999999992e-05, 6.254199999999877e-05, 6.243099999999821e-05, 6.213900000000272e-05, 6.281999999999816e-05, 6.280599999999859e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.695" endtime="20201112 12:43:10.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.691" endtime="20201112 12:43:10.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.700" endtime="20201112 12:43:10.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.703" endtime="20201112 12:43:10.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.702" endtime="20201112 12:43:10.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.698" endtime="20201112 12:43:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.333" endtime="20201112 12:43:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.332" endtime="20201112 12:43:10.724"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.733" endtime="20201112 12:43:10.750"></status>
</kw>
<msg timestamp="20201112 12:43:10.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.731" endtime="20201112 12:43:10.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.751" endtime="20201112 12:43:10.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.754" endtime="20201112 12:43:10.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.729" endtime="20201112 12:43:10.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.727" endtime="20201112 12:43:10.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.763" endtime="20201112 12:43:11.049"></status>
</kw>
<msg timestamp="20201112 12:43:11.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.762" endtime="20201112 12:43:11.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.053" endtime="20201112 12:43:11.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.061" endtime="20201112 12:43:11.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.759" endtime="20201112 12:43:11.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.758" endtime="20201112 12:43:11.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.068" level="INFO">${RESULT} = [{'time': 0.021765403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.368099999999946e-05, 'source_diff': 6.368099999999946e-05}, {'time': 0.021831403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.064" endtime="20201112 12:43:11.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.081" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.069" endtime="20201112 12:43:11.081"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.085" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.084" endtime="20201112 12:43:11.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.088" level="INFO">VALUE: [6.368099999999946e-05, 6.374999999999784e-05, 6.35699999999989e-05, 6.336099999999789e-05, 6.354199999999977e-05, 6.38479999999983e-05, 6.345899999999835e-05, 6.344499999999878e-05, 6.348699999999749e-05, 6.373599999999827e-05, 6.337500000000093e-05, 6.387499999999796e-05, 6.356899999999943e-05, 6.351400000000063e-05, 6.374999999999784e-05, 6.386099999999839e-05, 6.366699999999989e-05, 6.334699999999832e-05, 6.366699999999989e-05, 6.342999999999974e-05, 6.355599999999934e-05, 6.370799999999913e-05, 6.356899999999943e-05, 6.34439999999993e-05, 6.340300000000007e-05, 6.365299999999685e-05, 6.384700000000229e-05, 6.341699999999964e-05, 6.391700000000014e-05, 6.344500000000225e-05, 6.359700000000204e-05, 6.365300000000032e-05, 6.324999999999734e-05, 6.345799999999888e-05, 6.345900000000182e-05, 6.348700000000096e-05, 6.338800000000103e-05, 6.387500000000143e-05, 6.347200000000192e-05, 6.3889000000001e-05, 6.337500000000093e-05, 6.386099999999839e-05, 6.386099999999839e-05, 6.380500000000011e-05, 6.361100000000161e-05, 6.387499999999796e-05, 6.356899999999943e-05, 6.37500000000013e-05, 6.354199999999977e-05, 6.330599999999909e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.087" endtime="20201112 12:43:11.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.082" endtime="20201112 12:43:11.089"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.091" endtime="20201112 12:43:11.093"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.095" endtime="20201112 12:43:11.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.093" endtime="20201112 12:43:11.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.090" endtime="20201112 12:43:11.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.725" endtime="20201112 12:43:11.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.724" endtime="20201112 12:43:11.116"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.124" endtime="20201112 12:43:11.141"></status>
</kw>
<msg timestamp="20201112 12:43:11.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.122" endtime="20201112 12:43:11.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.143" endtime="20201112 12:43:11.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.145" endtime="20201112 12:43:11.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.120" endtime="20201112 12:43:11.148"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.118" endtime="20201112 12:43:11.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.155" endtime="20201112 12:43:11.440"></status>
</kw>
<msg timestamp="20201112 12:43:11.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.153" endtime="20201112 12:43:11.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021811514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.444" endtime="20201112 12:43:11.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.452" endtime="20201112 12:43:11.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.151" endtime="20201112 12:43:11.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.149" endtime="20201112 12:43:11.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.459" level="INFO">${RESULT} = [{'time': 0.021876083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.456900000000043e-05, 'source_diff': 6.456900000000043e-05}, {'time': 0.021943097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.456" endtime="20201112 12:43:11.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.472" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.460" endtime="20201112 12:43:11.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.477" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.476" endtime="20201112 12:43:11.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.479" level="INFO">VALUE: [6.456900000000043e-05, 6.433300000000322e-05, 6.445799999999988e-05, 6.477800000000145e-05, 6.440300000000107e-05, 6.462499999999871e-05, 6.449999999999859e-05, 6.462499999999871e-05, 6.454200000000077e-05, 6.4583e-05, 6.466700000000089e-05, 6.450000000000206e-05, 6.490300000000157e-05, 6.436099999999889e-05, 6.48479999999993e-05, 6.454100000000129e-05, 6.491700000000114e-05, 6.43479999999988e-05, 6.447299999999892e-05, 6.462500000000218e-05, 6.455499999999739e-05, 6.468000000000099e-05, 6.44440000000003e-05, 6.455500000000086e-05, 6.455499999999739e-05, 6.44020000000016e-05, 6.437500000000193e-05, 6.436099999999889e-05, 6.443000000000074e-05, 6.443100000000021e-05, 6.493100000000071e-05, 6.47219999999997e-05, 6.431999999999966e-05, 6.448600000000249e-05, 6.47500000000023e-05, 6.452799999999773e-05, 6.463900000000175e-05, 6.443100000000021e-05, 6.4583e-05, 6.445899999999935e-05, 6.472299999999917e-05, 6.476400000000188e-05, 6.444499999999978e-05, 6.491699999999767e-05, 6.455600000000034e-05, 6.487499999999896e-05, 6.488799999999906e-05, 6.461099999999914e-05, 6.437500000000193e-05, 6.484699999999982e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.478" endtime="20201112 12:43:11.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.473" endtime="20201112 12:43:11.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.483" endtime="20201112 12:43:11.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.486" endtime="20201112 12:43:11.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.484" endtime="20201112 12:43:11.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.481" endtime="20201112 12:43:11.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.117" endtime="20201112 12:43:11.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.116" endtime="20201112 12:43:11.507"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.515" endtime="20201112 12:43:11.533"></status>
</kw>
<msg timestamp="20201112 12:43:11.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.513" endtime="20201112 12:43:11.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.535" endtime="20201112 12:43:11.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.537" endtime="20201112 12:43:11.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.511" endtime="20201112 12:43:11.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.509" endtime="20201112 12:43:11.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.547" endtime="20201112 12:43:11.832"></status>
</kw>
<msg timestamp="20201112 12:43:11.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.545" endtime="20201112 12:43:11.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.836" endtime="20201112 12:43:11.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.845" endtime="20201112 12:43:11.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.543" endtime="20201112 12:43:11.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.541" endtime="20201112 12:43:11.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.851" level="INFO">${RESULT} = [{'time': 0.021849889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.529200000000152e-05, 'source_diff': 6.529200000000152e-05}, {'time': 0.021917903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.848" endtime="20201112 12:43:11.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.865" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:11.852" endtime="20201112 12:43:11.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.870" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.869" endtime="20201112 12:43:11.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.872" level="INFO">VALUE: [6.529200000000152e-05, 6.558400000000048e-05, 6.550000000000306e-05, 6.545900000000035e-05, 6.565300000000232e-05, 6.561100000000014e-05, 6.581999999999769e-05, 6.582000000000116e-05, 6.545900000000035e-05, 6.549999999999959e-05, 6.537499999999946e-05, 6.563900000000275e-05, 6.534700000000032e-05, 6.544399999999784e-05, 6.548600000000002e-05, 6.574999999999984e-05, 6.566600000000242e-05, 6.531900000000118e-05, 6.587499999999996e-05, 6.548600000000002e-05, 6.565300000000232e-05, 6.586100000000039e-05, 6.53890000000025e-05, 6.583300000000125e-05, 6.563899999999928e-05, 6.545900000000035e-05, 6.584700000000082e-05, 6.544499999999731e-05, 6.563899999999928e-05, 6.590300000000257e-05, 6.544500000000078e-05, 6.580599999999812e-05, 6.574999999999984e-05, 6.565299999999885e-05, 6.518000000000149e-05, 6.536099999999989e-05, 6.547200000000045e-05, 6.579099999999907e-05, 6.574999999999984e-05, 6.574999999999984e-05, 6.555499999999839e-05, 6.569400000000156e-05, 6.566599999999895e-05, 6.561100000000014e-05, 6.536099999999989e-05, 6.566700000000189e-05, 6.563899999999928e-05, 6.573600000000027e-05, 6.561100000000014e-05, 6.586100000000039e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.871" endtime="20201112 12:43:11.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.866" endtime="20201112 12:43:11.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.876" endtime="20201112 12:43:11.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.879" endtime="20201112 12:43:11.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.878" endtime="20201112 12:43:11.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.874" endtime="20201112 12:43:11.899"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.508" endtime="20201112 12:43:11.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.507" endtime="20201112 12:43:11.900"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.908" endtime="20201112 12:43:11.925"></status>
</kw>
<msg timestamp="20201112 12:43:11.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.907" endtime="20201112 12:43:11.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.927" endtime="20201112 12:43:11.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.929" endtime="20201112 12:43:11.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.904" endtime="20201112 12:43:11.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.902" endtime="20201112 12:43:11.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.939" endtime="20201112 12:43:12.225"></status>
</kw>
<msg timestamp="20201112 12:43:12.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.938" endtime="20201112 12:43:12.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021784611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021851042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.229" endtime="20201112 12:43:12.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.237" endtime="20201112 12:43:12.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.935" endtime="20201112 12:43:12.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.933" endtime="20201112 12:43:12.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.244" level="INFO">${RESULT} = [{'time': 0.021851042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.643100000000221e-05, 'source_diff': 6.643100000000221e-05}, {'time': 0.021920056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:12.240" endtime="20201112 12:43:12.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.257" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:12.245" endtime="20201112 12:43:12.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.261" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.260" endtime="20201112 12:43:12.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.264" level="INFO">VALUE: [6.643100000000221e-05, 6.675000000000084e-05, 6.655499999999939e-05, 6.663800000000081e-05, 6.672199999999823e-05, 6.64159999999997e-05, 6.684700000000182e-05, 6.662500000000071e-05, 6.669399999999909e-05, 6.666599999999995e-05, 6.665299999999985e-05, 6.670799999999866e-05, 6.687500000000096e-05, 6.661100000000114e-05, 6.670800000000213e-05, 6.663900000000028e-05, 6.670799999999866e-05, 6.668099999999899e-05, 6.68480000000013e-05, 6.650000000000059e-05, 6.686100000000139e-05, 6.688900000000053e-05, 6.688800000000106e-05, 6.647199999999798e-05, 6.665299999999985e-05, 6.680600000000259e-05, 6.683400000000173e-05, 6.648600000000102e-05, 6.659700000000157e-05, 6.634700000000132e-05, 6.672199999999823e-05, 6.661099999999767e-05, 6.687499999999749e-05, 6.675000000000084e-05, 6.687500000000096e-05, 6.65419999999993e-05, 6.683299999999878e-05, 6.627799999999948e-05, 6.656899999999896e-05, 6.680599999999912e-05, 6.645800000000188e-05, 6.680599999999912e-05, 6.684699999999835e-05, 6.663900000000028e-05, 6.688899999999706e-05, 6.674999999999737e-05, 6.655600000000234e-05, 6.661100000000114e-05, 6.644500000000178e-05, 6.662500000000071e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.262" endtime="20201112 12:43:12.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.258" endtime="20201112 12:43:12.265"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.267" endtime="20201112 12:43:12.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.271" endtime="20201112 12:43:12.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.269" endtime="20201112 12:43:12.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.266" endtime="20201112 12:43:12.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.901" endtime="20201112 12:43:12.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.900" endtime="20201112 12:43:12.291"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.300" endtime="20201112 12:43:12.316"></status>
</kw>
<msg timestamp="20201112 12:43:12.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.298" endtime="20201112 12:43:12.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.318" endtime="20201112 12:43:12.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.320" endtime="20201112 12:43:12.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.296" endtime="20201112 12:43:12.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.294" endtime="20201112 12:43:12.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.330" endtime="20201112 12:43:12.616"></status>
</kw>
<msg timestamp="20201112 12:43:12.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.329" endtime="20201112 12:43:12.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021741333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021809264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.620" endtime="20201112 12:43:12.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.628" endtime="20201112 12:43:12.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.326" endtime="20201112 12:43:12.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.325" endtime="20201112 12:43:12.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.635" level="INFO">${RESULT} = [{'time': 0.021809264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.793099999999677e-05, 'source_diff': 6.793099999999677e-05}, {'time': 0.021879236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:12.631" endtime="20201112 12:43:12.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.648" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:12.636" endtime="20201112 12:43:12.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.652" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.651" endtime="20201112 12:43:12.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.655" level="INFO">VALUE: [6.793099999999677e-05, 6.780500000000064e-05, 6.743099999999974e-05, 6.758299999999953e-05, 6.766700000000042e-05, 6.779200000000055e-05, 6.758400000000248e-05, 6.776399999999794e-05, 6.756999999999944e-05, 6.77359999999988e-05, 6.738900000000103e-05, 6.738900000000103e-05, 6.75420000000003e-05, 6.788900000000153e-05, 6.788799999999859e-05, 6.77909999999976e-05, 6.765299999999738e-05, 6.747199999999898e-05, 6.758299999999953e-05, 6.786100000000239e-05, 6.767999999999705e-05, 6.740299999999713e-05, 6.731899999999971e-05, 6.736099999999842e-05, 6.787500000000196e-05, 6.779200000000055e-05, 6.747200000000245e-05, 6.744500000000278e-05, 6.770799999999966e-05, 6.75969999999991e-05, 6.738900000000103e-05, 6.79030000000011e-05, 6.781999999999969e-05, 6.761100000000214e-05, 6.781999999999969e-05, 6.768099999999999e-05, 6.744499999999931e-05, 6.738899999999756e-05, 6.783299999999978e-05, 6.768099999999999e-05, 6.788800000000206e-05, 6.748600000000202e-05, 6.784699999999935e-05, 6.776399999999794e-05, 6.761099999999867e-05, 6.748599999999855e-05, 6.74030000000006e-05, 6.77640000000014e-05, 6.77220000000027e-05, 6.752800000000073e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.654" endtime="20201112 12:43:12.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.649" endtime="20201112 12:43:12.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.658" endtime="20201112 12:43:12.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.662" endtime="20201112 12:43:12.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.660" endtime="20201112 12:43:12.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.657" endtime="20201112 12:43:12.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.292" endtime="20201112 12:43:12.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.292" endtime="20201112 12:43:12.683"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.691" endtime="20201112 12:43:12.708"></status>
</kw>
<msg timestamp="20201112 12:43:12.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.690" endtime="20201112 12:43:12.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.710" endtime="20201112 12:43:12.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.712" endtime="20201112 12:43:12.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.687" endtime="20201112 12:43:12.715"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.685" endtime="20201112 12:43:12.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.722" endtime="20201112 12:43:13.007"></status>
</kw>
<msg timestamp="20201112 12:43:13.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.720" endtime="20201112 12:43:13.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021812542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.011" endtime="20201112 12:43:13.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.019" endtime="20201112 12:43:13.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.718" endtime="20201112 12:43:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.716" endtime="20201112 12:43:13.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.026" level="INFO">${RESULT} = [{'time': 0.021812542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.805600000000037e-05, 'source_diff': 6.805600000000037e-05}, {'time': 0.021883556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:13.023" endtime="20201112 12:43:13.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.039" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:13.027" endtime="20201112 12:43:13.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.044" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.043" endtime="20201112 12:43:13.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.046" level="INFO">VALUE: [6.805600000000037e-05, 6.849999999999912e-05, 6.838899999999856e-05, 6.858300000000053e-05, 6.849999999999912e-05, 6.854100000000182e-05, 6.883300000000078e-05, 6.87359999999998e-05, 6.884699999999688e-05, 6.861099999999967e-05, 6.888899999999906e-05, 6.852799999999826e-05, 6.888900000000253e-05, 6.877799999999851e-05, 6.877800000000198e-05, 6.89030000000021e-05, 6.85420000000013e-05, 6.89030000000021e-05, 6.837499999999899e-05, 6.851400000000216e-05, 6.861099999999967e-05, 6.877799999999851e-05, 6.877799999999851e-05, 6.87229999999997e-05, 6.869500000000056e-05, 6.872200000000023e-05, 6.85970000000001e-05, 6.862499999999924e-05, 6.84160000000017e-05, 6.851399999999869e-05, 6.84160000000017e-05, 6.884700000000035e-05, 6.840299999999813e-05, 6.838900000000203e-05, 6.855499999999792e-05, 6.838900000000203e-05, 6.856899999999749e-05, 6.884700000000035e-05, 6.861099999999967e-05, 6.858300000000053e-05, 6.861099999999967e-05, 6.888899999999906e-05, 6.838900000000203e-05, 6.856999999999697e-05, 6.836099999999942e-05, 6.8584e-05, 6.840299999999813e-05, 6.887499999999949e-05, 6.816700000000092e-05, 6.84169999999977e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.045" endtime="20201112 12:43:13.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.040" endtime="20201112 12:43:13.047"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.050" endtime="20201112 12:43:13.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.054" endtime="20201112 12:43:13.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.052" endtime="20201112 12:43:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.048" endtime="20201112 12:43:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.683" endtime="20201112 12:43:13.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.683" endtime="20201112 12:43:13.075"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.083" endtime="20201112 12:43:13.101"></status>
</kw>
<msg timestamp="20201112 12:43:13.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.081" endtime="20201112 12:43:13.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.103" endtime="20201112 12:43:13.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.105" endtime="20201112 12:43:13.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.079" endtime="20201112 12:43:13.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.077" endtime="20201112 12:43:13.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.116" endtime="20201112 12:43:13.402"></status>
</kw>
<msg timestamp="20201112 12:43:13.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.114" endtime="20201112 12:43:13.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022241903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022310944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.407" endtime="20201112 12:43:13.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.415" endtime="20201112 12:43:13.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.111" endtime="20201112 12:43:13.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.110" endtime="20201112 12:43:13.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.421" level="INFO">${RESULT} = [{'time': 0.022310944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.904099999999885e-05, 'source_diff': 6.904099999999885e-05}, {'time': 0.022382931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:13.418" endtime="20201112 12:43:13.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.436" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:13.422" endtime="20201112 12:43:13.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.440" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.439" endtime="20201112 12:43:13.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.442" level="INFO">VALUE: [6.904099999999885e-05, 6.981999999999822e-05, 6.977799999999951e-05, 6.988800000000059e-05, 6.976399999999994e-05, 6.977700000000003e-05, 6.986100000000092e-05, 6.955499999999892e-05, 6.936100000000042e-05, 6.945800000000141e-05, 6.950000000000012e-05, 6.976399999999994e-05, 6.987500000000049e-05, 6.962500000000024e-05, 6.966699999999895e-05, 6.983300000000178e-05, 6.95559999999984e-05, 6.943099999999827e-05, 6.990299999999963e-05, 6.969500000000156e-05, 6.936100000000042e-05, 6.95559999999984e-05, 6.934799999999686e-05, 6.984800000000083e-05, 6.990299999999963e-05, 6.962500000000024e-05, 6.958300000000153e-05, 6.97909999999996e-05, 6.97909999999996e-05, 6.951399999999969e-05, 6.94299999999988e-05, 6.937499999999999e-05, 6.977799999999951e-05, 6.994499999999834e-05, 6.912499999999974e-05, 6.969399999999862e-05, 6.948600000000055e-05, 6.969499999999809e-05, 6.96109999999972e-05, 6.95970000000011e-05, 6.988900000000006e-05, 6.929199999999858e-05, 6.972200000000123e-05, 6.968100000000199e-05, 6.968099999999852e-05, 6.990199999999669e-05, 6.950000000000012e-05, 6.94299999999988e-05, 6.954199999999883e-05, 6.959699999999763e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.441" endtime="20201112 12:43:13.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.437" endtime="20201112 12:43:13.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.446" endtime="20201112 12:43:13.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.449" endtime="20201112 12:43:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.448" endtime="20201112 12:43:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.444" endtime="20201112 12:43:13.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.076" endtime="20201112 12:43:13.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.075" endtime="20201112 12:43:13.470"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.479" endtime="20201112 12:43:13.496"></status>
</kw>
<msg timestamp="20201112 12:43:13.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.477" endtime="20201112 12:43:13.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.498" endtime="20201112 12:43:13.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.500" endtime="20201112 12:43:13.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.475" endtime="20201112 12:43:13.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.473" endtime="20201112 12:43:13.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.510" endtime="20201112 12:43:13.796"></status>
</kw>
<msg timestamp="20201112 12:43:13.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.508" endtime="20201112 12:43:13.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022325431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022396306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.800" endtime="20201112 12:43:13.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.808" endtime="20201112 12:43:13.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.506" endtime="20201112 12:43:13.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.504" endtime="20201112 12:43:13.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.815" level="INFO">${RESULT} = [{'time': 0.022396306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.087500000000149e-05, 'source_diff': 7.087500000000149e-05}, {'time': 0.02246925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:13.812" endtime="20201112 12:43:13.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.828" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:13.816" endtime="20201112 12:43:13.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.832" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.831" endtime="20201112 12:43:13.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.835" level="INFO">VALUE: [7.087500000000149e-05, 7.040300000000013e-05, 7.069499999999909e-05, 7.072199999999876e-05, 7.073599999999833e-05, 7.087499999999802e-05, 7.036099999999795e-05, 7.037499999999752e-05, 7.086199999999793e-05, 7.090199999999769e-05, 7.040300000000013e-05, 7.062499999999777e-05, 7.080500000000017e-05, 7.07910000000006e-05, 7.072199999999876e-05, 7.058299999999906e-05, 7.091600000000073e-05, 7.041600000000023e-05, 7.070799999999919e-05, 7.045799999999894e-05, 7.073700000000127e-05, 7.050000000000112e-05, 7.097300000000195e-05, 7.044399999999937e-05, 7.054199999999983e-05, 7.037500000000099e-05, 7.086100000000192e-05, 7.043099999999927e-05, 7.07499999999979e-05, 7.068099999999952e-05, 7.036199999999743e-05, 7.068099999999952e-05, 7.070899999999866e-05, 7.080500000000017e-05, 7.069499999999909e-05, 7.075000000000137e-05, 7.069399999999962e-05, 7.068000000000005e-05, 7.049999999999765e-05, 7.055499999999992e-05, 7.040299999999666e-05, 7.040300000000013e-05, 7.033299999999881e-05, 7.093099999999977e-05, 7.052800000000026e-05, 7.073599999999833e-05, 7.037500000000099e-05, 7.090300000000063e-05, 7.080599999999965e-05, 7.047199999999851e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.834" endtime="20201112 12:43:13.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.829" endtime="20201112 12:43:13.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.838" endtime="20201112 12:43:13.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.842" endtime="20201112 12:43:13.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.840" endtime="20201112 12:43:13.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.837" endtime="20201112 12:43:13.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.471" endtime="20201112 12:43:13.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.470" endtime="20201112 12:43:13.863"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.871" endtime="20201112 12:43:13.889"></status>
</kw>
<msg timestamp="20201112 12:43:13.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.870" endtime="20201112 12:43:13.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.890" endtime="20201112 12:43:13.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.893" endtime="20201112 12:43:13.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.867" endtime="20201112 12:43:13.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.865" endtime="20201112 12:43:13.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.903" endtime="20201112 12:43:14.189"></status>
</kw>
<msg timestamp="20201112 12:43:14.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.901" endtime="20201112 12:43:14.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021983597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.194" endtime="20201112 12:43:14.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.202" endtime="20201112 12:43:14.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.899" endtime="20201112 12:43:14.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.897" endtime="20201112 12:43:14.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.209" level="INFO">${RESULT} = [{'time': 0.022054861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.126399999999797e-05, 'source_diff': 7.126399999999797e-05}, {'time': 0.022128875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.205" endtime="20201112 12:43:14.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.222" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:14.210" endtime="20201112 12:43:14.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.226" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.225" endtime="20201112 12:43:14.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.229" level="INFO">VALUE: [7.126399999999797e-05, 7.147199999999951e-05, 7.138900000000156e-05, 7.19170000000012e-05, 7.170800000000019e-05, 7.168100000000052e-05, 7.186099999999945e-05, 7.187500000000249e-05, 7.151399999999822e-05, 7.187499999999902e-05, 7.145899999999941e-05, 7.176399999999847e-05, 7.187499999999902e-05, 7.151400000000169e-05, 7.137500000000199e-05, 7.176399999999847e-05, 7.172199999999976e-05, 7.15690000000005e-05, 7.169400000000062e-05, 7.181900000000074e-05, 7.144499999999984e-05, 7.16109999999992e-05, 7.187499999999902e-05, 7.165300000000138e-05, 7.154200000000083e-05, 7.144400000000037e-05, 7.147199999999951e-05, 7.152800000000126e-05, 7.186099999999945e-05, 7.152799999999779e-05, 7.163900000000181e-05, 7.190300000000163e-05, 7.144400000000037e-05, 7.163900000000181e-05, 7.176300000000246e-05, 7.163899999999834e-05, 7.159699999999963e-05, 7.154199999999736e-05, 7.145799999999994e-05, 7.151399999999822e-05, 7.148599999999908e-05, 7.145799999999994e-05, 7.166599999999801e-05, 7.183300000000031e-05, 7.14170000000007e-05, 7.154200000000083e-05, 7.170800000000019e-05, 7.119500000000306e-05, 7.140300000000113e-05, 7.150000000000212e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.227" endtime="20201112 12:43:14.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.223" endtime="20201112 12:43:14.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.237" endtime="20201112 12:43:14.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.240" endtime="20201112 12:43:14.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.238" endtime="20201112 12:43:14.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.235" endtime="20201112 12:43:14.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.863" endtime="20201112 12:43:14.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.863" endtime="20201112 12:43:14.261"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.269" endtime="20201112 12:43:14.287"></status>
</kw>
<msg timestamp="20201112 12:43:14.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.268" endtime="20201112 12:43:14.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.288" endtime="20201112 12:43:14.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.291" endtime="20201112 12:43:14.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.265" endtime="20201112 12:43:14.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.263" endtime="20201112 12:43:14.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.300" endtime="20201112 12:43:14.586"></status>
</kw>
<msg timestamp="20201112 12:43:14.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.299" endtime="20201112 12:43:14.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021880208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021952694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.590" endtime="20201112 12:43:14.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.598" endtime="20201112 12:43:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.296" endtime="20201112 12:43:14.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.295" endtime="20201112 12:43:14.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.605" level="INFO">${RESULT} = [{'time': 0.021952694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.248599999999661e-05, 'source_diff': 7.248599999999661e-05}, {'time': 0.022027722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.602" endtime="20201112 12:43:14.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.618" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:14.606" endtime="20201112 12:43:14.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.623" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.622" endtime="20201112 12:43:14.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.625" level="INFO">VALUE: [7.248599999999661e-05, 7.265299999999891e-05, 7.262499999999977e-05, 7.237499999999952e-05, 7.294400000000187e-05, 7.25690000000015e-05, 7.242999999999833e-05, 7.266700000000195e-05, 7.259700000000063e-05, 7.251399999999922e-05, 7.26110000000002e-05, 7.290299999999916e-05, 7.234700000000038e-05, 7.277799999999904e-05, 7.265300000000238e-05, 7.237499999999952e-05, 7.26110000000002e-05, 7.258400000000054e-05, 7.280599999999818e-05, 7.234799999999986e-05, 7.257000000000097e-05, 7.248600000000008e-05, 7.283300000000131e-05, 7.262499999999977e-05, 7.277699999999956e-05, 7.251400000000269e-05, 7.245799999999747e-05, 7.248600000000008e-05, 7.284699999999741e-05, 7.277800000000251e-05, 7.277800000000251e-05, 7.272200000000076e-05, 7.251399999999922e-05, 7.26110000000002e-05, 7.218099999999755e-05, 7.290299999999916e-05, 7.284700000000088e-05, 7.288900000000306e-05, 7.270900000000066e-05, 7.240299999999866e-05, 7.273600000000033e-05, 7.244500000000084e-05, 7.245800000000094e-05, 7.234799999999986e-05, 7.241699999999823e-05, 7.281899999999827e-05, 7.238899999999909e-05, 7.272200000000076e-05, 7.245799999999747e-05, 7.254100000000235e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.624" endtime="20201112 12:43:14.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.619" endtime="20201112 12:43:14.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.629" endtime="20201112 12:43:14.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.632" endtime="20201112 12:43:14.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.630" endtime="20201112 12:43:14.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.627" endtime="20201112 12:43:14.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.262" endtime="20201112 12:43:14.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.261" endtime="20201112 12:43:14.653"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.661" endtime="20201112 12:43:14.680"></status>
</kw>
<msg timestamp="20201112 12:43:14.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.660" endtime="20201112 12:43:14.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.682" endtime="20201112 12:43:14.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.684" endtime="20201112 12:43:14.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.657" endtime="20201112 12:43:14.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.655" endtime="20201112 12:43:14.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.694" endtime="20201112 12:43:14.981"></status>
</kw>
<msg timestamp="20201112 12:43:14.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.692" endtime="20201112 12:43:14.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022133111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022206986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.985" endtime="20201112 12:43:14.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.993" endtime="20201112 12:43:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.690" endtime="20201112 12:43:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.688" endtime="20201112 12:43:14.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.000" level="INFO">${RESULT} = [{'time': 0.022206986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.387500000000102e-05, 'source_diff': 7.387500000000102e-05}, {'time': 0.022283, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:14.996" endtime="20201112 12:43:15.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.001" endtime="20201112 12:43:15.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.018" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.017" endtime="20201112 12:43:15.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.021" level="INFO">VALUE: [7.387500000000102e-05, 7.387500000000102e-05, 7.347200000000151e-05, 7.365299999999991e-05, 7.387500000000102e-05, 7.387499999999755e-05, 7.384700000000188e-05, 7.376400000000047e-05, 7.386100000000145e-05, 7.362500000000077e-05, 7.373599999999786e-05, 7.381899999999927e-05, 7.365299999999991e-05, 7.386199999999746e-05, 7.365199999999697e-05, 7.337500000000052e-05, 7.38049999999997e-05, 7.376400000000047e-05, 7.38049999999997e-05, 7.317999999999908e-05, 7.351400000000022e-05, 7.390300000000016e-05, 7.391699999999973e-05, 7.369399999999915e-05, 7.390300000000016e-05, 7.338900000000009e-05, 7.390300000000016e-05, 7.355499999999945e-05, 7.340299999999966e-05, 7.383399999999832e-05, 7.352799999999979e-05, 7.355599999999893e-05, 7.383399999999832e-05, 7.359799999999764e-05, 7.388800000000112e-05, 7.383400000000179e-05, 7.355499999999945e-05, 7.377700000000056e-05, 7.388899999999712e-05, 7.379199999999961e-05, 7.342999999999933e-05, 7.388900000000059e-05, 7.355500000000292e-05, 7.366600000000001e-05, 7.356899999999902e-05, 7.358399999999807e-05, 7.362500000000077e-05, 7.379200000000308e-05, 7.347199999999804e-05, 7.359700000000163e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.020" endtime="20201112 12:43:15.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.015" endtime="20201112 12:43:15.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.024" endtime="20201112 12:43:15.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.028" endtime="20201112 12:43:15.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.026" endtime="20201112 12:43:15.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.023" endtime="20201112 12:43:15.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.654" endtime="20201112 12:43:15.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.653" endtime="20201112 12:43:15.048"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.057" endtime="20201112 12:43:15.074"></status>
</kw>
<msg timestamp="20201112 12:43:15.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.055" endtime="20201112 12:43:15.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.076" endtime="20201112 12:43:15.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.078" endtime="20201112 12:43:15.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.053" endtime="20201112 12:43:15.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.051" endtime="20201112 12:43:15.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.089" endtime="20201112 12:43:15.375"></status>
</kw>
<msg timestamp="20201112 12:43:15.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.087" endtime="20201112 12:43:15.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021788194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.380" endtime="20201112 12:43:15.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.388" endtime="20201112 12:43:15.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.085" endtime="20201112 12:43:15.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.083" endtime="20201112 12:43:15.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.394" level="INFO">${RESULT} = [{'time': 0.021788194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.448599999999861e-05, 'source_diff': 7.448599999999861e-05}, {'time': 0.021865208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.391" endtime="20201112 12:43:15.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.407" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.395" endtime="20201112 12:43:15.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.412" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.411" endtime="20201112 12:43:15.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.414" level="INFO">VALUE: [7.448599999999861e-05, 7.447199999999904e-05, 7.454100000000088e-05, 7.483299999999984e-05, 7.455500000000045e-05, 7.443000000000033e-05, 7.483299999999984e-05, 7.477800000000104e-05, 7.463900000000134e-05, 7.451400000000122e-05, 7.441700000000023e-05, 7.441700000000023e-05, 7.44309999999998e-05, 7.480600000000018e-05, 7.468100000000005e-05, 7.450000000000165e-05, 7.437499999999805e-05, 7.458399999999907e-05, 7.488899999999812e-05, 7.458399999999907e-05, 7.441700000000023e-05, 7.483399999999932e-05, 7.416699999999998e-05, 7.463900000000134e-05, 7.44439999999999e-05, 7.440199999999772e-05, 7.473599999999886e-05, 7.491600000000126e-05, 7.46249999999983e-05, 7.451400000000122e-05, 7.440300000000066e-05, 7.487500000000202e-05, 7.451400000000122e-05, 7.4763999999998e-05, 7.456900000000002e-05, 7.455599999999993e-05, 7.444499999999937e-05, 7.438900000000109e-05, 7.451399999999775e-05, 7.49029999999977e-05, 7.465300000000091e-05, 7.484799999999889e-05, 7.440300000000066e-05, 7.470799999999972e-05, 7.482000000000322e-05, 7.463899999999787e-05, 7.468000000000058e-05, 7.445799999999947e-05, 7.461099999999873e-05, 7.484699999999941e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.413" endtime="20201112 12:43:15.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.408" endtime="20201112 12:43:15.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.418" endtime="20201112 12:43:15.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.421" endtime="20201112 12:43:15.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.420" endtime="20201112 12:43:15.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.416" endtime="20201112 12:43:15.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.049" endtime="20201112 12:43:15.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.049" endtime="20201112 12:43:15.442"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.450" endtime="20201112 12:43:15.468"></status>
</kw>
<msg timestamp="20201112 12:43:15.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.449" endtime="20201112 12:43:15.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.469" endtime="20201112 12:43:15.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.472" endtime="20201112 12:43:15.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.446" endtime="20201112 12:43:15.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.444" endtime="20201112 12:43:15.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.481" endtime="20201112 12:43:15.766"></status>
</kw>
<msg timestamp="20201112 12:43:15.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.480" endtime="20201112 12:43:15.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021690431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021765889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.770" endtime="20201112 12:43:15.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.779" endtime="20201112 12:43:15.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.477" endtime="20201112 12:43:15.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.476" endtime="20201112 12:43:15.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.785" level="INFO">${RESULT} = [{'time': 0.021765889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.545800000000047e-05, 'source_diff': 7.545800000000047e-05}, {'time': 0.021843903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.782" endtime="20201112 12:43:15.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.798" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:15.786" endtime="20201112 12:43:15.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.803" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.802" endtime="20201112 12:43:15.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.805" level="INFO">VALUE: [7.545800000000047e-05, 7.566700000000148e-05, 7.570800000000072e-05, 7.544500000000037e-05, 7.54449999999969e-05, 7.582000000000075e-05, 7.570900000000019e-05, 7.552800000000179e-05, 7.544500000000037e-05, 7.537499999999905e-05, 7.547300000000298e-05, 7.549999999999918e-05, 7.572200000000029e-05, 7.547200000000004e-05, 7.537500000000252e-05, 7.5763999999999e-05, 7.565200000000244e-05, 7.577799999999857e-05, 7.554100000000188e-05, 7.57500000000029e-05, 7.580600000000118e-05, 7.555600000000093e-05, 7.56249999999993e-05, 7.566700000000148e-05, 7.561099999999973e-05, 7.56249999999993e-05, 7.581999999999728e-05, 7.572299999999976e-05, 7.551400000000222e-05, 7.590199999999922e-05, 7.586099999999998e-05, 7.565299999999844e-05, 7.54440000000009e-05, 7.587499999999955e-05, 7.54440000000009e-05, 7.588799999999965e-05, 7.531900000000077e-05, 7.576400000000247e-05, 7.533300000000034e-05, 7.54440000000009e-05, 7.563899999999887e-05, 7.58050000000017e-05, 7.533299999999687e-05, 7.552800000000179e-05, 7.532000000000025e-05, 7.515299999999794e-05, 7.538899999999862e-05, 7.541699999999776e-05, 7.563899999999887e-05, 7.587500000000302e-05]</msg>
<status status="PASS" starttime="20201112 12:43:15.804" endtime="20201112 12:43:15.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.799" endtime="20201112 12:43:15.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.809" endtime="20201112 12:43:15.810"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.812" endtime="20201112 12:43:15.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.811" endtime="20201112 12:43:15.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.807" endtime="20201112 12:43:15.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.443" endtime="20201112 12:43:15.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.442" endtime="20201112 12:43:15.833"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.841" endtime="20201112 12:43:15.859"></status>
</kw>
<msg timestamp="20201112 12:43:15.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.840" endtime="20201112 12:43:15.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.861" endtime="20201112 12:43:15.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.863" endtime="20201112 12:43:15.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.837" endtime="20201112 12:43:15.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.835" endtime="20201112 12:43:15.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.873" endtime="20201112 12:43:16.159"></status>
</kw>
<msg timestamp="20201112 12:43:16.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.872" endtime="20201112 12:43:16.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.163" endtime="20201112 12:43:16.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.171" endtime="20201112 12:43:16.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.869" endtime="20201112 12:43:16.173"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.867" endtime="20201112 12:43:16.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.178" level="INFO">${RESULT} = [{'time': 0.021679694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.651300000000028e-05, 'source_diff': 7.651300000000028e-05}, {'time': 0.021758708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.175" endtime="20201112 12:43:16.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.191" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.179" endtime="20201112 12:43:16.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.196" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.195" endtime="20201112 12:43:16.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.198" level="INFO">VALUE: [7.651300000000028e-05, 7.65830000000016e-05, 7.665199999999997e-05, 7.641599999999929e-05, 7.670799999999825e-05, 7.616599999999904e-05, 7.69029999999997e-05, 7.651399999999975e-05, 7.652799999999932e-05, 7.644399999999843e-05, 7.650000000000018e-05, 7.672200000000129e-05, 7.683300000000184e-05, 7.616699999999851e-05, 7.659700000000116e-05, 7.651399999999975e-05, 7.69029999999997e-05, 7.663900000000334e-05, 7.661200000000021e-05, 7.672200000000129e-05, 7.648599999999714e-05, 7.68050000000027e-05, 7.652699999999985e-05, 7.6457999999998e-05, 7.688900000000012e-05, 7.666699999999901e-05, 7.675000000000043e-05, 7.679199999999914e-05, 7.64029999999992e-05, 7.634700000000091e-05, 7.656899999999855e-05, 7.680599999999871e-05, 7.659700000000116e-05, 7.644500000000137e-05, 7.675000000000043e-05, 7.662499999999683e-05, 7.679199999999914e-05, 7.648700000000008e-05, 7.684799999999742e-05, 7.656900000000202e-05, 7.645900000000094e-05, 7.636100000000048e-05, 7.679099999999967e-05, 7.643000000000233e-05, 7.65830000000016e-05, 7.672199999999782e-05, 7.665299999999944e-05, 7.640300000000266e-05, 7.68189999999988e-05, 7.650000000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.197" endtime="20201112 12:43:16.199"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.192" endtime="20201112 12:43:16.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.202" endtime="20201112 12:43:16.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.205" endtime="20201112 12:43:16.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.204" endtime="20201112 12:43:16.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.200" endtime="20201112 12:43:16.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.834" endtime="20201112 12:43:16.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.833" endtime="20201112 12:43:16.226"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.234" endtime="20201112 12:43:16.252"></status>
</kw>
<msg timestamp="20201112 12:43:16.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.233" endtime="20201112 12:43:16.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.253" endtime="20201112 12:43:16.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.256" endtime="20201112 12:43:16.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.230" endtime="20201112 12:43:16.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.228" endtime="20201112 12:43:16.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.266" endtime="20201112 12:43:16.551"></status>
</kw>
<msg timestamp="20201112 12:43:16.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.264" endtime="20201112 12:43:16.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021678208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.555" endtime="20201112 12:43:16.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.563" endtime="20201112 12:43:16.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.262" endtime="20201112 12:43:16.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.260" endtime="20201112 12:43:16.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.570" level="INFO">${RESULT} = [{'time': 0.021755597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.738900000000062e-05, 'source_diff': 7.738900000000062e-05}, {'time': 0.021835597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:16.567" endtime="20201112 12:43:16.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.584" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.571" endtime="20201112 12:43:16.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.589" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.588" endtime="20201112 12:43:16.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.591" level="INFO">VALUE: [7.738900000000062e-05, 7.756900000000302e-05, 7.766700000000001e-05, 7.756900000000302e-05, 7.780599999999971e-05, 7.750000000000118e-05, 7.783400000000232e-05, 7.751400000000075e-05, 7.761100000000173e-05, 7.76250000000013e-05, 7.738899999999715e-05, 7.773700000000133e-05, 7.74030000000002e-05, 7.769399999999968e-05, 7.736199999999749e-05, 7.76519999999975e-05, 7.763799999999793e-05, 7.769399999999968e-05, 7.733299999999887e-05, 7.787500000000155e-05, 7.772199999999882e-05, 7.74030000000002e-05, 7.766700000000001e-05, 7.756899999999955e-05, 7.769499999999915e-05, 7.747199999999857e-05, 7.743099999999933e-05, 7.769499999999915e-05, 7.786099999999851e-05, 7.780599999999971e-05, 7.776399999999753e-05, 7.743099999999933e-05, 7.76519999999975e-05, 7.741699999999976e-05, 7.780599999999971e-05, 7.777800000000057e-05, 7.761099999999826e-05, 7.744399999999943e-05, 7.78189999999998e-05, 7.762499999999783e-05, 7.758299999999912e-05, 7.783299999999937e-05, 7.737500000000105e-05, 7.754199999999989e-05, 7.766700000000001e-05, 7.767999999999664e-05, 7.7457999999999e-05, 7.751400000000075e-05, 7.765300000000044e-05, 7.761099999999826e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.590" endtime="20201112 12:43:16.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.585" endtime="20201112 12:43:16.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.595" endtime="20201112 12:43:16.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.598" endtime="20201112 12:43:16.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.597" endtime="20201112 12:43:16.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.593" endtime="20201112 12:43:16.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.227" endtime="20201112 12:43:16.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.226" endtime="20201112 12:43:16.619"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.627" endtime="20201112 12:43:16.645"></status>
</kw>
<msg timestamp="20201112 12:43:16.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.626" endtime="20201112 12:43:16.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.647" endtime="20201112 12:43:16.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.649" endtime="20201112 12:43:16.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.623" endtime="20201112 12:43:16.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.621" endtime="20201112 12:43:16.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.659" endtime="20201112 12:43:16.945"></status>
</kw>
<msg timestamp="20201112 12:43:16.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.657" endtime="20201112 12:43:16.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022080986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022159458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.949" endtime="20201112 12:43:16.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.957" endtime="20201112 12:43:16.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.655" endtime="20201112 12:43:16.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.653" endtime="20201112 12:43:16.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.964" level="INFO">${RESULT} = [{'time': 0.022159458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847199999999957e-05, 'source_diff': 7.847199999999957e-05}, {'time': 0.0222395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:16.960" endtime="20201112 12:43:16.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:16.965" endtime="20201112 12:43:16.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.981" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.980" endtime="20201112 12:43:16.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.984" level="INFO">VALUE: [7.847199999999957e-05, 7.820799999999975e-05, 7.8458e-05, 7.884699999999994e-05, 7.888900000000212e-05, 7.858300000000012e-05, 7.850000000000218e-05, 7.86389999999984e-05, 7.897299999999954e-05, 7.875000000000243e-05, 7.886099999999951e-05, 7.876399999999853e-05, 7.883300000000037e-05, 7.855599999999699e-05, 7.86250000000023e-05, 7.888900000000212e-05, 7.873700000000233e-05, 7.888900000000212e-05, 7.862499999999883e-05, 7.851400000000175e-05, 7.859799999999917e-05, 7.85969999999997e-05, 7.837499999999858e-05, 7.841599999999782e-05, 7.862499999999883e-05, 7.86250000000023e-05, 7.848599999999914e-05, 7.866600000000154e-05, 7.879200000000114e-05, 7.872199999999982e-05, 7.848599999999914e-05, 7.833299999999987e-05, 7.879200000000114e-05, 7.857000000000003e-05, 7.843100000000033e-05, 7.834699999999944e-05, 7.884799999999942e-05, 7.873699999999886e-05, 7.877800000000157e-05, 7.879200000000114e-05, 7.85969999999997e-05, 7.873599999999939e-05, 7.849999999999871e-05, 7.884699999999994e-05, 7.865200000000197e-05, 7.868000000000111e-05, 7.884699999999994e-05, 7.849999999999871e-05, 7.861099999999926e-05, 7.887500000000255e-05]</msg>
<status status="PASS" starttime="20201112 12:43:16.982" endtime="20201112 12:43:16.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.978" endtime="20201112 12:43:16.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.987" endtime="20201112 12:43:16.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.991" endtime="20201112 12:43:17.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.989" endtime="20201112 12:43:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.986" endtime="20201112 12:43:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.620" endtime="20201112 12:43:17.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.619" endtime="20201112 12:43:17.011"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.020" endtime="20201112 12:43:17.038"></status>
</kw>
<msg timestamp="20201112 12:43:17.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.018" endtime="20201112 12:43:17.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.039" endtime="20201112 12:43:17.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.041" endtime="20201112 12:43:17.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.016" endtime="20201112 12:43:17.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.014" endtime="20201112 12:43:17.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.051" endtime="20201112 12:43:17.336"></status>
</kw>
<msg timestamp="20201112 12:43:17.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.050" endtime="20201112 12:43:17.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021978569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.340" endtime="20201112 12:43:17.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.348" endtime="20201112 12:43:17.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.047" endtime="20201112 12:43:17.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.046" endtime="20201112 12:43:17.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.355" level="INFO">${RESULT} = [{'time': 0.021978569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.927699999999913e-05, 'source_diff': 7.927699999999913e-05}, {'time': 0.022060625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.352" endtime="20201112 12:43:17.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.368" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:17.356" endtime="20201112 12:43:17.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.373" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.372" endtime="20201112 12:43:17.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.375" level="INFO">VALUE: [7.927699999999913e-05, 7.948600000000014e-05, 7.961100000000026e-05, 7.942999999999839e-05, 7.983300000000138e-05, 7.959699999999723e-05, 7.97909999999992e-05, 7.972200000000082e-05, 7.936100000000001e-05, 7.937499999999958e-05, 7.969399999999821e-05, 7.938900000000262e-05, 7.972200000000082e-05, 7.973600000000039e-05, 7.943100000000133e-05, 7.938899999999915e-05, 7.970900000000072e-05, 7.976399999999953e-05, 7.980600000000171e-05, 7.974999999999996e-05, 7.970799999999778e-05, 7.916600000000204e-05, 7.949999999999971e-05, 7.940199999999925e-05, 7.973599999999692e-05, 7.977800000000257e-05, 7.952799999999885e-05, 7.916700000000151e-05, 7.979199999999867e-05, 7.979200000000214e-05, 7.944400000000143e-05, 7.990299999999922e-05, 7.974999999999996e-05, 7.974999999999996e-05, 7.966700000000201e-05, 7.954199999999842e-05, 7.951399999999928e-05, 7.947300000000004e-05, 7.990199999999975e-05, 7.957000000000103e-05, 7.99169999999988e-05, 7.963900000000287e-05, 7.949999999999971e-05, 7.949999999999971e-05, 7.979200000000214e-05, 7.916599999999857e-05, 7.937499999999958e-05, 7.96389999999994e-05, 7.934700000000044e-05, 7.972200000000082e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.374" endtime="20201112 12:43:17.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.369" endtime="20201112 12:43:17.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.379" endtime="20201112 12:43:17.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.382" endtime="20201112 12:43:17.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.381" endtime="20201112 12:43:17.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.377" endtime="20201112 12:43:17.402"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.012" endtime="20201112 12:43:17.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.012" endtime="20201112 12:43:17.403"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.411" endtime="20201112 12:43:17.428"></status>
</kw>
<msg timestamp="20201112 12:43:17.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.410" endtime="20201112 12:43:17.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.430" endtime="20201112 12:43:17.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.432" endtime="20201112 12:43:17.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.407" endtime="20201112 12:43:17.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.405" endtime="20201112 12:43:17.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.442" endtime="20201112 12:43:17.728"></status>
</kw>
<msg timestamp="20201112 12:43:17.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:17.441" endtime="20201112 12:43:17.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021727, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021807819, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:17.732" endtime="20201112 12:43:17.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.740" endtime="20201112 12:43:17.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.438" endtime="20201112 12:43:17.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.437" endtime="20201112 12:43:17.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.747" level="INFO">${RESULT} = [{'time': 0.021807819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.081899999999934e-05, 'source_diff': 8.081899999999934e-05}, {'time': 0.021890861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.743" endtime="20201112 12:43:17.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.760" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:17.748" endtime="20201112 12:43:17.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.764" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.763" endtime="20201112 12:43:17.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.767" level="INFO">VALUE: [8.081899999999934e-05, 8.040299999999972e-05, 8.062500000000083e-05, 8.086099999999805e-05, 8.086100000000151e-05, 8.056899999999909e-05, 8.062500000000083e-05, 8.058299999999866e-05, 8.044399999999896e-05, 8.062499999999737e-05, 8.09169999999998e-05, 8.073600000000139e-05, 8.079199999999967e-05, 8.04169999999993e-05, 8.044499999999843e-05, 8.093099999999936e-05, 8.054099999999995e-05, 8.050000000000071e-05, 8.038800000000068e-05, 8.087500000000108e-05, 8.056900000000256e-05, 8.072200000000182e-05, 8.036100000000101e-05, 8.069399999999921e-05, 8.054199999999942e-05, 8.054099999999995e-05, 8.070800000000225e-05, 8.044400000000243e-05, 8.070800000000225e-05, 8.051400000000028e-05, 8.05970000000017e-05, 8.070799999999878e-05, 8.074999999999749e-05, 8.049999999999724e-05, 8.080600000000271e-05, 8.084700000000195e-05, 8.080599999999924e-05, 8.081899999999934e-05, 8.075000000000096e-05, 8.043099999999886e-05, 8.055499999999952e-05, 8.081899999999934e-05, 8.08329999999989e-05, 8.076400000000053e-05, 8.051400000000028e-05, 8.081899999999934e-05, 8.03329999999984e-05, 8.058299999999866e-05, 8.080499999999977e-05, 8.048599999999767e-05]</msg>
<status status="PASS" starttime="20201112 12:43:17.765" endtime="20201112 12:43:17.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.761" endtime="20201112 12:43:17.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.770" endtime="20201112 12:43:17.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.774" endtime="20201112 12:43:17.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.772" endtime="20201112 12:43:17.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.769" endtime="20201112 12:43:17.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.404" endtime="20201112 12:43:17.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.403" endtime="20201112 12:43:17.794"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.803" endtime="20201112 12:43:17.821"></status>
</kw>
<msg timestamp="20201112 12:43:17.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.801" endtime="20201112 12:43:17.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.823" endtime="20201112 12:43:17.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.825" endtime="20201112 12:43:17.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.799" endtime="20201112 12:43:17.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.797" endtime="20201112 12:43:17.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.835" endtime="20201112 12:43:18.120"></status>
</kw>
<msg timestamp="20201112 12:43:18.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.833" endtime="20201112 12:43:18.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021744792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021825819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.124" endtime="20201112 12:43:18.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.133" endtime="20201112 12:43:18.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.831" endtime="20201112 12:43:18.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.829" endtime="20201112 12:43:18.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.140" level="INFO">${RESULT} = [{'time': 0.021825819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.102700000000088e-05, 'source_diff': 8.102700000000088e-05}, {'time': 0.021909833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.137" endtime="20201112 12:43:18.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.155" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.141" endtime="20201112 12:43:18.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.159" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.158" endtime="20201112 12:43:18.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.162" level="INFO">VALUE: [8.102700000000088e-05, 8.150000000000171e-05, 8.180500000000077e-05, 8.181900000000034e-05, 8.167999999999717e-05, 8.158299999999966e-05, 8.144399999999996e-05, 8.144399999999996e-05, 8.173599999999892e-05, 8.170899999999925e-05, 8.15970000000027e-05, 8.16390000000014e-05, 8.16659999999976e-05, 8.188899999999819e-05, 8.159699999999923e-05, 8.188900000000165e-05, 8.168100000000011e-05, 8.141699999999683e-05, 8.16659999999976e-05, 8.152700000000138e-05, 8.136100000000202e-05, 8.168000000000064e-05, 8.170799999999978e-05, 8.141600000000082e-05, 8.197299999999907e-05, 8.18329999999999e-05, 8.19170000000008e-05, 8.163799999999846e-05, 8.166700000000054e-05, 8.148599999999867e-05, 8.14170000000003e-05, 8.14719999999991e-05, 8.188899999999819e-05, 8.140300000000072e-05, 8.143100000000333e-05, 8.138900000000115e-05, 8.15979999999987e-05, 8.184699999999948e-05, 8.137500000000158e-05, 8.155500000000052e-05, 8.165300000000097e-05, 8.169400000000021e-05, 8.176399999999806e-05, 8.165300000000097e-05, 8.186099999999905e-05, 8.161100000000227e-05, 8.188900000000165e-05, 8.170799999999978e-05, 8.14719999999991e-05, 8.166700000000054e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.160" endtime="20201112 12:43:18.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.156" endtime="20201112 12:43:18.163"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.165" endtime="20201112 12:43:18.167"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.169" endtime="20201112 12:43:18.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.167" endtime="20201112 12:43:18.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.164" endtime="20201112 12:43:18.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.795" endtime="20201112 12:43:18.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.795" endtime="20201112 12:43:18.189"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.198" endtime="20201112 12:43:18.216"></status>
</kw>
<msg timestamp="20201112 12:43:18.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.196" endtime="20201112 12:43:18.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.217" endtime="20201112 12:43:18.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.220" endtime="20201112 12:43:18.222"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.194" endtime="20201112 12:43:18.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.192" endtime="20201112 12:43:18.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.230" endtime="20201112 12:43:18.515"></status>
</kw>
<msg timestamp="20201112 12:43:18.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.228" endtime="20201112 12:43:18.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021876333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021958514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.519" endtime="20201112 12:43:18.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.528" endtime="20201112 12:43:18.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.226" endtime="20201112 12:43:18.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.224" endtime="20201112 12:43:18.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.534" level="INFO">${RESULT} = [{'time': 0.021958514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.218099999999715e-05, 'source_diff': 8.218099999999715e-05}, {'time': 0.0220435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:18.531" endtime="20201112 12:43:18.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.547" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.535" endtime="20201112 12:43:18.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.552" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.551" endtime="20201112 12:43:18.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.554" level="INFO">VALUE: [8.218099999999715e-05, 8.24720000000001e-05, 8.249999999999924e-05, 8.248599999999967e-05, 8.2459e-05, 8.25979999999997e-05, 8.24170000000013e-05, 8.280599999999777e-05, 8.238899999999869e-05, 8.237499999999912e-05, 8.276399999999906e-05, 8.245799999999706e-05, 8.291699999999833e-05, 8.287499999999962e-05, 8.234699999999998e-05, 8.290300000000222e-05, 8.270800000000078e-05, 8.273599999999992e-05, 8.28049999999983e-05, 8.279200000000167e-05, 8.24720000000001e-05, 8.284700000000048e-05, 8.280599999999777e-05, 8.238899999999869e-05, 8.283400000000038e-05, 8.249999999999924e-05, 8.283400000000038e-05, 8.284799999999995e-05, 8.288900000000265e-05, 8.274999999999949e-05, 8.243100000000086e-05, 8.286100000000005e-05, 8.248599999999967e-05, 8.237499999999912e-05, 8.280500000000177e-05, 8.274999999999949e-05, 8.28049999999983e-05, 8.249999999999924e-05, 8.27919999999982e-05, 8.234699999999998e-05, 8.290299999999876e-05, 8.28330000000009e-05, 8.25979999999997e-05, 8.276399999999906e-05, 8.249999999999924e-05, 8.276399999999906e-05, 8.27780000000021e-05, 8.238899999999869e-05, 8.229200000000117e-05, 8.261199999999927e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.553" endtime="20201112 12:43:18.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.548" endtime="20201112 12:43:18.556"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.558" endtime="20201112 12:43:18.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.561" endtime="20201112 12:43:18.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.560" endtime="20201112 12:43:18.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.556" endtime="20201112 12:43:18.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.190" endtime="20201112 12:43:18.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.190" endtime="20201112 12:43:18.582"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.590" endtime="20201112 12:43:18.609"></status>
</kw>
<msg timestamp="20201112 12:43:18.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.589" endtime="20201112 12:43:18.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.610" endtime="20201112 12:43:18.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.612" endtime="20201112 12:43:18.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.586" endtime="20201112 12:43:18.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.584" endtime="20201112 12:43:18.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.622" endtime="20201112 12:43:18.907"></status>
</kw>
<msg timestamp="20201112 12:43:18.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.621" endtime="20201112 12:43:18.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021786111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021869181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.911" endtime="20201112 12:43:18.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.920" endtime="20201112 12:43:18.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.618" endtime="20201112 12:43:18.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.617" endtime="20201112 12:43:18.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.926" level="INFO">${RESULT} = [{'time': 0.021869181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.307000000000106e-05, 'source_diff': 8.307000000000106e-05}, {'time': 0.021955208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:18.923" endtime="20201112 12:43:18.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.940" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:18.927" endtime="20201112 12:43:18.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.944" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.943" endtime="20201112 12:43:18.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.946" level="INFO">VALUE: [8.307000000000106e-05, 8.379099999999973e-05, 8.354099999999948e-05, 8.338899999999969e-05, 8.343000000000239e-05, 8.390200000000028e-05, 8.355499999999905e-05, 8.381899999999887e-05, 8.362500000000037e-05, 8.388900000000019e-05, 8.355599999999852e-05, 8.377799999999963e-05, 8.367999999999917e-05, 8.388900000000019e-05, 8.380599999999877e-05, 8.392999999999942e-05, 8.366699999999908e-05, 8.388900000000019e-05, 8.338900000000316e-05, 8.372300000000082e-05, 8.338899999999969e-05, 8.384700000000148e-05, 8.365200000000003e-05, 8.379099999999973e-05, 8.33330000000014e-05, 8.317999999999867e-05, 8.355500000000252e-05, 8.39309999999989e-05, 8.38049999999993e-05, 8.356899999999862e-05, 8.387500000000062e-05, 8.376400000000006e-05, 8.390299999999976e-05, 8.372199999999788e-05, 8.343100000000186e-05, 8.36110000000008e-05, 8.34729999999971e-05, 8.345899999999754e-05, 8.334800000000045e-05, 8.336100000000055e-05, 8.38049999999993e-05, 8.34859999999972e-05, 8.377700000000016e-05, 8.370800000000178e-05, 8.370799999999831e-05, 8.369400000000221e-05, 8.388900000000019e-05, 8.363899999999994e-05, 8.391699999999933e-05, 8.37780000000031e-05]</msg>
<status status="PASS" starttime="20201112 12:43:18.945" endtime="20201112 12:43:18.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.940" endtime="20201112 12:43:18.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.950" endtime="20201112 12:43:18.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.953" endtime="20201112 12:43:18.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.952" endtime="20201112 12:43:18.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.948" endtime="20201112 12:43:18.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.583" endtime="20201112 12:43:18.974"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.582" endtime="20201112 12:43:18.974"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.982" endtime="20201112 12:43:19.000"></status>
</kw>
<msg timestamp="20201112 12:43:19.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.981" endtime="20201112 12:43:19.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.002" endtime="20201112 12:43:19.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.004" endtime="20201112 12:43:19.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.978" endtime="20201112 12:43:19.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.976" endtime="20201112 12:43:19.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.014" endtime="20201112 12:43:19.299"></status>
</kw>
<msg timestamp="20201112 12:43:19.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.012" endtime="20201112 12:43:19.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021689556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.303" endtime="20201112 12:43:19.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.311" endtime="20201112 12:43:19.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.010" endtime="20201112 12:43:19.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.008" endtime="20201112 12:43:19.314"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.318" level="INFO">${RESULT} = [{'time': 0.021689556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.449999999999777e-05, 'source_diff': 8.449999999999777e-05}, {'time': 0.021776542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.314" endtime="20201112 12:43:19.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.331" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:19.319" endtime="20201112 12:43:19.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.335" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.334" endtime="20201112 12:43:19.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.338" level="INFO">VALUE: [8.449999999999777e-05, 8.466700000000008e-05, 8.44309999999994e-05, 8.487500000000162e-05, 8.483399999999891e-05, 8.47920000000002e-05, 8.463800000000146e-05, 8.437500000000112e-05, 8.476300000000159e-05, 8.46660000000006e-05, 8.436100000000155e-05, 8.445800000000253e-05, 8.46530000000005e-05, 8.48330000000029e-05, 8.473600000000192e-05, 8.454199999999995e-05, 8.445800000000253e-05, 8.486100000000205e-05, 8.44720000000021e-05, 8.488900000000119e-05, 8.462500000000137e-05, 8.487499999999815e-05, 8.476399999999759e-05, 8.486099999999858e-05, 8.468099999999965e-05, 8.44729999999981e-05, 8.44309999999994e-05, 8.441600000000035e-05, 8.447199999999863e-05, 8.440300000000026e-05, 8.481899999999987e-05, 8.487499999999815e-05, 8.451400000000081e-05, 8.469499999999922e-05, 8.469399999999974e-05, 8.441699999999983e-05, 8.473599999999845e-05, 8.441699999999983e-05, 8.466700000000008e-05, 8.476400000000106e-05, 8.452800000000038e-05, 8.458400000000213e-05, 8.436200000000102e-05, 8.487500000000162e-05, 8.4846999999999e-05, 8.48050000000003e-05, 8.444399999999949e-05, 8.463800000000146e-05, 8.436100000000155e-05, 8.456899999999962e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.336" endtime="20201112 12:43:19.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.332" endtime="20201112 12:43:19.349"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.352" endtime="20201112 12:43:19.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.355" endtime="20201112 12:43:19.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.354" endtime="20201112 12:43:19.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.350" endtime="20201112 12:43:19.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.975" endtime="20201112 12:43:19.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.974" endtime="20201112 12:43:19.376"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.384" endtime="20201112 12:43:19.403"></status>
</kw>
<msg timestamp="20201112 12:43:19.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.383" endtime="20201112 12:43:19.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.404" endtime="20201112 12:43:19.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.407" endtime="20201112 12:43:19.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.380" endtime="20201112 12:43:19.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.378" endtime="20201112 12:43:19.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.417" endtime="20201112 12:43:19.702"></status>
</kw>
<msg timestamp="20201112 12:43:19.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.415" endtime="20201112 12:43:19.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021841958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021927125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.706" endtime="20201112 12:43:19.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.714" endtime="20201112 12:43:19.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.413" endtime="20201112 12:43:19.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.411" endtime="20201112 12:43:19.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.721" level="INFO">${RESULT} = [{'time': 0.021927125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.51669999999971e-05, 'source_diff': 8.51669999999971e-05}, {'time': 0.022015125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:19.717" endtime="20201112 12:43:19.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:19.722" endtime="20201112 12:43:19.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.739" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.738" endtime="20201112 12:43:19.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.742" level="INFO">VALUE: [8.51669999999971e-05, 8.556900000000062e-05, 8.540300000000126e-05, 8.583400000000338e-05, 8.582000000000034e-05, 8.547199999999963e-05, 8.540300000000126e-05, 8.584799999999948e-05, 8.581900000000087e-05, 8.563900000000194e-05, 8.559799999999923e-05, 8.588799999999924e-05, 8.536100000000255e-05, 8.586099999999958e-05, 8.544400000000049e-05, 8.570800000000031e-05, 8.594500000000047e-05, 8.551399999999834e-05, 8.576400000000206e-05, 8.570800000000031e-05, 8.54859999999992e-05, 8.550000000000224e-05, 8.547199999999963e-05, 8.56119999999988e-05, 8.545899999999954e-05, 8.588899999999872e-05, 8.583399999999991e-05, 8.583399999999991e-05, 8.555600000000052e-05, 8.536099999999908e-05, 8.551300000000234e-05, 8.513800000000196e-05, 8.588899999999872e-05, 8.587499999999915e-05, 8.5847e-05, 8.588900000000219e-05, 8.544499999999997e-05, 8.574999999999902e-05, 8.551400000000181e-05, 8.54859999999992e-05, 8.558399999999966e-05, 8.559699999999976e-05, 8.587499999999915e-05, 8.575000000000249e-05, 8.584799999999948e-05, 8.557000000000009e-05, 8.584799999999948e-05, 8.570800000000031e-05, 8.558300000000019e-05, 8.538899999999822e-05]</msg>
<status status="PASS" starttime="20201112 12:43:19.740" endtime="20201112 12:43:19.742"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.736" endtime="20201112 12:43:19.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.745" endtime="20201112 12:43:19.747"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.749" endtime="20201112 12:43:19.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.747" endtime="20201112 12:43:19.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.744" endtime="20201112 12:43:19.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.377" endtime="20201112 12:43:19.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.376" endtime="20201112 12:43:19.769"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.778" endtime="20201112 12:43:19.796"></status>
</kw>
<msg timestamp="20201112 12:43:19.797" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.776" endtime="20201112 12:43:19.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.798" endtime="20201112 12:43:19.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.800" endtime="20201112 12:43:19.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.774" endtime="20201112 12:43:19.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.772" endtime="20201112 12:43:19.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.810" endtime="20201112 12:43:20.095"></status>
</kw>
<msg timestamp="20201112 12:43:20.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.808" endtime="20201112 12:43:20.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021748347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021834514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.099" endtime="20201112 12:43:20.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.107" endtime="20201112 12:43:20.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.806" endtime="20201112 12:43:20.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.804" endtime="20201112 12:43:20.110"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.114" level="INFO">${RESULT} = [{'time': 0.021834514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.61669999999981e-05, 'source_diff': 8.61669999999981e-05}, {'time': 0.021923542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:20.111" endtime="20201112 12:43:20.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.127" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.115" endtime="20201112 12:43:20.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.132" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.131" endtime="20201112 12:43:20.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.134" level="INFO">VALUE: [8.61669999999981e-05, 8.634799999999998e-05, 8.688899999999972e-05, 8.66249999999999e-05, 8.641700000000183e-05, 8.647199999999716e-05, 8.670800000000131e-05, 8.663799999999999e-05, 8.665199999999956e-05, 8.647200000000063e-05, 8.637499999999965e-05, 8.669400000000174e-05, 8.645800000000106e-05, 8.688900000000319e-05, 8.654200000000195e-05, 8.658299999999772e-05, 8.638899999999922e-05, 8.668099999999818e-05, 8.668099999999818e-05, 8.659700000000076e-05, 8.643099999999793e-05, 8.641700000000183e-05, 8.636100000000008e-05, 8.686099999999711e-05, 8.638899999999922e-05, 8.61660000000021e-05, 8.661100000000033e-05, 8.615200000000253e-05, 8.642999999999845e-05, 8.655499999999858e-05, 8.688899999999972e-05, 8.672200000000088e-05, 8.673600000000045e-05, 8.67920000000022e-05, 8.644399999999802e-05, 8.657000000000109e-05, 8.683399999999744e-05, 8.679199999999873e-05, 8.644500000000097e-05, 8.654199999999848e-05, 8.638899999999922e-05, 8.68059999999983e-05, 8.67920000000022e-05, 8.654200000000195e-05, 8.687500000000015e-05, 8.6847000000001e-05, 8.64860000000002e-05, 8.69310000000019e-05, 8.676399999999959e-05, 8.679099999999926e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.133" endtime="20201112 12:43:20.135"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.128" endtime="20201112 12:43:20.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.138" endtime="20201112 12:43:20.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.141" endtime="20201112 12:43:20.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.139" endtime="20201112 12:43:20.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.136" endtime="20201112 12:43:20.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.770" endtime="20201112 12:43:20.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.770" endtime="20201112 12:43:20.162"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.171" endtime="20201112 12:43:20.190"></status>
</kw>
<msg timestamp="20201112 12:43:20.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.170" endtime="20201112 12:43:20.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.192" endtime="20201112 12:43:20.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.194" endtime="20201112 12:43:20.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.167" endtime="20201112 12:43:20.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.165" endtime="20201112 12:43:20.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.204" endtime="20201112 12:43:20.489"></status>
</kw>
<msg timestamp="20201112 12:43:20.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023279319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023366528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.203" endtime="20201112 12:43:20.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023279319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023366528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.493" endtime="20201112 12:43:20.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.502" endtime="20201112 12:43:20.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.200" endtime="20201112 12:43:20.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.198" endtime="20201112 12:43:20.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.508" level="INFO">${RESULT} = [{'time': 0.023366528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.720900000000129e-05, 'source_diff': 8.720900000000129e-05}, {'time': 0.023456472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.505" endtime="20201112 12:43:20.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.521" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.509" endtime="20201112 12:43:20.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.526" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.525" endtime="20201112 12:43:20.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.528" level="INFO">VALUE: [8.720900000000129e-05, 8.779100000000026e-05, 8.772199999999841e-05, 8.73470000000015e-05, 8.786100000000158e-05, 8.765300000000004e-05, 8.779199999999973e-05, 8.790300000000029e-05, 8.750000000000077e-05, 8.76669999999996e-05, 8.78059999999993e-05, 8.765300000000004e-05, 8.751300000000087e-05, 8.744500000000197e-05, 8.76799999999997e-05, 8.763900000000047e-05, 8.787500000000115e-05, 8.738900000000022e-05, 8.779100000000026e-05, 8.740299999999979e-05, 8.752799999999991e-05, 8.755500000000305e-05, 8.773600000000145e-05, 8.741699999999936e-05, 8.737500000000065e-05, 8.737500000000065e-05, 8.768099999999918e-05, 8.78059999999993e-05, 8.781999999999887e-05, 8.787500000000115e-05, 8.74860000000012e-05, 8.76669999999996e-05, 8.759800000000123e-05, 8.787500000000115e-05, 8.759700000000176e-05, 8.750000000000077e-05, 8.751400000000034e-05, 8.750000000000077e-05, 8.740299999999979e-05, 8.763900000000047e-05, 8.779199999999973e-05, 8.770800000000231e-05, 8.756999999999862e-05, 8.741699999999936e-05, 8.76250000000009e-05, 8.78059999999993e-05, 8.770899999999832e-05, 8.783399999999844e-05, 8.776400000000059e-05, 8.74730000000011e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.527" endtime="20201112 12:43:20.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.522" endtime="20201112 12:43:20.530"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.532" endtime="20201112 12:43:20.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.535" endtime="20201112 12:43:20.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.534" endtime="20201112 12:43:20.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.530" endtime="20201112 12:43:20.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.163" endtime="20201112 12:43:20.556"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.162" endtime="20201112 12:43:20.556"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.564" endtime="20201112 12:43:20.582"></status>
</kw>
<msg timestamp="20201112 12:43:20.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.563" endtime="20201112 12:43:20.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.584" endtime="20201112 12:43:20.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.586" endtime="20201112 12:43:20.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.560" endtime="20201112 12:43:20.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.558" endtime="20201112 12:43:20.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.596" endtime="20201112 12:43:20.881"></status>
</kw>
<msg timestamp="20201112 12:43:20.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.595" endtime="20201112 12:43:20.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021856292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.885" endtime="20201112 12:43:20.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.893" endtime="20201112 12:43:20.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.592" endtime="20201112 12:43:20.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.590" endtime="20201112 12:43:20.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.900" level="INFO">${RESULT} = [{'time': 0.021856292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.837499999999818e-05, 'source_diff': 8.837499999999818e-05}, {'time': 0.021947264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:20.896" endtime="20201112 12:43:20.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.913" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:20.901" endtime="20201112 12:43:20.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.917" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.916" endtime="20201112 12:43:20.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.920" level="INFO">VALUE: [8.837499999999818e-05, 8.850000000000177e-05, 8.877799999999769e-05, 8.881999999999987e-05, 8.840300000000079e-05, 8.877800000000116e-05, 8.890300000000129e-05, 8.891700000000086e-05, 8.856999999999962e-05, 8.883399999999944e-05, 8.847199999999916e-05, 8.870799999999984e-05, 8.84860000000022e-05, 8.870799999999984e-05, 8.890299999999782e-05, 8.843000000000045e-05, 8.887499999999868e-05, 8.845799999999959e-05, 8.858299999999972e-05, 8.869400000000027e-05, 8.873599999999898e-05, 8.868100000000018e-05, 8.856999999999962e-05, 8.855600000000005e-05, 8.852800000000091e-05, 8.837499999999818e-05, 8.840300000000079e-05, 8.840300000000079e-05, 8.863800000000199e-05, 8.86800000000007e-05, 8.873599999999898e-05, 8.861099999999886e-05, 8.837500000000165e-05, 8.891600000000138e-05, 8.851400000000134e-05, 8.850000000000177e-05, 8.884699999999954e-05, 8.874999999999855e-05, 8.865300000000104e-05, 8.858299999999972e-05, 8.861100000000233e-05, 8.865299999999757e-05, 8.838899999999775e-05, 8.840300000000079e-05, 8.854200000000048e-05, 8.845899999999907e-05, 8.851400000000134e-05, 8.874999999999855e-05, 8.866599999999766e-05, 8.836099999999861e-05]</msg>
<status status="PASS" starttime="20201112 12:43:20.918" endtime="20201112 12:43:20.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.914" endtime="20201112 12:43:20.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.923" endtime="20201112 12:43:20.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.927" endtime="20201112 12:43:20.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.925" endtime="20201112 12:43:20.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.922" endtime="20201112 12:43:20.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.557" endtime="20201112 12:43:20.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.556" endtime="20201112 12:43:20.947"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.956" endtime="20201112 12:43:20.974"></status>
</kw>
<msg timestamp="20201112 12:43:20.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.954" endtime="20201112 12:43:20.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.976" endtime="20201112 12:43:20.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.978" endtime="20201112 12:43:20.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.952" endtime="20201112 12:43:20.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.950" endtime="20201112 12:43:20.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.988" endtime="20201112 12:43:21.274"></status>
</kw>
<msg timestamp="20201112 12:43:21.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.987" endtime="20201112 12:43:21.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021665417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021754472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.278" endtime="20201112 12:43:21.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.286" endtime="20201112 12:43:21.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.984" endtime="20201112 12:43:21.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.982" endtime="20201112 12:43:21.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.293" level="INFO">${RESULT} = [{'time': 0.021754472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.905500000000108e-05, 'source_diff': 8.905500000000108e-05}, {'time': 0.021846458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.290" endtime="20201112 12:43:21.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.307" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.294" endtime="20201112 12:43:21.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.312" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.311" endtime="20201112 12:43:21.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.314" level="INFO">VALUE: [8.905500000000108e-05, 8.967999999999823e-05, 8.976399999999912e-05, 8.952799999999844e-05, 8.974999999999955e-05, 8.969400000000127e-05, 8.93190000000009e-05, 8.959699999999682e-05, 8.947200000000016e-05, 8.950000000000277e-05, 8.968099999999771e-05, 8.991700000000186e-05, 8.951399999999887e-05, 8.974999999999955e-05, 8.988899999999925e-05, 8.962499999999943e-05, 8.9638999999999e-05, 8.977699999999922e-05, 8.945799999999712e-05, 8.977699999999922e-05, 8.961099999999986e-05, 8.945800000000059e-05, 8.9638999999999e-05, 8.962499999999943e-05, 8.945800000000059e-05, 8.958300000000072e-05, 8.975000000000302e-05, 8.986100000000011e-05, 8.973599999999998e-05, 8.937499999999918e-05, 8.933399999999994e-05, 8.990299999999882e-05, 8.973599999999998e-05, 8.984800000000001e-05, 8.954200000000148e-05, 8.955499999999811e-05, 8.96800000000017e-05, 8.955499999999811e-05, 8.972200000000041e-05, 8.96250000000029e-05, 8.983300000000097e-05, 8.959700000000029e-05, 8.96939999999978e-05, 8.936100000000308e-05, 8.990300000000229e-05, 8.972200000000041e-05, 8.927799999999819e-05, 8.954200000000148e-05, 8.987499999999968e-05, 8.973599999999998e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.313" endtime="20201112 12:43:21.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.308" endtime="20201112 12:43:21.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.317" endtime="20201112 12:43:21.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.321" endtime="20201112 12:43:21.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.319" endtime="20201112 12:43:21.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.316" endtime="20201112 12:43:21.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.948" endtime="20201112 12:43:21.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.948" endtime="20201112 12:43:21.341"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.350" endtime="20201112 12:43:21.367"></status>
</kw>
<msg timestamp="20201112 12:43:21.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.348" endtime="20201112 12:43:21.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.369" endtime="20201112 12:43:21.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.371" endtime="20201112 12:43:21.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.346" endtime="20201112 12:43:21.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.344" endtime="20201112 12:43:21.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.381" endtime="20201112 12:43:21.667"></status>
</kw>
<msg timestamp="20201112 12:43:21.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.380" endtime="20201112 12:43:21.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.671" endtime="20201112 12:43:21.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.679" endtime="20201112 12:43:21.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.377" endtime="20201112 12:43:21.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.376" endtime="20201112 12:43:21.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.686" level="INFO">${RESULT} = [{'time': 0.021798736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.079199999999926e-05, 'source_diff': 9.079199999999926e-05}, {'time': 0.021891764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:21.682" endtime="20201112 12:43:21.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.699" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:21.687" endtime="20201112 12:43:21.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.703" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.702" endtime="20201112 12:43:21.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.706" level="INFO">VALUE: [9.079199999999926e-05, 9.091699999999939e-05, 9.087500000000068e-05, 9.072200000000141e-05, 9.0332999999998e-05, 9.037500000000018e-05, 9.087500000000068e-05, 9.061100000000086e-05, 9.066699999999914e-05, 9.079200000000273e-05, 9.070799999999837e-05, 9.090200000000034e-05, 9.08329999999985e-05, 9.047200000000116e-05, 9.054099999999954e-05, 9.094399999999905e-05, 9.048599999999726e-05, 9.083300000000197e-05, 9.0639e-05, 9.074999999999708e-05, 9.036100000000061e-05, 9.08060000000023e-05, 9.069500000000175e-05, 9.079199999999926e-05, 9.043000000000245e-05, 9.038900000000322e-05, 9.016699999999864e-05, 9.037500000000018e-05, 9.06670000000026e-05, 9.08190000000024e-05, 9.087500000000068e-05, 9.072200000000141e-05, 9.045799999999812e-05, 9.041599999999941e-05, 9.051399999999987e-05, 9.061100000000086e-05, 9.073600000000098e-05, 9.054200000000248e-05, 9.088900000000025e-05, 9.059699999999782e-05, 9.026399999999962e-05, 9.038899999999975e-05, 9.045900000000107e-05, 9.070899999999785e-05, 9.066599999999966e-05, 9.045900000000107e-05, 9.041599999999941e-05, 9.061100000000086e-05, 9.052699999999997e-05, 9.092999999999948e-05]</msg>
<status status="PASS" starttime="20201112 12:43:21.704" endtime="20201112 12:43:21.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.700" endtime="20201112 12:43:21.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.709" endtime="20201112 12:43:21.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.713" endtime="20201112 12:43:21.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.711" endtime="20201112 12:43:21.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.708" endtime="20201112 12:43:21.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.342" endtime="20201112 12:43:21.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.342" endtime="20201112 12:43:21.733"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.742" endtime="20201112 12:43:21.760"></status>
</kw>
<msg timestamp="20201112 12:43:21.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.740" endtime="20201112 12:43:21.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.761" endtime="20201112 12:43:21.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.764" endtime="20201112 12:43:21.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.738" endtime="20201112 12:43:21.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.736" endtime="20201112 12:43:21.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.774" endtime="20201112 12:43:22.059"></status>
</kw>
<msg timestamp="20201112 12:43:22.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.772" endtime="20201112 12:43:22.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021701292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021793097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.063" endtime="20201112 12:43:22.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.072" endtime="20201112 12:43:22.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.770" endtime="20201112 12:43:22.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.768" endtime="20201112 12:43:22.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.078" level="INFO">${RESULT} = [{'time': 0.021793097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.180500000000036e-05, 'source_diff': 9.180500000000036e-05}, {'time': 0.021887083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.075" endtime="20201112 12:43:22.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.091" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:22.079" endtime="20201112 12:43:22.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.096" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.095" endtime="20201112 12:43:22.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.098" level="INFO">VALUE: [9.180500000000036e-05, 9.161100000000186e-05, 9.162499999999796e-05, 9.18329999999995e-05, 9.145799999999912e-05, 9.15139999999974e-05, 9.158299999999925e-05, 9.190200000000134e-05, 9.136099999999814e-05, 9.155599999999958e-05, 9.143099999999946e-05, 9.172299999999842e-05, 9.137500000000118e-05, 9.138900000000075e-05, 9.140200000000084e-05, 9.136200000000108e-05, 9.179200000000026e-05, 9.151400000000087e-05, 9.172200000000241e-05, 9.194499999999953e-05, 9.142999999999998e-05, 9.165300000000057e-05, 9.16939999999998e-05, 9.194499999999953e-05, 9.172200000000241e-05, 9.145800000000259e-05, 9.170899999999885e-05, 9.169499999999928e-05, 9.162499999999796e-05, 9.193099999999996e-05, 9.122199999999844e-05, 9.187500000000168e-05, 9.187500000000168e-05, 9.14450000000025e-05, 9.16939999999998e-05, 9.142999999999998e-05, 9.14719999999987e-05, 9.15139999999974e-05, 9.134699999999857e-05, 9.158299999999925e-05, 9.18329999999995e-05, 9.161099999999839e-05, 9.18199999999994e-05, 9.179200000000026e-05, 9.1639000000001e-05, 9.165300000000057e-05, 9.172199999999894e-05, 9.15000000000013e-05, 9.187500000000168e-05, 9.172299999999842e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.097" endtime="20201112 12:43:22.099"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.092" endtime="20201112 12:43:22.100"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.102" endtime="20201112 12:43:22.103"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.105" endtime="20201112 12:43:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.104" endtime="20201112 12:43:22.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.100" endtime="20201112 12:43:22.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.734" endtime="20201112 12:43:22.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.734" endtime="20201112 12:43:22.126"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.134" endtime="20201112 12:43:22.154"></status>
</kw>
<msg timestamp="20201112 12:43:22.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.133" endtime="20201112 12:43:22.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.155" endtime="20201112 12:43:22.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.158" endtime="20201112 12:43:22.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.130" endtime="20201112 12:43:22.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.128" endtime="20201112 12:43:22.161"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.168" endtime="20201112 12:43:22.454"></status>
</kw>
<msg timestamp="20201112 12:43:22.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.166" endtime="20201112 12:43:22.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021747944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.458" endtime="20201112 12:43:22.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.466" endtime="20201112 12:43:22.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.164" endtime="20201112 12:43:22.468"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.162" endtime="20201112 12:43:22.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.473" level="INFO">${RESULT} = [{'time': 0.021840569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.262499999999896e-05, 'source_diff': 9.262499999999896e-05}, {'time': 0.021935569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.469" endtime="20201112 12:43:22.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.486" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:22.474" endtime="20201112 12:43:22.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.490" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.489" endtime="20201112 12:43:22.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.493" level="INFO">VALUE: [9.262499999999896e-05, 9.234699999999957e-05, 9.24589999999996e-05, 9.273599999999951e-05, 9.24719999999997e-05, 9.26940000000008e-05, 9.280500000000136e-05, 9.279200000000126e-05, 9.26529999999981e-05, 9.240299999999785e-05, 9.258399999999972e-05, 9.254200000000101e-05, 9.255600000000058e-05, 9.284799999999954e-05, 9.240299999999785e-05, 9.268000000000123e-05, 9.276300000000265e-05, 9.263799999999905e-05, 9.281900000000093e-05, 9.245800000000012e-05, 9.25269999999985e-05, 9.272199999999994e-05, 9.272199999999994e-05, 9.280499999999789e-05, 9.280500000000136e-05, 9.266700000000114e-05, 9.25139999999984e-05, 9.280600000000083e-05, 9.269500000000028e-05, 9.259799999999929e-05, 9.244500000000003e-05, 9.258399999999972e-05, 9.237499999999871e-05, 9.238899999999828e-05, 9.279200000000126e-05, 9.273599999999951e-05, 9.238899999999828e-05, 9.240300000000132e-05, 9.291700000000139e-05, 9.290299999999835e-05, 9.256900000000068e-05, 9.240299999999785e-05, 9.28330000000005e-05, 9.268100000000071e-05, 9.290299999999835e-05, 9.255600000000058e-05, 9.244500000000003e-05, 9.255599999999711e-05, 9.248599999999926e-05, 9.244400000000055e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.491" endtime="20201112 12:43:22.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.487" endtime="20201112 12:43:22.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.496" endtime="20201112 12:43:22.497"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.500" endtime="20201112 12:43:22.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.498" endtime="20201112 12:43:22.519"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.495" endtime="20201112 12:43:22.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.127" endtime="20201112 12:43:22.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.126" endtime="20201112 12:43:22.520"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.529" endtime="20201112 12:43:22.547"></status>
</kw>
<msg timestamp="20201112 12:43:22.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.527" endtime="20201112 12:43:22.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.548" endtime="20201112 12:43:22.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.550" endtime="20201112 12:43:22.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.525" endtime="20201112 12:43:22.553"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.523" endtime="20201112 12:43:22.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.560" endtime="20201112 12:43:22.845"></status>
</kw>
<msg timestamp="20201112 12:43:22.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.559" endtime="20201112 12:43:22.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.849" endtime="20201112 12:43:22.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.857" endtime="20201112 12:43:22.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.556" endtime="20201112 12:43:22.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.555" endtime="20201112 12:43:22.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.864" level="INFO">${RESULT} = [{'time': 0.021861167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.393100000000196e-05, 'source_diff': 9.393100000000196e-05}, {'time': 0.021957167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.860" endtime="20201112 12:43:22.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.878" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:22.865" endtime="20201112 12:43:22.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.882" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.881" endtime="20201112 12:43:22.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.885" level="INFO">VALUE: [9.393100000000196e-05, 9.338899999999928e-05, 9.351400000000287e-05, 9.38200000000014e-05, 9.354099999999907e-05, 9.35130000000034e-05, 9.345800000000112e-05, 9.336100000000014e-05, 9.354100000000254e-05, 9.381899999999846e-05, 9.340300000000232e-05, 9.384700000000107e-05, 9.383299999999803e-05, 9.370800000000137e-05, 9.388899999999978e-05, 9.368099999999824e-05, 9.36529999999991e-05, 9.33200000000009e-05, 9.373600000000051e-05, 9.370900000000085e-05, 9.344499999999756e-05, 9.336199999999961e-05, 9.375000000000008e-05, 9.347199999999722e-05, 9.361100000000039e-05, 9.362499999999996e-05, 9.369500000000128e-05, 9.370800000000137e-05, 9.333299999999753e-05, 9.35139999999994e-05, 9.338899999999928e-05, 9.376399999999965e-05, 9.368100000000171e-05, 9.323600000000001e-05, 9.361100000000039e-05, 9.372200000000094e-05, 9.334800000000004e-05, 9.334800000000004e-05, 9.355600000000158e-05, 9.368000000000223e-05, 9.3639000000003e-05, 9.340200000000284e-05, 9.367999999999876e-05, 9.37079999999979e-05, 9.362499999999996e-05, 9.376399999999965e-05, 9.354200000000201e-05, 9.394399999999858e-05, 9.316700000000164e-05, 9.386099999999717e-05]</msg>
<status status="PASS" starttime="20201112 12:43:22.883" endtime="20201112 12:43:22.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.879" endtime="20201112 12:43:22.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.888" endtime="20201112 12:43:22.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.892" endtime="20201112 12:43:22.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.890" endtime="20201112 12:43:22.911"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.887" endtime="20201112 12:43:22.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.521" endtime="20201112 12:43:22.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.521" endtime="20201112 12:43:22.912"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.921" endtime="20201112 12:43:22.940"></status>
</kw>
<msg timestamp="20201112 12:43:22.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.919" endtime="20201112 12:43:22.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.941" endtime="20201112 12:43:22.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.944" endtime="20201112 12:43:22.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.917" endtime="20201112 12:43:22.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.915" endtime="20201112 12:43:22.947"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.953" endtime="20201112 12:43:23.239"></status>
</kw>
<msg timestamp="20201112 12:43:23.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.952" endtime="20201112 12:43:23.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022050389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022144861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.243" endtime="20201112 12:43:23.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.251" endtime="20201112 12:43:23.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.949" endtime="20201112 12:43:23.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.948" endtime="20201112 12:43:23.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.258" level="INFO">${RESULT} = [{'time': 0.022144861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.447199999999822e-05, 'source_diff': 9.447199999999822e-05}, {'time': 0.022241861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:23.255" endtime="20201112 12:43:23.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.271" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.259" endtime="20201112 12:43:23.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.276" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.275" endtime="20201112 12:43:23.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.278" level="INFO">VALUE: [9.447199999999822e-05, 9.473600000000151e-05, 9.444500000000203e-05, 9.468099999999924e-05, 9.481999999999893e-05, 9.450000000000083e-05, 9.46530000000001e-05, 9.447199999999822e-05, 9.466699999999967e-05, 9.473600000000151e-05, 9.448600000000126e-05, 9.456900000000268e-05, 9.473600000000151e-05, 9.44720000000017e-05, 9.48330000000025e-05, 9.47079999999989e-05, 9.444399999999908e-05, 9.416699999999917e-05, 9.466700000000314e-05, 9.476399999999718e-05, 9.437500000000071e-05, 9.491699999999992e-05, 9.490300000000035e-05, 9.491699999999992e-05, 9.444499999999856e-05, 9.491699999999992e-05, 9.452799999999997e-05, 9.448699999999727e-05, 9.454199999999954e-05, 9.456900000000268e-05, 9.451300000000093e-05, 9.490200000000087e-05, 9.467999999999976e-05, 9.459699999999835e-05, 9.486099999999817e-05, 9.454199999999954e-05, 9.477800000000022e-05, 9.46530000000001e-05, 9.466699999999967e-05, 9.466699999999967e-05, 9.473600000000151e-05, 9.490300000000035e-05, 9.459800000000129e-05, 9.461100000000139e-05, 9.458400000000172e-05, 9.456999999999868e-05, 9.463800000000105e-05, 9.43880000000008e-05, 9.43469999999981e-05, 9.455499999999964e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.277" endtime="20201112 12:43:23.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.272" endtime="20201112 12:43:23.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.282" endtime="20201112 12:43:23.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.285" endtime="20201112 12:43:23.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.283" endtime="20201112 12:43:23.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.280" endtime="20201112 12:43:23.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.913" endtime="20201112 12:43:23.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.913" endtime="20201112 12:43:23.306"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.314" endtime="20201112 12:43:23.332"></status>
</kw>
<msg timestamp="20201112 12:43:23.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.313" endtime="20201112 12:43:23.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.334" endtime="20201112 12:43:23.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.336" endtime="20201112 12:43:23.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.310" endtime="20201112 12:43:23.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.308" endtime="20201112 12:43:23.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.346" endtime="20201112 12:43:23.632"></status>
</kw>
<msg timestamp="20201112 12:43:23.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:23.345" endtime="20201112 12:43:23.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021832, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:23.636" endtime="20201112 12:43:23.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.645" endtime="20201112 12:43:23.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.342" endtime="20201112 12:43:23.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.340" endtime="20201112 12:43:23.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.651" level="INFO">${RESULT} = [{'time': 0.021832, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.511100000000189e-05, 'source_diff': 9.511100000000189e-05}, {'time': 0.021929972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:23.648" endtime="20201112 12:43:23.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.664" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:23.652" endtime="20201112 12:43:23.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.669" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.668" endtime="20201112 12:43:23.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.671" level="INFO">VALUE: [9.511100000000189e-05, 9.543000000000051e-05, 9.569400000000033e-05, 9.568000000000076e-05, 9.538900000000128e-05, 9.588900000000178e-05, 9.565299999999763e-05, 9.588899999999831e-05, 9.558399999999925e-05, 9.53469999999991e-05, 9.561100000000239e-05, 9.56530000000011e-05, 9.558399999999925e-05, 9.569499999999981e-05, 9.541700000000042e-05, 9.569400000000033e-05, 9.54019999999979e-05, 9.572199999999947e-05, 9.565200000000162e-05, 9.547199999999922e-05, 9.581900000000046e-05, 9.545800000000312e-05, 9.543000000000051e-05, 9.566700000000067e-05, 9.563900000000153e-05, 9.58469999999996e-05, 9.58059999999969e-05, 9.538899999999781e-05, 9.574999999999861e-05, 9.577699999999828e-05, 9.541700000000042e-05, 9.53880000000018e-05, 9.549999999999836e-05, 9.583300000000003e-05, 9.57079999999999e-05, 9.572200000000294e-05, 9.51660000000007e-05, 9.545800000000312e-05, 9.559700000000282e-05, 9.573600000000251e-05, 9.537499999999824e-05, 9.562500000000196e-05, 9.562500000000196e-05, 9.541699999999695e-05, 9.559799999999882e-05, 9.562499999999849e-05, 9.54729999999987e-05, 9.568100000000024e-05, 9.591700000000092e-05, 9.54859999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:43:23.670" endtime="20201112 12:43:23.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.665" endtime="20201112 12:43:23.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.675" endtime="20201112 12:43:23.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.678" endtime="20201112 12:43:23.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.677" endtime="20201112 12:43:23.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.673" endtime="20201112 12:43:23.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.307" endtime="20201112 12:43:23.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.306" endtime="20201112 12:43:23.699"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.707" endtime="20201112 12:43:23.726"></status>
</kw>
<msg timestamp="20201112 12:43:23.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.706" endtime="20201112 12:43:23.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.728" endtime="20201112 12:43:23.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.730" endtime="20201112 12:43:23.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.703" endtime="20201112 12:43:23.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.701" endtime="20201112 12:43:23.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.740" endtime="20201112 12:43:24.024"></status>
</kw>
<msg timestamp="20201112 12:43:24.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.738" endtime="20201112 12:43:24.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021758069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.029" endtime="20201112 12:43:24.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.037" endtime="20201112 12:43:24.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.736" endtime="20201112 12:43:24.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.734" endtime="20201112 12:43:24.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.043" level="INFO">${RESULT} = [{'time': 0.021854681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.661199999999939e-05, 'source_diff': 9.661199999999939e-05}, {'time': 0.021953667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.040" endtime="20201112 12:43:24.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.057" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:24.044" endtime="20201112 12:43:24.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.061" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.060" endtime="20201112 12:43:24.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.063" level="INFO">VALUE: [9.661199999999939e-05, 9.659799999999982e-05, 9.654200000000154e-05, 9.665299999999863e-05, 9.68340000000005e-05, 9.662499999999949e-05, 9.662500000000296e-05, 9.642999999999805e-05, 9.633300000000053e-05, 9.694500000000106e-05, 9.636099999999967e-05, 9.661099999999992e-05, 9.680500000000189e-05, 9.661099999999992e-05, 9.687499999999974e-05, 9.641699999999795e-05, 9.663900000000253e-05, 9.677799999999875e-05, 9.655600000000111e-05, 9.679199999999832e-05, 9.662499999999949e-05, 9.661199999999939e-05, 9.643100000000099e-05, 9.645799999999718e-05, 9.652699999999903e-05, 9.654100000000207e-05, 9.649999999999936e-05, 9.679099999999885e-05, 9.659700000000035e-05, 9.661099999999992e-05, 9.677799999999875e-05, 9.636100000000314e-05, 9.64859999999998e-05, 9.688900000000278e-05, 9.64859999999998e-05, 9.645900000000013e-05, 9.674999999999961e-05, 9.64729999999997e-05, 9.64859999999998e-05, 9.684800000000007e-05, 9.663799999999959e-05, 9.655500000000164e-05, 9.650000000000283e-05, 9.662499999999949e-05, 9.649999999999936e-05, 9.676399999999918e-05, 9.676399999999918e-05, 9.631900000000096e-05, 9.670900000000038e-05, 9.654200000000154e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.062" endtime="20201112 12:43:24.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.057" endtime="20201112 12:43:24.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.067" endtime="20201112 12:43:24.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.070" endtime="20201112 12:43:24.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.069" endtime="20201112 12:43:24.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.065" endtime="20201112 12:43:24.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.700" endtime="20201112 12:43:24.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.699" endtime="20201112 12:43:24.091"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.099" endtime="20201112 12:43:24.118"></status>
</kw>
<msg timestamp="20201112 12:43:24.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.098" endtime="20201112 12:43:24.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.120" endtime="20201112 12:43:24.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.122" endtime="20201112 12:43:24.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.096" endtime="20201112 12:43:24.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.093" endtime="20201112 12:43:24.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.132" endtime="20201112 12:43:24.418"></status>
</kw>
<msg timestamp="20201112 12:43:24.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.131" endtime="20201112 12:43:24.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021729347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021827347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.422" endtime="20201112 12:43:24.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.430" endtime="20201112 12:43:24.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.128" endtime="20201112 12:43:24.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.126" endtime="20201112 12:43:24.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.437" level="INFO">${RESULT} = [{'time': 0.021827347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.800000000000086e-05, 'source_diff': 9.800000000000086e-05}, {'time': 0.021927306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:24.433" endtime="20201112 12:43:24.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.451" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:24.438" endtime="20201112 12:43:24.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.455" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.454" endtime="20201112 12:43:24.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.458" level="INFO">VALUE: [9.800000000000086e-05, 9.773700000000052e-05, 9.758400000000125e-05, 9.719400000000183e-05, 9.741699999999895e-05, 9.736100000000067e-05, 9.787500000000074e-05, 9.75279999999995e-05, 9.768000000000276e-05, 9.733300000000153e-05, 9.769399999999887e-05, 9.783299999999856e-05, 9.740299999999938e-05, 9.780600000000236e-05, 9.783299999999856e-05, 9.770899999999791e-05, 9.763900000000006e-05, 9.790299999999988e-05, 9.763900000000006e-05, 9.781899999999899e-05, 9.779099999999985e-05, 9.754100000000307e-05, 9.740299999999938e-05, 9.713899999999956e-05, 9.775000000000061e-05, 9.742999999999905e-05, 9.791699999999945e-05, 9.745900000000113e-05, 9.754200000000254e-05, 9.761100000000092e-05, 9.759699999999788e-05, 9.770899999999791e-05, 9.769499999999834e-05, 9.777799999999975e-05, 9.791699999999945e-05, 9.744399999999862e-05, 9.75279999999995e-05, 9.788900000000031e-05, 9.745799999999818e-05, 9.763900000000006e-05, 9.79020000000004e-05, 9.791599999999998e-05, 9.737500000000024e-05, 9.783299999999856e-05, 9.783299999999856e-05, 9.762500000000049e-05, 9.781900000000246e-05, 9.762500000000049e-05, 9.755599999999864e-05, 9.743099999999852e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.456" endtime="20201112 12:43:24.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.452" endtime="20201112 12:43:24.471"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.474" endtime="20201112 12:43:24.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.477" endtime="20201112 12:43:24.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.476" endtime="20201112 12:43:24.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.472" endtime="20201112 12:43:24.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.092" endtime="20201112 12:43:24.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.091" endtime="20201112 12:43:24.498"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.506" endtime="20201112 12:43:24.524"></status>
</kw>
<msg timestamp="20201112 12:43:24.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.505" endtime="20201112 12:43:24.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.526" endtime="20201112 12:43:24.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.528" endtime="20201112 12:43:24.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.502" endtime="20201112 12:43:24.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.500" endtime="20201112 12:43:24.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.538" endtime="20201112 12:43:24.824"></status>
</kw>
<msg timestamp="20201112 12:43:24.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.537" endtime="20201112 12:43:24.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.828" endtime="20201112 12:43:24.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.837" endtime="20201112 12:43:24.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.534" endtime="20201112 12:43:24.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.532" endtime="20201112 12:43:24.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.843" level="INFO">${RESULT} = [{'time': 0.021831681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.83059999999994e-05, 'source_diff': 9.83059999999994e-05}, {'time': 0.021932681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:24.840" endtime="20201112 12:43:24.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.856" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:24.844" endtime="20201112 12:43:24.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.861" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.860" endtime="20201112 12:43:24.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.863" level="INFO">VALUE: [9.83059999999994e-05, 9.86670000000002e-05, 9.886100000000217e-05, 9.884699999999913e-05, 9.869399999999987e-05, 9.883299999999956e-05, 9.85280000000005e-05, 9.893100000000002e-05, 9.869399999999987e-05, 9.83470000000021e-05, 9.841699999999995e-05, 9.859799999999835e-05, 9.840300000000038e-05, 9.84860000000018e-05, 9.84860000000018e-05, 9.834699999999863e-05, 9.888899999999784e-05, 9.859799999999835e-05, 9.858399999999878e-05, 9.891700000000045e-05, 9.866600000000073e-05, 9.881899999999999e-05, 9.89020000000014e-05, 9.845799999999919e-05, 9.837500000000124e-05, 9.877800000000075e-05, 9.851400000000093e-05, 9.887500000000174e-05, 9.891700000000045e-05, 9.869500000000281e-05, 9.862500000000149e-05, 9.854200000000007e-05, 9.863899999999759e-05, 9.88479999999986e-05, 9.879199999999685e-05, 9.851299999999799e-05, 9.870899999999891e-05, 9.834699999999863e-05, 9.880500000000042e-05, 9.8721999999999e-05, 9.8721999999999e-05, 9.873599999999857e-05, 9.843000000000005e-05, 9.859699999999888e-05, 9.838900000000081e-05, 9.858300000000278e-05, 9.888900000000131e-05, 9.844500000000256e-05, 9.843099999999952e-05, 9.834800000000157e-05]</msg>
<status status="PASS" starttime="20201112 12:43:24.862" endtime="20201112 12:43:24.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.857" endtime="20201112 12:43:24.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.867" endtime="20201112 12:43:24.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.870" endtime="20201112 12:43:24.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.869" endtime="20201112 12:43:24.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.865" endtime="20201112 12:43:24.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.499" endtime="20201112 12:43:24.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.498" endtime="20201112 12:43:24.891"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.899" endtime="20201112 12:43:24.918"></status>
</kw>
<msg timestamp="20201112 12:43:24.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.898" endtime="20201112 12:43:24.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.920" endtime="20201112 12:43:24.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.922" endtime="20201112 12:43:24.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.895" endtime="20201112 12:43:24.925"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.893" endtime="20201112 12:43:24.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.932" endtime="20201112 12:43:25.217"></status>
</kw>
<msg timestamp="20201112 12:43:25.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.931" endtime="20201112 12:43:25.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022045431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.221" endtime="20201112 12:43:25.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.229" endtime="20201112 12:43:25.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.928" endtime="20201112 12:43:25.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.926" endtime="20201112 12:43:25.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.236" level="INFO">${RESULT} = [{'time': 0.022045431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.9028000000001e-05, 'source_diff': 9.9028000000001e-05}, {'time': 0.022147417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:43:25.232" endtime="20201112 12:43:25.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.249" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:25.237" endtime="20201112 12:43:25.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.254" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.253" endtime="20201112 12:43:25.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.256" level="INFO">VALUE: [9.9028000000001e-05, 9.969500000000034e-05, 9.951399999999846e-05, 9.96800000000013e-05, 9.951400000000193e-05, 9.943000000000105e-05, 9.988899999999884e-05, 9.967999999999783e-05, 9.980500000000142e-05, 9.969400000000087e-05, 9.956900000000074e-05, 9.974999999999914e-05, 9.991700000000145e-05, 9.977799999999828e-05, 9.983300000000056e-05, 9.991700000000145e-05, 9.977699999999881e-05, 9.918100000000027e-05, 9.947199999999976e-05, 9.952799999999803e-05, 9.970800000000044e-05, 9.959699999999988e-05, 9.973599999999957e-05, 9.95280000000015e-05, 9.983300000000056e-05, 9.947199999999976e-05, 9.979200000000132e-05, 9.937500000000224e-05, 9.947199999999976e-05, 9.937499999999877e-05, 9.963900000000206e-05, 9.94999999999989e-05, 9.945899999999966e-05, 9.987500000000274e-05, 9.972299999999948e-05, 9.979200000000132e-05, 9.941700000000095e-05, 9.983299999999709e-05, 9.980500000000142e-05, 9.916600000000123e-05, 9.952799999999803e-05, 9.943000000000105e-05, 9.956900000000074e-05, 9.987499999999927e-05, 9.963899999999859e-05, 9.952799999999803e-05, 9.95280000000015e-05, 9.968100000000077e-05, 9.969500000000034e-05, 9.948599999999932e-05]</msg>
<status status="PASS" starttime="20201112 12:43:25.255" endtime="20201112 12:43:25.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.250" endtime="20201112 12:43:25.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.260" endtime="20201112 12:43:25.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.263" endtime="20201112 12:43:25.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.262" endtime="20201112 12:43:25.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.258" endtime="20201112 12:43:25.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.892" endtime="20201112 12:43:25.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.891" endtime="20201112 12:43:25.284"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.292" endtime="20201112 12:43:25.311"></status>
</kw>
<msg timestamp="20201112 12:43:25.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.291" endtime="20201112 12:43:25.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.313" endtime="20201112 12:43:25.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.315" endtime="20201112 12:43:25.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.288" endtime="20201112 12:43:25.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.286" endtime="20201112 12:43:25.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.325" endtime="20201112 12:43:25.611"></status>
</kw>
<msg timestamp="20201112 12:43:25.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:25.323" endtime="20201112 12:43:25.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021877917, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:25.615" endtime="20201112 12:43:25.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.623" endtime="20201112 12:43:25.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.321" endtime="20201112 12:43:25.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.319" endtime="20201112 12:43:25.625"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.629" level="INFO">${RESULT} = [{'time': 0.021877917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010091699999999898, 'source_diff': 0.00010091699999999898}, {'time': 0.021980931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:25.626" endtime="20201112 12:43:25.629"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.642" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:25.630" endtime="20201112 12:43:25.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.647" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.646" endtime="20201112 12:43:25.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.649" level="INFO">VALUE: [0.00010091699999999898, 0.00010075000000000014, 0.00010061100000000045, 0.00010079199999999885, 0.00010075000000000014, 0.0001004999999999999, 0.00010059699999999741, 0.00010037499999999977, 0.0001004999999999999, 0.00010090299999999941, 0.00010091700000000245, 0.00010052799999999903, 0.00010051399999999946, 0.00010062500000000002, 0.00010077799999999928, 0.00010044499999999762, 0.0001003060000000014, 0.00010062500000000002, 0.00010077699999999981, 0.00010083300000000156, 0.00010073600000000058, 0.00010052699999999956, 0.00010038899999999934, 0.00010042999999999858, 0.0001003610000000002, 0.00010075000000000014, 0.00010047199999999729, 0.00010079199999999885, 0.00010040299999999891, 0.00010045800000000119, 0.00010061100000000045, 0.0001004999999999999, 0.00010063899999999959, 0.000100819999999998, 0.00010062500000000002, 0.00010043000000000205, 0.00010070799999999797, 0.00010075000000000014, 0.00010063899999999959, 0.00010080499999999895, 0.00010054200000000207, 0.00010083299999999809, 0.00010059699999999741, 0.00010044400000000162, 0.00010047200000000076, 0.00010043100000000152, 0.00010061100000000045, 0.0001006670000000022, 0.00010070900000000091, 0.00010061100000000045]</msg>
<status status="PASS" starttime="20201112 12:43:25.648" endtime="20201112 12:43:25.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.643" endtime="20201112 12:43:25.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.653" endtime="20201112 12:43:25.654"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.656" endtime="20201112 12:43:25.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.654" endtime="20201112 12:43:25.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.651" endtime="20201112 12:43:25.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.285" endtime="20201112 12:43:25.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.284" endtime="20201112 12:43:25.677"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.685" endtime="20201112 12:43:25.704"></status>
</kw>
<msg timestamp="20201112 12:43:25.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.684" endtime="20201112 12:43:25.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.706" endtime="20201112 12:43:25.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.708" endtime="20201112 12:43:25.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.681" endtime="20201112 12:43:25.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.679" endtime="20201112 12:43:25.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.718" endtime="20201112 12:43:26.003"></status>
</kw>
<msg timestamp="20201112 12:43:26.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.716" endtime="20201112 12:43:26.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.007" endtime="20201112 12:43:26.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.015" endtime="20201112 12:43:26.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.714" endtime="20201112 12:43:26.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.712" endtime="20201112 12:43:26.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.022" level="INFO">${RESULT} = [{'time': 0.021863389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010170799999999897, 'source_diff': 0.00010170799999999897}, {'time': 0.021967403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.018" endtime="20201112 12:43:26.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.023" endtime="20201112 12:43:26.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.040" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.039" endtime="20201112 12:43:26.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.042" level="INFO">VALUE: [0.00010170799999999897, 0.00010145900000000166, 0.0001013610000000012, 0.00010190199999999747, 0.0001013619999999972, 0.00010166600000000026, 0.00010144499999999862, 0.00010163900000000059, 0.00010179199999999985, 0.00010175000000000115, 0.00010167999999999983, 0.0001013610000000012, 0.00010165300000000016, 0.00010188900000000084, 0.00010170799999999897, 0.00010170799999999897, 0.00010170799999999897, 0.00010148599999999786, 0.00010188899999999737, 0.00010138899999999687, 0.00010144500000000209, 0.00010169500000000234, 0.00010165300000000016, 0.00010162500000000102, 0.00010156899999999927, 0.0001018610000000017, 0.00010148600000000133, 0.00010181899999999952, 0.0001017359999999981, 0.00010145799999999872, 0.00010190300000000041, 0.00010145799999999872, 0.00010172199999999854, 0.00010169500000000234, 0.0001018610000000017, 0.00010137500000000077, 0.0001013610000000012, 0.00010179199999999985, 0.00010162500000000102, 0.00010133299999999859, 0.00010184699999999866, 0.00010175000000000115, 0.00010154100000000013, 0.00010144399999999915, 0.0001015000000000009, 0.00010141700000000295, 0.00010184700000000213, 0.00010173600000000158, 0.00010184699999999866, 0.0001015419999999996]</msg>
<status status="PASS" starttime="20201112 12:43:26.041" endtime="20201112 12:43:26.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.037" endtime="20201112 12:43:26.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.046" endtime="20201112 12:43:26.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.049" endtime="20201112 12:43:26.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.048" endtime="20201112 12:43:26.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.044" endtime="20201112 12:43:26.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.678" endtime="20201112 12:43:26.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.677" endtime="20201112 12:43:26.070"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.078" endtime="20201112 12:43:26.098"></status>
</kw>
<msg timestamp="20201112 12:43:26.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.077" endtime="20201112 12:43:26.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.099" endtime="20201112 12:43:26.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.102" endtime="20201112 12:43:26.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.074" endtime="20201112 12:43:26.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.072" endtime="20201112 12:43:26.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.111" endtime="20201112 12:43:26.396"></status>
</kw>
<msg timestamp="20201112 12:43:26.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:26.110" endtime="20201112 12:43:26.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021761, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021863417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:26.400" endtime="20201112 12:43:26.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.408" endtime="20201112 12:43:26.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.107" endtime="20201112 12:43:26.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.106" endtime="20201112 12:43:26.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.415" level="INFO">${RESULT} = [{'time': 0.021863417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010241700000000048, 'source_diff': 0.00010241700000000048}, {'time': 0.021968431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.411" endtime="20201112 12:43:26.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.428" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.416" endtime="20201112 12:43:26.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.432" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.431" endtime="20201112 12:43:26.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.435" level="INFO">VALUE: [0.00010241700000000048, 0.00010243100000000005, 0.00010276400000000172, 0.0001023199999999995, 0.0001023879999999984, 0.00010274999999999868, 0.00010273600000000258, 0.00010244399999999668, 0.00010270799999999997, 0.00010241700000000048, 0.00010290299999999794, 0.0001023610000000022, 0.00010273600000000258, 0.00010259699999999941, 0.00010247199999999929, 0.00010269499999999987, 0.0001025000000000019, 0.00010283399999999956, 0.00010234799999999863, 0.000102513999999998, 0.0001025550000000007, 0.00010279100000000138, 0.0001023749999999983, 0.00010244400000000015, 0.00010284699999999966, 0.00010258299999999984, 0.00010279200000000085, 0.00010283300000000009, 0.00010258299999999984, 0.00010238900000000134, 0.00010277799999999782, 0.00010287500000000227, 0.00010261099999999898, 0.0001027359999999991, 0.00010212499999999805, 0.00010244400000000015, 0.00010266700000000073, 0.00010280500000000095, 0.00010279099999999791, 0.0001028749999999988, 0.00010247199999999929, 0.00010273600000000258, 0.00010269499999999987, 0.00010241700000000048, 0.00010280600000000042, 0.00010241700000000048, 0.00010241700000000048, 0.00010284699999999966, 0.00010272199999999954, 0.00010265300000000116]</msg>
<status status="PASS" starttime="20201112 12:43:26.433" endtime="20201112 12:43:26.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.429" endtime="20201112 12:43:26.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.438" endtime="20201112 12:43:26.439"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.441" endtime="20201112 12:43:26.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.440" endtime="20201112 12:43:26.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.436" endtime="20201112 12:43:26.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.071" endtime="20201112 12:43:26.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.070" endtime="20201112 12:43:26.462"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.470" endtime="20201112 12:43:26.490"></status>
</kw>
<msg timestamp="20201112 12:43:26.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.469" endtime="20201112 12:43:26.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.492" endtime="20201112 12:43:26.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.494" endtime="20201112 12:43:26.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.466" endtime="20201112 12:43:26.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.464" endtime="20201112 12:43:26.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.504" endtime="20201112 12:43:26.789"></status>
</kw>
<msg timestamp="20201112 12:43:26.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.502" endtime="20201112 12:43:26.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.793" endtime="20201112 12:43:26.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.801" endtime="20201112 12:43:26.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.500" endtime="20201112 12:43:26.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.498" endtime="20201112 12:43:26.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.808" level="INFO">${RESULT} = [{'time': 0.021736694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010359700000000041, 'source_diff': 0.00010359700000000041}, {'time': 0.021842694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.805" endtime="20201112 12:43:26.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.821" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:26.809" endtime="20201112 12:43:26.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.825" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.824" endtime="20201112 12:43:26.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.828" level="INFO">VALUE: [0.00010359700000000041, 0.00010366599999999879, 0.00010362499999999955, 0.000103513999999999, 0.00010354199999999814, 0.00010380499999999848, 0.00010370800000000097, 0.00010362499999999955, 0.0001035420000000016, 0.00010363899999999912, 0.00010365299999999869, 0.00010336099999999973, 0.00010316700000000123, 0.00010390300000000241, 0.00010384800000000013, 0.00010336200000000267, 0.00010361199999999945, 0.00010365200000000269, 0.00010340199999999897, 0.00010388900000000284, 0.00010379099999999891, 0.00010390300000000241, 0.00010344399999999768, 0.00010343000000000158, 0.00010354199999999814, 0.00010384700000000066, 0.00010341699999999801, 0.00010319500000000037, 0.00010390300000000241, 0.00010376399999999925, 0.00010372200000000054, 0.00010349999999999943, 0.00010365300000000216, 0.00010361099999999998, 0.00010338899999999887, 0.00010379199999999839, 0.00010387500000000327, 0.00010348599999999986, 0.0001037360000000001, 0.00010349999999999943, 0.0001035420000000016, 0.00010354099999999866, 0.00010358300000000084, 0.00010345800000000072, 0.00010340300000000191, 0.00010368099999999783, 0.00010357000000000074, 0.00010352799999999857, 0.00010386100000000023, 0.00010352699999999909]</msg>
<status status="PASS" starttime="20201112 12:43:26.826" endtime="20201112 12:43:26.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.822" endtime="20201112 12:43:26.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.831" endtime="20201112 12:43:26.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.834" endtime="20201112 12:43:26.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.833" endtime="20201112 12:43:26.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.829" endtime="20201112 12:43:26.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.463" endtime="20201112 12:43:26.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.462" endtime="20201112 12:43:26.855"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.864" endtime="20201112 12:43:26.882"></status>
</kw>
<msg timestamp="20201112 12:43:26.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.862" endtime="20201112 12:43:26.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.884" endtime="20201112 12:43:26.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.886" endtime="20201112 12:43:26.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.860" endtime="20201112 12:43:26.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.858" endtime="20201112 12:43:26.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.896" endtime="20201112 12:43:27.182"></status>
</kw>
<msg timestamp="20201112 12:43:27.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.895" endtime="20201112 12:43:27.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.186" endtime="20201112 12:43:27.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.194" endtime="20201112 12:43:27.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.892" endtime="20201112 12:43:27.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.890" endtime="20201112 12:43:27.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.201" level="INFO">${RESULT} = [{'time': 0.022108903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010408400000000081, 'source_diff': 0.00010408400000000081}, {'time': 0.022215903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.198" endtime="20201112 12:43:27.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.214" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.202" endtime="20201112 12:43:27.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.218" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.217" endtime="20201112 12:43:27.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.221" level="INFO">VALUE: [0.00010408400000000081, 0.00010462499999999708, 0.00010448600000000086, 0.00010454199999999914, 0.00010438899999999987, 0.0001045689999999988, 0.0001045689999999988, 0.00010454099999999966, 0.00010413899999999962, 0.00010479200000000286, 0.00010481900000000252, 0.00010488900000000037, 0.00010468099999999883, 0.00010450000000000043, 0.00010449999999999696, 0.00010459700000000141, 0.00010457000000000174, 0.0001046949999999984, 0.00010490299999999994, 0.00010472300000000101, 0.00010443100000000205, 0.0001043620000000002, 0.00010497200000000179, 0.00010476399999999678, 0.00010463900000000012, 0.00010461100000000098, 0.00010454099999999966, 0.00010473599999999764, 0.000104514, 0.00010455600000000217, 0.00010456999999999828, 0.00010438899999999987, 0.00010444499999999815, 0.00010436100000000073, 0.00010461200000000045, 0.0001048339999999981, 0.0001045559999999987, 0.00010487499999999733, 0.00010468099999999883, 0.00010444399999999868, 0.00010475000000000068, 0.00010459699999999794, 0.00010438899999999987, 0.00010465299999999969, 0.00010472200000000154, 0.000104514, 0.00010487499999999733, 0.00010455600000000217, 0.00010477799999999982, 0.00010463800000000065]</msg>
<status status="PASS" starttime="20201112 12:43:27.219" endtime="20201112 12:43:27.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.215" endtime="20201112 12:43:27.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.224" endtime="20201112 12:43:27.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.227" endtime="20201112 12:43:27.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.226" endtime="20201112 12:43:27.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.222" endtime="20201112 12:43:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.856" endtime="20201112 12:43:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.856" endtime="20201112 12:43:27.248"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.257" endtime="20201112 12:43:27.277"></status>
</kw>
<msg timestamp="20201112 12:43:27.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.255" endtime="20201112 12:43:27.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.278" endtime="20201112 12:43:27.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.281" endtime="20201112 12:43:27.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.253" endtime="20201112 12:43:27.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.251" endtime="20201112 12:43:27.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.291" endtime="20201112 12:43:27.576"></status>
</kw>
<msg timestamp="20201112 12:43:27.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.289" endtime="20201112 12:43:27.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022057944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022163222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.580" endtime="20201112 12:43:27.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.588" endtime="20201112 12:43:27.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.287" endtime="20201112 12:43:27.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.285" endtime="20201112 12:43:27.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.595" level="INFO">${RESULT} = [{'time': 0.022163222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010527800000000032, 'source_diff': 0.00010527800000000032}, {'time': 0.022271236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.592" endtime="20201112 12:43:27.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.609" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.596" endtime="20201112 12:43:27.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.613" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.612" endtime="20201112 12:43:27.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.616" level="INFO">VALUE: [0.00010527800000000032, 0.00010554200000000014, 0.00010547199999999882, 0.000105514000000001, 0.00010583299999999962, 0.00010586099999999876, 0.00010562500000000155, 0.00010559699999999894, 0.0001058750000000018, 0.00010580599999999996, 0.00010559700000000241, 0.00010551399999999753, 0.00010565199999999775, 0.00010559699999999894, 0.00010547199999999882, 0.00010559699999999894, 0.00010563900000000112, 0.00010566700000000026, 0.00010590300000000094, 0.0001053750000000013, 0.00010547200000000229, 0.00010543099999999958, 0.00010590300000000094, 0.00010543099999999958, 0.0001058750000000018, 0.00010534799999999817, 0.00010572299999999854, 0.00010559799999999842, 0.00010554100000000066, 0.00010568000000000036, 0.00010544399999999968, 0.00010559699999999894, 0.00010552800000000057, 0.00010586099999999876, 0.0001053750000000013, 0.00010563900000000112, 0.00010548599999999839, 0.00010586100000000223, 0.0001053889999999974, 0.00010572299999999854, 0.00010549999999999796, 0.00010543099999999958, 0.00010536199999999774, 0.00010552700000000109, 0.00010568000000000036, 0.00010579100000000091, 0.00010543000000000011, 0.00010591700000000051, 0.00010543000000000011, 0.00010534700000000216]</msg>
<status status="PASS" starttime="20201112 12:43:27.614" endtime="20201112 12:43:27.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.610" endtime="20201112 12:43:27.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.619" endtime="20201112 12:43:27.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.623" endtime="20201112 12:43:27.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.621" endtime="20201112 12:43:27.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.618" endtime="20201112 12:43:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.249" endtime="20201112 12:43:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.249" endtime="20201112 12:43:27.643"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.652" endtime="20201112 12:43:27.671"></status>
</kw>
<msg timestamp="20201112 12:43:27.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.650" endtime="20201112 12:43:27.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.673" endtime="20201112 12:43:27.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.675" endtime="20201112 12:43:27.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.648" endtime="20201112 12:43:27.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.646" endtime="20201112 12:43:27.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.685" endtime="20201112 12:43:27.971"></status>
</kw>
<msg timestamp="20201112 12:43:27.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.684" endtime="20201112 12:43:27.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021823236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.975" endtime="20201112 12:43:27.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.983" endtime="20201112 12:43:27.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.681" endtime="20201112 12:43:27.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.679" endtime="20201112 12:43:27.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.990" level="INFO">${RESULT} = [{'time': 0.021823236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010681900000000105, 'source_diff': 0.00010681900000000105}, {'time': 0.02193225, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:43:27.986" endtime="20201112 12:43:27.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.003" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:27.991" endtime="20201112 12:43:28.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.007" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.006" endtime="20201112 12:43:28.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.009" level="INFO">VALUE: [0.00010681900000000105, 0.00010665300000000169, 0.0001067499999999992, 0.00010687499999999933, 0.00010677800000000182, 0.00010680500000000148, 0.00010643100000000058, 0.00010666700000000126, 0.00010634799999999917, 0.00010675000000000268, 0.00010659800000000288, 0.00010661099999999951, 0.00010649999999999896, 0.00010654200000000114, 0.0001068889999999989, 0.00010662500000000255, 0.00010659699999999994, 0.00010661099999999951, 0.00010687499999999933, 0.00010645800000000025, 0.0001065560000000007, 0.00010643100000000058, 0.00010668099999999736, 0.00010648599999999939, 0.00010636100000000273, 0.0001065279999999981, 0.00010634699999999969, 0.00010654099999999819, 0.00010673599999999964, 0.00010669400000000093, 0.00010641599999999807, 0.00010668000000000136, 0.0001065690000000008, 0.00010686099999999976, 0.00010662499999999908, 0.00010654200000000114, 0.00010666699999999779, 0.00010637499999999883, 0.00010638900000000187, 0.00010687499999999933, 0.00010618100000000033, 0.00010668100000000083, 0.00010670799999999703, 0.00010648599999999939, 0.00010655500000000123, 0.00010667999999999789, 0.00010644400000000068, 0.00010681900000000105, 0.00010676399999999878, 0.00010634699999999969]</msg>
<status status="PASS" starttime="20201112 12:43:28.008" endtime="20201112 12:43:28.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.004" endtime="20201112 12:43:28.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.013" endtime="20201112 12:43:28.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.016" endtime="20201112 12:43:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.015" endtime="20201112 12:43:28.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.011" endtime="20201112 12:43:28.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.644" endtime="20201112 12:43:28.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.644" endtime="20201112 12:43:28.037"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.046" endtime="20201112 12:43:28.066"></status>
</kw>
<msg timestamp="20201112 12:43:28.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.044" endtime="20201112 12:43:28.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.067" endtime="20201112 12:43:28.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.069" endtime="20201112 12:43:28.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.041" endtime="20201112 12:43:28.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.039" endtime="20201112 12:43:28.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.079" endtime="20201112 12:43:28.365"></status>
</kw>
<msg timestamp="20201112 12:43:28.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.078" endtime="20201112 12:43:28.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022011125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.369" endtime="20201112 12:43:28.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.377" endtime="20201112 12:43:28.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.075" endtime="20201112 12:43:28.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.073" endtime="20201112 12:43:28.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.383" level="INFO">${RESULT} = [{'time': 0.022118583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010745800000000125, 'source_diff': 0.00010745800000000125}, {'time': 0.022228583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:28.380" endtime="20201112 12:43:28.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.396" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:28.384" endtime="20201112 12:43:28.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.401" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.400" endtime="20201112 12:43:28.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.403" level="INFO">VALUE: [0.00010745800000000125, 0.00010773600000000064, 0.00010776400000000325, 0.0001077500000000002, 0.0001075829999999979, 0.00010773600000000064, 0.00010787500000000033, 0.00010781999999999806, 0.00010787500000000033, 0.00010777799999999935, 0.00010761100000000051, 0.00010744500000000115, 0.00010781999999999806, 0.0001073889999999994, 0.00010765199999999975, 0.00010765199999999975, 0.0001077500000000002, 0.00010766599999999932, 0.00010736100000000026, 0.00010743100000000158, 0.00010751399999999953, 0.00010748600000000039, 0.00010744400000000168, 0.0001077500000000002, 0.00010748600000000039, 0.00010773600000000064, 0.00010790299999999947, 0.00010734800000000017, 0.00010790299999999947, 0.00010770900000000097, 0.0001075279999999991, 0.00010737499999999983, 0.00010752699999999962, 0.00010779099999999944, 0.0001077080000000015, 0.00010767999999999889, 0.00010755499999999876, 0.00010763899999999965, 0.00010770799999999803, 0.0001076950000000014, 0.00010737499999999983, 0.00010744499999999768, 0.00010763899999999965, 0.00010770900000000097, 0.00010741699999999854, 0.00010768000000000236, 0.00010784700000000119, 0.00010741599999999907, 0.00010744400000000168, 0.00010740299999999897]</msg>
<status status="PASS" starttime="20201112 12:43:28.402" endtime="20201112 12:43:28.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.397" endtime="20201112 12:43:28.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.407" endtime="20201112 12:43:28.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.410" endtime="20201112 12:43:28.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.409" endtime="20201112 12:43:28.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.405" endtime="20201112 12:43:28.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.038" endtime="20201112 12:43:28.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.037" endtime="20201112 12:43:28.431"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.439" endtime="20201112 12:43:28.459"></status>
</kw>
<msg timestamp="20201112 12:43:28.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.438" endtime="20201112 12:43:28.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.461" endtime="20201112 12:43:28.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.463" endtime="20201112 12:43:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.435" endtime="20201112 12:43:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.433" endtime="20201112 12:43:28.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.473" endtime="20201112 12:43:28.759"></status>
</kw>
<msg timestamp="20201112 12:43:28.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.472" endtime="20201112 12:43:28.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02179525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:28.763" endtime="20201112 12:43:28.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.771" endtime="20201112 12:43:28.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.469" endtime="20201112 12:43:28.773"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.467" endtime="20201112 12:43:28.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.777" level="INFO">${RESULT} = [{'time': 0.021903972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010872200000000207, 'source_diff': 0.00010872200000000207}, {'time': 0.022014986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:28.774" endtime="20201112 12:43:28.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.790" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:28.778" endtime="20201112 12:43:28.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.795" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.794" endtime="20201112 12:43:28.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.797" level="INFO">VALUE: [0.00010872200000000207, 0.0001085280000000001, 0.00010861100000000151, 0.00010848599999999792, 0.00010834699999999822, 0.00010840299999999997, 0.00010869499999999893, 0.00010865300000000022, 0.00010873700000000111, 0.00010877799999999688, 0.00010847300000000129, 0.0001084020000000005, 0.00010863800000000118, 0.00010837500000000083, 0.00010848600000000139, 0.00010881899999999958, 0.00010880599999999949, 0.00010848599999999792, 0.00010868100000000283, 0.00010868099999999936, 0.00010872200000000207, 0.00010879199999999992, 0.00010872300000000154, 0.00010894500000000265, 0.00010875000000000121, 0.00010880500000000001, 0.00010872300000000154, 0.00010829099999999994, 0.0001083890000000004, 0.0001083890000000004, 0.00010866600000000032, 0.0001088890000000009, 0.00010837500000000083, 0.00010841699999999954, 0.00010843099999999911, 0.00010865300000000022, 0.00010880599999999949, 0.0001085280000000001, 0.00010858399999999838, 0.00010886099999999829, 0.00010850000000000096, 0.00010848600000000139, 0.00010834700000000169, 0.00010875000000000121, 0.00010844499999999868, 0.00010869399999999946, 0.00010842999999999964, 0.00010876400000000078, 0.00010883299999999915, 0.0001087219999999986]</msg>
<status status="PASS" starttime="20201112 12:43:28.796" endtime="20201112 12:43:28.798"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.791" endtime="20201112 12:43:28.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.801" endtime="20201112 12:43:28.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.804" endtime="20201112 12:43:28.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.803" endtime="20201112 12:43:28.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.799" endtime="20201112 12:43:28.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.432" endtime="20201112 12:43:28.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.431" endtime="20201112 12:43:28.825"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.833" endtime="20201112 12:43:28.853"></status>
</kw>
<msg timestamp="20201112 12:43:28.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.832" endtime="20201112 12:43:28.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.855" endtime="20201112 12:43:28.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.857" endtime="20201112 12:43:28.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.829" endtime="20201112 12:43:28.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.827" endtime="20201112 12:43:28.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.867" endtime="20201112 12:43:29.152"></status>
</kw>
<msg timestamp="20201112 12:43:29.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.865" endtime="20201112 12:43:29.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021895194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.156" endtime="20201112 12:43:29.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.164" endtime="20201112 12:43:29.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.863" endtime="20201112 12:43:29.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.861" endtime="20201112 12:43:29.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.170" level="INFO">${RESULT} = [{'time': 0.021895194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010943000000000064, 'source_diff': 0.00010943000000000064}, {'time': 0.022007208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:29.167" endtime="20201112 12:43:29.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.184" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.171" endtime="20201112 12:43:29.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.189" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.188" endtime="20201112 12:43:29.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.191" level="INFO">VALUE: [0.00010943000000000064, 0.00010984699999999972, 0.00010984699999999972, 0.0001094159999999976, 0.00010977799999999788, 0.0001095829999999999, 0.00010961100000000251, 0.00010938899999999793, 0.00010947199999999935, 0.00010991699999999757, 0.00010988899999999843, 0.00010990300000000147, 0.000109902999999998, 0.00010948599999999892, 0.00010943100000000011, 0.00010947199999999935, 0.00010986099999999929, 0.00010979099999999797, 0.00010973599999999917, 0.00010951400000000153, 0.00010965300000000122, 0.00010976400000000178, 0.000109902999999998, 0.00010944400000000021, 0.00010973600000000264, 0.00010934700000000269, 0.00010966699999999732, 0.00010941700000000054, 0.0001093479999999987, 0.00010969499999999993, 0.0001095549999999973, 0.00010948599999999892, 0.00010952700000000162, 0.00010976400000000178, 0.00010934699999999922, 0.000109902999999998, 0.00010969499999999993, 0.00010991700000000104, 0.00010986099999999929, 0.00010934699999999922, 0.00010936099999999879, 0.00010983399999999963, 0.00010954200000000067, 0.00010975000000000221, 0.00010988899999999843, 0.00010973699999999864, 0.0001097769999999984, 0.00010970800000000003, 0.00010963900000000165, 0.00010941600000000107]</msg>
<status status="PASS" starttime="20201112 12:43:29.190" endtime="20201112 12:43:29.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.185" endtime="20201112 12:43:29.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.195" endtime="20201112 12:43:29.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.198" endtime="20201112 12:43:29.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.197" endtime="20201112 12:43:29.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.193" endtime="20201112 12:43:29.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.826" endtime="20201112 12:43:29.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.825" endtime="20201112 12:43:29.219"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.227" endtime="20201112 12:43:29.247"></status>
</kw>
<msg timestamp="20201112 12:43:29.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.226" endtime="20201112 12:43:29.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.249" endtime="20201112 12:43:29.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.251" endtime="20201112 12:43:29.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.223" endtime="20201112 12:43:29.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.221" endtime="20201112 12:43:29.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.261" endtime="20201112 12:43:29.546"></status>
</kw>
<msg timestamp="20201112 12:43:29.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.259" endtime="20201112 12:43:29.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021667514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021777917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.550" endtime="20201112 12:43:29.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.558" endtime="20201112 12:43:29.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.257" endtime="20201112 12:43:29.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.255" endtime="20201112 12:43:29.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.565" level="INFO">${RESULT} = [{'time': 0.021777917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011040300000000197, 'source_diff': 0.00011040300000000197}, {'time': 0.021890931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:29.562" endtime="20201112 12:43:29.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.566" endtime="20201112 12:43:29.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.582" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.581" endtime="20201112 12:43:29.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.585" level="INFO">VALUE: [0.00011040300000000197, 0.00011048699999999939, 0.00011058400000000038, 0.0001105549999999983, 0.00011044400000000121, 0.00011042999999999817, 0.00011037500000000283, 0.00011086100000000029, 0.00011066700000000179, 0.00011079199999999845, 0.00011043100000000111, 0.00011088899999999943, 0.00011058400000000038, 0.00011093099999999814, 0.00011043100000000111, 0.00011049999999999949, 0.00011061199999999952, 0.00011092999999999867, 0.00011037500000000283, 0.00011074999999999974, 0.00011040300000000197, 0.00011037499999999936, 0.0001105830000000009, 0.00011036099999999979, 0.00011086100000000029, 0.00011036099999999979, 0.00011016700000000129, 0.0001107220000000006, 0.00011037499999999936, 0.00011084799999999673, 0.00011059799999999995, 0.00011093000000000214, 0.00011083300000000115, 0.00011036099999999979, 0.000110902999999999, 0.00011040199999999903, 0.00011086100000000029, 0.00011049999999999949, 0.00011040300000000197, 0.00011066699999999832, 0.00011069500000000093, 0.00011066699999999832, 0.00011050000000000296, 0.00011069499999999746, 0.00011061199999999952, 0.00011066699999999832, 0.00011066700000000179, 0.00011038899999999893, 0.00011066600000000232, 0.00011083299999999768]</msg>
<status status="PASS" starttime="20201112 12:43:29.583" endtime="20201112 12:43:29.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.579" endtime="20201112 12:43:29.590"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.593" endtime="20201112 12:43:29.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.596" endtime="20201112 12:43:29.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.595" endtime="20201112 12:43:29.616"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.591" endtime="20201112 12:43:29.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.220" endtime="20201112 12:43:29.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.219" endtime="20201112 12:43:29.617"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.625" endtime="20201112 12:43:29.647"></status>
</kw>
<msg timestamp="20201112 12:43:29.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.624" endtime="20201112 12:43:29.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.648" endtime="20201112 12:43:29.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.650" endtime="20201112 12:43:29.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.621" endtime="20201112 12:43:29.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.619" endtime="20201112 12:43:29.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.660" endtime="20201112 12:43:29.946"></status>
</kw>
<msg timestamp="20201112 12:43:29.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:29.659" endtime="20201112 12:43:29.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0221325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244264, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:29.950" endtime="20201112 12:43:29.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.958" endtime="20201112 12:43:29.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.656" endtime="20201112 12:43:29.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.655" endtime="20201112 12:43:29.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.964" level="INFO">${RESULT} = [{'time': 0.022244264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011176400000000031, 'source_diff': 0.00011176400000000031}, {'time': 0.022358264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:29.961" endtime="20201112 12:43:29.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.977" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:29.965" endtime="20201112 12:43:29.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.982" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.981" endtime="20201112 12:43:29.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.984" level="INFO">VALUE: [0.00011176400000000031, 0.00011136100000000079, 0.00011179199999999945, 0.000111903, 0.00011191699999999957, 0.00011159800000000095, 0.00011145800000000178, 0.00011156900000000233, 0.00011143000000000264, 0.0001115830000000019, 0.00011167999999999942, 0.00011158299999999843, 0.00011183299999999868, 0.00011156900000000233, 0.00011159700000000147, 0.00011137500000000036, 0.00011168099999999889, 0.0001114029999999995, 0.00011147200000000135, 0.00011155599999999877, 0.00011150000000000049, 0.00011170799999999856, 0.00011152700000000015, 0.00011163900000000018, 0.00011163900000000018, 0.00011145799999999831, 0.00011170799999999856, 0.00011188900000000043, 0.00011138899999999993, 0.00011191699999999957, 0.00011163900000000018, 0.00011162500000000061, 0.0001117220000000016, 0.00011179199999999945, 0.00011148600000000092, 0.00011177799999999988, 0.0001115419999999992, 0.00011162500000000061, 0.00011187500000000086, 0.00011167999999999942, 0.00011134699999999775, 0.00011191699999999957, 0.00011147200000000135, 0.00011141699999999907, 0.0001115419999999992, 0.00011151400000000006, 0.00011158299999999843, 0.00011154200000000267, 0.00011170799999999856, 0.00011166699999999932]</msg>
<status status="PASS" starttime="20201112 12:43:29.983" endtime="20201112 12:43:29.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.978" endtime="20201112 12:43:29.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.988" endtime="20201112 12:43:29.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.991" endtime="20201112 12:43:30.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.990" endtime="20201112 12:43:30.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.986" endtime="20201112 12:43:30.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.618" endtime="20201112 12:43:30.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.617" endtime="20201112 12:43:30.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.768" endtime="20201112 12:43:30.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.017" endtime="20201112 12:43:30.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.015" endtime="20201112 12:43:30.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.013" endtime="20201112 12:43:30.037"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:50.698" endtime="20201112 12:43:30.037" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:09.812" endtime="20201112 12:43:30.041"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.097" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:43:30.105" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:43:31.209" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:43:30.096" endtime="20201112 12:43:31.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.212" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:43:31.211" endtime="20201112 12:43:31.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.094" endtime="20201112 12:43:31.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.215" endtime="20201112 12:43:31.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.214" endtime="20201112 12:43:31.401"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.413" endtime="20201112 12:43:31.427"></status>
</kw>
<msg timestamp="20201112 12:43:31.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.412" endtime="20201112 12:43:31.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.428" endtime="20201112 12:43:31.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.433" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:31.431" endtime="20201112 12:43:31.433"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.409" endtime="20201112 12:43:31.434"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.407" endtime="20201112 12:43:31.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.406" endtime="20201112 12:43:31.435"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:31.440" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:31.439" endtime="20201112 12:43:31.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.436" endtime="20201112 12:43:31.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.405" endtime="20201112 12:43:31.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.404" endtime="20201112 12:43:31.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.441" endtime="20201112 12:43:31.443"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.403" endtime="20201112 12:43:31.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.445" endtime="20201112 12:43:31.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.402" endtime="20201112 12:43:31.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.093" endtime="20201112 12:43:31.447"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.453" endtime="20201112 12:43:31.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.452" endtime="20201112 12:43:31.473"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.486" endtime="20201112 12:43:31.500"></status>
</kw>
<msg timestamp="20201112 12:43:31.501" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.484" endtime="20201112 12:43:31.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.502" endtime="20201112 12:43:31.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.506" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:31.504" endtime="20201112 12:43:31.507"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.482" endtime="20201112 12:43:31.507"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:31.479" endtime="20201112 12:43:31.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.478" endtime="20201112 12:43:31.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:31.512" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:31.511" endtime="20201112 12:43:31.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.509" endtime="20201112 12:43:31.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.477" endtime="20201112 12:43:31.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.477" endtime="20201112 12:43:31.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.513" endtime="20201112 12:43:31.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.475" endtime="20201112 12:43:31.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.474" endtime="20201112 12:43:31.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.450" endtime="20201112 12:43:31.516"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:31.520" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.529" endtime="20201112 12:43:33.639"></status>
</kw>
<msg timestamp="20201112 12:43:33.641" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 107396488, 'wakeups': [107406494, 107416494, 107426494, 107436494, 107...</msg>
<status status="PASS" starttime="20201112 12:43:31.527" endtime="20201112 12:43:33.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.646" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 107396488, 'wakeups': [107406494, 107416494, 107426494, 107436494, 107...</msg>
<status status="PASS" starttime="20201112 12:43:33.643" endtime="20201112 12:43:33.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.650" endtime="20201112 12:43:33.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.525" endtime="20201112 12:43:33.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.522" endtime="20201112 12:43:33.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.660" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [107406494, 107416494, 107426494, 107436494, 107446494, 107456494, 107466494, 107476494, 107486494, 107496494, 107506494, 107516494, 107526494, 1...</msg>
<status status="PASS" starttime="20201112 12:43:33.656" endtime="20201112 12:43:33.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.669" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:33.667" endtime="20201112 12:43:33.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.673" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:33.671" endtime="20201112 12:43:33.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.662" endtime="20201112 12:43:33.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.683" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:33.681" endtime="20201112 12:43:33.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.687" level="INFO">VALUE: 107396488</msg>
<status status="PASS" starttime="20201112 12:43:33.685" endtime="20201112 12:43:33.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.676" endtime="20201112 12:43:33.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.697" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:33.695" endtime="20201112 12:43:33.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.702" level="INFO">VALUE: [107406494, 107416494, 107426494, 107436494, 107446494, 107456494, 107466494, 107476494, 107486494, 107496494, 107506494, 107516494, 107526494, 107536494, 107546494, 107556494, 107566494, 107576494, 107586494, 107596494, 107606494, 107616494, 107626494, 107636494, 107646494, 107656494, 107666494, 107676494, 107686494, 107696494, 107706494, 107716494, 107726494, 107736494, 107746494, 107756494, 107766494, 107776494, 107786494, 107796494, 107806494, 107816494, 107826494, 107836494, 107846494, 107856494, 107866494, 107876494, 107886494, 107896494, 107906494, 107916494, 107926494, 107936494, 107946494, 107956494, 107966494, 107976494, 107986494, 107996494, 108006494, 108016494, 108026494, 108036494, 108046494, 108056494, 108066494, 108076494, 108086494, 108096494, 108106494, 108116494, 108126494, 108136494, 108146494, 108156494, 108166494, 108176494, 108186494, 108196494, 108206494, 108216494, 108226494, 108236494, 108246494, 108256494, 108266494, 108276494, 108286494, 108296494, 108306494, 108316494, 108326494, 108336494, 108346494, 108356494, 108366494, 108376494, 108386494, 108396494]</msg>
<status status="PASS" starttime="20201112 12:43:33.699" endtime="20201112 12:43:33.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.690" endtime="20201112 12:43:33.703"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.717" endtime="20201112 12:43:34.013"></status>
</kw>
<msg timestamp="20201112 12:43:34.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065862375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075869472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.713" endtime="20201112 12:43:34.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.065862375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075869472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.017" endtime="20201112 12:43:34.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.025" endtime="20201112 12:43:34.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.708" endtime="20201112 12:43:34.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.705" endtime="20201112 12:43:34.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.053" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:34.029" endtime="20201112 12:43:34.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.058" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:34.057" endtime="20201112 12:43:34.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.060" level="INFO">VALUE: 0.065862375</msg>
<status status="PASS" starttime="20201112 12:43:34.059" endtime="20201112 12:43:34.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.055" endtime="20201112 12:43:34.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.066" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:34.065" endtime="20201112 12:43:34.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.068" level="INFO">VALUE: [0.075869472, 0.085870333, 0.095870931, 0.105871708, 0.115872417, 0.125873264, 0.135873903, 0.145874681, 0.155875375, 0.165876153, 0.175876833, 0.185877639, 0.195878319, 0.205879125, 0.215879806, 0.225880583, 0.235881292, 0.245882069, 0.255882778, 0.265883611, 0.27588425, 0.285885042, 0.295885708, 0.305886514, 0.315887194, 0.325888, 0.335888708, 0.345889458, 0.355890167, 0.365890944, 0.375891639, 0.385892431, 0.395893111, 0.405893903, 0.415894597, 0.425895403, 0.435896083, 0.445896903, 0.455897556, 0.465898347, 0.475899042, 0.485899819, 0.495900528, 0.505901278, 0.515901972, 0.525902764, 0.535903472, 0.545904292, 0.555904903, 0.565905681, 0.575906389, 0.585907222, 0.595907833, 0.605908625, 0.615909306, 0.625910083, 0.635910778, 0.645911583, 0.655912236, 0.665913014, 0.675913708, 0.6859145, 0.695915181, 0.705915958, 0.715916639, 0.725917431, 0.735918111, 0.745918889, 0.755919597, 0.765920361, 0.775921056, 0.785921833, 0.795922583, 0.805923292, 0.815923986, 0.825924764, 0.835925472, 0.84592625, 0.855926931, 0.86592775, 0.875928417, 0.885929181, 0.895929861, 0.905930653, 0.915931347, 0.925932111, 0.935932847, 0.945933597, 0.955934292, 0.965935056, 0.97593575, 0.985936528, 0.995937208, 1.005938028, 1.015938681, 1.025939542, 1.035940153, 1.045940944, 1.055941625, 1.065942403] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:34.067" endtime="20201112 12:43:34.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.062" endtime="20201112 12:43:34.069"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.071" endtime="20201112 12:43:34.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.074" endtime="20201112 12:43:34.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.073" endtime="20201112 12:43:34.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.069" endtime="20201112 12:43:34.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.520" endtime="20201112 12:43:34.095"></status>
</kw>
<msg timestamp="20201112 12:43:34.095" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.103" endtime="20201112 12:43:36.213"></status>
</kw>
<msg timestamp="20201112 12:43:36.215" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 109970462, 'wakeups': [109980468, 109990468, 110000468, 110010468, 110...</msg>
<status status="PASS" starttime="20201112 12:43:34.101" endtime="20201112 12:43:36.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.220" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 109970462, 'wakeups': [109980468, 109990468, 110000468, 110010468, 110...</msg>
<status status="PASS" starttime="20201112 12:43:36.217" endtime="20201112 12:43:36.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.223" endtime="20201112 12:43:36.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.099" endtime="20201112 12:43:36.227"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.097" endtime="20201112 12:43:36.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.233" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [109980468, 109990468, 110000468, 110010468, 110020468, 110030468, 110040468, 110050468, 110060468, 110070468, 110080468, 110090468, 110100468, 1...</msg>
<status status="PASS" starttime="20201112 12:43:36.229" endtime="20201112 12:43:36.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.244" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:36.240" endtime="20201112 12:43:36.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.248" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:36.246" endtime="20201112 12:43:36.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.235" endtime="20201112 12:43:36.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.259" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:36.257" endtime="20201112 12:43:36.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.263" level="INFO">VALUE: 109970462</msg>
<status status="PASS" starttime="20201112 12:43:36.261" endtime="20201112 12:43:36.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.251" endtime="20201112 12:43:36.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.273" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:36.271" endtime="20201112 12:43:36.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.277" level="INFO">VALUE: [109980468, 109990468, 110000468, 110010468, 110020468, 110030468, 110040468, 110050468, 110060468, 110070468, 110080468, 110090468, 110100468, 110110468, 110120468, 110130468, 110140468, 110150468, 110160468, 110170468, 110180468, 110190468, 110200468, 110210468, 110220468, 110230468, 110240468, 110250468, 110260468, 110270468, 110280468, 110290468, 110300468, 110310468, 110320468, 110330468, 110340468, 110350468, 110360468, 110370468, 110380468, 110390468, 110400468, 110410468, 110420468, 110430468, 110440468, 110450468, 110460468, 110470468, 110480468, 110490468, 110500468, 110510468, 110520468, 110530468, 110540468, 110550468, 110560468, 110570468, 110580468, 110590468, 110600468, 110610468, 110620468, 110630468, 110640468, 110650468, 110660468, 110670468, 110680468, 110690468, 110700468, 110710468, 110720468, 110730468, 110740468, 110750468, 110760468, 110770468, 110780468, 110790468, 110800468, 110810468, 110820468, 110830468, 110840468, 110850468, 110860468, 110870468, 110880468, 110890468, 110900468, 110910468, 110920468, 110930468, 110940468, 110950468, 110960468, 110970468]</msg>
<status status="PASS" starttime="20201112 12:43:36.275" endtime="20201112 12:43:36.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.266" endtime="20201112 12:43:36.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.286" endtime="20201112 12:43:36.577"></status>
</kw>
<msg timestamp="20201112 12:43:36.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01872975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028736861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:36.284" endtime="20201112 12:43:36.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01872975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028736861, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:36.581" endtime="20201112 12:43:36.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.588" endtime="20201112 12:43:36.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.282" endtime="20201112 12:43:36.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.280" endtime="20201112 12:43:36.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.614" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:36.592" endtime="20201112 12:43:36.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.619" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:36.618" endtime="20201112 12:43:36.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.621" level="INFO">VALUE: 0.01872975</msg>
<status status="PASS" starttime="20201112 12:43:36.620" endtime="20201112 12:43:36.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.615" endtime="20201112 12:43:36.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.627" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:36.626" endtime="20201112 12:43:36.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.629" level="INFO">VALUE: [0.028736861, 0.038737708, 0.048738319, 0.058739097, 0.068739833, 0.078740583, 0.088741278, 0.098742069, 0.108742764, 0.118743542, 0.128744236, 0.138745014, 0.148745722, 0.1587465, 0.168747194, 0.178747972, 0.188748681, 0.198749444, 0.208750139, 0.218750931, 0.228751639, 0.238752403, 0.248753097, 0.258753889, 0.268754597, 0.278755403, 0.288756056, 0.298756847, 0.308757542, 0.318758319, 0.328759014, 0.338759806, 0.3487605, 0.358761347, 0.368761972, 0.378762764, 0.388763458, 0.398764278, 0.408764931, 0.418765722, 0.428766417, 0.438767222, 0.448767917, 0.458768681, 0.468769389, 0.478770167, 0.488770861, 0.498771639, 0.508772333, 0.518773125, 0.528773819, 0.538774611, 0.548775306, 0.558776097, 0.568776792, 0.578777583, 0.588778278, 0.598779056, 0.608779778, 0.618780528, 0.628781222, 0.638782014, 0.648782681, 0.658783458, 0.668784153, 0.678784958, 0.688785611, 0.698786389, 0.708787069, 0.718787875, 0.728788569, 0.738789333, 0.748790028, 0.758790792, 0.768791486, 0.778792264, 0.788792944, 0.798793722, 0.808794472, 0.818795208, 0.828795903, 0.838796667, 0.848797417, 0.858798167, 0.868798847, 0.878799597, 0.888800306, 0.898801125, 0.908801764, 0.918802542, 0.928803222, 0.938804028, 0.948804708, 0.958805486, 0.968806167, 0.978807014, 0.988807639, 0.998808417, 1.008809111, 1.018809875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:36.628" endtime="20201112 12:43:36.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.623" endtime="20201112 12:43:36.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.632" endtime="20201112 12:43:36.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.635" endtime="20201112 12:43:36.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.634" endtime="20201112 12:43:36.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.630" endtime="20201112 12:43:36.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.096" endtime="20201112 12:43:36.656"></status>
</kw>
<msg timestamp="20201112 12:43:36.656" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.664" endtime="20201112 12:43:38.775"></status>
</kw>
<msg timestamp="20201112 12:43:38.776" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 112531574, 'wakeups': [112541581, 112551580, 112561580, 112571580, 112...</msg>
<status status="PASS" starttime="20201112 12:43:36.662" endtime="20201112 12:43:38.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.782" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 112531574, 'wakeups': [112541581, 112551580, 112561580, 112571580, 112...</msg>
<status status="PASS" starttime="20201112 12:43:38.779" endtime="20201112 12:43:38.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.784" endtime="20201112 12:43:38.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.660" endtime="20201112 12:43:38.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.658" endtime="20201112 12:43:38.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.795" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 1, 'wakeups': [112541581, 112551580, 112561580, 112571580, 112581580, 112591580, 112601580, 112611580, 112621580, 112631580, 112641580, 112651580, 112661580, 1...</msg>
<status status="PASS" starttime="20201112 12:43:38.791" endtime="20201112 12:43:38.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.803" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:38.801" endtime="20201112 12:43:38.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.808" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:38.806" endtime="20201112 12:43:38.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.797" endtime="20201112 12:43:38.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.817" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:38.815" endtime="20201112 12:43:38.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.820" level="INFO">VALUE: 112531574</msg>
<status status="PASS" starttime="20201112 12:43:38.819" endtime="20201112 12:43:38.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.810" endtime="20201112 12:43:38.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.825" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:38.824" endtime="20201112 12:43:38.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.827" level="INFO">VALUE: [112541581, 112551580, 112561580, 112571580, 112581580, 112591580, 112601580, 112611580, 112621580, 112631580, 112641580, 112651580, 112661580, 112671580, 112681580, 112691580, 112701580, 112711580, 112721580, 112731580, 112741580, 112751580, 112761580, 112771580, 112781580, 112791580, 112801580, 112811580, 112821580, 112831580, 112841580, 112851580, 112861580, 112871580, 112881580, 112891580, 112901580, 112911580, 112921580, 112931580, 112941580, 112951580, 112961580, 112971580, 112981580, 112991580, 113001580, 113011580, 113021580, 113031580, 113041580, 113051580, 113061580, 113071580, 113081580, 113091580, 113101580, 113111580, 113121580, 113131580, 113141580, 113151580, 113161580, 113171580, 113181580, 113191580, 113201580, 113211580, 113221580, 113231580, 113241580, 113251580, 113261580, 113271580, 113281580, 113291580, 113301580, 113311580, 113321580, 113331580, 113341580, 113351580, 113361580, 113371580, 113381580, 113391580, 113401580, 113411580, 113421580, 113431580, 113441580, 113451580, 113461580, 113471580, 113481580, 113491580, 113501580, 113511580, 113521580, 113531580]</msg>
<status status="PASS" starttime="20201112 12:43:38.826" endtime="20201112 12:43:38.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.822" endtime="20201112 12:43:38.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.836" endtime="20201112 12:43:39.127"></status>
</kw>
<msg timestamp="20201112 12:43:39.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018706431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028713889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.834" endtime="20201112 12:43:39.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018706431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028713889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:39.131" endtime="20201112 12:43:39.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.138" endtime="20201112 12:43:39.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.831" endtime="20201112 12:43:39.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.829" endtime="20201112 12:43:39.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:39.164" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:39.141" endtime="20201112 12:43:39.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.169" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:39.168" endtime="20201112 12:43:39.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.171" level="INFO">VALUE: 0.018706431</msg>
<status status="PASS" starttime="20201112 12:43:39.170" endtime="20201112 12:43:39.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.165" endtime="20201112 12:43:39.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.176" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:39.175" endtime="20201112 12:43:39.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.178" level="INFO">VALUE: [0.028713889, 0.038713722, 0.048714375, 0.058715111, 0.068715806, 0.078716611, 0.088717278, 0.098718069, 0.108718764, 0.118719611, 0.12872025, 0.138721042, 0.148721722, 0.158722514, 0.168723194, 0.178724014, 0.188724694, 0.198725458, 0.208726153, 0.218726944, 0.228727639, 0.238728417, 0.248729111, 0.258729917, 0.268730597, 0.278731375, 0.288732069, 0.298732861, 0.308733583, 0.318734347, 0.328735042, 0.338735819, 0.348736514, 0.358737333, 0.368738, 0.378738778, 0.388739472, 0.398740278, 0.408741, 0.418741722, 0.428742417, 0.438743194, 0.448743889, 0.458744667, 0.468745417, 0.478746125, 0.488746819, 0.498747597, 0.508748361, 0.518749083, 0.528749778, 0.538750625, 0.548751222, 0.558752014, 0.568752694, 0.578753486, 0.588754181, 0.598754958, 0.608755653, 0.618756417, 0.628757111, 0.638757889, 0.648758597, 0.658759361, 0.668760097, 0.678760833, 0.688761528, 0.698762333, 0.708763, 0.718763806, 0.728764472, 0.738765264, 0.748765944, 0.758766722, 0.768767417, 0.778768194, 0.788768875, 0.798769681, 0.808770347, 0.818771125, 0.828771833, 0.838772597, 0.848773292, 0.858774069, 0.868774764, 0.878775569, 0.888776236, 0.898777014, 0.908777722, 0.918778486, 0.928779181, 0.938779958, 0.948780653, 0.958781486, 0.968782139, 0.978782903, 0.988783625, 0.998784375, 1.008785069, 1.018785861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:39.177" endtime="20201112 12:43:39.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.172" endtime="20201112 12:43:39.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.181" endtime="20201112 12:43:39.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.185" endtime="20201112 12:43:39.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.183" endtime="20201112 12:43:39.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.180" endtime="20201112 12:43:39.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.657" endtime="20201112 12:43:39.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.518" endtime="20201112 12:43:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.517" endtime="20201112 12:43:39.206"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:39.208" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.217" endtime="20201112 12:43:41.328"></status>
</kw>
<msg timestamp="20201112 12:43:41.329" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 115085052, 'wakeups': [115095063, 115105063, 115115063, 115125063, 115...</msg>
<status status="PASS" starttime="20201112 12:43:39.216" endtime="20201112 12:43:41.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.335" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 115085052, 'wakeups': [115095063, 115105063, 115115063, 115125063, 115...</msg>
<status status="PASS" starttime="20201112 12:43:41.331" endtime="20201112 12:43:41.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.337" endtime="20201112 12:43:41.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.213" endtime="20201112 12:43:41.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.210" endtime="20201112 12:43:41.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.348" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [115095063, 115105063, 115115063, 115125063, 115135063, 115145063, 115155063, 115165063, 115175063, 115185063, 115195063, 115205063, 115215063, 1...</msg>
<status status="PASS" starttime="20201112 12:43:41.344" endtime="20201112 12:43:41.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.356" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:41.354" endtime="20201112 12:43:41.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.360" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:41.359" endtime="20201112 12:43:41.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.350" endtime="20201112 12:43:41.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.370" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:41.368" endtime="20201112 12:43:41.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.374" level="INFO">VALUE: 115085052</msg>
<status status="PASS" starttime="20201112 12:43:41.373" endtime="20201112 12:43:41.374"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.363" endtime="20201112 12:43:41.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.379" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:41.378" endtime="20201112 12:43:41.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.381" level="INFO">VALUE: [115095063, 115105063, 115115063, 115125063, 115135063, 115145063, 115155063, 115165063, 115175063, 115185063, 115195063, 115205063, 115215063, 115225063, 115235063, 115245063, 115255063, 115265063, 115275063, 115285063, 115295063, 115305063, 115315063, 115325063, 115335063, 115345063, 115355063, 115365063, 115375063, 115385063, 115395063, 115405063, 115415063, 115425063, 115435063, 115445063, 115455063, 115465063, 115475063, 115485063, 115495063, 115505063, 115515063, 115525063, 115535063, 115545063, 115555063, 115565063, 115575063, 115585063, 115595063, 115605063, 115615063, 115625063, 115635063, 115645063, 115655063, 115665063, 115675063, 115685063, 115695063, 115705063, 115715063, 115725063, 115735063, 115745063, 115755063, 115765063, 115775063, 115785063, 115795063, 115805063, 115815063, 115825063, 115835063, 115845063, 115855063, 115865063, 115875063, 115885063, 115895063, 115905063, 115915063, 115925063, 115935063, 115945063, 115955063, 115965063, 115975063, 115985063, 115995063, 116005063, 116015063, 116025063, 116035063, 116045063, 116055063, 116065063, 116075063, 116085063]</msg>
<status status="PASS" starttime="20201112 12:43:41.380" endtime="20201112 12:43:41.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.376" endtime="20201112 12:43:41.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.388" endtime="20201112 12:43:41.678"></status>
</kw>
<msg timestamp="20201112 12:43:41.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032901347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.387" endtime="20201112 12:43:41.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022888903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032901347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:41.682" endtime="20201112 12:43:41.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.694" endtime="20201112 12:43:41.696"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.384" endtime="20201112 12:43:41.697"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.382" endtime="20201112 12:43:41.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:41.721" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:41.698" endtime="20201112 12:43:41.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.725" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:41.724" endtime="20201112 12:43:41.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.727" level="INFO">VALUE: 0.022888903</msg>
<status status="PASS" starttime="20201112 12:43:41.726" endtime="20201112 12:43:41.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.722" endtime="20201112 12:43:41.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.732" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:41.731" endtime="20201112 12:43:41.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:41.734" level="INFO">VALUE: [0.032901347, 0.042902222, 0.052902611, 0.062903611, 0.072904097, 0.082904958, 0.092905569, 0.102906431, 0.112907069, 0.122907931, 0.132908542, 0.142909403, 0.152910014, 0.162910889, 0.172911514, 0.182912375, 0.192912986, 0.202913847, 0.212914458, 0.222915319, 0.232915944, 0.242916819, 0.252917417, 0.262918278, 0.272918903, 0.282919778, 0.292920389, 0.30292125, 0.312921861, 0.322922764, 0.332923347, 0.342924208, 0.352924861, 0.362925708, 0.372926319, 0.382927208, 0.392927792, 0.402928667, 0.412929278, 0.422930153, 0.432930764, 0.442931639, 0.452932236, 0.462933125, 0.472933708, 0.482934569, 0.492935181, 0.502936042, 0.512936653, 0.5229375, 0.532938125, 0.542938986, 0.552939583, 0.562940458, 0.572941056, 0.582941931, 0.592942528, 0.602943389, 0.612944014, 0.622944889, 0.632945542, 0.642946333, 0.652946958, 0.662947792, 0.672948403, 0.682949278, 0.692949889, 0.702950736, 0.712951347, 0.722952208, 0.732952819, 0.742953681, 0.752954292, 0.762955153, 0.772955764, 0.782956667, 0.792957236, 0.802958097, 0.812958708, 0.822959597, 0.832960181, 0.842961042, 0.852961653, 0.862962514, 0.872963125, 0.882964, 0.892964597, 0.902965458, 0.912966083, 0.922966931, 0.932967542, 0.942968403, 0.952969056, 0.962969875, 0.9729705, 0.982971347, 0.992971972, 1.002972819, 1.012973444, 1.022974306] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:41.733" endtime="20201112 12:43:41.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.729" endtime="20201112 12:43:41.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.737" endtime="20201112 12:43:41.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:41.741" endtime="20201112 12:43:41.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.739" endtime="20201112 12:43:41.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.736" endtime="20201112 12:43:41.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.209" endtime="20201112 12:43:41.761"></status>
</kw>
<msg timestamp="20201112 12:43:41.762" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:41.769" endtime="20201112 12:43:43.880"></status>
</kw>
<msg timestamp="20201112 12:43:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 117637030, 'wakeups': [117647041, 117657041, 117667041, 117677041, 117...</msg>
<status status="PASS" starttime="20201112 12:43:41.768" endtime="20201112 12:43:43.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.887" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 117637030, 'wakeups': [117647041, 117657041, 117667041, 117677041, 117...</msg>
<status status="PASS" starttime="20201112 12:43:43.884" endtime="20201112 12:43:43.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.890" endtime="20201112 12:43:43.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.765" endtime="20201112 12:43:43.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.763" endtime="20201112 12:43:43.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:43.900" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [117647041, 117657041, 117667041, 117677041, 117687041, 117697041, 117707041, 117717041, 117727041, 117737041, 117747041, 117757041, 117767041, 1...</msg>
<status status="PASS" starttime="20201112 12:43:43.896" endtime="20201112 12:43:43.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.909" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:43.907" endtime="20201112 12:43:43.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.913" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:43.912" endtime="20201112 12:43:43.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.903" endtime="20201112 12:43:43.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.925" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:43.921" endtime="20201112 12:43:43.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.930" level="INFO">VALUE: 117637030</msg>
<status status="PASS" starttime="20201112 12:43:43.928" endtime="20201112 12:43:43.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.916" endtime="20201112 12:43:43.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.940" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:43.938" endtime="20201112 12:43:43.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:43.944" level="INFO">VALUE: [117647041, 117657041, 117667041, 117677041, 117687041, 117697041, 117707041, 117717041, 117727041, 117737041, 117747041, 117757041, 117767041, 117777041, 117787041, 117797041, 117807041, 117817041, 117827041, 117837041, 117847041, 117857041, 117867041, 117877041, 117887041, 117897041, 117907041, 117917041, 117927041, 117937041, 117947041, 117957041, 117967041, 117977041, 117987041, 117997041, 118007041, 118017041, 118027041, 118037041, 118047041, 118057041, 118067041, 118077041, 118087041, 118097041, 118107041, 118117041, 118127041, 118137041, 118147041, 118157041, 118167041, 118177041, 118187041, 118197041, 118207041, 118217041, 118227041, 118237041, 118247041, 118257041, 118267041, 118277041, 118287041, 118297041, 118307041, 118317041, 118327041, 118337041, 118347041, 118357041, 118367041, 118377041, 118387041, 118397041, 118407041, 118417041, 118427041, 118437041, 118447041, 118457041, 118467041, 118477041, 118487041, 118497041, 118507041, 118517041, 118527041, 118537041, 118547041, 118557041, 118567041, 118577041, 118587041, 118597041, 118607041, 118617041, 118627041, 118637041]</msg>
<status status="PASS" starttime="20201112 12:43:43.942" endtime="20201112 12:43:43.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.933" endtime="20201112 12:43:43.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:43.958" endtime="20201112 12:43:44.250"></status>
</kw>
<msg timestamp="20201112 12:43:44.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018796917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028809375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:43.956" endtime="20201112 12:43:44.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018796917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028809375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.254" endtime="20201112 12:43:44.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.261" endtime="20201112 12:43:44.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.951" endtime="20201112 12:43:44.263"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:43.947" endtime="20201112 12:43:44.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.287" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:44.264" endtime="20201112 12:43:44.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.292" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:44.291" endtime="20201112 12:43:44.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.293" level="INFO">VALUE: 0.018796917</msg>
<status status="PASS" starttime="20201112 12:43:44.293" endtime="20201112 12:43:44.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.288" endtime="20201112 12:43:44.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.299" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:44.298" endtime="20201112 12:43:44.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.302" level="INFO">VALUE: [0.028809375, 0.038810236, 0.048810639, 0.058811611, 0.068812153, 0.078813014, 0.088813583, 0.098814444, 0.108815069, 0.118815944, 0.128816542, 0.138817417, 0.148818028, 0.158818903, 0.1688195, 0.178820361, 0.188820986, 0.198821847, 0.208822486, 0.218823333, 0.228823944, 0.238824847, 0.248825431, 0.258826292, 0.268826931, 0.278827778, 0.288828431, 0.298829264, 0.308829875, 0.318830736, 0.328831361, 0.338832236, 0.348832833, 0.358833694, 0.368834319, 0.378835181, 0.388835806, 0.398836667, 0.408837278, 0.418838139, 0.428838764, 0.438839625, 0.44884025, 0.458841097, 0.468841722, 0.478842597, 0.488843167, 0.498844028, 0.508844653, 0.518845486, 0.528846111, 0.538846958, 0.548847569, 0.558848431, 0.568849056, 0.578849917, 0.588850528, 0.598851361, 0.608851972, 0.618852889, 0.628853444, 0.638854306, 0.648854931, 0.658855792, 0.668856403, 0.678857264, 0.688857861, 0.698858764, 0.708859319, 0.718860194, 0.728860792, 0.738861653, 0.748862264, 0.758863125, 0.768863736, 0.778864583, 0.788865208, 0.798866056, 0.808866694, 0.818867542, 0.828868139, 0.838869014, 0.848869611, 0.858870472, 0.868871083, 0.878871944, 0.888872556, 0.898873417, 0.908874042, 0.918874875, 0.9288755, 0.938876361, 0.948876986, 0.958877847, 0.968878458, 0.978879292, 0.988879917, 0.998880764, 1.008881375, 1.018882236] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:44.301" endtime="20201112 12:43:44.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.295" endtime="20201112 12:43:44.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.305" endtime="20201112 12:43:44.306"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:44.308" endtime="20201112 12:43:44.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.307" endtime="20201112 12:43:44.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.303" endtime="20201112 12:43:44.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:41.762" endtime="20201112 12:43:44.329"></status>
</kw>
<msg timestamp="20201112 12:43:44.329" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.337" endtime="20201112 12:43:46.447"></status>
</kw>
<msg timestamp="20201112 12:43:46.448" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 120204755, 'wakeups': [120214766, 120224766, 120234766, 120244766, 120...</msg>
<status status="PASS" starttime="20201112 12:43:44.336" endtime="20201112 12:43:46.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.454" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 120204755, 'wakeups': [120214766, 120224766, 120234766, 120244766, 120...</msg>
<status status="PASS" starttime="20201112 12:43:46.450" endtime="20201112 12:43:46.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.456" endtime="20201112 12:43:46.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.333" endtime="20201112 12:43:46.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.331" endtime="20201112 12:43:46.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.467" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 2, 'wakeups': [120214766, 120224766, 120234766, 120244766, 120254766, 120264766, 120274766, 120284766, 120294766, 120304766, 120314766, 120324766, 120334766, 1...</msg>
<status status="PASS" starttime="20201112 12:43:46.463" endtime="20201112 12:43:46.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.475" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:46.473" endtime="20201112 12:43:46.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.479" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:46.477" endtime="20201112 12:43:46.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.469" endtime="20201112 12:43:46.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.489" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:46.487" endtime="20201112 12:43:46.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.493" level="INFO">VALUE: 120204755</msg>
<status status="PASS" starttime="20201112 12:43:46.492" endtime="20201112 12:43:46.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.482" endtime="20201112 12:43:46.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.504" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:46.502" endtime="20201112 12:43:46.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.509" level="INFO">VALUE: [120214766, 120224766, 120234766, 120244766, 120254766, 120264766, 120274766, 120284766, 120294766, 120304766, 120314766, 120324766, 120334766, 120344766, 120354766, 120364766, 120374766, 120384766, 120394766, 120404766, 120414766, 120424766, 120434766, 120444766, 120454766, 120464766, 120474766, 120484766, 120494766, 120504766, 120514766, 120524766, 120534766, 120544766, 120554766, 120564766, 120574766, 120584766, 120594766, 120604766, 120614766, 120624766, 120634766, 120644766, 120654766, 120664766, 120674766, 120684766, 120694766, 120704766, 120714766, 120724766, 120734766, 120744766, 120754766, 120764766, 120774766, 120784766, 120794766, 120804766, 120814766, 120824766, 120834766, 120844766, 120854766, 120864766, 120874766, 120884766, 120894766, 120904766, 120914766, 120924766, 120934766, 120944766, 120954766, 120964766, 120974766, 120984766, 120994766, 121004766, 121014766, 121024766, 121034766, 121044766, 121054766, 121064766, 121074766, 121084766, 121094766, 121104766, 121114766, 121124766, 121134766, 121144766, 121154766, 121164766, 121174766, 121184766, 121194766, 121204766]</msg>
<status status="PASS" starttime="20201112 12:43:46.506" endtime="20201112 12:43:46.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.497" endtime="20201112 12:43:46.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.520" endtime="20201112 12:43:46.813"></status>
</kw>
<msg timestamp="20201112 12:43:46.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018855903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.519" endtime="20201112 12:43:46.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018855903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028868014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:46.817" endtime="20201112 12:43:46.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.825" endtime="20201112 12:43:46.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.515" endtime="20201112 12:43:46.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.512" endtime="20201112 12:43:46.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:46.850" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:46.828" endtime="20201112 12:43:46.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.854" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:46.853" endtime="20201112 12:43:46.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.856" level="INFO">VALUE: 0.018855903</msg>
<status status="PASS" starttime="20201112 12:43:46.855" endtime="20201112 12:43:46.857"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.851" endtime="20201112 12:43:46.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.862" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:46.861" endtime="20201112 12:43:46.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:46.864" level="INFO">VALUE: [0.028868014, 0.038868889, 0.048869306, 0.058870278, 0.06887075, 0.078871625, 0.088872319, 0.098873111, 0.108873722, 0.118874583, 0.128875194, 0.138876056, 0.148876681, 0.158877556, 0.168878153, 0.178879014, 0.188879639, 0.198880514, 0.208881139, 0.218881986, 0.228882597, 0.2388835, 0.248884097, 0.258884958, 0.268885569, 0.278886458, 0.288887056, 0.298887917, 0.308888528, 0.318889389, 0.328890014, 0.338890875, 0.3488915, 0.358892333, 0.368892972, 0.378893806, 0.388894431, 0.398895278, 0.408895931, 0.41889675, 0.428897347, 0.438898222, 0.448898833, 0.458899708, 0.468900306, 0.478901153, 0.488901764, 0.498902611, 0.508903222, 0.518904097, 0.528904694, 0.538905597, 0.548906167, 0.558907042, 0.568907625, 0.578908486, 0.588909097, 0.598909972, 0.608910569, 0.618911431, 0.628912056, 0.638912889, 0.6489135, 0.658914361, 0.668914972, 0.678915847, 0.688916444, 0.698917306, 0.708917917, 0.718918764, 0.728919389, 0.738920236, 0.748920861, 0.758921708, 0.768922333, 0.778923181, 0.788923792, 0.798924667, 0.808925264, 0.818926125, 0.828926736, 0.838927653, 0.848928208, 0.858929125, 0.868929681, 0.878930583, 0.888931153, 0.898932, 0.908932625, 0.918933486, 0.928934083, 0.938934944, 0.948935556, 0.958936417, 0.968937028, 0.978937889, 0.9889385, 0.998939361, 1.008939986, 1.018940875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:46.863" endtime="20201112 12:43:46.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.858" endtime="20201112 12:43:46.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.871" endtime="20201112 12:43:46.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:46.874" endtime="20201112 12:43:46.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.873" endtime="20201112 12:43:46.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.869" endtime="20201112 12:43:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.330" endtime="20201112 12:43:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.207" endtime="20201112 12:43:46.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.206" endtime="20201112 12:43:46.895"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:46.898" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:46.907" endtime="20201112 12:43:49.017"></status>
</kw>
<msg timestamp="20201112 12:43:49.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 122774240, 'wakeups': [122784256, 122794255, 122804256, 122814256, 122...</msg>
<status status="PASS" starttime="20201112 12:43:46.905" endtime="20201112 12:43:49.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 122774240, 'wakeups': [122784256, 122794255, 122804256, 122814256, 122...</msg>
<status status="PASS" starttime="20201112 12:43:49.020" endtime="20201112 12:43:49.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.026" endtime="20201112 12:43:49.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.902" endtime="20201112 12:43:49.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.900" endtime="20201112 12:43:49.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.037" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [122784256, 122794255, 122804256, 122814256, 122824256, 122834256, 122844256, 122854256, 122864256, 122874256, 122884256, 122894256, 122904256, 1...</msg>
<status status="PASS" starttime="20201112 12:43:49.033" endtime="20201112 12:43:49.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.045" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:49.043" endtime="20201112 12:43:49.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.050" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:49.048" endtime="20201112 12:43:49.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.039" endtime="20201112 12:43:49.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.060" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:49.058" endtime="20201112 12:43:49.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.064" level="INFO">VALUE: 122774240</msg>
<status status="PASS" starttime="20201112 12:43:49.062" endtime="20201112 12:43:49.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.053" endtime="20201112 12:43:49.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.073" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:49.071" endtime="20201112 12:43:49.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.077" level="INFO">VALUE: [122784256, 122794255, 122804256, 122814256, 122824256, 122834256, 122844256, 122854256, 122864256, 122874256, 122884256, 122894256, 122904256, 122914256, 122924256, 122934256, 122944256, 122954256, 122964256, 122974256, 122984256, 122994256, 123004256, 123014256, 123024256, 123034256, 123044256, 123054256, 123064256, 123074256, 123084256, 123094256, 123104256, 123114256, 123124256, 123134256, 123144256, 123154256, 123164256, 123174256, 123184256, 123194256, 123204256, 123214256, 123224256, 123234256, 123244256, 123254256, 123264256, 123274256, 123284256, 123294256, 123304256, 123314256, 123324256, 123334256, 123344256, 123354256, 123364256, 123374256, 123384256, 123394256, 123404256, 123414256, 123424256, 123434256, 123444256, 123454256, 123464256, 123474256, 123484256, 123494256, 123504256, 123514256, 123524256, 123534256, 123544256, 123554256, 123564256, 123574256, 123584256, 123594256, 123604256, 123614256, 123624256, 123634256, 123644256, 123654256, 123664256, 123674256, 123684256, 123694256, 123704256, 123714256, 123724256, 123734256, 123744256, 123754256, 123764256, 123774256]</msg>
<status status="PASS" starttime="20201112 12:43:49.075" endtime="20201112 12:43:49.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.067" endtime="20201112 12:43:49.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.084" endtime="20201112 12:43:49.376"></status>
</kw>
<msg timestamp="20201112 12:43:49.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032431569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.083" endtime="20201112 12:43:49.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022414083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032431569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.380" endtime="20201112 12:43:49.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.387" endtime="20201112 12:43:49.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.080" endtime="20201112 12:43:49.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.078" endtime="20201112 12:43:49.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.414" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:49.391" endtime="20201112 12:43:49.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.419" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:49.418" endtime="20201112 12:43:49.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.421" level="INFO">VALUE: 0.022414083</msg>
<status status="PASS" starttime="20201112 12:43:49.420" endtime="20201112 12:43:49.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.415" endtime="20201112 12:43:49.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.426" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:49.425" endtime="20201112 12:43:49.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.428" level="INFO">VALUE: [0.032431569, 0.042431611, 0.052433153, 0.062434, 0.072434625, 0.082435486, 0.092436097, 0.102436958, 0.112437583, 0.122438458, 0.132439069, 0.142439917, 0.152440542, 0.162441444, 0.172442014, 0.182442875, 0.192443514, 0.202444361, 0.212444972, 0.222445833, 0.232446458, 0.242447333, 0.252447931, 0.262448792, 0.272449472, 0.282450278, 0.292450903, 0.30245175, 0.312452389, 0.322453236, 0.332453861, 0.342454722, 0.352455333, 0.362456194, 0.372456819, 0.382457694, 0.392458375, 0.402459167, 0.412459778, 0.422460653, 0.432461264, 0.442462125, 0.452462736, 0.462463597, 0.472464222, 0.482465083, 0.492465778, 0.502466611, 0.512467167, 0.522468028, 0.532468625, 0.5424695, 0.552470097, 0.562470958, 0.572471569, 0.582472417, 0.592473042, 0.602473889, 0.6124745, 0.622475347, 0.632475972, 0.642476847, 0.652477431, 0.662478292, 0.672478903, 0.682479764, 0.692480375, 0.70248125, 0.712481847, 0.722482694, 0.732483306, 0.742484181, 0.752484778, 0.762485639, 0.772486264, 0.782487153, 0.792487722, 0.802488569, 0.812489208, 0.822490069, 0.832490667, 0.842491556, 0.852492125, 0.862492986, 0.872493611, 0.882494444, 0.892495069, 0.902495931, 0.912496611, 0.922497403, 0.932498014, 0.942498903, 0.952499528, 0.962500333, 0.972500944, 0.982501806, 0.992502431, 1.002503264, 1.012503903, 1.022504736] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:49.427" endtime="20201112 12:43:49.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.422" endtime="20201112 12:43:49.429"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.431" endtime="20201112 12:43:49.432"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:49.435" endtime="20201112 12:43:49.454"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.433" endtime="20201112 12:43:49.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.430" endtime="20201112 12:43:49.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.899" endtime="20201112 12:43:49.455"></status>
</kw>
<msg timestamp="20201112 12:43:49.455" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.463" endtime="20201112 12:43:51.574"></status>
</kw>
<msg timestamp="20201112 12:43:51.575" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 125331218, 'wakeups': [125341235, 125351233, 125361234, 125371234, 125...</msg>
<status status="PASS" starttime="20201112 12:43:49.462" endtime="20201112 12:43:51.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.581" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 125331218, 'wakeups': [125341235, 125351233, 125361234, 125371234, 125...</msg>
<status status="PASS" starttime="20201112 12:43:51.577" endtime="20201112 12:43:51.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.583" endtime="20201112 12:43:51.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.459" endtime="20201112 12:43:51.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.457" endtime="20201112 12:43:51.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.594" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [125341235, 125351233, 125361234, 125371234, 125381234, 125391234, 125401234, 125411234, 125421234, 125431234, 125441234, 125451234, 125461234, 1...</msg>
<status status="PASS" starttime="20201112 12:43:51.590" endtime="20201112 12:43:51.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.602" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:51.600" endtime="20201112 12:43:51.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.607" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:51.605" endtime="20201112 12:43:51.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.596" endtime="20201112 12:43:51.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.619" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:51.616" endtime="20201112 12:43:51.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.623" level="INFO">VALUE: 125331218</msg>
<status status="PASS" starttime="20201112 12:43:51.621" endtime="20201112 12:43:51.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.610" endtime="20201112 12:43:51.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.633" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:51.631" endtime="20201112 12:43:51.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.637" level="INFO">VALUE: [125341235, 125351233, 125361234, 125371234, 125381234, 125391234, 125401234, 125411234, 125421234, 125431234, 125441234, 125451234, 125461234, 125471234, 125481234, 125491234, 125501234, 125511234, 125521234, 125531234, 125541234, 125551234, 125561234, 125571234, 125581234, 125591234, 125601234, 125611234, 125621234, 125631234, 125641234, 125651234, 125661234, 125671234, 125681234, 125691234, 125701234, 125711234, 125721234, 125731234, 125741234, 125751234, 125761234, 125771234, 125781234, 125791234, 125801234, 125811234, 125821234, 125831234, 125841234, 125851234, 125861234, 125871234, 125881234, 125891234, 125901234, 125911234, 125921234, 125931234, 125941234, 125951234, 125961234, 125971234, 125981234, 125991234, 126001234, 126011234, 126021234, 126031234, 126041234, 126051234, 126061234, 126071234, 126081234, 126091234, 126101234, 126111234, 126121234, 126131234, 126141234, 126151234, 126161234, 126171234, 126181234, 126191234, 126201234, 126211234, 126221234, 126231234, 126241234, 126251234, 126261234, 126271234, 126281234, 126291234, 126301234, 126311234, 126321234, 126331234]</msg>
<status status="PASS" starttime="20201112 12:43:51.635" endtime="20201112 12:43:51.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.626" endtime="20201112 12:43:51.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.652" endtime="20201112 12:43:51.949"></status>
</kw>
<msg timestamp="20201112 12:43:51.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019203028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029220833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.649" endtime="20201112 12:43:51.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019203028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029220833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:51.952" endtime="20201112 12:43:51.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:51.960" endtime="20201112 12:43:51.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.644" endtime="20201112 12:43:51.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.640" endtime="20201112 12:43:51.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:51.990" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:51.967" endtime="20201112 12:43:51.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.994" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:51.993" endtime="20201112 12:43:51.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:51.997" level="INFO">VALUE: 0.019203028</msg>
<status status="PASS" starttime="20201112 12:43:51.996" endtime="20201112 12:43:51.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.991" endtime="20201112 12:43:51.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.003" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:52.001" endtime="20201112 12:43:52.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.005" level="INFO">VALUE: [0.029220833, 0.039219875, 0.049221431, 0.059222292, 0.069222903, 0.07922375, 0.089224389, 0.099225236, 0.109225875, 0.119226708, 0.129227333, 0.139228222, 0.149228806, 0.159229667, 0.169230292, 0.179231153, 0.189231778, 0.199232625, 0.20923325, 0.219234111, 0.22923475, 0.239235625, 0.249236208, 0.259237069, 0.26923775, 0.279238542, 0.289239167, 0.299240028, 0.309240653, 0.3192415, 0.329242125, 0.339243, 0.349243639, 0.359244458, 0.369245111, 0.379245944, 0.389246556, 0.399247431, 0.409248056, 0.419248917, 0.429249556, 0.439250389, 0.449251028, 0.459251861, 0.469252486, 0.479253347, 0.489254028, 0.499254792, 0.509255403, 0.519256264, 0.529256875, 0.539257736, 0.549258347, 0.559259194, 0.569259806, 0.579260667, 0.589261278, 0.599262139, 0.609262764, 0.619263611, 0.629264236, 0.639265069, 0.649265681, 0.659266583, 0.669267153, 0.679268, 0.689268639, 0.699269514, 0.709270083, 0.719270944, 0.729271569, 0.739272417, 0.749273028, 0.759273889, 0.769274514, 0.779275375, 0.789275958, 0.799276819, 0.809277444, 0.819278306, 0.829278917, 0.839279764, 0.849280375, 0.859281236, 0.869281847, 0.879282722, 0.889283319, 0.899284167, 0.909284778, 0.919285639, 0.92928625, 0.939287111, 0.949287792, 0.959288583, 0.969289194, 0.979290069, 0.989290694, 0.999291528, 1.009292139, 1.019293028] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:52.004" endtime="20201112 12:43:52.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:51.998" endtime="20201112 12:43:52.006"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.008" endtime="20201112 12:43:52.009"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.011" endtime="20201112 12:43:52.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.010" endtime="20201112 12:43:52.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.006" endtime="20201112 12:43:52.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.456" endtime="20201112 12:43:52.032"></status>
</kw>
<msg timestamp="20201112 12:43:52.032" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.040" endtime="20201112 12:43:54.150"></status>
</kw>
<msg timestamp="20201112 12:43:54.151" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 127907446, 'wakeups': [127917462, 127927461, 127937462, 127947462, 127...</msg>
<status status="PASS" starttime="20201112 12:43:52.038" endtime="20201112 12:43:54.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.157" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 127907446, 'wakeups': [127917462, 127927461, 127937462, 127947462, 127...</msg>
<status status="PASS" starttime="20201112 12:43:54.153" endtime="20201112 12:43:54.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.159" endtime="20201112 12:43:54.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.036" endtime="20201112 12:43:54.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.034" endtime="20201112 12:43:54.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.170" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 3, 'wakeups': [127917462, 127927461, 127937462, 127947462, 127957462, 127967462, 127977462, 127987462, 127997462, 128007462, 128017462, 128027462, 128037462, 1...</msg>
<status status="PASS" starttime="20201112 12:43:54.166" endtime="20201112 12:43:54.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.179" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:54.177" endtime="20201112 12:43:54.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.183" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:54.181" endtime="20201112 12:43:54.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.172" endtime="20201112 12:43:54.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.193" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:54.191" endtime="20201112 12:43:54.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.197" level="INFO">VALUE: 127907446</msg>
<status status="PASS" starttime="20201112 12:43:54.195" endtime="20201112 12:43:54.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.186" endtime="20201112 12:43:54.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.207" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:54.205" endtime="20201112 12:43:54.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.212" level="INFO">VALUE: [127917462, 127927461, 127937462, 127947462, 127957462, 127967462, 127977462, 127987462, 127997462, 128007462, 128017462, 128027462, 128037462, 128047462, 128057462, 128067462, 128077462, 128087462, 128097462, 128107462, 128117462, 128127462, 128137462, 128147462, 128157462, 128167462, 128177462, 128187462, 128197462, 128207462, 128217462, 128227462, 128237462, 128247462, 128257462, 128267462, 128277462, 128287462, 128297462, 128307462, 128317462, 128327462, 128337462, 128347462, 128357462, 128367462, 128377462, 128387462, 128397462, 128407462, 128417462, 128427462, 128437462, 128447462, 128457462, 128467462, 128477462, 128487462, 128497462, 128507462, 128517462, 128527462, 128537462, 128547462, 128557462, 128567462, 128577462, 128587462, 128597462, 128607462, 128617462, 128627462, 128637462, 128647462, 128657462, 128667462, 128677462, 128687462, 128697462, 128707462, 128717462, 128727462, 128737462, 128747462, 128757462, 128767462, 128777462, 128787462, 128797462, 128807462, 128817462, 128827462, 128837462, 128847462, 128857462, 128867462, 128877462, 128887462, 128897462, 128907462]</msg>
<status status="PASS" starttime="20201112 12:43:54.210" endtime="20201112 12:43:54.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.200" endtime="20201112 12:43:54.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.229" endtime="20201112 12:43:54.528"></status>
</kw>
<msg timestamp="20201112 12:43:54.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018913597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028931056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.224" endtime="20201112 12:43:54.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018913597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028931056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.532" endtime="20201112 12:43:54.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.539" endtime="20201112 12:43:54.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.218" endtime="20201112 12:43:54.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.215" endtime="20201112 12:43:54.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.565" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:54.542" endtime="20201112 12:43:54.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.569" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:54.568" endtime="20201112 12:43:54.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.571" level="INFO">VALUE: 0.018913597</msg>
<status status="PASS" starttime="20201112 12:43:54.570" endtime="20201112 12:43:54.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.566" endtime="20201112 12:43:54.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.577" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:54.576" endtime="20201112 12:43:54.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.579" level="INFO">VALUE: [0.028931056, 0.038931139, 0.048932667, 0.058933542, 0.068934153, 0.078935028, 0.088935625, 0.098936472, 0.108937111, 0.118937958, 0.128938569, 0.138939431, 0.148940083, 0.158940917, 0.168941556, 0.178942389, 0.188943014, 0.198943861, 0.208944486, 0.218945375, 0.228945972, 0.238946833, 0.2489475, 0.258948306, 0.268948931, 0.278949778, 0.288950417, 0.298951292, 0.308951903, 0.31895275, 0.328953375, 0.338954222, 0.348954833, 0.358955708, 0.368956319, 0.378957181, 0.388957819, 0.398958681, 0.408959278, 0.418960153, 0.428960764, 0.438961639, 0.44896225, 0.458963097, 0.468963722, 0.478964639, 0.488965194, 0.498966042, 0.508966694, 0.5189675, 0.528968125, 0.538968972, 0.548969583, 0.558970431, 0.568971042, 0.578971903, 0.588972528, 0.598973375, 0.608973972, 0.618974875, 0.628975458, 0.638976306, 0.648977, 0.658977764, 0.668978389, 0.678979236, 0.688979847, 0.698980708, 0.708981319, 0.718982181, 0.728982778, 0.738983639, 0.748984264, 0.758985125, 0.768985722, 0.778986569, 0.788987181, 0.798988042, 0.808988653, 0.818989514, 0.828990139, 0.838990972, 0.848991583, 0.858992444, 0.868993056, 0.878993944, 0.888994528, 0.898995375, 0.908996, 0.918996861, 0.928997472, 0.938998319, 0.948998931, 0.958999792, 0.969000431, 0.97900125, 0.989001875, 0.999002722, 1.009003333, 1.019004194] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:54.578" endtime="20201112 12:43:54.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.573" endtime="20201112 12:43:54.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.583" endtime="20201112 12:43:54.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:54.586" endtime="20201112 12:43:54.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.584" endtime="20201112 12:43:54.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.581" endtime="20201112 12:43:54.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.033" endtime="20201112 12:43:54.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.897" endtime="20201112 12:43:54.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:46.896" endtime="20201112 12:43:54.607"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:54.610" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.618" endtime="20201112 12:43:56.729"></status>
</kw>
<msg timestamp="20201112 12:43:56.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 130485926, 'wakeups': [130495949, 130505946, 130515946, 130525946, 130...</msg>
<status status="PASS" starttime="20201112 12:43:54.616" endtime="20201112 12:43:56.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.736" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 130485926, 'wakeups': [130495949, 130505946, 130515946, 130525946, 130...</msg>
<status status="PASS" starttime="20201112 12:43:56.732" endtime="20201112 12:43:56.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.738" endtime="20201112 12:43:56.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.613" endtime="20201112 12:43:56.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.611" endtime="20201112 12:43:56.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:56.749" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [130495949, 130505946, 130515946, 130525946, 130535946, 130545946, 130555946, 130565946, 130575946, 130585946, 130595946, 130605946, 130615946, 1...</msg>
<status status="PASS" starttime="20201112 12:43:56.745" endtime="20201112 12:43:56.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.757" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:56.755" endtime="20201112 12:43:56.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.761" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:56.760" endtime="20201112 12:43:56.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.751" endtime="20201112 12:43:56.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.771" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:56.769" endtime="20201112 12:43:56.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.776" level="INFO">VALUE: 130485926</msg>
<status status="PASS" starttime="20201112 12:43:56.774" endtime="20201112 12:43:56.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.764" endtime="20201112 12:43:56.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.786" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:56.784" endtime="20201112 12:43:56.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:56.791" level="INFO">VALUE: [130495949, 130505946, 130515946, 130525946, 130535946, 130545946, 130555946, 130565946, 130575946, 130585946, 130595946, 130605946, 130615946, 130625946, 130635946, 130645946, 130655946, 130665946, 130675946, 130685946, 130695946, 130705946, 130715946, 130725946, 130735946, 130745946, 130755946, 130765946, 130775946, 130785946, 130795946, 130805946, 130815946, 130825946, 130835946, 130845946, 130855946, 130865946, 130875946, 130885946, 130895946, 130905946, 130915946, 130925946, 130935946, 130945946, 130955946, 130965946, 130975946, 130985946, 130995946, 131005946, 131015946, 131025946, 131035946, 131045946, 131055946, 131065946, 131075946, 131085946, 131095946, 131105946, 131115946, 131125946, 131135946, 131145946, 131155946, 131165946, 131175946, 131185946, 131195946, 131205946, 131215946, 131225946, 131235946, 131245946, 131255946, 131265946, 131275946, 131285946, 131295946, 131305946, 131315946, 131325946, 131335946, 131345946, 131355946, 131365946, 131375946, 131385946, 131395946, 131405946, 131415946, 131425946, 131435946, 131445946, 131455946, 131465946, 131475946, 131485946]</msg>
<status status="PASS" starttime="20201112 12:43:56.788" endtime="20201112 12:43:56.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.779" endtime="20201112 12:43:56.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:56.806" endtime="20201112 12:43:57.105"></status>
</kw>
<msg timestamp="20201112 12:43:57.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032610292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:56.803" endtime="20201112 12:43:57.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032610292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.108" endtime="20201112 12:43:57.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.116" endtime="20201112 12:43:57.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.797" endtime="20201112 12:43:57.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:56.794" endtime="20201112 12:43:57.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.142" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:57.119" endtime="20201112 12:43:57.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.146" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:57.145" endtime="20201112 12:43:57.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.148" level="INFO">VALUE: 0.022586833</msg>
<status status="PASS" starttime="20201112 12:43:57.147" endtime="20201112 12:43:57.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.143" endtime="20201112 12:43:57.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.154" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:57.153" endtime="20201112 12:43:57.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.156" level="INFO">VALUE: [0.032610292, 0.042608931, 0.052609458, 0.062610319, 0.072610931, 0.082611792, 0.092612417, 0.102613292, 0.112613889, 0.12261475, 0.132615375, 0.142616222, 0.152616889, 0.162617722, 0.172618319, 0.182619181, 0.192619806, 0.202620653, 0.212621292, 0.222622167, 0.23262275, 0.242623625, 0.252624236, 0.262625097, 0.272625722, 0.282626569, 0.292627208, 0.302628056, 0.312628681, 0.322629542, 0.332630153, 0.342631014, 0.352631625, 0.362632486, 0.372633181, 0.382633986, 0.392634667, 0.402635444, 0.412636069, 0.422636931, 0.432637542, 0.442638403, 0.452639028, 0.462639889, 0.472640528, 0.482641375, 0.492642014, 0.502642847, 0.512643458, 0.522644319, 0.532644944, 0.542645806, 0.552646458, 0.562647264, 0.572647861, 0.582648722, 0.592649333, 0.602650194, 0.612650792, 0.622651653, 0.632652292, 0.642653125, 0.652653722, 0.662654639, 0.672655222, 0.682656069, 0.692656667, 0.702657514, 0.712658125, 0.722659, 0.732659597, 0.742660444, 0.752661069, 0.762661917, 0.772662528, 0.782663389, 0.792664014, 0.802664861, 0.812665458, 0.822666333, 0.832666931, 0.842667792, 0.852668403, 0.86266925, 0.872669861, 0.882670722, 0.892671333, 0.902672236, 0.912672847, 0.922673667, 0.932674278, 0.942675125, 0.952675764, 0.962676597, 0.972677208, 0.982678125, 0.992678722, 1.002679528, 1.012680208, 1.022681014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:57.155" endtime="20201112 12:43:57.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.150" endtime="20201112 12:43:57.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.163" endtime="20201112 12:43:57.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.167" endtime="20201112 12:43:57.186"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.165" endtime="20201112 12:43:57.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.162" endtime="20201112 12:43:57.187"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.610" endtime="20201112 12:43:57.187"></status>
</kw>
<msg timestamp="20201112 12:43:57.188" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.196" endtime="20201112 12:43:59.305"></status>
</kw>
<msg timestamp="20201112 12:43:59.307" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 133063150, 'wakeups': [133073173, 133083170, 133093170, 133103170, 133...</msg>
<status status="PASS" starttime="20201112 12:43:57.194" endtime="20201112 12:43:59.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.312" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 133063150, 'wakeups': [133073173, 133083170, 133093170, 133103170, 133...</msg>
<status status="PASS" starttime="20201112 12:43:59.309" endtime="20201112 12:43:59.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.315" endtime="20201112 12:43:59.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.191" endtime="20201112 12:43:59.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.190" endtime="20201112 12:43:59.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.325" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [133073173, 133083170, 133093170, 133103170, 133113170, 133123170, 133133170, 133143170, 133153170, 133163170, 133173170, 133183170, 133193170, 1...</msg>
<status status="PASS" starttime="20201112 12:43:59.321" endtime="20201112 12:43:59.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.333" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:59.331" endtime="20201112 12:43:59.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.338" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:59.336" endtime="20201112 12:43:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.327" endtime="20201112 12:43:59.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.348" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:59.346" endtime="20201112 12:43:59.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.354" level="INFO">VALUE: 133063150</msg>
<status status="PASS" starttime="20201112 12:43:59.352" endtime="20201112 12:43:59.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.341" endtime="20201112 12:43:59.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.364" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:59.362" endtime="20201112 12:43:59.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.369" level="INFO">VALUE: [133073173, 133083170, 133093170, 133103170, 133113170, 133123170, 133133170, 133143170, 133153170, 133163170, 133173170, 133183170, 133193170, 133203170, 133213170, 133223170, 133233170, 133243170, 133253170, 133263170, 133273170, 133283170, 133293170, 133303170, 133313170, 133323170, 133333170, 133343170, 133353170, 133363170, 133373170, 133383170, 133393170, 133403170, 133413170, 133423170, 133433170, 133443170, 133453170, 133463170, 133473170, 133483170, 133493170, 133503170, 133513170, 133523170, 133533170, 133543170, 133553170, 133563170, 133573170, 133583170, 133593170, 133603170, 133613170, 133623170, 133633170, 133643170, 133653170, 133663170, 133673170, 133683170, 133693170, 133703170, 133713170, 133723170, 133733170, 133743170, 133753170, 133763170, 133773170, 133783170, 133793170, 133803170, 133813170, 133823170, 133833170, 133843170, 133853170, 133863170, 133873170, 133883170, 133893170, 133903170, 133913170, 133923170, 133933170, 133943170, 133953170, 133963170, 133973170, 133983170, 133993170, 134003170, 134013170, 134023170, 134033170, 134043170, 134053170, 134063170]</msg>
<status status="PASS" starttime="20201112 12:43:59.366" endtime="20201112 12:43:59.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.357" endtime="20201112 12:43:59.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.380" endtime="20201112 12:43:59.672"></status>
</kw>
<msg timestamp="20201112 12:43:59.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018960542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028984, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:59.379" endtime="20201112 12:43:59.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018960542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028984, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:59.676" endtime="20201112 12:43:59.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.683" endtime="20201112 12:43:59.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.376" endtime="20201112 12:43:59.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.372" endtime="20201112 12:43:59.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.709" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:43:59.686" endtime="20201112 12:43:59.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.714" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:43:59.713" endtime="20201112 12:43:59.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.716" level="INFO">VALUE: 0.018960542</msg>
<status status="PASS" starttime="20201112 12:43:59.715" endtime="20201112 12:43:59.716"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.710" endtime="20201112 12:43:59.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.721" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:59.720" endtime="20201112 12:43:59.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.724" level="INFO">VALUE: [0.028984, 0.038982625, 0.048983167, 0.058984014, 0.068984639, 0.078985514, 0.088986125, 0.098986972, 0.108987611, 0.118988444, 0.128989083, 0.138989944, 0.148990542, 0.158991403, 0.168992028, 0.178992889, 0.1889935, 0.198994403, 0.208994972, 0.218995847, 0.228996472, 0.238997319, 0.248997931, 0.258998806, 0.268999417, 0.279000278, 0.289000903, 0.299001806, 0.309002361, 0.319003222, 0.329003847, 0.339004722, 0.349005333, 0.359006181, 0.369006847, 0.379007736, 0.389008306, 0.399009181, 0.409009778, 0.419010639, 0.429011236, 0.439012097, 0.449012736, 0.459013597, 0.469014194, 0.479015083, 0.489015694, 0.499016611, 0.509017153, 0.519018083, 0.529018667, 0.539019486, 0.549020083, 0.559020958, 0.569021569, 0.579022431, 0.589023028, 0.599023875, 0.6090245, 0.619025417, 0.629025958, 0.639026819, 0.649027431, 0.659028264, 0.669028889, 0.679029736, 0.689030361, 0.699031222, 0.709031833, 0.719032667, 0.729033278, 0.739034153, 0.749034764, 0.759035611, 0.769036208, 0.779037069, 0.789037681, 0.799038542, 0.809039194, 0.81904, 0.829040611, 0.839041472, 0.849042097, 0.859042944, 0.869043583, 0.879044403, 0.889045014, 0.899045889, 0.9090465, 0.919047375, 0.929047958, 0.939048833, 0.949049417, 0.959050292, 0.969050889, 0.97905175, 0.989052361, 0.999053264, 1.009053833, 1.019054681] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:59.723" endtime="20201112 12:43:59.724"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.717" endtime="20201112 12:43:59.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.727" endtime="20201112 12:43:59.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:59.730" endtime="20201112 12:43:59.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.729" endtime="20201112 12:43:59.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.725" endtime="20201112 12:43:59.750"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.188" endtime="20201112 12:43:59.751"></status>
</kw>
<msg timestamp="20201112 12:43:59.751" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.759" endtime="20201112 12:44:01.869"></status>
</kw>
<msg timestamp="20201112 12:44:01.870" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 135626256, 'wakeups': [135636279, 135646276, 135656276, 135666276, 135...</msg>
<status status="PASS" starttime="20201112 12:43:59.757" endtime="20201112 12:44:01.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.877" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 135626256, 'wakeups': [135636279, 135646276, 135656276, 135666276, 135...</msg>
<status status="PASS" starttime="20201112 12:44:01.873" endtime="20201112 12:44:01.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.879" endtime="20201112 12:44:01.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.755" endtime="20201112 12:44:01.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.753" endtime="20201112 12:44:01.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:01.890" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 4, 'wakeups': [135636279, 135646276, 135656276, 135666276, 135676276, 135686276, 135696276, 135706276, 135716276, 135726276, 135736276, 135746276, 135756276, 1...</msg>
<status status="PASS" starttime="20201112 12:44:01.886" endtime="20201112 12:44:01.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.898" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:01.896" endtime="20201112 12:44:01.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.902" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:01.900" endtime="20201112 12:44:01.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.891" endtime="20201112 12:44:01.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.912" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:01.910" endtime="20201112 12:44:01.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.916" level="INFO">VALUE: 135626256</msg>
<status status="PASS" starttime="20201112 12:44:01.914" endtime="20201112 12:44:01.917"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.905" endtime="20201112 12:44:01.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.927" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:01.924" endtime="20201112 12:44:01.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:01.931" level="INFO">VALUE: [135636279, 135646276, 135656276, 135666276, 135676276, 135686276, 135696276, 135706276, 135716276, 135726276, 135736276, 135746276, 135756276, 135766276, 135776276, 135786276, 135796276, 135806276, 135816276, 135826276, 135836276, 135846276, 135856276, 135866276, 135876276, 135886276, 135896276, 135906276, 135916276, 135926276, 135936276, 135946276, 135956276, 135966276, 135976276, 135986276, 135996276, 136006276, 136016276, 136026276, 136036276, 136046276, 136056276, 136066276, 136076276, 136086276, 136096276, 136106276, 136116276, 136126276, 136136276, 136146276, 136156276, 136166276, 136176276, 136186276, 136196276, 136206276, 136216276, 136226276, 136236276, 136246276, 136256276, 136266276, 136276276, 136286276, 136296276, 136306276, 136316276, 136326276, 136336276, 136346276, 136356276, 136366276, 136376276, 136386276, 136396276, 136406276, 136416276, 136426276, 136436276, 136446276, 136456276, 136466276, 136476276, 136486276, 136496276, 136506276, 136516276, 136526276, 136536276, 136546276, 136556276, 136566276, 136576276, 136586276, 136596276, 136606276, 136616276, 136626276]</msg>
<status status="PASS" starttime="20201112 12:44:01.929" endtime="20201112 12:44:01.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.919" endtime="20201112 12:44:01.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:01.946" endtime="20201112 12:44:02.239"></status>
</kw>
<msg timestamp="20201112 12:44:02.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018733236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028756694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:01.944" endtime="20201112 12:44:02.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018733236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028756694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.243" endtime="20201112 12:44:02.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.250" endtime="20201112 12:44:02.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.938" endtime="20201112 12:44:02.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:01.935" endtime="20201112 12:44:02.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.282" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:02.260" endtime="20201112 12:44:02.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.287" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:02.286" endtime="20201112 12:44:02.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.289" level="INFO">VALUE: 0.018733236</msg>
<status status="PASS" starttime="20201112 12:44:02.288" endtime="20201112 12:44:02.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.283" endtime="20201112 12:44:02.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.294" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:02.293" endtime="20201112 12:44:02.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.296" level="INFO">VALUE: [0.028756694, 0.038755333, 0.048755889, 0.058756764, 0.068757347, 0.078758222, 0.088758819, 0.098759681, 0.108760319, 0.118761167, 0.128761792, 0.138762639, 0.148763264, 0.158764111, 0.168764764, 0.178765597, 0.188766236, 0.198767069, 0.208767694, 0.218768556, 0.228769167, 0.238770028, 0.248770681, 0.258771514, 0.268772125, 0.278772986, 0.288773611, 0.298774472, 0.308775069, 0.318775931, 0.328776556, 0.338777389, 0.348778, 0.358778861, 0.368779472, 0.378780347, 0.388780931, 0.398781778, 0.408782417, 0.418783319, 0.428783861, 0.438784708, 0.448785319, 0.458786181, 0.468786806, 0.478787639, 0.488788333, 0.498789111, 0.508789722, 0.518790583, 0.528791194, 0.538792042, 0.548792708, 0.558793542, 0.568794208, 0.578794972, 0.588795597, 0.598796444, 0.608797056, 0.618797903, 0.628798514, 0.638799375, 0.648799986, 0.658800847, 0.668801458, 0.678802306, 0.688802917, 0.698803792, 0.708804403, 0.718805236, 0.728805861, 0.738806708, 0.748807319, 0.758808181, 0.768808819, 0.778809653, 0.78881025, 0.798811111, 0.808811792, 0.818812583, 0.828813194, 0.838814042, 0.848814667, 0.858815528, 0.868816125, 0.878816986, 0.888817597, 0.898818458, 0.908819069, 0.918819917, 0.928820542, 0.938821403, 0.948822056, 0.958822861, 0.968823486, 0.978824319, 0.988824944, 0.998825806, 1.008826417, 1.018827264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:02.295" endtime="20201112 12:44:02.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.290" endtime="20201112 12:44:02.297"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.299" endtime="20201112 12:44:02.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.302" endtime="20201112 12:44:02.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.301" endtime="20201112 12:44:02.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.298" endtime="20201112 12:44:02.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.752" endtime="20201112 12:44:02.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.608" endtime="20201112 12:44:02.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.607" endtime="20201112 12:44:02.323"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:02.326" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.335" endtime="20201112 12:44:04.445"></status>
</kw>
<msg timestamp="20201112 12:44:04.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 138202484, 'wakeups': [138212512, 138222511, 138232512, 138242512, 138...</msg>
<status status="PASS" starttime="20201112 12:44:02.333" endtime="20201112 12:44:04.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.452" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 138202484, 'wakeups': [138212512, 138222511, 138232512, 138242512, 138...</msg>
<status status="PASS" starttime="20201112 12:44:04.448" endtime="20201112 12:44:04.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.454" endtime="20201112 12:44:04.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.330" endtime="20201112 12:44:04.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.328" endtime="20201112 12:44:04.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.465" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [138212512, 138222511, 138232512, 138242512, 138252512, 138262512, 138272512, 138282512, 138292512, 138302512, 138312512, 138322512, 138332512, 1...</msg>
<status status="PASS" starttime="20201112 12:44:04.461" endtime="20201112 12:44:04.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.474" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:04.472" endtime="20201112 12:44:04.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.478" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:04.476" endtime="20201112 12:44:04.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.467" endtime="20201112 12:44:04.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.488" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:04.486" endtime="20201112 12:44:04.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.492" level="INFO">VALUE: 138202484</msg>
<status status="PASS" starttime="20201112 12:44:04.490" endtime="20201112 12:44:04.493"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.481" endtime="20201112 12:44:04.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.502" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:04.500" endtime="20201112 12:44:04.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.507" level="INFO">VALUE: [138212512, 138222511, 138232512, 138242512, 138252512, 138262512, 138272512, 138282512, 138292512, 138302512, 138312512, 138322512, 138332512, 138342512, 138352512, 138362512, 138372512, 138382512, 138392512, 138402512, 138412512, 138422512, 138432512, 138442512, 138452512, 138462512, 138472512, 138482512, 138492512, 138502512, 138512512, 138522512, 138532512, 138542512, 138552512, 138562512, 138572512, 138582512, 138592512, 138602512, 138612512, 138622512, 138632512, 138642512, 138652512, 138662512, 138672512, 138682512, 138692512, 138702512, 138712512, 138722512, 138732512, 138742512, 138752512, 138762512, 138772512, 138782512, 138792512, 138802512, 138812512, 138822512, 138832512, 138842512, 138852512, 138862512, 138872512, 138882512, 138892512, 138902512, 138912512, 138922512, 138932512, 138942512, 138952512, 138962512, 138972512, 138982512, 138992512, 139002512, 139012512, 139022512, 139032512, 139042512, 139052512, 139062512, 139072512, 139082512, 139092512, 139102512, 139112512, 139122512, 139132512, 139142512, 139152512, 139162512, 139172512, 139182512, 139192512, 139202512]</msg>
<status status="PASS" starttime="20201112 12:44:04.504" endtime="20201112 12:44:04.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.495" endtime="20201112 12:44:04.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.522" endtime="20201112 12:44:04.819"></status>
</kw>
<msg timestamp="20201112 12:44:04.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032654167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.519" endtime="20201112 12:44:04.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032654167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:04.823" endtime="20201112 12:44:04.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.830" endtime="20201112 12:44:04.832"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.513" endtime="20201112 12:44:04.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.510" endtime="20201112 12:44:04.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:04.857" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:04.834" endtime="20201112 12:44:04.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.862" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:04.861" endtime="20201112 12:44:04.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.864" level="INFO">VALUE: 0.022625153</msg>
<status status="PASS" starttime="20201112 12:44:04.863" endtime="20201112 12:44:04.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.858" endtime="20201112 12:44:04.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.870" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:04.868" endtime="20201112 12:44:04.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:04.872" level="INFO">VALUE: [0.032654167, 0.042654167, 0.052655708, 0.062656583, 0.072657222, 0.082658069, 0.092658667, 0.102659528, 0.112660139, 0.122661, 0.132661625, 0.1426625, 0.152663125, 0.162663972, 0.172664583, 0.182665472, 0.192666069, 0.202666917, 0.212667625, 0.222668403, 0.232669028, 0.242669889, 0.2526705, 0.262671375, 0.272671986, 0.282672847, 0.292673472, 0.302674361, 0.312675014, 0.322675806, 0.332676444, 0.342677306, 0.352677917, 0.362678764, 0.372679403, 0.382680292, 0.392680875, 0.402681736, 0.412682347, 0.422683208, 0.432683833, 0.442684708, 0.452685319, 0.462686194, 0.472686792, 0.482687653, 0.492688278, 0.502689139, 0.512689736, 0.522690597, 0.532691208, 0.542692083, 0.552692681, 0.562693528, 0.572694139, 0.582695, 0.592695611, 0.602696472, 0.612697097, 0.622697931, 0.632698556, 0.642699417, 0.652700014, 0.662700889, 0.6727015, 0.682702347, 0.692702986, 0.702703833, 0.712704472, 0.722705278, 0.732705903, 0.742706764, 0.752707361, 0.762708222, 0.772708833, 0.782709708, 0.792710319, 0.802711194, 0.812711792, 0.822712639, 0.832713264, 0.842714097, 0.852714722, 0.862715569, 0.872716194, 0.882717042, 0.892717653, 0.902718528, 0.912719125, 0.92272, 0.932720597, 0.942721472, 0.952722069, 0.962722931, 0.972723542, 0.982724417, 0.992725014, 1.002725889, 1.012726486, 1.022727361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:04.871" endtime="20201112 12:44:04.872"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.865" endtime="20201112 12:44:04.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.875" endtime="20201112 12:44:04.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:04.878" endtime="20201112 12:44:04.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.877" endtime="20201112 12:44:04.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.873" endtime="20201112 12:44:04.898"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.327" endtime="20201112 12:44:04.899"></status>
</kw>
<msg timestamp="20201112 12:44:04.899" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:04.907" endtime="20201112 12:44:07.017"></status>
</kw>
<msg timestamp="20201112 12:44:07.018" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 140774213, 'wakeups': [140784241, 140794240, 140804241, 140814241, 140...</msg>
<status status="PASS" starttime="20201112 12:44:04.905" endtime="20201112 12:44:07.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.024" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 140774213, 'wakeups': [140784241, 140794240, 140804241, 140814241, 140...</msg>
<status status="PASS" starttime="20201112 12:44:07.020" endtime="20201112 12:44:07.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.026" endtime="20201112 12:44:07.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.903" endtime="20201112 12:44:07.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.901" endtime="20201112 12:44:07.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.037" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [140784241, 140794240, 140804241, 140814241, 140824241, 140834241, 140844241, 140854241, 140864241, 140874241, 140884241, 140894241, 140904241, 1...</msg>
<status status="PASS" starttime="20201112 12:44:07.033" endtime="20201112 12:44:07.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.046" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:07.044" endtime="20201112 12:44:07.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.050" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:07.048" endtime="20201112 12:44:07.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.039" endtime="20201112 12:44:07.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.063" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:07.061" endtime="20201112 12:44:07.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.068" level="INFO">VALUE: 140774213</msg>
<status status="PASS" starttime="20201112 12:44:07.066" endtime="20201112 12:44:07.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.054" endtime="20201112 12:44:07.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.078" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:07.076" endtime="20201112 12:44:07.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.083" level="INFO">VALUE: [140784241, 140794240, 140804241, 140814241, 140824241, 140834241, 140844241, 140854241, 140864241, 140874241, 140884241, 140894241, 140904241, 140914241, 140924241, 140934241, 140944241, 140954241, 140964241, 140974241, 140984241, 140994241, 141004241, 141014241, 141024241, 141034241, 141044241, 141054241, 141064241, 141074241, 141084241, 141094241, 141104241, 141114241, 141124241, 141134241, 141144241, 141154241, 141164241, 141174241, 141184241, 141194241, 141204241, 141214241, 141224241, 141234241, 141244241, 141254241, 141264241, 141274241, 141284241, 141294241, 141304241, 141314241, 141324241, 141334241, 141344241, 141354241, 141364241, 141374241, 141384241, 141394241, 141404241, 141414241, 141424241, 141434241, 141444241, 141454241, 141464241, 141474241, 141484241, 141494241, 141504241, 141514241, 141524241, 141534241, 141544241, 141554241, 141564241, 141574241, 141584241, 141594241, 141604241, 141614241, 141624241, 141634241, 141644241, 141654241, 141664241, 141674241, 141684241, 141694241, 141704241, 141714241, 141724241, 141734241, 141744241, 141754241, 141764241, 141774241]</msg>
<status status="PASS" starttime="20201112 12:44:07.081" endtime="20201112 12:44:07.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.071" endtime="20201112 12:44:07.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.098" endtime="20201112 12:44:07.397"></status>
</kw>
<msg timestamp="20201112 12:44:07.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018783722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028812333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.095" endtime="20201112 12:44:07.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018783722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028812333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.400" endtime="20201112 12:44:07.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.408" endtime="20201112 12:44:07.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.089" endtime="20201112 12:44:07.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.086" endtime="20201112 12:44:07.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.433" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:07.411" endtime="20201112 12:44:07.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.438" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:07.437" endtime="20201112 12:44:07.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.440" level="INFO">VALUE: 0.018783722</msg>
<status status="PASS" starttime="20201112 12:44:07.439" endtime="20201112 12:44:07.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.434" endtime="20201112 12:44:07.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.446" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:07.444" endtime="20201112 12:44:07.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.448" level="INFO">VALUE: [0.028812333, 0.038812347, 0.048813889, 0.058814764, 0.068815361, 0.078816222, 0.088816847, 0.098817722, 0.108818319, 0.118819181, 0.128819806, 0.138820667, 0.148821292, 0.158822167, 0.168822764, 0.178823625, 0.188824236, 0.198825097, 0.208825736, 0.218826583, 0.228827194, 0.238828069, 0.248828681, 0.258829556, 0.268830153, 0.278831028, 0.288831639, 0.2988325, 0.308833111, 0.318834, 0.328834611, 0.338835486, 0.348836097, 0.358836944, 0.368837583, 0.378838417, 0.388839042, 0.398839903, 0.408840583, 0.418841389, 0.428842, 0.438842875, 0.448843486, 0.458844347, 0.468844958, 0.478845833, 0.488846458, 0.498847319, 0.508847944, 0.518848792, 0.528849403, 0.538850264, 0.548850903, 0.55885175, 0.568852375, 0.57885325, 0.588853861, 0.598854708, 0.608855333, 0.618856194, 0.628856833, 0.638857694, 0.648858292, 0.658859153, 0.668859778, 0.678860611, 0.68886125, 0.698862097, 0.708862708, 0.718863569, 0.728864167, 0.738865014, 0.748865625, 0.758866486, 0.768867167, 0.778867986, 0.788868569, 0.798869431, 0.808870056, 0.818870889, 0.828871514, 0.838872361, 0.848873014, 0.858873833, 0.868874444, 0.878875292, 0.888875931, 0.898876833, 0.908877375, 0.91887825, 0.928878861, 0.938879708, 0.948880347, 0.958881167, 0.968881806, 0.978882639, 0.988883292, 0.998884111, 1.008884736, 1.018885583] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:07.447" endtime="20201112 12:44:07.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.441" endtime="20201112 12:44:07.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.451" endtime="20201112 12:44:07.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:07.459" endtime="20201112 12:44:07.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.457" endtime="20201112 12:44:07.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.449" endtime="20201112 12:44:07.479"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:04.899" endtime="20201112 12:44:07.479"></status>
</kw>
<msg timestamp="20201112 12:44:07.480" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.488" endtime="20201112 12:44:09.600"></status>
</kw>
<msg timestamp="20201112 12:44:09.601" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 143355068, 'wakeups': [143365097, 143375095, 143385096, 143395096, 143...</msg>
<status status="PASS" starttime="20201112 12:44:07.486" endtime="20201112 12:44:09.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.608" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 143355068, 'wakeups': [143365097, 143375095, 143385096, 143395096, 143...</msg>
<status status="PASS" starttime="20201112 12:44:09.604" endtime="20201112 12:44:09.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.610" endtime="20201112 12:44:09.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.483" endtime="20201112 12:44:09.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.482" endtime="20201112 12:44:09.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:09.622" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 5, 'wakeups': [143365097, 143375095, 143385096, 143395096, 143405096, 143415096, 143425096, 143435096, 143445096, 143455096, 143465096, 143475096, 143485096, 1...</msg>
<status status="PASS" starttime="20201112 12:44:09.617" endtime="20201112 12:44:09.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.631" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:09.628" endtime="20201112 12:44:09.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.635" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:09.633" endtime="20201112 12:44:09.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.623" endtime="20201112 12:44:09.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.646" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:09.644" endtime="20201112 12:44:09.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.650" level="INFO">VALUE: 143355068</msg>
<status status="PASS" starttime="20201112 12:44:09.648" endtime="20201112 12:44:09.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.638" endtime="20201112 12:44:09.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.661" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:09.659" endtime="20201112 12:44:09.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.666" level="INFO">VALUE: [143365097, 143375095, 143385096, 143395096, 143405096, 143415096, 143425096, 143435096, 143445096, 143455096, 143465096, 143475096, 143485096, 143495096, 143505096, 143515096, 143525096, 143535096, 143545096, 143555096, 143565096, 143575096, 143585096, 143595096, 143605096, 143615096, 143625096, 143635096, 143645096, 143655096, 143665096, 143675096, 143685096, 143695096, 143705096, 143715096, 143725096, 143735096, 143745096, 143755096, 143765096, 143775096, 143785096, 143795096, 143805096, 143815096, 143825096, 143835096, 143845096, 143855096, 143865096, 143875096, 143885096, 143895096, 143905096, 143915096, 143925096, 143935096, 143945096, 143955096, 143965096, 143975096, 143985096, 143995096, 144005096, 144015096, 144025096, 144035096, 144045096, 144055096, 144065096, 144075096, 144085096, 144095096, 144105096, 144115096, 144125096, 144135096, 144145096, 144155096, 144165096, 144175096, 144185096, 144195096, 144205096, 144215096, 144225096, 144235096, 144245096, 144255096, 144265096, 144275096, 144285096, 144295096, 144305096, 144315096, 144325096, 144335096, 144345096, 144355096]</msg>
<status status="PASS" starttime="20201112 12:44:09.664" endtime="20201112 12:44:09.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.653" endtime="20201112 12:44:09.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.684" endtime="20201112 12:44:09.984"></status>
</kw>
<msg timestamp="20201112 12:44:09.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018788861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028818194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.679" endtime="20201112 12:44:09.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:09.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018788861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028818194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:09.988" endtime="20201112 12:44:09.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:09.996" endtime="20201112 12:44:09.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.673" endtime="20201112 12:44:09.999"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:09.670" endtime="20201112 12:44:09.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.023" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:10.000" endtime="20201112 12:44:10.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.027" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:10.026" endtime="20201112 12:44:10.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.030" level="INFO">VALUE: 0.018788861</msg>
<status status="PASS" starttime="20201112 12:44:10.029" endtime="20201112 12:44:10.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.024" endtime="20201112 12:44:10.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.035" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:10.034" endtime="20201112 12:44:10.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.037" level="INFO">VALUE: [0.028818194, 0.038817208, 0.04881875, 0.058819611, 0.068820222, 0.078821083, 0.088821708, 0.098822569, 0.108823181, 0.118824042, 0.128824667, 0.138825542, 0.148826153, 0.158827, 0.168827639, 0.1788285, 0.188829097, 0.198829958, 0.208830583, 0.218831458, 0.228832069, 0.238832931, 0.248833542, 0.258834403, 0.268835042, 0.278835903, 0.288836514, 0.298837361, 0.308837986, 0.318838847, 0.328839458, 0.338840333, 0.348840944, 0.358841806, 0.368842431, 0.378843292, 0.388843903, 0.398844764, 0.408845361, 0.418846222, 0.428846833, 0.438847694, 0.448848319, 0.458849153, 0.468849764, 0.478850625, 0.48885125, 0.498852111, 0.508852708, 0.518853556, 0.528854181, 0.538855028, 0.548855639, 0.5588565, 0.568857111, 0.578857958, 0.588858569, 0.598859431, 0.608860042, 0.618860889, 0.6288615, 0.638862375, 0.648862972, 0.658863833, 0.668864458, 0.678865319, 0.688865931, 0.698866764, 0.708867375, 0.718868236, 0.728868861, 0.738869792, 0.748870319, 0.758871181, 0.768871792, 0.778872639, 0.788873319, 0.798874111, 0.808874722, 0.818875597, 0.828876208, 0.838877056, 0.848877667, 0.858878542, 0.868879139, 0.87888, 0.888880611, 0.898881458, 0.908882083, 0.918882931, 0.928883542, 0.938884403, 0.948885014, 0.958885889, 0.9688865, 0.978887389, 0.988887958, 0.998888819, 1.008889431, 1.018890278] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:10.036" endtime="20201112 12:44:10.038"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.031" endtime="20201112 12:44:10.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.041" endtime="20201112 12:44:10.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.044" endtime="20201112 12:44:10.063"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.042" endtime="20201112 12:44:10.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.039" endtime="20201112 12:44:10.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.480" endtime="20201112 12:44:10.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.325" endtime="20201112 12:44:10.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.324" endtime="20201112 12:44:10.065"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:10.068" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.078" endtime="20201112 12:44:12.189"></status>
</kw>
<msg timestamp="20201112 12:44:12.191" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 145945544, 'wakeups': [145955578, 145965577, 145975577, 145985577, 145...</msg>
<status status="PASS" starttime="20201112 12:44:10.076" endtime="20201112 12:44:12.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.198" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 145945544, 'wakeups': [145955578, 145965577, 145975577, 145985577, 145...</msg>
<status status="PASS" starttime="20201112 12:44:12.195" endtime="20201112 12:44:12.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.201" endtime="20201112 12:44:12.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.072" endtime="20201112 12:44:12.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.070" endtime="20201112 12:44:12.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.212" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [145955578, 145965577, 145975577, 145985577, 145995577, 146005577, 146015577, 146025577, 146035577, 146045577, 146055577, 146065577, 146075577, 1...</msg>
<status status="PASS" starttime="20201112 12:44:12.208" endtime="20201112 12:44:12.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.220" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:12.218" endtime="20201112 12:44:12.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.224" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:12.222" endtime="20201112 12:44:12.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.213" endtime="20201112 12:44:12.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.234" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:12.232" endtime="20201112 12:44:12.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.238" level="INFO">VALUE: 145945544</msg>
<status status="PASS" starttime="20201112 12:44:12.237" endtime="20201112 12:44:12.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.227" endtime="20201112 12:44:12.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.246" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:12.245" endtime="20201112 12:44:12.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.248" level="INFO">VALUE: [145955578, 145965577, 145975577, 145985577, 145995577, 146005577, 146015577, 146025577, 146035577, 146045577, 146055577, 146065577, 146075577, 146085577, 146095577, 146105577, 146115577, 146125577, 146135577, 146145577, 146155577, 146165577, 146175577, 146185577, 146195577, 146205577, 146215577, 146225577, 146235577, 146245577, 146255577, 146265577, 146275577, 146285577, 146295577, 146305577, 146315577, 146325577, 146335577, 146345577, 146355577, 146365577, 146375577, 146385577, 146395577, 146405577, 146415577, 146425577, 146435577, 146445577, 146455577, 146465577, 146475577, 146485577, 146495577, 146505577, 146515577, 146525577, 146535577, 146545577, 146555577, 146565577, 146575577, 146585577, 146595577, 146605577, 146615577, 146625577, 146635577, 146645577, 146655577, 146665577, 146675577, 146685577, 146695577, 146705577, 146715577, 146725577, 146735577, 146745577, 146755577, 146765577, 146775577, 146785577, 146795577, 146805577, 146815577, 146825577, 146835577, 146845577, 146855577, 146865577, 146875577, 146885577, 146895577, 146905577, 146915577, 146925577, 146935577, 146945577]</msg>
<status status="PASS" starttime="20201112 12:44:12.247" endtime="20201112 12:44:12.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.241" endtime="20201112 12:44:12.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.255" endtime="20201112 12:44:12.545"></status>
</kw>
<msg timestamp="20201112 12:44:12.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034054736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.254" endtime="20201112 12:44:12.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024019625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034054736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.549" endtime="20201112 12:44:12.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.556" endtime="20201112 12:44:12.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.251" endtime="20201112 12:44:12.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.250" endtime="20201112 12:44:12.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.588" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:12.564" endtime="20201112 12:44:12.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.593" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:12.592" endtime="20201112 12:44:12.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.596" level="INFO">VALUE: 0.024019625</msg>
<status status="PASS" starttime="20201112 12:44:12.594" endtime="20201112 12:44:12.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.589" endtime="20201112 12:44:12.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.601" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:12.600" endtime="20201112 12:44:12.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.604" level="INFO">VALUE: [0.034054736, 0.044054694, 0.054055236, 0.064056083, 0.074056708, 0.084057583, 0.094058194, 0.104059042, 0.114059667, 0.124060514, 0.134061139, 0.144062, 0.154062625, 0.164063472, 0.174064111, 0.184064958, 0.194065569, 0.204066431, 0.214067056, 0.224067917, 0.234068528, 0.244069403, 0.254070014, 0.264070875, 0.274071486, 0.284072347, 0.294072972, 0.304073847, 0.314074458, 0.324075319, 0.334075931, 0.344076833, 0.354077403, 0.364078292, 0.374078889, 0.384079764, 0.394080403, 0.404081222, 0.414081847, 0.424082722, 0.434083347, 0.444084194, 0.454084806, 0.464085681, 0.474086292, 0.484087153, 0.494087778, 0.504088639, 0.514089236, 0.524090097, 0.534090708, 0.544091556, 0.554092194, 0.564093028, 0.574093653, 0.584094542, 0.594095125, 0.604095958, 0.614096583, 0.624097444, 0.634098042, 0.644098917, 0.654099514, 0.664100375, 0.674101056, 0.684101847, 0.694102444, 0.704103306, 0.714103917, 0.724104792, 0.734105403, 0.744106306, 0.754106861, 0.764107708, 0.774108319, 0.784109181, 0.794109792, 0.804110653, 0.814111278, 0.824112125, 0.834112736, 0.844113597, 0.854114222, 0.864115083, 0.874115681, 0.884116528, 0.894117153, 0.904118, 0.914118625, 0.924119472, 0.934120097, 0.944120944, 0.954121556, 0.964122444, 0.974123028, 0.984123875, 0.9941245, 1.004125361, 1.014125972, 1.024126819] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:12.603" endtime="20201112 12:44:12.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.597" endtime="20201112 12:44:12.605"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.607" endtime="20201112 12:44:12.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:12.610" endtime="20201112 12:44:12.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.609" endtime="20201112 12:44:12.630"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.605" endtime="20201112 12:44:12.631"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.069" endtime="20201112 12:44:12.631"></status>
</kw>
<msg timestamp="20201112 12:44:12.631" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.640" endtime="20201112 12:44:14.752"></status>
</kw>
<msg timestamp="20201112 12:44:14.753" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 148507150, 'wakeups': [148517185, 148527183, 148537183, 148547183, 148...</msg>
<status status="PASS" starttime="20201112 12:44:12.638" endtime="20201112 12:44:14.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.759" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 148507150, 'wakeups': [148517185, 148527183, 148537183, 148547183, 148...</msg>
<status status="PASS" starttime="20201112 12:44:14.755" endtime="20201112 12:44:14.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.762" endtime="20201112 12:44:14.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.635" endtime="20201112 12:44:14.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.633" endtime="20201112 12:44:14.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:14.774" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [148517185, 148527183, 148537183, 148547183, 148557183, 148567183, 148577183, 148587183, 148597183, 148607183, 148617183, 148627183, 148637183, 1...</msg>
<status status="PASS" starttime="20201112 12:44:14.769" endtime="20201112 12:44:14.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.784" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:14.782" endtime="20201112 12:44:14.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.788" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:14.786" endtime="20201112 12:44:14.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.776" endtime="20201112 12:44:14.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.800" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:14.798" endtime="20201112 12:44:14.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.807" level="INFO">VALUE: 148507150</msg>
<status status="PASS" starttime="20201112 12:44:14.805" endtime="20201112 12:44:14.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.792" endtime="20201112 12:44:14.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.818" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:14.816" endtime="20201112 12:44:14.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:14.823" level="INFO">VALUE: [148517185, 148527183, 148537183, 148547183, 148557183, 148567183, 148577183, 148587183, 148597183, 148607183, 148617183, 148627183, 148637183, 148647183, 148657183, 148667183, 148677183, 148687183, 148697183, 148707183, 148717183, 148727183, 148737183, 148747183, 148757183, 148767183, 148777183, 148787183, 148797183, 148807183, 148817183, 148827183, 148837183, 148847183, 148857183, 148867183, 148877183, 148887183, 148897183, 148907183, 148917183, 148927183, 148937183, 148947183, 148957183, 148967183, 148977183, 148987183, 148997183, 149007183, 149017183, 149027183, 149037183, 149047183, 149057183, 149067183, 149077183, 149087183, 149097183, 149107183, 149117183, 149127183, 149137183, 149147183, 149157183, 149167183, 149177183, 149187183, 149197183, 149207183, 149217183, 149227183, 149237183, 149247183, 149257183, 149267183, 149277183, 149287183, 149297183, 149307183, 149317183, 149327183, 149337183, 149347183, 149357183, 149367183, 149377183, 149387183, 149397183, 149407183, 149417183, 149427183, 149437183, 149447183, 149457183, 149467183, 149477183, 149487183, 149497183, 149507183]</msg>
<status status="PASS" starttime="20201112 12:44:14.820" endtime="20201112 12:44:14.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.810" endtime="20201112 12:44:14.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:14.834" endtime="20201112 12:44:15.124"></status>
</kw>
<msg timestamp="20201112 12:44:15.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029459569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:14.833" endtime="20201112 12:44:15.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019424111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029459569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.128" endtime="20201112 12:44:15.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.136" endtime="20201112 12:44:15.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.830" endtime="20201112 12:44:15.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:14.826" endtime="20201112 12:44:15.139"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.163" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:15.139" endtime="20201112 12:44:15.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.167" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:15.166" endtime="20201112 12:44:15.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.169" level="INFO">VALUE: 0.019424111</msg>
<status status="PASS" starttime="20201112 12:44:15.168" endtime="20201112 12:44:15.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.163" endtime="20201112 12:44:15.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.175" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:15.174" endtime="20201112 12:44:15.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.178" level="INFO">VALUE: [0.029459569, 0.039458514, 0.049459056, 0.059459931, 0.069460583, 0.079461389, 0.089462014, 0.099462875, 0.109463486, 0.119464417, 0.129464972, 0.139465847, 0.149466472, 0.159467319, 0.169467944, 0.179468778, 0.189469403, 0.199470264, 0.209470875, 0.219471764, 0.229472389, 0.239473236, 0.249473847, 0.259474708, 0.269475333, 0.279476194, 0.289476819, 0.299477708, 0.309478278, 0.319479139, 0.32947975, 0.339480611, 0.349481236, 0.359482097, 0.369482708, 0.379483569, 0.389484194, 0.399485056, 0.409485681, 0.419486556, 0.429487181, 0.439488, 0.449488611, 0.459489486, 0.469490083, 0.479490931, 0.489491556, 0.499492403, 0.509493014, 0.519493889, 0.529494486, 0.539495333, 0.549495944, 0.559496819, 0.569497417, 0.579498292, 0.589498903, 0.599499736, 0.609500361, 0.619501208, 0.629501833, 0.639502667, 0.649503292, 0.659504139, 0.66950475, 0.679505611, 0.689506222, 0.699507069, 0.709507708, 0.719508556, 0.729509167, 0.739510069, 0.749510694, 0.7595115, 0.769512097, 0.779512944, 0.789513569, 0.799514431, 0.809515028, 0.819515889, 0.829516514, 0.839517375, 0.849517986, 0.859518847, 0.869519444, 0.879520306, 0.889520972, 0.899521764, 0.909522375, 0.919523306, 0.929523847, 0.939524722, 0.949525319, 0.959526194, 0.969526792, 0.979527639, 0.989528264, 0.999529125, 1.009529819, 1.019530597] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:15.177" endtime="20201112 12:44:15.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.171" endtime="20201112 12:44:15.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.182" endtime="20201112 12:44:15.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.185" endtime="20201112 12:44:15.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.183" endtime="20201112 12:44:15.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.180" endtime="20201112 12:44:15.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.632" endtime="20201112 12:44:15.206"></status>
</kw>
<msg timestamp="20201112 12:44:15.206" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.214" endtime="20201112 12:44:17.325"></status>
</kw>
<msg timestamp="20201112 12:44:17.327" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 151081878, 'wakeups': [151091913, 151101911, 151111911, 151121911, 151...</msg>
<status status="PASS" starttime="20201112 12:44:15.213" endtime="20201112 12:44:17.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.333" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 151081878, 'wakeups': [151091913, 151101911, 151111911, 151121911, 151...</msg>
<status status="PASS" starttime="20201112 12:44:17.329" endtime="20201112 12:44:17.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.336" endtime="20201112 12:44:17.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.210" endtime="20201112 12:44:17.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.208" endtime="20201112 12:44:17.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.347" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 6, 'wakeups': [151091913, 151101911, 151111911, 151121911, 151131911, 151141911, 151151911, 151161911, 151171911, 151181911, 151191911, 151201911, 151211911, 1...</msg>
<status status="PASS" starttime="20201112 12:44:17.343" endtime="20201112 12:44:17.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.356" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:17.354" endtime="20201112 12:44:17.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.361" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:17.359" endtime="20201112 12:44:17.361"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.349" endtime="20201112 12:44:17.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.371" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:17.369" endtime="20201112 12:44:17.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.376" level="INFO">VALUE: 151081878</msg>
<status status="PASS" starttime="20201112 12:44:17.374" endtime="20201112 12:44:17.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.364" endtime="20201112 12:44:17.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.385" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:17.384" endtime="20201112 12:44:17.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.388" level="INFO">VALUE: [151091913, 151101911, 151111911, 151121911, 151131911, 151141911, 151151911, 151161911, 151171911, 151181911, 151191911, 151201911, 151211911, 151221911, 151231911, 151241911, 151251911, 151261911, 151271911, 151281911, 151291911, 151301911, 151311911, 151321911, 151331911, 151341911, 151351911, 151361911, 151371911, 151381911, 151391911, 151401911, 151411911, 151421911, 151431911, 151441911, 151451911, 151461911, 151471911, 151481911, 151491911, 151501911, 151511911, 151521911, 151531911, 151541911, 151551911, 151561911, 151571911, 151581911, 151591911, 151601911, 151611911, 151621911, 151631911, 151641911, 151651911, 151661911, 151671911, 151681911, 151691911, 151701911, 151711911, 151721911, 151731911, 151741911, 151751911, 151761911, 151771911, 151781911, 151791911, 151801911, 151811911, 151821911, 151831911, 151841911, 151851911, 151861911, 151871911, 151881911, 151891911, 151901911, 151911911, 151921911, 151931911, 151941911, 151951911, 151961911, 151971911, 151981911, 151991911, 152001911, 152011911, 152021911, 152031911, 152041911, 152051911, 152061911, 152071911, 152081911]</msg>
<status status="PASS" starttime="20201112 12:44:17.387" endtime="20201112 12:44:17.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.379" endtime="20201112 12:44:17.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.397" endtime="20201112 12:44:17.688"></status>
</kw>
<msg timestamp="20201112 12:44:17.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029410375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.395" endtime="20201112 12:44:17.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029410375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:17.691" endtime="20201112 12:44:17.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.699" endtime="20201112 12:44:17.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.391" endtime="20201112 12:44:17.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.390" endtime="20201112 12:44:17.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.724" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:17.702" endtime="20201112 12:44:17.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.729" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:17.728" endtime="20201112 12:44:17.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.731" level="INFO">VALUE: 0.019374903</msg>
<status status="PASS" starttime="20201112 12:44:17.730" endtime="20201112 12:44:17.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.725" endtime="20201112 12:44:17.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.736" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:17.735" endtime="20201112 12:44:17.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.738" level="INFO">VALUE: [0.029410375, 0.039409306, 0.049409847, 0.059410708, 0.069411333, 0.079412194, 0.089412806, 0.099413667, 0.109414278, 0.119415139, 0.129415778, 0.139416625, 0.14941725, 0.159418097, 0.169418722, 0.179419597, 0.189420194, 0.199421056, 0.209421694, 0.219422542, 0.229423153, 0.239424014, 0.249424639, 0.259425528, 0.269426125, 0.279426972, 0.289427597, 0.299428472, 0.309429083, 0.319429931, 0.329430569, 0.339431417, 0.349432028, 0.359432889, 0.369433583, 0.379434431, 0.389435, 0.399435861, 0.409436472, 0.419437347, 0.429437944, 0.439438833, 0.449439444, 0.459440292, 0.469440972, 0.479441764, 0.489442389, 0.499443236, 0.509443847, 0.519444708, 0.529445375, 0.539446181, 0.549446778, 0.559447639, 0.56944825, 0.579449097, 0.589449736, 0.599450569, 0.609451181, 0.619452042, 0.629452667, 0.6394535, 0.649454111, 0.659454986, 0.669455583, 0.679456458, 0.689457056, 0.699457917, 0.709458542, 0.719459389, 0.72946, 0.739460861, 0.749461472, 0.759462319, 0.769462944, 0.779463792, 0.789464403, 0.799465278, 0.809465875, 0.819466736, 0.829467375, 0.839468222, 0.849468819, 0.859469681, 0.869470292, 0.879471153, 0.889471764, 0.899472611, 0.909473236, 0.919474097, 0.929474708, 0.939475569, 0.949476181, 0.959477069, 0.969477653, 0.9794785, 0.989479125, 0.999480056, 1.009480611, 1.019481444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:17.737" endtime="20201112 12:44:17.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.732" endtime="20201112 12:44:17.739"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.741" endtime="20201112 12:44:17.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:17.744" endtime="20201112 12:44:17.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.743" endtime="20201112 12:44:17.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.739" endtime="20201112 12:44:17.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.207" endtime="20201112 12:44:17.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.067" endtime="20201112 12:44:17.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.066" endtime="20201112 12:44:17.771"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:17.774" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.783" endtime="20201112 12:44:19.893"></status>
</kw>
<msg timestamp="20201112 12:44:19.894" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 153650106, 'wakeups': [153660149, 153670147, 153680146, 153690146, 153...</msg>
<status status="PASS" starttime="20201112 12:44:17.781" endtime="20201112 12:44:19.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.900" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 153650106, 'wakeups': [153660149, 153670147, 153680146, 153690146, 153...</msg>
<status status="PASS" starttime="20201112 12:44:19.896" endtime="20201112 12:44:19.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.902" endtime="20201112 12:44:19.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.778" endtime="20201112 12:44:19.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.776" endtime="20201112 12:44:19.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:19.913" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [153660149, 153670147, 153680146, 153690146, 153700146, 153710146, 153720146, 153730146, 153740146, 153750146, 153760146, 153770146, 153780146, 1...</msg>
<status status="PASS" starttime="20201112 12:44:19.909" endtime="20201112 12:44:19.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.921" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:19.919" endtime="20201112 12:44:19.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.925" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:19.923" endtime="20201112 12:44:19.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.915" endtime="20201112 12:44:19.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.935" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:19.933" endtime="20201112 12:44:19.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.939" level="INFO">VALUE: 153650106</msg>
<status status="PASS" starttime="20201112 12:44:19.937" endtime="20201112 12:44:19.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.928" endtime="20201112 12:44:19.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.949" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:19.947" endtime="20201112 12:44:19.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:19.954" level="INFO">VALUE: [153660149, 153670147, 153680146, 153690146, 153700146, 153710146, 153720146, 153730146, 153740146, 153750146, 153760146, 153770146, 153780146, 153790146, 153800146, 153810146, 153820146, 153830146, 153840146, 153850146, 153860146, 153870146, 153880146, 153890146, 153900146, 153910146, 153920146, 153930146, 153940146, 153950146, 153960146, 153970146, 153980146, 153990146, 154000146, 154010146, 154020146, 154030146, 154040146, 154050146, 154060146, 154070146, 154080146, 154090146, 154100146, 154110146, 154120146, 154130146, 154140146, 154150146, 154160146, 154170146, 154180146, 154190146, 154200146, 154210146, 154220146, 154230146, 154240146, 154250146, 154260146, 154270146, 154280146, 154290146, 154300146, 154310146, 154320146, 154330146, 154340146, 154350146, 154360146, 154370146, 154380146, 154390146, 154400146, 154410146, 154420146, 154430146, 154440146, 154450146, 154460146, 154470146, 154480146, 154490146, 154500146, 154510146, 154520146, 154530146, 154540146, 154550146, 154560146, 154570146, 154580146, 154590146, 154600146, 154610146, 154620146, 154630146, 154640146, 154650146]</msg>
<status status="PASS" starttime="20201112 12:44:19.952" endtime="20201112 12:44:19.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.942" endtime="20201112 12:44:19.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:19.970" endtime="20201112 12:44:20.262"></status>
</kw>
<msg timestamp="20201112 12:44:20.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028298583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038342056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:19.967" endtime="20201112 12:44:20.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028298583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038342056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.266" endtime="20201112 12:44:20.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.273" endtime="20201112 12:44:20.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.960" endtime="20201112 12:44:20.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:19.957" endtime="20201112 12:44:20.276"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.299" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:20.277" endtime="20201112 12:44:20.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.304" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:20.303" endtime="20201112 12:44:20.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.306" level="INFO">VALUE: 0.028298583</msg>
<status status="PASS" starttime="20201112 12:44:20.305" endtime="20201112 12:44:20.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.300" endtime="20201112 12:44:20.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.311" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:20.310" endtime="20201112 12:44:20.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.313" level="INFO">VALUE: [0.038342056, 0.048340903, 0.058340431, 0.068341306, 0.078341917, 0.088342778, 0.098343417, 0.10834425, 0.118344889, 0.128345722, 0.138346347, 0.148347264, 0.158347847, 0.168348681, 0.178349306, 0.188350167, 0.198350792, 0.208351639, 0.218352278, 0.228353125, 0.238353736, 0.248354597, 0.258355292, 0.268356069, 0.278356694, 0.288357611, 0.298358194, 0.308359111, 0.318359722, 0.328360514, 0.338361125, 0.348362056, 0.358362611, 0.368363472, 0.378364097, 0.388364958, 0.398365569, 0.408366431, 0.418367069, 0.428367917, 0.438368556, 0.448369444, 0.458370028, 0.468370875, 0.478371486, 0.488372347, 0.498372986, 0.508373833, 0.518374444, 0.528375292, 0.538375889, 0.54837675, 0.558377375, 0.568378222, 0.578378819, 0.588379681, 0.598380306, 0.608381139, 0.618381778, 0.628382611, 0.638383222, 0.648384097, 0.658384694, 0.668385542, 0.678386153, 0.688387014, 0.698387653, 0.708388486, 0.718389097, 0.728389944, 0.738390556, 0.748391431, 0.758392028, 0.768392889, 0.778393514, 0.788394347, 0.798394972, 0.808395819, 0.818396431, 0.828397361, 0.838397917, 0.848398778, 0.858399389, 0.868400222, 0.878400833, 0.888401722, 0.898402306, 0.908403194, 0.918403792, 0.928404639, 0.93840525, 0.948406097, 0.958406722, 0.968407569, 0.978408181, 0.988409042, 0.998409681, 1.008410528, 1.018411125, 1.028411986] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:20.312" endtime="20201112 12:44:20.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.307" endtime="20201112 12:44:20.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.316" endtime="20201112 12:44:20.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.320" endtime="20201112 12:44:20.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.318" endtime="20201112 12:44:20.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.315" endtime="20201112 12:44:20.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.775" endtime="20201112 12:44:20.340"></status>
</kw>
<msg timestamp="20201112 12:44:20.340" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.348" endtime="20201112 12:44:22.459"></status>
</kw>
<msg timestamp="20201112 12:44:22.460" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 156215717, 'wakeups': [156225759, 156235758, 156245757, 156255757, 156...</msg>
<status status="PASS" starttime="20201112 12:44:20.347" endtime="20201112 12:44:22.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.467" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 156215717, 'wakeups': [156225759, 156235758, 156245757, 156255757, 156...</msg>
<status status="PASS" starttime="20201112 12:44:22.463" endtime="20201112 12:44:22.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.469" endtime="20201112 12:44:22.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.344" endtime="20201112 12:44:22.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.342" endtime="20201112 12:44:22.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.480" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [156225759, 156235758, 156245757, 156255757, 156265757, 156275757, 156285757, 156295757, 156305757, 156315757, 156325757, 156335757, 156345757, 1...</msg>
<status status="PASS" starttime="20201112 12:44:22.476" endtime="20201112 12:44:22.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.488" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:22.486" endtime="20201112 12:44:22.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.492" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:22.490" endtime="20201112 12:44:22.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.481" endtime="20201112 12:44:22.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.504" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:22.502" endtime="20201112 12:44:22.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.508" level="INFO">VALUE: 156215717</msg>
<status status="PASS" starttime="20201112 12:44:22.506" endtime="20201112 12:44:22.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.497" endtime="20201112 12:44:22.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.516" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:22.515" endtime="20201112 12:44:22.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.518" level="INFO">VALUE: [156225759, 156235758, 156245757, 156255757, 156265757, 156275757, 156285757, 156295757, 156305757, 156315757, 156325757, 156335757, 156345757, 156355757, 156365757, 156375757, 156385757, 156395757, 156405757, 156415757, 156425757, 156435757, 156445757, 156455757, 156465757, 156475757, 156485757, 156495757, 156505757, 156515757, 156525757, 156535757, 156545757, 156555757, 156565757, 156575757, 156585757, 156595757, 156605757, 156615757, 156625757, 156635757, 156645757, 156655757, 156665757, 156675757, 156685757, 156695757, 156705757, 156715757, 156725757, 156735757, 156745757, 156755757, 156765757, 156775757, 156785757, 156795757, 156805757, 156815757, 156825757, 156835757, 156845757, 156855757, 156865757, 156875757, 156885757, 156895757, 156905757, 156915757, 156925757, 156935757, 156945757, 156955757, 156965757, 156975757, 156985757, 156995757, 157005757, 157015757, 157025757, 157035757, 157045757, 157055757, 157065757, 157075757, 157085757, 157095757, 157105757, 157115757, 157125757, 157135757, 157145757, 157155757, 157165757, 157175757, 157185757, 157195757, 157205757, 157215757]</msg>
<status status="PASS" starttime="20201112 12:44:22.517" endtime="20201112 12:44:22.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.511" endtime="20201112 12:44:22.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.525" endtime="20201112 12:44:22.816"></status>
</kw>
<msg timestamp="20201112 12:44:22.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028807861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.523" endtime="20201112 12:44:22.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018765167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028807861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:22.820" endtime="20201112 12:44:22.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.828" endtime="20201112 12:44:22.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.521" endtime="20201112 12:44:22.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.519" endtime="20201112 12:44:22.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:22.854" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:22.831" endtime="20201112 12:44:22.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.859" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:22.858" endtime="20201112 12:44:22.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.861" level="INFO">VALUE: 0.018765167</msg>
<status status="PASS" starttime="20201112 12:44:22.860" endtime="20201112 12:44:22.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.855" endtime="20201112 12:44:22.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.867" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:22.866" endtime="20201112 12:44:22.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:22.869" level="INFO">VALUE: [0.028807861, 0.038807806, 0.048807361, 0.058808208, 0.068808833, 0.078809681, 0.088810319, 0.098811153, 0.108811778, 0.118812639, 0.128813292, 0.138814181, 0.148814722, 0.158815611, 0.168816208, 0.178817125, 0.188817708, 0.198818597, 0.208819153, 0.218820028, 0.228820639, 0.2388215, 0.248822111, 0.258822972, 0.268823597, 0.278824458, 0.288825069, 0.298825931, 0.308826542, 0.318827403, 0.328828028, 0.338828958, 0.348829528, 0.358830375, 0.368830986, 0.378831889, 0.388832472, 0.398833319, 0.408833958, 0.418834806, 0.428835417, 0.438836278, 0.448836917, 0.458837764, 0.468838403, 0.478839236, 0.488839875, 0.498840722, 0.508841333, 0.518842194, 0.528842819, 0.538843681, 0.548844292, 0.558845139, 0.568845778, 0.578846611, 0.588847222, 0.598848083, 0.608848694, 0.618849542, 0.628850194, 0.638851, 0.648851625, 0.658852486, 0.668853111, 0.678853944, 0.688854542, 0.698855417, 0.708856014, 0.718856861, 0.728857472, 0.738858333, 0.748859, 0.758859806, 0.768860417, 0.778861264, 0.788861875, 0.798862736, 0.808863375, 0.818864208, 0.828864819, 0.838865708, 0.848866278, 0.858867139, 0.868867736, 0.878868597, 0.888869222, 0.898870069, 0.908870681, 0.918871542, 0.928872208, 0.938873, 0.948873611, 0.958874472, 0.968875083, 0.978875972, 0.988876556, 0.998877403, 1.008878014, 1.018878875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:22.868" endtime="20201112 12:44:22.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.863" endtime="20201112 12:44:22.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.872" endtime="20201112 12:44:22.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:22.875" endtime="20201112 12:44:22.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.873" endtime="20201112 12:44:22.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.870" endtime="20201112 12:44:22.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.341" endtime="20201112 12:44:22.896"></status>
</kw>
<msg timestamp="20201112 12:44:22.896" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:22.904" endtime="20201112 12:44:25.014"></status>
</kw>
<msg timestamp="20201112 12:44:25.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 158771318, 'wakeups': [158781360, 158791359, 158801358, 158811358, 158...</msg>
<status status="PASS" starttime="20201112 12:44:22.902" endtime="20201112 12:44:25.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.021" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 158771318, 'wakeups': [158781360, 158791359, 158801358, 158811358, 158...</msg>
<status status="PASS" starttime="20201112 12:44:25.018" endtime="20201112 12:44:25.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.023" endtime="20201112 12:44:25.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.900" endtime="20201112 12:44:25.028"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.898" endtime="20201112 12:44:25.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.034" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 7, 'wakeups': [158781360, 158791359, 158801358, 158811358, 158821358, 158831358, 158841358, 158851358, 158861358, 158871358, 158881358, 158891358, 158901358, 1...</msg>
<status status="PASS" starttime="20201112 12:44:25.030" endtime="20201112 12:44:25.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.042" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:25.040" endtime="20201112 12:44:25.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.047" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:25.045" endtime="20201112 12:44:25.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.036" endtime="20201112 12:44:25.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.057" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:25.055" endtime="20201112 12:44:25.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.061" level="INFO">VALUE: 158771318</msg>
<status status="PASS" starttime="20201112 12:44:25.060" endtime="20201112 12:44:25.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.050" endtime="20201112 12:44:25.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.071" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:25.069" endtime="20201112 12:44:25.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.073" level="INFO">VALUE: [158781360, 158791359, 158801358, 158811358, 158821358, 158831358, 158841358, 158851358, 158861358, 158871358, 158881358, 158891358, 158901358, 158911358, 158921358, 158931358, 158941358, 158951358, 158961358, 158971358, 158981358, 158991358, 159001358, 159011358, 159021358, 159031358, 159041358, 159051358, 159061358, 159071358, 159081358, 159091358, 159101358, 159111358, 159121358, 159131358, 159141358, 159151358, 159161358, 159171358, 159181358, 159191358, 159201358, 159211358, 159221358, 159231358, 159241358, 159251358, 159261358, 159271358, 159281358, 159291358, 159301358, 159311358, 159321358, 159331358, 159341358, 159351358, 159361358, 159371358, 159381358, 159391358, 159401358, 159411358, 159421358, 159431358, 159441358, 159451358, 159461358, 159471358, 159481358, 159491358, 159501358, 159511358, 159521358, 159531358, 159541358, 159551358, 159561358, 159571358, 159581358, 159591358, 159601358, 159611358, 159621358, 159631358, 159641358, 159651358, 159661358, 159671358, 159681358, 159691358, 159701358, 159711358, 159721358, 159731358, 159741358, 159751358, 159761358, 159771358]</msg>
<status status="PASS" starttime="20201112 12:44:25.072" endtime="20201112 12:44:25.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.064" endtime="20201112 12:44:25.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.081" endtime="20201112 12:44:25.373"></status>
</kw>
<msg timestamp="20201112 12:44:25.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018875625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028918778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.080" endtime="20201112 12:44:25.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018875625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028918778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.377" endtime="20201112 12:44:25.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.384" endtime="20201112 12:44:25.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.076" endtime="20201112 12:44:25.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.074" endtime="20201112 12:44:25.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.410" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:25.387" endtime="20201112 12:44:25.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.414" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:25.413" endtime="20201112 12:44:25.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.416" level="INFO">VALUE: 0.018875625</msg>
<status status="PASS" starttime="20201112 12:44:25.415" endtime="20201112 12:44:25.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.410" endtime="20201112 12:44:25.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.421" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:25.420" endtime="20201112 12:44:25.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.423" level="INFO">VALUE: [0.028918778, 0.038918625, 0.048918153, 0.058919014, 0.068919625, 0.078920472, 0.088921097, 0.098921972, 0.108922569, 0.118923431, 0.128924042, 0.138924917, 0.148925528, 0.158926389, 0.168927014, 0.178927861, 0.188928486, 0.198929333, 0.208929958, 0.218930819, 0.228931431, 0.238932292, 0.248932903, 0.258933778, 0.268934389, 0.278935264, 0.288935875, 0.298936736, 0.308937347, 0.318938194, 0.328938819, 0.338939681, 0.348940292, 0.358941167, 0.368941778, 0.378942639, 0.38894325, 0.398944111, 0.40894475, 0.418945625, 0.428946236, 0.438947097, 0.448947736, 0.458948556, 0.468949167, 0.478950028, 0.488950653, 0.498951514, 0.508952111, 0.518952972, 0.528953583, 0.538954444, 0.548955056, 0.558955903, 0.568956528, 0.578957375, 0.588957972, 0.598958833, 0.608959458, 0.618960292, 0.628960917, 0.638961764, 0.648962375, 0.658963236, 0.668963861, 0.678964708, 0.688965306, 0.698966181, 0.708966792, 0.718967639, 0.72896825, 0.738969111, 0.748969722, 0.758970569, 0.768971181, 0.778972028, 0.788972639, 0.798973514, 0.808974111, 0.818974958, 0.828975583, 0.838976431, 0.848977056, 0.858977903, 0.868978514, 0.878979375, 0.888979986, 0.898980833, 0.908981458, 0.918982347, 0.928982931, 0.938983778, 0.948984389, 0.95898525, 0.968985847, 0.978986708, 0.988987347, 0.998988181, 1.008988792, 1.018989653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:25.422" endtime="20201112 12:44:25.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.417" endtime="20201112 12:44:25.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.427" endtime="20201112 12:44:25.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.430" endtime="20201112 12:44:25.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.429" endtime="20201112 12:44:25.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.425" endtime="20201112 12:44:25.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:22.897" endtime="20201112 12:44:25.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.773" endtime="20201112 12:44:25.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.772" endtime="20201112 12:44:25.451"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:25.454" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.462" endtime="20201112 12:44:27.572"></status>
</kw>
<msg timestamp="20201112 12:44:27.573" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 161329796, 'wakeups': [161339845, 161349843, 161359843, 161369843, 161...</msg>
<status status="PASS" starttime="20201112 12:44:25.461" endtime="20201112 12:44:27.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.579" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 161329796, 'wakeups': [161339845, 161349843, 161359843, 161369843, 161...</msg>
<status status="PASS" starttime="20201112 12:44:27.576" endtime="20201112 12:44:27.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.582" endtime="20201112 12:44:27.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.458" endtime="20201112 12:44:27.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.456" endtime="20201112 12:44:27.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.592" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [161339845, 161349843, 161359843, 161369843, 161379843, 161389843, 161399843, 161409843, 161419843, 161429843, 161439843, 161449843, 161459843, 1...</msg>
<status status="PASS" starttime="20201112 12:44:27.588" endtime="20201112 12:44:27.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.601" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:27.599" endtime="20201112 12:44:27.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.605" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:27.603" endtime="20201112 12:44:27.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.594" endtime="20201112 12:44:27.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.615" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:27.613" endtime="20201112 12:44:27.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.619" level="INFO">VALUE: 161329796</msg>
<status status="PASS" starttime="20201112 12:44:27.617" endtime="20201112 12:44:27.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.608" endtime="20201112 12:44:27.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.629" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:27.627" endtime="20201112 12:44:27.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.633" level="INFO">VALUE: [161339845, 161349843, 161359843, 161369843, 161379843, 161389843, 161399843, 161409843, 161419843, 161429843, 161439843, 161449843, 161459843, 161469843, 161479843, 161489843, 161499843, 161509843, 161519843, 161529843, 161539843, 161549843, 161559843, 161569843, 161579843, 161589843, 161599843, 161609843, 161619843, 161629843, 161639843, 161649843, 161659843, 161669843, 161679843, 161689843, 161699843, 161709843, 161719843, 161729843, 161739843, 161749843, 161759843, 161769843, 161779843, 161789843, 161799843, 161809843, 161819843, 161829843, 161839843, 161849843, 161859843, 161869843, 161879843, 161889843, 161899843, 161909843, 161919843, 161929843, 161939843, 161949843, 161959843, 161969843, 161979843, 161989843, 161999843, 162009843, 162019843, 162029843, 162039843, 162049843, 162059843, 162069843, 162079843, 162089843, 162099843, 162109843, 162119843, 162129843, 162139843, 162149843, 162159843, 162169843, 162179843, 162189843, 162199843, 162209843, 162219843, 162229843, 162239843, 162249843, 162259843, 162269843, 162279843, 162289843, 162299843, 162309843, 162319843, 162329843]</msg>
<status status="PASS" starttime="20201112 12:44:27.631" endtime="20201112 12:44:27.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.622" endtime="20201112 12:44:27.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.641" endtime="20201112 12:44:27.932"></status>
</kw>
<msg timestamp="20201112 12:44:27.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032372153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.639" endtime="20201112 12:44:27.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022321694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032372153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:27.936" endtime="20201112 12:44:27.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.943" endtime="20201112 12:44:27.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.637" endtime="20201112 12:44:27.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.635" endtime="20201112 12:44:27.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:27.970" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:27.947" endtime="20201112 12:44:27.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.975" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:27.974" endtime="20201112 12:44:27.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.977" level="INFO">VALUE: 0.022321694</msg>
<status status="PASS" starttime="20201112 12:44:27.976" endtime="20201112 12:44:27.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.971" endtime="20201112 12:44:27.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.982" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:27.981" endtime="20201112 12:44:27.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:27.984" level="INFO">VALUE: [0.032372153, 0.042371014, 0.052371542, 0.062372403, 0.072373028, 0.082373931, 0.092374514, 0.102375361, 0.112375986, 0.122376833, 0.132377458, 0.142378319, 0.152378931, 0.162379792, 0.172380417, 0.182381278, 0.192381889, 0.202382764, 0.212383389, 0.222384236, 0.232384847, 0.242385722, 0.252386333, 0.262387208, 0.272387847, 0.282388667, 0.292389306, 0.302390167, 0.312390778, 0.322391653, 0.33239225, 0.342393125, 0.35239375, 0.362394597, 0.372395208, 0.382396069, 0.392396708, 0.402397625, 0.412398167, 0.422399028, 0.432399639, 0.442400542, 0.452401111, 0.462401972, 0.472402625, 0.482403444, 0.492404056, 0.502404903, 0.5124055, 0.522406361, 0.532406986, 0.542407833, 0.552408444, 0.562409292, 0.572409917, 0.582410806, 0.592411389, 0.602412222, 0.612412833, 0.622413694, 0.632414306, 0.642415167, 0.652415778, 0.662416639, 0.672417319, 0.682418097, 0.692418722, 0.702419583, 0.712420181, 0.722421028, 0.732421639, 0.7424225, 0.752423125, 0.762423986, 0.772424639, 0.782425444, 0.792426056, 0.802426972, 0.812427514, 0.822428375, 0.832428986, 0.842429861, 0.852430458, 0.862431319, 0.872431931, 0.882432778, 0.892433403, 0.90243425, 0.912434861, 0.922435722, 0.932436389, 0.942437194, 0.952437875, 0.962438667, 0.972439278, 0.982440139, 0.992440736, 1.002441597, 1.012442222, 1.022443083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:27.983" endtime="20201112 12:44:27.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.978" endtime="20201112 12:44:27.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:27.987" endtime="20201112 12:44:27.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:27.991" endtime="20201112 12:44:28.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.989" endtime="20201112 12:44:28.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:27.986" endtime="20201112 12:44:28.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.454" endtime="20201112 12:44:28.011"></status>
</kw>
<msg timestamp="20201112 12:44:28.012" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.024" endtime="20201112 12:44:30.134"></status>
</kw>
<msg timestamp="20201112 12:44:30.135" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 163891151, 'wakeups': [163901200, 163911198, 163921198, 163931198, 163...</msg>
<status status="PASS" starttime="20201112 12:44:28.018" endtime="20201112 12:44:30.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.141" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 163891151, 'wakeups': [163901200, 163911198, 163921198, 163931198, 163...</msg>
<status status="PASS" starttime="20201112 12:44:30.137" endtime="20201112 12:44:30.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.143" endtime="20201112 12:44:30.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.015" endtime="20201112 12:44:30.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.013" endtime="20201112 12:44:30.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.154" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [163901200, 163911198, 163921198, 163931198, 163941198, 163951198, 163961198, 163971198, 163981198, 163991198, 164001198, 164011198, 164021198, 1...</msg>
<status status="PASS" starttime="20201112 12:44:30.150" endtime="20201112 12:44:30.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.164" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:30.162" endtime="20201112 12:44:30.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.168" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:30.166" endtime="20201112 12:44:30.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.156" endtime="20201112 12:44:30.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.178" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:30.176" endtime="20201112 12:44:30.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.182" level="INFO">VALUE: 163891151</msg>
<status status="PASS" starttime="20201112 12:44:30.180" endtime="20201112 12:44:30.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.171" endtime="20201112 12:44:30.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.189" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:30.188" endtime="20201112 12:44:30.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.192" level="INFO">VALUE: [163901200, 163911198, 163921198, 163931198, 163941198, 163951198, 163961198, 163971198, 163981198, 163991198, 164001198, 164011198, 164021198, 164031198, 164041198, 164051198, 164061198, 164071198, 164081198, 164091198, 164101198, 164111198, 164121198, 164131198, 164141198, 164151198, 164161198, 164171198, 164181198, 164191198, 164201198, 164211198, 164221198, 164231198, 164241198, 164251198, 164261198, 164271198, 164281198, 164291198, 164301198, 164311198, 164321198, 164331198, 164341198, 164351198, 164361198, 164371198, 164381198, 164391198, 164401198, 164411198, 164421198, 164431198, 164441198, 164451198, 164461198, 164471198, 164481198, 164491198, 164501198, 164511198, 164521198, 164531198, 164541198, 164551198, 164561198, 164571198, 164581198, 164591198, 164601198, 164611198, 164621198, 164631198, 164641198, 164651198, 164661198, 164671198, 164681198, 164691198, 164701198, 164711198, 164721198, 164731198, 164741198, 164751198, 164761198, 164771198, 164781198, 164791198, 164801198, 164811198, 164821198, 164831198, 164841198, 164851198, 164861198, 164871198, 164881198, 164891198]</msg>
<status status="PASS" starttime="20201112 12:44:30.190" endtime="20201112 12:44:30.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.185" endtime="20201112 12:44:30.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.199" endtime="20201112 12:44:30.489"></status>
</kw>
<msg timestamp="20201112 12:44:30.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023182042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033231931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.197" endtime="20201112 12:44:30.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023182042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033231931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.493" endtime="20201112 12:44:30.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.501" endtime="20201112 12:44:30.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.195" endtime="20201112 12:44:30.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.193" endtime="20201112 12:44:30.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.527" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:30.504" endtime="20201112 12:44:30.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.532" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:30.531" endtime="20201112 12:44:30.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.533" level="INFO">VALUE: 0.023182042</msg>
<status status="PASS" starttime="20201112 12:44:30.533" endtime="20201112 12:44:30.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.528" endtime="20201112 12:44:30.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.539" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:30.538" endtime="20201112 12:44:30.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.541" level="INFO">VALUE: [0.033231931, 0.043230972, 0.053231514, 0.063232375, 0.073233, 0.083233833, 0.093234458, 0.103235319, 0.113235931, 0.123236792, 0.133237417, 0.143238278, 0.153238931, 0.163239778, 0.173240361, 0.183241236, 0.193241847, 0.203242708, 0.213243319, 0.223244181, 0.233244806, 0.243245681, 0.253246278, 0.263247139, 0.273247778, 0.283248625, 0.29324925, 0.303250097, 0.313250722, 0.323251583, 0.33325225, 0.343253097, 0.353253681, 0.363254625, 0.373255153, 0.383256014, 0.393256708, 0.4032575, 0.413258139, 0.423258972, 0.433259597, 0.443260458, 0.453261083, 0.463261931, 0.473262625, 0.483263417, 0.493264042, 0.503264917, 0.513265514, 0.523266375, 0.533266986, 0.543267833, 0.553268458, 0.563269306, 0.573269931, 0.583270778, 0.593271389, 0.603272236, 0.613272847, 0.623273736, 0.633274319, 0.643275167, 0.653275778, 0.663276639, 0.673277264, 0.683278111, 0.693278722, 0.703279611, 0.713280208, 0.723281125, 0.733281653, 0.7432825, 0.753283139, 0.763283972, 0.773284583, 0.783285444, 0.793286056, 0.803286917, 0.813287528, 0.823288417, 0.833288986, 0.843289861, 0.853290458, 0.863291319, 0.873291931, 0.883292778, 0.893293403, 0.90329425, 0.913294861, 0.923295736, 0.933296333, 0.943297194, 0.953297806, 0.963298653, 0.973299278, 0.983300125, 0.993300736, 1.003301597, 1.013302264, 1.023303069] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:30.540" endtime="20201112 12:44:30.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.535" endtime="20201112 12:44:30.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.544" endtime="20201112 12:44:30.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:30.547" endtime="20201112 12:44:30.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.546" endtime="20201112 12:44:30.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.542" endtime="20201112 12:44:30.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.012" endtime="20201112 12:44:30.568"></status>
</kw>
<msg timestamp="20201112 12:44:30.568" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.576" endtime="20201112 12:44:32.687"></status>
</kw>
<msg timestamp="20201112 12:44:32.688" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 166443380, 'wakeups': [166453430, 166463427, 166473427, 166483427, 166...</msg>
<status status="PASS" starttime="20201112 12:44:30.574" endtime="20201112 12:44:32.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.694" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 166443380, 'wakeups': [166453430, 166463427, 166473427, 166483427, 166...</msg>
<status status="PASS" starttime="20201112 12:44:32.690" endtime="20201112 12:44:32.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.696" endtime="20201112 12:44:32.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.572" endtime="20201112 12:44:32.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.570" endtime="20201112 12:44:32.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:32.708" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 8, 'wakeups': [166453430, 166463427, 166473427, 166483427, 166493427, 166503427, 166513427, 166523427, 166533427, 166543427, 166553427, 166563427, 166573427, 1...</msg>
<status status="PASS" starttime="20201112 12:44:32.704" endtime="20201112 12:44:32.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.717" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:32.715" endtime="20201112 12:44:32.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.721" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:32.719" endtime="20201112 12:44:32.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.710" endtime="20201112 12:44:32.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.729" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:32.728" endtime="20201112 12:44:32.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.731" level="INFO">VALUE: 166443380</msg>
<status status="PASS" starttime="20201112 12:44:32.730" endtime="20201112 12:44:32.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.724" endtime="20201112 12:44:32.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.737" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:32.734" endtime="20201112 12:44:32.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:32.739" level="INFO">VALUE: [166453430, 166463427, 166473427, 166483427, 166493427, 166503427, 166513427, 166523427, 166533427, 166543427, 166553427, 166563427, 166573427, 166583427, 166593427, 166603427, 166613427, 166623427, 166633427, 166643427, 166653427, 166663427, 166673427, 166683427, 166693427, 166703427, 166713427, 166723427, 166733427, 166743427, 166753427, 166763427, 166773427, 166783427, 166793427, 166803427, 166813427, 166823427, 166833427, 166843427, 166853427, 166863427, 166873427, 166883427, 166893427, 166903427, 166913427, 166923427, 166933427, 166943427, 166953427, 166963427, 166973427, 166983427, 166993427, 167003427, 167013427, 167023427, 167033427, 167043427, 167053427, 167063427, 167073427, 167083427, 167093427, 167103427, 167113427, 167123427, 167133427, 167143427, 167153427, 167163427, 167173427, 167183427, 167193427, 167203427, 167213427, 167223427, 167233427, 167243427, 167253427, 167263427, 167273427, 167283427, 167293427, 167303427, 167313427, 167323427, 167333427, 167343427, 167353427, 167363427, 167373427, 167383427, 167393427, 167403427, 167413427, 167423427, 167433427, 167443427]</msg>
<status status="PASS" starttime="20201112 12:44:32.738" endtime="20201112 12:44:32.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.732" endtime="20201112 12:44:32.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:32.746" endtime="20201112 12:44:33.038"></status>
</kw>
<msg timestamp="20201112 12:44:33.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018761375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028812111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:32.744" endtime="20201112 12:44:33.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018761375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028812111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.041" endtime="20201112 12:44:33.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.049" endtime="20201112 12:44:33.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.742" endtime="20201112 12:44:33.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:32.740" endtime="20201112 12:44:33.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.075" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:33.052" endtime="20201112 12:44:33.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.079" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:33.078" endtime="20201112 12:44:33.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.081" level="INFO">VALUE: 0.018761375</msg>
<status status="PASS" starttime="20201112 12:44:33.080" endtime="20201112 12:44:33.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.076" endtime="20201112 12:44:33.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.091" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:33.085" endtime="20201112 12:44:33.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.094" level="INFO">VALUE: [0.028812111, 0.038809972, 0.048810514, 0.058811389, 0.068811986, 0.078812861, 0.088813528, 0.098814333, 0.108814944, 0.118815806, 0.128816444, 0.138817306, 0.148817903, 0.158818764, 0.168819389, 0.17882025, 0.188820861, 0.198821722, 0.208822347, 0.218823208, 0.228823819, 0.238824681, 0.248825306, 0.258826153, 0.268826792, 0.278827639, 0.288828264, 0.298829125, 0.30882975, 0.318830583, 0.328831194, 0.338832069, 0.348832667, 0.358833514, 0.368834139, 0.378835028, 0.388835597, 0.398836444, 0.408837069, 0.418837944, 0.428838542, 0.438839389, 0.44884, 0.458840847, 0.468841458, 0.478842319, 0.488842944, 0.498843792, 0.508844417, 0.518845264, 0.528845861, 0.538846736, 0.548847333, 0.558848181, 0.568848806, 0.578849653, 0.588850278, 0.598851125, 0.608851736, 0.618852583, 0.628853222, 0.638854056, 0.648854667, 0.658855542, 0.668856139, 0.678857, 0.688857611, 0.698858472, 0.708859083, 0.718859931, 0.728860542, 0.738861417, 0.748862028, 0.758862875, 0.7688635, 0.778864333, 0.788864972, 0.798865806, 0.808866417, 0.818867278, 0.828867903, 0.83886875, 0.848869361, 0.858870208, 0.868870833, 0.878871681, 0.888872292, 0.898873167, 0.908873764, 0.918874625, 0.928875236, 0.938876097, 0.948876708, 0.958877583, 0.968878181, 0.978879028, 0.988879639, 0.9988805, 1.008881125, 1.018882014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:33.093" endtime="20201112 12:44:33.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.082" endtime="20201112 12:44:33.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.097" endtime="20201112 12:44:33.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:33.101" endtime="20201112 12:44:33.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.099" endtime="20201112 12:44:33.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.095" endtime="20201112 12:44:33.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.569" endtime="20201112 12:44:33.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.452" endtime="20201112 12:44:33.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.451" endtime="20201112 12:44:33.122"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:33.125" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.132" endtime="20201112 12:44:35.242"></status>
</kw>
<msg timestamp="20201112 12:44:35.244" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 168999865, 'wakeups': [169009921, 169019919, 169029919, 169039919, 169...</msg>
<status status="PASS" starttime="20201112 12:44:33.131" endtime="20201112 12:44:35.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.249" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 168999865, 'wakeups': [169009921, 169019919, 169029919, 169039919, 169...</msg>
<status status="PASS" starttime="20201112 12:44:35.246" endtime="20201112 12:44:35.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.252" endtime="20201112 12:44:35.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.128" endtime="20201112 12:44:35.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.126" endtime="20201112 12:44:35.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.262" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [169009921, 169019919, 169029919, 169039919, 169049919, 169059919, 169069919, 169079919, 169089919, 169099919, 169109919, 169119919, 169129919, 1...</msg>
<status status="PASS" starttime="20201112 12:44:35.258" endtime="20201112 12:44:35.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.271" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:35.269" endtime="20201112 12:44:35.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.275" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:35.273" endtime="20201112 12:44:35.276"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.264" endtime="20201112 12:44:35.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.285" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:35.283" endtime="20201112 12:44:35.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.288" level="INFO">VALUE: 168999865</msg>
<status status="PASS" starttime="20201112 12:44:35.287" endtime="20201112 12:44:35.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.278" endtime="20201112 12:44:35.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.293" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:35.292" endtime="20201112 12:44:35.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.295" level="INFO">VALUE: [169009921, 169019919, 169029919, 169039919, 169049919, 169059919, 169069919, 169079919, 169089919, 169099919, 169109919, 169119919, 169129919, 169139919, 169149919, 169159919, 169169919, 169179919, 169189919, 169199919, 169209919, 169219919, 169229919, 169239919, 169249919, 169259919, 169269919, 169279919, 169289919, 169299919, 169309919, 169319919, 169329919, 169339919, 169349919, 169359919, 169369919, 169379919, 169389919, 169399919, 169409919, 169419919, 169429919, 169439919, 169449919, 169459919, 169469919, 169479919, 169489919, 169499919, 169509919, 169519919, 169529919, 169539919, 169549919, 169559919, 169569919, 169579919, 169589919, 169599919, 169609919, 169619919, 169629919, 169639919, 169649919, 169659919, 169669919, 169679919, 169689919, 169699919, 169709919, 169719919, 169729919, 169739919, 169749919, 169759919, 169769919, 169779919, 169789919, 169799919, 169809919, 169819919, 169829919, 169839919, 169849919, 169859919, 169869919, 169879919, 169889919, 169899919, 169909919, 169919919, 169929919, 169939919, 169949919, 169959919, 169969919, 169979919, 169989919, 169999919]</msg>
<status status="PASS" starttime="20201112 12:44:35.294" endtime="20201112 12:44:35.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.290" endtime="20201112 12:44:35.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.302" endtime="20201112 12:44:35.595"></status>
</kw>
<msg timestamp="20201112 12:44:35.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02152625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031582944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:35.301" endtime="20201112 12:44:35.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02152625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031582944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:35.599" endtime="20201112 12:44:35.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.607" endtime="20201112 12:44:35.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.298" endtime="20201112 12:44:35.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.297" endtime="20201112 12:44:35.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.632" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:35.610" endtime="20201112 12:44:35.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.637" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:35.636" endtime="20201112 12:44:35.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.638" level="INFO">VALUE: 0.02152625</msg>
<status status="PASS" starttime="20201112 12:44:35.638" endtime="20201112 12:44:35.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.633" endtime="20201112 12:44:35.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.644" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:35.643" endtime="20201112 12:44:35.644"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.646" level="INFO">VALUE: [0.031582944, 0.041582583, 0.051583056, 0.061583931, 0.071584542, 0.081585403, 0.091586014, 0.101586861, 0.111587486, 0.121588347, 0.131588958, 0.141589819, 0.151590458, 0.161591306, 0.171591931, 0.181592847, 0.191593389, 0.201594264, 0.211594889, 0.221595736, 0.231596347, 0.241597222, 0.251597889, 0.261598708, 0.271599306, 0.281600181, 0.291600833, 0.301601653, 0.311602264, 0.321603125, 0.331603736, 0.341604611, 0.351605236, 0.361606083, 0.371606708, 0.381607583, 0.391608181, 0.401609042, 0.411609722, 0.421610514, 0.431611111, 0.441611972, 0.451612583, 0.461613431, 0.471614056, 0.481614903, 0.491615514, 0.501616361, 0.511616972, 0.521617847, 0.531618458, 0.541619306, 0.551619917, 0.561620778, 0.571621375, 0.581622236, 0.591622847, 0.601623708, 0.611624333, 0.621625181, 0.631625778, 0.641626639, 0.651627264, 0.661628125, 0.671628722, 0.681629597, 0.691630194, 0.701631042, 0.711631681, 0.721632514, 0.731633125, 0.741633986, 0.751634667, 0.761635458, 0.771636083, 0.781636917, 0.791637569, 0.801638389, 0.811639, 0.821639861, 0.831640472, 0.841641347, 0.851641944, 0.861642806, 0.871643417, 0.881644292, 0.891644889, 0.90164575, 0.911646361, 0.921647208, 0.931647833, 0.941648681, 0.951649306, 0.961650153, 0.971650778, 0.981651625, 0.99165225, 1.001653097, 1.011653722, 1.021654569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:35.645" endtime="20201112 12:44:35.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.640" endtime="20201112 12:44:35.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.649" endtime="20201112 12:44:35.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:35.653" endtime="20201112 12:44:35.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.651" endtime="20201112 12:44:35.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.648" endtime="20201112 12:44:35.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.125" endtime="20201112 12:44:35.673"></status>
</kw>
<msg timestamp="20201112 12:44:35.674" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.682" endtime="20201112 12:44:37.792"></status>
</kw>
<msg timestamp="20201112 12:44:37.793" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 171549711, 'wakeups': [171559767, 171569765, 171579765, 171589765, 171...</msg>
<status status="PASS" starttime="20201112 12:44:35.680" endtime="20201112 12:44:37.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.799" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 171549711, 'wakeups': [171559767, 171569765, 171579765, 171589765, 171...</msg>
<status status="PASS" starttime="20201112 12:44:37.796" endtime="20201112 12:44:37.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.801" endtime="20201112 12:44:37.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.677" endtime="20201112 12:44:37.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.676" endtime="20201112 12:44:37.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:37.813" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [171559767, 171569765, 171579765, 171589765, 171599765, 171609765, 171619765, 171629765, 171639765, 171649765, 171659765, 171669765, 171679765, 1...</msg>
<status status="PASS" starttime="20201112 12:44:37.809" endtime="20201112 12:44:37.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.822" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:37.820" endtime="20201112 12:44:37.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.826" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:37.824" endtime="20201112 12:44:37.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.815" endtime="20201112 12:44:37.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.837" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:37.835" endtime="20201112 12:44:37.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.841" level="INFO">VALUE: 171549711</msg>
<status status="PASS" starttime="20201112 12:44:37.839" endtime="20201112 12:44:37.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.829" endtime="20201112 12:44:37.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.851" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:37.849" endtime="20201112 12:44:37.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:37.854" level="INFO">VALUE: [171559767, 171569765, 171579765, 171589765, 171599765, 171609765, 171619765, 171629765, 171639765, 171649765, 171659765, 171669765, 171679765, 171689765, 171699765, 171709765, 171719765, 171729765, 171739765, 171749765, 171759765, 171769765, 171779765, 171789765, 171799765, 171809765, 171819765, 171829765, 171839765, 171849765, 171859765, 171869765, 171879765, 171889765, 171899765, 171909765, 171919765, 171929765, 171939765, 171949765, 171959765, 171969765, 171979765, 171989765, 171999765, 172009765, 172019765, 172029765, 172039765, 172049765, 172059765, 172069765, 172079765, 172089765, 172099765, 172109765, 172119765, 172129765, 172139765, 172149765, 172159765, 172169765, 172179765, 172189765, 172199765, 172209765, 172219765, 172229765, 172239765, 172249765, 172259765, 172269765, 172279765, 172289765, 172299765, 172309765, 172319765, 172329765, 172339765, 172349765, 172359765, 172369765, 172379765, 172389765, 172399765, 172409765, 172419765, 172429765, 172439765, 172449765, 172459765, 172469765, 172479765, 172489765, 172499765, 172509765, 172519765, 172529765, 172539765, 172549765]</msg>
<status status="PASS" starttime="20201112 12:44:37.852" endtime="20201112 12:44:37.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.844" endtime="20201112 12:44:37.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:37.861" endtime="20201112 12:44:38.153"></status>
</kw>
<msg timestamp="20201112 12:44:38.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029753111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:37.860" endtime="20201112 12:44:38.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019696444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029753111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.157" endtime="20201112 12:44:38.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.164" endtime="20201112 12:44:38.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.857" endtime="20201112 12:44:38.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:37.855" endtime="20201112 12:44:38.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.191" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:38.167" endtime="20201112 12:44:38.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.196" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:38.195" endtime="20201112 12:44:38.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.198" level="INFO">VALUE: 0.019696444</msg>
<status status="PASS" starttime="20201112 12:44:38.197" endtime="20201112 12:44:38.198"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.192" endtime="20201112 12:44:38.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.203" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:38.202" endtime="20201112 12:44:38.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.205" level="INFO">VALUE: [0.029753111, 0.039752722, 0.049753278, 0.059754139, 0.06975475, 0.079755625, 0.089756236, 0.099757097, 0.109757722, 0.119758556, 0.129759181, 0.139760028, 0.149760667, 0.159761528, 0.169762153, 0.179762986, 0.189763611, 0.199764458, 0.209765097, 0.219765972, 0.229766556, 0.239767417, 0.249768083, 0.259768903, 0.269769528, 0.279770417, 0.289770986, 0.299771847, 0.309772472, 0.319773333, 0.329773944, 0.339774806, 0.349775431, 0.359776292, 0.369776903, 0.379777764, 0.389778403, 0.39977925, 0.409779861, 0.419780736, 0.429781333, 0.439782208, 0.449782847, 0.459783667, 0.469784278, 0.479785153, 0.489785764, 0.499786625, 0.509787222, 0.519788069, 0.529788694, 0.539789542, 0.549790139, 0.559791, 0.569791625, 0.579792458, 0.589793083, 0.599793931, 0.609794583, 0.619795403, 0.629796014, 0.639796861, 0.649797486, 0.659798333, 0.669798944, 0.679799806, 0.689800431, 0.699801264, 0.709801875, 0.71980275, 0.729803347, 0.739804222, 0.749804847, 0.759805681, 0.769806278, 0.779807167, 0.789807764, 0.799808611, 0.809809222, 0.819810069, 0.829810681, 0.839811542, 0.849812153, 0.859813014, 0.869813625, 0.879814528, 0.889815097, 0.899815958, 0.909816597, 0.919817417, 0.929818069, 0.939818889, 0.949819514, 0.959820361, 0.969820986, 0.979821847, 0.989822444, 0.999823292, 1.009823903, 1.019824764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:38.204" endtime="20201112 12:44:38.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.199" endtime="20201112 12:44:38.206"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.208" endtime="20201112 12:44:38.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:38.211" endtime="20201112 12:44:38.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.210" endtime="20201112 12:44:38.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.207" endtime="20201112 12:44:38.232"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.674" endtime="20201112 12:44:38.232"></status>
</kw>
<msg timestamp="20201112 12:44:38.232" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.240" endtime="20201112 12:44:40.350"></status>
</kw>
<msg timestamp="20201112 12:44:40.352" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 174107565, 'wakeups': [174117621, 174127619, 174137619, 174147619, 174...</msg>
<status status="PASS" starttime="20201112 12:44:38.239" endtime="20201112 12:44:40.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.358" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 174107565, 'wakeups': [174117621, 174127619, 174137619, 174147619, 174...</msg>
<status status="PASS" starttime="20201112 12:44:40.354" endtime="20201112 12:44:40.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.360" endtime="20201112 12:44:40.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.236" endtime="20201112 12:44:40.365"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.234" endtime="20201112 12:44:40.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:40.371" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 9, 'wakeups': [174117621, 174127619, 174137619, 174147619, 174157619, 174167619, 174177619, 174187619, 174197619, 174207619, 174217619, 174227619, 174237619, 1...</msg>
<status status="PASS" starttime="20201112 12:44:40.367" endtime="20201112 12:44:40.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.380" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:40.378" endtime="20201112 12:44:40.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.384" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:40.382" endtime="20201112 12:44:40.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.373" endtime="20201112 12:44:40.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.394" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:40.392" endtime="20201112 12:44:40.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.400" level="INFO">VALUE: 174107565</msg>
<status status="PASS" starttime="20201112 12:44:40.396" endtime="20201112 12:44:40.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.387" endtime="20201112 12:44:40.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.409" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:40.408" endtime="20201112 12:44:40.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.411" level="INFO">VALUE: [174117621, 174127619, 174137619, 174147619, 174157619, 174167619, 174177619, 174187619, 174197619, 174207619, 174217619, 174227619, 174237619, 174247619, 174257619, 174267619, 174277619, 174287619, 174297619, 174307619, 174317619, 174327619, 174337619, 174347619, 174357619, 174367619, 174377619, 174387619, 174397619, 174407619, 174417619, 174427619, 174437619, 174447619, 174457619, 174467619, 174477619, 174487619, 174497619, 174507619, 174517619, 174527619, 174537619, 174547619, 174557619, 174567619, 174577619, 174587619, 174597619, 174607619, 174617619, 174627619, 174637619, 174647619, 174657619, 174667619, 174677619, 174687619, 174697619, 174707619, 174717619, 174727619, 174737619, 174747619, 174757619, 174767619, 174777619, 174787619, 174797619, 174807619, 174817619, 174827619, 174837619, 174847619, 174857619, 174867619, 174877619, 174887619, 174897619, 174907619, 174917619, 174927619, 174937619, 174947619, 174957619, 174967619, 174977619, 174987619, 174997619, 175007619, 175017619, 175027619, 175037619, 175047619, 175057619, 175067619, 175077619, 175087619, 175097619, 175107619]</msg>
<status status="PASS" starttime="20201112 12:44:40.410" endtime="20201112 12:44:40.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.404" endtime="20201112 12:44:40.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.418" endtime="20201112 12:44:40.710"></status>
</kw>
<msg timestamp="20201112 12:44:40.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018794653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028851278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.416" endtime="20201112 12:44:40.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018794653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028851278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.713" endtime="20201112 12:44:40.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.721" endtime="20201112 12:44:40.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.414" endtime="20201112 12:44:40.723"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.412" endtime="20201112 12:44:40.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:40.747" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:40.724" endtime="20201112 12:44:40.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.751" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:40.750" endtime="20201112 12:44:40.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.753" level="INFO">VALUE: 0.018794653</msg>
<status status="PASS" starttime="20201112 12:44:40.752" endtime="20201112 12:44:40.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.748" endtime="20201112 12:44:40.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.758" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:40.757" endtime="20201112 12:44:40.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.761" level="INFO">VALUE: [0.028851278, 0.038850931, 0.048851458, 0.058852306, 0.068852917, 0.078853792, 0.088854389, 0.098855264, 0.108855861, 0.118856722, 0.128857347, 0.138858222, 0.148858819, 0.158859736, 0.168860292, 0.178861153, 0.188861778, 0.198862653, 0.20886325, 0.218864125, 0.228864736, 0.238865583, 0.248866208, 0.258867069, 0.268867681, 0.278868542, 0.288869153, 0.298870014, 0.308870639, 0.3188715, 0.328872111, 0.338872972, 0.348873611, 0.358874458, 0.368875056, 0.378875972, 0.388876556, 0.398877375, 0.408878014, 0.418878875, 0.428879458, 0.438880306, 0.448880931, 0.458881792, 0.468882389, 0.478883236, 0.488883847, 0.498884694, 0.508885319, 0.518886167, 0.528886792, 0.538887625, 0.548888236, 0.558889097, 0.568889722, 0.578890569, 0.588891181, 0.598892097, 0.608892653, 0.6188935, 0.628894139, 0.638894958, 0.648895569, 0.658896444, 0.668897042, 0.678897903, 0.688898556, 0.698899361, 0.708899986, 0.718900833, 0.728901472, 0.738902292, 0.748902903, 0.758903764, 0.768904375, 0.778905222, 0.788905833, 0.798906694, 0.808907319, 0.818908181, 0.828908792, 0.838909667, 0.848910236, 0.858911111, 0.868911792, 0.878912569, 0.888913181, 0.898914042, 0.908914667, 0.9189155, 0.928916125, 0.938916972, 0.948917569, 0.958918431, 0.968919042, 0.978919917, 0.988920514, 0.998921361, 1.008922, 1.018922903] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:40.760" endtime="20201112 12:44:40.762"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.755" endtime="20201112 12:44:40.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.764" endtime="20201112 12:44:40.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:40.768" endtime="20201112 12:44:40.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.766" endtime="20201112 12:44:40.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.763" endtime="20201112 12:44:40.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.233" endtime="20201112 12:44:40.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.123" endtime="20201112 12:44:40.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.122" endtime="20201112 12:44:40.789"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:40.791" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.799" endtime="20201112 12:44:42.909"></status>
</kw>
<msg timestamp="20201112 12:44:42.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 176666642, 'wakeups': [176676706, 176686704, 176696704, 176706704, 1...</msg>
<status status="PASS" starttime="20201112 12:44:40.798" endtime="20201112 12:44:42.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.916" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 176666642, 'wakeups': [176676706, 176686704, 176696704, 176706704, 1...</msg>
<status status="PASS" starttime="20201112 12:44:42.913" endtime="20201112 12:44:42.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.919" endtime="20201112 12:44:42.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.795" endtime="20201112 12:44:42.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.793" endtime="20201112 12:44:42.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:42.930" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [176676706, 176686704, 176696704, 176706704, 176716704, 176726704, 176736704, 176746704, 176756704, 176766704, 176776704, 176786704, 176796704, ...</msg>
<status status="PASS" starttime="20201112 12:44:42.925" endtime="20201112 12:44:42.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.939" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:42.937" endtime="20201112 12:44:42.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.944" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:42.942" endtime="20201112 12:44:42.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.932" endtime="20201112 12:44:42.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.954" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:42.952" endtime="20201112 12:44:42.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.959" level="INFO">VALUE: 176666642</msg>
<status status="PASS" starttime="20201112 12:44:42.957" endtime="20201112 12:44:42.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.947" endtime="20201112 12:44:42.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.969" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:42.967" endtime="20201112 12:44:42.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:42.974" level="INFO">VALUE: [176676706, 176686704, 176696704, 176706704, 176716704, 176726704, 176736704, 176746704, 176756704, 176766704, 176776704, 176786704, 176796704, 176806704, 176816704, 176826704, 176836704, 176846704, 176856704, 176866704, 176876704, 176886704, 176896704, 176906704, 176916704, 176926704, 176936704, 176946704, 176956704, 176966704, 176976704, 176986704, 176996704, 177006704, 177016704, 177026704, 177036704, 177046704, 177056704, 177066704, 177076704, 177086704, 177096704, 177106704, 177116704, 177126704, 177136704, 177146704, 177156704, 177166704, 177176704, 177186704, 177196704, 177206704, 177216704, 177226704, 177236704, 177246704, 177256704, 177266704, 177276704, 177286704, 177296704, 177306704, 177316704, 177326704, 177336704, 177346704, 177356704, 177366704, 177376704, 177386704, 177396704, 177406704, 177416704, 177426704, 177436704, 177446704, 177456704, 177466704, 177476704, 177486704, 177496704, 177506704, 177516704, 177526704, 177536704, 177546704, 177556704, 177566704, 177576704, 177586704, 177596704, 177606704, 177616704, 177626704, 177636704, 177646704, 177656704, 177666704]</msg>
<status status="PASS" starttime="20201112 12:44:42.971" endtime="20201112 12:44:42.975"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.962" endtime="20201112 12:44:42.976"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:42.991" endtime="20201112 12:44:43.289"></status>
</kw>
<msg timestamp="20201112 12:44:43.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0317145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:42.986" endtime="20201112 12:44:43.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021649639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0317145, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:43.292" endtime="20201112 12:44:43.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.300" endtime="20201112 12:44:43.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.980" endtime="20201112 12:44:43.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:42.977" endtime="20201112 12:44:43.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:43.326" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:43.303" endtime="20201112 12:44:43.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.330" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:43.329" endtime="20201112 12:44:43.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.332" level="INFO">VALUE: 0.021649639</msg>
<status status="PASS" starttime="20201112 12:44:43.331" endtime="20201112 12:44:43.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.327" endtime="20201112 12:44:43.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.338" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:43.337" endtime="20201112 12:44:43.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.340" level="INFO">VALUE: [0.0317145, 0.041713583, 0.051714097, 0.061714958, 0.071715583, 0.081716444, 0.091717056, 0.101717986, 0.111718528, 0.121719389, 0.13172, 0.141720889, 0.151721486, 0.161722347, 0.171723028, 0.181723819, 0.191724444, 0.201725306, 0.211725903, 0.221726778, 0.231727389, 0.24172825, 0.251728889, 0.261729722, 0.271730347, 0.281731194, 0.291731847, 0.301732694, 0.311733292, 0.321734167, 0.331734819, 0.341735625, 0.351736264, 0.361737111, 0.371737736, 0.381738597, 0.391739236, 0.401740056, 0.411740694, 0.421741556, 0.431742153, 0.441743014, 0.451743639, 0.461744486, 0.471745097, 0.481745958, 0.491746583, 0.501747431, 0.511748028, 0.521748889, 0.531749486, 0.541750347, 0.551750958, 0.561751806, 0.571752431, 0.581753278, 0.591753889, 0.60175475, 0.611755347, 0.621756208, 0.631756833, 0.641757667, 0.651758278, 0.661759208, 0.67175975, 0.681760597, 0.691761292, 0.701762083, 0.711762708, 0.721763528, 0.731764139, 0.741765, 0.751765611, 0.761766472, 0.771767083, 0.781767958, 0.791768542, 0.801769417, 0.811770028, 0.821770861, 0.831771472, 0.841772333, 0.851772944, 0.861773792, 0.871774417, 0.881775278, 0.891775875, 0.901776736, 0.911777361, 0.921778194, 0.931778806, 0.941779667, 0.951780292, 0.961781139, 0.97178175, 0.981782597, 0.991783208, 1.001784069, 1.011784681, 1.021785528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:43.339" endtime="20201112 12:44:43.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.334" endtime="20201112 12:44:43.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.343" endtime="20201112 12:44:43.344"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:43.346" endtime="20201112 12:44:43.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.345" endtime="20201112 12:44:43.366"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.341" endtime="20201112 12:44:43.367"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.792" endtime="20201112 12:44:43.367"></status>
</kw>
<msg timestamp="20201112 12:44:43.367" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.376" endtime="20201112 12:44:45.487"></status>
</kw>
<msg timestamp="20201112 12:44:45.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 179243624, 'wakeups': [179253687, 179263686, 179273686, 179283686, 1...</msg>
<status status="PASS" starttime="20201112 12:44:43.374" endtime="20201112 12:44:45.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.494" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 179243624, 'wakeups': [179253687, 179263686, 179273686, 179283686, 1...</msg>
<status status="PASS" starttime="20201112 12:44:45.490" endtime="20201112 12:44:45.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.496" endtime="20201112 12:44:45.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.371" endtime="20201112 12:44:45.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.369" endtime="20201112 12:44:45.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:45.507" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [179253687, 179263686, 179273686, 179283686, 179293686, 179303686, 179313686, 179323686, 179333686, 179343686, 179353686, 179363686, 179373686, ...</msg>
<status status="PASS" starttime="20201112 12:44:45.503" endtime="20201112 12:44:45.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.515" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:45.513" endtime="20201112 12:44:45.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.519" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:45.517" endtime="20201112 12:44:45.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.508" endtime="20201112 12:44:45.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.529" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:45.527" endtime="20201112 12:44:45.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.533" level="INFO">VALUE: 179243624</msg>
<status status="PASS" starttime="20201112 12:44:45.531" endtime="20201112 12:44:45.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.522" endtime="20201112 12:44:45.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.544" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:45.541" endtime="20201112 12:44:45.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.549" level="INFO">VALUE: [179253687, 179263686, 179273686, 179283686, 179293686, 179303686, 179313686, 179323686, 179333686, 179343686, 179353686, 179363686, 179373686, 179383686, 179393686, 179403686, 179413686, 179423686, 179433686, 179443686, 179453686, 179463686, 179473686, 179483686, 179493686, 179503686, 179513686, 179523686, 179533686, 179543686, 179553686, 179563686, 179573686, 179583686, 179593686, 179603686, 179613686, 179623686, 179633686, 179643686, 179653686, 179663686, 179673686, 179683686, 179693686, 179703686, 179713686, 179723686, 179733686, 179743686, 179753686, 179763686, 179773686, 179783686, 179793686, 179803686, 179813686, 179823686, 179833686, 179843686, 179853686, 179863686, 179873686, 179883686, 179893686, 179903686, 179913686, 179923686, 179933686, 179943686, 179953686, 179963686, 179973686, 179983686, 179993686, 180003686, 180013686, 180023686, 180033686, 180043686, 180053686, 180063686, 180073686, 180083686, 180093686, 180103686, 180113686, 180123686, 180133686, 180143686, 180153686, 180163686, 180173686, 180183686, 180193686, 180203686, 180213686, 180223686, 180233686, 180243686]</msg>
<status status="PASS" starttime="20201112 12:44:45.546" endtime="20201112 12:44:45.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.536" endtime="20201112 12:44:45.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.564" endtime="20201112 12:44:45.861"></status>
</kw>
<msg timestamp="20201112 12:44:45.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029919875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:45.561" endtime="20201112 12:44:45.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029919875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:45.865" endtime="20201112 12:44:45.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.872" endtime="20201112 12:44:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.555" endtime="20201112 12:44:45.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.552" endtime="20201112 12:44:45.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:45.898" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:45.875" endtime="20201112 12:44:45.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.902" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:45.901" endtime="20201112 12:44:45.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.905" level="INFO">VALUE: 0.019855319</msg>
<status status="PASS" starttime="20201112 12:44:45.904" endtime="20201112 12:44:45.905"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.899" endtime="20201112 12:44:45.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.910" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:45.909" endtime="20201112 12:44:45.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:45.912" level="INFO">VALUE: [0.029919875, 0.039919917, 0.049920431, 0.059921292, 0.069921917, 0.079922792, 0.089923389, 0.09992425, 0.109924889, 0.119925722, 0.129926333, 0.139927194, 0.149927819, 0.159928667, 0.169929292, 0.179930139, 0.189930778, 0.199931625, 0.209932236, 0.219933111, 0.229933708, 0.239934569, 0.249935181, 0.259936042, 0.269936681, 0.279937569, 0.289938153, 0.299939014, 0.309939681, 0.319940472, 0.329941111, 0.339941944, 0.349942583, 0.359943431, 0.369944042, 0.379944958, 0.389945528, 0.399946375, 0.409947014, 0.419947861, 0.429948486, 0.439949347, 0.449949958, 0.459950806, 0.469951458, 0.479952278, 0.489952889, 0.499953736, 0.509954431, 0.519955222, 0.529955833, 0.539956708, 0.549957278, 0.559958139, 0.56995875, 0.579959597, 0.58996025, 0.599961083, 0.609961681, 0.619962528, 0.629963181, 0.639964, 0.649964625, 0.659965472, 0.669966069, 0.679966917, 0.689967528, 0.699968389, 0.709969014, 0.719969847, 0.729970458, 0.739971333, 0.749971931, 0.759972792, 0.769973403, 0.77997425, 0.789974889, 0.799975722, 0.809976333, 0.819977181, 0.829977806, 0.839978653, 0.849979264, 0.859980125, 0.86998075, 0.879981583, 0.889982208, 0.899983042, 0.909983681, 0.919984514, 0.929985139, 0.939985972, 0.949986611, 0.959987458, 0.969988083, 0.979988917, 0.989989528, 0.999990375, 1.009990986, 1.019991847] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:45.911" endtime="20201112 12:44:45.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.906" endtime="20201112 12:44:45.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.915" endtime="20201112 12:44:45.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:45.919" endtime="20201112 12:44:45.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.917" endtime="20201112 12:44:45.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.913" endtime="20201112 12:44:45.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.368" endtime="20201112 12:44:45.939"></status>
</kw>
<msg timestamp="20201112 12:44:45.940" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:45.947" endtime="20201112 12:44:48.058"></status>
</kw>
<msg timestamp="20201112 12:44:48.059" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 181814980, 'wakeups': [181825044, 181835042, 181845042, 181855042, 1...</msg>
<status status="PASS" starttime="20201112 12:44:45.946" endtime="20201112 12:44:48.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.065" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 181814980, 'wakeups': [181825044, 181835042, 181845042, 181855042, 1...</msg>
<status status="PASS" starttime="20201112 12:44:48.061" endtime="20201112 12:44:48.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.067" endtime="20201112 12:44:48.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.943" endtime="20201112 12:44:48.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.941" endtime="20201112 12:44:48.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.079" level="INFO">${RESULT} = {'timer-interval': 10000, 'timer-count': 10, 'wakeups': [181825044, 181835042, 181845042, 181855042, 181865042, 181875042, 181885042, 181895042, 181905042, 181915042, 181925042, 181935042, 181945042, ...</msg>
<status status="PASS" starttime="20201112 12:44:48.075" endtime="20201112 12:44:48.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.087" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:48.085" endtime="20201112 12:44:48.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.091" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:48.090" endtime="20201112 12:44:48.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.081" endtime="20201112 12:44:48.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.102" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:48.100" endtime="20201112 12:44:48.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.108" level="INFO">VALUE: 181814980</msg>
<status status="PASS" starttime="20201112 12:44:48.104" endtime="20201112 12:44:48.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.095" endtime="20201112 12:44:48.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.118" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:48.116" endtime="20201112 12:44:48.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.123" level="INFO">VALUE: [181825044, 181835042, 181845042, 181855042, 181865042, 181875042, 181885042, 181895042, 181905042, 181915042, 181925042, 181935042, 181945042, 181955042, 181965042, 181975042, 181985042, 181995042, 182005042, 182015042, 182025042, 182035042, 182045042, 182055042, 182065042, 182075042, 182085042, 182095042, 182105042, 182115042, 182125042, 182135042, 182145042, 182155042, 182165042, 182175042, 182185042, 182195042, 182205042, 182215042, 182225042, 182235042, 182245042, 182255042, 182265042, 182275042, 182285042, 182295042, 182305042, 182315042, 182325042, 182335042, 182345042, 182355042, 182365042, 182375042, 182385042, 182395042, 182405042, 182415042, 182425042, 182435042, 182445042, 182455042, 182465042, 182475042, 182485042, 182495042, 182505042, 182515042, 182525042, 182535042, 182545042, 182555042, 182565042, 182575042, 182585042, 182595042, 182605042, 182615042, 182625042, 182635042, 182645042, 182655042, 182665042, 182675042, 182685042, 182695042, 182705042, 182715042, 182725042, 182735042, 182745042, 182755042, 182765042, 182775042, 182785042, 182795042, 182805042, 182815042]</msg>
<status status="PASS" starttime="20201112 12:44:48.120" endtime="20201112 12:44:48.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.111" endtime="20201112 12:44:48.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.138" endtime="20201112 12:44:48.434"></status>
</kw>
<msg timestamp="20201112 12:44:48.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02903225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:48.135" endtime="20201112 12:44:48.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018967389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02903225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:48.437" endtime="20201112 12:44:48.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.445" endtime="20201112 12:44:48.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.129" endtime="20201112 12:44:48.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.126" endtime="20201112 12:44:48.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.471" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201112 12:44:48.448" endtime="20201112 12:44:48.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.475" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:48.474" endtime="20201112 12:44:48.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.477" level="INFO">VALUE: 0.018967389</msg>
<status status="PASS" starttime="20201112 12:44:48.476" endtime="20201112 12:44:48.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.472" endtime="20201112 12:44:48.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.483" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:48.482" endtime="20201112 12:44:48.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.485" level="INFO">VALUE: [0.02903225, 0.039031306, 0.049031847, 0.059032722, 0.069033319, 0.079034194, 0.089034806, 0.099035694, 0.109036278, 0.119037125, 0.129037736, 0.139038681, 0.149039236, 0.159040069, 0.169040736, 0.179041569, 0.189042167, 0.199043028, 0.209043653, 0.219044528, 0.229045181, 0.239045972, 0.249046597, 0.259047472, 0.269048069, 0.279048972, 0.289049542, 0.299050458, 0.309051014, 0.319051889, 0.329052514, 0.339053347, 0.349053986, 0.359054833, 0.369055444, 0.379056319, 0.389056917, 0.399057778, 0.409058403, 0.41905925, 0.429059889, 0.43906075, 0.449061347, 0.459062222, 0.469062847, 0.479063681, 0.489064319, 0.499065181, 0.509065778, 0.519066611, 0.529067222, 0.539068097, 0.549068694, 0.559069542, 0.569070167, 0.579071014, 0.589071625, 0.599072472, 0.609073083, 0.619073986, 0.629074542, 0.639075389, 0.649076, 0.659076861, 0.669077486, 0.679078319, 0.689078931, 0.699079819, 0.709080417, 0.719081292, 0.729081861, 0.739082764, 0.749083347, 0.759084181, 0.769084792, 0.779085639, 0.78908625, 0.799087153, 0.809087722, 0.819088569, 0.829089208, 0.839090042, 0.849090653, 0.859091569, 0.869092111, 0.879092972, 0.889093583, 0.899094472, 0.909095056, 0.919095917, 0.929096514, 0.939097375, 0.949097986, 0.959098833, 0.969099444, 0.979100319, 0.989100917, 0.999101778, 1.009102403, 1.019103264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:48.484" endtime="20201112 12:44:48.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.479" endtime="20201112 12:44:48.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.488" endtime="20201112 12:44:48.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:48.492" endtime="20201112 12:44:48.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.490" endtime="20201112 12:44:48.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.487" endtime="20201112 12:44:48.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:45.940" endtime="20201112 12:44:48.512"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.790" endtime="20201112 12:44:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.789" endtime="20201112 12:44:48.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.517" endtime="20201112 12:44:48.513"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:31.447" endtime="20201112 12:44:48.514" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:43:30.051" endtime="20201112 12:44:48.517"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:41:45.017" endtime="20201112 12:44:48.533"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
