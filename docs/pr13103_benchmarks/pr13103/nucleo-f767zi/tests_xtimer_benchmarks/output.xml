<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 09:42:37.675" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:38.235" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:38.243" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:39.517" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:38.233" endtime="20201112 09:42:39.518"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.521" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:39.519" endtime="20201112 09:42:39.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.232" endtime="20201112 09:42:39.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:39.524" endtime="20201112 09:42:39.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.522" endtime="20201112 09:42:39.707"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.720" endtime="20201112 09:42:39.739"></status>
</kw>
<msg timestamp="20201112 09:42:39.740" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.719" endtime="20201112 09:42:39.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.742" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.741" endtime="20201112 09:42:39.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.746" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:39.743" endtime="20201112 09:42:39.746"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.716" endtime="20201112 09:42:39.747"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.713" endtime="20201112 09:42:39.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.712" endtime="20201112 09:42:39.747"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:39.751" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:39.750" endtime="20201112 09:42:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.748" endtime="20201112 09:42:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.711" endtime="20201112 09:42:39.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.711" endtime="20201112 09:42:39.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.753" endtime="20201112 09:42:39.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.709" endtime="20201112 09:42:39.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.756" endtime="20201112 09:42:39.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.708" endtime="20201112 09:42:39.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:38.230" endtime="20201112 09:42:39.758"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:39.765" endtime="20201112 09:42:39.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.763" endtime="20201112 09:42:39.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.799" endtime="20201112 09:42:39.819"></status>
</kw>
<msg timestamp="20201112 09:42:39.819" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.798" endtime="20201112 09:42:39.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.821" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.820" endtime="20201112 09:42:39.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.824" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:39.822" endtime="20201112 09:42:39.825"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.795" endtime="20201112 09:42:39.825"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:39.793" endtime="20201112 09:42:39.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.791" endtime="20201112 09:42:39.826"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:39.830" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:39.829" endtime="20201112 09:42:39.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.827" endtime="20201112 09:42:39.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.790" endtime="20201112 09:42:39.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.790" endtime="20201112 09:42:39.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.832" endtime="20201112 09:42:39.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.787" endtime="20201112 09:42:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.786" endtime="20201112 09:42:39.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.762" endtime="20201112 09:42:39.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.842" endtime="20201112 09:42:39.852"></status>
</kw>
<msg timestamp="20201112 09:42:39.853" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.840" endtime="20201112 09:42:39.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.855" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:39.854" endtime="20201112 09:42:39.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:39.856" endtime="20201112 09:42:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.838" endtime="20201112 09:42:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.836" endtime="20201112 09:42:39.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.864" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 09:42:39.863" endtime="20201112 09:42:39.864"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.866" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 09:42:39.865" endtime="20201112 09:42:39.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.860" endtime="20201112 09:42:39.867"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:39.758" endtime="20201112 09:42:39.868" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:37.785" endtime="20201112 09:42:39.872"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:42:39.929" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:42:39.936" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:42:41.417" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:42:39.927" endtime="20201112 09:42:41.418"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.421" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:42:41.419" endtime="20201112 09:42:41.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.926" endtime="20201112 09:42:41.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.424" endtime="20201112 09:42:41.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.423" endtime="20201112 09:42:41.644"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.656" endtime="20201112 09:42:41.675"></status>
</kw>
<msg timestamp="20201112 09:42:41.675" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.654" endtime="20201112 09:42:41.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.677" endtime="20201112 09:42:41.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.681" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:41.679" endtime="20201112 09:42:41.681"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.652" endtime="20201112 09:42:41.682"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.650" endtime="20201112 09:42:41.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.648" endtime="20201112 09:42:41.683"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:41.687" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:41.686" endtime="20201112 09:42:41.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.684" endtime="20201112 09:42:41.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.648" endtime="20201112 09:42:41.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.647" endtime="20201112 09:42:41.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.688" endtime="20201112 09:42:41.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.646" endtime="20201112 09:42:41.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.691" endtime="20201112 09:42:41.692"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.644" endtime="20201112 09:42:41.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:39.924" endtime="20201112 09:42:41.693"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:41.700" endtime="20201112 09:42:41.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.698" endtime="20201112 09:42:41.722"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.750" endtime="20201112 09:42:41.775"></status>
</kw>
<msg timestamp="20201112 09:42:41.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.746" endtime="20201112 09:42:41.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.782" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.778" endtime="20201112 09:42:41.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.788" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:41.784" endtime="20201112 09:42:41.788"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.740" endtime="20201112 09:42:41.790"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:41.735" endtime="20201112 09:42:41.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.733" endtime="20201112 09:42:41.792"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:41.799" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:41.798" endtime="20201112 09:42:41.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.793" endtime="20201112 09:42:41.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.731" endtime="20201112 09:42:41.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.729" endtime="20201112 09:42:41.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.803" endtime="20201112 09:42:41.806"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.727" endtime="20201112 09:42:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.723" endtime="20201112 09:42:41.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.697" endtime="20201112 09:42:41.807"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:41.810" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.818" endtime="20201112 09:42:41.828"></status>
</kw>
<msg timestamp="20201112 09:42:41.828" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.816" endtime="20201112 09:42:41.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:41.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:41.829" endtime="20201112 09:42:41.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.832" endtime="20201112 09:42:41.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.813" endtime="20201112 09:42:41.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.812" endtime="20201112 09:42:41.834"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:41.841" endtime="20201112 09:42:42.118"></status>
</kw>
<msg timestamp="20201112 09:42:42.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108037903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108039722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:41.839" endtime="20201112 09:42:42.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.108037903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108039722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.121" endtime="20201112 09:42:42.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.127" endtime="20201112 09:42:42.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.837" endtime="20201112 09:42:42.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.835" endtime="20201112 09:42:42.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.134" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.132" endtime="20201112 09:42:42.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.137" level="INFO">VALUE: [{'time': 0.108037903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.108039722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.108041333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.108043097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.108044875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.777999999993951e-06, 'source_diff': 1.777999999993951e-06}, {'time': 0.108046625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999948113e-06, 'source_diff': 1.7499999999948113e-06}, {'time': 0.108048403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7780000000078289e-06, 'source_diff': 1.7780000000078289e-06}, {'time': 0.108050347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9440000000037205e-06, 'source_diff': 1.9440000000037205e-06}, {'time': 0.108052111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.108053819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999891626e-06, 'source_diff': 1.7079999999891626e-06}, {'time': 0.108055778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.959000000009703e-06, 'source_diff': 1.959000000009703e-06}, {'time': 0.108057681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.108059333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.651999999990883e-06, 'source_diff': 1.651999999990883e-06}, {'time': 0.108061125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.108062569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4440000000032205e-06, 'source_diff': 1.4440000000032205e-06}, {'time': 0.108064389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.10806625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000057747e-06, 'source_diff': 1.8610000000057747e-06}, {'time': 0.108068042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.108069944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.108071583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.108073153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5700000000062886e-06, 'source_diff': 1.5700000000062886e-06}, {'time': 0.108074806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999903566e-06, 'source_diff': 1.6529999999903566e-06}, {'time': 0.108076403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000059548e-06, 'source_diff': 1.5970000000059548e-06}, {'time': 0.108078333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.108079917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.108081389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.108082903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999941312e-06, 'source_diff': 1.5139999999941312e-06}, {'time': 0.108084819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000045807e-06, 'source_diff': 1.9160000000045807e-06}, {'time': 0.108086278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999953251e-06, 'source_diff': 1.4589999999953251e-06}, {'time': 0.108088208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9300000000110895e-06, 'source_diff': 1.9300000000110895e-06}, {'time': 0.108089944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999883025e-06, 'source_diff': 1.7359999999883025e-06}, {'time': 0.108091583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000116034e-06, 'source_diff': 1.6390000000116034e-06}, {'time': 0.108093611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.108095153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.541999999993271e-06, 'source_diff': 1.541999999993271e-06}, {'time': 0.108096944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.108098722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.777999999993951e-06, 'source_diff': 1.777999999993951e-06}, {'time': 0.108100181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000009203e-06, 'source_diff': 1.459000000009203e-06}, {'time': 0.108101917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.108103542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999912168e-06, 'source_diff': 1.6249999999912168e-06}, {'time': 0.108105181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.108106903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000095492e-06, 'source_diff': 1.7220000000095492e-06}, {'time': 0.108108611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999891626e-06, 'source_diff': 1.7079999999891626e-06}, {'time': 0.108110472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000057747e-06, 'source_diff': 1.8610000000057747e-06}, {'time': 0.108112, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.108113778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.777999999993951e-06, 'source_diff': 1.777999999993951e-06}, {'time': 0.108115625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000131437e-06, 'source_diff': 1.8470000000131437e-06}, {'time': 0.108117292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6669999999968654e-06, 'source_diff': 1.6669999999968654e-06}, {'time': 0.108119292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.108120847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.108122319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999884825e-06, 'source_diff': 1.4719999999884825e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:42.135" endtime="20201112 09:42:42.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.130" endtime="20201112 09:42:42.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.152" level="INFO">${debug-compressed} = {'time': [0.108037903, 0.108039722, 0.108041333, 0.108043097, 0.108044875, 0.108046625, 0.108048403, 0.108050347, 0.108052111, 0.108053819, 0.108055778, 0.108057681, 0.108059333, 0.108061125, 0.108062...</msg>
<status status="PASS" starttime="20201112 09:42:42.139" endtime="20201112 09:42:42.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.156" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.155" endtime="20201112 09:42:42.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.159" level="INFO">VALUE: {'time': [0.108037903, 0.108039722, 0.108041333, 0.108043097, 0.108044875, 0.108046625, 0.108048403, 0.108050347, 0.108052111, 0.108053819, 0.108055778, 0.108057681, 0.108059333, 0.108061125, 0.108062569, 0.108064389, 0.10806625, 0.108068042, 0.108069944, 0.108071583, 0.108073153, 0.108074806, 0.108076403, 0.108078333, 0.108079917, 0.108081389, 0.108082903, 0.108084819, 0.108086278, 0.108088208, 0.108089944, 0.108091583, 0.108093611, 0.108095153, 0.108096944, 0.108098722, 0.108100181, 0.108101917, 0.108103542, 0.108105181, 0.108106903, 0.108108611, 0.108110472, 0.108112, 0.108113778, 0.108115625, 0.108117292, 0.108119292, 0.108120847, 0.108122319], 'source_diff': [0, 1.819000000000126e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.777999999993951e-06, 1.7499999999948113e-06, 1.7780000000078289e-06, 1.9440000000037205e-06, 1.76400000000132e-06, 1.7079999999891626e-06, 1.959000000009703e-06, 1.9029999999975455e-06, 1.651999999990883e-06, 1.7920000000004599e-06, 1.4440000000032205e-06, 1.8199999999995997e-06, 1.8610000000057747e-06, 1.7920000000004599e-06, 1.901999999998072e-06, 1.6389999999977256e-06, 1.5700000000062886e-06, 1.6529999999903566e-06, 1.5970000000059548e-06, 1.9299999999972117e-06, 1.5839999999989196e-06, 1.4720000000023603e-06, 1.5139999999941312e-06, 1.9160000000045807e-06, 1.4589999999953251e-06, 1.9300000000110895e-06, 1.7359999999883025e-06, 1.6390000000116034e-06, 2.02800000000114e-06, 1.541999999993271e-06, 1.7910000000009862e-06, 1.777999999993951e-06, 1.459000000009203e-06, 1.7360000000021802e-06, 1.6249999999912168e-06, 1.6389999999977256e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.8610000000057747e-06, 1.52800000000064e-06, 1.777999999993951e-06, 1.8470000000131437e-06, 1.6669999999968654e-06, 2.000000000002e-06, 1.5550000000003061e-06, 1.4719999999884825e-06], 'sourcediff': [0, 1.819000000000126e-06, 1.6109999999985858e-06, 1.76400000000132e-06, 1.777999999993951e-06, 1.7499999999948113e-06, 1.7780000000078289e-06, 1.9440000000037205e-06, 1.76400000000132e-06, 1.7079999999891626e-06, 1.959000000009703e-06, 1.9029999999975455e-06, 1.651999999990883e-06, 1.7920000000004599e-06, 1.4440000000032205e-06, 1.8199999999995997e-06, 1.8610000000057747e-06, 1.7920000000004599e-06, 1.901999999998072e-06, 1.6389999999977256e-06, 1.5700000000062886e-06, 1.6529999999903566e-06, 1.5970000000059548e-06, 1.9299999999972117e-06, 1.5839999999989196e-06, 1.4720000000023603e-06, 1.5139999999941312e-06, 1.9160000000045807e-06, 1.4589999999953251e-06, 1.9300000000110895e-06, 1.7359999999883025e-06, 1.6390000000116034e-06, 2.02800000000114e-06, 1.541999999993271e-06, 1.7910000000009862e-06, 1.777999999993951e-06, 1.459000000009203e-06, 1.7360000000021802e-06, 1.6249999999912168e-06, 1.6389999999977256e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.8610000000057747e-06, 1.52800000000064e-06, 1.777999999993951e-06, 1.8470000000131437e-06, 1.6669999999968654e-06, 2.000000000002e-06, 1.5550000000003061e-06, 1.4719999999884825e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:42.157" endtime="20201112 09:42:42.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.153" endtime="20201112 09:42:42.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.164" level="INFO">${RESULT} = [{'time': 0.108039722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.108043097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:42.161" endtime="20201112 09:42:42.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.172" level="INFO">${GPIO_OVERHEAD} = {'time': [0.108039722, 0.108043097, 0.108046625, 0.108050347, 0.108053819, 0.108057681, 0.108061125, 0.108064389, 0.108068042, 0.108071583, 0.108074806, 0.108078333, 0.108081389, 0.108084819, 0.108088...</msg>
<status status="PASS" starttime="20201112 09:42:42.165" endtime="20201112 09:42:42.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.176" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.175" endtime="20201112 09:42:42.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.178" level="INFO">VALUE: [1.819000000000126e-06, 1.76400000000132e-06, 1.7499999999948113e-06, 1.9440000000037205e-06, 1.7079999999891626e-06, 1.9029999999975455e-06, 1.7920000000004599e-06, 1.8199999999995997e-06, 1.7920000000004599e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.9299999999972117e-06, 1.4720000000023603e-06, 1.9160000000045807e-06, 1.9300000000110895e-06, 1.6390000000116034e-06, 1.541999999993271e-06, 1.777999999993951e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.7079999999891626e-06, 1.52800000000064e-06, 1.8470000000131437e-06, 2.000000000002e-06, 1.4719999999884825e-06]</msg>
<status status="PASS" starttime="20201112 09:42:42.177" endtime="20201112 09:42:42.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.172" endtime="20201112 09:42:42.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.181" endtime="20201112 09:42:42.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.185" endtime="20201112 09:42:42.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.183" endtime="20201112 09:42:42.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.179" endtime="20201112 09:42:42.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.811" endtime="20201112 09:42:42.206"></status>
</kw>
<msg timestamp="20201112 09:42:42.206" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.213" endtime="20201112 09:42:42.223"></status>
</kw>
<msg timestamp="20201112 09:42:42.224" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.212" endtime="20201112 09:42:42.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.226" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.225" endtime="20201112 09:42:42.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.227" endtime="20201112 09:42:42.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.209" endtime="20201112 09:42:42.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.208" endtime="20201112 09:42:42.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.236" endtime="20201112 09:42:42.502"></status>
</kw>
<msg timestamp="20201112 09:42:42.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018355556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.235" endtime="20201112 09:42:42.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018355556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.505" endtime="20201112 09:42:42.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.510" endtime="20201112 09:42:42.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.232" endtime="20201112 09:42:42.512"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.230" endtime="20201112 09:42:42.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.516" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.515" endtime="20201112 09:42:42.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.520" level="INFO">VALUE: [{'time': 0.018355556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018357278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018359111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018360819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.01836275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018364444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018365972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018367444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018368917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018370514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018372556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018374097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5409999999972668e-06, 'source_diff': 1.5409999999972668e-06}, {'time': 0.018376111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018377819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018379639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018381292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018383056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018384958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018386542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018388361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018390278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018391972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.0183935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018395444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018397111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018399111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018400819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018402458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018403931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018405861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.0184075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018408972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018410972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018412708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018414653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018416583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018418611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018420194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018423528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018425264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018426972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018428806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018430361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018432167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018434139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018435917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018437944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018439653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018441528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:42.517" endtime="20201112 09:42:42.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.513" endtime="20201112 09:42:42.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.535" level="INFO">${debug-compressed} = {'time': [0.018355556, 0.018357278, 0.018359111, 0.018360819, 0.01836275, 0.018364444, 0.018365972, 0.018367444, 0.018368917, 0.018370514, 0.018372556, 0.018374097, 0.018376111, 0.018377819, 0.0183796...</msg>
<status status="PASS" starttime="20201112 09:42:42.522" endtime="20201112 09:42:42.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.539" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.538" endtime="20201112 09:42:42.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.542" level="INFO">VALUE: {'time': [0.018355556, 0.018357278, 0.018359111, 0.018360819, 0.01836275, 0.018364444, 0.018365972, 0.018367444, 0.018368917, 0.018370514, 0.018372556, 0.018374097, 0.018376111, 0.018377819, 0.018379639, 0.018381292, 0.018383056, 0.018384958, 0.018386542, 0.018388361, 0.018390278, 0.018391972, 0.0183935, 0.018395444, 0.018397111, 0.018399111, 0.018400819, 0.018402458, 0.018403931, 0.018405861, 0.0184075, 0.018408972, 0.018410972, 0.018412708, 0.018414653, 0.018416583, 0.018418611, 0.018420194, 0.018421764, 0.018423528, 0.018425264, 0.018426972, 0.018428806, 0.018430361, 0.018432167, 0.018434139, 0.018435917, 0.018437944, 0.018439653, 0.018441528], 'source_diff': [0, 1.7220000000026103e-06, 1.832999999999696e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.4729999999983645e-06, 1.5970000000024853e-06, 2.04200000000071e-06, 1.5409999999972668e-06, 2.01400000000157e-06, 1.707999999999571e-06, 1.8199999999995997e-06, 1.653000000000765e-06, 1.7639999999978506e-06, 1.9020000000015413e-06, 1.5839999999989196e-06, 1.819000000000126e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.6670000000003349e-06, 1.9999999999985307e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.4729999999983645e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.4719999999988909e-06, 2.000000000002e-06, 1.7359999999987108e-06, 1.9449999999997247e-06, 1.930000000000681e-06, 2.02800000000114e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.8339999999991696e-06, 1.5550000000003061e-06, 1.8060000000000298e-06, 1.971999999999391e-06, 1.77800000000089e-06, 2.0270000000016664e-06, 1.7089999999990446e-06, 1.8749999999984057e-06], 'sourcediff': [0, 1.7220000000026103e-06, 1.832999999999696e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.4729999999983645e-06, 1.5970000000024853e-06, 2.04200000000071e-06, 1.5409999999972668e-06, 2.01400000000157e-06, 1.707999999999571e-06, 1.8199999999995997e-06, 1.653000000000765e-06, 1.7639999999978506e-06, 1.9020000000015413e-06, 1.5839999999989196e-06, 1.819000000000126e-06, 1.917000000000585e-06, 1.694000000000001e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.6670000000003349e-06, 1.9999999999985307e-06, 1.707999999999571e-06, 1.639000000001195e-06, 1.4729999999983645e-06, 1.930000000000681e-06, 1.639000000001195e-06, 1.4719999999988909e-06, 2.000000000002e-06, 1.7359999999987108e-06, 1.9449999999997247e-06, 1.930000000000681e-06, 2.02800000000114e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.76400000000132e-06, 1.7359999999987108e-06, 1.707999999999571e-06, 1.8339999999991696e-06, 1.5550000000003061e-06, 1.8060000000000298e-06, 1.971999999999391e-06, 1.77800000000089e-06, 2.0270000000016664e-06, 1.7089999999990446e-06, 1.8749999999984057e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:42.540" endtime="20201112 09:42:42.542"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.536" endtime="20201112 09:42:42.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.546" level="INFO">${RESULT} = [{'time': 0.018357278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018360819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:42.543" endtime="20201112 09:42:42.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.555" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018357278, 0.018360819, 0.018364444, 0.018367444, 0.018370514, 0.018374097, 0.018377819, 0.018381292, 0.018384958, 0.018388361, 0.018391972, 0.018395444, 0.018399111, 0.018402458, 0.018405...</msg>
<status status="PASS" starttime="20201112 09:42:42.547" endtime="20201112 09:42:42.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.559" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.558" endtime="20201112 09:42:42.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.562" level="INFO">VALUE: [1.7220000000026103e-06, 1.707999999999571e-06, 1.694000000000001e-06, 1.4719999999988909e-06, 1.5970000000024853e-06, 1.5409999999972668e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.9020000000015413e-06, 1.819000000000126e-06, 1.694000000000001e-06, 1.944000000000251e-06, 1.9999999999985307e-06, 1.639000000001195e-06, 1.930000000000681e-06, 1.4719999999988909e-06, 1.7359999999987108e-06, 1.930000000000681e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.707999999999571e-06, 1.5550000000003061e-06, 1.971999999999391e-06, 2.0270000000016664e-06, 1.8749999999984057e-06]</msg>
<status status="PASS" starttime="20201112 09:42:42.561" endtime="20201112 09:42:42.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.556" endtime="20201112 09:42:42.563"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.565" endtime="20201112 09:42:42.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.569" endtime="20201112 09:42:42.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.567" endtime="20201112 09:42:42.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.563" endtime="20201112 09:42:42.589"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.206" endtime="20201112 09:42:42.589"></status>
</kw>
<msg timestamp="20201112 09:42:42.589" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.597" endtime="20201112 09:42:42.606"></status>
</kw>
<msg timestamp="20201112 09:42:42.606" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.595" endtime="20201112 09:42:42.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.607" endtime="20201112 09:42:42.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.609" endtime="20201112 09:42:42.611"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.593" endtime="20201112 09:42:42.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.591" endtime="20201112 09:42:42.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.619" endtime="20201112 09:42:42.888"></status>
</kw>
<msg timestamp="20201112 09:42:42.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017994917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.618" endtime="20201112 09:42:42.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017994917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:42.891" endtime="20201112 09:42:42.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.896" endtime="20201112 09:42:42.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.614" endtime="20201112 09:42:42.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.613" endtime="20201112 09:42:42.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.903" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:42.902" endtime="20201112 09:42:42.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.906" level="INFO">VALUE: [{'time': 0.017994917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017996722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.017998472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018000264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7919999999969904e-06, 'source_diff': 1.7919999999969904e-06}, {'time': 0.018001736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018003597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.0180055, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018007153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018009181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018011139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018013194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.018015194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018017028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018018556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018020028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018021972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018023958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018025694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018027306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018029069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.018031056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.018032611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.01803425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018035806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018037625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018039083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018040653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018042653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018044528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018046458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018048042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.01804975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018051681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018053472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018055389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018056861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018058458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.01806025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018062, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018063958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018065597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018067403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018069167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018071111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018072875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018074472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018076042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018078028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018079736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018081556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:42.904" endtime="20201112 09:42:42.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.899" endtime="20201112 09:42:42.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:42.921" level="INFO">${debug-compressed} = {'time': [0.017994917, 0.017996722, 0.017998472, 0.018000264, 0.018001736, 0.018003597, 0.0180055, 0.018007153, 0.018009181, 0.018011139, 0.018013194, 0.018015194, 0.018017028, 0.018018556, 0.01802002...</msg>
<status status="PASS" starttime="20201112 09:42:42.908" endtime="20201112 09:42:42.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.925" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:42.924" endtime="20201112 09:42:42.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.928" level="INFO">VALUE: {'time': [0.017994917, 0.017996722, 0.017998472, 0.018000264, 0.018001736, 0.018003597, 0.0180055, 0.018007153, 0.018009181, 0.018011139, 0.018013194, 0.018015194, 0.018017028, 0.018018556, 0.018020028, 0.018021972, 0.018023958, 0.018025694, 0.018027306, 0.018029069, 0.018031056, 0.018032611, 0.01803425, 0.018035806, 0.018037625, 0.018039083, 0.018040653, 0.018042653, 0.018044528, 0.018046458, 0.018048042, 0.01804975, 0.018051681, 0.018053472, 0.018055389, 0.018056861, 0.018058458, 0.01806025, 0.018062, 0.018063958, 0.018065597, 0.018067403, 0.018069167, 0.018071111, 0.018072875, 0.018074472, 0.018076042, 0.018078028, 0.018079736, 0.018081556], 'source_diff': [0, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7919999999969904e-06, 1.4720000000023603e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.653000000000765e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 2.055000000000806e-06, 2.000000000002e-06, 1.8339999999991696e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.944000000000251e-06, 1.985999999998961e-06, 1.7359999999987108e-06, 1.6120000000015289e-06, 1.7630000000018464e-06, 1.9869999999984345e-06, 1.5550000000003061e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.819000000000126e-06, 1.457999999999321e-06, 1.5699999999993497e-06, 1.9999999999985307e-06, 1.8750000000018752e-06, 1.930000000000681e-06, 1.5839999999989196e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.7910000000009862e-06, 1.917000000000585e-06, 1.4719999999988909e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.957999999999821e-06, 1.6389999999977256e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.944000000000251e-06, 1.7639999999978506e-06, 1.5970000000024853e-06, 1.5699999999993497e-06, 1.985999999998961e-06, 1.707999999999571e-06, 1.8199999999995997e-06], 'sourcediff': [0, 1.8050000000005562e-06, 1.7500000000017502e-06, 1.7919999999969904e-06, 1.4720000000023603e-06, 1.8609999999988358e-06, 1.903000000001015e-06, 1.653000000000765e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 2.055000000000806e-06, 2.000000000002e-06, 1.8339999999991696e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.944000000000251e-06, 1.985999999998961e-06, 1.7359999999987108e-06, 1.6120000000015289e-06, 1.7630000000018464e-06, 1.9869999999984345e-06, 1.5550000000003061e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.819000000000126e-06, 1.457999999999321e-06, 1.5699999999993497e-06, 1.9999999999985307e-06, 1.8750000000018752e-06, 1.930000000000681e-06, 1.5839999999989196e-06, 1.707999999999571e-06, 1.931000000000155e-06, 1.7910000000009862e-06, 1.917000000000585e-06, 1.4719999999988909e-06, 1.5969999999990159e-06, 1.7920000000004599e-06, 1.7500000000017502e-06, 1.957999999999821e-06, 1.6389999999977256e-06, 1.8060000000000298e-06, 1.76400000000132e-06, 1.944000000000251e-06, 1.7639999999978506e-06, 1.5970000000024853e-06, 1.5699999999993497e-06, 1.985999999998961e-06, 1.707999999999571e-06, 1.8199999999995997e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:42.926" endtime="20201112 09:42:42.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.922" endtime="20201112 09:42:42.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:42.932" level="INFO">${RESULT} = [{'time': 0.017996722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018000264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:42.930" endtime="20201112 09:42:42.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:42.940" level="INFO">${GPIO_OVERHEAD} = {'time': [0.017996722, 0.018000264, 0.018003597, 0.018007153, 0.018011139, 0.018015194, 0.018018556, 0.018021972, 0.018025694, 0.018029069, 0.018032611, 0.018035806, 0.018039083, 0.018042653, 0.018046...</msg>
<status status="PASS" starttime="20201112 09:42:42.933" endtime="20201112 09:42:42.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.944" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:42.943" endtime="20201112 09:42:42.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.947" level="INFO">VALUE: [1.8050000000005562e-06, 1.7919999999969904e-06, 1.8609999999988358e-06, 1.653000000000765e-06, 1.957999999999821e-06, 2.000000000002e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.7359999999987108e-06, 1.7630000000018464e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.457999999999321e-06, 1.9999999999985307e-06, 1.930000000000681e-06, 1.707999999999571e-06, 1.7910000000009862e-06, 1.4719999999988909e-06, 1.7920000000004599e-06, 1.957999999999821e-06, 1.8060000000000298e-06, 1.944000000000251e-06, 1.5970000000024853e-06, 1.985999999998961e-06, 1.8199999999995997e-06]</msg>
<status status="PASS" starttime="20201112 09:42:42.945" endtime="20201112 09:42:42.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.941" endtime="20201112 09:42:42.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.950" endtime="20201112 09:42:42.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:42.953" endtime="20201112 09:42:42.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.952" endtime="20201112 09:42:42.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.948" endtime="20201112 09:42:42.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.590" endtime="20201112 09:42:42.974"></status>
</kw>
<msg timestamp="20201112 09:42:42.974" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.982" endtime="20201112 09:42:42.992"></status>
</kw>
<msg timestamp="20201112 09:42:42.993" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.980" endtime="20201112 09:42:42.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:42.995" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:42.994" endtime="20201112 09:42:42.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:42.996" endtime="20201112 09:42:42.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.978" endtime="20201112 09:42:42.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.976" endtime="20201112 09:42:42.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.005" endtime="20201112 09:42:43.274"></status>
</kw>
<msg timestamp="20201112 09:42:43.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019012778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.004" endtime="20201112 09:42:43.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019012778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.277" endtime="20201112 09:42:43.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.282" endtime="20201112 09:42:43.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.001" endtime="20201112 09:42:43.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.000" endtime="20201112 09:42:43.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.289" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.288" endtime="20201112 09:42:43.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.293" level="INFO">VALUE: [{'time': 0.019012778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019014639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019016514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.019018194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.019019722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019021611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019023514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019025097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.019026819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019028514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019030125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019032042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019033819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.019035458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.019037097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019039139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.019040569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019042472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.019044222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019045708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.019047569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019049319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.019051056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.019052833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.019054569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.019056014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.019057972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019059528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019061444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.019063333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.019065389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.019067208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019068986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019070694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019072528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.019074472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019076444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.019078361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.019080194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8330000000031654e-06, 'source_diff': 1.8330000000031654e-06}, {'time': 0.019081736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5419999999967404e-06, 'source_diff': 1.5419999999967404e-06}, {'time': 0.019083292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.019084903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.019086361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.019087944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019089528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.019091042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019092792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019094778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.0190965, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019098028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:43.290" endtime="20201112 09:42:43.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.285" endtime="20201112 09:42:43.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.308" level="INFO">${debug-compressed} = {'time': [0.019012778, 0.019014639, 0.019016514, 0.019018194, 0.019019722, 0.019021611, 0.019023514, 0.019025097, 0.019026819, 0.019028514, 0.019030125, 0.019032042, 0.019033819, 0.019035458, 0.019037...</msg>
<status status="PASS" starttime="20201112 09:42:43.295" endtime="20201112 09:42:43.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.312" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.311" endtime="20201112 09:42:43.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.315" level="INFO">VALUE: {'time': [0.019012778, 0.019014639, 0.019016514, 0.019018194, 0.019019722, 0.019021611, 0.019023514, 0.019025097, 0.019026819, 0.019028514, 0.019030125, 0.019032042, 0.019033819, 0.019035458, 0.019037097, 0.019039139, 0.019040569, 0.019042472, 0.019044222, 0.019045708, 0.019047569, 0.019049319, 0.019051056, 0.019052833, 0.019054569, 0.019056014, 0.019057972, 0.019059528, 0.019061444, 0.019063333, 0.019065389, 0.019067208, 0.019068986, 0.019070694, 0.019072528, 0.019074472, 0.019076444, 0.019078361, 0.019080194, 0.019081736, 0.019083292, 0.019084903, 0.019086361, 0.019087944, 0.019089528, 0.019091042, 0.019092792, 0.019094778, 0.0190965, 0.019098028], 'source_diff': [0, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.6799999999969617e-06, 1.52800000000064e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.5830000000029154e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.6109999999985858e-06, 1.917000000000585e-06, 1.7770000000014163e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 2.04200000000071e-06, 1.4300000000001811e-06, 1.903000000001015e-06, 1.7499999999982807e-06, 1.4860000000019302e-06, 1.8609999999988358e-06, 1.7499999999982807e-06, 1.7370000000016539e-06, 1.7770000000014163e-06, 1.7359999999987108e-06, 1.4449999999992247e-06, 1.957999999999821e-06, 1.5559999999997798e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 2.05600000000028e-06, 1.819000000000126e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.8339999999991696e-06, 1.944000000000251e-06, 1.9720000000028604e-06, 1.9169999999971155e-06, 1.8330000000031654e-06, 1.5419999999967404e-06, 1.5560000000032492e-06, 1.6109999999985858e-06, 1.457999999999321e-06, 1.582999999999446e-06, 1.584000000002389e-06, 1.5139999999976006e-06, 1.7500000000017502e-06, 1.985999999998961e-06, 1.7219999999991409e-06, 1.52800000000064e-06], 'sourcediff': [0, 1.8609999999988358e-06, 1.8750000000018752e-06, 1.6799999999969617e-06, 1.52800000000064e-06, 1.889000000001445e-06, 1.9029999999975455e-06, 1.5830000000029154e-06, 1.7219999999991409e-06, 1.6949999999994747e-06, 1.6109999999985858e-06, 1.917000000000585e-06, 1.7770000000014163e-06, 1.639000000001195e-06, 1.6389999999977256e-06, 2.04200000000071e-06, 1.4300000000001811e-06, 1.903000000001015e-06, 1.7499999999982807e-06, 1.4860000000019302e-06, 1.8609999999988358e-06, 1.7499999999982807e-06, 1.7370000000016539e-06, 1.7770000000014163e-06, 1.7359999999987108e-06, 1.4449999999992247e-06, 1.957999999999821e-06, 1.5559999999997798e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 2.05600000000028e-06, 1.819000000000126e-06, 1.77800000000089e-06, 1.707999999999571e-06, 1.8339999999991696e-06, 1.944000000000251e-06, 1.9720000000028604e-06, 1.9169999999971155e-06, 1.8330000000031654e-06, 1.5419999999967404e-06, 1.5560000000032492e-06, 1.6109999999985858e-06, 1.457999999999321e-06, 1.582999999999446e-06, 1.584000000002389e-06, 1.5139999999976006e-06, 1.7500000000017502e-06, 1.985999999998961e-06, 1.7219999999991409e-06, 1.52800000000064e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:43.313" endtime="20201112 09:42:43.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.309" endtime="20201112 09:42:43.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.319" level="INFO">${RESULT} = [{'time': 0.019014639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019018194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:43.317" endtime="20201112 09:42:43.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.327" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019014639, 0.019018194, 0.019021611, 0.019025097, 0.019028514, 0.019032042, 0.019035458, 0.019039139, 0.019042472, 0.019045708, 0.019049319, 0.019052833, 0.019056014, 0.019059528, 0.019063...</msg>
<status status="PASS" starttime="20201112 09:42:43.320" endtime="20201112 09:42:43.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.331" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.330" endtime="20201112 09:42:43.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.334" level="INFO">VALUE: [1.8609999999988358e-06, 1.6799999999969617e-06, 1.889000000001445e-06, 1.5830000000029154e-06, 1.6949999999994747e-06, 1.917000000000585e-06, 1.639000000001195e-06, 2.04200000000071e-06, 1.903000000001015e-06, 1.4860000000019302e-06, 1.7499999999982807e-06, 1.7770000000014163e-06, 1.4449999999992247e-06, 1.5559999999997798e-06, 1.8889999999979756e-06, 1.819000000000126e-06, 1.707999999999571e-06, 1.944000000000251e-06, 1.9169999999971155e-06, 1.5419999999967404e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.5139999999976006e-06, 1.985999999998961e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201112 09:42:43.332" endtime="20201112 09:42:43.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.328" endtime="20201112 09:42:43.335"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.337" endtime="20201112 09:42:43.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.341" endtime="20201112 09:42:43.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.339" endtime="20201112 09:42:43.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.336" endtime="20201112 09:42:43.361"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:42.975" endtime="20201112 09:42:43.361"></status>
</kw>
<msg timestamp="20201112 09:42:43.361" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.370" endtime="20201112 09:42:43.380"></status>
</kw>
<msg timestamp="20201112 09:42:43.380" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.368" endtime="20201112 09:42:43.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.383" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.381" endtime="20201112 09:42:43.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.384" endtime="20201112 09:42:43.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.365" endtime="20201112 09:42:43.386"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.363" endtime="20201112 09:42:43.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.393" endtime="20201112 09:42:43.657"></status>
</kw>
<msg timestamp="20201112 09:42:43.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019079319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.391" endtime="20201112 09:42:43.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019079319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.660" endtime="20201112 09:42:43.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.665" endtime="20201112 09:42:43.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.389" endtime="20201112 09:42:43.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.387" endtime="20201112 09:42:43.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.672" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:43.671" endtime="20201112 09:42:43.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.675" level="INFO">VALUE: [{'time': 0.019077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019079319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019080958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.019082875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019084889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019086944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.055000000000806e-06, 'source_diff': 2.055000000000806e-06}, {'time': 0.019088806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8619999999983095e-06, 'source_diff': 1.8619999999983095e-06}, {'time': 0.019090569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7630000000018464e-06, 'source_diff': 1.7630000000018464e-06}, {'time': 0.019092389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019094014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.01909575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019097681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9309999999966854e-06, 'source_diff': 1.9309999999966854e-06}, {'time': 0.019099542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019101444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.901999999998072e-06, 'source_diff': 1.901999999998072e-06}, {'time': 0.019103194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.019105153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.019106778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.01910875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019110597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019112444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019114139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019115667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019117681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019119625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.01912125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019122917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.019124431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019126292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.019127819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.019129347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019131125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.01913275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019134528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.019135958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.019137986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.019139944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019141653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.019143306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.019144958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.019146667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.019148458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.019150431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.01915225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019153681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.019155542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019157139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019158667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.019160639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019162236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019164236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:43.673" endtime="20201112 09:42:43.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.668" endtime="20201112 09:42:43.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:43.690" level="INFO">${debug-compressed} = {'time': [0.019077583, 0.019079319, 0.019080958, 0.019082875, 0.019084889, 0.019086944, 0.019088806, 0.019090569, 0.019092389, 0.019094014, 0.01909575, 0.019097681, 0.019099542, 0.019101444, 0.0191031...</msg>
<status status="PASS" starttime="20201112 09:42:43.678" endtime="20201112 09:42:43.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.694" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:43.693" endtime="20201112 09:42:43.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.697" level="INFO">VALUE: {'time': [0.019077583, 0.019079319, 0.019080958, 0.019082875, 0.019084889, 0.019086944, 0.019088806, 0.019090569, 0.019092389, 0.019094014, 0.01909575, 0.019097681, 0.019099542, 0.019101444, 0.019103194, 0.019105153, 0.019106778, 0.01910875, 0.019110597, 0.019112444, 0.019114139, 0.019115667, 0.019117681, 0.019119625, 0.01912125, 0.019122917, 0.019124431, 0.019126292, 0.019127819, 0.019129347, 0.019131125, 0.01913275, 0.019134528, 0.019135958, 0.019137986, 0.019139944, 0.019141653, 0.019143306, 0.019144958, 0.019146667, 0.019148458, 0.019150431, 0.01915225, 0.019153681, 0.019155542, 0.019157139, 0.019158667, 0.019160639, 0.019162236, 0.019164236], 'source_diff': [0, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.917000000000585e-06, 2.01400000000157e-06, 2.055000000000806e-06, 1.8619999999983095e-06, 1.7630000000018464e-06, 1.8199999999995997e-06, 1.6249999999981557e-06, 1.7360000000021802e-06, 1.9309999999966854e-06, 1.8610000000023053e-06, 1.901999999998072e-06, 1.7500000000017502e-06, 1.9589999999992946e-06, 1.6250000000016251e-06, 1.971999999999391e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.6949999999994747e-06, 1.52800000000064e-06, 2.01400000000157e-06, 1.944000000000251e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.7779999999974205e-06, 1.6250000000016251e-06, 1.77800000000089e-06, 1.4300000000001811e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 1.709000000002514e-06, 1.6529999999972955e-06, 1.6520000000012913e-06, 1.7089999999990446e-06, 1.7910000000009862e-06, 1.9729999999988646e-06, 1.819000000000126e-06, 1.4309999999996548e-06, 1.8610000000023053e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.971999999999391e-06, 1.5969999999990159e-06, 2.000000000002e-06], 'sourcediff': [0, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.917000000000585e-06, 2.01400000000157e-06, 2.055000000000806e-06, 1.8619999999983095e-06, 1.7630000000018464e-06, 1.8199999999995997e-06, 1.6249999999981557e-06, 1.7360000000021802e-06, 1.9309999999966854e-06, 1.8610000000023053e-06, 1.901999999998072e-06, 1.7500000000017502e-06, 1.9589999999992946e-06, 1.6250000000016251e-06, 1.971999999999391e-06, 1.846999999999266e-06, 1.846999999999266e-06, 1.6949999999994747e-06, 1.52800000000064e-06, 2.01400000000157e-06, 1.944000000000251e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.51400000000107e-06, 1.8609999999988358e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.7779999999974205e-06, 1.6250000000016251e-06, 1.77800000000089e-06, 1.4300000000001811e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 1.709000000002514e-06, 1.6529999999972955e-06, 1.6520000000012913e-06, 1.7089999999990446e-06, 1.7910000000009862e-06, 1.9729999999988646e-06, 1.819000000000126e-06, 1.4309999999996548e-06, 1.8610000000023053e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.971999999999391e-06, 1.5969999999990159e-06, 2.000000000002e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:43.695" endtime="20201112 09:42:43.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.691" endtime="20201112 09:42:43.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:43.701" level="INFO">${RESULT} = [{'time': 0.019079319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019082875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:43.699" endtime="20201112 09:42:43.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:43.710" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019079319, 0.019082875, 0.019086944, 0.019090569, 0.019094014, 0.019097681, 0.019101444, 0.019105153, 0.01910875, 0.019112444, 0.019115667, 0.019119625, 0.019122917, 0.019126292, 0.0191293...</msg>
<status status="PASS" starttime="20201112 09:42:43.702" endtime="20201112 09:42:43.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.714" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:43.713" endtime="20201112 09:42:43.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.717" level="INFO">VALUE: [1.7360000000021802e-06, 1.917000000000585e-06, 2.055000000000806e-06, 1.7630000000018464e-06, 1.6249999999981557e-06, 1.9309999999966854e-06, 1.901999999998072e-06, 1.9589999999992946e-06, 1.971999999999391e-06, 1.846999999999266e-06, 1.52800000000064e-06, 1.944000000000251e-06, 1.6670000000003349e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.6250000000016251e-06, 1.4300000000001811e-06, 1.957999999999821e-06, 1.6529999999972955e-06, 1.7089999999990446e-06, 1.9729999999988646e-06, 1.4309999999996548e-06, 1.5969999999990159e-06, 1.971999999999391e-06, 2.000000000002e-06]</msg>
<status status="PASS" starttime="20201112 09:42:43.715" endtime="20201112 09:42:43.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.711" endtime="20201112 09:42:43.718"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.720" endtime="20201112 09:42:43.721"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:43.723" endtime="20201112 09:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.722" endtime="20201112 09:42:43.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.718" endtime="20201112 09:42:43.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.362" endtime="20201112 09:42:43.744"></status>
</kw>
<msg timestamp="20201112 09:42:43.744" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.752" endtime="20201112 09:42:43.762"></status>
</kw>
<msg timestamp="20201112 09:42:43.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.751" endtime="20201112 09:42:43.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:43.765" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:43.764" endtime="20201112 09:42:43.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.766" endtime="20201112 09:42:43.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.748" endtime="20201112 09:42:43.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.746" endtime="20201112 09:42:43.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:43.775" endtime="20201112 09:42:44.043"></status>
</kw>
<msg timestamp="20201112 09:42:44.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018818986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:43.773" endtime="20201112 09:42:44.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018818986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.046" endtime="20201112 09:42:44.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.052" endtime="20201112 09:42:44.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.771" endtime="20201112 09:42:44.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.769" endtime="20201112 09:42:44.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.058" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.057" endtime="20201112 09:42:44.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.061" level="INFO">VALUE: [{'time': 0.018818986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018820653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018822653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018824181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018826181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018827847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018829347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018830986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018832569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018834472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018836278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.01883775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018839597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018841611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018843292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018845097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018847097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018848611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018850167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018851903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018853403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018856458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018857972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018859694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018861486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018863292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018865292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018867014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018868569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018870069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018872056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.987000000001904e-06, 'source_diff': 1.987000000001904e-06}, {'time': 0.018873847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.01887575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018877333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018878917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018880542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018882167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018883986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018885653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018887597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018889333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018890944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018892847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018894556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018896486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018898056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018899764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018901667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018903556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:44.059" endtime="20201112 09:42:44.062"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.055" endtime="20201112 09:42:44.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.076" level="INFO">${debug-compressed} = {'time': [0.018818986, 0.018820653, 0.018822653, 0.018824181, 0.018826181, 0.018827847, 0.018829347, 0.018830986, 0.018832569, 0.018834472, 0.018836278, 0.01883775, 0.018839597, 0.018841611, 0.0188432...</msg>
<status status="PASS" starttime="20201112 09:42:44.064" endtime="20201112 09:42:44.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.080" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.079" endtime="20201112 09:42:44.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.083" level="INFO">VALUE: {'time': [0.018818986, 0.018820653, 0.018822653, 0.018824181, 0.018826181, 0.018827847, 0.018829347, 0.018830986, 0.018832569, 0.018834472, 0.018836278, 0.01883775, 0.018839597, 0.018841611, 0.018843292, 0.018845097, 0.018847097, 0.018848611, 0.018850167, 0.018851903, 0.018853403, 0.018855, 0.018856458, 0.018857972, 0.018859694, 0.018861486, 0.018863292, 0.018865292, 0.018867014, 0.018868569, 0.018870069, 0.018872056, 0.018873847, 0.01887575, 0.018877333, 0.018878917, 0.018880542, 0.018882167, 0.018883986, 0.018885653, 0.018887597, 0.018889333, 0.018890944, 0.018892847, 0.018894556, 0.018896486, 0.018898056, 0.018899764, 0.018901667, 0.018903556], 'source_diff': [0, 1.6670000000003349e-06, 2.000000000002e-06, 1.5279999999971705e-06, 2.000000000002e-06, 1.6660000000008612e-06, 1.4999999999980307e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.903000000001015e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.846999999999266e-06, 2.01400000000157e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.9999999999985307e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.7359999999987108e-06, 1.5000000000015001e-06, 1.5969999999990159e-06, 1.457999999999321e-06, 1.51400000000107e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.8060000000000298e-06, 1.9999999999985307e-06, 1.7220000000026103e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.987000000001904e-06, 1.7909999999975168e-06, 1.903000000001015e-06, 1.582999999999446e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.944000000000251e-06, 1.7360000000021802e-06, 1.6109999999985858e-06, 1.903000000001015e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.5699999999993497e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.8889999999979756e-06], 'sourcediff': [0, 1.6670000000003349e-06, 2.000000000002e-06, 1.5279999999971705e-06, 2.000000000002e-06, 1.6660000000008612e-06, 1.4999999999980307e-06, 1.639000000001195e-06, 1.582999999999446e-06, 1.903000000001015e-06, 1.8060000000000298e-06, 1.4719999999988909e-06, 1.846999999999266e-06, 2.01400000000157e-06, 1.6809999999999048e-06, 1.8050000000005562e-06, 1.9999999999985307e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.7359999999987108e-06, 1.5000000000015001e-06, 1.5969999999990159e-06, 1.457999999999321e-06, 1.51400000000107e-06, 1.7219999999991409e-06, 1.7920000000004599e-06, 1.8060000000000298e-06, 1.9999999999985307e-06, 1.7220000000026103e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.987000000001904e-06, 1.7909999999975168e-06, 1.903000000001015e-06, 1.582999999999446e-06, 1.5839999999989196e-06, 1.6250000000016251e-06, 1.6249999999981557e-06, 1.819000000000126e-06, 1.6670000000003349e-06, 1.944000000000251e-06, 1.7360000000021802e-06, 1.6109999999985858e-06, 1.903000000001015e-06, 1.7089999999990446e-06, 1.930000000000681e-06, 1.5699999999993497e-06, 1.707999999999571e-06, 1.903000000001015e-06, 1.8889999999979756e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:44.081" endtime="20201112 09:42:44.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.077" endtime="20201112 09:42:44.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.088" level="INFO">${RESULT} = [{'time': 0.018820653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018824181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:44.085" endtime="20201112 09:42:44.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.095" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018820653, 0.018824181, 0.018827847, 0.018830986, 0.018834472, 0.01883775, 0.018841611, 0.018845097, 0.018848611, 0.018851903, 0.018855, 0.018857972, 0.018861486, 0.018865292, 0.018868569,...</msg>
<status status="PASS" starttime="20201112 09:42:44.089" endtime="20201112 09:42:44.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.100" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.099" endtime="20201112 09:42:44.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.102" level="INFO">VALUE: [1.6670000000003349e-06, 1.5279999999971705e-06, 1.6660000000008612e-06, 1.639000000001195e-06, 1.903000000001015e-06, 1.4719999999988909e-06, 2.01400000000157e-06, 1.8050000000005562e-06, 1.51400000000107e-06, 1.7359999999987108e-06, 1.5969999999990159e-06, 1.51400000000107e-06, 1.7920000000004599e-06, 1.9999999999985307e-06, 1.5550000000003061e-06, 1.987000000001904e-06, 1.903000000001015e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.6670000000003349e-06, 1.7360000000021802e-06, 1.903000000001015e-06, 1.930000000000681e-06, 1.707999999999571e-06, 1.8889999999979756e-06]</msg>
<status status="PASS" starttime="20201112 09:42:44.101" endtime="20201112 09:42:44.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.096" endtime="20201112 09:42:44.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.105" endtime="20201112 09:42:44.107"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.109" endtime="20201112 09:42:44.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.107" endtime="20201112 09:42:44.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.104" endtime="20201112 09:42:44.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:43.745" endtime="20201112 09:42:44.130"></status>
</kw>
<msg timestamp="20201112 09:42:44.130" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.138" endtime="20201112 09:42:44.148"></status>
</kw>
<msg timestamp="20201112 09:42:44.148" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.136" endtime="20201112 09:42:44.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.149" endtime="20201112 09:42:44.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.151" endtime="20201112 09:42:44.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.134" endtime="20201112 09:42:44.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.132" endtime="20201112 09:42:44.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.160" endtime="20201112 09:42:44.425"></status>
</kw>
<msg timestamp="20201112 09:42:44.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01836275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:44.159" endtime="20201112 09:42:44.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01836275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:42:44.428" endtime="20201112 09:42:44.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.433" endtime="20201112 09:42:44.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.156" endtime="20201112 09:42:44.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.155" endtime="20201112 09:42:44.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.440" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.439" endtime="20201112 09:42:44.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.443" level="INFO">VALUE: [{'time': 0.01836275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018364556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018366514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018368556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.018370111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018371944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018373819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018375333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018377014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018378542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018380153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018381944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018383931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9869999999984345e-06, 'source_diff': 1.9869999999984345e-06}, {'time': 0.018385931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.0183875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018389056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018390764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018392278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018394069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018395764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.01839725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018399083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018400931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018402861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018404792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018406708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018408472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018409944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4720000000023603e-06, 'source_diff': 1.4720000000023603e-06}, {'time': 0.018411597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018413222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.01841475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018416653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018418639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018420167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018421625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018423444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018425264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018426875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018428819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018430542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.018432042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018433569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5270000000011663e-06, 'source_diff': 1.5270000000011663e-06}, {'time': 0.018435056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4869999999979344e-06, 'source_diff': 1.4869999999979344e-06}, {'time': 0.018436847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018438569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018440111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018442111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018443597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018445306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018447125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:44.441" endtime="20201112 09:42:44.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.436" endtime="20201112 09:42:44.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.458" level="INFO">${debug-compressed} = {'time': [0.01836275, 0.018364556, 0.018366514, 0.018368556, 0.018370111, 0.018371944, 0.018373819, 0.018375333, 0.018377014, 0.018378542, 0.018380153, 0.018381944, 0.018383931, 0.018385931, 0.0183875...</msg>
<status status="PASS" starttime="20201112 09:42:44.445" endtime="20201112 09:42:44.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.462" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.461" endtime="20201112 09:42:44.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.465" level="INFO">VALUE: {'time': [0.01836275, 0.018364556, 0.018366514, 0.018368556, 0.018370111, 0.018371944, 0.018373819, 0.018375333, 0.018377014, 0.018378542, 0.018380153, 0.018381944, 0.018383931, 0.018385931, 0.0183875, 0.018389056, 0.018390764, 0.018392278, 0.018394069, 0.018395764, 0.01839725, 0.018399083, 0.018400931, 0.018402861, 0.018404792, 0.018406708, 0.018408472, 0.018409944, 0.018411597, 0.018413222, 0.01841475, 0.018416653, 0.018418639, 0.018420167, 0.018421625, 0.018423444, 0.018425264, 0.018426875, 0.018428819, 0.018430542, 0.018432042, 0.018433569, 0.018435056, 0.018436847, 0.018438569, 0.018440111, 0.018442111, 0.018443597, 0.018445306, 0.018447125], 'source_diff': [0, 1.8060000000000298e-06, 1.957999999999821e-06, 2.04200000000071e-06, 1.5550000000003061e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.6809999999999048e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.7910000000009862e-06, 1.9869999999984345e-06, 2.000000000002e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.707999999999571e-06, 1.51400000000107e-06, 1.7909999999975168e-06, 1.6949999999994747e-06, 1.4860000000019302e-06, 1.832999999999696e-06, 1.8479999999987395e-06, 1.930000000000681e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.7639999999978506e-06, 1.4720000000023603e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.52800000000064e-06, 1.903000000001015e-06, 1.985999999998961e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.723000000002084e-06, 1.4999999999980307e-06, 1.5270000000011663e-06, 1.4869999999979344e-06, 1.7910000000009862e-06, 1.7219999999991409e-06, 1.5420000000002099e-06, 2.000000000002e-06, 1.4859999999984608e-06, 1.709000000002514e-06, 1.819000000000126e-06], 'sourcediff': [0, 1.8060000000000298e-06, 1.957999999999821e-06, 2.04200000000071e-06, 1.5550000000003061e-06, 1.832999999999696e-06, 1.8749999999984057e-06, 1.51400000000107e-06, 1.6809999999999048e-06, 1.52800000000064e-06, 1.6109999999985858e-06, 1.7910000000009862e-06, 1.9869999999984345e-06, 2.000000000002e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.707999999999571e-06, 1.51400000000107e-06, 1.7909999999975168e-06, 1.6949999999994747e-06, 1.4860000000019302e-06, 1.832999999999696e-06, 1.8479999999987395e-06, 1.930000000000681e-06, 1.931000000000155e-06, 1.9160000000011113e-06, 1.7639999999978506e-06, 1.4720000000023603e-06, 1.6529999999972955e-06, 1.6250000000016251e-06, 1.52800000000064e-06, 1.903000000001015e-06, 1.985999999998961e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.819000000000126e-06, 1.8199999999995997e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.723000000002084e-06, 1.4999999999980307e-06, 1.5270000000011663e-06, 1.4869999999979344e-06, 1.7910000000009862e-06, 1.7219999999991409e-06, 1.5420000000002099e-06, 2.000000000002e-06, 1.4859999999984608e-06, 1.709000000002514e-06, 1.819000000000126e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:44.463" endtime="20201112 09:42:44.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.459" endtime="20201112 09:42:44.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.469" level="INFO">${RESULT} = [{'time': 0.018364556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018368556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:44.467" endtime="20201112 09:42:44.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.477" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018364556, 0.018368556, 0.018371944, 0.018375333, 0.018378542, 0.018381944, 0.018385931, 0.018389056, 0.018392278, 0.018395764, 0.018399083, 0.018402861, 0.018406708, 0.018409944, 0.018413...</msg>
<status status="PASS" starttime="20201112 09:42:44.470" endtime="20201112 09:42:44.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.482" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.481" endtime="20201112 09:42:44.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.484" level="INFO">VALUE: [1.8060000000000298e-06, 2.04200000000071e-06, 1.832999999999696e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.7910000000009862e-06, 2.000000000002e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.6949999999994747e-06, 1.832999999999696e-06, 1.930000000000681e-06, 1.9160000000011113e-06, 1.4720000000023603e-06, 1.6250000000016251e-06, 1.903000000001015e-06, 1.52800000000064e-06, 1.819000000000126e-06, 1.6109999999985858e-06, 1.723000000002084e-06, 1.5270000000011663e-06, 1.7910000000009862e-06, 1.5420000000002099e-06, 1.4859999999984608e-06, 1.819000000000126e-06]</msg>
<status status="PASS" starttime="20201112 09:42:44.483" endtime="20201112 09:42:44.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.478" endtime="20201112 09:42:44.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.487" endtime="20201112 09:42:44.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.491" endtime="20201112 09:42:44.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.489" endtime="20201112 09:42:44.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.486" endtime="20201112 09:42:44.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.131" endtime="20201112 09:42:44.511"></status>
</kw>
<msg timestamp="20201112 09:42:44.511" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.519" endtime="20201112 09:42:44.529"></status>
</kw>
<msg timestamp="20201112 09:42:44.530" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.518" endtime="20201112 09:42:44.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.532" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.531" endtime="20201112 09:42:44.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.533" endtime="20201112 09:42:44.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.515" endtime="20201112 09:42:44.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.513" endtime="20201112 09:42:44.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.542" endtime="20201112 09:42:44.808"></status>
</kw>
<msg timestamp="20201112 09:42:44.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018138972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.541" endtime="20201112 09:42:44.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018138972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.811" endtime="20201112 09:42:44.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.816" endtime="20201112 09:42:44.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.538" endtime="20201112 09:42:44.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.537" endtime="20201112 09:42:44.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.822" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:44.821" endtime="20201112 09:42:44.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.826" level="INFO">VALUE: [{'time': 0.018138972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018142528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018144, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018145694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018147583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018149181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018151153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018153028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018154694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018156153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018158417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2639999999983507e-06, 'source_diff': 2.2639999999983507e-06}, {'time': 0.018159889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018161903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018163889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018165347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018167097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018168681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018170639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018172444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018174264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018176042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018178028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018180056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018181694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6380000000017214e-06, 'source_diff': 1.6380000000017214e-06}, {'time': 0.018183556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8619999999983095e-06, 'source_diff': 1.8619999999983095e-06}, {'time': 0.018185292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018187319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018189, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018190833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018192611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018194208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018196069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018197806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7370000000016539e-06, 'source_diff': 1.7370000000016539e-06}, {'time': 0.018199556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018201556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018203542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018205236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018206819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018208569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018210514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018211958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018214042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0839999999994197e-06, 'source_diff': 2.0839999999994197e-06}, {'time': 0.0182155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018217167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018219167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018220736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018222222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018223944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018225875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:44.823" endtime="20201112 09:42:44.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.819" endtime="20201112 09:42:44.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:44.842" level="INFO">${debug-compressed} = {'time': [0.018138972, 0.018140653, 0.018142528, 0.018144, 0.018145694, 0.018147583, 0.018149181, 0.018151153, 0.018153028, 0.018154694, 0.018156153, 0.018158417, 0.018159889, 0.018161903, 0.018163889...</msg>
<status status="PASS" starttime="20201112 09:42:44.828" endtime="20201112 09:42:44.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.846" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:44.845" endtime="20201112 09:42:44.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.849" level="INFO">VALUE: {'time': [0.018138972, 0.018140653, 0.018142528, 0.018144, 0.018145694, 0.018147583, 0.018149181, 0.018151153, 0.018153028, 0.018154694, 0.018156153, 0.018158417, 0.018159889, 0.018161903, 0.018163889, 0.018165347, 0.018167097, 0.018168681, 0.018170639, 0.018172444, 0.018174264, 0.018176042, 0.018178028, 0.018180056, 0.018181694, 0.018183556, 0.018185292, 0.018187319, 0.018189, 0.018190833, 0.018192611, 0.018194208, 0.018196069, 0.018197806, 0.018199556, 0.018201556, 0.018203542, 0.018205236, 0.018206819, 0.018208569, 0.018210514, 0.018211958, 0.018214042, 0.0182155, 0.018217167, 0.018219167, 0.018220736, 0.018222222, 0.018223944, 0.018225875], 'source_diff': [0, 1.6809999999999048e-06, 1.8750000000018752e-06, 1.4719999999988909e-06, 1.694000000000001e-06, 1.8889999999979756e-06, 1.598000000001959e-06, 1.971999999999391e-06, 1.8750000000018752e-06, 1.6659999999973918e-06, 1.459000000002264e-06, 2.2639999999983507e-06, 1.4719999999988909e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.457999999999321e-06, 1.7500000000017502e-06, 1.5839999999989196e-06, 1.957999999999821e-06, 1.8050000000005562e-06, 1.8199999999995997e-06, 1.77800000000089e-06, 1.985999999998961e-06, 2.02800000000114e-06, 1.6380000000017214e-06, 1.8619999999983095e-06, 1.7359999999987108e-06, 2.0270000000016664e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.5969999999990159e-06, 1.8609999999988358e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.694000000000001e-06, 1.582999999999446e-06, 1.7500000000017502e-06, 1.9449999999997247e-06, 1.443999999999751e-06, 2.0839999999994197e-06, 1.457999999999321e-06, 1.6670000000003349e-06, 2.000000000002e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.7219999999991409e-06, 1.931000000000155e-06], 'sourcediff': [0, 1.6809999999999048e-06, 1.8750000000018752e-06, 1.4719999999988909e-06, 1.694000000000001e-06, 1.8889999999979756e-06, 1.598000000001959e-06, 1.971999999999391e-06, 1.8750000000018752e-06, 1.6659999999973918e-06, 1.459000000002264e-06, 2.2639999999983507e-06, 1.4719999999988909e-06, 2.01400000000157e-06, 1.985999999998961e-06, 1.457999999999321e-06, 1.7500000000017502e-06, 1.5839999999989196e-06, 1.957999999999821e-06, 1.8050000000005562e-06, 1.8199999999995997e-06, 1.77800000000089e-06, 1.985999999998961e-06, 2.02800000000114e-06, 1.6380000000017214e-06, 1.8619999999983095e-06, 1.7359999999987108e-06, 2.0270000000016664e-06, 1.6809999999999048e-06, 1.832999999999696e-06, 1.77800000000089e-06, 1.5969999999990159e-06, 1.8609999999988358e-06, 1.7370000000016539e-06, 1.7499999999982807e-06, 2.000000000002e-06, 1.985999999998961e-06, 1.694000000000001e-06, 1.582999999999446e-06, 1.7500000000017502e-06, 1.9449999999997247e-06, 1.443999999999751e-06, 2.0839999999994197e-06, 1.457999999999321e-06, 1.6670000000003349e-06, 2.000000000002e-06, 1.568999999999876e-06, 1.4859999999984608e-06, 1.7219999999991409e-06, 1.931000000000155e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:44.847" endtime="20201112 09:42:44.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.843" endtime="20201112 09:42:44.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:44.853" level="INFO">${RESULT} = [{'time': 0.018140653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018144, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:42:44.851" endtime="20201112 09:42:44.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:44.861" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018140653, 0.018144, 0.018147583, 0.018151153, 0.018154694, 0.018158417, 0.018161903, 0.018165347, 0.018168681, 0.018172444, 0.018176042, 0.018180056, 0.018183556, 0.018187319, 0.018190833...</msg>
<status status="PASS" starttime="20201112 09:42:44.854" endtime="20201112 09:42:44.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.865" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:44.864" endtime="20201112 09:42:44.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.867" level="INFO">VALUE: [1.6809999999999048e-06, 1.4719999999988909e-06, 1.8889999999979756e-06, 1.971999999999391e-06, 1.6659999999973918e-06, 2.2639999999983507e-06, 2.01400000000157e-06, 1.457999999999321e-06, 1.5839999999989196e-06, 1.8050000000005562e-06, 1.77800000000089e-06, 2.02800000000114e-06, 1.8619999999983095e-06, 2.0270000000016664e-06, 1.832999999999696e-06, 1.5969999999990159e-06, 1.7370000000016539e-06, 2.000000000002e-06, 1.694000000000001e-06, 1.7500000000017502e-06, 1.443999999999751e-06, 1.457999999999321e-06, 2.000000000002e-06, 1.4859999999984608e-06, 1.931000000000155e-06]</msg>
<status status="PASS" starttime="20201112 09:42:44.866" endtime="20201112 09:42:44.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.862" endtime="20201112 09:42:44.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.871" endtime="20201112 09:42:44.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:44.874" endtime="20201112 09:42:44.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.873" endtime="20201112 09:42:44.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.869" endtime="20201112 09:42:44.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.512" endtime="20201112 09:42:44.895"></status>
</kw>
<msg timestamp="20201112 09:42:44.895" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.903" endtime="20201112 09:42:44.912"></status>
</kw>
<msg timestamp="20201112 09:42:44.912" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.901" endtime="20201112 09:42:44.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:44.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:44.913" endtime="20201112 09:42:44.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.916" endtime="20201112 09:42:44.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.898" endtime="20201112 09:42:44.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.897" endtime="20201112 09:42:44.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:44.925" endtime="20201112 09:42:45.189"></status>
</kw>
<msg timestamp="20201112 09:42:45.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:44.923" endtime="20201112 09:42:45.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018465542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.192" endtime="20201112 09:42:45.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.197" endtime="20201112 09:42:45.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.921" endtime="20201112 09:42:45.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.919" endtime="20201112 09:42:45.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.205" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.204" endtime="20201112 09:42:45.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.208" level="INFO">VALUE: [{'time': 0.018465542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018468778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018470375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018472125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018473583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018475292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.018477208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.915999999997642e-06, 'source_diff': 1.915999999997642e-06}, {'time': 0.018478861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018480458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018482097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018484, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018485736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018487347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.01848925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018490958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018492556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018494181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018496208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018497958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018499778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.018501514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018503306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018505292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018506778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018508306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.018509875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018511556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018513333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018515125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018517139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018518681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018520556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.01852225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018523903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018525361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018527028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018528806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.018530458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018532431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.018533861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4300000000001811e-06, 'source_diff': 1.4300000000001811e-06}, {'time': 0.018535403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018536903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018538583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018540375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018542389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018544403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018546278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018547972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018549944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:45.206" endtime="20201112 09:42:45.209"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.201" endtime="20201112 09:42:45.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.223" level="INFO">${debug-compressed} = {'time': [0.018465542, 0.018467111, 0.018468778, 0.018470375, 0.018472125, 0.018473583, 0.018475292, 0.018477208, 0.018478861, 0.018480458, 0.018482097, 0.018484, 0.018485736, 0.018487347, 0.01848925,...</msg>
<status status="PASS" starttime="20201112 09:42:45.211" endtime="20201112 09:42:45.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.227" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.226" endtime="20201112 09:42:45.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.230" level="INFO">VALUE: {'time': [0.018465542, 0.018467111, 0.018468778, 0.018470375, 0.018472125, 0.018473583, 0.018475292, 0.018477208, 0.018478861, 0.018480458, 0.018482097, 0.018484, 0.018485736, 0.018487347, 0.01848925, 0.018490958, 0.018492556, 0.018494181, 0.018496208, 0.018497958, 0.018499778, 0.018501514, 0.018503306, 0.018505292, 0.018506778, 0.018508306, 0.018509875, 0.018511556, 0.018513333, 0.018515125, 0.018517139, 0.018518681, 0.018520556, 0.01852225, 0.018523903, 0.018525361, 0.018527028, 0.018528806, 0.018530458, 0.018532431, 0.018533861, 0.018535403, 0.018536903, 0.018538583, 0.018540375, 0.018542389, 0.018544403, 0.018546278, 0.018547972, 0.018549944], 'source_diff': [0, 1.568999999999876e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.7499999999982807e-06, 1.457999999999321e-06, 1.709000000002514e-06, 1.915999999997642e-06, 1.653000000000765e-06, 1.5970000000024853e-06, 1.6389999999977256e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.6110000000020552e-06, 1.9029999999975455e-06, 1.707999999999571e-06, 1.598000000001959e-06, 1.6249999999981557e-06, 2.0270000000016664e-06, 1.7499999999982807e-06, 1.8200000000030692e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.5279999999971705e-06, 1.568999999999876e-06, 1.6809999999999048e-06, 1.7770000000014163e-06, 1.7920000000004599e-06, 2.0139999999981006e-06, 1.5420000000002099e-06, 1.8750000000018752e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.457999999999321e-06, 1.6670000000003349e-06, 1.7779999999974205e-06, 1.6520000000012913e-06, 1.9729999999988646e-06, 1.4300000000001811e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 1.8749999999984057e-06, 1.694000000000001e-06, 1.971999999999391e-06], 'sourcediff': [0, 1.568999999999876e-06, 1.6670000000003349e-06, 1.5969999999990159e-06, 1.7499999999982807e-06, 1.457999999999321e-06, 1.709000000002514e-06, 1.915999999997642e-06, 1.653000000000765e-06, 1.5970000000024853e-06, 1.6389999999977256e-06, 1.903000000001015e-06, 1.7359999999987108e-06, 1.6110000000020552e-06, 1.9029999999975455e-06, 1.707999999999571e-06, 1.598000000001959e-06, 1.6249999999981557e-06, 2.0270000000016664e-06, 1.7499999999982807e-06, 1.8200000000030692e-06, 1.7359999999987108e-06, 1.7920000000004599e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.5279999999971705e-06, 1.568999999999876e-06, 1.6809999999999048e-06, 1.7770000000014163e-06, 1.7920000000004599e-06, 2.0139999999981006e-06, 1.5420000000002099e-06, 1.8750000000018752e-06, 1.694000000000001e-06, 1.653000000000765e-06, 1.457999999999321e-06, 1.6670000000003349e-06, 1.7779999999974205e-06, 1.6520000000012913e-06, 1.9729999999988646e-06, 1.4300000000001811e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.6800000000004311e-06, 1.7920000000004599e-06, 2.0139999999981006e-06, 2.01400000000157e-06, 1.8749999999984057e-06, 1.694000000000001e-06, 1.971999999999391e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:45.228" endtime="20201112 09:42:45.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.224" endtime="20201112 09:42:45.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.234" level="INFO">${RESULT} = [{'time': 0.018467111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018470375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.232" endtime="20201112 09:42:45.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.242" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018467111, 0.018470375, 0.018473583, 0.018477208, 0.018480458, 0.018484, 0.018487347, 0.018490958, 0.018494181, 0.018497958, 0.018501514, 0.018505292, 0.018508306, 0.018511556, 0.018515125...</msg>
<status status="PASS" starttime="20201112 09:42:45.235" endtime="20201112 09:42:45.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.246" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.245" endtime="20201112 09:42:45.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.249" level="INFO">VALUE: [1.568999999999876e-06, 1.5969999999990159e-06, 1.457999999999321e-06, 1.915999999997642e-06, 1.5970000000024853e-06, 1.903000000001015e-06, 1.6110000000020552e-06, 1.707999999999571e-06, 1.6249999999981557e-06, 1.7499999999982807e-06, 1.7359999999987108e-06, 1.985999999998961e-06, 1.5279999999971705e-06, 1.6809999999999048e-06, 1.7920000000004599e-06, 1.5420000000002099e-06, 1.694000000000001e-06, 1.457999999999321e-06, 1.7779999999974205e-06, 1.9729999999988646e-06, 1.5420000000002099e-06, 1.6800000000004311e-06, 2.0139999999981006e-06, 1.8749999999984057e-06, 1.971999999999391e-06]</msg>
<status status="PASS" starttime="20201112 09:42:45.247" endtime="20201112 09:42:45.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.243" endtime="20201112 09:42:45.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.252" endtime="20201112 09:42:45.253"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.255" endtime="20201112 09:42:45.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.254" endtime="20201112 09:42:45.275"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.250" endtime="20201112 09:42:45.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:44.896" endtime="20201112 09:42:45.276"></status>
</kw>
<msg timestamp="20201112 09:42:45.276" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.284" endtime="20201112 09:42:45.293"></status>
</kw>
<msg timestamp="20201112 09:42:45.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.282" endtime="20201112 09:42:45.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.296" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.294" endtime="20201112 09:42:45.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.297" endtime="20201112 09:42:45.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.280" endtime="20201112 09:42:45.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.278" endtime="20201112 09:42:45.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.307" endtime="20201112 09:42:45.576"></status>
</kw>
<msg timestamp="20201112 09:42:45.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.305" endtime="20201112 09:42:45.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018111347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.578" endtime="20201112 09:42:45.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.584" endtime="20201112 09:42:45.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.302" endtime="20201112 09:42:45.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.300" endtime="20201112 09:42:45.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.590" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.589" endtime="20201112 09:42:45.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.594" level="INFO">VALUE: [{'time': 0.018111347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018112986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018114528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018116042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018117944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018119625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018121653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018123111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018124861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018126292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018128333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0410000000012363e-06, 'source_diff': 2.0410000000012363e-06}, {'time': 0.018129972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018131708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018133389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018135042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.018136639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018138667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018140222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018142236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018144222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018145986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018147528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018149097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018150583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018152083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018153653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5699999999993497e-06, 'source_diff': 1.5699999999993497e-06}, {'time': 0.018155528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018157361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018159111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018160931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8200000000030692e-06, 'source_diff': 1.8200000000030692e-06}, {'time': 0.0181625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018163944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018165903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018167389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.018169375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018171278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018172972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018176611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018178486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.0181805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018182028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018183514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018185097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018186958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018188486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018189958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018191764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018193708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018195667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:45.591" endtime="20201112 09:42:45.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.587" endtime="20201112 09:42:45.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.609" level="INFO">${debug-compressed} = {'time': [0.018111347, 0.018112986, 0.018114528, 0.018116042, 0.018117944, 0.018119625, 0.018121653, 0.018123111, 0.018124861, 0.018126292, 0.018128333, 0.018129972, 0.018131708, 0.018133389, 0.018135...</msg>
<status status="PASS" starttime="20201112 09:42:45.596" endtime="20201112 09:42:45.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.613" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.612" endtime="20201112 09:42:45.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.616" level="INFO">VALUE: {'time': [0.018111347, 0.018112986, 0.018114528, 0.018116042, 0.018117944, 0.018119625, 0.018121653, 0.018123111, 0.018124861, 0.018126292, 0.018128333, 0.018129972, 0.018131708, 0.018133389, 0.018135042, 0.018136639, 0.018138667, 0.018140222, 0.018142236, 0.018144222, 0.018145986, 0.018147528, 0.018149097, 0.018150583, 0.018152083, 0.018153653, 0.018155528, 0.018157361, 0.018159111, 0.018160931, 0.0181625, 0.018163944, 0.018165903, 0.018167389, 0.018169375, 0.018171278, 0.018172972, 0.018175, 0.018176611, 0.018178486, 0.0181805, 0.018182028, 0.018183514, 0.018185097, 0.018186958, 0.018188486, 0.018189958, 0.018191764, 0.018193708, 0.018195667], 'source_diff': [0, 1.639000000001195e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.9020000000015413e-06, 1.6809999999999048e-06, 2.02800000000114e-06, 1.457999999999321e-06, 1.7499999999982807e-06, 1.4309999999996548e-06, 2.0410000000012363e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 2.02800000000114e-06, 1.5550000000003061e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 1.7639999999978506e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.5699999999993497e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.7499999999982807e-06, 1.8200000000030692e-06, 1.568999999999876e-06, 1.443999999999751e-06, 1.9589999999992946e-06, 1.4859999999984608e-06, 1.9860000000024303e-06, 1.9029999999975455e-06, 1.694000000000001e-06, 2.02800000000114e-06, 1.6109999999985858e-06, 1.8750000000018752e-06, 2.0139999999981006e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.582999999999446e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.944000000000251e-06, 1.9589999999992946e-06], 'sourcediff': [0, 1.639000000001195e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.9020000000015413e-06, 1.6809999999999048e-06, 2.02800000000114e-06, 1.457999999999321e-06, 1.7499999999982807e-06, 1.4309999999996548e-06, 2.0410000000012363e-06, 1.639000000001195e-06, 1.7359999999987108e-06, 1.6809999999999048e-06, 1.653000000000765e-06, 1.5969999999990159e-06, 2.02800000000114e-06, 1.5550000000003061e-06, 2.0139999999981006e-06, 1.9860000000024303e-06, 1.7639999999978506e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.4860000000019302e-06, 1.4999999999980307e-06, 1.5699999999993497e-06, 1.8750000000018752e-06, 1.832999999999696e-06, 1.7499999999982807e-06, 1.8200000000030692e-06, 1.568999999999876e-06, 1.443999999999751e-06, 1.9589999999992946e-06, 1.4859999999984608e-06, 1.9860000000024303e-06, 1.9029999999975455e-06, 1.694000000000001e-06, 2.02800000000114e-06, 1.6109999999985858e-06, 1.8750000000018752e-06, 2.0139999999981006e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.582999999999446e-06, 1.8609999999988358e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.8060000000000298e-06, 1.944000000000251e-06, 1.9589999999992946e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:45.614" endtime="20201112 09:42:45.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.610" endtime="20201112 09:42:45.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:45.620" level="INFO">${RESULT} = [{'time': 0.018112986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018116042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:45.618" endtime="20201112 09:42:45.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:45.628" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018112986, 0.018116042, 0.018119625, 0.018123111, 0.018126292, 0.018129972, 0.018133389, 0.018136639, 0.018140222, 0.018144222, 0.018147528, 0.018150583, 0.018153653, 0.018157361, 0.018160...</msg>
<status status="PASS" starttime="20201112 09:42:45.621" endtime="20201112 09:42:45.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.632" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:45.631" endtime="20201112 09:42:45.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.635" level="INFO">VALUE: [1.639000000001195e-06, 1.5139999999976006e-06, 1.6809999999999048e-06, 1.457999999999321e-06, 1.4309999999996548e-06, 1.639000000001195e-06, 1.6809999999999048e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.9860000000024303e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.5699999999993497e-06, 1.832999999999696e-06, 1.8200000000030692e-06, 1.443999999999751e-06, 1.4859999999984608e-06, 1.9029999999975455e-06, 2.02800000000114e-06, 1.8750000000018752e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.52800000000064e-06, 1.8060000000000298e-06, 1.9589999999992946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:45.633" endtime="20201112 09:42:45.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.629" endtime="20201112 09:42:45.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.638" endtime="20201112 09:42:45.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:45.642" endtime="20201112 09:42:45.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.640" endtime="20201112 09:42:45.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.636" endtime="20201112 09:42:45.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.277" endtime="20201112 09:42:45.662"></status>
</kw>
<msg timestamp="20201112 09:42:45.662" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.670" endtime="20201112 09:42:45.679"></status>
</kw>
<msg timestamp="20201112 09:42:45.680" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.668" endtime="20201112 09:42:45.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.682" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:45.681" endtime="20201112 09:42:45.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.683" endtime="20201112 09:42:45.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.666" endtime="20201112 09:42:45.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.664" endtime="20201112 09:42:45.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.693" endtime="20201112 09:42:45.959"></status>
</kw>
<msg timestamp="20201112 09:42:45.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.692" endtime="20201112 09:42:45.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:45.962" endtime="20201112 09:42:45.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:45.968" endtime="20201112 09:42:45.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.689" endtime="20201112 09:42:45.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.687" endtime="20201112 09:42:45.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.974" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:45.973" endtime="20201112 09:42:45.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.978" level="INFO">VALUE: [{'time': 0.018149014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018150708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018152611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.018154278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018156125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018157986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018159958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018161653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018163639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018165611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018167389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.01816925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018170944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018172458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018174194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018175833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018177389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018179194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018180986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018182944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018184639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018186278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018188167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018189931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018191486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018193306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018195097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018196764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018198597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018200389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018202389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018204278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018206083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018207583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018209403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018211111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018212694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5830000000029154e-06, 'source_diff': 1.5830000000029154e-06}, {'time': 0.018214292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018216292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018218083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018219903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018221458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018223125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018224667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018226431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018228389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018230194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018231611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4170000000000849e-06, 'source_diff': 1.4170000000000849e-06}, {'time': 0.018233611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018235583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:45.975" endtime="20201112 09:42:45.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.971" endtime="20201112 09:42:45.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:45.993" level="INFO">${debug-compressed} = {'time': [0.018149014, 0.018150708, 0.018152611, 0.018154278, 0.018156125, 0.018157986, 0.018159958, 0.018161653, 0.018163639, 0.018165611, 0.018167389, 0.01816925, 0.018170944, 0.018172458, 0.0181741...</msg>
<status status="PASS" starttime="20201112 09:42:45.980" endtime="20201112 09:42:45.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:45.997" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:45.996" endtime="20201112 09:42:45.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.000" level="INFO">VALUE: {'time': [0.018149014, 0.018150708, 0.018152611, 0.018154278, 0.018156125, 0.018157986, 0.018159958, 0.018161653, 0.018163639, 0.018165611, 0.018167389, 0.01816925, 0.018170944, 0.018172458, 0.018174194, 0.018175833, 0.018177389, 0.018179194, 0.018180986, 0.018182944, 0.018184639, 0.018186278, 0.018188167, 0.018189931, 0.018191486, 0.018193306, 0.018195097, 0.018196764, 0.018198597, 0.018200389, 0.018202389, 0.018204278, 0.018206083, 0.018207583, 0.018209403, 0.018211111, 0.018212694, 0.018214292, 0.018216292, 0.018218083, 0.018219903, 0.018221458, 0.018223125, 0.018224667, 0.018226431, 0.018228389, 0.018230194, 0.018231611, 0.018233611, 0.018235583], 'source_diff': [0, 1.694000000000001e-06, 1.9029999999975455e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.971999999999391e-06, 1.6949999999994747e-06, 1.985999999998961e-06, 1.9720000000028604e-06, 1.7779999999974205e-06, 1.8610000000023053e-06, 1.694000000000001e-06, 1.5139999999976006e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.957999999999821e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.889000000001445e-06, 1.7639999999978506e-06, 1.5550000000003061e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.9999999999985307e-06, 1.889000000001445e-06, 1.8050000000005562e-06, 1.4999999999980307e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.5830000000029154e-06, 1.5979999999984895e-06, 1.9999999999985307e-06, 1.7910000000009862e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.5420000000002099e-06, 1.76400000000132e-06, 1.957999999999821e-06, 1.8050000000005562e-06, 1.4170000000000849e-06, 1.9999999999985307e-06, 1.971999999999391e-06], 'sourcediff': [0, 1.694000000000001e-06, 1.9029999999975455e-06, 1.6670000000003349e-06, 1.846999999999266e-06, 1.8610000000023053e-06, 1.971999999999391e-06, 1.6949999999994747e-06, 1.985999999998961e-06, 1.9720000000028604e-06, 1.7779999999974205e-06, 1.8610000000023053e-06, 1.694000000000001e-06, 1.5139999999976006e-06, 1.7360000000021802e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.957999999999821e-06, 1.6949999999994747e-06, 1.639000000001195e-06, 1.889000000001445e-06, 1.7639999999978506e-06, 1.5550000000003061e-06, 1.8199999999995997e-06, 1.7910000000009862e-06, 1.6670000000003349e-06, 1.832999999999696e-06, 1.7920000000004599e-06, 1.9999999999985307e-06, 1.889000000001445e-06, 1.8050000000005562e-06, 1.4999999999980307e-06, 1.8199999999995997e-06, 1.707999999999571e-06, 1.5830000000029154e-06, 1.5979999999984895e-06, 1.9999999999985307e-06, 1.7910000000009862e-06, 1.8199999999995997e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.5420000000002099e-06, 1.76400000000132e-06, 1.957999999999821e-06, 1.8050000000005562e-06, 1.4170000000000849e-06, 1.9999999999985307e-06, 1.971999999999391e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:45.998" endtime="20201112 09:42:46.001"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.994" endtime="20201112 09:42:46.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.005" level="INFO">${RESULT} = [{'time': 0.018150708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018154278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.002" endtime="20201112 09:42:46.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.013" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018150708, 0.018154278, 0.018157986, 0.018161653, 0.018165611, 0.01816925, 0.018172458, 0.018175833, 0.018179194, 0.018182944, 0.018186278, 0.018189931, 0.018193306, 0.018196764, 0.0182003...</msg>
<status status="PASS" starttime="20201112 09:42:46.006" endtime="20201112 09:42:46.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.017" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.016" endtime="20201112 09:42:46.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.019" level="INFO">VALUE: [1.694000000000001e-06, 1.6670000000003349e-06, 1.8610000000023053e-06, 1.6949999999994747e-06, 1.9720000000028604e-06, 1.8610000000023053e-06, 1.5139999999976006e-06, 1.6389999999977256e-06, 1.8050000000005562e-06, 1.957999999999821e-06, 1.639000000001195e-06, 1.7639999999978506e-06, 1.8199999999995997e-06, 1.6670000000003349e-06, 1.7920000000004599e-06, 1.889000000001445e-06, 1.4999999999980307e-06, 1.707999999999571e-06, 1.5979999999984895e-06, 1.7910000000009862e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.957999999999821e-06, 1.4170000000000849e-06, 1.971999999999391e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.018" endtime="20201112 09:42:46.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.013" endtime="20201112 09:42:46.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.022" endtime="20201112 09:42:46.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.026" endtime="20201112 09:42:46.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.024" endtime="20201112 09:42:46.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.021" endtime="20201112 09:42:46.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:45.663" endtime="20201112 09:42:46.047"></status>
</kw>
<msg timestamp="20201112 09:42:46.047" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.055" endtime="20201112 09:42:46.065"></status>
</kw>
<msg timestamp="20201112 09:42:46.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.053" endtime="20201112 09:42:46.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.066" endtime="20201112 09:42:46.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.069" endtime="20201112 09:42:46.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.050" endtime="20201112 09:42:46.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.049" endtime="20201112 09:42:46.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.078" endtime="20201112 09:42:46.347"></status>
</kw>
<msg timestamp="20201112 09:42:46.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018999, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:46.076" endtime="20201112 09:42:46.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018999, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:46.350" endtime="20201112 09:42:46.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.355" endtime="20201112 09:42:46.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.074" endtime="20201112 09:42:46.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.072" endtime="20201112 09:42:46.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.361" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.360" endtime="20201112 09:42:46.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.365" level="INFO">VALUE: [{'time': 0.018999, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019000958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019002931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.973000000002334e-06, 'source_diff': 1.973000000002334e-06}, {'time': 0.019004472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.01900625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7779999999974205e-06, 'source_diff': 1.7779999999974205e-06}, {'time': 0.01900775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.019009458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019010972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019012972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019014667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019016292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.019017889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019019653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.019021528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.019023542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.019025139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019027125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019029083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019030931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.019032375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019034486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.110999999999086e-06, 'source_diff': 2.110999999999086e-06}, {'time': 0.019036514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.019038417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.019040236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019041778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.019043472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.019044986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019046833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019048556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.0190505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.019052528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.019054486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019056083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.019057611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5279999999971705e-06, 'source_diff': 1.5279999999971705e-06}, {'time': 0.019059417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019061222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.019063264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.019065194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019067167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9729999999988646e-06, 'source_diff': 1.9729999999988646e-06}, {'time': 0.019068722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.019070417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.019072, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.019073458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4580000000027904e-06, 'source_diff': 1.4580000000027904e-06}, {'time': 0.019075736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2779999999979206e-06, 'source_diff': 2.2779999999979206e-06}, {'time': 0.019077444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.019079097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.019080806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.01908225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.019084333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.082999999999946e-06, 'source_diff': 2.082999999999946e-06}, {'time': 0.019086181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.362" endtime="20201112 09:42:46.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.358" endtime="20201112 09:42:46.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.380" level="INFO">${debug-compressed} = {'time': [0.018999, 0.019000958, 0.019002931, 0.019004472, 0.01900625, 0.01900775, 0.019009458, 0.019010972, 0.019012972, 0.019014667, 0.019016292, 0.019017889, 0.019019653, 0.019021528, 0.019023542, ...</msg>
<status status="PASS" starttime="20201112 09:42:46.367" endtime="20201112 09:42:46.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.384" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.383" endtime="20201112 09:42:46.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.387" level="INFO">VALUE: {'time': [0.018999, 0.019000958, 0.019002931, 0.019004472, 0.01900625, 0.01900775, 0.019009458, 0.019010972, 0.019012972, 0.019014667, 0.019016292, 0.019017889, 0.019019653, 0.019021528, 0.019023542, 0.019025139, 0.019027125, 0.019029083, 0.019030931, 0.019032375, 0.019034486, 0.019036514, 0.019038417, 0.019040236, 0.019041778, 0.019043472, 0.019044986, 0.019046833, 0.019048556, 0.0190505, 0.019052528, 0.019054486, 0.019056083, 0.019057611, 0.019059417, 0.019061222, 0.019063264, 0.019065194, 0.019067167, 0.019068722, 0.019070417, 0.019072, 0.019073458, 0.019075736, 0.019077444, 0.019079097, 0.019080806, 0.01908225, 0.019084333, 0.019086181], 'source_diff': [0, 1.957999999999821e-06, 1.973000000002334e-06, 1.5410000000007362e-06, 1.7779999999974205e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.51400000000107e-06, 1.9999999999985307e-06, 1.6949999999994747e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 2.01400000000157e-06, 1.5969999999990159e-06, 1.985999999998961e-06, 1.957999999999821e-06, 1.848000000002209e-06, 1.443999999999751e-06, 2.110999999999086e-06, 2.02800000000114e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.5420000000002099e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.723000000002084e-06, 1.944000000000251e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 1.5970000000024853e-06, 1.5279999999971705e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 2.04200000000071e-06, 1.930000000000681e-06, 1.9729999999988646e-06, 1.5550000000003061e-06, 1.6949999999994747e-06, 1.582999999999446e-06, 1.4580000000027904e-06, 2.2779999999979206e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.7089999999990446e-06, 1.443999999999751e-06, 2.082999999999946e-06, 1.848000000002209e-06], 'sourcediff': [0, 1.957999999999821e-06, 1.973000000002334e-06, 1.5410000000007362e-06, 1.7779999999974205e-06, 1.5000000000015001e-06, 1.707999999999571e-06, 1.51400000000107e-06, 1.9999999999985307e-06, 1.6949999999994747e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.76400000000132e-06, 1.8749999999984057e-06, 2.01400000000157e-06, 1.5969999999990159e-06, 1.985999999998961e-06, 1.957999999999821e-06, 1.848000000002209e-06, 1.443999999999751e-06, 2.110999999999086e-06, 2.02800000000114e-06, 1.9029999999975455e-06, 1.819000000000126e-06, 1.5420000000002099e-06, 1.694000000000001e-06, 1.51400000000107e-06, 1.846999999999266e-06, 1.723000000002084e-06, 1.944000000000251e-06, 2.0279999999976706e-06, 1.957999999999821e-06, 1.5970000000024853e-06, 1.5279999999971705e-06, 1.8060000000000298e-06, 1.8050000000005562e-06, 2.04200000000071e-06, 1.930000000000681e-06, 1.9729999999988646e-06, 1.5550000000003061e-06, 1.6949999999994747e-06, 1.582999999999446e-06, 1.4580000000027904e-06, 2.2779999999979206e-06, 1.707999999999571e-06, 1.653000000000765e-06, 1.7089999999990446e-06, 1.443999999999751e-06, 2.082999999999946e-06, 1.848000000002209e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:46.385" endtime="20201112 09:42:46.387"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.381" endtime="20201112 09:42:46.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.391" level="INFO">${RESULT} = [{'time': 0.019000958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.019004472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:46.389" endtime="20201112 09:42:46.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.399" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019000958, 0.019004472, 0.01900775, 0.019010972, 0.019014667, 0.019017889, 0.019021528, 0.019025139, 0.019029083, 0.019032375, 0.019036514, 0.019040236, 0.019043472, 0.019046833, 0.0190505...</msg>
<status status="PASS" starttime="20201112 09:42:46.392" endtime="20201112 09:42:46.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.403" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.402" endtime="20201112 09:42:46.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.406" level="INFO">VALUE: [1.957999999999821e-06, 1.5410000000007362e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.6949999999994747e-06, 1.5969999999990159e-06, 1.8749999999984057e-06, 1.5969999999990159e-06, 1.957999999999821e-06, 1.443999999999751e-06, 2.02800000000114e-06, 1.819000000000126e-06, 1.694000000000001e-06, 1.846999999999266e-06, 1.944000000000251e-06, 1.957999999999821e-06, 1.5279999999971705e-06, 1.8050000000005562e-06, 1.930000000000681e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 2.2779999999979206e-06, 1.653000000000765e-06, 1.443999999999751e-06, 1.848000000002209e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.405" endtime="20201112 09:42:46.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.400" endtime="20201112 09:42:46.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.409" endtime="20201112 09:42:46.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.412" endtime="20201112 09:42:46.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.411" endtime="20201112 09:42:46.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.408" endtime="20201112 09:42:46.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.047" endtime="20201112 09:42:46.434"></status>
</kw>
<msg timestamp="20201112 09:42:46.434" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.442" endtime="20201112 09:42:46.451"></status>
</kw>
<msg timestamp="20201112 09:42:46.451" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.440" endtime="20201112 09:42:46.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.454" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.452" endtime="20201112 09:42:46.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.455" endtime="20201112 09:42:46.456"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.437" endtime="20201112 09:42:46.457"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.436" endtime="20201112 09:42:46.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.464" endtime="20201112 09:42:46.732"></status>
</kw>
<msg timestamp="20201112 09:42:46.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.462" endtime="20201112 09:42:46.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.735" endtime="20201112 09:42:46.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.740" endtime="20201112 09:42:46.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.460" endtime="20201112 09:42:46.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.458" endtime="20201112 09:42:46.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.747" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:46.746" endtime="20201112 09:42:46.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.751" level="INFO">VALUE: [{'time': 0.018982319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018984125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018986139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018988042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018989583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5410000000007362e-06, 'source_diff': 1.5410000000007362e-06}, {'time': 0.018991347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018993208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018994806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018996542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018998319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7769999999979469e-06, 'source_diff': 1.7769999999979469e-06}, {'time': 0.018999806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.019001736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019003556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019005181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019007153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.019008819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.019010653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.019012514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.019014083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.019015597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.019017639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.04200000000071e-06, 'source_diff': 2.04200000000071e-06}, {'time': 0.019019569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.019021528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.019023264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.01902475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.019026569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.019028458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.019030444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019032361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019034347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.019035931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.019037958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.019039764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.019041611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.019043556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.019045167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019046708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5409999999972668e-06, 'source_diff': 1.5409999999972668e-06}, {'time': 0.019048625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.019050222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.019051833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.019053389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.019055389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019057111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.019058736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.019060458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.019062278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.019063792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.019065528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.019067528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.019069222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:46.748" endtime="20201112 09:42:46.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.744" endtime="20201112 09:42:46.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:46.766" level="INFO">${debug-compressed} = {'time': [0.018982319, 0.018984125, 0.018986139, 0.018988042, 0.018989583, 0.018991347, 0.018993208, 0.018994806, 0.018996542, 0.018998319, 0.018999806, 0.019001736, 0.019003556, 0.019005181, 0.019007...</msg>
<status status="PASS" starttime="20201112 09:42:46.753" endtime="20201112 09:42:46.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.770" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:46.769" endtime="20201112 09:42:46.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.773" level="INFO">VALUE: {'time': [0.018982319, 0.018984125, 0.018986139, 0.018988042, 0.018989583, 0.018991347, 0.018993208, 0.018994806, 0.018996542, 0.018998319, 0.018999806, 0.019001736, 0.019003556, 0.019005181, 0.019007153, 0.019008819, 0.019010653, 0.019012514, 0.019014083, 0.019015597, 0.019017639, 0.019019569, 0.019021528, 0.019023264, 0.01902475, 0.019026569, 0.019028458, 0.019030444, 0.019032361, 0.019034347, 0.019035931, 0.019037958, 0.019039764, 0.019041611, 0.019043556, 0.019045167, 0.019046708, 0.019048625, 0.019050222, 0.019051833, 0.019053389, 0.019055389, 0.019057111, 0.019058736, 0.019060458, 0.019062278, 0.019063792, 0.019065528, 0.019067528, 0.019069222], 'source_diff': [0, 1.8060000000000298e-06, 2.0139999999981006e-06, 1.903000000001015e-06, 1.5410000000007362e-06, 1.7639999999978506e-06, 1.8610000000023053e-06, 1.5979999999984895e-06, 1.7360000000021802e-06, 1.7769999999979469e-06, 1.4870000000014039e-06, 1.930000000000681e-06, 1.8199999999995997e-06, 1.6249999999981557e-06, 1.971999999999391e-06, 1.6660000000008612e-06, 1.8339999999991696e-06, 1.8610000000023053e-06, 1.568999999999876e-06, 1.5139999999976006e-06, 2.04200000000071e-06, 1.930000000000681e-06, 1.9589999999992946e-06, 1.7360000000021802e-06, 1.4859999999984608e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.985999999998961e-06, 1.5839999999989196e-06, 2.0270000000016664e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.9449999999997247e-06, 1.6110000000020552e-06, 1.5409999999972668e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.5559999999997798e-06, 1.9999999999985307e-06, 1.7220000000026103e-06, 1.6249999999981557e-06, 1.7219999999991409e-06, 1.8199999999995997e-06, 1.51400000000107e-06, 1.7360000000021802e-06, 1.9999999999985307e-06, 1.694000000000001e-06], 'sourcediff': [0, 1.8060000000000298e-06, 2.0139999999981006e-06, 1.903000000001015e-06, 1.5410000000007362e-06, 1.7639999999978506e-06, 1.8610000000023053e-06, 1.5979999999984895e-06, 1.7360000000021802e-06, 1.7769999999979469e-06, 1.4870000000014039e-06, 1.930000000000681e-06, 1.8199999999995997e-06, 1.6249999999981557e-06, 1.971999999999391e-06, 1.6660000000008612e-06, 1.8339999999991696e-06, 1.8610000000023053e-06, 1.568999999999876e-06, 1.5139999999976006e-06, 2.04200000000071e-06, 1.930000000000681e-06, 1.9589999999992946e-06, 1.7360000000021802e-06, 1.4859999999984608e-06, 1.819000000000126e-06, 1.889000000001445e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.985999999998961e-06, 1.5839999999989196e-06, 2.0270000000016664e-06, 1.8060000000000298e-06, 1.846999999999266e-06, 1.9449999999997247e-06, 1.6110000000020552e-06, 1.5409999999972668e-06, 1.917000000000585e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.5559999999997798e-06, 1.9999999999985307e-06, 1.7220000000026103e-06, 1.6249999999981557e-06, 1.7219999999991409e-06, 1.8199999999995997e-06, 1.51400000000107e-06, 1.7360000000021802e-06, 1.9999999999985307e-06, 1.694000000000001e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:46.771" endtime="20201112 09:42:46.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.767" endtime="20201112 09:42:46.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:46.777" level="INFO">${RESULT} = [{'time': 0.018984125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018988042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:46.774" endtime="20201112 09:42:46.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:46.785" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018984125, 0.018988042, 0.018991347, 0.018994806, 0.018998319, 0.019001736, 0.019005181, 0.019008819, 0.019012514, 0.019015597, 0.019019569, 0.019023264, 0.019026569, 0.019030444, 0.019034...</msg>
<status status="PASS" starttime="20201112 09:42:46.778" endtime="20201112 09:42:46.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.789" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:46.788" endtime="20201112 09:42:46.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.792" level="INFO">VALUE: [1.8060000000000298e-06, 1.903000000001015e-06, 1.7639999999978506e-06, 1.5979999999984895e-06, 1.7769999999979469e-06, 1.930000000000681e-06, 1.6249999999981557e-06, 1.6660000000008612e-06, 1.8610000000023053e-06, 1.5139999999976006e-06, 1.930000000000681e-06, 1.7360000000021802e-06, 1.819000000000126e-06, 1.985999999998961e-06, 1.985999999998961e-06, 2.0270000000016664e-06, 1.846999999999266e-06, 1.6110000000020552e-06, 1.917000000000585e-06, 1.6110000000020552e-06, 1.9999999999985307e-06, 1.6249999999981557e-06, 1.8199999999995997e-06, 1.7360000000021802e-06, 1.694000000000001e-06]</msg>
<status status="PASS" starttime="20201112 09:42:46.790" endtime="20201112 09:42:46.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.786" endtime="20201112 09:42:46.793"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.795" endtime="20201112 09:42:46.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:46.799" endtime="20201112 09:42:46.818"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.797" endtime="20201112 09:42:46.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.794" endtime="20201112 09:42:46.819"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.435" endtime="20201112 09:42:46.819"></status>
</kw>
<msg timestamp="20201112 09:42:46.819" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.827" endtime="20201112 09:42:46.837"></status>
</kw>
<msg timestamp="20201112 09:42:46.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.825" endtime="20201112 09:42:46.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:46.840" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:46.839" endtime="20201112 09:42:46.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.841" endtime="20201112 09:42:46.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.823" endtime="20201112 09:42:46.843"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.821" endtime="20201112 09:42:46.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:46.850" endtime="20201112 09:42:47.116"></status>
</kw>
<msg timestamp="20201112 09:42:47.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:46.849" endtime="20201112 09:42:47.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.119" endtime="20201112 09:42:47.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.124" endtime="20201112 09:42:47.125"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.846" endtime="20201112 09:42:47.126"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.845" endtime="20201112 09:42:47.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.130" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.129" endtime="20201112 09:42:47.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.134" level="INFO">VALUE: [{'time': 0.018152528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018154236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018155861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018157778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018159639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018161111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018162653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018164528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018165972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.443999999999751e-06, 'source_diff': 1.443999999999751e-06}, {'time': 0.018168069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.096999999999516e-06, 'source_diff': 2.096999999999516e-06}, {'time': 0.018169514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4450000000026941e-06, 'source_diff': 1.4450000000026941e-06}, {'time': 0.018171819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3049999999975868e-06, 'source_diff': 2.3049999999975868e-06}, {'time': 0.018173389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018175194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.018176958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018178625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018180611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018182194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018183958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018185569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018187556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.987000000001904e-06, 'source_diff': 1.987000000001904e-06}, {'time': 0.018189306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018191333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0270000000016664e-06, 'source_diff': 2.0270000000016664e-06}, {'time': 0.018193361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018195306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018197333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.026999999998197e-06, 'source_diff': 2.026999999998197e-06}, {'time': 0.018198875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018200278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.403000000000515e-06, 'source_diff': 1.403000000000515e-06}, {'time': 0.01820175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018203653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018205625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018207486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018209125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.01821075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018212361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018214236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018216125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018217708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018219528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018221139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018223139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018225153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018226667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5139999999976006e-06, 'source_diff': 1.5139999999976006e-06}, {'time': 0.018228528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.018230458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.930000000000681e-06, 'source_diff': 1.930000000000681e-06}, {'time': 0.018231931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018233806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018235403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018237, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018238708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:47.131" endtime="20201112 09:42:47.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.127" endtime="20201112 09:42:47.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.150" level="INFO">${debug-compressed} = {'time': [0.018152528, 0.018154236, 0.018155861, 0.018157778, 0.018159639, 0.018161111, 0.018162653, 0.018164528, 0.018165972, 0.018168069, 0.018169514, 0.018171819, 0.018173389, 0.018175194, 0.018176...</msg>
<status status="PASS" starttime="20201112 09:42:47.136" endtime="20201112 09:42:47.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.154" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.153" endtime="20201112 09:42:47.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.157" level="INFO">VALUE: {'time': [0.018152528, 0.018154236, 0.018155861, 0.018157778, 0.018159639, 0.018161111, 0.018162653, 0.018164528, 0.018165972, 0.018168069, 0.018169514, 0.018171819, 0.018173389, 0.018175194, 0.018176958, 0.018178625, 0.018180611, 0.018182194, 0.018183958, 0.018185569, 0.018187556, 0.018189306, 0.018191333, 0.018193361, 0.018195306, 0.018197333, 0.018198875, 0.018200278, 0.01820175, 0.018203653, 0.018205625, 0.018207486, 0.018209125, 0.01821075, 0.018212361, 0.018214236, 0.018216125, 0.018217708, 0.018219528, 0.018221139, 0.018223139, 0.018225153, 0.018226667, 0.018228528, 0.018230458, 0.018231931, 0.018233806, 0.018235403, 0.018237, 0.018238708], 'source_diff': [0, 1.707999999999571e-06, 1.6249999999981557e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.4719999999988909e-06, 1.5420000000002099e-06, 1.8749999999984057e-06, 1.443999999999751e-06, 2.096999999999516e-06, 1.4450000000026941e-06, 2.3049999999975868e-06, 1.5700000000028191e-06, 1.8049999999970867e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.985999999998961e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.987000000001904e-06, 1.7499999999982807e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 1.9449999999997247e-06, 2.026999999998197e-06, 1.5420000000002099e-06, 1.403000000000515e-06, 1.4719999999988909e-06, 1.903000000001015e-06, 1.971999999999391e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.582999999999446e-06, 1.8199999999995997e-06, 1.6110000000020552e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 1.5139999999976006e-06, 1.8610000000023053e-06, 1.930000000000681e-06, 1.4729999999983645e-06, 1.8750000000018752e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.707999999999571e-06], 'sourcediff': [0, 1.707999999999571e-06, 1.6249999999981557e-06, 1.917000000000585e-06, 1.8610000000023053e-06, 1.4719999999988909e-06, 1.5420000000002099e-06, 1.8749999999984057e-06, 1.443999999999751e-06, 2.096999999999516e-06, 1.4450000000026941e-06, 2.3049999999975868e-06, 1.5700000000028191e-06, 1.8049999999970867e-06, 1.76400000000132e-06, 1.6670000000003349e-06, 1.985999999998961e-06, 1.582999999999446e-06, 1.76400000000132e-06, 1.6109999999985858e-06, 1.987000000001904e-06, 1.7499999999982807e-06, 2.0270000000016664e-06, 2.02800000000114e-06, 1.9449999999997247e-06, 2.026999999998197e-06, 1.5420000000002099e-06, 1.403000000000515e-06, 1.4719999999988909e-06, 1.903000000001015e-06, 1.971999999999391e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.6250000000016251e-06, 1.6109999999985858e-06, 1.8750000000018752e-06, 1.8889999999979756e-06, 1.582999999999446e-06, 1.8199999999995997e-06, 1.6110000000020552e-06, 1.9999999999985307e-06, 2.01400000000157e-06, 1.5139999999976006e-06, 1.8610000000023053e-06, 1.930000000000681e-06, 1.4729999999983645e-06, 1.8750000000018752e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.707999999999571e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:47.155" endtime="20201112 09:42:47.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.151" endtime="20201112 09:42:47.158"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.161" level="INFO">${RESULT} = [{'time': 0.018154236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018157778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:47.159" endtime="20201112 09:42:47.161"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.169" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018154236, 0.018157778, 0.018161111, 0.018164528, 0.018168069, 0.018171819, 0.018175194, 0.018178625, 0.018182194, 0.018185569, 0.018189306, 0.018193361, 0.018197333, 0.018200278, 0.018203...</msg>
<status status="PASS" starttime="20201112 09:42:47.162" endtime="20201112 09:42:47.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.173" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.172" endtime="20201112 09:42:47.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.176" level="INFO">VALUE: [1.707999999999571e-06, 1.917000000000585e-06, 1.4719999999988909e-06, 1.8749999999984057e-06, 2.096999999999516e-06, 2.3049999999975868e-06, 1.8049999999970867e-06, 1.6670000000003349e-06, 1.582999999999446e-06, 1.6109999999985858e-06, 1.7499999999982807e-06, 2.02800000000114e-06, 2.026999999998197e-06, 1.403000000000515e-06, 1.903000000001015e-06, 1.8609999999988358e-06, 1.6250000000016251e-06, 1.8750000000018752e-06, 1.582999999999446e-06, 1.6110000000020552e-06, 2.01400000000157e-06, 1.8610000000023053e-06, 1.4729999999983645e-06, 1.5969999999990159e-06, 1.707999999999571e-06]</msg>
<status status="PASS" starttime="20201112 09:42:47.174" endtime="20201112 09:42:47.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.170" endtime="20201112 09:42:47.177"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.179" endtime="20201112 09:42:47.180"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.182" endtime="20201112 09:42:47.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.181" endtime="20201112 09:42:47.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.177" endtime="20201112 09:42:47.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:46.820" endtime="20201112 09:42:47.203"></status>
</kw>
<msg timestamp="20201112 09:42:47.203" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.211" endtime="20201112 09:42:47.220"></status>
</kw>
<msg timestamp="20201112 09:42:47.220" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.209" endtime="20201112 09:42:47.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.223" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.221" endtime="20201112 09:42:47.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.224" endtime="20201112 09:42:47.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.207" endtime="20201112 09:42:47.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.205" endtime="20201112 09:42:47.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.233" endtime="20201112 09:42:47.496"></status>
</kw>
<msg timestamp="20201112 09:42:47.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.231" endtime="20201112 09:42:47.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.499" endtime="20201112 09:42:47.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.505" endtime="20201112 09:42:47.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.229" endtime="20201112 09:42:47.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.227" endtime="20201112 09:42:47.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.512" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.511" endtime="20201112 09:42:47.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.516" level="INFO">VALUE: [{'time': 0.018227389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018229236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018231042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018232708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018234736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018236319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018238333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018240125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018241764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018243639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018245431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018247389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018249417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018251014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018252625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018254583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018256042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4589999999987946e-06, 'source_diff': 1.4589999999987946e-06}, {'time': 0.018258042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018259944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9020000000015413e-06, 'source_diff': 1.9020000000015413e-06}, {'time': 0.018261542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5979999999984895e-06, 'source_diff': 1.5979999999984895e-06}, {'time': 0.018263514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.018264986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018266542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018268431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018270444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.012999999998627e-06, 'source_diff': 2.012999999998627e-06}, {'time': 0.018272083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018273639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018275569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9299999999972117e-06, 'source_diff': 1.9299999999972117e-06}, {'time': 0.018277264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.018278833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018280903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0699999999998497e-06, 'source_diff': 2.0699999999998497e-06}, {'time': 0.018282694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018284181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4870000000014039e-06, 'source_diff': 1.4870000000014039e-06}, {'time': 0.018286014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018287472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018289625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.153000000001265e-06, 'source_diff': 2.153000000001265e-06}, {'time': 0.018291167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018292972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018294764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.018296444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6799999999969617e-06, 'source_diff': 1.6799999999969617e-06}, {'time': 0.018297944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018299792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018301583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7910000000009862e-06, 'source_diff': 1.7910000000009862e-06}, {'time': 0.018303528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9449999999997247e-06, 'source_diff': 1.9449999999997247e-06}, {'time': 0.018305375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018307361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018309278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018311264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018313181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018314917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:47.513" endtime="20201112 09:42:47.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.509" endtime="20201112 09:42:47.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.530" level="INFO">${debug-compressed} = {'time': [0.018227389, 0.018229236, 0.018231042, 0.018232708, 0.018234736, 0.018236319, 0.018238333, 0.018240125, 0.018241764, 0.018243639, 0.018245431, 0.018247389, 0.018249417, 0.018251014, 0.018252...</msg>
<status status="PASS" starttime="20201112 09:42:47.518" endtime="20201112 09:42:47.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.534" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.533" endtime="20201112 09:42:47.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.537" level="INFO">VALUE: {'time': [0.018227389, 0.018229236, 0.018231042, 0.018232708, 0.018234736, 0.018236319, 0.018238333, 0.018240125, 0.018241764, 0.018243639, 0.018245431, 0.018247389, 0.018249417, 0.018251014, 0.018252625, 0.018254583, 0.018256042, 0.018258042, 0.018259944, 0.018261542, 0.018263514, 0.018264986, 0.018266542, 0.018268431, 0.018270444, 0.018272083, 0.018273639, 0.018275569, 0.018277264, 0.018278833, 0.018280903, 0.018282694, 0.018284181, 0.018286014, 0.018287472, 0.018289625, 0.018291167, 0.018292972, 0.018294764, 0.018296444, 0.018297944, 0.018299792, 0.018301583, 0.018303528, 0.018305375, 0.018307361, 0.018309278, 0.018311264, 0.018313181, 0.018314917], 'source_diff': [0, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 2.02800000000114e-06, 1.582999999999446e-06, 2.0139999999981006e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.957999999999821e-06, 2.02800000000114e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.957999999999821e-06, 1.4589999999987946e-06, 1.9999999999985307e-06, 1.9020000000015413e-06, 1.5979999999984895e-06, 1.9720000000028604e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.889000000001445e-06, 2.012999999998627e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.9299999999972117e-06, 1.6950000000029442e-06, 1.568999999999876e-06, 2.0699999999998497e-06, 1.7909999999975168e-06, 1.4870000000014039e-06, 1.832999999999696e-06, 1.457999999999321e-06, 2.153000000001265e-06, 1.5420000000002099e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.6799999999969617e-06, 1.5000000000015001e-06, 1.8479999999987395e-06, 1.7910000000009862e-06, 1.9449999999997247e-06, 1.846999999999266e-06, 1.9860000000024303e-06, 1.9169999999971155e-06, 1.9860000000024303e-06, 1.917000000000585e-06, 1.7359999999987108e-06], 'sourcediff': [0, 1.846999999999266e-06, 1.8060000000000298e-06, 1.6660000000008612e-06, 2.02800000000114e-06, 1.582999999999446e-06, 2.0139999999981006e-06, 1.7920000000004599e-06, 1.639000000001195e-06, 1.8749999999984057e-06, 1.7920000000004599e-06, 1.957999999999821e-06, 2.02800000000114e-06, 1.5969999999990159e-06, 1.6110000000020552e-06, 1.957999999999821e-06, 1.4589999999987946e-06, 1.9999999999985307e-06, 1.9020000000015413e-06, 1.5979999999984895e-06, 1.9720000000028604e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.889000000001445e-06, 2.012999999998627e-06, 1.639000000001195e-06, 1.5559999999997798e-06, 1.9299999999972117e-06, 1.6950000000029442e-06, 1.568999999999876e-06, 2.0699999999998497e-06, 1.7909999999975168e-06, 1.4870000000014039e-06, 1.832999999999696e-06, 1.457999999999321e-06, 2.153000000001265e-06, 1.5420000000002099e-06, 1.8050000000005562e-06, 1.7920000000004599e-06, 1.6799999999969617e-06, 1.5000000000015001e-06, 1.8479999999987395e-06, 1.7910000000009862e-06, 1.9449999999997247e-06, 1.846999999999266e-06, 1.9860000000024303e-06, 1.9169999999971155e-06, 1.9860000000024303e-06, 1.917000000000585e-06, 1.7359999999987108e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:47.535" endtime="20201112 09:42:47.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.531" endtime="20201112 09:42:47.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.542" level="INFO">${RESULT} = [{'time': 0.018229236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018232708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:47.539" endtime="20201112 09:42:47.542"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.549" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018229236, 0.018232708, 0.018236319, 0.018240125, 0.018243639, 0.018247389, 0.018251014, 0.018254583, 0.018258042, 0.018261542, 0.018264986, 0.018268431, 0.018272083, 0.018275569, 0.018278...</msg>
<status status="PASS" starttime="20201112 09:42:47.542" endtime="20201112 09:42:47.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.554" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.553" endtime="20201112 09:42:47.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.556" level="INFO">VALUE: [1.846999999999266e-06, 1.6660000000008612e-06, 1.582999999999446e-06, 1.7920000000004599e-06, 1.8749999999984057e-06, 1.957999999999821e-06, 1.5969999999990159e-06, 1.957999999999821e-06, 1.9999999999985307e-06, 1.5979999999984895e-06, 1.4719999999988909e-06, 1.889000000001445e-06, 1.639000000001195e-06, 1.9299999999972117e-06, 1.568999999999876e-06, 1.7909999999975168e-06, 1.832999999999696e-06, 2.153000000001265e-06, 1.8050000000005562e-06, 1.6799999999969617e-06, 1.8479999999987395e-06, 1.9449999999997247e-06, 1.9860000000024303e-06, 1.9860000000024303e-06, 1.7359999999987108e-06]</msg>
<status status="PASS" starttime="20201112 09:42:47.555" endtime="20201112 09:42:47.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.550" endtime="20201112 09:42:47.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.559" endtime="20201112 09:42:47.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.563" endtime="20201112 09:42:47.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.561" endtime="20201112 09:42:47.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.558" endtime="20201112 09:42:47.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.204" endtime="20201112 09:42:47.583"></status>
</kw>
<msg timestamp="20201112 09:42:47.583" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.591" endtime="20201112 09:42:47.601"></status>
</kw>
<msg timestamp="20201112 09:42:47.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.589" endtime="20201112 09:42:47.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.603" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.602" endtime="20201112 09:42:47.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.605" endtime="20201112 09:42:47.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.587" endtime="20201112 09:42:47.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.585" endtime="20201112 09:42:47.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.614" endtime="20201112 09:42:47.885"></status>
</kw>
<msg timestamp="20201112 09:42:47.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018076486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.613" endtime="20201112 09:42:47.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018076486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:47.888" endtime="20201112 09:42:47.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.893" endtime="20201112 09:42:47.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.609" endtime="20201112 09:42:47.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.608" endtime="20201112 09:42:47.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.899" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:47.898" endtime="20201112 09:42:47.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.903" level="INFO">VALUE: [{'time': 0.018074944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018076486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018078083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018079917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8339999999991696e-06, 'source_diff': 1.8339999999991696e-06}, {'time': 0.018081653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018083111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018084806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018086681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018088306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.018090153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8470000000027353e-06, 'source_diff': 1.8470000000027353e-06}, {'time': 0.018091847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018093431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5839999999989196e-06, 'source_diff': 1.5839999999989196e-06}, {'time': 0.018095292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018097181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018098889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018100444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018102111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018103875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018105681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018107292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018109, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018110625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.018112222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018113819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018115431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018117153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018118958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018120625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018122542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018124181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.707999999999571e-06, 'source_diff': 1.707999999999571e-06}, {'time': 0.018127875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018129611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018131069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018132681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6120000000015289e-06, 'source_diff': 1.6120000000015289e-06}, {'time': 0.018134528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.018136306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018137833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5269999999976969e-06, 'source_diff': 1.5269999999976969e-06}, {'time': 0.018139681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.848000000002209e-06, 'source_diff': 1.848000000002209e-06}, {'time': 0.018141375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018143306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018145111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.018147069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018148833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018150431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018151889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.457999999999321e-06, 'source_diff': 1.457999999999321e-06}, {'time': 0.018153903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018155875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018157681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018159486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:47.900" endtime="20201112 09:42:47.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.896" endtime="20201112 09:42:47.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:47.918" level="INFO">${debug-compressed} = {'time': [0.018074944, 0.018076486, 0.018078083, 0.018079917, 0.018081653, 0.018083111, 0.018084806, 0.018086681, 0.018088306, 0.018090153, 0.018091847, 0.018093431, 0.018095292, 0.018097181, 0.018098...</msg>
<status status="PASS" starttime="20201112 09:42:47.905" endtime="20201112 09:42:47.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.922" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:47.921" endtime="20201112 09:42:47.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.925" level="INFO">VALUE: {'time': [0.018074944, 0.018076486, 0.018078083, 0.018079917, 0.018081653, 0.018083111, 0.018084806, 0.018086681, 0.018088306, 0.018090153, 0.018091847, 0.018093431, 0.018095292, 0.018097181, 0.018098889, 0.018100444, 0.018102111, 0.018103875, 0.018105681, 0.018107292, 0.018109, 0.018110625, 0.018112222, 0.018113819, 0.018115431, 0.018117153, 0.018118958, 0.018120625, 0.018122542, 0.018124181, 0.018125889, 0.018127875, 0.018129611, 0.018131069, 0.018132681, 0.018134528, 0.018136306, 0.018137833, 0.018139681, 0.018141375, 0.018143306, 0.018145111, 0.018147069, 0.018148833, 0.018150431, 0.018151889, 0.018153903, 0.018155875, 0.018157681, 0.018159486], 'source_diff': [0, 1.5420000000002099e-06, 1.5970000000024853e-06, 1.8339999999991696e-06, 1.7359999999987108e-06, 1.457999999999321e-06, 1.6949999999994747e-06, 1.8750000000018752e-06, 1.6249999999981557e-06, 1.8470000000027353e-06, 1.694000000000001e-06, 1.5839999999989196e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.7639999999978506e-06, 1.8060000000000298e-06, 1.6110000000020552e-06, 1.707999999999571e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.6120000000015289e-06, 1.7219999999991409e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.9169999999971155e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 1.457999999999321e-06, 1.6120000000015289e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.5269999999976969e-06, 1.848000000002209e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.8049999999970867e-06, 1.957999999999821e-06, 1.76400000000132e-06, 1.598000000001959e-06, 1.457999999999321e-06, 2.0139999999981006e-06, 1.971999999999391e-06, 1.8060000000000298e-06, 1.8050000000005562e-06], 'sourcediff': [0, 1.5420000000002099e-06, 1.5970000000024853e-06, 1.8339999999991696e-06, 1.7359999999987108e-06, 1.457999999999321e-06, 1.6949999999994747e-06, 1.8750000000018752e-06, 1.6249999999981557e-06, 1.8470000000027353e-06, 1.694000000000001e-06, 1.5839999999989196e-06, 1.8609999999988358e-06, 1.889000000001445e-06, 1.707999999999571e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.7639999999978506e-06, 1.8060000000000298e-06, 1.6110000000020552e-06, 1.707999999999571e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.5969999999990159e-06, 1.6120000000015289e-06, 1.7219999999991409e-06, 1.8050000000005562e-06, 1.6670000000003349e-06, 1.9169999999971155e-06, 1.639000000001195e-06, 1.707999999999571e-06, 1.9860000000024303e-06, 1.7359999999987108e-06, 1.457999999999321e-06, 1.6120000000015289e-06, 1.846999999999266e-06, 1.77800000000089e-06, 1.5269999999976969e-06, 1.848000000002209e-06, 1.694000000000001e-06, 1.931000000000155e-06, 1.8049999999970867e-06, 1.957999999999821e-06, 1.76400000000132e-06, 1.598000000001959e-06, 1.457999999999321e-06, 2.0139999999981006e-06, 1.971999999999391e-06, 1.8060000000000298e-06, 1.8050000000005562e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:47.923" endtime="20201112 09:42:47.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.919" endtime="20201112 09:42:47.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:47.929" level="INFO">${RESULT} = [{'time': 0.018076486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018079917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:47.927" endtime="20201112 09:42:47.930"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:47.938" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018076486, 0.018079917, 0.018083111, 0.018086681, 0.018090153, 0.018093431, 0.018097181, 0.018100444, 0.018103875, 0.018107292, 0.018110625, 0.018113819, 0.018117153, 0.018120625, 0.018124...</msg>
<status status="PASS" starttime="20201112 09:42:47.930" endtime="20201112 09:42:47.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.942" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:47.941" endtime="20201112 09:42:47.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.945" level="INFO">VALUE: [1.5420000000002099e-06, 1.8339999999991696e-06, 1.457999999999321e-06, 1.8750000000018752e-06, 1.8470000000027353e-06, 1.5839999999989196e-06, 1.889000000001445e-06, 1.5550000000003061e-06, 1.7639999999978506e-06, 1.6110000000020552e-06, 1.6250000000016251e-06, 1.5969999999990159e-06, 1.7219999999991409e-06, 1.6670000000003349e-06, 1.639000000001195e-06, 1.9860000000024303e-06, 1.457999999999321e-06, 1.846999999999266e-06, 1.5269999999976969e-06, 1.694000000000001e-06, 1.8049999999970867e-06, 1.76400000000132e-06, 1.457999999999321e-06, 1.971999999999391e-06, 1.8050000000005562e-06]</msg>
<status status="PASS" starttime="20201112 09:42:47.943" endtime="20201112 09:42:47.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.938" endtime="20201112 09:42:47.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.948" endtime="20201112 09:42:47.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:47.951" endtime="20201112 09:42:47.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.950" endtime="20201112 09:42:47.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.946" endtime="20201112 09:42:47.972"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.584" endtime="20201112 09:42:47.972"></status>
</kw>
<msg timestamp="20201112 09:42:47.972" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.980" endtime="20201112 09:42:47.989"></status>
</kw>
<msg timestamp="20201112 09:42:47.990" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.979" endtime="20201112 09:42:47.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:47.992" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:47.991" endtime="20201112 09:42:47.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:47.993" endtime="20201112 09:42:47.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.976" endtime="20201112 09:42:47.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.974" endtime="20201112 09:42:47.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.002" endtime="20201112 09:42:48.271"></status>
</kw>
<msg timestamp="20201112 09:42:48.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018677042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.001" endtime="20201112 09:42:48.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018677042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018678764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.274" endtime="20201112 09:42:48.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.280" endtime="20201112 09:42:48.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.998" endtime="20201112 09:42:48.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.996" endtime="20201112 09:42:48.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.286" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.285" endtime="20201112 09:42:48.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.290" level="INFO">VALUE: [{'time': 0.018677042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018678764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018680681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018682181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018683792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6110000000020552e-06, 'source_diff': 1.6110000000020552e-06}, {'time': 0.018685333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5409999999972668e-06, 'source_diff': 1.5409999999972668e-06}, {'time': 0.018686917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.584000000002389e-06, 'source_diff': 1.584000000002389e-06}, {'time': 0.018688611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018690194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018691667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4729999999983645e-06, 'source_diff': 1.4729999999983645e-06}, {'time': 0.018693444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018695153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.018696708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018698625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018700556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.931000000000155e-06, 'source_diff': 1.931000000000155e-06}, {'time': 0.018702528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018704111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.018706167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.05600000000028e-06, 'source_diff': 2.05600000000028e-06}, {'time': 0.018707861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018709347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018711375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018712889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.0187145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6109999999985858e-06, 'source_diff': 1.6109999999985858e-06}, {'time': 0.018716444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018718042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018720069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.026999999998197e-06, 'source_diff': 2.026999999998197e-06}, {'time': 0.018721667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.598000000001959e-06, 'source_diff': 1.598000000001959e-06}, {'time': 0.018723139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018725097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018727111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.01400000000157e-06, 'source_diff': 2.01400000000157e-06}, {'time': 0.018728917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8060000000000298e-06, 'source_diff': 1.8060000000000298e-06}, {'time': 0.018730556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018732306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018733861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018735583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018737569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018739444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018740889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4449999999992247e-06, 'source_diff': 1.4449999999992247e-06}, {'time': 0.018742569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018744208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018745778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5700000000028191e-06, 'source_diff': 1.5700000000028191e-06}, {'time': 0.018747583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8050000000005562e-06, 'source_diff': 1.8050000000005562e-06}, {'time': 0.018749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018750944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.0187525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018754417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018756083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6660000000008612e-06, 'source_diff': 1.6660000000008612e-06}, {'time': 0.018757583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.0187595, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9169999999971155e-06, 'source_diff': 1.9169999999971155e-06}, {'time': 0.018761403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:48.287" endtime="20201112 09:42:48.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.283" endtime="20201112 09:42:48.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.305" level="INFO">${debug-compressed} = {'time': [0.018677042, 0.018678764, 0.018680681, 0.018682181, 0.018683792, 0.018685333, 0.018686917, 0.018688611, 0.018690194, 0.018691667, 0.018693444, 0.018695153, 0.018696708, 0.018698625, 0.018700...</msg>
<status status="PASS" starttime="20201112 09:42:48.292" endtime="20201112 09:42:48.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.309" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.308" endtime="20201112 09:42:48.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.312" level="INFO">VALUE: {'time': [0.018677042, 0.018678764, 0.018680681, 0.018682181, 0.018683792, 0.018685333, 0.018686917, 0.018688611, 0.018690194, 0.018691667, 0.018693444, 0.018695153, 0.018696708, 0.018698625, 0.018700556, 0.018702528, 0.018704111, 0.018706167, 0.018707861, 0.018709347, 0.018711375, 0.018712889, 0.0187145, 0.018716444, 0.018718042, 0.018720069, 0.018721667, 0.018723139, 0.018725097, 0.018727111, 0.018728917, 0.018730556, 0.018732306, 0.018733861, 0.018735583, 0.018737569, 0.018739444, 0.018740889, 0.018742569, 0.018744208, 0.018745778, 0.018747583, 0.018749472, 0.018750944, 0.0187525, 0.018754417, 0.018756083, 0.018757583, 0.0187595, 0.018761403], 'source_diff': [0, 1.7219999999991409e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.6110000000020552e-06, 1.5409999999972668e-06, 1.584000000002389e-06, 1.694000000000001e-06, 1.582999999999446e-06, 1.4729999999983645e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.5550000000003061e-06, 1.917000000000585e-06, 1.931000000000155e-06, 1.971999999999391e-06, 1.582999999999446e-06, 2.05600000000028e-06, 1.694000000000001e-06, 1.4860000000019302e-06, 2.0279999999976706e-06, 1.51400000000107e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.598000000001959e-06, 2.026999999998197e-06, 1.598000000001959e-06, 1.4719999999988909e-06, 1.957999999999821e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.6389999999977256e-06, 1.7500000000017502e-06, 1.5550000000003061e-06, 1.7219999999991409e-06, 1.985999999998961e-06, 1.8750000000018752e-06, 1.4449999999992247e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.5700000000028191e-06, 1.8050000000005562e-06, 1.8889999999979756e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.917000000000585e-06, 1.6660000000008612e-06, 1.5000000000015001e-06, 1.9169999999971155e-06, 1.903000000001015e-06], 'sourcediff': [0, 1.7219999999991409e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.6110000000020552e-06, 1.5409999999972668e-06, 1.584000000002389e-06, 1.694000000000001e-06, 1.582999999999446e-06, 1.4729999999983645e-06, 1.7770000000014163e-06, 1.7089999999990446e-06, 1.5550000000003061e-06, 1.917000000000585e-06, 1.931000000000155e-06, 1.971999999999391e-06, 1.582999999999446e-06, 2.05600000000028e-06, 1.694000000000001e-06, 1.4860000000019302e-06, 2.0279999999976706e-06, 1.51400000000107e-06, 1.6109999999985858e-06, 1.944000000000251e-06, 1.598000000001959e-06, 2.026999999998197e-06, 1.598000000001959e-06, 1.4719999999988909e-06, 1.957999999999821e-06, 2.01400000000157e-06, 1.8060000000000298e-06, 1.6389999999977256e-06, 1.7500000000017502e-06, 1.5550000000003061e-06, 1.7219999999991409e-06, 1.985999999998961e-06, 1.8750000000018752e-06, 1.4449999999992247e-06, 1.6800000000004311e-06, 1.6389999999977256e-06, 1.5700000000028191e-06, 1.8050000000005562e-06, 1.8889999999979756e-06, 1.4719999999988909e-06, 1.5559999999997798e-06, 1.917000000000585e-06, 1.6660000000008612e-06, 1.5000000000015001e-06, 1.9169999999971155e-06, 1.903000000001015e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:48.310" endtime="20201112 09:42:48.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.306" endtime="20201112 09:42:48.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.317" level="INFO">${RESULT} = [{'time': 0.018678764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.018682181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:48.314" endtime="20201112 09:42:48.317"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.325" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018678764, 0.018682181, 0.018685333, 0.018688611, 0.018691667, 0.018695153, 0.018698625, 0.018702528, 0.018706167, 0.018709347, 0.018712889, 0.018716444, 0.018720069, 0.018723139, 0.018727...</msg>
<status status="PASS" starttime="20201112 09:42:48.318" endtime="20201112 09:42:48.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.329" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.328" endtime="20201112 09:42:48.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.331" level="INFO">VALUE: [1.7219999999991409e-06, 1.4999999999980307e-06, 1.5409999999972668e-06, 1.694000000000001e-06, 1.4729999999983645e-06, 1.7089999999990446e-06, 1.917000000000585e-06, 1.971999999999391e-06, 2.05600000000028e-06, 1.4860000000019302e-06, 1.51400000000107e-06, 1.944000000000251e-06, 2.026999999998197e-06, 1.4719999999988909e-06, 2.01400000000157e-06, 1.6389999999977256e-06, 1.5550000000003061e-06, 1.985999999998961e-06, 1.4449999999992247e-06, 1.6389999999977256e-06, 1.8050000000005562e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.5000000000015001e-06, 1.903000000001015e-06]</msg>
<status status="PASS" starttime="20201112 09:42:48.330" endtime="20201112 09:42:48.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.325" endtime="20201112 09:42:48.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.335" endtime="20201112 09:42:48.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.338" endtime="20201112 09:42:48.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.337" endtime="20201112 09:42:48.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.333" endtime="20201112 09:42:48.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:47.973" endtime="20201112 09:42:48.359"></status>
</kw>
<msg timestamp="20201112 09:42:48.359" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.368" endtime="20201112 09:42:48.378"></status>
</kw>
<msg timestamp="20201112 09:42:48.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.367" endtime="20201112 09:42:48.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.380" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.379" endtime="20201112 09:42:48.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.381" endtime="20201112 09:42:48.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.363" endtime="20201112 09:42:48.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.361" endtime="20201112 09:42:48.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.390" endtime="20201112 09:42:48.656"></status>
</kw>
<msg timestamp="20201112 09:42:48.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.389" endtime="20201112 09:42:48.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:48.659" endtime="20201112 09:42:48.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.664" endtime="20201112 09:42:48.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.386" endtime="20201112 09:42:48.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.385" endtime="20201112 09:42:48.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.670" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:48.669" endtime="20201112 09:42:48.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.674" level="INFO">VALUE: [{'time': 0.020151903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020153764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.020155722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.02015775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.020159375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6250000000016251e-06, 'source_diff': 1.6250000000016251e-06}, {'time': 0.020160875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.020162514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.020164153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.020166153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.020168153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.020170153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.020172, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.846999999999266e-06, 'source_diff': 1.846999999999266e-06}, {'time': 0.02017375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.020175472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.020177181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7089999999990446e-06, 'source_diff': 1.7089999999990446e-06}, {'time': 0.020178833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.020180556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7229999999986145e-06, 'source_diff': 1.7229999999986145e-06}, {'time': 0.020182528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9720000000028604e-06, 'source_diff': 1.9720000000028604e-06}, {'time': 0.020184264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.020186125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.020187903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.020189417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.020191167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.020192667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.020194222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.020195889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.020197389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.02019925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.020200736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.020202417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.020204306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.020205958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.020207833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.020209375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.020211278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9029999999975455e-06, 'source_diff': 1.9029999999975455e-06}, {'time': 0.020213222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.020215139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.020216861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999991409e-06, 'source_diff': 1.7219999999991409e-06}, {'time': 0.02021875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.020220431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.020221917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4859999999984608e-06, 'source_diff': 1.4859999999984608e-06}, {'time': 0.020223903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.020225889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.020227653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.020229458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8049999999970867e-06, 'source_diff': 1.8049999999970867e-06}, {'time': 0.020231014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.02023275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.020234542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7920000000004599e-06, 'source_diff': 1.7920000000004599e-06}, {'time': 0.020236375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.020238125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:48.671" endtime="20201112 09:42:48.675"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.667" endtime="20201112 09:42:48.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:48.689" level="INFO">${debug-compressed} = {'time': [0.020151903, 0.020153764, 0.020155722, 0.02015775, 0.020159375, 0.020160875, 0.020162514, 0.020164153, 0.020166153, 0.020168153, 0.020170153, 0.020172, 0.02017375, 0.020175472, 0.020177181, ...</msg>
<status status="PASS" starttime="20201112 09:42:48.676" endtime="20201112 09:42:48.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.693" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:48.692" endtime="20201112 09:42:48.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.696" level="INFO">VALUE: {'time': [0.020151903, 0.020153764, 0.020155722, 0.02015775, 0.020159375, 0.020160875, 0.020162514, 0.020164153, 0.020166153, 0.020168153, 0.020170153, 0.020172, 0.02017375, 0.020175472, 0.020177181, 0.020178833, 0.020180556, 0.020182528, 0.020184264, 0.020186125, 0.020187903, 0.020189417, 0.020191167, 0.020192667, 0.020194222, 0.020195889, 0.020197389, 0.02019925, 0.020200736, 0.020202417, 0.020204306, 0.020205958, 0.020207833, 0.020209375, 0.020211278, 0.020213222, 0.020215139, 0.020216861, 0.02021875, 0.020220431, 0.020221917, 0.020223903, 0.020225889, 0.020227653, 0.020229458, 0.020231014, 0.02023275, 0.020234542, 0.020236375, 0.020238125], 'source_diff': [0, 1.8610000000023053e-06, 1.957999999999821e-06, 2.0279999999976706e-06, 1.6250000000016251e-06, 1.5000000000015001e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.6520000000012913e-06, 1.7229999999986145e-06, 1.9720000000028604e-06, 1.7359999999987108e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.7499999999982807e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.8609999999988358e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.8889999999979756e-06, 1.6520000000012913e-06, 1.8750000000018752e-06, 1.5420000000002099e-06, 1.9029999999975455e-06, 1.944000000000251e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.889000000001445e-06, 1.6809999999999048e-06, 1.4859999999984608e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.8049999999970867e-06, 1.5559999999997798e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.832999999999696e-06, 1.7499999999982807e-06], 'sourcediff': [0, 1.8610000000023053e-06, 1.957999999999821e-06, 2.0279999999976706e-06, 1.6250000000016251e-06, 1.5000000000015001e-06, 1.6389999999977256e-06, 1.639000000001195e-06, 1.9999999999985307e-06, 2.000000000002e-06, 1.9999999999985307e-06, 1.846999999999266e-06, 1.7500000000017502e-06, 1.7219999999991409e-06, 1.7089999999990446e-06, 1.6520000000012913e-06, 1.7229999999986145e-06, 1.9720000000028604e-06, 1.7359999999987108e-06, 1.8609999999988358e-06, 1.77800000000089e-06, 1.51400000000107e-06, 1.7499999999982807e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.6670000000003349e-06, 1.4999999999980307e-06, 1.8609999999988358e-06, 1.4860000000019302e-06, 1.6809999999999048e-06, 1.8889999999979756e-06, 1.6520000000012913e-06, 1.8750000000018752e-06, 1.5420000000002099e-06, 1.9029999999975455e-06, 1.944000000000251e-06, 1.917000000000585e-06, 1.7219999999991409e-06, 1.889000000001445e-06, 1.6809999999999048e-06, 1.4859999999984608e-06, 1.9860000000024303e-06, 1.985999999998961e-06, 1.76400000000132e-06, 1.8049999999970867e-06, 1.5559999999997798e-06, 1.7360000000021802e-06, 1.7920000000004599e-06, 1.832999999999696e-06, 1.7499999999982807e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:48.694" endtime="20201112 09:42:48.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.690" endtime="20201112 09:42:48.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:48.700" level="INFO">${RESULT} = [{'time': 0.020153764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8610000000023053e-06, 'source_diff': 1.8610000000023053e-06}, {'time': 0.02015775, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:42:48.698" endtime="20201112 09:42:48.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:48.708" level="INFO">${GPIO_OVERHEAD} = {'time': [0.020153764, 0.02015775, 0.020160875, 0.020164153, 0.020168153, 0.020172, 0.020175472, 0.020178833, 0.020182528, 0.020186125, 0.020189417, 0.020192667, 0.020195889, 0.02019925, 0.020202417, ...</msg>
<status status="PASS" starttime="20201112 09:42:48.701" endtime="20201112 09:42:48.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.712" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:48.711" endtime="20201112 09:42:48.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.714" level="INFO">VALUE: [1.8610000000023053e-06, 2.0279999999976706e-06, 1.5000000000015001e-06, 1.639000000001195e-06, 2.000000000002e-06, 1.846999999999266e-06, 1.7219999999991409e-06, 1.6520000000012913e-06, 1.9720000000028604e-06, 1.8609999999988358e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.6670000000003349e-06, 1.8609999999988358e-06, 1.6809999999999048e-06, 1.6520000000012913e-06, 1.5420000000002099e-06, 1.944000000000251e-06, 1.7219999999991409e-06, 1.6809999999999048e-06, 1.9860000000024303e-06, 1.76400000000132e-06, 1.5559999999997798e-06, 1.7920000000004599e-06, 1.7499999999982807e-06]</msg>
<status status="PASS" starttime="20201112 09:42:48.713" endtime="20201112 09:42:48.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.709" endtime="20201112 09:42:48.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.718" endtime="20201112 09:42:48.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:48.721" endtime="20201112 09:42:48.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.720" endtime="20201112 09:42:48.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.716" endtime="20201112 09:42:48.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.360" endtime="20201112 09:42:48.743"></status>
</kw>
<msg timestamp="20201112 09:42:48.743" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.751" endtime="20201112 09:42:48.760"></status>
</kw>
<msg timestamp="20201112 09:42:48.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.749" endtime="20201112 09:42:48.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:48.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:48.762" endtime="20201112 09:42:48.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.764" endtime="20201112 09:42:48.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.747" endtime="20201112 09:42:48.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.745" endtime="20201112 09:42:48.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:48.773" endtime="20201112 09:42:49.042"></status>
</kw>
<msg timestamp="20201112 09:42:49.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01882125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:48.771" endtime="20201112 09:42:49.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01882125, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:42:49.045" endtime="20201112 09:42:49.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.051" endtime="20201112 09:42:49.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.769" endtime="20201112 09:42:49.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.767" endtime="20201112 09:42:49.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.057" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:49.056" endtime="20201112 09:42:49.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.060" level="INFO">VALUE: [{'time': 0.0188195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01882125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018823014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018824792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.77800000000089e-06, 'source_diff': 1.77800000000089e-06}, {'time': 0.018826347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018828319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018830167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8479999999987395e-06, 'source_diff': 1.8479999999987395e-06}, {'time': 0.018831861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018833597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7360000000021802e-06, 'source_diff': 1.7360000000021802e-06}, {'time': 0.018835153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018836833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6800000000004311e-06, 'source_diff': 1.6800000000004311e-06}, {'time': 0.018838514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6809999999999048e-06, 'source_diff': 1.6809999999999048e-06}, {'time': 0.018840014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018841903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.889000000001445e-06, 'source_diff': 1.889000000001445e-06}, {'time': 0.018843417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018845056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018846833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7770000000014163e-06, 'source_diff': 1.7770000000014163e-06}, {'time': 0.018848569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018850111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5420000000002099e-06, 'source_diff': 1.5420000000002099e-06}, {'time': 0.018852097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018853694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018855458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7639999999978506e-06, 'source_diff': 1.7639999999978506e-06}, {'time': 0.018856958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018858472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.51400000000107e-06, 'source_diff': 1.51400000000107e-06}, {'time': 0.018860111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.018861764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.653000000000765e-06, 'source_diff': 1.653000000000765e-06}, {'time': 0.01886375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018865667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018867319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6520000000012913e-06, 'source_diff': 1.6520000000012913e-06}, {'time': 0.018869319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999985307e-06, 'source_diff': 1.9999999999985307e-06}, {'time': 0.018871139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018872736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5970000000024853e-06, 'source_diff': 1.5970000000024853e-06}, {'time': 0.018874597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.018876514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018878014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.01888, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.018881833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018883264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4309999999996548e-06, 'source_diff': 1.4309999999996548e-06}, {'time': 0.018885097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.832999999999696e-06, 'source_diff': 1.832999999999696e-06}, {'time': 0.018887056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9589999999992946e-06, 'source_diff': 1.9589999999992946e-06}, {'time': 0.018888556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018890347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7909999999975168e-06, 'source_diff': 1.7909999999975168e-06}, {'time': 0.018891903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5560000000032492e-06, 'source_diff': 1.5560000000032492e-06}, {'time': 0.018893556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018895514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.957999999999821e-06, 'source_diff': 1.957999999999821e-06}, {'time': 0.018897069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5550000000003061e-06, 'source_diff': 1.5550000000003061e-06}, {'time': 0.018898986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018900972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.018902889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018904833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:49.058" endtime="20201112 09:42:49.061"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.054" endtime="20201112 09:42:49.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:49.075" level="INFO">${debug-compressed} = {'time': [0.0188195, 0.01882125, 0.018823014, 0.018824792, 0.018826347, 0.018828319, 0.018830167, 0.018831861, 0.018833597, 0.018835153, 0.018836833, 0.018838514, 0.018840014, 0.018841903, 0.018843417...</msg>
<status status="PASS" starttime="20201112 09:42:49.063" endtime="20201112 09:42:49.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.079" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:49.078" endtime="20201112 09:42:49.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.082" level="INFO">VALUE: {'time': [0.0188195, 0.01882125, 0.018823014, 0.018824792, 0.018826347, 0.018828319, 0.018830167, 0.018831861, 0.018833597, 0.018835153, 0.018836833, 0.018838514, 0.018840014, 0.018841903, 0.018843417, 0.018845056, 0.018846833, 0.018848569, 0.018850111, 0.018852097, 0.018853694, 0.018855458, 0.018856958, 0.018858472, 0.018860111, 0.018861764, 0.01886375, 0.018865667, 0.018867319, 0.018869319, 0.018871139, 0.018872736, 0.018874597, 0.018876514, 0.018878014, 0.01888, 0.018881833, 0.018883264, 0.018885097, 0.018887056, 0.018888556, 0.018890347, 0.018891903, 0.018893556, 0.018895514, 0.018897069, 0.018898986, 0.018900972, 0.018902889, 0.018904833], 'source_diff': [0, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.5550000000003061e-06, 1.971999999999391e-06, 1.8479999999987395e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.5559999999997798e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.51400000000107e-06, 1.6389999999977256e-06, 1.7770000000014163e-06, 1.7359999999987108e-06, 1.5420000000002099e-06, 1.9860000000024303e-06, 1.5969999999990159e-06, 1.7639999999978506e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.6520000000012913e-06, 1.9999999999985307e-06, 1.8199999999995997e-06, 1.5970000000024853e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.9860000000024303e-06, 1.832999999999696e-06, 1.4309999999996548e-06, 1.832999999999696e-06, 1.9589999999992946e-06, 1.5000000000015001e-06, 1.7909999999975168e-06, 1.5560000000032492e-06, 1.6529999999972955e-06, 1.957999999999821e-06, 1.5550000000003061e-06, 1.917000000000585e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.944000000000251e-06], 'sourcediff': [0, 1.7500000000017502e-06, 1.7639999999978506e-06, 1.77800000000089e-06, 1.5550000000003061e-06, 1.971999999999391e-06, 1.8479999999987395e-06, 1.694000000000001e-06, 1.7360000000021802e-06, 1.5559999999997798e-06, 1.6800000000004311e-06, 1.6809999999999048e-06, 1.4999999999980307e-06, 1.889000000001445e-06, 1.51400000000107e-06, 1.6389999999977256e-06, 1.7770000000014163e-06, 1.7359999999987108e-06, 1.5420000000002099e-06, 1.9860000000024303e-06, 1.5969999999990159e-06, 1.7639999999978506e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.6389999999977256e-06, 1.653000000000765e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.6520000000012913e-06, 1.9999999999985307e-06, 1.8199999999995997e-06, 1.5970000000024853e-06, 1.8609999999988358e-06, 1.917000000000585e-06, 1.4999999999980307e-06, 1.9860000000024303e-06, 1.832999999999696e-06, 1.4309999999996548e-06, 1.832999999999696e-06, 1.9589999999992946e-06, 1.5000000000015001e-06, 1.7909999999975168e-06, 1.5560000000032492e-06, 1.6529999999972955e-06, 1.957999999999821e-06, 1.5550000000003061e-06, 1.917000000000585e-06, 1.985999999998961e-06, 1.917000000000585e-06, 1.944000000000251e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:49.080" endtime="20201112 09:42:49.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.076" endtime="20201112 09:42:49.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.087" level="INFO">${RESULT} = [{'time': 0.01882125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7500000000017502e-06, 'source_diff': 1.7500000000017502e-06}, {'time': 0.018824792, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:42:49.084" endtime="20201112 09:42:49.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.095" level="INFO">${GPIO_OVERHEAD} = {'time': [0.01882125, 0.018824792, 0.018828319, 0.018831861, 0.018835153, 0.018838514, 0.018841903, 0.018845056, 0.018848569, 0.018852097, 0.018855458, 0.018858472, 0.018861764, 0.018865667, 0.0188693...</msg>
<status status="PASS" starttime="20201112 09:42:49.088" endtime="20201112 09:42:49.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.099" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:49.098" endtime="20201112 09:42:49.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.101" level="INFO">VALUE: [1.7500000000017502e-06, 1.77800000000089e-06, 1.971999999999391e-06, 1.694000000000001e-06, 1.5559999999997798e-06, 1.6809999999999048e-06, 1.889000000001445e-06, 1.6389999999977256e-06, 1.7359999999987108e-06, 1.9860000000024303e-06, 1.7639999999978506e-06, 1.51400000000107e-06, 1.653000000000765e-06, 1.917000000000585e-06, 1.9999999999985307e-06, 1.5970000000024853e-06, 1.917000000000585e-06, 1.9860000000024303e-06, 1.4309999999996548e-06, 1.9589999999992946e-06, 1.7909999999975168e-06, 1.6529999999972955e-06, 1.5550000000003061e-06, 1.985999999998961e-06, 1.944000000000251e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.100" endtime="20201112 09:42:49.102"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.096" endtime="20201112 09:42:49.102"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.105" endtime="20201112 09:42:49.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.108" endtime="20201112 09:42:49.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.106" endtime="20201112 09:42:49.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.103" endtime="20201112 09:42:49.128"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:48.744" endtime="20201112 09:42:49.129"></status>
</kw>
<msg timestamp="20201112 09:42:49.129" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.136" endtime="20201112 09:42:49.146"></status>
</kw>
<msg timestamp="20201112 09:42:49.146" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.135" endtime="20201112 09:42:49.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.149" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.147" endtime="20201112 09:42:49.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.150" endtime="20201112 09:42:49.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.132" endtime="20201112 09:42:49.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.131" endtime="20201112 09:42:49.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.159" endtime="20201112 09:42:49.424"></status>
</kw>
<msg timestamp="20201112 09:42:49.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018181194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.157" endtime="20201112 09:42:49.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018181194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.427" endtime="20201112 09:42:49.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.432" endtime="20201112 09:42:49.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.155" endtime="20201112 09:42:49.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.153" endtime="20201112 09:42:49.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.438" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 09:42:49.437" endtime="20201112 09:42:49.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.442" level="INFO">VALUE: [{'time': 0.018179375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018181194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.01818275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5559999999997798e-06, 'source_diff': 1.5559999999997798e-06}, {'time': 0.018184611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8609999999988358e-06, 'source_diff': 1.8609999999988358e-06}, {'time': 0.01818625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.639000000001195e-06, 'source_diff': 1.639000000001195e-06}, {'time': 0.018188069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018189944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999984057e-06, 'source_diff': 1.8749999999984057e-06}, {'time': 0.018191944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.000000000002e-06, 'source_diff': 2.000000000002e-06}, {'time': 0.018193764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8199999999995997e-06, 'source_diff': 1.8199999999995997e-06}, {'time': 0.018195264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4999999999980307e-06, 'source_diff': 1.4999999999980307e-06}, {'time': 0.018197236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.971999999999391e-06, 'source_diff': 1.971999999999391e-06}, {'time': 0.018199222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9860000000024303e-06, 'source_diff': 1.9860000000024303e-06}, {'time': 0.01820075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018202778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.018204764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.985999999998961e-06, 'source_diff': 1.985999999998961e-06}, {'time': 0.01820625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4860000000019302e-06, 'source_diff': 1.4860000000019302e-06}, {'time': 0.018207722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018209639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018211167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.52800000000064e-06, 'source_diff': 1.52800000000064e-06}, {'time': 0.018213083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018214972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8889999999979756e-06, 'source_diff': 1.8889999999979756e-06}, {'time': 0.018216431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.459000000002264e-06, 'source_diff': 1.459000000002264e-06}, {'time': 0.018218375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9439999999967816e-06, 'source_diff': 1.9439999999967816e-06}, {'time': 0.018220097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018223597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.02800000000114e-06, 'source_diff': 2.02800000000114e-06}, {'time': 0.018225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7499999999982807e-06, 'source_diff': 1.7499999999982807e-06}, {'time': 0.018226819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4719999999988909e-06, 'source_diff': 1.4719999999988909e-06}, {'time': 0.018229028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.209000000003014e-06, 'source_diff': 2.209000000003014e-06}, {'time': 0.018230722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.694000000000001e-06, 'source_diff': 1.694000000000001e-06}, {'time': 0.018232458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7359999999987108e-06, 'source_diff': 1.7359999999987108e-06}, {'time': 0.018234125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000003349e-06, 'source_diff': 1.6670000000003349e-06}, {'time': 0.018236139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0139999999981006e-06, 'source_diff': 2.0139999999981006e-06}, {'time': 0.018237639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}, {'time': 0.018239236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5969999999990159e-06, 'source_diff': 1.5969999999990159e-06}, {'time': 0.018240931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.0182425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.018244222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.018245917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6949999999994747e-06, 'source_diff': 1.6949999999994747e-06}, {'time': 0.018247833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9160000000011113e-06, 'source_diff': 1.9160000000011113e-06}, {'time': 0.018249486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.018251403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018253278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8750000000018752e-06, 'source_diff': 1.8750000000018752e-06}, {'time': 0.018254944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6659999999973918e-06, 'source_diff': 1.6659999999973918e-06}, {'time': 0.018256861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.917000000000585e-06, 'source_diff': 1.917000000000585e-06}, {'time': 0.018258625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.76400000000132e-06, 'source_diff': 1.76400000000132e-06}, {'time': 0.018260569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944000000000251e-06, 'source_diff': 1.944000000000251e-06}, {'time': 0.018262597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0279999999976706e-06, 'source_diff': 2.0279999999976706e-06}, {'time': 0.0182645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.903000000001015e-06, 'source_diff': 1.903000000001015e-06}, {'time': 0.018266, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5000000000015001e-06, 'source_diff': 1.5000000000015001e-06}]</msg>
<status status="PASS" starttime="20201112 09:42:49.439" endtime="20201112 09:42:49.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.435" endtime="20201112 09:42:49.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 09:42:49.458" level="INFO">${debug-compressed} = {'time': [0.018179375, 0.018181194, 0.01818275, 0.018184611, 0.01818625, 0.018188069, 0.018189944, 0.018191944, 0.018193764, 0.018195264, 0.018197236, 0.018199222, 0.01820075, 0.018202778, 0.018204764...</msg>
<status status="PASS" starttime="20201112 09:42:49.444" endtime="20201112 09:42:49.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.461" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 09:42:49.461" endtime="20201112 09:42:49.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.465" level="INFO">VALUE: {'time': [0.018179375, 0.018181194, 0.01818275, 0.018184611, 0.01818625, 0.018188069, 0.018189944, 0.018191944, 0.018193764, 0.018195264, 0.018197236, 0.018199222, 0.01820075, 0.018202778, 0.018204764, 0.01820625, 0.018207722, 0.018209639, 0.018211167, 0.018213083, 0.018214972, 0.018216431, 0.018218375, 0.018220097, 0.018221569, 0.018223597, 0.018225347, 0.018226819, 0.018229028, 0.018230722, 0.018232458, 0.018234125, 0.018236139, 0.018237639, 0.018239236, 0.018240931, 0.0182425, 0.018244222, 0.018245917, 0.018247833, 0.018249486, 0.018251403, 0.018253278, 0.018254944, 0.018256861, 0.018258625, 0.018260569, 0.018262597, 0.0182645, 0.018266], 'source_diff': [0, 1.819000000000126e-06, 1.5559999999997798e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 2.000000000002e-06, 1.8199999999995997e-06, 1.4999999999980307e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 1.52800000000064e-06, 2.0279999999976706e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.52800000000064e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 1.459000000002264e-06, 1.9439999999967816e-06, 1.7220000000026103e-06, 1.4719999999988909e-06, 2.02800000000114e-06, 1.7499999999982807e-06, 1.4719999999988909e-06, 2.209000000003014e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 2.0139999999981006e-06, 1.5000000000015001e-06, 1.5969999999990159e-06, 1.6949999999994747e-06, 1.568999999999876e-06, 1.7220000000026103e-06, 1.6949999999994747e-06, 1.9160000000011113e-06, 1.6529999999972955e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.6659999999973918e-06, 1.917000000000585e-06, 1.76400000000132e-06, 1.944000000000251e-06, 2.0279999999976706e-06, 1.903000000001015e-06, 1.5000000000015001e-06], 'sourcediff': [0, 1.819000000000126e-06, 1.5559999999997798e-06, 1.8609999999988358e-06, 1.639000000001195e-06, 1.819000000000126e-06, 1.8749999999984057e-06, 2.000000000002e-06, 1.8199999999995997e-06, 1.4999999999980307e-06, 1.971999999999391e-06, 1.9860000000024303e-06, 1.52800000000064e-06, 2.0279999999976706e-06, 1.985999999998961e-06, 1.4860000000019302e-06, 1.4719999999988909e-06, 1.917000000000585e-06, 1.52800000000064e-06, 1.9160000000011113e-06, 1.8889999999979756e-06, 1.459000000002264e-06, 1.9439999999967816e-06, 1.7220000000026103e-06, 1.4719999999988909e-06, 2.02800000000114e-06, 1.7499999999982807e-06, 1.4719999999988909e-06, 2.209000000003014e-06, 1.694000000000001e-06, 1.7359999999987108e-06, 1.6670000000003349e-06, 2.0139999999981006e-06, 1.5000000000015001e-06, 1.5969999999990159e-06, 1.6949999999994747e-06, 1.568999999999876e-06, 1.7220000000026103e-06, 1.6949999999994747e-06, 1.9160000000011113e-06, 1.6529999999972955e-06, 1.917000000000585e-06, 1.8750000000018752e-06, 1.6659999999973918e-06, 1.917000000000585e-06, 1.76400000000132e-06, 1.944000000000251e-06, 2.0279999999976706e-06, 1.903000000001015e-06, 1.5000000000015001e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 09:42:49.463" endtime="20201112 09:42:49.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.459" endtime="20201112 09:42:49.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.469" level="INFO">${RESULT} = [{'time': 0.018181194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.819000000000126e-06, 'source_diff': 1.819000000000126e-06}, {'time': 0.018184611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.466" endtime="20201112 09:42:49.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.477" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018181194, 0.018184611, 0.018188069, 0.018191944, 0.018195264, 0.018199222, 0.018202778, 0.01820625, 0.018209639, 0.018213083, 0.018216431, 0.018220097, 0.018223597, 0.018226819, 0.0182307...</msg>
<status status="PASS" starttime="20201112 09:42:49.470" endtime="20201112 09:42:49.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.481" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 09:42:49.480" endtime="20201112 09:42:49.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.483" level="INFO">VALUE: [1.819000000000126e-06, 1.8609999999988358e-06, 1.819000000000126e-06, 2.000000000002e-06, 1.4999999999980307e-06, 1.9860000000024303e-06, 2.0279999999976706e-06, 1.4860000000019302e-06, 1.917000000000585e-06, 1.9160000000011113e-06, 1.459000000002264e-06, 1.7220000000026103e-06, 2.02800000000114e-06, 1.4719999999988909e-06, 1.694000000000001e-06, 1.6670000000003349e-06, 1.5000000000015001e-06, 1.6949999999994747e-06, 1.7220000000026103e-06, 1.9160000000011113e-06, 1.917000000000585e-06, 1.6659999999973918e-06, 1.76400000000132e-06, 2.0279999999976706e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.482" endtime="20201112 09:42:49.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.478" endtime="20201112 09:42:49.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.486" endtime="20201112 09:42:49.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.490" endtime="20201112 09:42:49.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.488" endtime="20201112 09:42:49.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.485" endtime="20201112 09:42:49.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.129" endtime="20201112 09:42:49.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:41.809" endtime="20201112 09:42:49.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.515" endtime="20201112 09:42:49.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.514" endtime="20201112 09:42:49.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.512" endtime="20201112 09:42:49.536"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:41.694" endtime="20201112 09:42:49.536" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.545" endtime="20201112 09:42:49.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.543" endtime="20201112 09:42:49.565"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.579" endtime="20201112 09:42:49.598"></status>
</kw>
<msg timestamp="20201112 09:42:49.598" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.576" endtime="20201112 09:42:49.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.601" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.599" endtime="20201112 09:42:49.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.604" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:42:49.602" endtime="20201112 09:42:49.604"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.573" endtime="20201112 09:42:49.605"></status>
</kw>
<status status="FAIL" starttime="20201112 09:42:49.571" endtime="20201112 09:42:49.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.570" endtime="20201112 09:42:49.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:42:49.609" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:42:49.608" endtime="20201112 09:42:49.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.606" endtime="20201112 09:42:49.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.569" endtime="20201112 09:42:49.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.569" endtime="20201112 09:42:49.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.611" endtime="20201112 09:42:49.612"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.567" endtime="20201112 09:42:49.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.566" endtime="20201112 09:42:49.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.542" endtime="20201112 09:42:49.613"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 09:42:49.616" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.624" endtime="20201112 09:42:49.635"></status>
</kw>
<msg timestamp="20201112 09:42:49.636" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.622" endtime="20201112 09:42:49.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:49.637" endtime="20201112 09:42:49.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.639" endtime="20201112 09:42:49.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.619" endtime="20201112 09:42:49.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.618" endtime="20201112 09:42:49.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.648" endtime="20201112 09:42:49.929"></status>
</kw>
<msg timestamp="20201112 09:42:49.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070039167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070040486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.646" endtime="20201112 09:42:49.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070039167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070040486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:49.933" endtime="20201112 09:42:49.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.941" endtime="20201112 09:42:49.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.644" endtime="20201112 09:42:49.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.642" endtime="20201112 09:42:49.944"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:49.948" level="INFO">${RESULT} = [{'time': 0.070040486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.318999999999626e-06, 'source_diff': 1.318999999999626e-06}, {'time': 0.070043306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:49.945" endtime="20201112 09:42:49.948"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:49.962" level="INFO">${OVERHEAD} = {'time': [0.070040486, 0.070043306, 0.070045903, 0.070048333, 0.070050958, 0.070053208, 0.070055708, 0.07005825, 0.070060556, 0.070062847, 0.070065153, 0.070067931, 0.070070486, 0.070073194, 0.0700759...</msg>
<status status="PASS" starttime="20201112 09:42:49.949" endtime="20201112 09:42:49.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.966" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:49.965" endtime="20201112 09:42:49.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:49.968" level="INFO">VALUE: [1.318999999999626e-06, 1.0839999999984196e-06, 1.0840000000122973e-06, 1.0970000000054547e-06, 1.0689999999924371e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0699999999919108e-06, 1.096999999991577e-06, 1.0970000000054547e-06, 1.0839999999984196e-06, 1.069000000006315e-06, 1.0970000000054547e-06, 1.096999999991577e-06, 1.0980000000049284e-06, 1.0699999999919108e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.1520000000042607e-06, 1.096999999991577e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.096999999991577e-06, 1.0839999999984196e-06, 1.069000000006315e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0970000000054547e-06, 1.096999999991577e-06, 1.096999999991577e-06, 1.0970000000054547e-06, 1.0979999999910506e-06, 1.0839999999984196e-06, 1.0980000000049284e-06, 1.096999999991577e-06, 1.0979999999910506e-06, 1.0830000000128237e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000128237e-06, 1.0980000000049284e-06, 1.0699999999919108e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0980000000049284e-06]</msg>
<status status="PASS" starttime="20201112 09:42:49.967" endtime="20201112 09:42:49.969"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.963" endtime="20201112 09:42:49.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:49.971" endtime="20201112 09:42:49.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:49.975" endtime="20201112 09:42:49.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.973" endtime="20201112 09:42:49.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.970" endtime="20201112 09:42:49.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.617" endtime="20201112 09:42:49.996"></status>
</kw>
<msg timestamp="20201112 09:42:49.996" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.004" endtime="20201112 09:42:50.015"></status>
</kw>
<msg timestamp="20201112 09:42:50.015" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.002" endtime="20201112 09:42:50.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.018" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.016" endtime="20201112 09:42:50.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.019" endtime="20201112 09:42:50.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.000" endtime="20201112 09:42:50.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.998" endtime="20201112 09:42:50.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.028" endtime="20201112 09:42:50.316"></status>
</kw>
<msg timestamp="20201112 09:42:50.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.026" endtime="20201112 09:42:50.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.321" endtime="20201112 09:42:50.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.329" endtime="20201112 09:42:50.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.024" endtime="20201112 09:42:50.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.022" endtime="20201112 09:42:50.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.335" level="INFO">${RESULT} = [{'time': 0.019629486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3190000000030955e-06, 'source_diff': 1.3190000000030955e-06}, {'time': 0.019632208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.332" endtime="20201112 09:42:50.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.349" level="INFO">${OVERHEAD} = {'time': [0.019629486, 0.019632208, 0.019634931, 0.019637389, 0.019639986, 0.0196425, 0.019645153, 0.019647444, 0.019650042, 0.019652792, 0.019655569, 0.019657917, 0.019660375, 0.019663167, 0.01966554...</msg>
<status status="PASS" starttime="20201112 09:42:50.336" endtime="20201112 09:42:50.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.353" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.352" endtime="20201112 09:42:50.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.356" level="INFO">VALUE: [1.3190000000030955e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.0839999999984196e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.153000000000265e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0970000000019853e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.0839999999984196e-06, 1.153000000000265e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.1389999999972256e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.098000000001459e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.355" endtime="20201112 09:42:50.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.350" endtime="20201112 09:42:50.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.359" endtime="20201112 09:42:50.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:50.363" endtime="20201112 09:42:50.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.361" endtime="20201112 09:42:50.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.357" endtime="20201112 09:42:50.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.997" endtime="20201112 09:42:50.384"></status>
</kw>
<msg timestamp="20201112 09:42:50.384" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.392" endtime="20201112 09:42:50.403"></status>
</kw>
<msg timestamp="20201112 09:42:50.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.390" endtime="20201112 09:42:50.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.406" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:50.405" endtime="20201112 09:42:50.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.407" endtime="20201112 09:42:50.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.387" endtime="20201112 09:42:50.409"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.386" endtime="20201112 09:42:50.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.416" endtime="20201112 09:42:50.705"></status>
</kw>
<msg timestamp="20201112 09:42:50.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.414" endtime="20201112 09:42:50.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019867028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019868375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:50.710" endtime="20201112 09:42:50.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:50.718" endtime="20201112 09:42:50.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.412" endtime="20201112 09:42:50.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.410" endtime="20201112 09:42:50.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:50.724" level="INFO">${RESULT} = [{'time': 0.019868375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019870819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:50.721" endtime="20201112 09:42:50.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:50.739" level="INFO">${OVERHEAD} = {'time': [0.019868375, 0.019870819, 0.019873306, 0.019875708, 0.019878417, 0.019881208, 0.019883875, 0.019886361, 0.019888694, 0.019891444, 0.019893958, 0.019896181, 0.019898833, 0.01990125, 0.0199035...</msg>
<status status="PASS" starttime="20201112 09:42:50.725" endtime="20201112 09:42:50.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.744" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:50.743" endtime="20201112 09:42:50.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:50.746" level="INFO">VALUE: [1.3470000000022353e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.1520000000007913e-06, 1.1249999999976557e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0979999999979895e-06, 1.1249999999976557e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.153000000000265e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.125000000001125e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 09:42:50.745" endtime="20201112 09:42:55.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.740" endtime="20201112 09:42:55.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.150" endtime="20201112 09:42:55.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.157" endtime="20201112 09:42:55.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.153" endtime="20201112 09:42:55.179"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.146" endtime="20201112 09:42:55.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:50.384" endtime="20201112 09:42:55.181"></status>
</kw>
<msg timestamp="20201112 09:42:55.182" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.198" endtime="20201112 09:42:55.211"></status>
</kw>
<msg timestamp="20201112 09:42:55.212" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.194" endtime="20201112 09:42:55.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.215" endtime="20201112 09:42:55.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.218" endtime="20201112 09:42:55.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.189" endtime="20201112 09:42:55.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.185" endtime="20201112 09:42:55.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.227" endtime="20201112 09:42:55.516"></status>
</kw>
<msg timestamp="20201112 09:42:55.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032502111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032503458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.225" endtime="20201112 09:42:55.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032502111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032503458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.520" endtime="20201112 09:42:55.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.528" endtime="20201112 09:42:55.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.223" endtime="20201112 09:42:55.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.221" endtime="20201112 09:42:55.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.535" level="INFO">${RESULT} = [{'time': 0.032503458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.032506319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:55.531" endtime="20201112 09:42:55.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.549" level="INFO">${OVERHEAD} = {'time': [0.032503458, 0.032506319, 0.032508847, 0.032511681, 0.032514319, 0.032516903, 0.032519347, 0.032521569, 0.032523917, 0.032526389, 0.032528833, 0.032531583, 0.032534139, 0.032536403, 0.032538...</msg>
<status status="PASS" starttime="20201112 09:42:55.536" endtime="20201112 09:42:55.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.554" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.553" endtime="20201112 09:42:55.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.556" level="INFO">VALUE: [1.3469999999987659e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.1390000000041645e-06, 1.1109999999980857e-06, 1.082999999998946e-06, 1.0980000000049284e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000054547e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.0979999999979895e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.555" endtime="20201112 09:42:55.557"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.550" endtime="20201112 09:42:55.557"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.560" endtime="20201112 09:42:55.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.563" endtime="20201112 09:42:55.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.561" endtime="20201112 09:42:55.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.558" endtime="20201112 09:42:55.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.183" endtime="20201112 09:42:55.584"></status>
</kw>
<msg timestamp="20201112 09:42:55.584" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.591" endtime="20201112 09:42:55.602"></status>
</kw>
<msg timestamp="20201112 09:42:55.603" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.590" endtime="20201112 09:42:55.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.605" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.604" endtime="20201112 09:42:55.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.606" endtime="20201112 09:42:55.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.587" endtime="20201112 09:42:55.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.586" endtime="20201112 09:42:55.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.615" endtime="20201112 09:42:55.901"></status>
</kw>
<msg timestamp="20201112 09:42:55.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.613" endtime="20201112 09:42:55.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019416278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019417625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.905" endtime="20201112 09:42:55.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.913" endtime="20201112 09:42:55.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.611" endtime="20201112 09:42:55.915"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.609" endtime="20201112 09:42:55.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:55.920" level="INFO">${RESULT} = [{'time': 0.019417625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019420264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:55.916" endtime="20201112 09:42:55.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:55.933" level="INFO">${OVERHEAD} = {'time': [0.019417625, 0.019420264, 0.019422556, 0.019424861, 0.019427292, 0.019429972, 0.019432736, 0.019434972, 0.019437431, 0.019440236, 0.019442972, 0.019445333, 0.019447653, 0.019450292, 0.019452...</msg>
<status status="PASS" starttime="20201112 09:42:55.921" endtime="20201112 09:42:55.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.938" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:55.937" endtime="20201112 09:42:55.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.940" level="INFO">VALUE: [1.3470000000022353e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.1110000000015552e-06, 1.0979999999979895e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.139000000000695e-06, 1.1249999999976557e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.02800000000014e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201112 09:42:55.939" endtime="20201112 09:42:55.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.934" endtime="20201112 09:42:55.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.944" endtime="20201112 09:42:55.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:55.947" endtime="20201112 09:42:55.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.946" endtime="20201112 09:42:55.967"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.942" endtime="20201112 09:42:55.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.584" endtime="20201112 09:42:55.968"></status>
</kw>
<msg timestamp="20201112 09:42:55.968" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.976" endtime="20201112 09:42:55.987"></status>
</kw>
<msg timestamp="20201112 09:42:55.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.974" endtime="20201112 09:42:55.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:55.989" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:55.988" endtime="20201112 09:42:55.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.990" endtime="20201112 09:42:55.992"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.972" endtime="20201112 09:42:55.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.970" endtime="20201112 09:42:55.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:55.999" endtime="20201112 09:42:56.280"></status>
</kw>
<msg timestamp="20201112 09:42:56.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019170167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019171444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:55.998" endtime="20201112 09:42:56.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019170167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019171444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.284" endtime="20201112 09:42:56.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.293" endtime="20201112 09:42:56.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.995" endtime="20201112 09:42:56.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.994" endtime="20201112 09:42:56.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.299" level="INFO">${RESULT} = [{'time': 0.019171444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2770000000009163e-06, 'source_diff': 1.2770000000009163e-06}, {'time': 0.019174306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.296" endtime="20201112 09:42:56.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.313" level="INFO">${OVERHEAD} = {'time': [0.019171444, 0.019174306, 0.019177014, 0.019179292, 0.019181833, 0.019184486, 0.019187014, 0.019189542, 0.019192111, 0.019194597, 0.019196958, 0.019199542, 0.019202083, 0.019204444, 0.019207...</msg>
<status status="PASS" starttime="20201112 09:42:56.300" endtime="20201112 09:42:56.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.317" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.316" endtime="20201112 09:42:56.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.320" level="INFO">VALUE: [1.2770000000009163e-06, 1.0839999999984196e-06, 1.153000000000265e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.0699999999988496e-06, 1.139000000000695e-06, 1.0690000000028455e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.02800000000014e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.1249999999976557e-06, 1.1119999999975594e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.319" endtime="20201112 09:42:56.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.314" endtime="20201112 09:42:56.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.323" endtime="20201112 09:42:56.325"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.327" endtime="20201112 09:42:56.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.325" endtime="20201112 09:42:56.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.322" endtime="20201112 09:42:56.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:55.969" endtime="20201112 09:42:56.347"></status>
</kw>
<msg timestamp="20201112 09:42:56.348" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.355" endtime="20201112 09:42:56.366"></status>
</kw>
<msg timestamp="20201112 09:42:56.366" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.354" endtime="20201112 09:42:56.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.369" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.367" endtime="20201112 09:42:56.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.370" endtime="20201112 09:42:56.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.351" endtime="20201112 09:42:56.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.349" endtime="20201112 09:42:56.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.379" endtime="20201112 09:42:56.659"></status>
</kw>
<msg timestamp="20201112 09:42:56.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019238542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019239889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.377" endtime="20201112 09:42:56.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019238542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019239889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.663" endtime="20201112 09:42:56.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.671" endtime="20201112 09:42:56.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.375" endtime="20201112 09:42:56.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.373" endtime="20201112 09:42:56.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:56.678" level="INFO">${RESULT} = [{'time': 0.019239889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019242639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:56.674" endtime="20201112 09:42:56.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:56.692" level="INFO">${OVERHEAD} = {'time': [0.019239889, 0.019242639, 0.019245111, 0.019247319, 0.019249667, 0.019252153, 0.019254486, 0.019256972, 0.019259194, 0.019261694, 0.019264347, 0.019267028, 0.019269278, 0.019271597, 0.019274...</msg>
<status status="PASS" starttime="20201112 09:42:56.679" endtime="20201112 09:42:56.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.697" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:56.696" endtime="20201112 09:42:56.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.699" level="INFO">VALUE: [1.3469999999987659e-06, 1.0559999999992797e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.125000000001125e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0420000000031793e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.1389999999972256e-06, 1.1249999999976557e-06, 1.084000000001889e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:56.698" endtime="20201112 09:42:56.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.693" endtime="20201112 09:42:56.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.703" endtime="20201112 09:42:56.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:56.706" endtime="20201112 09:42:56.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.705" endtime="20201112 09:42:56.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.701" endtime="20201112 09:42:56.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.348" endtime="20201112 09:42:56.727"></status>
</kw>
<msg timestamp="20201112 09:42:56.727" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.735" endtime="20201112 09:42:56.746"></status>
</kw>
<msg timestamp="20201112 09:42:56.746" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.733" endtime="20201112 09:42:56.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:56.749" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:56.747" endtime="20201112 09:42:56.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.750" endtime="20201112 09:42:56.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.730" endtime="20201112 09:42:56.752"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.729" endtime="20201112 09:42:56.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:56.759" endtime="20201112 09:42:57.039"></status>
</kw>
<msg timestamp="20201112 09:42:57.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019339069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:56.757" endtime="20201112 09:42:57.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019339069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019340333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.044" endtime="20201112 09:42:57.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.052" endtime="20201112 09:42:57.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.755" endtime="20201112 09:42:57.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.753" endtime="20201112 09:42:57.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.059" level="INFO">${RESULT} = [{'time': 0.019340333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.26400000000082e-06, 'source_diff': 1.26400000000082e-06}, {'time': 0.019343042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:42:57.055" endtime="20201112 09:42:57.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.072" level="INFO">${OVERHEAD} = {'time': [0.019340333, 0.019343042, 0.019345458, 0.019348, 0.019350319, 0.019352639, 0.019355014, 0.019357444, 0.019359861, 0.019362125, 0.019364472, 0.019366917, 0.019369153, 0.019371764, 0.019374556...</msg>
<status status="PASS" starttime="20201112 09:42:57.059" endtime="20201112 09:42:57.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.077" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:57.076" endtime="20201112 09:42:57.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.079" level="INFO">VALUE: [1.26400000000082e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.02800000000014e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.1120000000010288e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.1109999999980857e-06, 1.084000000001889e-06, 1.0690000000028455e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.078" endtime="20201112 09:42:57.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.073" endtime="20201112 09:42:57.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.082" endtime="20201112 09:42:57.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.086" endtime="20201112 09:42:57.105"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.084" endtime="20201112 09:42:57.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.081" endtime="20201112 09:42:57.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:56.728" endtime="20201112 09:42:57.107"></status>
</kw>
<msg timestamp="20201112 09:42:57.107" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.114" endtime="20201112 09:42:57.125"></status>
</kw>
<msg timestamp="20201112 09:42:57.125" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.113" endtime="20201112 09:42:57.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.128" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.126" endtime="20201112 09:42:57.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.129" endtime="20201112 09:42:57.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.110" endtime="20201112 09:42:57.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.109" endtime="20201112 09:42:57.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.137" endtime="20201112 09:42:57.418"></status>
</kw>
<msg timestamp="20201112 09:42:57.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019204014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.136" endtime="20201112 09:42:57.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019202667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019204014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.423" endtime="20201112 09:42:57.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.431" endtime="20201112 09:42:57.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.133" endtime="20201112 09:42:57.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.132" endtime="20201112 09:42:57.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.437" level="INFO">${RESULT} = [{'time': 0.019204014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019206653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:57.434" endtime="20201112 09:42:57.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.451" level="INFO">${OVERHEAD} = {'time': [0.019204014, 0.019206653, 0.019208972, 0.019211694, 0.019214208, 0.019216792, 0.019219306, 0.019221542, 0.019224167, 0.019226917, 0.019229708, 0.019232208, 0.019234569, 0.019236861, 0.019239...</msg>
<status status="PASS" starttime="20201112 09:42:57.438" endtime="20201112 09:42:57.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.456" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:57.455" endtime="20201112 09:42:57.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.458" level="INFO">VALUE: [1.3469999999987659e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.1119999999975594e-06, 1.084000000001889e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.0550000000032755e-06, 1.0970000000019853e-06, 1.1520000000007913e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0830000000024154e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.054999999999806e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.1109999999980857e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.457" endtime="20201112 09:42:57.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.452" endtime="20201112 09:42:57.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.462" endtime="20201112 09:42:57.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.465" endtime="20201112 09:42:57.484"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.464" endtime="20201112 09:42:57.485"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.460" endtime="20201112 09:42:57.486"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.107" endtime="20201112 09:42:57.486"></status>
</kw>
<msg timestamp="20201112 09:42:57.486" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.493" endtime="20201112 09:42:57.504"></status>
</kw>
<msg timestamp="20201112 09:42:57.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.492" endtime="20201112 09:42:57.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.507" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.506" endtime="20201112 09:42:57.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.508" endtime="20201112 09:42:57.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.489" endtime="20201112 09:42:57.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.488" endtime="20201112 09:42:57.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.517" endtime="20201112 09:42:57.798"></status>
</kw>
<msg timestamp="20201112 09:42:57.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.516" endtime="20201112 09:42:57.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019333819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019335153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.802" endtime="20201112 09:42:57.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.810" endtime="20201112 09:42:57.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.513" endtime="20201112 09:42:57.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.511" endtime="20201112 09:42:57.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:57.817" level="INFO">${RESULT} = [{'time': 0.019335153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.334000000002139e-06, 'source_diff': 1.334000000002139e-06}, {'time': 0.019337958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:42:57.813" endtime="20201112 09:42:57.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:57.831" level="INFO">${OVERHEAD} = {'time': [0.019335153, 0.019337958, 0.01934075, 0.019343028, 0.019345417, 0.019348125, 0.019350486, 0.019353056, 0.019355542, 0.019358375, 0.019360944, 0.019363778, 0.019366139, 0.019368736, 0.0193713...</msg>
<status status="PASS" starttime="20201112 09:42:57.818" endtime="20201112 09:42:57.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.835" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:57.834" endtime="20201112 09:42:57.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.837" level="INFO">VALUE: [1.334000000002139e-06, 1.0269999999971968e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.0839999999984196e-06, 1.125000000001125e-06, 1.0830000000024154e-06, 1.139000000000695e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0550000000032755e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:57.836" endtime="20201112 09:42:57.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.832" endtime="20201112 09:42:57.839"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.841" endtime="20201112 09:42:57.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:57.844" endtime="20201112 09:42:57.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.843" endtime="20201112 09:42:57.864"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.839" endtime="20201112 09:42:57.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.487" endtime="20201112 09:42:57.865"></status>
</kw>
<msg timestamp="20201112 09:42:57.865" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.873" endtime="20201112 09:42:57.884"></status>
</kw>
<msg timestamp="20201112 09:42:57.884" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.871" endtime="20201112 09:42:57.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:57.887" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:57.885" endtime="20201112 09:42:57.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.888" endtime="20201112 09:42:57.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.869" endtime="20201112 09:42:57.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.867" endtime="20201112 09:42:57.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:57.897" endtime="20201112 09:42:58.177"></status>
</kw>
<msg timestamp="20201112 09:42:58.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019144319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019145681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:57.895" endtime="20201112 09:42:58.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019144319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019145681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.181" endtime="20201112 09:42:58.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.189" endtime="20201112 09:42:58.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.892" endtime="20201112 09:42:58.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.891" endtime="20201112 09:42:58.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.196" level="INFO">${RESULT} = [{'time': 0.019145681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3620000000012789e-06, 'source_diff': 1.3620000000012789e-06}, {'time': 0.019148222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:58.192" endtime="20201112 09:42:58.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.211" level="INFO">${OVERHEAD} = {'time': [0.019145681, 0.019148222, 0.019150639, 0.019153139, 0.019155639, 0.019158403, 0.019160819, 0.019163167, 0.019165417, 0.019167764, 0.019170472, 0.019173083, 0.019175431, 0.019178167, 0.019180...</msg>
<status status="PASS" starttime="20201112 09:42:58.197" endtime="20201112 09:42:58.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.215" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:58.214" endtime="20201112 09:42:58.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.217" level="INFO">VALUE: [1.3620000000012789e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.153000000000265e-06, 1.0419999999997098e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.098000000001459e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.0979999999979895e-06, 1.1109999999980857e-06, 1.0970000000019853e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.0270000000006663e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.153000000000265e-06, 1.098000000001459e-06, 1.0839999999984196e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.216" endtime="20201112 09:42:58.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.211" endtime="20201112 09:42:58.219"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.221" endtime="20201112 09:42:58.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.224" endtime="20201112 09:42:58.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.223" endtime="20201112 09:42:58.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.219" endtime="20201112 09:42:58.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:57.866" endtime="20201112 09:42:58.245"></status>
</kw>
<msg timestamp="20201112 09:42:58.245" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.253" endtime="20201112 09:42:58.264"></status>
</kw>
<msg timestamp="20201112 09:42:58.265" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.251" endtime="20201112 09:42:58.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.267" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.266" endtime="20201112 09:42:58.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.268" endtime="20201112 09:42:58.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.249" endtime="20201112 09:42:58.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.247" endtime="20201112 09:42:58.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.277" endtime="20201112 09:42:58.566"></status>
</kw>
<msg timestamp="20201112 09:42:58.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.275" endtime="20201112 09:42:58.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.570" endtime="20201112 09:42:58.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.579" endtime="20201112 09:42:58.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.273" endtime="20201112 09:42:58.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.271" endtime="20201112 09:42:58.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.586" level="INFO">${RESULT} = [{'time': 0.019571514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019573903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:58.582" endtime="20201112 09:42:58.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.600" level="INFO">${OVERHEAD} = {'time': [0.019571514, 0.019573903, 0.019576667, 0.019579417, 0.019582056, 0.019584569, 0.019587014, 0.019589306, 0.019592, 0.019594708, 0.019597028, 0.019599625, 0.019602389, 0.019604764, 0.019607153...</msg>
<status status="PASS" starttime="20201112 09:42:58.587" endtime="20201112 09:42:58.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.604" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:58.603" endtime="20201112 09:42:58.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.607" level="INFO">VALUE: [1.3470000000022353e-06, 1.1110000000015552e-06, 1.0839999999984196e-06, 1.0979999999979895e-06, 1.098000000001459e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.01400000000057e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.1389999999972256e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.0839999999984196e-06, 1.0690000000028455e-06, 1.098000000001459e-06, 1.0419999999997098e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.137999999997752e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.098000000001459e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0979999999979895e-06, 1.0979999999979895e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.606" endtime="20201112 09:42:58.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.601" endtime="20201112 09:42:58.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.610" endtime="20201112 09:42:58.612"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.614" endtime="20201112 09:42:58.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.612" endtime="20201112 09:42:58.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.609" endtime="20201112 09:42:58.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.246" endtime="20201112 09:42:58.634"></status>
</kw>
<msg timestamp="20201112 09:42:58.635" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.642" endtime="20201112 09:42:58.652"></status>
</kw>
<msg timestamp="20201112 09:42:58.653" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.641" endtime="20201112 09:42:58.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.655" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:58.654" endtime="20201112 09:42:58.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.656" endtime="20201112 09:42:58.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.638" endtime="20201112 09:42:58.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.637" endtime="20201112 09:42:58.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.665" endtime="20201112 09:42:58.946"></status>
</kw>
<msg timestamp="20201112 09:42:58.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019197722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019199056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.664" endtime="20201112 09:42:58.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019197722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019199056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:58.950" endtime="20201112 09:42:58.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.958" endtime="20201112 09:42:58.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.661" endtime="20201112 09:42:58.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.660" endtime="20201112 09:42:58.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:58.965" level="INFO">${RESULT} = [{'time': 0.019199056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3339999999986696e-06, 'source_diff': 1.3339999999986696e-06}, {'time': 0.019201833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:58.962" endtime="20201112 09:42:58.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:58.979" level="INFO">${OVERHEAD} = {'time': [0.019199056, 0.019201833, 0.019204556, 0.019207069, 0.019209569, 0.019212139, 0.019214722, 0.019217111, 0.019219597, 0.019222222, 0.019224486, 0.019227097, 0.0192295, 0.019232208, 0.01923454...</msg>
<status status="PASS" starttime="20201112 09:42:58.966" endtime="20201112 09:42:58.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.983" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:58.982" endtime="20201112 09:42:58.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:58.986" level="INFO">VALUE: [1.3339999999986696e-06, 1.0830000000024154e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.098000000001459e-06, 1.0839999999984196e-06, 1.070000000002319e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 09:42:58.984" endtime="20201112 09:42:58.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.980" endtime="20201112 09:42:58.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:58.989" endtime="20201112 09:42:58.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:58.993" endtime="20201112 09:42:59.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.991" endtime="20201112 09:42:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.988" endtime="20201112 09:42:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:58.635" endtime="20201112 09:42:59.013"></status>
</kw>
<msg timestamp="20201112 09:42:59.014" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.021" endtime="20201112 09:42:59.032"></status>
</kw>
<msg timestamp="20201112 09:42:59.032" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.020" endtime="20201112 09:42:59.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.035" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.033" endtime="20201112 09:42:59.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.036" endtime="20201112 09:42:59.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.017" endtime="20201112 09:42:59.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.015" endtime="20201112 09:42:59.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.045" endtime="20201112 09:42:59.325"></status>
</kw>
<msg timestamp="20201112 09:42:59.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.043" endtime="20201112 09:42:59.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019343722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.330" endtime="20201112 09:42:59.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.338" endtime="20201112 09:42:59.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.041" endtime="20201112 09:42:59.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.039" endtime="20201112 09:42:59.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.344" level="INFO">${RESULT} = [{'time': 0.019345056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3339999999986696e-06, 'source_diff': 1.3339999999986696e-06}, {'time': 0.019347542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.341" endtime="20201112 09:42:59.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.358" level="INFO">${OVERHEAD} = {'time': [0.019345056, 0.019347542, 0.019349778, 0.019352403, 0.019355139, 0.019357389, 0.019359722, 0.019361917, 0.019364167, 0.019366597, 0.019368819, 0.019371444, 0.019374222, 0.019377014, 0.019379...</msg>
<status status="PASS" starttime="20201112 09:42:59.345" endtime="20201112 09:42:59.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.363" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:59.362" endtime="20201112 09:42:59.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.365" level="INFO">VALUE: [1.3339999999986696e-06, 1.153000000000265e-06, 1.0560000000027492e-06, 1.070000000002319e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.1249999999976557e-06, 1.0979999999979895e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.1110000000015552e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.098000000001459e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.364" endtime="20201112 09:42:59.366"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.359" endtime="20201112 09:42:59.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.369" endtime="20201112 09:42:59.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.372" endtime="20201112 09:42:59.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.370" endtime="20201112 09:42:59.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.367" endtime="20201112 09:42:59.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.014" endtime="20201112 09:42:59.393"></status>
</kw>
<msg timestamp="20201112 09:42:59.393" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.401" endtime="20201112 09:42:59.412"></status>
</kw>
<msg timestamp="20201112 09:42:59.412" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.399" endtime="20201112 09:42:59.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.415" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.413" endtime="20201112 09:42:59.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.416" endtime="20201112 09:42:59.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.396" endtime="20201112 09:42:59.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.395" endtime="20201112 09:42:59.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.425" endtime="20201112 09:42:59.705"></status>
</kw>
<msg timestamp="20201112 09:42:59.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019354278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.423" endtime="20201112 09:42:59.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019354278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.709" endtime="20201112 09:42:59.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.718" endtime="20201112 09:42:59.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.421" endtime="20201112 09:42:59.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.419" endtime="20201112 09:42:59.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:42:59.724" level="INFO">${RESULT} = [{'time': 0.019354278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019357139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:42:59.721" endtime="20201112 09:42:59.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:42:59.739" level="INFO">${OVERHEAD} = {'time': [0.019354278, 0.019357139, 0.019359625, 0.019362181, 0.019364944, 0.019367403, 0.019369778, 0.019372458, 0.019375056, 0.019377486, 0.019380139, 0.019382417, 0.019384806, 0.01938725, 0.0193897...</msg>
<status status="PASS" starttime="20201112 09:42:59.725" endtime="20201112 09:42:59.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.743" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:42:59.742" endtime="20201112 09:42:59.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.746" level="INFO">VALUE: [1.3469999999987659e-06, 1.1109999999980857e-06, 1.068999999999376e-06, 1.0979999999979895e-06, 1.137999999997752e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.0979999999979895e-06, 1.02800000000014e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0839999999984196e-06]</msg>
<status status="PASS" starttime="20201112 09:42:59.744" endtime="20201112 09:42:59.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.740" endtime="20201112 09:42:59.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.749" endtime="20201112 09:42:59.750"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:42:59.753" endtime="20201112 09:42:59.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.751" endtime="20201112 09:42:59.772"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.747" endtime="20201112 09:42:59.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.393" endtime="20201112 09:42:59.773"></status>
</kw>
<msg timestamp="20201112 09:42:59.773" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.781" endtime="20201112 09:42:59.792"></status>
</kw>
<msg timestamp="20201112 09:42:59.793" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.779" endtime="20201112 09:42:59.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:42:59.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:42:59.794" endtime="20201112 09:42:59.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.796" endtime="20201112 09:42:59.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.777" endtime="20201112 09:42:59.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.775" endtime="20201112 09:42:59.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:42:59.805" endtime="20201112 09:43:00.086"></status>
</kw>
<msg timestamp="20201112 09:43:00.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019258931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:42:59.804" endtime="20201112 09:43:00.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019258931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019260292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.090" endtime="20201112 09:43:00.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.098" endtime="20201112 09:43:00.100"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.801" endtime="20201112 09:43:00.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.800" endtime="20201112 09:43:00.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.105" level="INFO">${RESULT} = [{'time': 0.019260292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019262944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:00.102" endtime="20201112 09:43:00.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.119" level="INFO">${OVERHEAD} = {'time': [0.019260292, 0.019262944, 0.019265236, 0.0192675, 0.019269764, 0.019272458, 0.019274833, 0.019277417, 0.019279639, 0.019281819, 0.019284708, 0.019287278, 0.019289903, 0.019292653, 0.01929519...</msg>
<status status="PASS" starttime="20201112 09:43:00.106" endtime="20201112 09:43:00.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.123" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.122" endtime="20201112 09:43:00.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.126" level="INFO">VALUE: [1.3609999999983358e-06, 1.125000000001125e-06, 1.1110000000015552e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.0970000000019853e-06, 1.139000000000695e-06, 1.0970000000019853e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0690000000028455e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.124" endtime="20201112 09:43:00.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.120" endtime="20201112 09:43:00.127"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.129" endtime="20201112 09:43:00.131"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.133" endtime="20201112 09:43:00.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.131" endtime="20201112 09:43:00.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.128" endtime="20201112 09:43:00.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:59.774" endtime="20201112 09:43:00.153"></status>
</kw>
<msg timestamp="20201112 09:43:00.153" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.161" endtime="20201112 09:43:00.172"></status>
</kw>
<msg timestamp="20201112 09:43:00.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.159" endtime="20201112 09:43:00.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.174" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.173" endtime="20201112 09:43:00.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.176" endtime="20201112 09:43:00.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.157" endtime="20201112 09:43:00.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.155" endtime="20201112 09:43:00.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.184" endtime="20201112 09:43:00.465"></status>
</kw>
<msg timestamp="20201112 09:43:00.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019222319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.183" endtime="20201112 09:43:00.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019221028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019222319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.469" endtime="20201112 09:43:00.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.477" endtime="20201112 09:43:00.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.180" endtime="20201112 09:43:00.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.179" endtime="20201112 09:43:00.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.484" level="INFO">${RESULT} = [{'time': 0.019222319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2910000000004862e-06, 'source_diff': 1.2910000000004862e-06}, {'time': 0.019225208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:00.480" endtime="20201112 09:43:00.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.498" level="INFO">${OVERHEAD} = {'time': [0.019222319, 0.019225208, 0.019227486, 0.019229806, 0.019232417, 0.019234625, 0.019236847, 0.019239472, 0.019242153, 0.019244556, 0.019246847, 0.019249556, 0.019252167, 0.019254819, 0.019257...</msg>
<status status="PASS" starttime="20201112 09:43:00.485" endtime="20201112 09:43:00.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.502" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.501" endtime="20201112 09:43:00.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.504" level="INFO">VALUE: [1.2910000000004862e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.1389999999972256e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.0559999999992797e-06, 1.0979999999979895e-06, 1.1380000000012214e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.098000000001459e-06, 1.139000000000695e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0690000000028455e-06, 1.1520000000007913e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.0830000000024154e-06, 1.0970000000019853e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.139000000000695e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.503" endtime="20201112 09:43:00.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.499" endtime="20201112 09:43:00.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.512" endtime="20201112 09:43:00.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.516" endtime="20201112 09:43:00.535"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.514" endtime="20201112 09:43:00.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.511" endtime="20201112 09:43:00.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.154" endtime="20201112 09:43:00.536"></status>
</kw>
<msg timestamp="20201112 09:43:00.537" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.544" endtime="20201112 09:43:00.555"></status>
</kw>
<msg timestamp="20201112 09:43:00.555" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.542" endtime="20201112 09:43:00.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.558" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.556" endtime="20201112 09:43:00.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.559" endtime="20201112 09:43:00.560"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.540" endtime="20201112 09:43:00.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.538" endtime="20201112 09:43:00.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.568" endtime="20201112 09:43:00.856"></status>
</kw>
<msg timestamp="20201112 09:43:00.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01944175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:00.566" endtime="20201112 09:43:00.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01944175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019443097, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:00.860" endtime="20201112 09:43:00.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.868" endtime="20201112 09:43:00.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.564" endtime="20201112 09:43:00.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.562" endtime="20201112 09:43:00.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:00.876" level="INFO">${RESULT} = [{'time': 0.019443097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3469999999987659e-06, 'source_diff': 1.3469999999987659e-06}, {'time': 0.019445569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:00.872" endtime="20201112 09:43:00.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:00.889" level="INFO">${OVERHEAD} = {'time': [0.019443097, 0.019445569, 0.019447861, 0.019450458, 0.019452889, 0.019455181, 0.019457792, 0.019460292, 0.019462569, 0.019465014, 0.019467569, 0.019469847, 0.019472264, 0.019474847, 0.019477...</msg>
<status status="PASS" starttime="20201112 09:43:00.877" endtime="20201112 09:43:00.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.893" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:00.892" endtime="20201112 09:43:00.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.895" level="INFO">VALUE: [1.3469999999987659e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.1110000000015552e-06, 1.0830000000024154e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.098000000001459e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.1380000000012214e-06, 1.1249999999976557e-06, 1.0970000000019853e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.137999999997752e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.02800000000014e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0979999999979895e-06, 1.098000000001459e-06, 1.084000000001889e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0970000000019853e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:43:00.894" endtime="20201112 09:43:00.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.890" endtime="20201112 09:43:00.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.899" endtime="20201112 09:43:00.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:00.902" endtime="20201112 09:43:00.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.901" endtime="20201112 09:43:00.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.897" endtime="20201112 09:43:00.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.537" endtime="20201112 09:43:00.923"></status>
</kw>
<msg timestamp="20201112 09:43:00.923" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.931" endtime="20201112 09:43:00.942"></status>
</kw>
<msg timestamp="20201112 09:43:00.942" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.929" endtime="20201112 09:43:00.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:00.945" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:00.943" endtime="20201112 09:43:00.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.946" endtime="20201112 09:43:00.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.927" endtime="20201112 09:43:00.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.925" endtime="20201112 09:43:00.948"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:00.955" endtime="20201112 09:43:01.236"></status>
</kw>
<msg timestamp="20201112 09:43:01.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019158861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019160208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:00.953" endtime="20201112 09:43:01.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019158861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019160208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.240" endtime="20201112 09:43:01.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.249" endtime="20201112 09:43:01.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.951" endtime="20201112 09:43:01.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.949" endtime="20201112 09:43:01.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.255" level="INFO">${RESULT} = [{'time': 0.019160208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3470000000022353e-06, 'source_diff': 1.3470000000022353e-06}, {'time': 0.019162986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:01.252" endtime="20201112 09:43:01.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.269" level="INFO">${OVERHEAD} = {'time': [0.019160208, 0.019162986, 0.019165708, 0.019168111, 0.019170694, 0.019172958, 0.019175208, 0.019177639, 0.01918, 0.019182653, 0.019185361, 0.019187625, 0.019190194, 0.019192722, 0.019195361,...</msg>
<status status="PASS" starttime="20201112 09:43:01.256" endtime="20201112 09:43:01.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.274" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:01.273" endtime="20201112 09:43:01.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.276" level="INFO">VALUE: [1.3470000000022353e-06, 1.1110000000015552e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.01400000000057e-06, 1.0830000000024154e-06, 1.1109999999980857e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.1249999999976557e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0979999999979895e-06, 1.084000000001889e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.139000000000695e-06, 1.0979999999979895e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.0830000000024154e-06, 1.082999999998946e-06, 1.084000000001889e-06, 1.0979999999979895e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.0979999999979895e-06, 1.1109999999980857e-06, 1.1110000000015552e-06, 1.1120000000010288e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.275" endtime="20201112 09:43:01.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.270" endtime="20201112 09:43:01.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.280" endtime="20201112 09:43:01.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.283" endtime="20201112 09:43:01.302"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.281" endtime="20201112 09:43:01.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.278" endtime="20201112 09:43:01.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:00.924" endtime="20201112 09:43:01.304"></status>
</kw>
<msg timestamp="20201112 09:43:01.304" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.311" endtime="20201112 09:43:01.323"></status>
</kw>
<msg timestamp="20201112 09:43:01.323" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.310" endtime="20201112 09:43:01.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.326" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.324" endtime="20201112 09:43:01.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.327" endtime="20201112 09:43:01.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.308" endtime="20201112 09:43:01.329"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.306" endtime="20201112 09:43:01.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.336" endtime="20201112 09:43:01.618"></status>
</kw>
<msg timestamp="20201112 09:43:01.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.334" endtime="20201112 09:43:01.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019316375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019317736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.623" endtime="20201112 09:43:01.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.631" endtime="20201112 09:43:01.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.332" endtime="20201112 09:43:01.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.330" endtime="20201112 09:43:01.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:01.639" level="INFO">${RESULT} = [{'time': 0.019317736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3609999999983358e-06, 'source_diff': 1.3609999999983358e-06}, {'time': 0.019320361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:01.635" endtime="20201112 09:43:01.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:01.652" level="INFO">${OVERHEAD} = {'time': [0.019317736, 0.019320361, 0.019323, 0.019325653, 0.019328486, 0.019330944, 0.019333542, 0.019336028, 0.019338597, 0.019341292, 0.019343556, 0.019346097, 0.019348722, 0.019351278, 0.019353708...</msg>
<status status="PASS" starttime="20201112 09:43:01.640" endtime="20201112 09:43:01.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.656" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 09:43:01.655" endtime="20201112 09:43:01.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.659" level="INFO">VALUE: [1.3609999999983358e-06, 1.139000000000695e-06, 1.0969999999985158e-06, 1.0970000000019853e-06, 1.1249999999976557e-06, 1.1660000000003612e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.070000000002319e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.1249999999976557e-06, 1.125000000001125e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.082999999998946e-06, 1.0979999999979895e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.084000000001889e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.0830000000024154e-06]</msg>
<status status="PASS" starttime="20201112 09:43:01.657" endtime="20201112 09:43:01.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.653" endtime="20201112 09:43:01.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.662" endtime="20201112 09:43:01.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.666" endtime="20201112 09:43:01.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.664" endtime="20201112 09:43:01.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.661" endtime="20201112 09:43:01.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.305" endtime="20201112 09:43:01.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:42:49.615" endtime="20201112 09:43:01.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.691" endtime="20201112 09:43:01.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.689" endtime="20201112 09:43:01.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.688" endtime="20201112 09:43:01.712"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:42:49.539" endtime="20201112 09:43:01.712" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:01.720" endtime="20201112 09:43:01.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.718" endtime="20201112 09:43:01.740"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.752" endtime="20201112 09:43:01.773"></status>
</kw>
<msg timestamp="20201112 09:43:01.773" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.751" endtime="20201112 09:43:01.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.774" endtime="20201112 09:43:01.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.779" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:01.777" endtime="20201112 09:43:01.779"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:01.748" endtime="20201112 09:43:01.779"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:01.746" endtime="20201112 09:43:01.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.745" endtime="20201112 09:43:01.780"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:01.784" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:01.783" endtime="20201112 09:43:01.784"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.781" endtime="20201112 09:43:01.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.744" endtime="20201112 09:43:01.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.743" endtime="20201112 09:43:01.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.786" endtime="20201112 09:43:01.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.742" endtime="20201112 09:43:01.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.740" endtime="20201112 09:43:01.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.717" endtime="20201112 09:43:01.788"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.798" endtime="20201112 09:43:01.817"></status>
</kw>
<msg timestamp="20201112 09:43:01.817" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.796" endtime="20201112 09:43:01.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.819" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:01.818" endtime="20201112 09:43:01.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.821" endtime="20201112 09:43:01.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.793" endtime="20201112 09:43:01.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.791" endtime="20201112 09:43:01.823"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.825" endtime="20201112 09:43:01.827"></status>
</kw>
<msg timestamp="20201112 09:43:01.827" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:01.824" endtime="20201112 09:43:01.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.831" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:01.830" endtime="20201112 09:43:01.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.833" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:01.832" endtime="20201112 09:43:01.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.828" endtime="20201112 09:43:01.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.838" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:01.837" endtime="20201112 09:43:01.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:01.840" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:01.839" endtime="20201112 09:43:01.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.835" endtime="20201112 09:43:01.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:01.847" endtime="20201112 09:43:02.138"></status>
</kw>
<msg timestamp="20201112 09:43:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070510472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070513847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:01.846" endtime="20201112 09:43:02.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070510472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070513847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.142" endtime="20201112 09:43:02.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.150" endtime="20201112 09:43:02.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.843" endtime="20201112 09:43:02.152"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.841" endtime="20201112 09:43:02.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.157" level="INFO">${RESULT} = [{'time': 0.070513847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.070518125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:02.153" endtime="20201112 09:43:02.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.170" level="INFO">${OVERHEAD} = {'time': [0.070513847, 0.070518125, 0.070521639, 0.070525347, 0.070529264, 0.070533014, 0.070536597, 0.070540569, 0.070544264, 0.070547972, 0.070551931, 0.070555875, 0.070559472, 0.070563472, 0.070567...</msg>
<status status="PASS" starttime="20201112 09:43:02.158" endtime="20201112 09:43:02.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.175" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:02.174" endtime="20201112 09:43:02.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.178" level="INFO">VALUE: [3.374999999999906e-06, 2.4029999999980456e-06, 2.2219999999961715e-06, 2.26400000000182e-06, 2.2639999999879423e-06, 2.250000000009189e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.237000000002154e-06, 2.26400000000182e-06, 2.2219999999961715e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2219999999961715e-06, 2.250000000009189e-06, 2.250000000009189e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.26400000000182e-06, 2.2360000000026803e-06, 2.250000000009189e-06, 2.1939999999970317e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.2499999999953113e-06, 2.26400000000182e-06, 2.2499999999953113e-06, 2.2360000000026803e-06, 2.2639999999879423e-06, 2.26400000000182e-06, 2.2360000000026803e-06, 2.2499999999953113e-06, 2.3339999999927308e-06, 2.2499999999953113e-06, 2.250000000009189e-06, 2.237000000002154e-06, 2.26400000000182e-06, 2.2360000000026803e-06, 2.2499999999953113e-06]</msg>
<status status="PASS" starttime="20201112 09:43:02.176" endtime="20201112 09:43:02.178"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.171" endtime="20201112 09:43:02.178"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.181" endtime="20201112 09:43:02.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.184" endtime="20201112 09:43:02.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.182" endtime="20201112 09:43:02.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.179" endtime="20201112 09:43:02.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:01.789" endtime="20201112 09:43:02.205"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:01.714" endtime="20201112 09:43:02.205" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.213" endtime="20201112 09:43:02.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.212" endtime="20201112 09:43:02.233"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.247" endtime="20201112 09:43:02.265"></status>
</kw>
<msg timestamp="20201112 09:43:02.265" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.245" endtime="20201112 09:43:02.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.268" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.266" endtime="20201112 09:43:02.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.271" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:02.269" endtime="20201112 09:43:02.271"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.242" endtime="20201112 09:43:02.271"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.239" endtime="20201112 09:43:02.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.238" endtime="20201112 09:43:02.272"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:02.276" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:02.275" endtime="20201112 09:43:02.276"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.273" endtime="20201112 09:43:02.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.237" endtime="20201112 09:43:02.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.237" endtime="20201112 09:43:02.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.278" endtime="20201112 09:43:02.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.235" endtime="20201112 09:43:02.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.234" endtime="20201112 09:43:02.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.210" endtime="20201112 09:43:02.280"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.290" endtime="20201112 09:43:02.326"></status>
</kw>
<msg timestamp="20201112 09:43:02.327" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.288" endtime="20201112 09:43:02.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.329" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.328" endtime="20201112 09:43:02.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.330" endtime="20201112 09:43:02.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.286" endtime="20201112 09:43:02.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.283" endtime="20201112 09:43:02.333"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.335" endtime="20201112 09:43:02.337"></status>
</kw>
<msg timestamp="20201112 09:43:02.337" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:02.334" endtime="20201112 09:43:02.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.341" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:02.340" endtime="20201112 09:43:02.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.343" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:02.342" endtime="20201112 09:43:02.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.338" endtime="20201112 09:43:02.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.348" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:02.347" endtime="20201112 09:43:02.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.350" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:02.349" endtime="20201112 09:43:02.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.344" endtime="20201112 09:43:02.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.358" endtime="20201112 09:43:02.644"></status>
</kw>
<msg timestamp="20201112 09:43:02.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069518056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069531444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.356" endtime="20201112 09:43:02.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069518056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.069531444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.648" endtime="20201112 09:43:02.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.656" endtime="20201112 09:43:02.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.353" endtime="20201112 09:43:02.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.351" endtime="20201112 09:43:02.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:02.663" level="INFO">${RESULT} = [{'time': 0.069531444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3388000000003064e-05, 'source_diff': 1.3388000000003064e-05}, {'time': 0.069911431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:02.660" endtime="20201112 09:43:02.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:02.678" level="INFO">${OVERHEAD} = {'time': [0.069531444, 0.069911431, 0.070291319, 0.070671431, 0.071051528, 0.071431319, 0.071811097, 0.072191292, 0.072571625, 0.072951542, 0.073331569, 0.073711694, 0.074091667, 0.074471694, 0.074851...</msg>
<status status="PASS" starttime="20201112 09:43:02.664" endtime="20201112 09:43:02.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.683" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:02.682" endtime="20201112 09:43:02.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.686" level="INFO">VALUE: [1.3388000000003064e-05, 1.3277999999991574e-05, 1.3277000000005978e-05, 1.3278000000005452e-05, 1.3278000000005452e-05, 1.3249999999992434e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.330499999999124e-05, 1.3263999999998943e-05, 1.329099999999861e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3235999999999803e-05, 1.3264000000012821e-05, 1.3250000000006312e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3278000000005452e-05, 1.3236999999999277e-05, 1.3250000000006312e-05, 1.3235999999999803e-05, 1.3278000000005452e-05, 1.3235999999999803e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.326299999999947e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.3250000000006312e-05, 1.3263999999998943e-05, 1.3263999999998943e-05, 1.3222999999992768e-05, 1.3278000000005452e-05, 1.3291999999998083e-05, 1.3263999999998943e-05, 1.3277999999991574e-05, 1.3250000000006312e-05, 1.3278000000005452e-05, 1.3250000000006312e-05, 1.3250000000006312e-05, 1.3249999999992434e-05, 1.3249999999992434e-05, 1.3263999999998943e-05, 1.3263999999998943e-05]</msg>
<status status="PASS" starttime="20201112 09:43:02.684" endtime="20201112 09:43:02.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.679" endtime="20201112 09:43:02.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.689" endtime="20201112 09:43:02.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.692" endtime="20201112 09:43:02.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.690" endtime="20201112 09:43:02.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.687" endtime="20201112 09:43:02.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.281" endtime="20201112 09:43:02.713"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:02.207" endtime="20201112 09:43:02.713" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:02.721" endtime="20201112 09:43:02.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.719" endtime="20201112 09:43:02.741"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.754" endtime="20201112 09:43:02.773"></status>
</kw>
<msg timestamp="20201112 09:43:02.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.752" endtime="20201112 09:43:02.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.776" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.775" endtime="20201112 09:43:02.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.779" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:02.777" endtime="20201112 09:43:02.779"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.749" endtime="20201112 09:43:02.780"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:02.747" endtime="20201112 09:43:02.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.746" endtime="20201112 09:43:02.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:02.785" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:02.784" endtime="20201112 09:43:02.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.782" endtime="20201112 09:43:02.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.745" endtime="20201112 09:43:02.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.745" endtime="20201112 09:43:02.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.787" endtime="20201112 09:43:02.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.743" endtime="20201112 09:43:02.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.742" endtime="20201112 09:43:02.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.718" endtime="20201112 09:43:02.789"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.798" endtime="20201112 09:43:02.884"></status>
</kw>
<msg timestamp="20201112 09:43:02.885" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.797" endtime="20201112 09:43:02.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.887" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:02.886" endtime="20201112 09:43:02.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.888" endtime="20201112 09:43:02.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.794" endtime="20201112 09:43:02.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.792" endtime="20201112 09:43:02.891"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.893" endtime="20201112 09:43:02.894"></status>
</kw>
<msg timestamp="20201112 09:43:02.895" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:02.891" endtime="20201112 09:43:02.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.899" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:02.898" endtime="20201112 09:43:02.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.901" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:02.900" endtime="20201112 09:43:02.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.895" endtime="20201112 09:43:02.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.905" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:02.904" endtime="20201112 09:43:02.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:02.908" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:02.907" endtime="20201112 09:43:02.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.902" endtime="20201112 09:43:02.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:02.915" endtime="20201112 09:43:03.207"></status>
</kw>
<msg timestamp="20201112 09:43:03.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070041944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070067167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:02.913" endtime="20201112 09:43:03.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070041944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070067167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.211" endtime="20201112 09:43:03.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.219" endtime="20201112 09:43:03.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.911" endtime="20201112 09:43:03.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.909" endtime="20201112 09:43:03.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.226" level="INFO">${RESULT} = [{'time': 0.070067167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.522300000000477e-05, 'source_diff': 2.522300000000477e-05}, {'time': 0.071433875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.223" endtime="20201112 09:43:03.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.239" level="INFO">${OVERHEAD} = {'time': [0.070067167, 0.071433875, 0.072800319, 0.074167014, 0.075533361, 0.076899986, 0.078266431, 0.079632875, 0.080999292, 0.082365778, 0.083732069, 0.085098486, 0.086465097, 0.087831764, 0.089198...</msg>
<status status="PASS" starttime="20201112 09:43:03.227" endtime="20201112 09:43:03.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.244" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:03.243" endtime="20201112 09:43:03.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.246" level="INFO">VALUE: [2.522300000000477e-05, 2.5055999999995526e-05, 2.5054999999996053e-05, 2.5056000000009404e-05, 2.5041999999989017e-05, 2.506900000000256e-05, 2.5042000000002895e-05, 2.508300000000907e-05, 2.512500000000084e-05, 2.5055999999995526e-05, 2.504100000000342e-05, 2.5054999999996053e-05, 2.506900000000256e-05, 2.5056000000009404e-05, 2.4999999999997247e-05, 2.5028000000010264e-05, 2.505500000000993e-05, 2.5056000000009404e-05, 2.5054999999996053e-05, 2.5055999999995526e-05, 2.5056000000009404e-05, 2.505500000000993e-05, 2.5027999999996386e-05, 2.512500000000084e-05, 2.5054999999996053e-05, 2.5054999999996053e-05, 2.5042000000002895e-05, 2.5055999999995526e-05, 2.4986000000004616e-05, 2.5055999999995526e-05, 2.5054999999996053e-05, 2.5026999999996913e-05, 2.5027999999996386e-05, 2.504100000000342e-05, 2.5042000000002895e-05, 2.502700000001079e-05, 2.505500000000993e-05, 2.5056000000009404e-05, 2.5055999999995526e-05, 2.5026999999996913e-05, 2.5054999999996053e-05, 2.504199999997514e-05, 2.508300000000907e-05, 2.506900000001644e-05, 2.5054999999996053e-05, 2.5042000000002895e-05, 2.5055999999995526e-05, 2.504199999997514e-05, 2.506900000001644e-05, 2.5069999999988157e-05]</msg>
<status status="PASS" starttime="20201112 09:43:03.245" endtime="20201112 09:43:03.247"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.240" endtime="20201112 09:43:03.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.249" endtime="20201112 09:43:03.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.253" endtime="20201112 09:43:03.272"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.251" endtime="20201112 09:43:03.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.248" endtime="20201112 09:43:03.273"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:02.790" endtime="20201112 09:43:03.273"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:02.715" endtime="20201112 09:43:03.274" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.282" endtime="20201112 09:43:03.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.280" endtime="20201112 09:43:03.302"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.315" endtime="20201112 09:43:03.335"></status>
</kw>
<msg timestamp="20201112 09:43:03.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.313" endtime="20201112 09:43:03.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.336" endtime="20201112 09:43:03.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.340" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:03.339" endtime="20201112 09:43:03.341"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:03.311" endtime="20201112 09:43:03.341"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:03.308" endtime="20201112 09:43:03.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.307" endtime="20201112 09:43:03.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:03.346" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:03.346" endtime="20201112 09:43:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.343" endtime="20201112 09:43:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.306" endtime="20201112 09:43:03.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.306" endtime="20201112 09:43:03.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.348" endtime="20201112 09:43:03.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.304" endtime="20201112 09:43:03.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.303" endtime="20201112 09:43:03.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.279" endtime="20201112 09:43:03.351"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.360" endtime="20201112 09:43:03.379"></status>
</kw>
<msg timestamp="20201112 09:43:03.379" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.358" endtime="20201112 09:43:03.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.380" endtime="20201112 09:43:03.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.383" endtime="20201112 09:43:03.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.355" endtime="20201112 09:43:03.385"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.353" endtime="20201112 09:43:03.385"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.387" endtime="20201112 09:43:03.389"></status>
</kw>
<msg timestamp="20201112 09:43:03.389" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:03.386" endtime="20201112 09:43:03.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.394" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:03.393" endtime="20201112 09:43:03.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.396" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:03.395" endtime="20201112 09:43:03.396"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.390" endtime="20201112 09:43:03.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.400" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:03.399" endtime="20201112 09:43:03.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.402" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:03.401" endtime="20201112 09:43:03.403"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.397" endtime="20201112 09:43:03.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.410" endtime="20201112 09:43:03.692"></status>
</kw>
<msg timestamp="20201112 09:43:03.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070224764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070225486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.408" endtime="20201112 09:43:03.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070224764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070225486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.696" endtime="20201112 09:43:03.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.705" endtime="20201112 09:43:03.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.406" endtime="20201112 09:43:03.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.404" endtime="20201112 09:43:03.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:03.712" level="INFO">${RESULT} = [{'time': 0.070225486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.220000000085491e-07, 'source_diff': 7.220000000085491e-07}, {'time': 0.070230167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:03.708" endtime="20201112 09:43:03.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:03.725" level="INFO">${OVERHEAD} = {'time': [0.070225486, 0.070230167, 0.070234778, 0.070238847, 0.07024325, 0.070247778, 0.070252153, 0.070256472, 0.070260764, 0.070265306, 0.070269542, 0.070273792, 0.070278236, 0.070282667, 0.0702870...</msg>
<status status="PASS" starttime="20201112 09:43:03.713" endtime="20201112 09:43:03.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.729" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 09:43:03.728" endtime="20201112 09:43:03.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.732" level="INFO">VALUE: [7.220000000085491e-07, 6.249999999902167e-07, 6.250000000040945e-07, 6.249999999902167e-07, 6.249999999902167e-07, 6.249999999902167e-07, 6.669999999958653e-07, 6.250000000040945e-07, 6.810000000023742e-07, 6.250000000040945e-07, 6.390000000106033e-07, 6.250000000040945e-07, 6.249999999902167e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.249999999902167e-07, 6.669999999958653e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.389999999967255e-07, 6.389999999967255e-07, 6.109999999975857e-07, 6.520000000037607e-07, 5.970000000049547e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.249999999902167e-07, 6.810000000023742e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.109999999975857e-07, 6.250000000040945e-07, 6.109999999975857e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.380000000111297e-07, 6.390000000106033e-07, 6.119999999970593e-07, 5.830000000123237e-07, 6.250000000040945e-07, 6.389999999967255e-07, 6.250000000040945e-07, 6.250000000040945e-07, 6.669999999958653e-07, 6.379999999972519e-07, 6.249999999902167e-07, 6.389999999967255e-07]</msg>
<status status="PASS" starttime="20201112 09:43:03.730" endtime="20201112 09:43:03.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.726" endtime="20201112 09:43:03.732"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.735" endtime="20201112 09:43:03.736"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.738" endtime="20201112 09:43:03.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.737" endtime="20201112 09:43:03.758"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.733" endtime="20201112 09:43:03.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.352" endtime="20201112 09:43:03.759"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:03.276" endtime="20201112 09:43:03.760" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:03.768" endtime="20201112 09:43:03.787"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.766" endtime="20201112 09:43:03.788"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.801" endtime="20201112 09:43:03.820"></status>
</kw>
<msg timestamp="20201112 09:43:03.821" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.799" endtime="20201112 09:43:03.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.823" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.822" endtime="20201112 09:43:03.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.827" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:03.824" endtime="20201112 09:43:03.827"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:03.796" endtime="20201112 09:43:03.827"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:03.794" endtime="20201112 09:43:03.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.793" endtime="20201112 09:43:03.828"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:03.832" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:03.831" endtime="20201112 09:43:03.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.829" endtime="20201112 09:43:03.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.792" endtime="20201112 09:43:03.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.791" endtime="20201112 09:43:03.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.834" endtime="20201112 09:43:03.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.790" endtime="20201112 09:43:03.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.788" endtime="20201112 09:43:03.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.765" endtime="20201112 09:43:03.836"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.845" endtime="20201112 09:43:03.883"></status>
</kw>
<msg timestamp="20201112 09:43:03.883" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.844" endtime="20201112 09:43:03.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.886" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:03.884" endtime="20201112 09:43:03.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.887" endtime="20201112 09:43:03.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.841" endtime="20201112 09:43:03.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.839" endtime="20201112 09:43:03.889"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.892" endtime="20201112 09:43:03.893"></status>
</kw>
<msg timestamp="20201112 09:43:03.894" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:03.890" endtime="20201112 09:43:03.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.898" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:03.897" endtime="20201112 09:43:03.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.900" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:03.899" endtime="20201112 09:43:03.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.894" endtime="20201112 09:43:03.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.904" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:03.903" endtime="20201112 09:43:03.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:03.906" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:03.905" endtime="20201112 09:43:03.907"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.901" endtime="20201112 09:43:03.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:03.915" endtime="20201112 09:43:04.200"></status>
</kw>
<msg timestamp="20201112 09:43:04.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070591069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070592694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:03.912" endtime="20201112 09:43:04.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070591069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070592694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.205" endtime="20201112 09:43:04.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.213" endtime="20201112 09:43:04.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.910" endtime="20201112 09:43:04.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.908" endtime="20201112 09:43:04.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.219" level="INFO">${RESULT} = [{'time': 0.070592694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999912168e-06, 'source_diff': 1.6249999999912168e-06}, {'time': 0.070975319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.216" endtime="20201112 09:43:04.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:04.235" level="INFO">${OVERHEAD} = {'time': [0.070592694, 0.070975319, 0.071357389, 0.071740125, 0.072122569, 0.072505347, 0.072887653, 0.073270097, 0.073652528, 0.074035528, 0.074417708, 0.074800167, 0.075182528, 0.075565472, 0.075947...</msg>
<status status="PASS" starttime="20201112 09:43:04.220" endtime="20201112 09:43:04.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.240" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 09:43:04.239" endtime="20201112 09:43:04.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.242" level="INFO">VALUE: [1.6249999999912168e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.5000000000015001e-06, 1.596999999992077e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5410000000076751e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5550000000003061e-06, 1.5689999999929372e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5420000000071488e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.6110000000124636e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.5420000000071488e-06, 1.541999999993271e-06, 1.596999999992077e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.5420000000071488e-06, 1.5139999999941312e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.4859999999949913e-06, 1.5139999999941312e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5420000000071488e-06, 1.5549999999864283e-06, 1.5420000000071488e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.241" endtime="20201112 09:43:04.242"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.236" endtime="20201112 09:43:04.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.245" endtime="20201112 09:43:04.246"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.248" endtime="20201112 09:43:04.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.247" endtime="20201112 09:43:04.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.243" endtime="20201112 09:43:04.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:03.837" endtime="20201112 09:43:04.269"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:03.762" endtime="20201112 09:43:04.270" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.277" endtime="20201112 09:43:04.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.276" endtime="20201112 09:43:04.297"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.311" endtime="20201112 09:43:04.330"></status>
</kw>
<msg timestamp="20201112 09:43:04.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.308" endtime="20201112 09:43:04.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.333" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.331" endtime="20201112 09:43:04.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.336" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:04.334" endtime="20201112 09:43:04.336"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:04.306" endtime="20201112 09:43:04.337"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:04.303" endtime="20201112 09:43:04.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.302" endtime="20201112 09:43:04.338"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:04.341" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:04.341" endtime="20201112 09:43:04.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.339" endtime="20201112 09:43:04.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.301" endtime="20201112 09:43:04.342"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.301" endtime="20201112 09:43:04.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.343" endtime="20201112 09:43:04.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.300" endtime="20201112 09:43:04.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.298" endtime="20201112 09:43:04.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.275" endtime="20201112 09:43:04.346"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.355" endtime="20201112 09:43:04.443"></status>
</kw>
<msg timestamp="20201112 09:43:04.443" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.353" endtime="20201112 09:43:04.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.446" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:04.444" endtime="20201112 09:43:04.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.447" endtime="20201112 09:43:04.448"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.351" endtime="20201112 09:43:04.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.348" endtime="20201112 09:43:04.449"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.451" endtime="20201112 09:43:04.453"></status>
</kw>
<msg timestamp="20201112 09:43:04.453" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201112 09:43:04.450" endtime="20201112 09:43:04.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.458" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 09:43:04.457" endtime="20201112 09:43:04.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.460" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 09:43:04.459" endtime="20201112 09:43:04.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.454" endtime="20201112 09:43:04.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.464" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 09:43:04.463" endtime="20201112 09:43:04.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.466" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 09:43:04.465" endtime="20201112 09:43:04.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.461" endtime="20201112 09:43:04.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.474" endtime="20201112 09:43:04.766"></status>
</kw>
<msg timestamp="20201112 09:43:04.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071017806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071020361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.472" endtime="20201112 09:43:04.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071017806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071020361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:04.770" endtime="20201112 09:43:04.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.778" endtime="20201112 09:43:04.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.469" endtime="20201112 09:43:04.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.468" endtime="20201112 09:43:04.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:04.785" level="INFO">${RESULT} = [{'time': 0.071020361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.072391083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:04.781" endtime="20201112 09:43:04.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 09:43:04.798" level="INFO">${OVERHEAD} = {'time': [0.071020361, 0.072391083, 0.073761611, 0.075131764, 0.076501944, 0.077872236, 0.079242625, 0.080612833, 0.081983347, 0.08335375, 0.084724333, 0.086094653, 0.087465056, 0.088835514, 0.0902057...</msg>
<status status="PASS" starttime="20201112 09:43:04.786" endtime="20201112 09:43:04.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.802" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 09:43:04.801" endtime="20201112 09:43:04.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.805" level="INFO">VALUE: [2.5550000000013062e-06, 2.4579999999968516e-06, 2.4580000000107294e-06, 2.4170000000045544e-06, 2.401999999998572e-06, 2.4720000000033604e-06, 2.5000000000025002e-06, 2.4719999999894826e-06, 2.4720000000033604e-06, 2.486000000009869e-06, 2.4579999999968516e-06, 2.4719999999894826e-06, 2.473000000002834e-06, 2.486000000009869e-06, 2.4579999999968516e-06, 2.4859999999959914e-06, 2.486000000009869e-06, 2.4170000000045544e-06, 2.473000000002834e-06, 2.473000000002834e-06, 2.4999999999886224e-06, 2.473000000002834e-06, 2.4719999999894826e-06, 2.4720000000033604e-06, 2.4029999999980456e-06, 2.4720000000033604e-06, 2.4589999999963252e-06, 2.4719999999894826e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.486999999995465e-06, 2.4719999999894826e-06, 2.5000000000025002e-06, 2.4720000000033604e-06, 2.4719999999894826e-06, 2.4729999999889563e-06, 2.4859999999959914e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.4299999999977118e-06, 2.52800000000164e-06, 2.473000000002834e-06, 2.4720000000033604e-06, 2.5279999999738845e-06, 2.4720000000033604e-06, 2.4859999999959914e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.473000000002834e-06, 2.4299999999977118e-06]</msg>
<status status="PASS" starttime="20201112 09:43:04.803" endtime="20201112 09:43:04.805"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.799" endtime="20201112 09:43:04.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:04.808" endtime="20201112 09:43:04.809"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:04.811" endtime="20201112 09:43:04.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.810" endtime="20201112 09:43:04.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.806" endtime="20201112 09:43:04.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.347" endtime="20201112 09:43:04.832"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:04.272" endtime="20201112 09:43:04.833" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:42:39.880" endtime="20201112 09:43:04.840"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:43:04.906" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:43:04.913" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:43:06.130" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:43:04.905" endtime="20201112 09:43:06.131"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.133" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:43:06.132" endtime="20201112 09:43:06.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.903" endtime="20201112 09:43:06.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.136" endtime="20201112 09:43:06.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.135" endtime="20201112 09:43:06.321"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.333" endtime="20201112 09:43:06.352"></status>
</kw>
<msg timestamp="20201112 09:43:06.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.332" endtime="20201112 09:43:06.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.355" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.353" endtime="20201112 09:43:06.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.358" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:06.356" endtime="20201112 09:43:06.358"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:06.329" endtime="20201112 09:43:06.359"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:06.327" endtime="20201112 09:43:06.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.326" endtime="20201112 09:43:06.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:06.364" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:06.362" endtime="20201112 09:43:06.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.360" endtime="20201112 09:43:06.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.325" endtime="20201112 09:43:06.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.325" endtime="20201112 09:43:06.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.366" endtime="20201112 09:43:06.368"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.323" endtime="20201112 09:43:06.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.369" endtime="20201112 09:43:06.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.322" endtime="20201112 09:43:06.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:04.901" endtime="20201112 09:43:06.371"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.377" endtime="20201112 09:43:06.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.376" endtime="20201112 09:43:06.397"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.410" endtime="20201112 09:43:06.429"></status>
</kw>
<msg timestamp="20201112 09:43:06.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.408" endtime="20201112 09:43:06.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.432" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.431" endtime="20201112 09:43:06.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.436" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:06.433" endtime="20201112 09:43:06.436"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:06.406" endtime="20201112 09:43:06.436"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:06.404" endtime="20201112 09:43:06.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.402" endtime="20201112 09:43:06.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:06.441" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:06.440" endtime="20201112 09:43:06.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.438" endtime="20201112 09:43:06.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.402" endtime="20201112 09:43:06.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.401" endtime="20201112 09:43:06.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.443" endtime="20201112 09:43:06.444"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.400" endtime="20201112 09:43:06.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.398" endtime="20201112 09:43:06.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.375" endtime="20201112 09:43:06.445"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.456" endtime="20201112 09:43:06.470"></status>
</kw>
<msg timestamp="20201112 09:43:06.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.455" endtime="20201112 09:43:06.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.472" endtime="20201112 09:43:06.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.474" endtime="20201112 09:43:06.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.451" endtime="20201112 09:43:06.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.449" endtime="20201112 09:43:06.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.483" endtime="20201112 09:43:06.771"></status>
</kw>
<msg timestamp="20201112 09:43:06.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071235806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.482" endtime="20201112 09:43:06.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071233236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071235806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.775" endtime="20201112 09:43:06.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.783" endtime="20201112 09:43:06.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.479" endtime="20201112 09:43:06.785"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.477" endtime="20201112 09:43:06.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:06.790" level="INFO">${RESULT} = [{'time': 0.071235806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.569999999993411e-06, 'source_diff': 2.569999999993411e-06}, {'time': 0.071239764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:06.786" endtime="20201112 09:43:06.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:06.803" level="INFO">${ACCURACY} = {'time': [0.071235806, 0.071239764, 0.071243653, 0.071247375, 0.071251708, 0.071255583, 0.071258667, 0.071261556, 0.071265417, 0.071269736, 0.071273583, 0.071276569, 0.071279486, 0.071282389, 0.071285...</msg>
<status status="PASS" starttime="20201112 09:43:06.791" endtime="20201112 09:43:06.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.808" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:06.807" endtime="20201112 09:43:06.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.810" level="INFO">VALUE: [2.569999999993411e-06, 2.082999999999946e-06, 2.0700000000067886e-06, 2.05600000000028e-06, 2.610999999999586e-06, 2.068999999993437e-06, 1.709000000002514e-06, 1.5700000000062886e-06, 2.069999999992911e-06, 2.610999999999586e-06, 2.069000000007315e-06, 1.7080000000030404e-06, 1.582999999999446e-06, 1.5700000000062886e-06, 1.582999999999446e-06, 1.5970000000059548e-06, 2.0700000000067886e-06, 1.5970000000059548e-06, 1.5970000000059548e-06, 1.5839999999989196e-06, 2.068999999993437e-06, 2.610999999999586e-06, 2.415999999991203e-06, 1.6810000000033742e-06, 2.02800000000114e-06, 2.069999999992911e-06, 1.582999999999446e-06, 2.6389999999987257e-06, 2.069999999992911e-06, 1.709000000002514e-06, 1.6530000000042344e-06, 2.610999999999586e-06, 2.082999999999946e-06, 1.7079999999891626e-06, 2.610999999999586e-06, 2.082999999999946e-06, 2.4309999999971854e-06, 2.431000000011063e-06, 1.7080000000030404e-06, 2.02800000000114e-06, 1.6530000000042344e-06, 2.05600000000028e-06, 2.6389999999987257e-06, 2.4299999999977118e-06, 2.4170000000045544e-06, 1.7079999999891626e-06, 2.610999999999586e-06, 2.082999999999946e-06, 2.069000000007315e-06, 1.7230000000090229e-06]</msg>
<status status="PASS" starttime="20201112 09:43:06.809" endtime="20201112 09:43:06.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.804" endtime="20201112 09:43:06.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.814" endtime="20201112 09:43:06.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:06.817" endtime="20201112 09:43:06.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.816" endtime="20201112 09:43:06.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.812" endtime="20201112 09:43:06.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.447" endtime="20201112 09:43:06.838"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.447" endtime="20201112 09:43:06.838"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.846" endtime="20201112 09:43:06.861"></status>
</kw>
<msg timestamp="20201112 09:43:06.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.845" endtime="20201112 09:43:06.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:06.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:06.862" endtime="20201112 09:43:06.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.865" endtime="20201112 09:43:06.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.842" endtime="20201112 09:43:06.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.840" endtime="20201112 09:43:06.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:06.874" endtime="20201112 09:43:07.158"></status>
</kw>
<msg timestamp="20201112 09:43:07.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:06.872" endtime="20201112 09:43:07.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022622625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.162" endtime="20201112 09:43:07.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.170" endtime="20201112 09:43:07.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.870" endtime="20201112 09:43:07.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.868" endtime="20201112 09:43:07.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.177" level="INFO">${RESULT} = [{'time': 0.022622625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.022627486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:07.173" endtime="20201112 09:43:07.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.191" level="INFO">${ACCURACY} = {'time': [0.022622625, 0.022627486, 0.022631361, 0.022636611, 0.022641333, 0.022645403, 0.022649444, 0.022654319, 0.022658472, 0.022663361, 0.022667417, 0.022672583, 0.022677583, 0.022682625, 0.022687...</msg>
<status status="PASS" starttime="20201112 09:43:07.178" endtime="20201112 09:43:07.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.196" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.195" endtime="20201112 09:43:07.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.198" level="INFO">VALUE: [3.6389999999997258e-06, 2.7779999999984206e-06, 2.4029999999980456e-06, 3.486000000000461e-06, 3.097000000000516e-06, 2.4450000000002248e-06, 2.7910000000019863e-06, 3.137999999999752e-06, 2.790999999998517e-06, 3.124999999999656e-06, 2.7779999999984206e-06, 3.486000000000461e-06, 3.486000000000461e-06, 3.500000000000031e-06, 3.4719999999974216e-06, 3.1389999999992257e-06, 2.4299999999977118e-06, 3.500000000000031e-06, 2.4300000000011812e-06, 3.486000000000461e-06, 3.4869999999999346e-06, 3.486000000000461e-06, 3.124999999999656e-06, 3.486000000000461e-06, 3.124999999999656e-06, 2.7630000000028465e-06, 3.486000000000461e-06, 3.417000000002085e-06, 3.1529999999987957e-06, 2.7919999999979905e-06, 3.137999999999752e-06, 3.124999999999656e-06, 2.7779999999984206e-06, 3.124999999999656e-06, 2.431000000000655e-06, 3.137999999999752e-06, 3.4579999999978517e-06, 3.124999999999656e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.1389999999992257e-06, 2.4169999999976155e-06, 3.500000000000031e-06, 3.1389999999992257e-06, 3.500000000000031e-06, 3.137999999999752e-06, 2.431000000000655e-06, 3.486000000000461e-06, 3.1389999999992257e-06, 2.431000000000655e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.197" endtime="20201112 09:43:07.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.192" endtime="20201112 09:43:07.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.201" endtime="20201112 09:43:07.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.205" endtime="20201112 09:43:07.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.203" endtime="20201112 09:43:07.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.200" endtime="20201112 09:43:07.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.839" endtime="20201112 09:43:07.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.838" endtime="20201112 09:43:07.225"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.234" endtime="20201112 09:43:07.248"></status>
</kw>
<msg timestamp="20201112 09:43:07.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.232" endtime="20201112 09:43:07.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.250" endtime="20201112 09:43:07.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.252" endtime="20201112 09:43:07.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.230" endtime="20201112 09:43:07.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.228" endtime="20201112 09:43:07.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.264" endtime="20201112 09:43:07.550"></status>
</kw>
<msg timestamp="20201112 09:43:07.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.262" endtime="20201112 09:43:07.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.555" endtime="20201112 09:43:07.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.563" endtime="20201112 09:43:07.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.260" endtime="20201112 09:43:07.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.258" endtime="20201112 09:43:07.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.570" level="INFO">${RESULT} = [{'time': 0.021608361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679999999999962e-06, 'source_diff': 4.679999999999962e-06}, {'time': 0.021614333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.567" endtime="20201112 09:43:07.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.583" level="INFO">${ACCURACY} = {'time': [0.021608361, 0.021614333, 0.021619389, 0.021625292, 0.021631264, 0.021636264, 0.021641444, 0.021647444, 0.021653264, 0.0216595, 0.021665542, 0.021671417, 0.021677556, 0.021683542, 0.02168956...</msg>
<status status="PASS" starttime="20201112 09:43:07.571" endtime="20201112 09:43:07.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.588" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.587" endtime="20201112 09:43:07.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.590" level="INFO">VALUE: [4.679999999999962e-06, 4.179999999999462e-06, 3.500000000000031e-06, 4.209000000001545e-06, 4.208000000002071e-06, 3.500000000000031e-06, 3.832999999998227e-06, 4.207999999998602e-06, 4.207999999998602e-06, 4.569000000002876e-06, 4.208999999998075e-06, 4.208999999998075e-06, 4.5699999999988805e-06, 4.5839999999984504e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.555999999999311e-06, 3.5140000000030702e-06, 4.5699999999988805e-06, 4.208000000002071e-06, 3.4869999999999346e-06, 3.472000000000891e-06, 4.207999999998602e-06, 3.861000000000836e-06, 3.5139999999996008e-06, 3.4590000000007948e-06, 3.486000000000461e-06, 3.847000000001266e-06, 4.223000000001115e-06, 4.195000000001975e-06, 4.207999999998602e-06, 3.861000000000836e-06, 4.207999999998602e-06, 3.472000000000891e-06, 4.195000000001975e-06, 4.221999999998172e-06, 4.223000000001115e-06, 4.527999999996701e-06, 3.500000000000031e-06, 3.500000000000031e-06, 3.847000000001266e-06, 4.207999999998602e-06, 4.209000000001545e-06, 4.222000000001641e-06, 4.207999999998602e-06, 4.568999999999407e-06, 4.208000000002071e-06, 4.555999999999311e-06, 4.208000000002071e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.589" endtime="20201112 09:43:07.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.584" endtime="20201112 09:43:07.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.593" endtime="20201112 09:43:07.594"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.597" endtime="20201112 09:43:07.616"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.595" endtime="20201112 09:43:07.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.592" endtime="20201112 09:43:07.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.226" endtime="20201112 09:43:07.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.226" endtime="20201112 09:43:07.617"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.626" endtime="20201112 09:43:07.640"></status>
</kw>
<msg timestamp="20201112 09:43:07.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.624" endtime="20201112 09:43:07.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:07.641" endtime="20201112 09:43:07.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.644" endtime="20201112 09:43:07.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.622" endtime="20201112 09:43:07.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.620" endtime="20201112 09:43:07.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.653" endtime="20201112 09:43:07.943"></status>
</kw>
<msg timestamp="20201112 09:43:07.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.652" endtime="20201112 09:43:07.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021572069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:07.948" endtime="20201112 09:43:07.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.957" endtime="20201112 09:43:07.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.649" endtime="20201112 09:43:07.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.648" endtime="20201112 09:43:07.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:07.964" level="INFO">${RESULT} = [{'time': 0.021572069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.415999999997673e-06, 'source_diff': 5.415999999997673e-06}, {'time': 0.021578847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:07.960" endtime="20201112 09:43:07.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:07.977" level="INFO">${ACCURACY} = {'time': [0.021572069, 0.021578847, 0.021585958, 0.021592875, 0.021599889, 0.021606986, 0.021614056, 0.021620972, 0.021626931, 0.021632944, 0.021639833, 0.021646833, 0.021652861, 0.021659042, 0.021665...</msg>
<status status="PASS" starttime="20201112 09:43:07.965" endtime="20201112 09:43:07.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.982" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:07.981" endtime="20201112 09:43:07.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:07.984" level="INFO">VALUE: [5.415999999997673e-06, 4.930000000000212e-06, 5.276999999997978e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.5839999999994505e-06, 5.277999999997451e-06, 4.5699999999988805e-06, 4.597000000002016e-06, 5.277000000001447e-06, 5.291000000001017e-06, 4.554999999999837e-06, 4.903000000000546e-06, 4.930999999999686e-06, 5.292000000000491e-06, 5.624999999998687e-06, 5.276999999997978e-06, 5.292000000000491e-06, 4.528000000000171e-06, 4.554999999999837e-06, 5.2499999999983116e-06, 5.2499999999983116e-06, 5.319000000000157e-06, 4.55600000000278e-06, 5.278000000000921e-06, 4.569000000002876e-06, 4.555999999999311e-06, 4.916000000000642e-06, 4.55600000000278e-06, 5.278000000000921e-06, 4.901999999997603e-06, 4.902000000001072e-06, 4.930999999999686e-06, 4.568999999999407e-06, 4.541000000000267e-06, 5.235999999998742e-06, 5.277999999997451e-06, 4.555999999999311e-06, 5.264000000001351e-06, 4.902999999997076e-06, 4.930999999999686e-06, 4.917000000000116e-06, 5.277000000001447e-06, 4.528000000000171e-06, 4.917000000000116e-06, 4.917000000000116e-06, 4.568999999999407e-06, 5.291999999997021e-06, 4.471999999998422e-06]</msg>
<status status="PASS" starttime="20201112 09:43:07.983" endtime="20201112 09:43:07.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.978" endtime="20201112 09:43:07.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:07.987" endtime="20201112 09:43:07.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:07.991" endtime="20201112 09:43:08.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.989" endtime="20201112 09:43:08.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.986" endtime="20201112 09:43:08.011"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.618" endtime="20201112 09:43:08.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:07.618" endtime="20201112 09:43:08.012"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.020" endtime="20201112 09:43:08.035"></status>
</kw>
<msg timestamp="20201112 09:43:08.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.019" endtime="20201112 09:43:08.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.037" endtime="20201112 09:43:08.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.039" endtime="20201112 09:43:08.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.016" endtime="20201112 09:43:08.042"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.014" endtime="20201112 09:43:08.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.050" endtime="20201112 09:43:08.355"></status>
</kw>
<msg timestamp="20201112 09:43:08.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.048" endtime="20201112 09:43:08.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022155542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.359" endtime="20201112 09:43:08.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.368" endtime="20201112 09:43:08.369"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.045" endtime="20201112 09:43:08.370"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.043" endtime="20201112 09:43:08.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.375" level="INFO">${RESULT} = [{'time': 0.022155542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.022163306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.371" endtime="20201112 09:43:08.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.388" level="INFO">${ACCURACY} = {'time': [0.022155542, 0.022163306, 0.022170361, 0.022178375, 0.022186153, 0.022194222, 0.022202458, 0.022210333, 0.022218361, 0.022226361, 0.022234403, 0.022242486, 0.022250181, 0.022257333, 0.022265...</msg>
<status status="PASS" starttime="20201112 09:43:08.376" endtime="20201112 09:43:08.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.392" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.391" endtime="20201112 09:43:08.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.395" level="INFO">VALUE: [6.153000000001796e-06, 5.986999999998965e-06, 5.6529999999978264e-06, 6.347000000000297e-06, 5.999999999999062e-06, 6.304999999998118e-06, 6.402000000002572e-06, 6.347000000000297e-06, 6.318999999997688e-06, 6.2639999999988816e-06, 6.306000000001061e-06, 6.374999999999437e-06, 5.987000000002435e-06, 5.652000000001822e-06, 6.360999999999867e-06, 5.985999999999492e-06, 5.624999999998687e-06, 6.347000000000297e-06, 6.347000000000297e-06, 5.625000000002156e-06, 5.6529999999978264e-06, 6.347000000000297e-06, 5.985999999999492e-06, 5.999999999999062e-06, 5.653000000001296e-06, 6.347000000000297e-06, 6.360999999999867e-06, 5.651999999998353e-06, 5.637999999998783e-06, 6.333000000000727e-06, 6.389000000002476e-06, 6.347000000000297e-06, 6.360999999999867e-06, 6.347000000000297e-06, 6.347000000000297e-06, 5.625000000002156e-06, 6.347000000000297e-06, 5.625000000002156e-06, 6.347000000000297e-06, 5.639000000001726e-06, 6.403000000002046e-06, 6.360999999999867e-06, 5.987000000002435e-06, 5.625000000002156e-06, 5.596999999999547e-06, 5.639000000001726e-06, 6.3479999999997705e-06, 5.985999999999492e-06, 5.6529999999978264e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.393" endtime="20201112 09:43:08.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.389" endtime="20201112 09:43:08.396"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.398" endtime="20201112 09:43:08.399"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.401" endtime="20201112 09:43:08.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.400" endtime="20201112 09:43:08.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.396" endtime="20201112 09:43:08.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.013" endtime="20201112 09:43:08.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.012" endtime="20201112 09:43:08.422"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.431" endtime="20201112 09:43:08.445"></status>
</kw>
<msg timestamp="20201112 09:43:08.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.429" endtime="20201112 09:43:08.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.446" endtime="20201112 09:43:08.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.449" endtime="20201112 09:43:08.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.427" endtime="20201112 09:43:08.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.425" endtime="20201112 09:43:08.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.459" endtime="20201112 09:43:08.747"></status>
</kw>
<msg timestamp="20201112 09:43:08.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.458" endtime="20201112 09:43:08.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.751" endtime="20201112 09:43:08.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.760" endtime="20201112 09:43:08.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.455" endtime="20201112 09:43:08.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.453" endtime="20201112 09:43:08.762"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:08.766" level="INFO">${RESULT} = [{'time': 0.022128153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.556000000002311e-06, 'source_diff': 7.556000000002311e-06}, {'time': 0.022137028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:08.763" endtime="20201112 09:43:08.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:08.781" level="INFO">${ACCURACY} = {'time': [0.022128153, 0.022137028, 0.022145986, 0.022154028, 0.022163097, 0.022171847, 0.022181056, 0.022189, 0.022197056, 0.022205097, 0.022213903, 0.022221764, 0.022230083, 0.022238097, 0.022246986...</msg>
<status status="PASS" starttime="20201112 09:43:08.767" endtime="20201112 09:43:08.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.785" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:08.784" endtime="20201112 09:43:08.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.788" level="INFO">VALUE: [7.556000000002311e-06, 7.055999999998341e-06, 7.4169999999991465e-06, 6.6669999999983964e-06, 7.415999999999673e-06, 7.000000000000062e-06, 7.459000000001326e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 7.056000000001811e-06, 6.333000000000727e-06, 7.055000000002337e-06, 6.665999999998923e-06, 7.472000000001422e-06, 6.694999999997536e-06, 7.4169999999991465e-06, 6.708000000001102e-06, 6.709000000000576e-06, 7.402999999999577e-06, 6.709000000000576e-06, 6.7079999999976325e-06, 7.014000000003101e-06, 6.347000000000297e-06, 6.708000000001102e-06, 7.402999999999577e-06, 7.402999999999577e-06, 7.4169999999991465e-06, 7.417000000002616e-06, 7.054999999998868e-06, 7.4169999999991465e-06, 7.4169999999991465e-06, 7.443999999998813e-06, 7.4169999999991465e-06, 6.708000000001102e-06, 7.069999999997911e-06, 6.695000000001006e-06, 6.722000000000672e-06, 6.681000000001436e-06, 7.4719999999979525e-06, 7.402999999999577e-06, 7.069999999997911e-06, 6.680000000001962e-06, 7.417000000002616e-06, 6.708999999997106e-06, 7.4169999999991465e-06, 6.6529999999988265e-06, 7.069000000001907e-06, 6.708000000001102e-06, 6.320000000000631e-06]</msg>
<status status="PASS" starttime="20201112 09:43:08.786" endtime="20201112 09:43:08.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.782" endtime="20201112 09:43:08.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.791" endtime="20201112 09:43:08.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:08.794" endtime="20201112 09:43:08.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.793" endtime="20201112 09:43:08.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.789" endtime="20201112 09:43:08.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.423" endtime="20201112 09:43:08.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.423" endtime="20201112 09:43:08.815"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.824" endtime="20201112 09:43:08.839"></status>
</kw>
<msg timestamp="20201112 09:43:08.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.822" endtime="20201112 09:43:08.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:08.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:08.840" endtime="20201112 09:43:08.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.843" endtime="20201112 09:43:08.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.820" endtime="20201112 09:43:08.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.818" endtime="20201112 09:43:08.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:08.852" endtime="20201112 09:43:09.141"></status>
</kw>
<msg timestamp="20201112 09:43:09.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:08.851" endtime="20201112 09:43:09.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022295403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022304014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.145" endtime="20201112 09:43:09.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.153" endtime="20201112 09:43:09.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.848" endtime="20201112 09:43:09.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.847" endtime="20201112 09:43:09.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.160" level="INFO">${RESULT} = [{'time': 0.022304014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.611000000002117e-06, 'source_diff': 8.611000000002117e-06}, {'time': 0.022313847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.157" endtime="20201112 09:43:09.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.173" level="INFO">${ACCURACY} = {'time': [0.022304014, 0.022313847, 0.022322931, 0.022331958, 0.022341014, 0.022349931, 0.022359875, 0.022369014, 0.022379042, 0.022389111, 0.022397917, 0.022407931, 0.022417167, 0.022425931, 0.022435...</msg>
<status status="PASS" starttime="20201112 09:43:09.161" endtime="20201112 09:43:09.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.178" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.177" endtime="20201112 09:43:09.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.181" level="INFO">VALUE: [8.611000000002117e-06, 8.125000000001187e-06, 7.4169999999991465e-06, 7.375000000000437e-06, 7.777999999999952e-06, 7.444999999998286e-06, 8.139000000000757e-06, 7.791999999999522e-06, 8.472999999998426e-06, 8.471999999998953e-06, 7.402999999999577e-06, 8.208999999998606e-06, 7.764000000000382e-06, 7.4169999999991465e-06, 8.153000000000327e-06, 8.514000000001132e-06, 8.180999999999466e-06, 8.500000000001562e-06, 8.139000000000757e-06, 8.153000000000327e-06, 7.777999999999952e-06, 7.777999999999952e-06, 8.124999999997717e-06, 8.096999999998578e-06, 8.487000000001466e-06, 7.389000000000007e-06, 8.472999999998426e-06, 8.500000000001562e-06, 8.138999999997287e-06, 8.528000000000702e-06, 8.486000000001992e-06, 8.125000000001187e-06, 8.485999999998523e-06, 8.486000000001992e-06, 7.402000000000103e-06, 7.792000000002991e-06, 8.110999999998147e-06, 8.528000000000702e-06, 8.139000000000757e-06, 8.500000000001562e-06, 8.125000000001187e-06, 7.764000000000382e-06, 8.137999999997814e-06, 7.4169999999991465e-06, 7.764000000000382e-06, 8.513999999997662e-06, 8.139000000000757e-06, 8.124999999997717e-06, 7.764000000000382e-06, 8.139000000000757e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.179" endtime="20201112 09:43:09.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.174" endtime="20201112 09:43:09.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.184" endtime="20201112 09:43:09.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.187" endtime="20201112 09:43:09.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.186" endtime="20201112 09:43:09.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.182" endtime="20201112 09:43:09.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.816" endtime="20201112 09:43:09.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:08.815" endtime="20201112 09:43:09.208"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.217" endtime="20201112 09:43:09.231"></status>
</kw>
<msg timestamp="20201112 09:43:09.232" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.215" endtime="20201112 09:43:09.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.233" endtime="20201112 09:43:09.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.235" endtime="20201112 09:43:09.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.213" endtime="20201112 09:43:09.238"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.211" endtime="20201112 09:43:09.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.245" endtime="20201112 09:43:09.533"></status>
</kw>
<msg timestamp="20201112 09:43:09.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.244" endtime="20201112 09:43:09.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022097361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022107042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.537" endtime="20201112 09:43:09.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.545" endtime="20201112 09:43:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.241" endtime="20201112 09:43:09.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.239" endtime="20201112 09:43:09.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.552" level="INFO">${RESULT} = [{'time': 0.022107042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.681000000000967e-06, 'source_diff': 9.681000000000967e-06}, {'time': 0.022118167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:09.549" endtime="20201112 09:43:09.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.565" level="INFO">${ACCURACY} = {'time': [0.022107042, 0.022118167, 0.022129264, 0.022140236, 0.022151208, 0.022162222, 0.02217325, 0.022184042, 0.02219425, 0.022204944, 0.022215069, 0.022226014, 0.022236028, 0.022246167, 0.02225720...</msg>
<status status="PASS" starttime="20201112 09:43:09.553" endtime="20201112 09:43:09.565"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.570" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.569" endtime="20201112 09:43:09.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.572" level="INFO">VALUE: [9.681000000000967e-06, 9.195000000000036e-06, 9.556000000000842e-06, 9.180000000000993e-06, 9.554999999997899e-06, 9.554999999997899e-06, 9.568999999997468e-06, 9.181000000000467e-06, 8.846999999999328e-06, 9.194000000000563e-06, 8.486000000001992e-06, 9.221999999999703e-06, 8.486000000001992e-06, 8.84800000000227e-06, 9.541000000001798e-06, 8.459000000002326e-06, 8.457999999999383e-06, 8.860999999998898e-06, 9.222000000003172e-06, 9.181000000000467e-06, 8.846999999999328e-06, 8.486000000001992e-06, 9.555999999997372e-06, 9.555000000001368e-06, 8.473000000001896e-06, 9.542000000001272e-06, 9.194000000000563e-06, 9.124999999998717e-06, 8.485999999998523e-06, 8.472000000002422e-06, 8.860999999998898e-06, 9.195000000000036e-06, 8.485999999998523e-06, 9.194000000000563e-06, 9.208999999999606e-06, 8.514000000001132e-06, 9.249999999998842e-06, 8.846999999999328e-06, 8.486000000001992e-06, 8.860999999998898e-06, 9.208000000000133e-06, 9.193999999997093e-06, 8.472999999998426e-06, 8.500000000001562e-06, 9.194000000000563e-06, 8.832999999999758e-06, 8.500000000001562e-06, 8.500000000001562e-06, 8.485999999998523e-06, 8.485999999998523e-06]</msg>
<status status="PASS" starttime="20201112 09:43:09.571" endtime="20201112 09:43:09.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.566" endtime="20201112 09:43:09.573"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.575" endtime="20201112 09:43:09.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.579" endtime="20201112 09:43:09.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.578" endtime="20201112 09:43:09.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.574" endtime="20201112 09:43:09.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.209" endtime="20201112 09:43:09.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.208" endtime="20201112 09:43:09.600"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.609" endtime="20201112 09:43:09.623"></status>
</kw>
<msg timestamp="20201112 09:43:09.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.607" endtime="20201112 09:43:09.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.625" endtime="20201112 09:43:09.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.627" endtime="20201112 09:43:09.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.605" endtime="20201112 09:43:09.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.603" endtime="20201112 09:43:09.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.637" endtime="20201112 09:43:09.923"></status>
</kw>
<msg timestamp="20201112 09:43:09.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.636" endtime="20201112 09:43:09.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021575486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:09.927" endtime="20201112 09:43:09.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.935" endtime="20201112 09:43:09.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.633" endtime="20201112 09:43:09.937"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.631" endtime="20201112 09:43:09.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:09.942" level="INFO">${RESULT} = [{'time': 0.021575486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0763999999999913e-05, 'source_diff': 1.0763999999999913e-05}, {'time': 0.021587403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:09.939" endtime="20201112 09:43:09.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:09.956" level="INFO">${ACCURACY} = {'time': [0.021575486, 0.021587403, 0.021598389, 0.021609569, 0.021621403, 0.021633431, 0.021644417, 0.021656389, 0.021667431, 0.021679486, 0.021691639, 0.021703403, 0.021715625, 0.021727375, 0.021739...</msg>
<status status="PASS" starttime="20201112 09:43:09.943" endtime="20201112 09:43:09.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.960" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:09.959" endtime="20201112 09:43:09.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:09.963" level="INFO">VALUE: [1.0763999999999913e-05, 9.917000000001647e-06, 9.555999999997372e-06, 9.915999999998704e-06, 1.0209000000000606e-05, 1.0264000000002882e-05, 9.556000000000842e-06, 1.0250000000003312e-05, 9.570000000000412e-06, 1.0292000000002022e-05, 1.0610999999997178e-05, 1.0263999999999412e-05, 1.0625000000000218e-05, 1.0249999999999843e-05, 1.0276999999999509e-05, 9.556000000000842e-06, 9.555999999997372e-06, 1.0249999999999843e-05, 1.0277999999998982e-05, 9.610999999999648e-06, 9.568999999997468e-06, 9.541999999997802e-06, 9.556000000000842e-06, 1.0276999999999509e-05, 1.0222000000000703e-05, 1.0262999999999939e-05, 1.0236999999999746e-05, 1.0249999999999843e-05, 1.0278000000002452e-05, 9.542000000001272e-06, 9.570000000000412e-06, 9.570000000000412e-06, 9.555000000001368e-06, 9.513999999998662e-06, 1.0249999999999843e-05, 1.0611000000000648e-05, 1.0208000000001133e-05, 9.542000000001272e-06, 1.0277999999998982e-05, 9.568999999997468e-06, 9.570000000000412e-06, 9.818999999997718e-06, 1.0638999999999788e-05, 9.555000000001368e-06, 1.0263999999999412e-05, 1.0276999999999509e-05, 9.528000000001702e-06, 1.0263999999999412e-05, 9.487000000002466e-06, 1.0277999999998982e-05]</msg>
<status status="PASS" starttime="20201112 09:43:09.961" endtime="20201112 09:43:09.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.957" endtime="20201112 09:43:09.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.966" endtime="20201112 09:43:09.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:09.970" endtime="20201112 09:43:09.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.968" endtime="20201112 09:43:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.965" endtime="20201112 09:43:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.601" endtime="20201112 09:43:09.990"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.600" endtime="20201112 09:43:09.991"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:09.999" endtime="20201112 09:43:10.014"></status>
</kw>
<msg timestamp="20201112 09:43:10.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:09.998" endtime="20201112 09:43:10.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.016" endtime="20201112 09:43:10.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.018" endtime="20201112 09:43:10.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.995" endtime="20201112 09:43:10.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.993" endtime="20201112 09:43:10.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.028" endtime="20201112 09:43:10.316"></status>
</kw>
<msg timestamp="20201112 09:43:10.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.026" endtime="20201112 09:43:10.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.320" endtime="20201112 09:43:10.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.328" endtime="20201112 09:43:10.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.024" endtime="20201112 09:43:10.330"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.022" endtime="20201112 09:43:10.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.335" level="INFO">${RESULT} = [{'time': 0.022066361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0763999999999913e-05, 'source_diff': 1.0763999999999913e-05}, {'time': 0.022079667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.332" endtime="20201112 09:43:10.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.349" level="INFO">${ACCURACY} = {'time': [0.022066361, 0.022079667, 0.022091639, 0.022104528, 0.022117319, 0.022130417, 0.022143417, 0.022156361, 0.022169542, 0.022181569, 0.022194528, 0.022206444, 0.022219514, 0.022232556, 0.022245...</msg>
<status status="PASS" starttime="20201112 09:43:10.336" endtime="20201112 09:43:10.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.354" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.353" endtime="20201112 09:43:10.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.356" level="INFO">VALUE: [1.0763999999999913e-05, 1.1403000000000107e-05, 1.0680999999998497e-05, 1.1346999999998358e-05, 1.0957999999998413e-05, 1.1347999999997832e-05, 1.1347999999997832e-05, 1.1291999999999552e-05, 1.1348000000001301e-05, 1.0638000000000314e-05, 1.1334000000001732e-05, 1.0638000000000314e-05, 1.1346999999998358e-05, 1.1334000000001732e-05, 1.1333000000002258e-05, 1.0570000000001412e-05, 1.1334000000001732e-05, 1.0625000000000218e-05, 1.1361000000001398e-05, 1.1375000000000968e-05, 1.1333000000002258e-05, 1.1347000000001828e-05, 1.1346999999998358e-05, 1.0665999999999454e-05, 1.1346999999998358e-05, 1.0610999999997178e-05, 1.1319000000002688e-05, 1.0638999999999788e-05, 1.0985999999997553e-05, 1.0986000000001023e-05, 1.1346999999998358e-05, 1.1333000000002258e-05, 1.0972000000001453e-05, 1.0611000000000648e-05, 1.1388000000001064e-05, 1.0611000000000648e-05, 1.0957999999998413e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.1332999999998788e-05, 1.1347000000001828e-05, 1.1320000000002162e-05, 1.1333000000002258e-05, 1.1346999999998358e-05, 1.1319999999998692e-05, 1.0625000000000218e-05, 1.0986000000001023e-05, 1.0666999999998927e-05, 1.0986000000001023e-05, 1.0625000000000218e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.355" endtime="20201112 09:43:10.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.350" endtime="20201112 09:43:10.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.360" endtime="20201112 09:43:10.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.363" endtime="20201112 09:43:10.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.362" endtime="20201112 09:43:10.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.358" endtime="20201112 09:43:10.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.991" endtime="20201112 09:43:10.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:09.991" endtime="20201112 09:43:10.384"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.393" endtime="20201112 09:43:10.408"></status>
</kw>
<msg timestamp="20201112 09:43:10.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.391" endtime="20201112 09:43:10.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.409" endtime="20201112 09:43:10.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.412" endtime="20201112 09:43:10.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.389" endtime="20201112 09:43:10.415"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.387" endtime="20201112 09:43:10.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.422" endtime="20201112 09:43:10.709"></status>
</kw>
<msg timestamp="20201112 09:43:10.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.420" endtime="20201112 09:43:10.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022098847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022111736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.714" endtime="20201112 09:43:10.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.722" endtime="20201112 09:43:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.418" endtime="20201112 09:43:10.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.416" endtime="20201112 09:43:10.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:10.729" level="INFO">${RESULT} = [{'time': 0.022111736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.022125667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:10.725" endtime="20201112 09:43:10.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:10.742" level="INFO">${ACCURACY} = {'time': [0.022111736, 0.022125667, 0.022139486, 0.022153625, 0.022166653, 0.022180722, 0.022194611, 0.022208431, 0.022221389, 0.022234583, 0.022248625, 0.022262431, 0.022275542, 0.022289569, 0.022303...</msg>
<status status="PASS" starttime="20201112 09:43:10.730" endtime="20201112 09:43:10.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.747" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:10.746" endtime="20201112 09:43:10.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.749" level="INFO">VALUE: [1.2888999999998568e-05, 1.2417000000000677e-05, 1.1680000000000024e-05, 1.2403000000001108e-05, 1.1709000000002107e-05, 1.2403000000001108e-05, 1.2055000000000399e-05, 1.2083999999999012e-05, 1.1333000000002258e-05, 1.1749999999997873e-05, 1.2457999999999914e-05, 1.2055999999999872e-05, 1.1694999999999067e-05, 1.2360999999998928e-05, 1.2374999999998498e-05, 1.2403000000001108e-05, 1.1707999999999164e-05, 1.2083999999999012e-05, 1.2402000000001634e-05, 1.1721999999998733e-05, 1.2028000000000733e-05, 1.2388000000002064e-05, 1.2402999999997638e-05, 1.1709000000002107e-05, 1.2055999999999872e-05, 1.1680000000000024e-05, 1.2041000000000829e-05, 1.1347999999997832e-05, 1.1708999999998637e-05, 1.2403000000001108e-05, 1.1666999999999927e-05, 1.2403000000001108e-05, 1.1707999999999164e-05, 1.1708999999998637e-05, 1.2028000000000733e-05, 1.1736000000001773e-05, 1.2000000000001593e-05, 1.2055999999999872e-05, 1.2055000000000399e-05, 1.1707999999999164e-05, 1.2055999999999872e-05, 1.1694000000003063e-05, 1.2389000000001538e-05, 1.2068999999999969e-05, 1.1721999999998733e-05, 1.2417000000000677e-05, 1.2431000000000247e-05, 1.1333000000002258e-05, 1.1694999999999067e-05, 1.2389000000001538e-05]</msg>
<status status="PASS" starttime="20201112 09:43:10.748" endtime="20201112 09:43:10.750"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.743" endtime="20201112 09:43:10.750"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.753" endtime="20201112 09:43:10.754"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:10.756" endtime="20201112 09:43:10.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.755" endtime="20201112 09:43:10.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.751" endtime="20201112 09:43:10.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.385" endtime="20201112 09:43:10.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.385" endtime="20201112 09:43:10.777"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.786" endtime="20201112 09:43:10.801"></status>
</kw>
<msg timestamp="20201112 09:43:10.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.784" endtime="20201112 09:43:10.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:10.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:10.802" endtime="20201112 09:43:10.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.805" endtime="20201112 09:43:10.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.782" endtime="20201112 09:43:10.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.780" endtime="20201112 09:43:10.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:10.815" endtime="20201112 09:43:11.101"></status>
</kw>
<msg timestamp="20201112 09:43:11.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:10.813" endtime="20201112 09:43:11.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022303042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022315944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.105" endtime="20201112 09:43:11.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.113" endtime="20201112 09:43:11.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.811" endtime="20201112 09:43:11.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.809" endtime="20201112 09:43:11.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.120" level="INFO">${RESULT} = [{'time': 0.022315944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2902000000002134e-05, 'source_diff': 1.2902000000002134e-05}, {'time': 0.022331097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:11.117" endtime="20201112 09:43:11.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.134" level="INFO">${ACCURACY} = {'time': [0.022315944, 0.022331097, 0.022344875, 0.022358903, 0.022374167, 0.022388972, 0.022404111, 0.022419056, 0.022433944, 0.022448181, 0.022461903, 0.022477153, 0.022491972, 0.022506069, 0.022520...</msg>
<status status="PASS" starttime="20201112 09:43:11.121" endtime="20201112 09:43:11.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.138" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.137" endtime="20201112 09:43:11.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.141" level="INFO">VALUE: [1.2902000000002134e-05, 1.3125000000002718e-05, 1.2346999999999358e-05, 1.2763999999998443e-05, 1.3513999999999193e-05, 1.3138999999998818e-05, 1.3499999999999623e-05, 1.3472999999999957e-05, 1.3152000000002384e-05, 1.2737000000002247e-05, 1.2416999999997208e-05, 1.3459000000000387e-05, 1.3110999999999678e-05, 1.276299999999897e-05, 1.2778000000001483e-05, 1.3499999999999623e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3125000000002718e-05, 1.3472000000000484e-05, 1.3472999999999957e-05, 1.2777999999998013e-05, 1.3110999999999678e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3055000000001399e-05, 1.3486999999999527e-05, 1.3124999999999248e-05, 1.2387999999998595e-05, 1.2749999999998873e-05, 1.3110999999999678e-05, 1.2778000000001483e-05, 1.3124999999999248e-05, 1.2763999999998443e-05, 1.3110999999999678e-05, 1.3208000000000664e-05, 1.2791000000001579e-05, 1.3457999999997444e-05, 1.3472000000000484e-05, 1.2749999999998873e-05, 1.3097000000000109e-05, 1.2763999999998443e-05, 1.3472000000000484e-05, 1.2415999999997734e-05, 1.2749999999998873e-05, 1.3443999999997874e-05, 1.3069000000000969e-05, 1.2763999999998443e-05, 1.3472999999999957e-05, 1.3472000000000484e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.139" endtime="20201112 09:43:11.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.135" endtime="20201112 09:43:11.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.144" endtime="20201112 09:43:11.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.148" endtime="20201112 09:43:11.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.146" endtime="20201112 09:43:11.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.143" endtime="20201112 09:43:11.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.778" endtime="20201112 09:43:11.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:10.778" endtime="20201112 09:43:11.168"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.177" endtime="20201112 09:43:11.192"></status>
</kw>
<msg timestamp="20201112 09:43:11.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.176" endtime="20201112 09:43:11.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.194" endtime="20201112 09:43:11.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.196" endtime="20201112 09:43:11.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.173" endtime="20201112 09:43:11.199"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.171" endtime="20201112 09:43:11.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.206" endtime="20201112 09:43:11.491"></status>
</kw>
<msg timestamp="20201112 09:43:11.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.205" endtime="20201112 09:43:11.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021864486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.495" endtime="20201112 09:43:11.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.504" endtime="20201112 09:43:11.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.202" endtime="20201112 09:43:11.506"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.200" endtime="20201112 09:43:11.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.510" level="INFO">${RESULT} = [{'time': 0.021864486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3957999999997944e-05, 'source_diff': 1.3957999999997944e-05}, {'time': 0.021880444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:11.507" endtime="20201112 09:43:11.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.524" level="INFO">${ACCURACY} = {'time': [0.021864486, 0.021880444, 0.021895681, 0.021910486, 0.021925472, 0.021940764, 0.021956639, 0.021971417, 0.021986514, 0.022002458, 0.022017458, 0.022032708, 0.0220485, 0.022064736, 0.02207945...</msg>
<status status="PASS" starttime="20201112 09:43:11.511" endtime="20201112 09:43:11.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.528" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.527" endtime="20201112 09:43:11.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.531" level="INFO">VALUE: [1.3957999999997944e-05, 1.3901999999999665e-05, 1.3834000000000762e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.3847000000000859e-05, 1.4208000000001664e-05, 1.3472999999999957e-05, 1.3471999999997014e-05, 1.4179999999999054e-05, 1.3499999999999623e-05, 1.3833000000001289e-05, 1.4193999999998624e-05, 1.4542000000002803e-05, 1.3486000000000054e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.4611000000001179e-05, 1.4555999999998903e-05, 1.4138999999999818e-05, 1.3486000000000054e-05, 1.4208999999997668e-05, 1.3499999999999623e-05, 1.4527999999999763e-05, 1.4541999999999333e-05, 1.4568999999999e-05, 1.4221999999997764e-05, 1.452700000000029e-05, 1.4180000000002524e-05, 1.4179999999999054e-05, 1.4193999999998624e-05, 1.4194000000002094e-05, 1.3471999999997014e-05, 1.3486000000000054e-05, 1.380499999999868e-05, 1.3806000000001623e-05, 1.4138999999999818e-05, 1.383299999999782e-05, 1.4514000000000193e-05, 1.455499999999943e-05, 1.4180999999998528e-05, 1.4180999999998528e-05, 1.3472999999999957e-05, 1.4194999999998098e-05, 1.3861000000000429e-05, 1.4181000000001998e-05, 1.383299999999782e-05, 1.4138999999999818e-05, 1.3486000000000054e-05, 1.452700000000029e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.529" endtime="20201112 09:43:11.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.525" endtime="20201112 09:43:11.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.539" endtime="20201112 09:43:11.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.542" endtime="20201112 09:43:11.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.540" endtime="20201112 09:43:11.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.537" endtime="20201112 09:43:11.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.169" endtime="20201112 09:43:11.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.169" endtime="20201112 09:43:11.563"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.571" endtime="20201112 09:43:11.585"></status>
</kw>
<msg timestamp="20201112 09:43:11.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.570" endtime="20201112 09:43:11.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.587" endtime="20201112 09:43:11.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.589" endtime="20201112 09:43:11.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.567" endtime="20201112 09:43:11.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.565" endtime="20201112 09:43:11.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.600" endtime="20201112 09:43:11.885"></status>
</kw>
<msg timestamp="20201112 09:43:11.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.598" endtime="20201112 09:43:11.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022302306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022317708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.889" endtime="20201112 09:43:11.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.898" endtime="20201112 09:43:11.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.596" endtime="20201112 09:43:11.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.594" endtime="20201112 09:43:11.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:11.904" level="INFO">${RESULT} = [{'time': 0.022317708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5401999999997695e-05, 'source_diff': 1.5401999999997695e-05}, {'time': 0.022334792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:11.901" endtime="20201112 09:43:11.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:11.919" level="INFO">${ACCURACY} = {'time': [0.022317708, 0.022334792, 0.022351958, 0.022367736, 0.022384958, 0.022401722, 0.022417625, 0.022433875, 0.022450861, 0.022467625, 0.022484681, 0.022501931, 0.022518625, 0.022534792, 0.022551...</msg>
<status status="PASS" starttime="20201112 09:43:11.905" endtime="20201112 09:43:11.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.923" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:11.922" endtime="20201112 09:43:11.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.926" level="INFO">VALUE: [1.5401999999997695e-05, 1.5263999999997474e-05, 1.5652000000001415e-05, 1.4514000000000193e-05, 1.5666000000000985e-05, 1.5263999999997474e-05, 1.4555999999998903e-05, 1.4889000000000568e-05, 1.5263999999997474e-05, 1.5222000000002234e-05, 1.5278000000000513e-05, 1.562499999999828e-05, 1.5278000000000513e-05, 1.4903000000000138e-05, 1.5249999999997904e-05, 1.4569999999998473e-05, 1.5278000000000513e-05, 1.4555999999998903e-05, 1.459699999999814e-05, 1.5263999999997474e-05, 1.452700000000029e-05, 1.5250000000001374e-05, 1.529100000000061e-05, 1.5250000000001374e-05, 1.5277999999997044e-05, 1.4541999999999333e-05, 1.4527999999999763e-05, 1.4500000000000624e-05, 1.4568999999999e-05, 1.526300000000147e-05, 1.5264000000000943e-05, 1.5223000000001707e-05, 1.4541999999999333e-05, 1.5278000000000513e-05, 1.4541999999999333e-05, 1.452700000000029e-05, 1.455499999999943e-05, 1.4541999999999333e-05, 1.4555999999998903e-05, 1.4902000000000665e-05, 1.5263999999997474e-05, 1.5249999999997904e-05, 1.563900000000132e-05, 1.5278000000000513e-05, 1.4555000000002899e-05, 1.5235999999998334e-05, 1.5264000000000943e-05, 1.5221999999998764e-05, 1.5264000000000943e-05, 1.4903000000000138e-05]</msg>
<status status="PASS" starttime="20201112 09:43:11.925" endtime="20201112 09:43:11.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.920" endtime="20201112 09:43:11.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.930" endtime="20201112 09:43:11.931"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:11.933" endtime="20201112 09:43:11.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.931" endtime="20201112 09:43:11.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.928" endtime="20201112 09:43:11.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.564" endtime="20201112 09:43:11.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.563" endtime="20201112 09:43:11.954"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.962" endtime="20201112 09:43:11.977"></status>
</kw>
<msg timestamp="20201112 09:43:11.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.961" endtime="20201112 09:43:11.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:11.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:11.978" endtime="20201112 09:43:11.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.981" endtime="20201112 09:43:11.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.958" endtime="20201112 09:43:11.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.956" endtime="20201112 09:43:11.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:11.991" endtime="20201112 09:43:12.277"></status>
</kw>
<msg timestamp="20201112 09:43:12.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:11.989" endtime="20201112 09:43:12.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021842625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021859486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.281" endtime="20201112 09:43:12.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.289" endtime="20201112 09:43:12.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.987" endtime="20201112 09:43:12.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.985" endtime="20201112 09:43:12.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.296" level="INFO">${RESULT} = [{'time': 0.021859486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.686099999999996e-05, 'source_diff': 1.686099999999996e-05}, {'time': 0.021877153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.292" endtime="20201112 09:43:12.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.309" level="INFO">${ACCURACY} = {'time': [0.021859486, 0.021877153, 0.021895319, 0.021912403, 0.02193025, 0.021948278, 0.021965222, 0.021982264, 0.021999278, 0.022016167, 0.02203425, 0.022052236, 0.022069458, 0.022087347, 0.02210531...</msg>
<status status="PASS" starttime="20201112 09:43:12.297" endtime="20201112 09:43:12.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.314" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.313" endtime="20201112 09:43:12.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.316" level="INFO">VALUE: [1.686099999999996e-05, 1.5958999999999418e-05, 1.633300000000032e-05, 1.561099999999871e-05, 1.6027999999997794e-05, 1.6320000000000223e-05, 1.562499999999828e-05, 1.565300000000089e-05, 1.5555999999999903e-05, 1.561099999999871e-05, 1.631899999999728e-05, 1.634699999999989e-05, 1.5971999999999514e-05, 1.634699999999989e-05, 1.636099999999946e-05, 1.6320000000000223e-05, 1.559699999999914e-05, 1.631900000000075e-05, 1.562500000000175e-05, 1.562500000000175e-05, 1.5972000000002984e-05, 1.6320000000000223e-05, 1.634699999999989e-05, 1.561099999999871e-05, 1.631900000000075e-05, 1.6320000000000223e-05, 1.559699999999914e-05, 1.562500000000175e-05, 1.565299999999742e-05, 1.5986000000002554e-05, 1.633300000000032e-05, 1.5957999999999944e-05, 1.631900000000075e-05, 1.634699999999989e-05, 1.5597999999998613e-05, 1.633300000000032e-05, 1.5611999999998183e-05, 1.561100000000218e-05, 1.566700000000046e-05, 1.558299999999957e-05, 1.561100000000218e-05, 1.5584000000002513e-05, 1.634699999999989e-05, 1.6306000000000653e-05, 1.6306000000000653e-05, 1.561100000000218e-05, 1.631900000000075e-05, 1.561100000000218e-05, 1.633300000000032e-05, 1.633300000000032e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.315" endtime="20201112 09:43:12.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.310" endtime="20201112 09:43:12.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.320" endtime="20201112 09:43:12.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.323" endtime="20201112 09:43:12.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.322" endtime="20201112 09:43:12.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.318" endtime="20201112 09:43:12.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.955" endtime="20201112 09:43:12.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:11.954" endtime="20201112 09:43:12.344"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.353" endtime="20201112 09:43:12.367"></status>
</kw>
<msg timestamp="20201112 09:43:12.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.351" endtime="20201112 09:43:12.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.369" endtime="20201112 09:43:12.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.371" endtime="20201112 09:43:12.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.348" endtime="20201112 09:43:12.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.346" endtime="20201112 09:43:12.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.381" endtime="20201112 09:43:12.666"></status>
</kw>
<msg timestamp="20201112 09:43:12.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.379" endtime="20201112 09:43:12.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021764667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021782194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:12.670" endtime="20201112 09:43:12.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.678" endtime="20201112 09:43:12.680"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.377" endtime="20201112 09:43:12.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.375" endtime="20201112 09:43:12.681"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:12.685" level="INFO">${RESULT} = [{'time': 0.021782194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.752699999999982e-05, 'source_diff': 1.752699999999982e-05}, {'time': 0.021801097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:12.682" endtime="20201112 09:43:12.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:12.698" level="INFO">${ACCURACY} = {'time': [0.021782194, 0.021801097, 0.021819944, 0.021839028, 0.021858222, 0.021877069, 0.021895167, 0.021913931, 0.021933028, 0.021951125, 0.021969125, 0.021988236, 0.022006944, 0.022025222, 0.022044...</msg>
<status status="PASS" starttime="20201112 09:43:12.686" endtime="20201112 09:43:12.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.703" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:12.702" endtime="20201112 09:43:12.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.705" level="INFO">VALUE: [1.752699999999982e-05, 1.6986000000000084e-05, 1.70690000000015e-05, 1.740299999999917e-05, 1.73889999999996e-05, 1.7401999999999695e-05, 1.668100000000103e-05, 1.7056000000001403e-05, 1.7320000000001223e-05, 1.6735999999999834e-05, 1.668099999999756e-05, 1.73889999999996e-05, 1.702699999999932e-05, 1.6694000000001125e-05, 1.737500000000003e-05, 1.7415999999999265e-05, 1.73889999999996e-05, 1.740300000000264e-05, 1.6708000000000695e-05, 1.6763999999998974e-05, 1.704099999999889e-05, 1.6680000000001555e-05, 1.734700000000089e-05, 1.7042000000001833e-05, 1.740299999999917e-05, 1.6679999999998085e-05, 1.73889999999996e-05, 1.73889999999996e-05, 1.6347999999999363e-05, 1.668100000000103e-05, 1.740299999999917e-05, 1.6695000000000598e-05, 1.7401999999999695e-05, 1.740299999999917e-05, 1.668100000000103e-05, 1.662499999999928e-05, 1.7388000000000126e-05, 1.6708000000000695e-05, 1.6333999999999793e-05, 1.736100000000046e-05, 1.7070000000000973e-05, 1.633300000000032e-05, 1.7401999999999695e-05, 1.6694000000001125e-05, 1.738900000000307e-05, 1.740299999999917e-05, 1.7401999999999695e-05, 1.73889999999996e-05, 1.6680000000001555e-05, 1.743100000000178e-05]</msg>
<status status="PASS" starttime="20201112 09:43:12.704" endtime="20201112 09:43:12.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.699" endtime="20201112 09:43:12.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.709" endtime="20201112 09:43:12.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:12.712" endtime="20201112 09:43:12.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.711" endtime="20201112 09:43:12.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.707" endtime="20201112 09:43:12.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.345" endtime="20201112 09:43:12.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.344" endtime="20201112 09:43:12.733"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.742" endtime="20201112 09:43:12.757"></status>
</kw>
<msg timestamp="20201112 09:43:12.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.740" endtime="20201112 09:43:12.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:12.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:12.758" endtime="20201112 09:43:12.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.761" endtime="20201112 09:43:12.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.738" endtime="20201112 09:43:12.764"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.736" endtime="20201112 09:43:12.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:12.771" endtime="20201112 09:43:13.056"></status>
</kw>
<msg timestamp="20201112 09:43:13.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02181775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:12.769" endtime="20201112 09:43:13.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02181775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021835583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:13.061" endtime="20201112 09:43:13.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.069" endtime="20201112 09:43:13.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.767" endtime="20201112 09:43:13.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.765" endtime="20201112 09:43:13.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.075" level="INFO">${RESULT} = [{'time': 0.021835583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.783299999999835e-05, 'source_diff': 1.783299999999835e-05}, {'time': 0.021855611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:13.072" endtime="20201112 09:43:13.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.089" level="INFO">${ACCURACY} = {'time': [0.021835583, 0.021855611, 0.021874736, 0.021893444, 0.02191375, 0.021933833, 0.021952778, 0.021972722, 0.021992625, 0.022011458, 0.022031708, 0.022050444, 0.022069458, 0.022088556, 0.0221077...</msg>
<status status="PASS" starttime="20201112 09:43:13.076" endtime="20201112 09:43:13.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.093" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.092" endtime="20201112 09:43:13.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.096" level="INFO">VALUE: [1.783299999999835e-05, 1.8472000000002015e-05, 1.783299999999835e-05, 1.7402000000003165e-05, 1.8457999999998975e-05, 1.8514000000000724e-05, 1.7750000000000404e-05, 1.8443999999999405e-05, 1.8471999999998545e-05, 1.737500000000003e-05, 1.8472000000002015e-05, 1.7401999999999695e-05, 1.734700000000089e-05, 1.744499999999788e-05, 1.7723000000000738e-05, 1.809699999999817e-05, 1.8471999999998545e-05, 1.8473000000001488e-05, 1.8472000000002015e-05, 1.737500000000003e-05, 1.845899999999845e-05, 1.740299999999917e-05, 1.7805999999998684e-05, 1.8485999999998115e-05, 1.815299999999992e-05, 1.8471999999998545e-05, 1.8487000000001058e-05, 1.73889999999996e-05, 1.811100000000121e-05, 1.7693999999998655e-05, 1.8487000000001058e-05, 1.841699999999974e-05, 1.741700000000221e-05, 1.8416000000000265e-05, 1.809700000000164e-05, 1.809700000000164e-05, 1.80829999999986e-05, 1.7708000000001695e-05, 1.809700000000164e-05, 1.8471999999998545e-05, 1.741699999999874e-05, 1.7750000000000404e-05, 1.73889999999996e-05, 1.7750000000000404e-05, 1.811100000000121e-05, 1.8429999999999835e-05, 1.812500000000078e-05, 1.7458000000001445e-05, 1.8472000000002015e-05, 1.740299999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.094" endtime="20201112 09:43:13.097"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.090" endtime="20201112 09:43:13.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.099" endtime="20201112 09:43:13.101"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.103" endtime="20201112 09:43:13.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.101" endtime="20201112 09:43:13.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.098" endtime="20201112 09:43:13.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.734" endtime="20201112 09:43:13.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:12.734" endtime="20201112 09:43:13.124"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.132" endtime="20201112 09:43:13.147"></status>
</kw>
<msg timestamp="20201112 09:43:13.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.131" endtime="20201112 09:43:13.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.149" endtime="20201112 09:43:13.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.151" endtime="20201112 09:43:13.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.128" endtime="20201112 09:43:13.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.126" endtime="20201112 09:43:13.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.161" endtime="20201112 09:43:13.447"></status>
</kw>
<msg timestamp="20201112 09:43:13.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.160" endtime="20201112 09:43:13.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022149917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022169917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.451" endtime="20201112 09:43:13.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.459" endtime="20201112 09:43:13.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.157" endtime="20201112 09:43:13.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.156" endtime="20201112 09:43:13.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.466" level="INFO">${RESULT} = [{'time': 0.022169917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9999999999999185e-05, 'source_diff': 1.9999999999999185e-05}, {'time': 0.022190861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.462" endtime="20201112 09:43:13.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.480" level="INFO">${ACCURACY} = {'time': [0.022169917, 0.022190861, 0.022211681, 0.02223175, 0.022251889, 0.022272597, 0.022293806, 0.022314889, 0.022335681, 0.022355639, 0.022375625, 0.022395694, 0.022415847, 0.022436875, 0.0224578...</msg>
<status status="PASS" starttime="20201112 09:43:13.467" endtime="20201112 09:43:13.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.485" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.484" endtime="20201112 09:43:13.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.487" level="INFO">VALUE: [1.9999999999999185e-05, 1.916700000000049e-05, 1.9237000000001808e-05, 1.8806000000003154e-05, 1.883299999999935e-05, 1.9194000000000155e-05, 1.9527999999997825e-05, 1.9528000000001294e-05, 1.918100000000006e-05, 1.8486000000001584e-05, 1.8500000000001154e-05, 1.881899999999978e-05, 1.883299999999935e-05, 1.9541999999997395e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.886099999999849e-05, 1.880500000000021e-05, 1.8500000000001154e-05, 1.881899999999978e-05, 1.9542000000000864e-05, 1.9179999999997116e-05, 1.955499999999749e-05, 1.9542000000000864e-05, 1.915300000000092e-05, 1.92089999999992e-05, 1.9180000000000585e-05, 1.9180000000000585e-05, 1.8429999999999835e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 1.880500000000021e-05, 1.8471999999998545e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.8764000000000974e-05, 1.954100000000139e-05, 1.840300000000017e-05, 1.8833999999998824e-05, 1.8471999999998545e-05, 1.8819999999999254e-05, 1.8443999999999405e-05, 1.8819999999999254e-05, 1.92089999999992e-05, 1.9556000000000434e-05, 1.845899999999845e-05, 1.912499999999831e-05, 1.884699999999892e-05, 1.9541999999997395e-05, 1.909699999999917e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.486" endtime="20201112 09:43:13.488"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.481" endtime="20201112 09:43:13.488"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.491" endtime="20201112 09:43:13.492"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.494" endtime="20201112 09:43:13.513"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.493" endtime="20201112 09:43:13.514"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.489" endtime="20201112 09:43:13.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.125" endtime="20201112 09:43:13.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.124" endtime="20201112 09:43:13.515"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.523" endtime="20201112 09:43:13.539"></status>
</kw>
<msg timestamp="20201112 09:43:13.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.522" endtime="20201112 09:43:13.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.540" endtime="20201112 09:43:13.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.542" endtime="20201112 09:43:13.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.519" endtime="20201112 09:43:13.546"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.517" endtime="20201112 09:43:13.546"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.553" endtime="20201112 09:43:13.838"></status>
</kw>
<msg timestamp="20201112 09:43:13.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.551" endtime="20201112 09:43:13.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021696458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.842" endtime="20201112 09:43:13.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.851" endtime="20201112 09:43:13.852"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.548" endtime="20201112 09:43:13.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.547" endtime="20201112 09:43:13.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:13.858" level="INFO">${RESULT} = [{'time': 0.021717236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0778000000002544e-05, 'source_diff': 2.0778000000002544e-05}, {'time': 0.021739042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:13.854" endtime="20201112 09:43:13.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:13.871" level="INFO">${ACCURACY} = {'time': [0.021717236, 0.021739042, 0.021760361, 0.021782056, 0.021803014, 0.021825375, 0.021847375, 0.021869167, 0.021890014, 0.021911292, 0.021932236, 0.021953194, 0.021975208, 0.021996042, 0.022017...</msg>
<status status="PASS" starttime="20201112 09:43:13.859" endtime="20201112 09:43:13.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.876" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:13.874" endtime="20201112 09:43:13.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.878" level="INFO">VALUE: [2.0778000000002544e-05, 1.9556000000000434e-05, 1.9929999999997866e-05, 1.990300000000167e-05, 1.9541999999997395e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.0263999999999005e-05, 1.9527999999997825e-05, 1.9527999999997825e-05, 1.955500000000096e-05, 1.954099999999792e-05, 2.0249999999999435e-05, 1.9514000000001724e-05, 1.9499999999998685e-05, 1.9528000000001294e-05, 1.995899999999995e-05, 2.0249999999999435e-05, 1.9556000000000434e-05, 1.955500000000096e-05, 1.951299999999878e-05, 2.0235999999999865e-05, 1.987500000000253e-05, 2.0222000000000295e-05, 2.0263999999999005e-05, 1.954099999999792e-05, 1.988899999999863e-05, 2.0249999999999435e-05, 2.031900000000128e-05, 1.990300000000167e-05, 1.987499999999906e-05, 1.9915999999998296e-05, 1.954100000000139e-05, 2.02090000000002e-05, 2.0264000000002474e-05, 1.9485999999999115e-05, 1.954099999999792e-05, 1.9514000000001724e-05, 2.0250000000002905e-05, 1.955500000000096e-05, 2.0249999999999435e-05, 1.9542000000000864e-05, 1.990300000000167e-05, 1.987500000000253e-05, 1.98890000000021e-05, 1.9528000000001294e-05, 2.0263999999999005e-05, 2.0263999999999005e-05, 2.0249999999999435e-05, 2.0249999999999435e-05]</msg>
<status status="PASS" starttime="20201112 09:43:13.877" endtime="20201112 09:43:13.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.872" endtime="20201112 09:43:13.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.882" endtime="20201112 09:43:13.883"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:13.885" endtime="20201112 09:43:13.904"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.884" endtime="20201112 09:43:13.905"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.880" endtime="20201112 09:43:13.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.516" endtime="20201112 09:43:13.906"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.515" endtime="20201112 09:43:13.906"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.915" endtime="20201112 09:43:13.929"></status>
</kw>
<msg timestamp="20201112 09:43:13.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.913" endtime="20201112 09:43:13.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:13.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:13.931" endtime="20201112 09:43:13.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.933" endtime="20201112 09:43:13.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.910" endtime="20201112 09:43:13.936"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.908" endtime="20201112 09:43:13.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:13.943" endtime="20201112 09:43:14.229"></status>
</kw>
<msg timestamp="20201112 09:43:14.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:13.942" endtime="20201112 09:43:14.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021751903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.233" endtime="20201112 09:43:14.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.241" endtime="20201112 09:43:14.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.939" endtime="20201112 09:43:14.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.937" endtime="20201112 09:43:14.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.248" level="INFO">${RESULT} = [{'time': 0.021751903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.109700000000117e-05, 'source_diff': 2.109700000000117e-05}, {'time': 0.021774653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:14.245" endtime="20201112 09:43:14.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.261" level="INFO">${ACCURACY} = {'time': [0.021751903, 0.021774653, 0.021796931, 0.021819917, 0.021842736, 0.021865639, 0.021887694, 0.021909653, 0.021932722, 0.021954944, 0.02197775, 0.02200075, 0.022022875, 0.022045944, 0.02206877...</msg>
<status status="PASS" starttime="20201112 09:43:14.249" endtime="20201112 09:43:14.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.266" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.265" endtime="20201112 09:43:14.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.268" level="INFO">VALUE: [2.109700000000117e-05, 2.093100000000181e-05, 2.094499999999791e-05, 2.1306000000002184e-05, 2.130500000000271e-05, 2.1319999999998285e-05, 2.059700000000067e-05, 2.059700000000067e-05, 2.133300000000185e-05, 2.0958000000001475e-05, 2.088899999999963e-05, 2.1305999999998715e-05, 2.059700000000067e-05, 2.12770000000001e-05, 2.134700000000142e-05, 2.1291999999999145e-05, 2.061100000000024e-05, 2.097299999999705e-05, 2.061100000000024e-05, 2.059700000000067e-05, 2.0598000000000144e-05, 2.062499999999981e-05, 2.136100000000099e-05, 2.133299999999838e-05, 2.131900000000228e-05, 2.130499999999924e-05, 2.061100000000024e-05, 2.136100000000099e-05, 2.05969999999972e-05, 2.061100000000024e-05, 2.131900000000228e-05, 2.133300000000185e-05, 2.059700000000067e-05, 2.137500000000056e-05, 2.133299999999838e-05, 2.061100000000024e-05, 2.061100000000024e-05, 2.1348000000000894e-05, 2.1306000000002184e-05, 2.1305999999998715e-05, 2.137500000000056e-05, 2.063899999999938e-05, 2.0944000000001906e-05, 2.05969999999972e-05, 2.062499999999981e-05, 2.102699999999985e-05, 2.059700000000067e-05, 2.137500000000056e-05, 2.059700000000067e-05, 2.061100000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.267" endtime="20201112 09:43:14.269"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.262" endtime="20201112 09:43:14.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.272" endtime="20201112 09:43:14.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.275" endtime="20201112 09:43:14.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.274" endtime="20201112 09:43:14.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.270" endtime="20201112 09:43:14.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.907" endtime="20201112 09:43:14.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:13.906" endtime="20201112 09:43:14.296"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.305" endtime="20201112 09:43:14.320"></status>
</kw>
<msg timestamp="20201112 09:43:14.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.303" endtime="20201112 09:43:14.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.322" endtime="20201112 09:43:14.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.324" endtime="20201112 09:43:14.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.301" endtime="20201112 09:43:14.327"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.299" endtime="20201112 09:43:14.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.334" endtime="20201112 09:43:14.620"></status>
</kw>
<msg timestamp="20201112 09:43:14.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.333" endtime="20201112 09:43:14.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021713528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021735667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:14.624" endtime="20201112 09:43:14.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.632" endtime="20201112 09:43:14.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.330" endtime="20201112 09:43:14.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.328" endtime="20201112 09:43:14.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:14.639" level="INFO">${RESULT} = [{'time': 0.021735667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.213900000000088e-05, 'source_diff': 2.213900000000088e-05}, {'time': 0.021759361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:14.636" endtime="20201112 09:43:14.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:14.652" level="INFO">${ACCURACY} = {'time': [0.021735667, 0.021759361, 0.021783569, 0.021806694, 0.021830597, 0.021854431, 0.021877528, 0.021901472, 0.021925653, 0.021948639, 0.021972542, 0.021995375, 0.022018611, 0.022041625, 0.022064...</msg>
<status status="PASS" starttime="20201112 09:43:14.640" endtime="20201112 09:43:14.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.657" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:14.656" endtime="20201112 09:43:14.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.659" level="INFO">VALUE: [2.213900000000088e-05, 2.2028000000000325e-05, 2.233299999999938e-05, 2.1666000000000046e-05, 2.24030000000007e-05, 2.2028000000000325e-05, 2.169499999999866e-05, 2.238900000000113e-05, 2.237499999999809e-05, 2.166699999999952e-05, 2.241700000000027e-05, 2.1306000000002184e-05, 2.1679999999999616e-05, 2.166699999999952e-05, 2.168099999999909e-05, 2.237500000000156e-05, 2.168100000000256e-05, 2.2320000000002754e-05, 2.2055999999999465e-05, 2.165299999999995e-05, 2.1666000000000046e-05, 2.240299999999723e-05, 2.1679999999999616e-05, 2.233299999999938e-05, 2.1679999999999616e-05, 2.168100000000256e-05, 2.1679999999999616e-05, 2.241700000000027e-05, 2.238900000000113e-05, 2.165299999999995e-05, 2.240299999999723e-05, 2.238900000000113e-05, 2.2458000000002976e-05, 2.1680000000003086e-05, 2.166700000000299e-05, 2.1305999999998715e-05, 2.205499999999999e-05, 2.2028000000000325e-05, 2.166699999999952e-05, 2.247300000000202e-05, 2.1750000000000935e-05, 2.168099999999909e-05, 2.168099999999909e-05, 2.238899999999766e-05, 2.1334000000001324e-05, 2.166699999999952e-05, 2.24030000000007e-05, 2.24030000000007e-05, 2.236099999999852e-05, 2.2028000000000325e-05]</msg>
<status status="PASS" starttime="20201112 09:43:14.658" endtime="20201112 09:43:14.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.653" endtime="20201112 09:43:14.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.663" endtime="20201112 09:43:14.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:14.666" endtime="20201112 09:43:14.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.665" endtime="20201112 09:43:14.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.661" endtime="20201112 09:43:14.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.297" endtime="20201112 09:43:14.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.297" endtime="20201112 09:43:14.687"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.696" endtime="20201112 09:43:14.711"></status>
</kw>
<msg timestamp="20201112 09:43:14.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.694" endtime="20201112 09:43:14.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:14.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:14.712" endtime="20201112 09:43:14.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.715" endtime="20201112 09:43:14.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.692" endtime="20201112 09:43:14.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.690" endtime="20201112 09:43:14.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:14.725" endtime="20201112 09:43:15.011"></status>
</kw>
<msg timestamp="20201112 09:43:15.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:14.723" endtime="20201112 09:43:15.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022068167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022091, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:15.015" endtime="20201112 09:43:15.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.024" endtime="20201112 09:43:15.025"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.721" endtime="20201112 09:43:15.026"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.719" endtime="20201112 09:43:15.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.030" level="INFO">${RESULT} = [{'time': 0.022091, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.283299999999988e-05, 'source_diff': 2.283299999999988e-05}, {'time': 0.022115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2...</msg>
<status status="PASS" starttime="20201112 09:43:15.027" endtime="20201112 09:43:15.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.045" level="INFO">${ACCURACY} = {'time': [0.022091, 0.022115, 0.022138944, 0.022163042, 0.022188, 0.022212167, 0.022236208, 0.022261278, 0.022285986, 0.02231025, 0.022334319, 0.022359208, 0.022384319, 0.022409042, 0.022433056, 0.022...</msg>
<status status="PASS" starttime="20201112 09:43:15.031" endtime="20201112 09:43:15.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.049" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.048" endtime="20201112 09:43:15.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.052" level="INFO">VALUE: [2.283299999999988e-05, 2.24030000000007e-05, 2.2388000000001657e-05, 2.2736000000002365e-05, 2.313899999999841e-05, 2.2750000000001935e-05, 2.2735999999998896e-05, 2.345899999999998e-05, 2.311099999999927e-05, 2.2764000000001505e-05, 2.2762999999998562e-05, 2.3457999999997037e-05, 2.3472000000000076e-05, 2.311099999999927e-05, 2.238900000000113e-05, 2.238900000000113e-05, 2.3458000000000506e-05, 2.30969999999997e-05, 2.2750000000001935e-05, 2.311099999999927e-05, 2.3485999999999646e-05, 2.313900000000188e-05, 2.2763999999998036e-05, 2.3499999999999216e-05, 2.3457999999997037e-05, 2.2806000000000215e-05, 2.3458000000000506e-05, 2.3083999999999605e-05, 2.311100000000274e-05, 2.241700000000027e-05, 2.2764000000001505e-05, 2.344500000000041e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.2735999999998896e-05, 2.308300000000013e-05, 2.347299999999955e-05, 2.312499999999884e-05, 2.3458000000000506e-05, 2.24030000000007e-05, 2.2721999999999326e-05, 2.3444000000000936e-05, 2.3472000000000076e-05, 2.2387999999998187e-05, 2.237499999999809e-05, 2.2736000000002365e-05, 2.30969999999997e-05, 2.3458000000000506e-05, 2.2764000000001505e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.050" endtime="20201112 09:43:15.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.046" endtime="20201112 09:43:15.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.055" endtime="20201112 09:43:15.057"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.059" endtime="20201112 09:43:15.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.057" endtime="20201112 09:43:15.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.054" endtime="20201112 09:43:15.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.688" endtime="20201112 09:43:15.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:14.688" endtime="20201112 09:43:15.080"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.088" endtime="20201112 09:43:15.103"></status>
</kw>
<msg timestamp="20201112 09:43:15.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.087" endtime="20201112 09:43:15.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.105" endtime="20201112 09:43:15.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.107" endtime="20201112 09:43:15.110"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.084" endtime="20201112 09:43:15.111"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.082" endtime="20201112 09:43:15.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.117" endtime="20201112 09:43:15.401"></status>
</kw>
<msg timestamp="20201112 09:43:15.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.116" endtime="20201112 09:43:15.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021855653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.406" endtime="20201112 09:43:15.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.414" endtime="20201112 09:43:15.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.113" endtime="20201112 09:43:15.416"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.112" endtime="20201112 09:43:15.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.421" level="INFO">${RESULT} = [{'time': 0.021879597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3944000000001436e-05, 'source_diff': 2.3944000000001436e-05}, {'time': 0.021905514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:15.417" endtime="20201112 09:43:15.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.434" level="INFO">${ACCURACY} = {'time': [0.021879597, 0.021905514, 0.021930681, 0.021956625, 0.021982639, 0.022007458, 0.022032347, 0.022058625, 0.022084375, 0.022109361, 0.022134444, 0.022159472, 0.022184431, 0.022209472, 0.022235...</msg>
<status status="PASS" starttime="20201112 09:43:15.422" endtime="20201112 09:43:15.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.439" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.438" endtime="20201112 09:43:15.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.441" level="INFO">VALUE: [2.3944000000001436e-05, 2.384700000000045e-05, 2.3820000000000785e-05, 2.4541999999998926e-05, 2.419500000000116e-05, 2.3458000000000506e-05, 2.3458000000000506e-05, 2.4513999999999786e-05, 2.415299999999898e-05, 2.3458000000000506e-05, 2.3430000000001366e-05, 2.3458000000000506e-05, 2.341700000000127e-05, 2.3444000000000936e-05, 2.411100000000027e-05, 2.383300000000088e-05, 2.419500000000116e-05, 2.419500000000116e-05, 2.3472000000000076e-05, 2.3820000000000785e-05, 2.3457999999997037e-05, 2.3458000000000506e-05, 2.3818999999997842e-05, 2.445899999999751e-05, 2.4513999999999786e-05, 2.344500000000041e-05, 2.344499999999694e-05, 2.3806000000001215e-05, 2.4222000000000826e-05, 2.3500000000002685e-05, 2.3792000000001645e-05, 2.344500000000041e-05, 2.4166000000002547e-05, 2.418100000000159e-05, 2.381900000000131e-05, 2.418099999999812e-05, 2.4194000000001686e-05, 2.3458000000000506e-05, 2.4096999999997232e-05, 2.4541999999998926e-05, 2.4513999999999786e-05, 2.4527999999999356e-05, 2.415299999999898e-05, 2.4165999999999077e-05, 2.4527999999999356e-05, 2.3458000000000506e-05, 2.3472000000000076e-05, 2.3834000000000355e-05, 2.4570000000001535e-05, 2.3458000000000506e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.440" endtime="20201112 09:43:15.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.435" endtime="20201112 09:43:15.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.445" endtime="20201112 09:43:15.446"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.448" endtime="20201112 09:43:15.467"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.447" endtime="20201112 09:43:15.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.443" endtime="20201112 09:43:15.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.080" endtime="20201112 09:43:15.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.080" endtime="20201112 09:43:15.469"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.477" endtime="20201112 09:43:15.493"></status>
</kw>
<msg timestamp="20201112 09:43:15.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.476" endtime="20201112 09:43:15.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.494" endtime="20201112 09:43:15.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.497" endtime="20201112 09:43:15.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.473" endtime="20201112 09:43:15.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.471" endtime="20201112 09:43:15.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.507" endtime="20201112 09:43:15.793"></status>
</kw>
<msg timestamp="20201112 09:43:15.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.505" endtime="20201112 09:43:15.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021995486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.797" endtime="20201112 09:43:15.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.805" endtime="20201112 09:43:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.503" endtime="20201112 09:43:15.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.501" endtime="20201112 09:43:15.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:15.812" level="INFO">${RESULT} = [{'time': 0.021995486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.537500000000109e-05, 'source_diff': 2.537500000000109e-05}, {'time': 0.022022236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:15.809" endtime="20201112 09:43:15.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:15.825" level="INFO">${ACCURACY} = {'time': [0.021995486, 0.022022236, 0.022049222, 0.022075125, 0.02210125, 0.022128306, 0.022154236, 0.02218025, 0.022206278, 0.022233361, 0.022259181, 0.022285389, 0.022312444, 0.022339458, 0.02236625...</msg>
<status status="PASS" starttime="20201112 09:43:15.813" endtime="20201112 09:43:15.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.830" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:15.829" endtime="20201112 09:43:15.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.833" level="INFO">VALUE: [2.537500000000109e-05, 2.490299999999973e-05, 2.5264000000000536e-05, 2.4542000000002395e-05, 2.4527999999999356e-05, 2.523700000000087e-05, 2.4542000000002395e-05, 2.4527999999999356e-05, 2.4527999999999356e-05, 2.5222000000001826e-05, 2.4541999999998926e-05, 2.487500000000059e-05, 2.5236000000001396e-05, 2.5264000000000536e-05, 2.5236000000001396e-05, 2.5263999999997067e-05, 2.5250000000000966e-05, 2.5514000000000786e-05, 2.5250000000000966e-05, 2.5221999999998357e-05, 2.5236000000001396e-05, 2.4541999999998926e-05, 2.5304999999999772e-05, 2.4527999999999356e-05, 2.4527999999999356e-05, 2.4527999999999356e-05, 2.4500000000000216e-05, 2.488900000000016e-05, 2.4527999999999356e-05, 2.5249999999997497e-05, 2.4514000000003255e-05, 2.5236000000001396e-05, 2.5249999999997497e-05, 2.4568999999998592e-05, 2.5250000000000966e-05, 2.5207999999998787e-05, 2.5236000000001396e-05, 2.490299999999973e-05, 2.5263999999997067e-05, 2.4846999999997982e-05, 2.5250000000000966e-05, 2.5278000000000106e-05, 2.5250000000000966e-05, 2.5291999999999676e-05, 2.4527999999999356e-05, 2.5235999999997927e-05, 2.5236000000001396e-05, 2.5250000000000966e-05, 2.5250000000000966e-05, 2.4888000000000687e-05]</msg>
<status status="PASS" starttime="20201112 09:43:15.831" endtime="20201112 09:43:15.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.826" endtime="20201112 09:43:15.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.837" endtime="20201112 09:43:15.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:15.841" endtime="20201112 09:43:15.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.839" endtime="20201112 09:43:15.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.835" endtime="20201112 09:43:15.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.470" endtime="20201112 09:43:15.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.469" endtime="20201112 09:43:15.862"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.870" endtime="20201112 09:43:15.886"></status>
</kw>
<msg timestamp="20201112 09:43:15.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.869" endtime="20201112 09:43:15.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:15.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:15.887" endtime="20201112 09:43:15.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.890" endtime="20201112 09:43:15.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.866" endtime="20201112 09:43:15.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.864" endtime="20201112 09:43:15.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:15.900" endtime="20201112 09:43:16.186"></status>
</kw>
<msg timestamp="20201112 09:43:16.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:15.899" endtime="20201112 09:43:16.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022265903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.190" endtime="20201112 09:43:16.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.199" endtime="20201112 09:43:16.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.896" endtime="20201112 09:43:16.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.894" endtime="20201112 09:43:16.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.206" level="INFO">${RESULT} = [{'time': 0.022292319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6416000000001327e-05, 'source_diff': 2.6416000000001327e-05}, {'time': 0.022320167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:16.202" endtime="20201112 09:43:16.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.219" level="INFO">${ACCURACY} = {'time': [0.022292319, 0.022320167, 0.022348208, 0.022376306, 0.022404431, 0.022432486, 0.022460403, 0.022487278, 0.022514333, 0.022542375, 0.022569222, 0.022597431, 0.022625222, 0.022652458, 0.022680...</msg>
<status status="PASS" starttime="20201112 09:43:16.207" endtime="20201112 09:43:16.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.223" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.222" endtime="20201112 09:43:16.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.226" level="INFO">VALUE: [2.6416000000001327e-05, 2.6305999999996776e-05, 2.5972000000002576e-05, 2.6319999999999816e-05, 2.6319999999999816e-05, 2.6319000000000342e-05, 2.6374999999998622e-05, 2.5624999999997872e-05, 2.5514000000000786e-05, 2.6319000000000342e-05, 2.5610999999998302e-05, 2.6348000000002425e-05, 2.6305000000000772e-05, 2.5943999999999967e-05, 2.6320000000003285e-05, 2.6236000000002396e-05, 2.6292000000000676e-05, 2.5582999999999162e-05, 2.5596999999998732e-05, 2.6319000000000342e-05, 2.5611999999997775e-05, 2.5555000000000022e-05, 2.6306000000000246e-05, 2.6306000000000246e-05, 2.55970000000022e-05, 2.6305000000000772e-05, 2.6319999999999816e-05, 2.558300000000263e-05, 2.6249999999998497e-05, 2.6306000000000246e-05, 2.6332999999999912e-05, 2.5596999999998732e-05, 2.6332999999999912e-05, 2.561100000000177e-05, 2.6319000000000342e-05, 2.5582999999999162e-05, 2.6250000000001966e-05, 2.6305000000000772e-05, 2.55970000000022e-05, 2.5583999999998636e-05, 2.55970000000022e-05, 2.640299999999776e-05, 2.563899999999744e-05, 2.6319999999999816e-05, 2.6291999999997206e-05, 2.6264000000001536e-05, 2.6319999999999816e-05, 2.6332999999999912e-05, 2.5596999999998732e-05, 2.6263999999998067e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.225" endtime="20201112 09:43:16.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.220" endtime="20201112 09:43:16.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.230" endtime="20201112 09:43:16.231"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.233" endtime="20201112 09:43:16.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.232" endtime="20201112 09:43:16.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.228" endtime="20201112 09:43:16.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.863" endtime="20201112 09:43:16.254"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:15.862" endtime="20201112 09:43:16.254"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.262" endtime="20201112 09:43:16.278"></status>
</kw>
<msg timestamp="20201112 09:43:16.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.261" endtime="20201112 09:43:16.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.279" endtime="20201112 09:43:16.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.282" endtime="20201112 09:43:16.284"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.258" endtime="20201112 09:43:16.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.256" endtime="20201112 09:43:16.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.292" endtime="20201112 09:43:16.576"></status>
</kw>
<msg timestamp="20201112 09:43:16.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.290" endtime="20201112 09:43:16.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021650931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.581" endtime="20201112 09:43:16.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.589" endtime="20201112 09:43:16.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.288" endtime="20201112 09:43:16.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.286" endtime="20201112 09:43:16.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.596" level="INFO">${RESULT} = [{'time': 0.021678444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7512999999999843e-05, 'source_diff': 2.7512999999999843e-05}, {'time': 0.021707319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:16.592" endtime="20201112 09:43:16.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:16.610" level="INFO">${ACCURACY} = {'time': [0.021678444, 0.021707319, 0.021736458, 0.021765208, 0.021794278, 0.021822472, 0.021851389, 0.021879347, 0.021908278, 0.021937306, 0.021965181, 0.021994264, 0.022022417, 0.022050292, 0.022079...</msg>
<status status="PASS" starttime="20201112 09:43:16.596" endtime="20201112 09:43:16.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.614" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:16.613" endtime="20201112 09:43:16.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.617" level="INFO">VALUE: [2.7512999999999843e-05, 2.6958000000000537e-05, 2.7361000000000052e-05, 2.7041000000001952e-05, 2.7374999999999622e-05, 2.665299999999801e-05, 2.7361000000000052e-05, 2.6680000000001147e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.6319999999999816e-05, 2.740299999999876e-05, 2.6749999999998997e-05, 2.668100000000062e-05, 2.743100000000137e-05, 2.7374999999999622e-05, 2.7042000000001426e-05, 2.666700000000105e-05, 2.7387999999999718e-05, 2.7374999999999622e-05, 2.7361000000000052e-05, 2.7041999999997957e-05, 2.6680000000001147e-05, 2.668100000000062e-05, 2.666700000000105e-05, 2.665300000000148e-05, 2.7374999999999622e-05, 2.7347999999999956e-05, 2.7374999999999622e-05, 2.7388999999999192e-05, 2.666700000000105e-05, 2.666700000000105e-05, 2.7388999999999192e-05, 2.7387999999999718e-05, 2.666699999999758e-05, 2.7374999999999622e-05, 2.7027999999998387e-05, 2.6680000000001147e-05, 2.6610999999999302e-05, 2.7014000000002286e-05, 2.6638999999998442e-05, 2.6721999999999857e-05, 2.666700000000105e-05, 2.743100000000137e-05, 2.6582999999996693e-05, 2.7388999999999192e-05, 2.7387999999999718e-05, 2.7374999999999622e-05, 2.740300000000223e-05, 2.6666000000001577e-05]</msg>
<status status="PASS" starttime="20201112 09:43:16.615" endtime="20201112 09:43:16.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.611" endtime="20201112 09:43:16.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.627" endtime="20201112 09:43:16.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:16.631" endtime="20201112 09:43:16.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.629" endtime="20201112 09:43:16.650"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.625" endtime="20201112 09:43:16.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.255" endtime="20201112 09:43:16.651"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.254" endtime="20201112 09:43:16.651"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.660" endtime="20201112 09:43:16.674"></status>
</kw>
<msg timestamp="20201112 09:43:16.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.658" endtime="20201112 09:43:16.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:16.676" endtime="20201112 09:43:16.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.678" endtime="20201112 09:43:16.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.656" endtime="20201112 09:43:16.681"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.654" endtime="20201112 09:43:16.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.688" endtime="20201112 09:43:16.973"></status>
</kw>
<msg timestamp="20201112 09:43:16.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.687" endtime="20201112 09:43:16.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:16.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021837292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021865167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:16.978" endtime="20201112 09:43:16.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:16.986" endtime="20201112 09:43:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.684" endtime="20201112 09:43:16.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.683" endtime="20201112 09:43:16.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:16.993" level="INFO">${RESULT} = [{'time': 0.021865167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7875000000000122e-05, 'source_diff': 2.7875000000000122e-05}, {'time': 0.021895222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:16.989" endtime="20201112 09:43:16.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.006" level="INFO">${ACCURACY} = {'time': [0.021865167, 0.021895222, 0.021925056, 0.021954264, 0.021984333, 0.022014278, 0.022044208, 0.022074236, 0.022104208, 0.022134264, 0.022164139, 0.022194347, 0.022224236, 0.022254167, 0.022284...</msg>
<status status="PASS" starttime="20201112 09:43:16.994" endtime="20201112 09:43:17.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.011" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.010" endtime="20201112 09:43:17.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.013" level="INFO">VALUE: [2.7875000000000122e-05, 2.8082999999998193e-05, 2.8111999999996806e-05, 2.7736000000000427e-05, 2.8444000000002467e-05, 2.845900000000151e-05, 2.8457999999998568e-05, 2.841699999999933e-05, 2.8472000000001607e-05, 2.844500000000194e-05, 2.8041999999998957e-05, 2.8443999999998998e-05, 2.8430000000002897e-05, 2.8110999999997333e-05, 2.8443999999998998e-05, 2.8110999999997333e-05, 2.7749999999999997e-05, 2.844499999999847e-05, 2.8084000000001136e-05, 2.8138000000000468e-05, 2.848699999999718e-05, 2.8415999999999858e-05, 2.7736000000000427e-05, 2.8097000000001232e-05, 2.8362000000000526e-05, 2.8041000000002952e-05, 2.7735999999996958e-05, 2.8458000000002037e-05, 2.84309999999989e-05, 2.8082999999998193e-05, 2.8443999999998998e-05, 2.845899999999804e-05, 2.84309999999989e-05, 2.8458000000002037e-05, 2.8429999999999428e-05, 2.7361000000000052e-05, 2.7763999999999567e-05, 2.8472000000001607e-05, 2.8499999999997278e-05, 2.8097000000001232e-05, 2.844499999999847e-05, 2.7374999999999622e-05, 2.847300000000108e-05, 2.8443999999998998e-05, 2.8443999999998998e-05, 2.8443999999998998e-05, 2.8082999999998193e-05, 2.7736000000000427e-05, 2.7347000000000482e-05, 2.7736000000000427e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.012" endtime="20201112 09:43:17.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.007" endtime="20201112 09:43:17.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.017" endtime="20201112 09:43:17.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.020" endtime="20201112 09:43:17.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.019" endtime="20201112 09:43:17.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.015" endtime="20201112 09:43:17.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.652" endtime="20201112 09:43:17.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:16.652" endtime="20201112 09:43:17.041"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.050" endtime="20201112 09:43:17.065"></status>
</kw>
<msg timestamp="20201112 09:43:17.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.048" endtime="20201112 09:43:17.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.066" endtime="20201112 09:43:17.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.069" endtime="20201112 09:43:17.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.046" endtime="20201112 09:43:17.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.043" endtime="20201112 09:43:17.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.079" endtime="20201112 09:43:17.363"></status>
</kw>
<msg timestamp="20201112 09:43:17.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:17.077" endtime="20201112 09:43:17.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021775125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02180475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:17.368" endtime="20201112 09:43:17.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.376" endtime="20201112 09:43:17.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.075" endtime="20201112 09:43:17.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.073" endtime="20201112 09:43:17.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.383" level="INFO">${RESULT} = [{'time': 0.02180475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9625000000001872e-05, 'source_diff': 2.9625000000001872e-05}, {'time': 0.02183575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.379" endtime="20201112 09:43:17.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.396" level="INFO">${ACCURACY} = {'time': [0.02180475, 0.02183575, 0.021866639, 0.021896611, 0.021926667, 0.021957806, 0.021988722, 0.022019514, 0.022050833, 0.022081514, 0.02211175, 0.022142819, 0.022173708, 0.022203542, 0.022233583...</msg>
<status status="PASS" starttime="20201112 09:43:17.384" endtime="20201112 09:43:17.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.401" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.400" endtime="20201112 09:43:17.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.403" level="INFO">VALUE: [2.9625000000001872e-05, 2.9153000000000512e-05, 2.9167000000000082e-05, 2.8443999999998998e-05, 2.8805999999999277e-05, 2.9528000000000887e-05, 2.9527999999997417e-05, 2.918099999999965e-05, 2.9526999999997944e-05, 2.9153000000000512e-05, 2.8805999999999277e-05, 2.9597000000002732e-05, 2.9166000000000608e-05, 2.844499999999847e-05, 2.8430000000002897e-05, 2.843100000000237e-05, 2.8444000000002467e-05, 2.8818999999999373e-05, 2.9167000000000082e-05, 2.9528000000000887e-05, 2.9527999999997417e-05, 2.9153000000000512e-05, 2.8832999999998943e-05, 2.9556000000000027e-05, 2.916599999999714e-05, 2.9514000000001317e-05, 2.920899999999879e-05, 2.9556000000000027e-05, 2.9110999999998333e-05, 2.8443999999998998e-05, 2.9443999999999998e-05, 2.9152999999997042e-05, 2.9152999999997042e-05, 2.9153000000000512e-05, 2.845899999999804e-05, 2.845900000000151e-05, 2.8457999999998568e-05, 2.9542000000000457e-05, 2.9526999999997944e-05, 2.9111000000001802e-05, 2.8846999999998513e-05, 2.9207999999999318e-05, 2.8778000000000137e-05, 2.8833999999998416e-05, 2.9527999999997417e-05, 2.9167000000000082e-05, 2.9514000000001317e-05, 2.9153000000000512e-05, 2.8791999999999707e-05, 2.919499999999922e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.402" endtime="20201112 09:43:17.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.397" endtime="20201112 09:43:17.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.407" endtime="20201112 09:43:17.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.410" endtime="20201112 09:43:17.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.409" endtime="20201112 09:43:17.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.405" endtime="20201112 09:43:17.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.042" endtime="20201112 09:43:17.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.041" endtime="20201112 09:43:17.431"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.440" endtime="20201112 09:43:17.455"></status>
</kw>
<msg timestamp="20201112 09:43:17.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.438" endtime="20201112 09:43:17.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.456" endtime="20201112 09:43:17.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.459" endtime="20201112 09:43:17.461"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.436" endtime="20201112 09:43:17.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.434" endtime="20201112 09:43:17.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.469" endtime="20201112 09:43:17.756"></status>
</kw>
<msg timestamp="20201112 09:43:17.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.467" endtime="20201112 09:43:17.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022101181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.760" endtime="20201112 09:43:17.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.769" endtime="20201112 09:43:17.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.465" endtime="20201112 09:43:17.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.463" endtime="20201112 09:43:17.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:17.775" level="INFO">${RESULT} = [{'time': 0.022131889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.070799999999735e-05, 'source_diff': 3.070799999999735e-05}, {'time': 0.022163792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:17.772" endtime="20201112 09:43:17.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:17.789" level="INFO">${ACCURACY} = {'time': [0.022131889, 0.022163792, 0.022194861, 0.022226069, 0.022256833, 0.022288806, 0.022320722, 0.022352764, 0.022383917, 0.02241575, 0.022447764, 0.022479764, 0.022511028, 0.022543, 0.022573931,...</msg>
<status status="PASS" starttime="20201112 09:43:17.776" endtime="20201112 09:43:17.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.793" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:17.792" endtime="20201112 09:43:17.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.796" level="INFO">VALUE: [3.070799999999735e-05, 3.022300000000283e-05, 2.9528000000000887e-05, 2.9902000000001788e-05, 2.9514000000001317e-05, 3.02370000000024e-05, 3.0235999999999458e-05, 3.0235999999999458e-05, 2.9888999999998223e-05, 3.0250000000002497e-05, 3.0235999999999458e-05, 3.0221999999999888e-05, 2.9888999999998223e-05, 3.0235999999999458e-05, 2.9527999999997417e-05, 2.9514000000001317e-05, 3.0221999999999888e-05, 2.9542000000000457e-05, 3.0584000000000167e-05, 3.0263999999998598e-05, 3.0305000000001303e-05, 3.0236000000002927e-05, 2.9514000000001317e-05, 2.9528000000000887e-05, 3.058300000000069e-05, 3.0236000000002927e-05, 3.0249999999999028e-05, 2.9499999999998278e-05, 3.0263000000002593e-05, 3.0235999999999458e-05, 2.9528000000000887e-05, 2.9528000000000887e-05, 2.9861000000002552e-05, 3.020899999999979e-05, 2.9513999999997848e-05, 3.0249999999999028e-05, 3.058300000000069e-05, 3.0235999999999458e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.0235999999999458e-05, 3.061099999999983e-05, 3.0249999999999028e-05, 2.9513999999997848e-05, 3.059700000000026e-05, 3.0250000000002497e-05, 3.0235999999999458e-05, 2.9874999999998653e-05, 2.9874999999998653e-05, 3.0236000000002927e-05]</msg>
<status status="PASS" starttime="20201112 09:43:17.794" endtime="20201112 09:43:17.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.790" endtime="20201112 09:43:17.797"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.799" endtime="20201112 09:43:17.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:17.803" endtime="20201112 09:43:17.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.801" endtime="20201112 09:43:17.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.798" endtime="20201112 09:43:17.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.432" endtime="20201112 09:43:17.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.431" endtime="20201112 09:43:17.824"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.832" endtime="20201112 09:43:17.848"></status>
</kw>
<msg timestamp="20201112 09:43:17.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.831" endtime="20201112 09:43:17.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:17.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:17.849" endtime="20201112 09:43:17.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.852" endtime="20201112 09:43:17.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.828" endtime="20201112 09:43:17.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.826" endtime="20201112 09:43:17.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:17.862" endtime="20201112 09:43:18.148"></status>
</kw>
<msg timestamp="20201112 09:43:18.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:17.860" endtime="20201112 09:43:18.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021675639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021710056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.152" endtime="20201112 09:43:18.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.161" endtime="20201112 09:43:18.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.858" endtime="20201112 09:43:18.163"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.856" endtime="20201112 09:43:18.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.167" level="INFO">${RESULT} = [{'time': 0.021710056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.441699999999839e-05, 'source_diff': 3.441699999999839e-05}, {'time': 0.021748681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:18.164" endtime="20201112 09:43:18.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.182" level="INFO">${ACCURACY} = {'time': [0.021710056, 0.021748681, 0.021786681, 0.021824681, 0.021862694, 0.021900694, 0.021938694, 0.021975694, 0.022013694, 0.022051708, 0.022089708, 0.022127708, 0.022164722, 0.022201708, 0.022238...</msg>
<status status="PASS" starttime="20201112 09:43:18.168" endtime="20201112 09:43:18.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.187" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.185" endtime="20201112 09:43:18.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.189" level="INFO">VALUE: [3.441699999999839e-05, 3.348699999999871e-05, 3.397299999999964e-05, 3.380599999999734e-05, 3.395799999999713e-05, 3.366599999999817e-05, 3.39580000000006e-05, 3.318000000000071e-05, 3.3791000000001764e-05, 3.3833000000000474e-05, 3.3596999999999794e-05, 3.370800000000035e-05, 3.315300000000104e-05, 3.3069000000000154e-05, 3.319400000000028e-05, 3.3596999999999794e-05, 3.390299999999832e-05, 3.302800000000092e-05, 3.3833000000000474e-05, 3.3833000000000474e-05, 3.3069000000000154e-05, 3.369399999999731e-05, 3.311100000000233e-05, 3.402800000000192e-05, 3.3638999999998503e-05, 3.3096999999999294e-05, 3.3624999999998934e-05, 3.368100000000068e-05, 3.3888999999998753e-05, 3.3847000000000044e-05, 3.368100000000068e-05, 3.380600000000081e-05, 3.399999999999931e-05, 3.3860999999999614e-05, 3.374999999999906e-05, 3.398599999999974e-05, 3.398599999999974e-05, 3.390299999999832e-05, 3.379199999999777e-05, 3.316700000000061e-05, 3.404199999999802e-05, 3.402800000000192e-05, 3.3110999999998864e-05, 3.368100000000068e-05, 3.366700000000111e-05, 3.372299999999939e-05, 3.373699999999896e-05, 3.365299999999807e-05, 3.3624999999998934e-05, 3.4069000000001154e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.188" endtime="20201112 09:43:18.190"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.183" endtime="20201112 09:43:18.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.193" endtime="20201112 09:43:18.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.196" endtime="20201112 09:43:18.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.194" endtime="20201112 09:43:18.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.191" endtime="20201112 09:43:18.216"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.824" endtime="20201112 09:43:18.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:17.824" endtime="20201112 09:43:18.217"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.225" endtime="20201112 09:43:18.241"></status>
</kw>
<msg timestamp="20201112 09:43:18.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.224" endtime="20201112 09:43:18.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.243" endtime="20201112 09:43:18.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.245" endtime="20201112 09:43:18.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.221" endtime="20201112 09:43:18.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.219" endtime="20201112 09:43:18.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.255" endtime="20201112 09:43:18.541"></status>
</kw>
<msg timestamp="20201112 09:43:18.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.254" endtime="20201112 09:43:18.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022107431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.545" endtime="20201112 09:43:18.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.553" endtime="20201112 09:43:18.555"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.251" endtime="20201112 09:43:18.556"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.249" endtime="20201112 09:43:18.556"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.560" level="INFO">${RESULT} = [{'time': 0.022142861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.542999999999949e-05, 'source_diff': 3.542999999999949e-05}, {'time': 0.022182556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:18.557" endtime="20201112 09:43:18.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.573" level="INFO">${ACCURACY} = {'time': [0.022142861, 0.022182556, 0.0222215, 0.022260569, 0.0222995, 0.022337486, 0.0223755, 0.022414528, 0.0224525, 0.0224915, 0.0225295, 0.022568514, 0.022606528, 0.022645514, 0.022684542, 0.02272...</msg>
<status status="PASS" starttime="20201112 09:43:18.561" endtime="20201112 09:43:18.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.578" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.577" endtime="20201112 09:43:18.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.580" level="INFO">VALUE: [3.542999999999949e-05, 3.501399999999988e-05, 3.49580000000016e-05, 3.472200000000092e-05, 3.504199999999902e-05, 3.4124999999999434e-05, 3.4138999999999003e-05, 3.4624999999999934e-05, 3.4069000000001154e-05, 3.494400000000203e-05, 3.405600000000106e-05, 3.4888999999999754e-05, 3.407000000000063e-05, 3.470799999999788e-05, 3.497299999999717e-05, 3.466699999999864e-05, 3.416699999999814e-05, 3.497200000000117e-05, 3.461199999999984e-05, 3.47640000000031e-05, 3.497300000000064e-05, 3.4138999999999003e-05, 3.501399999999988e-05, 3.491699999999889e-05, 3.466600000000264e-05, 3.473600000000049e-05, 3.500000000000031e-05, 3.49450000000015e-05, 3.493100000000193e-05, 3.4846999999997574e-05, 3.46519999999996e-05, 3.423599999999999e-05, 3.4847000000001044e-05, 3.467999999999874e-05, 3.501399999999988e-05, 3.418000000000171e-05, 3.4110999999999864e-05, 3.4110999999999864e-05, 3.472200000000092e-05, 3.473599999999702e-05, 3.472199999999745e-05, 3.469399999999831e-05, 3.468000000000221e-05, 3.4833000000001474e-05, 3.466599999999917e-05, 3.4888999999999754e-05, 3.4902999999999323e-05, 3.418099999999771e-05, 3.497200000000117e-05, 3.501399999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.579" endtime="20201112 09:43:18.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.574" endtime="20201112 09:43:18.582"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.584" endtime="20201112 09:43:18.585"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.587" endtime="20201112 09:43:18.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.586" endtime="20201112 09:43:18.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.582" endtime="20201112 09:43:18.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.218" endtime="20201112 09:43:18.608"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.217" endtime="20201112 09:43:18.608"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.617" endtime="20201112 09:43:18.632"></status>
</kw>
<msg timestamp="20201112 09:43:18.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.615" endtime="20201112 09:43:18.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:18.634" endtime="20201112 09:43:18.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.636" endtime="20201112 09:43:18.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.613" endtime="20201112 09:43:18.639"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.611" endtime="20201112 09:43:18.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.646" endtime="20201112 09:43:18.932"></status>
</kw>
<msg timestamp="20201112 09:43:18.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.645" endtime="20201112 09:43:18.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021783847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021820292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:18.937" endtime="20201112 09:43:18.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.945" endtime="20201112 09:43:18.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.642" endtime="20201112 09:43:18.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.640" endtime="20201112 09:43:18.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:18.952" level="INFO">${RESULT} = [{'time': 0.021820292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6445000000003e-05, 'source_diff': 3.6445000000003e-05}, {'time': 0.021860861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3...</msg>
<status status="PASS" starttime="20201112 09:43:18.948" endtime="20201112 09:43:18.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:18.965" level="INFO">${ACCURACY} = {'time': [0.021820292, 0.021860861, 0.021899861, 0.021939875, 0.021979875, 0.022019875, 0.022059861, 0.022099875, 0.022139903, 0.022179931, 0.022218875, 0.022258917, 0.022298917, 0.022337889, 0.022377...</msg>
<status status="PASS" starttime="20201112 09:43:18.953" endtime="20201112 09:43:18.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.970" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:18.968" endtime="20201112 09:43:18.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:18.972" level="INFO">VALUE: [3.6445000000003e-05, 3.572199999999845e-05, 3.517999999999924e-05, 3.5653000000000074e-05, 3.5818999999999435e-05, 3.568100000000268e-05, 3.570799999999888e-05, 3.579199999999977e-05, 3.606999999999916e-05, 3.593099999999946e-05, 3.5082999999998254e-05, 3.593099999999946e-05, 3.597300000000164e-05, 3.5125000000000434e-05, 3.5875000000001184e-05, 3.581999999999891e-05, 3.601400000000088e-05, 3.595799999999913e-05, 3.597300000000164e-05, 3.5610999999997894e-05, 3.576400000000063e-05, 3.600000000000131e-05, 3.5152999999999573e-05, 3.504200000000249e-05, 3.505599999999859e-05, 3.600000000000131e-05, 3.516700000000261e-05, 3.594499999999903e-05, 3.598700000000121e-05, 3.588800000000128e-05, 3.569399999999931e-05, 3.568099999999921e-05, 3.5847000000002044e-05, 3.5875000000001184e-05, 3.598599999999827e-05, 3.51520000000001e-05, 3.590200000000085e-05, 3.5846999999998574e-05, 3.592999999999999e-05, 3.5152999999999573e-05, 3.5791000000000295e-05, 3.5069000000002154e-05, 3.5111000000000864e-05, 3.595799999999913e-05, 3.602800000000045e-05, 3.5791000000000295e-05, 3.580599999999934e-05, 3.575000000000106e-05, 3.5903000000000324e-05, 3.5625000000000934e-05]</msg>
<status status="PASS" starttime="20201112 09:43:18.971" endtime="20201112 09:43:18.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.966" endtime="20201112 09:43:18.973"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:18.976" endtime="20201112 09:43:18.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:18.979" endtime="20201112 09:43:18.998"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.977" endtime="20201112 09:43:18.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.974" endtime="20201112 09:43:18.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.609" endtime="20201112 09:43:19.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:18.609" endtime="20201112 09:43:19.000"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.008" endtime="20201112 09:43:19.023"></status>
</kw>
<msg timestamp="20201112 09:43:19.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.007" endtime="20201112 09:43:19.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.025" endtime="20201112 09:43:19.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.027" endtime="20201112 09:43:19.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.004" endtime="20201112 09:43:19.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.002" endtime="20201112 09:43:19.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.038" endtime="20201112 09:43:19.322"></status>
</kw>
<msg timestamp="20201112 09:43:19.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.036" endtime="20201112 09:43:19.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021793472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021830194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.327" endtime="20201112 09:43:19.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.335" endtime="20201112 09:43:19.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.033" endtime="20201112 09:43:19.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.032" endtime="20201112 09:43:19.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.342" level="INFO">${RESULT} = [{'time': 0.021830194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.672199999999945e-05, 'source_diff': 3.672199999999945e-05}, {'time': 0.021871833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:19.338" endtime="20201112 09:43:19.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.355" level="INFO">${ACCURACY} = {'time': [0.021830194, 0.021871833, 0.021911819, 0.021951819, 0.021992819, 0.022033819, 0.022074847, 0.022114861, 0.022155833, 0.022195833, 0.022235833, 0.022276861, 0.022316875, 0.022357847, 0.022398...</msg>
<status status="PASS" starttime="20201112 09:43:19.342" endtime="20201112 09:43:19.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.359" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.358" endtime="20201112 09:43:19.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.362" level="INFO">VALUE: [3.672199999999945e-05, 3.698599999999927e-05, 3.6124999999997964e-05, 3.6111000000001864e-05, 3.694400000000056e-05, 3.7026999999998506e-05, 3.7041000000001545e-05, 3.6124999999997964e-05, 3.6860999999999144e-05, 3.6111000000001864e-05, 3.6082999999999255e-05, 3.6833000000000005e-05, 3.6180999999999713e-05, 3.6555000000000615e-05, 3.701399999999841e-05, 3.701400000000188e-05, 3.6888999999998284e-05, 3.704200000000102e-05, 3.6167000000000143e-05, 3.695800000000013e-05, 3.681999999999991e-05, 3.694500000000003e-05, 3.680600000000034e-05, 3.6596999999999325e-05, 3.6931000000000463e-05, 3.673599999999902e-05, 3.702800000000145e-05, 3.6653000000001074e-05, 3.604200000000002e-05, 3.698599999999927e-05, 3.670899999999935e-05, 3.699999999999884e-05, 3.702800000000145e-05, 3.670900000000282e-05, 3.601399999999741e-05, 3.698600000000274e-05, 3.6903000000001324e-05, 3.700000000000231e-05, 3.6180999999999713e-05, 3.6875000000002184e-05, 3.672300000000239e-05, 3.6681000000000213e-05, 3.673699999999849e-05, 3.699999999999884e-05, 3.6776999999998256e-05, 3.666600000000117e-05, 3.616600000000067e-05, 3.702800000000145e-05, 3.694400000000056e-05, 3.6625000000001934e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.360" endtime="20201112 09:43:19.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.356" endtime="20201112 09:43:19.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.365" endtime="20201112 09:43:19.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.369" endtime="20201112 09:43:19.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.367" endtime="20201112 09:43:19.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.364" endtime="20201112 09:43:19.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.001" endtime="20201112 09:43:19.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.000" endtime="20201112 09:43:19.390"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.398" endtime="20201112 09:43:19.413"></status>
</kw>
<msg timestamp="20201112 09:43:19.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.397" endtime="20201112 09:43:19.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.415" endtime="20201112 09:43:19.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.417" endtime="20201112 09:43:19.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.394" endtime="20201112 09:43:19.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.392" endtime="20201112 09:43:19.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.427" endtime="20201112 09:43:19.712"></status>
</kw>
<msg timestamp="20201112 09:43:19.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.426" endtime="20201112 09:43:19.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021776722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.717" endtime="20201112 09:43:19.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.725" endtime="20201112 09:43:19.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.423" endtime="20201112 09:43:19.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.422" endtime="20201112 09:43:19.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:19.731" level="INFO">${RESULT} = [{'time': 0.021814778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.805600000000159e-05, 'source_diff': 3.805600000000159e-05}, {'time': 0.021857431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:19.728" endtime="20201112 09:43:19.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:19.746" level="INFO">${ACCURACY} = {'time': [0.021814778, 0.021857431, 0.021899417, 0.021940431, 0.021982431, 0.022024431, 0.022066431, 0.022107444, 0.022149458, 0.022191431, 0.022232431, 0.022274444, 0.022315458, 0.022357444, 0.022399...</msg>
<status status="PASS" starttime="20201112 09:43:19.732" endtime="20201112 09:43:19.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.751" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:19.750" endtime="20201112 09:43:19.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.753" level="INFO">VALUE: [3.805600000000159e-05, 3.7916999999998424e-05, 3.7931000000001464e-05, 3.720899999999985e-05, 3.7388999999998784e-05, 3.79590000000006e-05, 3.802800000000245e-05, 3.7069000000000685e-05, 3.7833000000001005e-05, 3.797300000000017e-05, 3.70979999999993e-05, 3.768000000000174e-05, 3.7069000000000685e-05, 3.773600000000002e-05, 3.766600000000217e-05, 3.788799999999981e-05, 3.791600000000242e-05, 3.7110999999999394e-05, 3.766600000000217e-05, 3.795800000000113e-05, 3.7861000000000145e-05, 3.795800000000113e-05, 3.7804999999998395e-05, 3.802800000000245e-05, 3.7167000000001144e-05, 3.719400000000081e-05, 3.7360999999999644e-05, 3.801400000000288e-05, 3.7903000000002324e-05, 3.7818999999997965e-05, 3.777799999999873e-05, 3.7680999999997744e-05, 3.7082999999996785e-05, 3.770799999999741e-05, 3.776399999999916e-05, 3.797199999999723e-05, 3.7833000000001005e-05, 3.772200000000045e-05, 3.7166999999997674e-05, 3.801399999999941e-05, 3.776399999999916e-05, 3.804199999999855e-05, 3.776399999999916e-05, 3.795800000000113e-05, 3.773699999999949e-05, 3.7667000000001644e-05, 3.715199999999863e-05, 3.7805000000001865e-05, 3.70979999999993e-05, 3.7110999999999394e-05]</msg>
<status status="PASS" starttime="20201112 09:43:19.752" endtime="20201112 09:43:19.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.747" endtime="20201112 09:43:19.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.757" endtime="20201112 09:43:19.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:19.760" endtime="20201112 09:43:19.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.758" endtime="20201112 09:43:19.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.755" endtime="20201112 09:43:19.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.391" endtime="20201112 09:43:19.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.390" endtime="20201112 09:43:19.781"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.789" endtime="20201112 09:43:19.805"></status>
</kw>
<msg timestamp="20201112 09:43:19.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.788" endtime="20201112 09:43:19.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:19.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:19.806" endtime="20201112 09:43:19.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.809" endtime="20201112 09:43:19.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.785" endtime="20201112 09:43:19.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.783" endtime="20201112 09:43:19.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:19.819" endtime="20201112 09:43:20.104"></status>
</kw>
<msg timestamp="20201112 09:43:20.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:19.817" endtime="20201112 09:43:20.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021750306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021789389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.108" endtime="20201112 09:43:20.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.117" endtime="20201112 09:43:20.118"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.815" endtime="20201112 09:43:20.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.813" endtime="20201112 09:43:20.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.123" level="INFO">${RESULT} = [{'time': 0.021789389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9082999999998785e-05, 'source_diff': 3.9082999999998785e-05}, {'time': 0.021833056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.120" endtime="20201112 09:43:20.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.137" level="INFO">${ACCURACY} = {'time': [0.021789389, 0.021833056, 0.021875028, 0.021917042, 0.021960056, 0.022003056, 0.022046042, 0.022089042, 0.022131069, 0.022174069, 0.022217056, 0.022260083, 0.022303083, 0.022346069, 0.022389...</msg>
<status status="PASS" starttime="20201112 09:43:20.124" endtime="20201112 09:43:20.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.141" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.140" endtime="20201112 09:43:20.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.144" level="INFO">VALUE: [3.9082999999998785e-05, 3.905599999999912e-05, 3.807000000000116e-05, 3.80980000000003e-05, 3.8722999999997454e-05, 3.8666999999999174e-05, 3.8930999999998994e-05, 3.876400000000016e-05, 3.815199999999963e-05, 3.872200000000145e-05, 3.8708999999997884e-05, 3.876400000000016e-05, 3.895800000000213e-05, 3.8790999999999826e-05, 3.895799999999866e-05, 3.872199999999798e-05, 3.8111000000000395e-05, 3.8068999999998215e-05, 3.86659999999997e-05, 3.900000000000084e-05, 3.8945000000002034e-05, 3.817999999999877e-05, 3.8083000000001255e-05, 3.8611000000000895e-05, 3.867999999999927e-05, 3.870800000000188e-05, 3.872199999999798e-05, 3.8666999999999174e-05, 3.8819000000002435e-05, 3.869399999999884e-05, 3.8902999999999854e-05, 3.8889000000000284e-05, 3.8083000000001255e-05, 3.8180999999998244e-05, 3.869399999999884e-05, 3.8666999999999174e-05, 3.8167000000002144e-05, 3.895799999999866e-05, 3.877799999999973e-05, 3.904200000000302e-05, 3.8611000000000895e-05, 3.8847000000001575e-05, 3.808400000000073e-05, 3.877799999999973e-05, 3.8902999999999854e-05, 3.8181000000001714e-05, 3.8709000000001353e-05, 3.884799999999758e-05, 3.8138999999999534e-05, 3.8902999999999854e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.142" endtime="20201112 09:43:20.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.138" endtime="20201112 09:43:20.145"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.147" endtime="20201112 09:43:20.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.151" endtime="20201112 09:43:20.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.149" endtime="20201112 09:43:20.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.146" endtime="20201112 09:43:20.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.782" endtime="20201112 09:43:20.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:19.781" endtime="20201112 09:43:20.172"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.180" endtime="20201112 09:43:20.197"></status>
</kw>
<msg timestamp="20201112 09:43:20.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.179" endtime="20201112 09:43:20.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.198" endtime="20201112 09:43:20.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.201" endtime="20201112 09:43:20.203"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.176" endtime="20201112 09:43:20.204"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.174" endtime="20201112 09:43:20.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.211" endtime="20201112 09:43:20.496"></status>
</kw>
<msg timestamp="20201112 09:43:20.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.209" endtime="20201112 09:43:20.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022220806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.500" endtime="20201112 09:43:20.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.509" endtime="20201112 09:43:20.510"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.207" endtime="20201112 09:43:20.511"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.205" endtime="20201112 09:43:20.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.515" level="INFO">${RESULT} = [{'time': 0.022220806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0417000000000924e-05, 'source_diff': 4.0417000000000924e-05}, {'time': 0.022265458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.512" endtime="20201112 09:43:20.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.529" level="INFO">${ACCURACY} = {'time': [0.022220806, 0.022265458, 0.022308417, 0.022352431, 0.022395431, 0.022439458, 0.022482431, 0.022526444, 0.022569444, 0.022613444, 0.022656444, 0.022699444, 0.022742472, 0.022786458, 0.022830...</msg>
<status status="PASS" starttime="20201112 09:43:20.516" endtime="20201112 09:43:20.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.533" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.532" endtime="20201112 09:43:20.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.536" level="INFO">VALUE: [4.0417000000000924e-05, 3.965199999999766e-05, 3.907000000000216e-05, 3.9680999999999744e-05, 3.906999999999869e-05, 4.0026999999998036e-05, 3.9180999999999244e-05, 3.9555000000000146e-05, 3.913800000000106e-05, 3.963800000000156e-05, 3.9111000000001395e-05, 3.913799999999759e-05, 3.9068999999999215e-05, 3.9610999999998425e-05, 3.9875000000001715e-05, 3.9639000000001035e-05, 3.999999999999837e-05, 3.9805000000000396e-05, 3.9639000000001035e-05, 3.9861000000002145e-05, 3.969399999999984e-05, 3.9082999999998785e-05, 3.9583000000002755e-05, 3.995799999999966e-05, 3.9680999999999744e-05, 3.9082999999998785e-05, 3.9860999999998675e-05, 3.970799999999941e-05, 3.97920000000003e-05, 3.9930999999999994e-05, 3.9653000000000604e-05, 3.9958999999999134e-05, 3.9652999999997135e-05, 3.9889000000001285e-05, 3.9680999999999744e-05, 3.99859999999988e-05, 3.997199999999923e-05, 3.983399999999901e-05, 3.9111000000001395e-05, 3.9124999999997495e-05, 3.911200000000087e-05, 3.9195000000002284e-05, 4.0069000000000216e-05, 3.9139000000000534e-05, 3.9054999999999646e-05, 3.9959000000002604e-05, 3.9832999999999535e-05, 3.919399999999934e-05, 3.9832999999999535e-05, 3.9860999999998675e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.534" endtime="20201112 09:43:20.537"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.530" endtime="20201112 09:43:20.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.539" endtime="20201112 09:43:20.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.543" endtime="20201112 09:43:20.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.541" endtime="20201112 09:43:20.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.538" endtime="20201112 09:43:20.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.172" endtime="20201112 09:43:20.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.172" endtime="20201112 09:43:20.564"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.572" endtime="20201112 09:43:20.588"></status>
</kw>
<msg timestamp="20201112 09:43:20.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.571" endtime="20201112 09:43:20.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.590" endtime="20201112 09:43:20.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.592" endtime="20201112 09:43:20.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.568" endtime="20201112 09:43:20.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.566" endtime="20201112 09:43:20.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.602" endtime="20201112 09:43:20.887"></status>
</kw>
<msg timestamp="20201112 09:43:20.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.601" endtime="20201112 09:43:20.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021930708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.891" endtime="20201112 09:43:20.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.900" endtime="20201112 09:43:20.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.598" endtime="20201112 09:43:20.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.597" endtime="20201112 09:43:20.902"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:20.907" level="INFO">${RESULT} = [{'time': 0.021971889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1181000000001244e-05, 'source_diff': 4.1181000000001244e-05}, {'time': 0.022017542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:20.903" endtime="20201112 09:43:20.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:20.921" level="INFO">${ACCURACY} = {'time': [0.021971889, 0.022017542, 0.022062528, 0.022107528, 0.022151514, 0.022196528, 0.022241514, 0.022286528, 0.022331528, 0.022376528, 0.022421528, 0.022466542, 0.022511542, 0.022556542, 0.022601...</msg>
<status status="PASS" starttime="20201112 09:43:20.908" endtime="20201112 09:43:20.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.925" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 09:43:20.924" endtime="20201112 09:43:20.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.928" level="INFO">VALUE: [4.1181000000001244e-05, 4.083400000000001e-05, 4.0917000000001424e-05, 4.0847000000000105e-05, 4.0139000000001535e-05, 4.0667000000001174e-05, 4.0610999999999425e-05, 4.072199999999998e-05, 4.09859999999998e-05, 4.0931000000000994e-05, 4.099999999999937e-05, 4.083400000000001e-05, 4.0860999999999675e-05, 4.0638999999998565e-05, 4.0972999999999704e-05, 4.0194999999999814e-05, 4.076399999999869e-05, 4.09859999999998e-05, 4.099999999999937e-05, 4.0818999999997496e-05, 4.094400000000109e-05, 4.018000000000077e-05, 4.0860999999999675e-05, 4.108400000000026e-05, 4.0931000000000994e-05, 4.097200000000023e-05, 4.0096999999999355e-05, 4.074999999999912e-05, 4.073599999999955e-05, 4.0624999999998995e-05, 4.073599999999955e-05, 4.09859999999998e-05, 4.072199999999998e-05, 4.077799999999826e-05, 4.101399999999894e-05, 4.0125000000001965e-05, 4.005600000000012e-05, 4.070800000000041e-05, 4.074999999999912e-05, 4.0138999999998065e-05, 4.073599999999955e-05, 4.072199999999998e-05, 4.094400000000109e-05, 4.0917000000001424e-05, 4.0931000000000994e-05, 4.0917000000001424e-05, 4.008399999999926e-05, 4.074999999999912e-05, 4.102799999999851e-05, 4.059799999999933e-05]</msg>
<status status="PASS" starttime="20201112 09:43:20.926" endtime="20201112 09:43:20.928"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.922" endtime="20201112 09:43:20.929"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.931" endtime="20201112 09:43:20.933"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:20.935" endtime="20201112 09:43:20.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.933" endtime="20201112 09:43:20.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.930" endtime="20201112 09:43:20.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.564" endtime="20201112 09:43:20.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.564" endtime="20201112 09:43:20.956"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.964" endtime="20201112 09:43:20.980"></status>
</kw>
<msg timestamp="20201112 09:43:20.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.963" endtime="20201112 09:43:20.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:20.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:20.981" endtime="20201112 09:43:20.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.984" endtime="20201112 09:43:20.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.960" endtime="20201112 09:43:20.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.958" endtime="20201112 09:43:20.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:20.994" endtime="20201112 09:43:21.278"></status>
</kw>
<msg timestamp="20201112 09:43:21.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:20.992" endtime="20201112 09:43:21.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021772167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021814264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.282" endtime="20201112 09:43:21.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.291" endtime="20201112 09:43:21.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.990" endtime="20201112 09:43:21.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.988" endtime="20201112 09:43:21.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.297" level="INFO">${RESULT} = [{'time': 0.021814264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2097000000001356e-05, 'source_diff': 4.2097000000001356e-05}, {'time': 0.021860917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:21.294" endtime="20201112 09:43:21.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.312" level="INFO">${ACCURACY} = {'time': [0.021814264, 0.021860917, 0.021906972, 0.021952903, 0.021998917, 0.022044917, 0.022089917, 0.022135931, 0.022181917, 0.022227986, 0.022272944, 0.022318944, 0.022364931, 0.022410944, 0.022456...</msg>
<status status="PASS" starttime="20201112 09:43:21.298" endtime="20201112 09:43:21.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.316" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.315" endtime="20201112 09:43:21.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.319" level="INFO">VALUE: [4.2097000000001356e-05, 4.1723000000000454e-05, 4.175000000000012e-05, 4.18059999999984e-05, 4.202799999999951e-05, 4.202799999999951e-05, 4.102800000000198e-05, 4.1667000000002175e-05, 4.1652999999999135e-05, 4.201399999999994e-05, 4.1124999999999495e-05, 4.1776999999999787e-05, 4.180600000000187e-05, 4.194399999999862e-05, 4.1790999999999356e-05, 4.170800000000141e-05, 4.1833000000001536e-05, 4.1097000000000355e-05, 4.191600000000295e-05, 4.170799999999794e-05, 4.1054999999998176e-05, 4.197199999999776e-05, 4.175000000000012e-05, 4.1152999999998635e-05, 4.175000000000012e-05, 4.1833000000001536e-05, 4.1666999999998705e-05, 4.179199999999883e-05, 4.1152999999998635e-05, 4.193000000000252e-05, 4.1833000000001536e-05, 4.197199999999776e-05, 4.1875000000000245e-05, 4.1083000000000786e-05, 4.195800000000166e-05, 4.198599999999733e-05, 4.1694999999997845e-05, 4.1846999999997636e-05, 4.1709000000000884e-05, 4.157000000000119e-05, 4.1167000000001674e-05, 4.1959000000001134e-05, 4.1695000000001314e-05, 4.1944999999998095e-05, 4.176399999999969e-05, 4.194399999999862e-05, 4.1847000000001106e-05, 4.165199999999966e-05, 4.1930999999998525e-05, 4.1945000000001564e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.317" endtime="20201112 09:43:21.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.313" endtime="20201112 09:43:21.320"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.322" endtime="20201112 09:43:21.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.326" endtime="20201112 09:43:21.345"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.324" endtime="20201112 09:43:21.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.321" endtime="20201112 09:43:21.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.957" endtime="20201112 09:43:21.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:20.956" endtime="20201112 09:43:21.347"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.355" endtime="20201112 09:43:21.372"></status>
</kw>
<msg timestamp="20201112 09:43:21.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.354" endtime="20201112 09:43:21.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.373" endtime="20201112 09:43:21.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.376" endtime="20201112 09:43:21.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.351" endtime="20201112 09:43:21.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.349" endtime="20201112 09:43:21.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.386" endtime="20201112 09:43:21.672"></status>
</kw>
<msg timestamp="20201112 09:43:21.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.384" endtime="20201112 09:43:21.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022118694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:21.676" endtime="20201112 09:43:21.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.684" endtime="20201112 09:43:21.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.382" endtime="20201112 09:43:21.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.380" endtime="20201112 09:43:21.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:21.691" level="INFO">${RESULT} = [{'time': 0.022162014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.331999999999947e-05, 'source_diff': 4.331999999999947e-05}, {'time': 0.022209653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:21.688" endtime="20201112 09:43:21.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:21.704" level="INFO">${ACCURACY} = {'time': [0.022162014, 0.022209653, 0.022255667, 0.022302653, 0.022348653, 0.022394653, 0.022440653, 0.022487667, 0.022534667, 0.022580681, 0.022627667, 0.022673681, 0.022719736, 0.022766681, 0.022813...</msg>
<status status="PASS" starttime="20201112 09:43:21.692" endtime="20201112 09:43:21.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.709" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 09:43:21.708" endtime="20201112 09:43:21.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.711" level="INFO">VALUE: [4.331999999999947e-05, 4.2680999999999275e-05, 4.208400000000126e-05, 4.298599999999833e-05, 4.2152999999999635e-05, 4.205600000000212e-05, 4.205600000000212e-05, 4.2680999999999275e-05, 4.2973000000001704e-05, 4.2194999999998345e-05, 4.300000000000137e-05, 4.202799999999951e-05, 4.220800000000191e-05, 4.284800000000158e-05, 4.3012999999998e-05, 4.302700000000104e-05, 4.3041000000000607e-05, 4.2625000000000995e-05, 4.2110999999997456e-05, 4.276400000000069e-05, 4.293000000000005e-05, 4.2625000000000995e-05, 4.29999999999979e-05, 4.2054999999999176e-05, 4.216599999999973e-05, 4.2874999999997776e-05, 4.297200000000223e-05, 4.2152999999999635e-05, 4.2666999999999705e-05, 4.275000000000112e-05, 4.269399999999937e-05, 4.304200000000008e-05, 4.2930999999999525e-05, 4.2180999999998775e-05, 4.270799999999894e-05, 4.275000000000112e-05, 4.207000000000169e-05, 4.302800000000051e-05, 4.295799999999919e-05, 4.2874999999997776e-05, 4.2916999999999955e-05, 4.2166999999999205e-05, 4.2639000000000565e-05, 4.28059999999994e-05, 4.2695000000002314e-05, 4.201399999999994e-05, 4.2723000000001454e-05, 4.2181000000002244e-05, 4.218000000000277e-05, 4.284800000000158e-05]</msg>
<status status="PASS" starttime="20201112 09:43:21.710" endtime="20201112 09:43:21.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.705" endtime="20201112 09:43:21.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.723" endtime="20201112 09:43:21.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:21.726" endtime="20201112 09:43:21.745"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.725" endtime="20201112 09:43:21.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.721" endtime="20201112 09:43:21.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.347" endtime="20201112 09:43:21.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.347" endtime="20201112 09:43:21.747"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.756" endtime="20201112 09:43:21.772"></status>
</kw>
<msg timestamp="20201112 09:43:21.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.754" endtime="20201112 09:43:21.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:21.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:21.773" endtime="20201112 09:43:21.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.776" endtime="20201112 09:43:21.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.751" endtime="20201112 09:43:21.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.749" endtime="20201112 09:43:21.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:21.786" endtime="20201112 09:43:22.073"></status>
</kw>
<msg timestamp="20201112 09:43:22.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:21.784" endtime="20201112 09:43:22.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022221583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02226575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:22.078" endtime="20201112 09:43:22.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.086" endtime="20201112 09:43:22.087"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.782" endtime="20201112 09:43:22.088"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.780" endtime="20201112 09:43:22.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.093" level="INFO">${RESULT} = [{'time': 0.02226575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4167000000001205e-05, 'source_diff': 4.4167000000001205e-05}, {'time': 0.022314389, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:22.089" endtime="20201112 09:43:22.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.106" level="INFO">${ACCURACY} = {'time': [0.02226575, 0.022314389, 0.022362375, 0.022410375, 0.022457431, 0.022505389, 0.022553389, 0.022601389, 0.022649389, 0.022697417, 0.022744458, 0.022792403, 0.022840444, 0.022888458, 0.0229364...</msg>
<status status="PASS" starttime="20201112 09:43:22.094" endtime="20201112 09:43:22.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.110" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.109" endtime="20201112 09:43:22.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.113" level="INFO">VALUE: [4.4167000000001205e-05, 4.404200000000108e-05, 4.376400000000169e-05, 4.39999999999989e-05, 4.3180999999999775e-05, 4.3945000000000095e-05, 4.376400000000169e-05, 4.401399999999847e-05, 4.39999999999989e-05, 4.3903000000001385e-05, 4.323599999999858e-05, 4.38060000000004e-05, 4.373600000000255e-05, 4.377700000000179e-05, 4.384799999999911e-05, 4.374999999999865e-05, 4.374999999999865e-05, 4.3153000000000635e-05, 4.308399999999879e-05, 4.3624999999998526e-05, 4.401400000000194e-05, 4.3639000000001565e-05, 4.3833000000000066e-05, 4.3110999999998456e-05, 4.3624999999998526e-05, 4.363800000000209e-05, 4.3096999999998886e-05, 4.398599999999933e-05, 4.366600000000123e-05, 4.390200000000191e-05, 4.316600000000073e-05, 4.3917000000000955e-05, 4.39860000000028e-05, 4.3917000000000955e-05, 4.374999999999865e-05, 4.398599999999933e-05, 4.370799999999994e-05, 4.3875000000002246e-05, 4.3889000000001815e-05, 4.379200000000083e-05, 4.3638999999998096e-05, 4.3667000000000705e-05, 4.3180999999999775e-05, 4.38060000000004e-05, 4.3874999999998776e-05, 4.3194999999999345e-05, 4.3417000000000455e-05, 4.3888999999998346e-05, 4.3125000000001495e-05, 4.383399999999954e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.112" endtime="20201112 09:43:22.114"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.107" endtime="20201112 09:43:22.114"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.117" endtime="20201112 09:43:22.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.120" endtime="20201112 09:43:22.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.118" endtime="20201112 09:43:22.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.115" endtime="20201112 09:43:22.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.748" endtime="20201112 09:43:22.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:21.747" endtime="20201112 09:43:22.141"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.149" endtime="20201112 09:43:22.165"></status>
</kw>
<msg timestamp="20201112 09:43:22.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.148" endtime="20201112 09:43:22.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.167" endtime="20201112 09:43:22.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.169" endtime="20201112 09:43:22.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.145" endtime="20201112 09:43:22.172"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.143" endtime="20201112 09:43:22.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.179" endtime="20201112 09:43:22.464"></status>
</kw>
<msg timestamp="20201112 09:43:22.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.178" endtime="20201112 09:43:22.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021792347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021837153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.468" endtime="20201112 09:43:22.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.477" endtime="20201112 09:43:22.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.175" endtime="20201112 09:43:22.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.173" endtime="20201112 09:43:22.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.483" level="INFO">${RESULT} = [{'time': 0.021837153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.48060000000014e-05, 'source_diff': 4.48060000000014e-05}, {'time': 0.021886792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:22.480" endtime="20201112 09:43:22.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.497" level="INFO">${ACCURACY} = {'time': [0.021837153, 0.021886792, 0.021935792, 0.021984819, 0.022032792, 0.022080833, 0.022129806, 0.022178847, 0.022227819, 0.022276806, 0.022325806, 0.022373819, 0.022421819, 0.022469819, 0.022518...</msg>
<status status="PASS" starttime="20201112 09:43:22.484" endtime="20201112 09:43:22.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.501" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.500" endtime="20201112 09:43:22.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.504" level="INFO">VALUE: [4.48060000000014e-05, 4.49999999999999e-05, 4.4874999999999776e-05, 4.476299999999975e-05, 4.4110999999999456e-05, 4.422200000000001e-05, 4.4444999999997126e-05, 4.4847000000000636e-05, 4.479099999999889e-05, 4.4902999999998916e-05, 4.4888999999999346e-05, 4.415199999999869e-05, 4.4096999999999886e-05, 4.4110999999999456e-05, 4.470799999999747e-05, 4.492999999999858e-05, 4.472200000000051e-05, 4.501399999999947e-05, 4.4638999999999096e-05, 4.469400000000137e-05, 4.4610999999999956e-05, 4.473600000000008e-05, 4.474999999999965e-05, 4.479200000000183e-05, 4.479199999999836e-05, 4.4083000000000316e-05, 4.475000000000312e-05, 4.4110999999999456e-05, 4.4597000000000386e-05, 4.4138999999998596e-05, 4.4917000000001955e-05, 4.4624999999999526e-05, 4.4096999999999886e-05, 4.49999999999999e-05, 4.4709000000000415e-05, 4.4959000000000665e-05, 4.4945000000001095e-05, 4.459799999999986e-05, 4.479199999999836e-05, 4.405600000000065e-05, 4.470800000000094e-05, 4.48199999999975e-05, 4.48199999999975e-05, 4.472200000000051e-05, 4.465199999999919e-05, 4.470800000000094e-05, 4.474999999999965e-05, 4.4083000000000316e-05, 4.4055000000001177e-05, 4.4861000000000206e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.502" endtime="20201112 09:43:22.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.498" endtime="20201112 09:43:22.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.507" endtime="20201112 09:43:22.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.511" endtime="20201112 09:43:22.530"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.509" endtime="20201112 09:43:22.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.506" endtime="20201112 09:43:22.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.142" endtime="20201112 09:43:22.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.141" endtime="20201112 09:43:22.532"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.540" endtime="20201112 09:43:22.556"></status>
</kw>
<msg timestamp="20201112 09:43:22.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.539" endtime="20201112 09:43:22.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.557" endtime="20201112 09:43:22.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.560" endtime="20201112 09:43:22.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.536" endtime="20201112 09:43:22.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.534" endtime="20201112 09:43:22.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.570" endtime="20201112 09:43:22.858"></status>
</kw>
<msg timestamp="20201112 09:43:22.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.568" endtime="20201112 09:43:22.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021736958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.862" endtime="20201112 09:43:22.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.870" endtime="20201112 09:43:22.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.566" endtime="20201112 09:43:22.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.564" endtime="20201112 09:43:22.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:22.877" level="INFO">${RESULT} = [{'time': 0.021783347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6389000000000846e-05, 'source_diff': 4.6389000000000846e-05}, {'time': 0.021833986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:22.873" endtime="20201112 09:43:22.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:22.891" level="INFO">${ACCURACY} = {'time': [0.021783347, 0.021833986, 0.021883986, 0.021933972, 0.021983972, 0.022033, 0.022083014, 0.022133, 0.022182014, 0.022231, 0.022281, 0.022331, 0.022381, 0.022431014, 0.022481028, 0.022531014, ...</msg>
<status status="PASS" starttime="20201112 09:43:22.878" endtime="20201112 09:43:22.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.896" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 09:43:22.894" endtime="20201112 09:43:22.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.898" level="INFO">VALUE: [4.6389000000000846e-05, 4.56939999999989e-05, 4.579200000000283e-05, 4.5625000000000526e-05, 4.570800000000194e-05, 4.5069000000001747e-05, 4.577799999999979e-05, 4.605599999999918e-05, 4.5195000000001345e-05, 4.5125000000000026e-05, 4.58329999999986e-05, 4.5902999999999916e-05, 4.5902999999999916e-05, 4.5666999999999236e-05, 4.601400000000047e-05, 4.577799999999979e-05, 4.572200000000151e-05, 4.5125000000000026e-05, 4.5180999999998306e-05, 4.572199999999804e-05, 4.584699999999817e-05, 4.58060000000024e-05, 4.602800000000004e-05, 4.5861000000001206e-05, 4.5625000000000526e-05, 4.522200000000101e-05, 4.575000000000065e-05, 4.602800000000004e-05, 4.573599999999761e-05, 4.515199999999969e-05, 4.592999999999958e-05, 4.573599999999761e-05, 4.5125000000000026e-05, 4.5097000000000886e-05, 4.566599999999976e-05, 4.580499999999946e-05, 4.576400000000022e-05, 4.566599999999976e-05, 4.587499999999731e-05, 4.592999999999958e-05, 4.572200000000151e-05, 4.5861000000001206e-05, 4.573600000000108e-05, 4.580599999999893e-05, 4.56939999999989e-05, 4.5916999999999486e-05, 4.508299999999785e-05, 4.580599999999893e-05, 4.520800000000144e-05, 4.5889000000000346e-05]</msg>
<status status="PASS" starttime="20201112 09:43:22.897" endtime="20201112 09:43:22.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.892" endtime="20201112 09:43:22.899"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.901" endtime="20201112 09:43:22.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:22.905" endtime="20201112 09:43:22.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.903" endtime="20201112 09:43:22.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.900" endtime="20201112 09:43:22.925"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.532" endtime="20201112 09:43:22.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.532" endtime="20201112 09:43:22.926"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.935" endtime="20201112 09:43:22.952"></status>
</kw>
<msg timestamp="20201112 09:43:22.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.933" endtime="20201112 09:43:22.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:22.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:22.953" endtime="20201112 09:43:22.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.956" endtime="20201112 09:43:22.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.930" endtime="20201112 09:43:22.959"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.928" endtime="20201112 09:43:22.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:22.966" endtime="20201112 09:43:23.253"></status>
</kw>
<msg timestamp="20201112 09:43:23.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:22.964" endtime="20201112 09:43:23.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022843292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022890292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.257" endtime="20201112 09:43:23.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.265" endtime="20201112 09:43:23.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.962" endtime="20201112 09:43:23.267"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.960" endtime="20201112 09:43:23.268"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.272" level="INFO">${RESULT} = [{'time': 0.022890292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.699999999999843e-05, 'source_diff': 4.699999999999843e-05}, {'time': 0.022941917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.269" endtime="20201112 09:43:23.272"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.285" level="INFO">${ACCURACY} = {'time': [0.022890292, 0.022941917, 0.022993, 0.023043917, 0.023094917, 0.023144931, 0.023195931, 0.023245944, 0.023296931, 0.023347931, 0.023398944, 0.023449944, 0.023500944, 0.023551944, 0.023602958...</msg>
<status status="PASS" starttime="20201112 09:43:23.273" endtime="20201112 09:43:23.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.290" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.289" endtime="20201112 09:43:23.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.292" level="INFO">VALUE: [4.699999999999843e-05, 4.663899999999763e-05, 4.7013999999998e-05, 4.68199999999995e-05, 4.679200000000036e-05, 4.609800000000136e-05, 4.704200000000061e-05, 4.606900000000275e-05, 4.686199999999821e-05, 4.6680999999999806e-05, 4.695799999999972e-05, 4.7013000000002e-05, 4.691600000000101e-05, 4.659699999999892e-05, 4.695799999999972e-05, 4.616600000000026e-05, 4.616600000000026e-05, 4.673600000000208e-05, 4.6625000000001526e-05, 4.686099999999874e-05, 4.670799999999947e-05, 4.690299999999745e-05, 4.702800000000104e-05, 4.6139000000000596e-05, 4.673599999999861e-05, 4.6166999999999736e-05, 4.679200000000036e-05, 4.677799999999732e-05, 4.606999999999875e-05, 4.6944999999999626e-05, 4.684699999999917e-05, 4.6166999999999736e-05, 4.6959000000002665e-05, 4.6194999999998876e-05, 4.6667000000000236e-05, 4.6694999999999376e-05, 4.6986999999998336e-05, 4.706900000000028e-05, 4.6875000000001776e-05, 4.677800000000079e-05, 4.6180999999999306e-05, 4.676399999999775e-05, 4.672199999999904e-05, 4.668000000000033e-05, 4.684699999999917e-05, 4.616600000000026e-05, 4.670799999999947e-05, 4.6903000000000916e-05, 4.695799999999972e-05, 4.673599999999861e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.291" endtime="20201112 09:43:23.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.286" endtime="20201112 09:43:23.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.296" endtime="20201112 09:43:23.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.299" endtime="20201112 09:43:23.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.298" endtime="20201112 09:43:23.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.294" endtime="20201112 09:43:23.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.927" endtime="20201112 09:43:23.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:22.926" endtime="20201112 09:43:23.320"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.329" endtime="20201112 09:43:23.345"></status>
</kw>
<msg timestamp="20201112 09:43:23.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.327" endtime="20201112 09:43:23.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.347" endtime="20201112 09:43:23.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.349" endtime="20201112 09:43:23.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.325" endtime="20201112 09:43:23.352"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.322" endtime="20201112 09:43:23.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.359" endtime="20201112 09:43:23.645"></status>
</kw>
<msg timestamp="20201112 09:43:23.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.358" endtime="20201112 09:43:23.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021791306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.649" endtime="20201112 09:43:23.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.657" endtime="20201112 09:43:23.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.355" endtime="20201112 09:43:23.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.353" endtime="20201112 09:43:23.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:23.664" level="INFO">${RESULT} = [{'time': 0.021791306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.786199999999921e-05, 'source_diff': 4.786199999999921e-05}, {'time': 0.021843944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:23.661" endtime="20201112 09:43:23.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:23.677" level="INFO">${ACCURACY} = {'time': [0.021791306, 0.021843944, 0.021895958, 0.021947944, 0.021999944, 0.022051958, 0.022103958, 0.022154958, 0.022206958, 0.022258972, 0.022311014, 0.022362972, 0.022414972, 0.022467, 0.022519, 0...</msg>
<status status="PASS" starttime="20201112 09:43:23.665" endtime="20201112 09:43:23.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.682" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 09:43:23.681" endtime="20201112 09:43:23.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.684" level="INFO">VALUE: [4.786199999999921e-05, 4.781900000000103e-05, 4.779099999999842e-05, 4.794400000000115e-05, 4.773599999999961e-05, 4.799999999999943e-05, 4.787499999999931e-05, 4.706900000000028e-05, 4.770800000000047e-05, 4.759699999999992e-05, 4.786099999999974e-05, 4.773599999999961e-05, 4.799999999999943e-05, 4.801400000000247e-05, 4.759699999999992e-05, 4.772200000000004e-05, 4.709699999999942e-05, 4.804199999999814e-05, 4.774999999999918e-05, 4.763899999999863e-05, 4.790299999999845e-05, 4.707000000000322e-05, 4.708299999999985e-05, 4.787499999999931e-05, 4.7708999999999946e-05, 4.7959000000000196e-05, 4.805599999999771e-05, 4.802799999999857e-05, 4.769399999999743e-05, 4.76529999999982e-05, 4.7111000000002456e-05, 4.7139000000001596e-05, 4.780500000000146e-05, 4.717999999999736e-05, 4.805499999999824e-05, 4.788899999999888e-05, 4.716600000000126e-05, 4.71940000000004e-05, 4.776299999999928e-05, 4.777699999999885e-05, 4.761099999999949e-05, 4.786099999999974e-05, 4.805600000000118e-05, 4.795800000000072e-05, 4.708299999999985e-05, 4.78330000000006e-05, 4.781900000000103e-05, 4.7667000000001236e-05, 4.7139000000001596e-05, 4.787499999999931e-05]</msg>
<status status="PASS" starttime="20201112 09:43:23.683" endtime="20201112 09:43:23.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.678" endtime="20201112 09:43:23.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.688" endtime="20201112 09:43:23.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:23.691" endtime="20201112 09:43:23.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.690" endtime="20201112 09:43:23.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.686" endtime="20201112 09:43:23.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.321" endtime="20201112 09:43:23.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.320" endtime="20201112 09:43:23.712"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.721" endtime="20201112 09:43:23.737"></status>
</kw>
<msg timestamp="20201112 09:43:23.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.719" endtime="20201112 09:43:23.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:23.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:23.738" endtime="20201112 09:43:23.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.741" endtime="20201112 09:43:23.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.717" endtime="20201112 09:43:23.744"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.715" endtime="20201112 09:43:23.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:23.751" endtime="20201112 09:43:24.037"></status>
</kw>
<msg timestamp="20201112 09:43:24.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:23.749" endtime="20201112 09:43:24.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021927431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.041" endtime="20201112 09:43:24.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.049" endtime="20201112 09:43:24.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.747" endtime="20201112 09:43:24.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.745" endtime="20201112 09:43:24.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.056" level="INFO">${RESULT} = [{'time': 0.021976292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.886100000000074e-05, 'source_diff': 4.886100000000074e-05}, {'time': 0.022029917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.053" endtime="20201112 09:43:24.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.069" level="INFO">${ACCURACY} = {'time': [0.021976292, 0.022029917, 0.022082931, 0.022135931, 0.022188944, 0.022240944, 0.022293931, 0.022346944, 0.022399944, 0.022452944, 0.022505944, 0.022558972, 0.022611958, 0.022664972, 0.022717...</msg>
<status status="PASS" starttime="20201112 09:43:24.057" endtime="20201112 09:43:24.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.074" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.073" endtime="20201112 09:43:24.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.076" level="INFO">VALUE: [4.886100000000074e-05, 4.866699999999877e-05, 4.8945000000001626e-05, 4.904200000000261e-05, 4.875000000000018e-05, 4.811099999999999e-05, 4.861199999999996e-05, 4.905499999999924e-05, 4.880500000000246e-05, 4.8707999999998e-05, 4.879099999999942e-05, 4.866599999999929e-05, 4.898600000000086e-05, 4.902799999999957e-05, 4.877799999999932e-05, 4.904099999999967e-05, 4.877799999999932e-05, 4.8139000000002596e-05, 4.875000000000018e-05, 4.812499999999956e-05, 4.895799999999825e-05, 4.893099999999859e-05, 4.88200000000015e-05, 4.886100000000074e-05, 4.88469999999977e-05, 4.866699999999877e-05, 4.890299999999945e-05, 4.900000000000043e-05, 4.869499999999791e-05, 4.886100000000074e-05, 4.8181000000001306e-05, 4.887500000000031e-05, 4.8653000000002666e-05, 4.877799999999932e-05, 4.816699999999827e-05, 4.881999999999803e-05, 4.811199999999946e-05, 4.894399999999868e-05, 4.8945000000001626e-05, 4.859799999999692e-05, 4.898600000000086e-05, 4.86529999999992e-05, 4.894400000000215e-05, 4.877699999999985e-05, 4.8013999999999e-05, 4.811099999999999e-05, 4.890199999999997e-05, 4.880499999999899e-05, 4.880500000000246e-05, 4.863899999999963e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.075" endtime="20201112 09:43:24.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.070" endtime="20201112 09:43:24.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.080" endtime="20201112 09:43:24.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.083" endtime="20201112 09:43:24.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.082" endtime="20201112 09:43:24.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.078" endtime="20201112 09:43:24.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.713" endtime="20201112 09:43:24.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:23.712" endtime="20201112 09:43:24.104"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.113" endtime="20201112 09:43:24.129"></status>
</kw>
<msg timestamp="20201112 09:43:24.130" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.111" endtime="20201112 09:43:24.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.131" endtime="20201112 09:43:24.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.133" endtime="20201112 09:43:24.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.109" endtime="20201112 09:43:24.136"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.107" endtime="20201112 09:43:24.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.143" endtime="20201112 09:43:24.428"></status>
</kw>
<msg timestamp="20201112 09:43:24.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.142" endtime="20201112 09:43:24.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021709014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.432" endtime="20201112 09:43:24.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.441" endtime="20201112 09:43:24.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.139" endtime="20201112 09:43:24.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.138" endtime="20201112 09:43:24.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.447" level="INFO">${RESULT} = [{'time': 0.021758778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.976400000000075e-05, 'source_diff': 4.976400000000075e-05}, {'time': 0.021813431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.444" endtime="20201112 09:43:24.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.462" level="INFO">${ACCURACY} = {'time': [0.021758778, 0.021813431, 0.021867458, 0.021921403, 0.021975417, 0.022029417, 0.022083417, 0.022136431, 0.022190431, 0.022243444, 0.022296431, 0.022350444, 0.022404444, 0.022458472, 0.022512...</msg>
<status status="PASS" starttime="20201112 09:43:24.448" endtime="20201112 09:43:24.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.466" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.465" endtime="20201112 09:43:24.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.469" level="INFO">VALUE: [4.976400000000075e-05, 4.9959000000002196e-05, 4.967999999999986e-05, 4.998599999999839e-05, 4.980599999999946e-05, 4.976400000000075e-05, 4.988900000000088e-05, 4.907000000000175e-05, 4.991700000000002e-05, 4.918000000000283e-05, 4.904199999999914e-05, 4.969399999999943e-05, 4.974999999999771e-05, 5.005500000000024e-05, 4.976400000000075e-05, 4.916599999999979e-05, 5.001399999999753e-05, 4.987500000000131e-05, 4.919399999999893e-05, 4.9707999999999e-05, 4.958300000000235e-05, 5.004200000000014e-05, 4.977800000000032e-05, 4.994399999999968e-05, 4.905600000000218e-05, 4.96530000000002e-05, 4.980599999999946e-05, 4.977800000000032e-05, 5.000000000000143e-05, 4.9887999999997934e-05, 4.994399999999968e-05, 4.997199999999882e-05, 4.991700000000002e-05, 4.96530000000002e-05, 4.974999999999771e-05, 4.913900000000013e-05, 4.9723000000001516e-05, 4.9972999999998297e-05, 4.977800000000032e-05, 4.913900000000013e-05, 4.915200000000022e-05, 4.955600000000268e-05, 4.976400000000075e-05, 5.002699999999763e-05, 4.913900000000013e-05, 4.997200000000229e-05, 4.977800000000032e-05, 4.970800000000247e-05, 4.976400000000075e-05, 4.905499999999924e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.467" endtime="20201112 09:43:24.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.463" endtime="20201112 09:43:24.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.472" endtime="20201112 09:43:24.474"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.476" endtime="20201112 09:43:24.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.474" endtime="20201112 09:43:24.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.471" endtime="20201112 09:43:24.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.105" endtime="20201112 09:43:24.496"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.104" endtime="20201112 09:43:24.497"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.505" endtime="20201112 09:43:24.522"></status>
</kw>
<msg timestamp="20201112 09:43:24.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.504" endtime="20201112 09:43:24.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.523" endtime="20201112 09:43:24.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.526" endtime="20201112 09:43:24.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.501" endtime="20201112 09:43:24.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.499" endtime="20201112 09:43:24.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.536" endtime="20201112 09:43:24.821"></status>
</kw>
<msg timestamp="20201112 09:43:24.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.534" endtime="20201112 09:43:24.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.826" endtime="20201112 09:43:24.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.834" endtime="20201112 09:43:24.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.532" endtime="20201112 09:43:24.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.530" endtime="20201112 09:43:24.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:24.841" level="INFO">${RESULT} = [{'time': 0.021858069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.062500000000206e-05, 'source_diff': 5.062500000000206e-05}, {'time': 0.021913764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:24.837" endtime="20201112 09:43:24.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:24.854" level="INFO">${ACCURACY} = {'time': [0.021858069, 0.021913764, 0.021967708, 0.02202275, 0.022077722, 0.022131722, 0.022185722, 0.022240736, 0.022295736, 0.022349764, 0.02240475, 0.02245975, 0.02251475, 0.022569764, 0.022623764,...</msg>
<status status="PASS" starttime="20201112 09:43:24.842" endtime="20201112 09:43:24.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.859" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 09:43:24.858" endtime="20201112 09:43:24.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.861" level="INFO">VALUE: [5.062500000000206e-05, 5.074999999999871e-05, 5.009699999999895e-05, 5.068100000000034e-05, 5.0708e-05, 5.012499999999809e-05, 5.004100000000067e-05, 5.088900000000188e-05, 5.086099999999927e-05, 5.013900000000113e-05, 5.083300000000013e-05, 5.091700000000102e-05, 5.080600000000046e-05, 5.072199999999957e-05, 5.01530000000007e-05, 5.013899999999766e-05, 5.005600000000318e-05, 5.068000000000086e-05, 5.077800000000132e-05, 5.008400000000232e-05, 5.063900000000163e-05, 5.009799999999842e-05, 5.008400000000232e-05, 5.073600000000261e-05, 5.011199999999799e-05, 5.068100000000034e-05, 5.004100000000067e-05, 5.063899999999816e-05, 5.088899999999841e-05, 5.088899999999841e-05, 5.016600000000079e-05, 5.013899999999766e-05, 5.062499999999859e-05, 5.019399999999993e-05, 5.040300000000095e-05, 5.0915999999998074e-05, 5.01530000000007e-05, 5.076399999999828e-05, 5.098599999999939e-05, 5.008300000000285e-05, 5.015200000000122e-05, 5.072199999999957e-05, 5.083300000000013e-05, 5.018099999999984e-05, 5.074999999999871e-05, 5.077799999999785e-05, 5.073599999999914e-05, 5.08339999999996e-05, 5.012499999999809e-05, 5.099999999999896e-05]</msg>
<status status="PASS" starttime="20201112 09:43:24.860" endtime="20201112 09:43:24.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.855" endtime="20201112 09:43:24.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.865" endtime="20201112 09:43:24.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:24.868" endtime="20201112 09:43:24.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.867" endtime="20201112 09:43:24.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.863" endtime="20201112 09:43:24.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.497" endtime="20201112 09:43:24.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.497" endtime="20201112 09:43:24.889"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.898" endtime="20201112 09:43:24.913"></status>
</kw>
<msg timestamp="20201112 09:43:24.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.896" endtime="20201112 09:43:24.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:24.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:24.915" endtime="20201112 09:43:24.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.917" endtime="20201112 09:43:24.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.893" endtime="20201112 09:43:24.920"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.891" endtime="20201112 09:43:24.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:24.927" endtime="20201112 09:43:25.214"></status>
</kw>
<msg timestamp="20201112 09:43:25.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:24.926" endtime="20201112 09:43:25.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021967875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022020347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.219" endtime="20201112 09:43:25.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.227" endtime="20201112 09:43:25.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.923" endtime="20201112 09:43:25.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.922" endtime="20201112 09:43:25.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.233" level="INFO">${RESULT} = [{'time': 0.022020347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2471999999997854e-05, 'source_diff': 5.2471999999997854e-05}, {'time': 0.022076972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:25.230" endtime="20201112 09:43:25.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.247" level="INFO">${ACCURACY} = {'time': [0.022020347, 0.022076972, 0.022133, 0.022189, 0.022244986, 0.022301, 0.022356986, 0.022412986, 0.022469056, 0.022524014, 0.02258, 0.022635014, 0.022691083, 0.022747014, 0.022803014, 0.022859...</msg>
<status status="PASS" starttime="20201112 09:43:25.235" endtime="20201112 09:43:25.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.251" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.250" endtime="20201112 09:43:25.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.254" level="INFO">VALUE: [5.2471999999997854e-05, 5.163899999999916e-05, 5.165299999999873e-05, 5.187499999999984e-05, 5.197200000000082e-05, 5.2014000000003e-05, 5.190299999999898e-05, 5.162499999999959e-05, 5.202800000000257e-05, 5.115299999999823e-05, 5.201399999999953e-05, 5.105599999999724e-05, 5.1708000000001e-05, 5.1708000000001e-05, 5.201399999999953e-05, 5.204199999999867e-05, 5.16530000000022e-05, 5.105600000000071e-05, 5.1915999999999074e-05, 5.204199999999867e-05, 5.111099999999952e-05, 5.111099999999952e-05, 5.190299999999898e-05, 5.184800000000017e-05, 5.198699999999987e-05, 5.197200000000082e-05, 5.155500000000174e-05, 5.1679999999998394e-05, 5.1152000000002223e-05, 5.198600000000039e-05, 5.1943999999998214e-05, 5.1707999999997534e-05, 5.1915999999999074e-05, 5.173600000000014e-05, 5.173600000000014e-05, 5.163899999999916e-05, 5.158300000000088e-05, 5.173600000000014e-05, 5.1957999999997784e-05, 5.205600000000171e-05, 5.187499999999984e-05, 5.186100000000027e-05, 5.174999999999971e-05, 5.108300000000038e-05, 5.20279999999991e-05, 5.115299999999823e-05, 5.118100000000084e-05, 5.11530000000017e-05, 5.166700000000177e-05, 5.162499999999959e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.252" endtime="20201112 09:43:25.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.248" endtime="20201112 09:43:25.255"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.258" endtime="20201112 09:43:25.259"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.261" endtime="20201112 09:43:25.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.260" endtime="20201112 09:43:25.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.256" endtime="20201112 09:43:25.281"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.890" endtime="20201112 09:43:25.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:24.889" endtime="20201112 09:43:25.282"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.290" endtime="20201112 09:43:25.307"></status>
</kw>
<msg timestamp="20201112 09:43:25.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.289" endtime="20201112 09:43:25.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.309" endtime="20201112 09:43:25.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.311" endtime="20201112 09:43:25.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.286" endtime="20201112 09:43:25.314"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.284" endtime="20201112 09:43:25.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.321" endtime="20201112 09:43:25.605"></status>
</kw>
<msg timestamp="20201112 09:43:25.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.320" endtime="20201112 09:43:25.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021799611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021852764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.610" endtime="20201112 09:43:25.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.618" endtime="20201112 09:43:25.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.317" endtime="20201112 09:43:25.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.316" endtime="20201112 09:43:25.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:25.625" level="INFO">${RESULT} = [{'time': 0.021852764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.315300000000023e-05, 'source_diff': 5.315300000000023e-05}, {'time': 0.021910347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:25.621" endtime="20201112 09:43:25.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:25.638" level="INFO">${ACCURACY} = {'time': [0.021852764, 0.021910347, 0.021966361, 0.022022361, 0.022079361, 0.022135375, 0.022192375, 0.022249375, 0.022306375, 0.022362389, 0.022419403, 0.022476389, 0.022533403, 0.022590417, 0.022646...</msg>
<status status="PASS" starttime="20201112 09:43:25.626" endtime="20201112 09:43:25.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.642" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 09:43:25.641" endtime="20201112 09:43:25.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.645" level="INFO">VALUE: [5.315300000000023e-05, 5.2943999999999214e-05, 5.2179999999998894e-05, 5.212500000000009e-05, 5.277799999999985e-05, 5.209699999999748e-05, 5.2943999999999214e-05, 5.2721999999998104e-05, 5.2707999999998534e-05, 5.208300000000138e-05, 5.294500000000216e-05, 5.265299999999973e-05, 5.304199999999967e-05, 5.284800000000117e-05, 5.213899999999966e-05, 5.269499999999844e-05, 5.272300000000105e-05, 5.212500000000009e-05, 5.215299999999923e-05, 5.286200000000074e-05, 5.2916000000000074e-05, 5.2943999999999214e-05, 5.2957999999998784e-05, 5.2735999999997674e-05, 5.2957999999998784e-05, 5.2665999999999824e-05, 5.263900000000016e-05, 5.259700000000145e-05, 5.2665999999999824e-05, 5.300000000000096e-05, 5.2707999999998534e-05, 5.279099999999995e-05, 5.222299999999708e-05, 5.28470000000017e-05, 5.206899999999834e-05, 5.268099999999887e-05, 5.269500000000191e-05, 5.291699999999955e-05, 5.280599999999899e-05, 5.212500000000009e-05, 5.283299999999866e-05, 5.304199999999967e-05, 5.301400000000053e-05, 5.298600000000139e-05, 5.28470000000017e-05, 5.2151999999999754e-05, 5.213899999999966e-05, 5.265299999999973e-05, 5.213899999999966e-05, 5.28340000000016e-05]</msg>
<status status="PASS" starttime="20201112 09:43:25.643" endtime="20201112 09:43:25.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.639" endtime="20201112 09:43:25.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.649" endtime="20201112 09:43:25.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:25.652" endtime="20201112 09:43:25.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.650" endtime="20201112 09:43:25.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.647" endtime="20201112 09:43:25.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.283" endtime="20201112 09:43:25.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.282" endtime="20201112 09:43:25.673"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.681" endtime="20201112 09:43:25.698"></status>
</kw>
<msg timestamp="20201112 09:43:25.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.680" endtime="20201112 09:43:25.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:25.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:25.700" endtime="20201112 09:43:25.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.702" endtime="20201112 09:43:25.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.677" endtime="20201112 09:43:25.705"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.675" endtime="20201112 09:43:25.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:25.712" endtime="20201112 09:43:25.998"></status>
</kw>
<msg timestamp="20201112 09:43:26.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:25.711" endtime="20201112 09:43:26.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022055208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022108917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.002" endtime="20201112 09:43:26.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.010" endtime="20201112 09:43:26.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.708" endtime="20201112 09:43:26.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.706" endtime="20201112 09:43:26.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.017" level="INFO">${RESULT} = [{'time': 0.022108917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.370899999999901e-05, 'source_diff': 5.370899999999901e-05}, {'time': 0.022167556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.014" endtime="20201112 09:43:26.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.031" level="INFO">${ACCURACY} = {'time': [0.022108917, 0.022167556, 0.022225556, 0.022283556, 0.022341569, 0.022398569, 0.022456569, 0.022514583, 0.022571583, 0.022629583, 0.022687597, 0.022744611, 0.022802653, 0.022860597, 0.022918...</msg>
<status status="PASS" starttime="20201112 09:43:26.018" endtime="20201112 09:43:26.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.036" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.035" endtime="20201112 09:43:26.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.038" level="INFO">VALUE: [5.370899999999901e-05, 5.390300000000098e-05, 5.391700000000055e-05, 5.373699999999815e-05, 5.3915999999997605e-05, 5.30410000000002e-05, 5.376299999999834e-05, 5.372200000000257e-05, 5.313900000000066e-05, 5.361100000000202e-05, 5.3916000000001074e-05, 5.319400000000293e-05, 5.379200000000042e-05, 5.363900000000116e-05, 5.363899999999769e-05, 5.311100000000152e-05, 5.3707999999999534e-05, 5.369499999999944e-05, 5.404200000000067e-05, 5.3721999999999104e-05, 5.38470000000027e-05, 5.365300000000073e-05, 5.379200000000042e-05, 5.370900000000248e-05, 5.3999999999998494e-05, 5.4027999999997633e-05, 5.307000000000228e-05, 5.38479999999987e-05, 5.309800000000142e-05, 5.40280000000011e-05, 5.3777999999997383e-05, 5.3971999999999354e-05, 5.361200000000149e-05, 5.3666000000000824e-05, 5.372200000000257e-05, 5.3693999999999964e-05, 5.393100000000012e-05, 5.305499999999977e-05, 5.3971999999999354e-05, 5.3707999999999534e-05, 5.368099999999987e-05, 5.3735999999998674e-05, 5.4013999999998064e-05, 5.308299999999891e-05, 5.3930000000000644e-05, 5.362500000000159e-05, 5.304199999999967e-05, 5.387500000000184e-05, 5.375000000000171e-05, 5.306899999999934e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.037" endtime="20201112 09:43:26.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.032" endtime="20201112 09:43:26.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.042" endtime="20201112 09:43:26.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.045" endtime="20201112 09:43:26.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.044" endtime="20201112 09:43:26.065"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.040" endtime="20201112 09:43:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.674" endtime="20201112 09:43:26.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:25.673" endtime="20201112 09:43:26.066"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.075" endtime="20201112 09:43:26.092"></status>
</kw>
<msg timestamp="20201112 09:43:26.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.073" endtime="20201112 09:43:26.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.093" endtime="20201112 09:43:26.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.096" endtime="20201112 09:43:26.098"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.071" endtime="20201112 09:43:26.099"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.069" endtime="20201112 09:43:26.099"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.106" endtime="20201112 09:43:26.392"></status>
</kw>
<msg timestamp="20201112 09:43:26.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.104" endtime="20201112 09:43:26.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021795458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.396" endtime="20201112 09:43:26.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.404" endtime="20201112 09:43:26.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.102" endtime="20201112 09:43:26.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.100" endtime="20201112 09:43:26.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.411" level="INFO">${RESULT} = [{'time': 0.021795458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.509700000000048e-05, 'source_diff': 5.509700000000048e-05}, {'time': 0.021855083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:26.408" endtime="20201112 09:43:26.411"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.424" level="INFO">${ACCURACY} = {'time': [0.021795458, 0.021855083, 0.021914083, 0.021973083, 0.022032111, 0.022091097, 0.022150097, 0.022209111, 0.022267167, 0.022326125, 0.022384111, 0.022442139, 0.022501139, 0.022560125, 0.022618...</msg>
<status status="PASS" starttime="20201112 09:43:26.412" endtime="20201112 09:43:26.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.429" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.428" endtime="20201112 09:43:26.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.431" level="INFO">VALUE: [5.509700000000048e-05, 5.459699999999998e-05, 5.4916000000002074e-05, 5.4680000000001394e-05, 5.490299999999851e-05, 5.50280000000021e-05, 5.4735999999999674e-05, 5.5013999999999064e-05, 5.4235999999999174e-05, 5.481899999999762e-05, 5.40280000000011e-05, 5.419499999999994e-05, 5.4722000000000104e-05, 5.4694000000000964e-05, 5.411099999999905e-05, 5.476400000000228e-05, 5.4971999999996884e-05, 5.462499999999912e-05, 5.4791999999997953e-05, 5.412500000000209e-05, 5.456899999999737e-05, 5.491700000000155e-05, 5.4944000000001214e-05, 5.413900000000166e-05, 5.473699999999915e-05, 5.406899999999687e-05, 5.50410000000022e-05, 5.405500000000077e-05, 5.4722000000000104e-05, 5.487499999999937e-05, 5.409699999999948e-05, 5.4651999999998785e-05, 5.483300000000066e-05, 5.484700000000023e-05, 5.409699999999948e-05, 5.462499999999912e-05, 5.475000000000271e-05, 5.48609999999998e-05, 5.419499999999994e-05, 5.411100000000252e-05, 5.490299999999851e-05, 5.404200000000067e-05, 5.463900000000216e-05, 5.458300000000041e-05, 5.472299999999958e-05, 5.406999999999981e-05, 5.491699999999808e-05, 5.412499999999862e-05, 5.4985999999999924e-05, 5.411100000000252e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.430" endtime="20201112 09:43:26.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.425" endtime="20201112 09:43:26.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.435" endtime="20201112 09:43:26.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.438" endtime="20201112 09:43:26.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.437" endtime="20201112 09:43:26.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.433" endtime="20201112 09:43:26.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.067" endtime="20201112 09:43:26.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.067" endtime="20201112 09:43:26.459"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.468" endtime="20201112 09:43:26.484"></status>
</kw>
<msg timestamp="20201112 09:43:26.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.466" endtime="20201112 09:43:26.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.486" endtime="20201112 09:43:26.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.488" endtime="20201112 09:43:26.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.464" endtime="20201112 09:43:26.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.462" endtime="20201112 09:43:26.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.498" endtime="20201112 09:43:26.784"></status>
</kw>
<msg timestamp="20201112 09:43:26.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.497" endtime="20201112 09:43:26.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021702028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:26.788" endtime="20201112 09:43:26.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.797" endtime="20201112 09:43:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.494" endtime="20201112 09:43:26.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.492" endtime="20201112 09:43:26.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:26.804" level="INFO">${RESULT} = [{'time': 0.021758042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6013999999996594e-05, 'source_diff': 5.6013999999996594e-05}, {'time': 0.021818653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:26.800" endtime="20201112 09:43:26.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:26.817" level="INFO">${ACCURACY} = {'time': [0.021758042, 0.021818653, 0.02187775, 0.021937667, 0.021997681, 0.022057764, 0.022117681, 0.022177694, 0.022236694, 0.022295694, 0.02235575, 0.022414722, 0.022474722, 0.022534764, 0.02259470...</msg>
<status status="PASS" starttime="20201112 09:43:26.805" endtime="20201112 09:43:26.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.821" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 09:43:26.820" endtime="20201112 09:43:26.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.824" level="INFO">VALUE: [5.6013999999996594e-05, 5.6027999999999634e-05, 5.515300000000223e-05, 5.562500000000012e-05, 5.6014000000000064e-05, 5.612500000000062e-05, 5.58480000000007e-05, 5.581900000000209e-05, 5.5166000000002324e-05, 5.5137999999999715e-05, 5.5750000000000244e-05, 5.513900000000266e-05, 5.561100000000055e-05, 5.583299999999819e-05, 5.5902000000000035e-05, 5.5763999999999814e-05, 5.591699999999908e-05, 5.5972000000001354e-05, 5.58610000000008e-05, 5.5721999999997635e-05, 5.6014000000000064e-05, 5.587500000000037e-05, 5.583299999999819e-05, 5.508300000000091e-05, 5.566699999999883e-05, 5.588899999999994e-05, 5.561100000000055e-05, 5.5736000000000674e-05, 5.588899999999994e-05, 5.561100000000055e-05, 5.508400000000038e-05, 5.58610000000008e-05, 5.583400000000113e-05, 5.581999999999809e-05, 5.580600000000199e-05, 5.5041999999998203e-05, 5.579099999999948e-05, 5.588899999999994e-05, 5.580499999999905e-05, 5.5972000000001354e-05, 5.5750000000000244e-05, 5.501400000000253e-05, 5.505500000000177e-05, 5.6014000000000064e-05, 5.5750000000000244e-05, 5.590299999999951e-05, 5.6027999999999634e-05, 5.5679999999998925e-05, 5.586099999999733e-05, 5.6000000000000494e-05]</msg>
<status status="PASS" starttime="20201112 09:43:26.823" endtime="20201112 09:43:26.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.818" endtime="20201112 09:43:26.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.832" endtime="20201112 09:43:26.833"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:26.836" endtime="20201112 09:43:26.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.834" endtime="20201112 09:43:26.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.830" endtime="20201112 09:43:26.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.460" endtime="20201112 09:43:26.856"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.459" endtime="20201112 09:43:26.856"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.865" endtime="20201112 09:43:26.882"></status>
</kw>
<msg timestamp="20201112 09:43:26.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.863" endtime="20201112 09:43:26.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:26.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:26.883" endtime="20201112 09:43:26.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.886" endtime="20201112 09:43:26.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.861" endtime="20201112 09:43:26.889"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.859" endtime="20201112 09:43:26.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:26.896" endtime="20201112 09:43:27.182"></status>
</kw>
<msg timestamp="20201112 09:43:27.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218465, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:26.894" endtime="20201112 09:43:27.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021789611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218465, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:27.186" endtime="20201112 09:43:27.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.194" endtime="20201112 09:43:27.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.892" endtime="20201112 09:43:27.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.890" endtime="20201112 09:43:27.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.201" level="INFO">${RESULT} = [{'time': 0.0218465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.688900000000094e-05, 'source_diff': 5.688900000000094e-05}, {'time': 0.021908125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:27.197" endtime="20201112 09:43:27.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.214" level="INFO">${ACCURACY} = {'time': [0.0218465, 0.021908125, 0.021968139, 0.022028139, 0.022088139, 0.022149153, 0.022210167, 0.022270194, 0.022331153, 0.022392167, 0.022453208, 0.022513181, 0.022574194, 0.022634181, 0.02269519...</msg>
<status status="PASS" starttime="20201112 09:43:27.202" endtime="20201112 09:43:27.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.219" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.218" endtime="20201112 09:43:27.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.221" level="INFO">VALUE: [5.688900000000094e-05, 5.633300000000216e-05, 5.609700000000148e-05, 5.609699999999801e-05, 5.613900000000019e-05, 5.690300000000051e-05, 5.662500000000112e-05, 5.6152000000000285e-05, 5.669499999999897e-05, 5.7028000000000634e-05, 5.680500000000005e-05, 5.609800000000095e-05, 5.662499999999765e-05, 5.6055999999998773e-05, 5.6943999999999745e-05, 5.683299999999919e-05, 5.604099999999973e-05, 5.662500000000112e-05, 5.702700000000116e-05, 5.6693999999999495e-05, 5.68749999999979e-05, 5.6165999999999855e-05, 5.6750000000001244e-05, 5.6957999999999315e-05, 5.670899999999854e-05, 5.6971999999998885e-05, 5.681899999999962e-05, 5.6819999999999093e-05, 5.68749999999979e-05, 5.6943999999999745e-05, 5.666699999999983e-05, 5.61809999999989e-05, 5.706899999999987e-05, 5.6819999999999093e-05, 5.68749999999979e-05, 5.669499999999897e-05, 5.611100000000105e-05, 5.670899999999854e-05, 5.697299999999836e-05, 5.665300000000026e-05, 5.698699999999793e-05, 5.690300000000051e-05, 5.670899999999854e-05, 5.6750000000001244e-05, 5.676300000000134e-05, 5.683299999999919e-05, 5.6764000000000814e-05, 5.606900000000234e-05, 5.6236000000001174e-05, 5.6736000000001674e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.220" endtime="20201112 09:43:27.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.215" endtime="20201112 09:43:27.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.225" endtime="20201112 09:43:27.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.228" endtime="20201112 09:43:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.227" endtime="20201112 09:43:27.248"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.223" endtime="20201112 09:43:27.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.857" endtime="20201112 09:43:27.249"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:26.857" endtime="20201112 09:43:27.249"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.258" endtime="20201112 09:43:27.275"></status>
</kw>
<msg timestamp="20201112 09:43:27.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.256" endtime="20201112 09:43:27.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.277" endtime="20201112 09:43:27.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.279" endtime="20201112 09:43:27.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.253" endtime="20201112 09:43:27.282"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.251" endtime="20201112 09:43:27.283"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.289" endtime="20201112 09:43:27.575"></status>
</kw>
<msg timestamp="20201112 09:43:27.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.288" endtime="20201112 09:43:27.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022459431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022517569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:27.580" endtime="20201112 09:43:27.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.588" endtime="20201112 09:43:27.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.285" endtime="20201112 09:43:27.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.283" endtime="20201112 09:43:27.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.595" level="INFO">${RESULT} = [{'time': 0.022517569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8138000000002715e-05, 'source_diff': 5.8138000000002715e-05}, {'time': 0.022580208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:27.591" endtime="20201112 09:43:27.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:27.609" level="INFO">${ACCURACY} = {'time': [0.022517569, 0.022580208, 0.022642194, 0.022703208, 0.022765208, 0.022827236, 0.022889208, 0.022951236, 0.023013222, 0.023075222, 0.023137236, 0.023199292, 0.023261236, 0.02332325, 0.0233842...</msg>
<status status="PASS" starttime="20201112 09:43:27.596" endtime="20201112 09:43:27.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.614" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 09:43:27.613" endtime="20201112 09:43:27.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.616" level="INFO">VALUE: [5.8138000000002715e-05, 5.7457999999999815e-05, 5.777700000000191e-05, 5.7165999999997386e-05, 5.7985999999999455e-05, 5.7764000000001814e-05, 5.7694000000000495e-05, 5.78749999999989e-05, 5.7944000000000745e-05, 5.7958000000000315e-05, 5.783300000000019e-05, 5.8056000000000774e-05, 5.765300000000126e-05, 5.7792000000000954e-05, 5.711099999999858e-05, 5.716700000000033e-05, 5.7806000000000524e-05, 5.762499999999865e-05, 5.715300000000076e-05, 5.711199999999805e-05, 5.7721999999999635e-05, 5.715300000000076e-05, 5.7735999999999205e-05, 5.797299999999936e-05, 5.713900000000119e-05, 5.797299999999936e-05, 5.78749999999989e-05, 5.762499999999865e-05, 5.7915999999998136e-05, 5.7736000000002674e-05, 5.8000000000002494e-05, 5.708299999999944e-05, 5.779100000000148e-05, 5.779099999999801e-05, 5.7944000000000745e-05, 5.7735999999999205e-05, 5.7207999999999565e-05, 5.783300000000019e-05, 5.7735999999999205e-05, 5.7986000000002924e-05, 5.7721999999999635e-05, 5.7735999999999205e-05, 5.71809999999999e-05, 5.7999999999999025e-05, 5.7985999999999455e-05, 5.783300000000019e-05, 5.762499999999865e-05, 5.7583999999999413e-05, 5.7763999999998344e-05, 5.7749999999998775e-05]</msg>
<status status="PASS" starttime="20201112 09:43:27.615" endtime="20201112 09:43:27.617"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.610" endtime="20201112 09:43:27.617"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.620" endtime="20201112 09:43:27.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:27.623" endtime="20201112 09:43:27.642"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.622" endtime="20201112 09:43:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.618" endtime="20201112 09:43:27.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.250" endtime="20201112 09:43:27.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.249" endtime="20201112 09:43:27.644"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.652" endtime="20201112 09:43:27.670"></status>
</kw>
<msg timestamp="20201112 09:43:27.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.651" endtime="20201112 09:43:27.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:27.671" endtime="20201112 09:43:27.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.674" endtime="20201112 09:43:27.676"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.648" endtime="20201112 09:43:27.677"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.646" endtime="20201112 09:43:27.677"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.684" endtime="20201112 09:43:27.971"></status>
</kw>
<msg timestamp="20201112 09:43:27.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:27.682" endtime="20201112 09:43:27.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:27.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:43:27.976" endtime="20201112 09:43:27.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:27.984" endtime="20201112 09:43:27.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.680" endtime="20201112 09:43:27.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.678" endtime="20201112 09:43:27.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:27.991" level="INFO">${RESULT} = [{'time': 0.022178431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.943099999999868e-05, 'source_diff': 5.943099999999868e-05}, {'time': 0.022242042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:27.988" endtime="20201112 09:43:27.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.005" level="INFO">${ACCURACY} = {'time': [0.022178431, 0.022242042, 0.022305056, 0.022368056, 0.022431069, 0.022493083, 0.022556069, 0.022619083, 0.022682083, 0.022745097, 0.022808097, 0.022871097, 0.022934097, 0.022997097, 0.023060...</msg>
<status status="PASS" starttime="20201112 09:43:27.992" endtime="20201112 09:43:28.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.010" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.009" endtime="20201112 09:43:28.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.013" level="INFO">VALUE: [5.943099999999868e-05, 5.8597999999999983e-05, 5.898699999999993e-05, 5.861199999999955e-05, 5.8652000000002785e-05, 5.809700000000001e-05, 5.8944000000001745e-05, 5.880500000000205e-05, 5.9000000000000025e-05, 5.879099999999901e-05, 5.886100000000033e-05, 5.886100000000033e-05, 5.904099999999926e-05, 5.8930000000002175e-05, 5.8944000000001745e-05, 5.9013999999999595e-05, 5.806900000000087e-05, 5.8806000000001524e-05, 5.88749999999999e-05, 5.8777999999998914e-05, 5.866699999999836e-05, 5.811099999999958e-05, 5.9000000000000025e-05, 5.8763999999999345e-05, 5.8848000000000233e-05, 5.866700000000183e-05, 5.866700000000183e-05, 5.865300000000226e-05, 5.868099999999793e-05, 5.81810000000009e-05, 5.883300000000119e-05, 5.868099999999793e-05, 5.8166000000001855e-05, 5.859699999999704e-05, 5.8986000000000455e-05, 5.8722000000000635e-05, 5.863899999999922e-05, 5.9013999999999595e-05, 5.880499999999858e-05, 5.891700000000208e-05, 5.9013999999999595e-05, 5.884699999999729e-05, 5.88749999999999e-05, 5.812500000000262e-05, 5.815300000000176e-05, 5.88619999999998e-05, 5.8056000000000774e-05, 5.866699999999836e-05, 5.9014000000003064e-05, 5.811099999999958e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.011" endtime="20201112 09:43:28.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.006" endtime="20201112 09:43:28.014"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.017" endtime="20201112 09:43:28.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.020" endtime="20201112 09:43:28.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.019" endtime="20201112 09:43:28.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.015" endtime="20201112 09:43:28.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.645" endtime="20201112 09:43:28.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:27.644" endtime="20201112 09:43:28.041"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.050" endtime="20201112 09:43:28.066"></status>
</kw>
<msg timestamp="20201112 09:43:28.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.048" endtime="20201112 09:43:28.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.068" endtime="20201112 09:43:28.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.070" endtime="20201112 09:43:28.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.046" endtime="20201112 09:43:28.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.044" endtime="20201112 09:43:28.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.080" endtime="20201112 09:43:28.365"></status>
</kw>
<msg timestamp="20201112 09:43:28.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.079" endtime="20201112 09:43:28.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021932167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021992167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.370" endtime="20201112 09:43:28.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.378" endtime="20201112 09:43:28.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.076" endtime="20201112 09:43:28.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.074" endtime="20201112 09:43:28.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.385" level="INFO">${RESULT} = [{'time': 0.021992167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0000000000001025e-05, 'source_diff': 6.0000000000001025e-05}, {'time': 0.022056792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:28.382" endtime="20201112 09:43:28.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.399" level="INFO">${ACCURACY} = {'time': [0.021992167, 0.022056792, 0.022119819, 0.022183806, 0.022247819, 0.022311833, 0.022375819, 0.022439833, 0.022503833, 0.022567833, 0.022631847, 0.022695847, 0.022759847, 0.022822847, 0.022886...</msg>
<status status="PASS" starttime="20201112 09:43:28.386" endtime="20201112 09:43:28.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.403" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.402" endtime="20201112 09:43:28.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.406" level="INFO">VALUE: [6.0000000000001025e-05, 5.968099999999893e-05, 5.9207999999998095e-05, 5.948700000000043e-05, 5.981899999999915e-05, 6.004100000000026e-05, 5.9986000000001455e-05, 5.963900000000022e-05, 6.002700000000069e-05, 5.9985999999997985e-05, 5.9971999999998415e-05, 5.963900000000022e-05, 5.990300000000004e-05, 5.906900000000187e-05, 5.963900000000022e-05, 5.965299999999979e-05, 5.9972000000001885e-05, 5.9707999999998596e-05, 5.9721999999998165e-05, 5.91810000000019e-05, 5.9320000000001594e-05, 5.988900000000047e-05, 5.963900000000022e-05, 5.991699999999961e-05, 5.909700000000101e-05, 5.995900000000179e-05, 5.961099999999761e-05, 5.962500000000065e-05, 5.9929999999999706e-05, 5.973700000000068e-05, 5.9750000000000775e-05, 5.9679999999999456e-05, 5.90689999999984e-05, 5.9638000000000746e-05, 5.981899999999915e-05, 5.983299999999872e-05, 5.9929999999999706e-05, 5.9943999999999276e-05, 5.961100000000108e-05, 5.9791999999999484e-05, 5.9193999999998526e-05, 5.9943999999999276e-05, 5.9777999999999915e-05, 5.98750000000009e-05, 5.9791999999999484e-05, 6.008299999999897e-05, 5.961100000000108e-05, 5.9833999999998194e-05, 5.916699999999886e-05, 5.991700000000308e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.404" endtime="20201112 09:43:28.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.400" endtime="20201112 09:43:28.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.409" endtime="20201112 09:43:28.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.413" endtime="20201112 09:43:28.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.411" endtime="20201112 09:43:28.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.408" endtime="20201112 09:43:28.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.042" endtime="20201112 09:43:28.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.042" endtime="20201112 09:43:28.434"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.442" endtime="20201112 09:43:28.459"></status>
</kw>
<msg timestamp="20201112 09:43:28.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.441" endtime="20201112 09:43:28.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.460" endtime="20201112 09:43:28.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.463" endtime="20201112 09:43:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.438" endtime="20201112 09:43:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.436" endtime="20201112 09:43:28.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.473" endtime="20201112 09:43:28.759"></status>
</kw>
<msg timestamp="20201112 09:43:28.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.471" endtime="20201112 09:43:28.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021780639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.763" endtime="20201112 09:43:28.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.771" endtime="20201112 09:43:28.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.469" endtime="20201112 09:43:28.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.467" endtime="20201112 09:43:28.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:28.778" level="INFO">${RESULT} = [{'time': 0.021780639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0819999999999624e-05, 'source_diff': 6.0819999999999624e-05}, {'time': 0.021846278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:28.775" endtime="20201112 09:43:28.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:28.792" level="INFO">${ACCURACY} = {'time': [0.021780639, 0.021846278, 0.021911319, 0.021976319, 0.022040292, 0.022105306, 0.022169306, 0.022234319, 0.022299347, 0.022363347, 0.022428319, 0.022492333, 0.022557333, 0.022621333, 0.022686...</msg>
<status status="PASS" starttime="20201112 09:43:28.779" endtime="20201112 09:43:28.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.797" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 09:43:28.795" endtime="20201112 09:43:28.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.799" level="INFO">VALUE: [6.0819999999999624e-05, 6.0721999999999166e-05, 6.083299999999972e-05, 6.0722000000002635e-05, 6.0083999999998444e-05, 6.072300000000211e-05, 6.018099999999943e-05, 6.0749999999998305e-05, 6.1000000000002025e-05, 6.0166000000000386e-05, 6.0679999999996986e-05, 6.009699999999854e-05, 6.0929999999997236e-05, 6.012500000000115e-05, 6.066700000000036e-05, 6.090300000000104e-05, 6.1014000000001595e-05, 6.013900000000072e-05, 6.0750000000001775e-05, 6.084699999999929e-05, 6.0778000000000915e-05, 6.009699999999854e-05, 6.018099999999943e-05, 6.0985999999998985e-05, 6.081900000000015e-05, 6.0806000000000054e-05, 6.0721999999999166e-05, 6.066700000000036e-05, 6.066699999999689e-05, 6.0055999999999304e-05, 6.009700000000201e-05, 6.013900000000072e-05, 6.0985999999998985e-05, 6.1028000000001165e-05, 6.0597999999998514e-05, 6.0749999999998305e-05, 6.076300000000187e-05, 6.0888000000001996e-05, 6.063899999999775e-05, 6.102699999999822e-05, 6.08750000000019e-05, 6.0166000000000386e-05, 6.0778000000000915e-05, 6.0778000000000915e-05, 6.0179999999999956e-05, 6.0985999999998985e-05, 6.059699999999904e-05, 6.0791999999997015e-05, 6.0833999999999194e-05, 6.06949999999995e-05]</msg>
<status status="PASS" starttime="20201112 09:43:28.798" endtime="20201112 09:43:28.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.793" endtime="20201112 09:43:28.800"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.803" endtime="20201112 09:43:28.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:28.806" endtime="20201112 09:43:28.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.805" endtime="20201112 09:43:28.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.801" endtime="20201112 09:43:28.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.435" endtime="20201112 09:43:28.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.434" endtime="20201112 09:43:28.827"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.836" endtime="20201112 09:43:28.854"></status>
</kw>
<msg timestamp="20201112 09:43:28.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.834" endtime="20201112 09:43:28.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:28.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:28.856" endtime="20201112 09:43:28.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.858" endtime="20201112 09:43:28.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.831" endtime="20201112 09:43:28.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.829" endtime="20201112 09:43:28.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:28.868" endtime="20201112 09:43:29.154"></status>
</kw>
<msg timestamp="20201112 09:43:29.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:28.867" endtime="20201112 09:43:29.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022182458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022244847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.159" endtime="20201112 09:43:29.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.167" endtime="20201112 09:43:29.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.864" endtime="20201112 09:43:29.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.862" endtime="20201112 09:43:29.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.174" level="INFO">${RESULT} = [{'time': 0.022244847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.238900000000297e-05, 'source_diff': 6.238900000000297e-05}, {'time': 0.022311486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.170" endtime="20201112 09:43:29.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.188" level="INFO">${ACCURACY} = {'time': [0.022244847, 0.022311486, 0.022377486, 0.022443486, 0.022509514, 0.0225745, 0.022640528, 0.022705528, 0.022770514, 0.022835514, 0.022901528, 0.022967583, 0.023033542, 0.023099556, 0.02316455...</msg>
<status status="PASS" starttime="20201112 09:43:29.175" endtime="20201112 09:43:29.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.192" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.191" endtime="20201112 09:43:29.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.195" level="INFO">VALUE: [6.238900000000297e-05, 6.195799999999738e-05, 6.192999999999824e-05, 6.162499999999918e-05, 6.191700000000161e-05, 6.111099999999911e-05, 6.194500000000075e-05, 6.113899999999825e-05, 6.10560000000003e-05, 6.111100000000258e-05, 6.17499999999993e-05, 6.176399999999888e-05, 6.176399999999888e-05, 6.18340000000002e-05, 6.111199999999858e-05, 6.162499999999918e-05, 6.115299999999782e-05, 6.180599999999759e-05, 6.204099999999879e-05, 6.187499999999943e-05, 6.119400000000053e-05, 6.204100000000226e-05, 6.204199999999827e-05, 6.108299999999997e-05, 6.190299999999857e-05, 6.197200000000042e-05, 6.113899999999825e-05, 6.166699999999789e-05, 6.198599999999999e-05, 6.20279999999987e-05, 6.111100000000258e-05, 6.109699999999954e-05, 6.1195e-05, 6.187499999999943e-05, 6.198599999999999e-05, 6.163899999999875e-05, 6.162499999999918e-05, 6.184700000000029e-05, 6.165300000000179e-05, 6.184799999999976e-05, 6.120899999999957e-05, 6.179200000000148e-05, 6.163900000000222e-05, 6.161200000000255e-05, 6.186099999999986e-05, 6.201299999999965e-05, 6.172200000000017e-05, 6.108299999999997e-05, 6.116700000000086e-05, 6.108299999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.194" endtime="20201112 09:43:29.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.189" endtime="20201112 09:43:29.196"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.199" endtime="20201112 09:43:29.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.202" endtime="20201112 09:43:29.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.201" endtime="20201112 09:43:29.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.197" endtime="20201112 09:43:29.222"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.828" endtime="20201112 09:43:29.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:28.827" endtime="20201112 09:43:29.223"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.232" endtime="20201112 09:43:29.249"></status>
</kw>
<msg timestamp="20201112 09:43:29.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.230" endtime="20201112 09:43:29.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.250" endtime="20201112 09:43:29.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.253" endtime="20201112 09:43:29.255"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.227" endtime="20201112 09:43:29.256"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.225" endtime="20201112 09:43:29.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.263" endtime="20201112 09:43:29.547"></status>
</kw>
<msg timestamp="20201112 09:43:29.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.261" endtime="20201112 09:43:29.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021778389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021841556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.551" endtime="20201112 09:43:29.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.559" endtime="20201112 09:43:29.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.259" endtime="20201112 09:43:29.561"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.257" endtime="20201112 09:43:29.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.566" level="INFO">${RESULT} = [{'time': 0.021841556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.316700000000286e-05, 'source_diff': 6.316700000000286e-05}, {'time': 0.021908181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.563" endtime="20201112 09:43:29.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.579" level="INFO">${ACCURACY} = {'time': [0.021841556, 0.021908181, 0.021975208, 0.022042208, 0.022109194, 0.022176208, 0.022242208, 0.022309208, 0.022376222, 0.022443222, 0.022510222, 0.022577264, 0.022644236, 0.02271125, 0.0227782...</msg>
<status status="PASS" starttime="20201112 09:43:29.567" endtime="20201112 09:43:29.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.584" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.583" endtime="20201112 09:43:29.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.586" level="INFO">VALUE: [6.316700000000286e-05, 6.205599999999784e-05, 6.279099999999954e-05, 6.261100000000061e-05, 6.269399999999856e-05, 6.263899999999975e-05, 6.209700000000054e-05, 6.263899999999975e-05, 6.263899999999975e-05, 6.262500000000018e-05, 6.267999999999899e-05, 6.269499999999803e-05, 6.290300000000304e-05, 6.30279999999997e-05, 6.280599999999859e-05, 6.298600000000099e-05, 6.213899999999925e-05, 6.209700000000054e-05, 6.281999999999816e-05, 6.286100000000086e-05, 6.277799999999945e-05, 6.279199999999902e-05, 6.279199999999902e-05, 6.279199999999902e-05, 6.305599999999884e-05, 6.268000000000246e-05, 6.279199999999902e-05, 6.216599999999892e-05, 6.297200000000142e-05, 6.286100000000086e-05, 6.30279999999997e-05, 6.281899999999868e-05, 6.211100000000011e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.211100000000011e-05, 6.213900000000272e-05, 6.291700000000261e-05, 6.268099999999846e-05, 6.282000000000162e-05, 6.22089999999971e-05, 6.301400000000013e-05, 6.261099999999714e-05, 6.283299999999825e-05, 6.20560000000013e-05, 6.268099999999846e-05, 6.27500000000003e-05, 6.272299999999717e-05, 6.273700000000021e-05, 6.263899999999975e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.585" endtime="20201112 09:43:29.587"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.580" endtime="20201112 09:43:29.588"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.590" endtime="20201112 09:43:29.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.593" endtime="20201112 09:43:29.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.592" endtime="20201112 09:43:29.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.588" endtime="20201112 09:43:29.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.224" endtime="20201112 09:43:29.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.223" endtime="20201112 09:43:29.614"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.623" endtime="20201112 09:43:29.639"></status>
</kw>
<msg timestamp="20201112 09:43:29.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.621" endtime="20201112 09:43:29.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:29.641" endtime="20201112 09:43:29.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.643" endtime="20201112 09:43:29.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.619" endtime="20201112 09:43:29.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.617" endtime="20201112 09:43:29.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.653" endtime="20201112 09:43:29.940"></status>
</kw>
<msg timestamp="20201112 09:43:29.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.652" endtime="20201112 09:43:29.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022197139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:29.944" endtime="20201112 09:43:29.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.952" endtime="20201112 09:43:29.954"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.649" endtime="20201112 09:43:29.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.648" endtime="20201112 09:43:29.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:29.959" level="INFO">${RESULT} = [{'time': 0.022197139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.429200000000052e-05, 'source_diff': 6.429200000000052e-05}, {'time': 0.022265736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:29.956" endtime="20201112 09:43:29.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:29.972" level="INFO">${ACCURACY} = {'time': [0.022197139, 0.022265736, 0.02233375, 0.022401736, 0.022469736, 0.02253675, 0.02260475, 0.022672764, 0.022740778, 0.022807764, 0.022874764, 0.022942778, 0.023009792, 0.023077778, 0.023145792...</msg>
<status status="PASS" starttime="20201112 09:43:29.960" endtime="20201112 09:43:29.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.977" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 09:43:29.976" endtime="20201112 09:43:29.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:29.980" level="INFO">VALUE: [6.429200000000052e-05, 6.358300000000247e-05, 6.39439999999998e-05, 6.397199999999895e-05, 6.381899999999968e-05, 6.315299999999982e-05, 6.359699999999857e-05, 6.387500000000143e-05, 6.365300000000032e-05, 6.30560000000023e-05, 6.305599999999884e-05, 6.398600000000199e-05, 6.308400000000144e-05, 6.362500000000118e-05, 6.383399999999873e-05, 6.379200000000002e-05, 6.317999999999949e-05, 6.37500000000013e-05, 6.316699999999939e-05, 6.377700000000097e-05, 6.3889000000001e-05, 6.373600000000174e-05, 6.370799999999913e-05, 6.311099999999764e-05, 6.311099999999764e-05, 6.318000000000296e-05, 6.381899999999968e-05, 6.384699999999882e-05, 6.32500000000008e-05, 6.367999999999999e-05, 6.390300000000057e-05, 6.308300000000197e-05, 6.388899999999753e-05, 6.390300000000057e-05, 6.312500000000068e-05, 6.379200000000002e-05, 6.393099999999971e-05, 6.312499999999721e-05, 6.400000000000156e-05, 6.304199999999927e-05, 6.315299999999982e-05, 6.39020000000011e-05, 6.383399999999873e-05, 6.37219999999987e-05, 6.361200000000108e-05, 6.361099999999814e-05, 6.39439999999998e-05, 6.361100000000161e-05, 6.39439999999998e-05, 6.3889000000001e-05]</msg>
<status status="PASS" starttime="20201112 09:43:29.978" endtime="20201112 09:43:29.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.973" endtime="20201112 09:43:29.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:29.983" endtime="20201112 09:43:29.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:29.987" endtime="20201112 09:43:30.006"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.985" endtime="20201112 09:43:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.981" endtime="20201112 09:43:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.615" endtime="20201112 09:43:30.007"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:29.615" endtime="20201112 09:43:30.008"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.016" endtime="20201112 09:43:30.034"></status>
</kw>
<msg timestamp="20201112 09:43:30.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.015" endtime="20201112 09:43:30.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.035" endtime="20201112 09:43:30.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.038" endtime="20201112 09:43:30.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.012" endtime="20201112 09:43:30.041"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.010" endtime="20201112 09:43:30.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.049" endtime="20201112 09:43:30.334"></status>
</kw>
<msg timestamp="20201112 09:43:30.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.047" endtime="20201112 09:43:30.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021779653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021844306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.338" endtime="20201112 09:43:30.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.347" endtime="20201112 09:43:30.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.044" endtime="20201112 09:43:30.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.042" endtime="20201112 09:43:30.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.353" level="INFO">${RESULT} = [{'time': 0.021844306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.465300000000132e-05, 'source_diff': 6.465300000000132e-05}, {'time': 0.021913903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:30.350" endtime="20201112 09:43:30.354"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.367" level="INFO">${ACCURACY} = {'time': [0.021844306, 0.021913903, 0.021982958, 0.022051958, 0.022120931, 0.022189931, 0.022257944, 0.022326944, 0.022396, 0.022464944, 0.022533958, 0.022603014, 0.022671958, 0.022740986, 0.022808972...</msg>
<status status="PASS" starttime="20201112 09:43:30.355" endtime="20201112 09:43:30.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.371" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.370" endtime="20201112 09:43:30.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.374" level="INFO">VALUE: [6.465300000000132e-05, 6.444499999999978e-05, 6.466600000000142e-05, 6.488899999999853e-05, 6.459799999999905e-05, 6.486199999999887e-05, 6.409700000000254e-05, 6.486100000000286e-05, 6.488899999999853e-05, 6.488799999999906e-05, 6.487499999999896e-05, 6.50280000000017e-05, 6.498599999999952e-05, 6.486100000000286e-05, 6.412500000000168e-05, 6.498599999999952e-05, 6.406899999999993e-05, 6.416700000000039e-05, 6.415299999999735e-05, 6.469400000000056e-05, 6.409699999999907e-05, 6.486100000000286e-05, 6.416700000000039e-05, 6.411099999999864e-05, 6.479199999999755e-05, 6.502799999999823e-05, 6.466700000000089e-05, 6.500000000000256e-05, 6.468100000000046e-05, 6.413799999999831e-05, 6.418099999999996e-05, 6.495899999999985e-05, 6.495800000000038e-05, 6.470800000000013e-05, 6.469500000000003e-05, 6.473599999999927e-05, 6.492999999999777e-05, 6.412500000000168e-05, 6.474999999999884e-05, 6.409699999999907e-05, 6.480600000000059e-05, 6.411100000000211e-05, 6.467999999999752e-05, 6.500000000000256e-05, 6.413900000000125e-05, 6.462499999999871e-05, 6.462499999999871e-05, 6.498599999999952e-05, 6.501400000000213e-05, 6.506900000000093e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.372" endtime="20201112 09:43:30.375"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.368" endtime="20201112 09:43:30.375"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.378" endtime="20201112 09:43:30.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.381" endtime="20201112 09:43:30.400"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.379" endtime="20201112 09:43:30.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.376" endtime="20201112 09:43:30.401"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.008" endtime="20201112 09:43:30.402"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.008" endtime="20201112 09:43:30.402"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.410" endtime="20201112 09:43:30.428"></status>
</kw>
<msg timestamp="20201112 09:43:30.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.409" endtime="20201112 09:43:30.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.429" endtime="20201112 09:43:30.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.432" endtime="20201112 09:43:30.434"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.406" endtime="20201112 09:43:30.435"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.404" endtime="20201112 09:43:30.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.442" endtime="20201112 09:43:30.726"></status>
</kw>
<msg timestamp="20201112 09:43:30.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.440" endtime="20201112 09:43:30.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021867639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.731" endtime="20201112 09:43:30.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.739" endtime="20201112 09:43:30.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.438" endtime="20201112 09:43:30.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.436" endtime="20201112 09:43:30.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:30.745" level="INFO">${RESULT} = [{'time': 0.021933417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.577799999999898e-05, 'source_diff': 6.577799999999898e-05}, {'time': 0.022004069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:30.742" endtime="20201112 09:43:30.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:30.760" level="INFO">${ACCURACY} = {'time': [0.021933417, 0.022004069, 0.022073056, 0.022143069, 0.022213083, 0.022282139, 0.022352097, 0.022422083, 0.022492097, 0.022561111, 0.022631111, 0.022701125, 0.022771125, 0.022841111, 0.022911...</msg>
<status status="PASS" starttime="20201112 09:43:30.746" endtime="20201112 09:43:30.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.764" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 09:43:30.763" endtime="20201112 09:43:30.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.767" level="INFO">VALUE: [6.577799999999898e-05, 6.579100000000254e-05, 6.515300000000182e-05, 6.574999999999984e-05, 6.5889000000003e-05, 6.52220000000002e-05, 6.568000000000199e-05, 6.567999999999852e-05, 6.59029999999991e-05, 6.50969999999966e-05, 6.567999999999852e-05, 6.570799999999766e-05, 6.595800000000138e-05, 6.565300000000232e-05, 6.562499999999971e-05, 6.511099999999964e-05, 6.573600000000027e-05, 6.595800000000138e-05, 6.59440000000018e-05, 6.568099999999799e-05, 6.508399999999998e-05, 6.565299999999885e-05, 6.568099999999799e-05, 6.563899999999928e-05, 6.593100000000171e-05, 6.561199999999962e-05, 6.574999999999984e-05, 6.505600000000084e-05, 6.586100000000039e-05, 6.57769999999995e-05, 6.584699999999735e-05, 6.581899999999821e-05, 6.517999999999802e-05, 6.600000000000009e-05, 6.517999999999802e-05, 6.566599999999895e-05, 6.587499999999996e-05, 6.60419999999988e-05, 6.565300000000232e-05, 6.50700000000004e-05, 6.518100000000096e-05, 6.50830000000005e-05, 6.57639999999994e-05, 6.577799999999898e-05, 6.580600000000159e-05, 6.566700000000189e-05, 6.569500000000103e-05, 6.568100000000146e-05, 6.508399999999998e-05, 6.50700000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:43:30.765" endtime="20201112 09:43:30.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.761" endtime="20201112 09:43:30.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.770" endtime="20201112 09:43:30.772"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:30.774" endtime="20201112 09:43:30.793"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.772" endtime="20201112 09:43:30.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.769" endtime="20201112 09:43:30.794"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.403" endtime="20201112 09:43:30.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.402" endtime="20201112 09:43:30.795"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.803" endtime="20201112 09:43:30.821"></status>
</kw>
<msg timestamp="20201112 09:43:30.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.802" endtime="20201112 09:43:30.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:30.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:30.822" endtime="20201112 09:43:30.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.825" endtime="20201112 09:43:30.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.799" endtime="20201112 09:43:30.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.797" endtime="20201112 09:43:30.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:30.835" endtime="20201112 09:43:31.121"></status>
</kw>
<msg timestamp="20201112 09:43:31.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:30.833" endtime="20201112 09:43:31.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022162833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022230319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.125" endtime="20201112 09:43:31.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.133" endtime="20201112 09:43:31.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.831" endtime="20201112 09:43:31.135"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.829" endtime="20201112 09:43:31.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.140" level="INFO">${RESULT} = [{'time': 0.022230319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.748599999999855e-05, 'source_diff': 6.748599999999855e-05}, {'time': 0.022302014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.137" endtime="20201112 09:43:31.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.153" level="INFO">${ACCURACY} = {'time': [0.022230319, 0.022302014, 0.022372972, 0.022443972, 0.022514986, 0.022585972, 0.022656986, 0.022727986, 0.022798986, 0.02287, 0.022941, 0.023012028, 0.023083056, 0.023153014, 0.023224042, 0....</msg>
<status status="PASS" starttime="20201112 09:43:31.141" endtime="20201112 09:43:31.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.158" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.157" endtime="20201112 09:43:31.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.160" level="INFO">VALUE: [6.748599999999855e-05, 6.698599999999805e-05, 6.687500000000096e-05, 6.684699999999835e-05, 6.700000000000109e-05, 6.666599999999995e-05, 6.673600000000127e-05, 6.679199999999955e-05, 6.67640000000004e-05, 6.679200000000302e-05, 6.663900000000028e-05, 6.679199999999955e-05, 6.701400000000066e-05, 6.615299999999935e-05, 6.675000000000084e-05, 6.681999999999869e-05, 6.683400000000173e-05, 6.687500000000096e-05, 6.60839999999975e-05, 6.70419999999998e-05, 6.668100000000246e-05, 6.663900000000028e-05, 6.663800000000081e-05, 6.697199999999848e-05, 6.702800000000023e-05, 6.606900000000193e-05, 6.697199999999848e-05, 6.675000000000084e-05, 6.694399999999934e-05, 6.667999999999952e-05, 6.662500000000071e-05, 6.702800000000023e-05, 6.609700000000107e-05, 6.686100000000139e-05, 6.705599999999937e-05, 6.680599999999912e-05, 6.709700000000207e-05, 6.67640000000004e-05, 6.615299999999935e-05, 6.605600000000184e-05, 6.694499999999881e-05, 6.605599999999837e-05, 6.611100000000064e-05, 6.665199999999691e-05, 6.616599999999945e-05, 6.606999999999794e-05, 6.662500000000071e-05, 6.67770000000005e-05, 6.617999999999902e-05, 6.681899999999921e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.159" endtime="20201112 09:43:31.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.154" endtime="20201112 09:43:31.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.164" endtime="20201112 09:43:31.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.167" endtime="20201112 09:43:31.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.166" endtime="20201112 09:43:31.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.162" endtime="20201112 09:43:31.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.796" endtime="20201112 09:43:31.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:30.795" endtime="20201112 09:43:31.188"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.197" endtime="20201112 09:43:31.214"></status>
</kw>
<msg timestamp="20201112 09:43:31.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.195" endtime="20201112 09:43:31.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.215" endtime="20201112 09:43:31.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.218" endtime="20201112 09:43:31.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.193" endtime="20201112 09:43:31.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.191" endtime="20201112 09:43:31.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.228" endtime="20201112 09:43:31.514"></status>
</kw>
<msg timestamp="20201112 09:43:31.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.226" endtime="20201112 09:43:31.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021704569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021772361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.518" endtime="20201112 09:43:31.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.527" endtime="20201112 09:43:31.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.224" endtime="20201112 09:43:31.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.222" endtime="20201112 09:43:31.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.533" level="INFO">${RESULT} = [{'time': 0.021772361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.779200000000055e-05, 'source_diff': 6.779200000000055e-05}, {'time': 0.021845, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:31.530" endtime="20201112 09:43:31.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.547" level="INFO">${ACCURACY} = {'time': [0.021772361, 0.021845, 0.021917, 0.021988014, 0.022059014, 0.022131028, 0.022203042, 0.022274042, 0.022345042, 0.022417056, 0.022489056, 0.022561056, 0.022633056, 0.022704125, 0.022775097, 0...</msg>
<status status="PASS" starttime="20201112 09:43:31.534" endtime="20201112 09:43:31.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.551" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.550" endtime="20201112 09:43:31.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.554" level="INFO">VALUE: [6.779200000000055e-05, 6.747199999999898e-05, 6.788899999999806e-05, 6.705599999999937e-05, 6.706999999999894e-05, 6.786099999999892e-05, 6.798599999999905e-05, 6.713900000000078e-05, 6.711099999999817e-05, 6.762500000000171e-05, 6.788900000000153e-05, 6.802799999999776e-05, 6.781999999999969e-05, 6.713899999999731e-05, 6.712500000000121e-05, 6.784699999999935e-05, 6.77640000000014e-05, 6.77359999999988e-05, 6.716699999999992e-05, 6.774999999999837e-05, 6.805500000000089e-05, 6.79030000000011e-05, 6.716699999999992e-05, 6.795799999999991e-05, 6.770799999999966e-05, 6.794499999999981e-05, 6.718099999999949e-05, 6.77359999999988e-05, 6.784699999999935e-05, 6.772199999999923e-05, 6.80420000000008e-05, 6.783399999999926e-05, 6.713900000000078e-05, 6.774999999999837e-05, 6.708299999999903e-05, 6.766600000000095e-05, 6.779200000000055e-05, 6.713800000000131e-05, 6.802699999999828e-05, 6.713900000000078e-05, 6.768000000000052e-05, 6.77359999999988e-05, 6.795799999999991e-05, 6.766700000000042e-05, 6.772199999999923e-05, 6.781900000000021e-05, 6.77220000000027e-05, 6.798599999999905e-05, 6.80420000000008e-05, 6.779200000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.552" endtime="20201112 09:43:31.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.548" endtime="20201112 09:43:31.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.557" endtime="20201112 09:43:31.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.561" endtime="20201112 09:43:31.580"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.559" endtime="20201112 09:43:31.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.556" endtime="20201112 09:43:31.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.189" endtime="20201112 09:43:31.581"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.189" endtime="20201112 09:43:31.582"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.590" endtime="20201112 09:43:31.608"></status>
</kw>
<msg timestamp="20201112 09:43:31.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.589" endtime="20201112 09:43:31.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.609" endtime="20201112 09:43:31.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.612" endtime="20201112 09:43:31.614"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.586" endtime="20201112 09:43:31.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.584" endtime="20201112 09:43:31.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.622" endtime="20201112 09:43:31.908"></status>
</kw>
<msg timestamp="20201112 09:43:31.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.620" endtime="20201112 09:43:31.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022258264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022327292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:31.912" endtime="20201112 09:43:31.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.920" endtime="20201112 09:43:31.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.618" endtime="20201112 09:43:31.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.616" endtime="20201112 09:43:31.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:31.927" level="INFO">${RESULT} = [{'time': 0.022327292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.902799999999876e-05, 'source_diff': 6.902799999999876e-05}, {'time': 0.022400931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:31.923" endtime="20201112 09:43:31.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:31.940" level="INFO">${ACCURACY} = {'time': [0.022327292, 0.022400931, 0.022473931, 0.022546972, 0.022619931, 0.022692931, 0.022765944, 0.022838944, 0.022910944, 0.022984042, 0.023056958, 0.023129958, 0.023201972, 0.023273972, 0.023345...</msg>
<status status="PASS" starttime="20201112 09:43:31.928" endtime="20201112 09:43:31.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.945" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 09:43:31.944" endtime="20201112 09:43:31.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:31.947" level="INFO">VALUE: [6.902799999999876e-05, 6.890299999999863e-05, 6.895900000000038e-05, 6.888899999999906e-05, 6.893099999999777e-05, 6.902799999999876e-05, 6.886099999999992e-05, 6.89299999999983e-05, 6.805499999999742e-05, 6.912499999999974e-05, 6.89299999999983e-05, 6.895799999999744e-05, 6.808300000000003e-05, 6.813900000000178e-05, 6.811099999999917e-05, 6.883300000000078e-05, 6.819400000000059e-05, 6.816700000000092e-05, 6.891700000000167e-05, 6.811099999999917e-05, 6.880600000000112e-05, 6.874999999999937e-05, 6.815299999999788e-05, 6.887499999999949e-05, 6.898600000000005e-05, 6.859800000000305e-05, 6.902800000000223e-05, 6.887499999999949e-05, 6.869499999999709e-05, 6.813900000000178e-05, 6.886099999999992e-05, 6.893000000000177e-05, 6.884700000000035e-05, 6.868000000000152e-05, 6.812500000000221e-05, 6.899999999999962e-05, 6.879100000000207e-05, 6.866600000000195e-05, 6.805500000000089e-05, 6.818100000000049e-05, 6.879200000000155e-05, 6.815300000000135e-05, 6.816700000000092e-05, 6.90559999999979e-05, 6.904099999999885e-05, 6.872200000000023e-05, 6.87359999999998e-05, 6.80969999999996e-05, 6.89169999999982e-05, 6.815300000000135e-05]</msg>
<status status="PASS" starttime="20201112 09:43:31.946" endtime="20201112 09:43:31.953"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.941" endtime="20201112 09:43:31.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.956" endtime="20201112 09:43:31.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:31.959" endtime="20201112 09:43:31.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.958" endtime="20201112 09:43:31.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.954" endtime="20201112 09:43:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.582" endtime="20201112 09:43:31.980"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.582" endtime="20201112 09:43:31.980"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:31.989" endtime="20201112 09:43:32.005"></status>
</kw>
<msg timestamp="20201112 09:43:32.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:31.987" endtime="20201112 09:43:32.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.007" endtime="20201112 09:43:32.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.009" endtime="20201112 09:43:32.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.985" endtime="20201112 09:43:32.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.982" endtime="20201112 09:43:32.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.019" endtime="20201112 09:43:32.306"></status>
</kw>
<msg timestamp="20201112 09:43:32.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.018" endtime="20201112 09:43:32.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022069986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.310" endtime="20201112 09:43:32.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.318" endtime="20201112 09:43:32.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.015" endtime="20201112 09:43:32.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.013" endtime="20201112 09:43:32.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.325" level="INFO">${RESULT} = [{'time': 0.022069986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.980499999999917e-05, 'source_diff': 6.980499999999917e-05}, {'time': 0.022144625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.321" endtime="20201112 09:43:32.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.339" level="INFO">${ACCURACY} = {'time': [0.022069986, 0.022144625, 0.022217597, 0.022291597, 0.022365597, 0.022439625, 0.022513611, 0.022586625, 0.022660611, 0.022734625, 0.022807625, 0.022880639, 0.022954653, 0.023028639, 0.023102...</msg>
<status status="PASS" starttime="20201112 09:43:32.326" endtime="20201112 09:43:32.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.344" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.343" endtime="20201112 09:43:32.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.346" level="INFO">VALUE: [6.980499999999917e-05, 6.984700000000135e-05, 6.919399999999812e-05, 6.952799999999926e-05, 6.984700000000135e-05, 6.965300000000285e-05, 6.988900000000006e-05, 6.908299999999756e-05, 6.970800000000166e-05, 6.993100000000224e-05, 6.905600000000137e-05, 6.90420000000018e-05, 6.962499999999677e-05, 7.000000000000062e-05, 6.961100000000067e-05, 6.915299999999888e-05, 6.980600000000212e-05, 6.962500000000024e-05, 6.995900000000138e-05, 6.980600000000212e-05, 6.984699999999788e-05, 6.990200000000016e-05, 6.983300000000178e-05, 6.97499999999969e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.976399999999994e-05, 6.913900000000278e-05, 6.975000000000037e-05, 6.962500000000024e-05, 6.991700000000267e-05, 6.90970000000006e-05, 6.977799999999951e-05, 6.969499999999809e-05, 6.99169999999992e-05, 6.991700000000267e-05, 6.979200000000255e-05, 7.000000000000062e-05, 6.979200000000255e-05, 6.918100000000149e-05, 6.912499999999974e-05, 6.905600000000137e-05, 6.965299999999938e-05, 6.994499999999834e-05, 6.911199999999965e-05, 6.97909999999996e-05, 6.969399999999862e-05, 6.99299999999993e-05, 6.917999999999855e-05, 6.970800000000166e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.345" endtime="20201112 09:43:32.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.340" endtime="20201112 09:43:32.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.350" endtime="20201112 09:43:32.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.353" endtime="20201112 09:43:32.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.352" endtime="20201112 09:43:32.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.348" endtime="20201112 09:43:32.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.981" endtime="20201112 09:43:32.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:31.980" endtime="20201112 09:43:32.374"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.382" endtime="20201112 09:43:32.400"></status>
</kw>
<msg timestamp="20201112 09:43:32.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.381" endtime="20201112 09:43:32.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.401" endtime="20201112 09:43:32.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.404" endtime="20201112 09:43:32.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.378" endtime="20201112 09:43:32.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.376" endtime="20201112 09:43:32.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.414" endtime="20201112 09:43:32.700"></status>
</kw>
<msg timestamp="20201112 09:43:32.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.412" endtime="20201112 09:43:32.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021768819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021840278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.704" endtime="20201112 09:43:32.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.713" endtime="20201112 09:43:32.714"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.410" endtime="20201112 09:43:32.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.408" endtime="20201112 09:43:32.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:32.719" level="INFO">${RESULT} = [{'time': 0.021840278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.145900000000288e-05, 'source_diff': 7.145900000000288e-05}, {'time': 0.021915903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:32.716" endtime="20201112 09:43:32.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:32.733" level="INFO">${ACCURACY} = {'time': [0.021840278, 0.021915903, 0.021990903, 0.022065917, 0.022139958, 0.022213931, 0.022287944, 0.022362944, 0.022436958, 0.022510944, 0.022585958, 0.022660958, 0.022735972, 0.022809986, 0.022884...</msg>
<status status="PASS" starttime="20201112 09:43:32.720" endtime="20201112 09:43:32.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.737" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 09:43:32.736" endtime="20201112 09:43:32.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.740" level="INFO">VALUE: [7.145900000000288e-05, 7.081999999999922e-05, 7.063900000000081e-05, 7.063900000000081e-05, 7.00970000000016e-05, 7.008399999999804e-05, 7.013800000000084e-05, 7.080500000000017e-05, 7.006899999999899e-05, 7.006900000000246e-05, 7.101400000000119e-05, 7.069399999999962e-05, 7.084699999999888e-05, 7.020800000000216e-05, 7.052800000000026e-05, 7.07360000000018e-05, 7.079200000000008e-05, 7.083299999999931e-05, 7.077800000000051e-05, 7.068099999999952e-05, 7.065300000000038e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.012499999999727e-05, 7.095900000000238e-05, 7.102800000000076e-05, 7.015299999999988e-05, 7.073599999999833e-05, 7.094399999999987e-05, 7.088800000000159e-05, 7.068000000000005e-05, 7.080500000000017e-05, 7.07499999999979e-05, 7.105500000000042e-05, 7.006899999999899e-05, 7.076400000000094e-05, 7.072199999999876e-05, 7.094399999999987e-05, 7.088900000000106e-05, 7.076400000000094e-05, 7.081899999999974e-05, 7.072199999999876e-05, 7.09170000000002e-05, 7.094499999999934e-05, 7.097200000000248e-05, 7.079200000000008e-05, 7.102800000000076e-05, 7.10559999999999e-05, 7.009800000000108e-05, 7.070899999999866e-05]</msg>
<status status="PASS" starttime="20201112 09:43:32.738" endtime="20201112 09:43:32.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.734" endtime="20201112 09:43:32.741"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.743" endtime="20201112 09:43:32.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:32.747" endtime="20201112 09:43:32.766"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.745" endtime="20201112 09:43:32.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.742" endtime="20201112 09:43:32.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.375" endtime="20201112 09:43:32.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.374" endtime="20201112 09:43:32.768"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.776" endtime="20201112 09:43:32.793"></status>
</kw>
<msg timestamp="20201112 09:43:32.794" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.775" endtime="20201112 09:43:32.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:32.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:32.795" endtime="20201112 09:43:32.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.797" endtime="20201112 09:43:32.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.772" endtime="20201112 09:43:32.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.770" endtime="20201112 09:43:32.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:32.807" endtime="20201112 09:43:33.093"></status>
</kw>
<msg timestamp="20201112 09:43:33.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:32.806" endtime="20201112 09:43:33.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021876375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.097" endtime="20201112 09:43:33.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.105" endtime="20201112 09:43:33.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.803" endtime="20201112 09:43:33.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.801" endtime="20201112 09:43:33.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.112" level="INFO">${RESULT} = [{'time': 0.021876375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.213899999999884e-05, 'source_diff': 7.213899999999884e-05}, {'time': 0.021953014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.108" endtime="20201112 09:43:33.112"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.125" level="INFO">${ACCURACY} = {'time': [0.021876375, 0.021953014, 0.022028014, 0.022104028, 0.022179069, 0.022255069, 0.022331042, 0.022406111, 0.022482125, 0.022558056, 0.022633069, 0.022709069, 0.022784069, 0.022860083, 0.022936...</msg>
<status status="PASS" starttime="20201112 09:43:33.113" endtime="20201112 09:43:33.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.130" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.129" endtime="20201112 09:43:33.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.132" level="INFO">VALUE: [7.213899999999884e-05, 7.19170000000012e-05, 7.106999999999947e-05, 7.177800000000151e-05, 7.115199999999794e-05, 7.198599999999958e-05, 7.163899999999834e-05, 7.118000000000055e-05, 7.179199999999761e-05, 7.176399999999847e-05, 7.105500000000042e-05, 7.198599999999958e-05, 7.113800000000184e-05, 7.199999999999915e-05, 7.181900000000074e-05, 7.199999999999915e-05, 7.176399999999847e-05, 7.108299999999956e-05, 7.109699999999913e-05, 7.194500000000034e-05, 7.180600000000065e-05, 7.166700000000095e-05, 7.188899999999859e-05, 7.116700000000045e-05, 7.191699999999773e-05, 7.176400000000194e-05, 7.165300000000138e-05, 7.188899999999859e-05, 7.168000000000105e-05, 7.159799999999911e-05, 7.202799999999829e-05, 7.176399999999847e-05, 7.163800000000234e-05, 7.201300000000271e-05, 7.165200000000191e-05, 7.181900000000074e-05, 7.169400000000062e-05, 7.204199999999786e-05, 7.18049999999977e-05, 7.105500000000042e-05, 7.193100000000077e-05, 7.201399999999872e-05, 7.123599999999883e-05, 7.144499999999984e-05, 7.186099999999945e-05, 7.172199999999976e-05, 7.201399999999872e-05, 7.112499999999827e-05, 7.190299999999816e-05, 7.19170000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.131" endtime="20201112 09:43:33.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.126" endtime="20201112 09:43:33.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.136" endtime="20201112 09:43:33.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.139" endtime="20201112 09:43:33.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.138" endtime="20201112 09:43:33.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.134" endtime="20201112 09:43:33.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.769" endtime="20201112 09:43:33.160"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:32.768" endtime="20201112 09:43:33.160"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.169" endtime="20201112 09:43:33.186"></status>
</kw>
<msg timestamp="20201112 09:43:33.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.167" endtime="20201112 09:43:33.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.188" endtime="20201112 09:43:33.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.190" endtime="20201112 09:43:33.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.165" endtime="20201112 09:43:33.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.163" endtime="20201112 09:43:33.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.200" endtime="20201112 09:43:33.485"></status>
</kw>
<msg timestamp="20201112 09:43:33.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022076181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.198" endtime="20201112 09:43:33.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022003097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022076181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.489" endtime="20201112 09:43:33.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.498" endtime="20201112 09:43:33.499"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.196" endtime="20201112 09:43:33.500"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.194" endtime="20201112 09:43:33.500"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.504" level="INFO">${RESULT} = [{'time': 0.022076181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.308400000000104e-05, 'source_diff': 7.308400000000104e-05}, {'time': 0.022153764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.501" endtime="20201112 09:43:33.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.518" level="INFO">${ACCURACY} = {'time': [0.022076181, 0.022153764, 0.022230778, 0.022307792, 0.022384792, 0.022461806, 0.022538792, 0.022615806, 0.022691806, 0.022768833, 0.022845833, 0.022921847, 0.022998833, 0.023075833, 0.023151...</msg>
<status status="PASS" starttime="20201112 09:43:33.505" endtime="20201112 09:43:33.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.522" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.521" endtime="20201112 09:43:33.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.525" level="INFO">VALUE: [7.308400000000104e-05, 7.251399999999922e-05, 7.276399999999947e-05, 7.29309999999983e-05, 7.288899999999959e-05, 7.280600000000165e-05, 7.273599999999686e-05, 7.288899999999959e-05, 7.208400000000004e-05, 7.267999999999858e-05, 7.290199999999969e-05, 7.20829999999971e-05, 7.304099999999938e-05, 7.281900000000174e-05, 7.205499999999795e-05, 7.218100000000102e-05, 7.266699999999848e-05, 7.301399999999972e-05, 7.220900000000016e-05, 7.290299999999916e-05, 7.279199999999861e-05, 7.269400000000162e-05, 7.295799999999797e-05, 7.283299999999784e-05, 7.29309999999983e-05, 7.277799999999904e-05, 7.27499999999999e-05, 7.212499999999927e-05, 7.277799999999904e-05, 7.281899999999827e-05, 7.213899999999884e-05, 7.25690000000015e-05, 7.219400000000112e-05, 7.284700000000088e-05, 7.281900000000174e-05, 7.295799999999797e-05, 7.28049999999987e-05, 7.263899999999934e-05, 7.287500000000002e-05, 7.26110000000002e-05, 7.270800000000119e-05, 7.208300000000056e-05, 7.279200000000208e-05, 7.295799999999797e-05, 7.279200000000208e-05, 7.263899999999934e-05, 7.297200000000101e-05, 7.218100000000102e-05, 7.290299999999916e-05, 7.208400000000004e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.523" endtime="20201112 09:43:33.526"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.519" endtime="20201112 09:43:33.526"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.528" endtime="20201112 09:43:33.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.532" endtime="20201112 09:43:33.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.530" endtime="20201112 09:43:33.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.527" endtime="20201112 09:43:33.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.161" endtime="20201112 09:43:33.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.160" endtime="20201112 09:43:33.553"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.561" endtime="20201112 09:43:33.579"></status>
</kw>
<msg timestamp="20201112 09:43:33.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.560" endtime="20201112 09:43:33.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.580" endtime="20201112 09:43:33.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.583" endtime="20201112 09:43:33.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.557" endtime="20201112 09:43:33.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.555" endtime="20201112 09:43:33.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.593" endtime="20201112 09:43:33.877"></status>
</kw>
<msg timestamp="20201112 09:43:33.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.591" endtime="20201112 09:43:33.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021850125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021924403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.881" endtime="20201112 09:43:33.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.890" endtime="20201112 09:43:33.891"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.589" endtime="20201112 09:43:33.892"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.587" endtime="20201112 09:43:33.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:33.896" level="INFO">${RESULT} = [{'time': 0.021924403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.427799999999707e-05, 'source_diff': 7.427799999999707e-05}, {'time': 0.022003042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:33.893" endtime="20201112 09:43:33.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:33.911" level="INFO">${ACCURACY} = {'time': [0.021924403, 0.022003042, 0.022081042, 0.022159056, 0.022236056, 0.022314125, 0.022392083, 0.022470153, 0.022547083, 0.022625097, 0.022703097, 0.022781097, 0.022859125, 0.022937111, 0.023015...</msg>
<status status="PASS" starttime="20201112 09:43:33.897" endtime="20201112 09:43:33.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.915" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 09:43:33.914" endtime="20201112 09:43:33.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.918" level="INFO">VALUE: [7.427799999999707e-05, 7.359800000000111e-05, 7.366699999999948e-05, 7.387500000000102e-05, 7.318100000000202e-05, 7.380599999999918e-05, 7.388900000000059e-05, 7.404199999999986e-05, 7.312500000000027e-05, 7.377800000000004e-05, 7.366600000000001e-05, 7.388900000000059e-05, 7.390300000000016e-05, 7.372199999999829e-05, 7.400000000000115e-05, 7.39439999999994e-05, 7.312500000000027e-05, 7.381900000000274e-05, 7.402800000000029e-05, 7.372200000000176e-05, 7.316599999999951e-05, 7.395899999999844e-05, 7.368099999999905e-05, 7.309800000000061e-05, 7.395899999999844e-05, 7.397300000000148e-05, 7.312500000000027e-05, 7.317999999999908e-05, 7.316599999999951e-05, 7.383300000000231e-05, 7.379100000000013e-05, 7.366600000000001e-05, 7.316699999999898e-05, 7.316600000000298e-05, 7.370799999999872e-05, 7.387500000000102e-05, 7.319400000000212e-05, 7.383299999999884e-05, 7.388900000000059e-05, 7.31110000000007e-05, 7.404199999999986e-05, 7.363900000000034e-05, 7.30560000000019e-05, 7.370899999999819e-05, 7.369500000000209e-05, 7.366699999999948e-05, 7.315299999999941e-05, 7.307000000000147e-05, 7.383400000000179e-05, 7.31110000000007e-05]</msg>
<status status="PASS" starttime="20201112 09:43:33.916" endtime="20201112 09:43:33.918"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.912" endtime="20201112 09:43:33.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.921" endtime="20201112 09:43:33.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:33.925" endtime="20201112 09:43:33.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.923" endtime="20201112 09:43:33.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.920" endtime="20201112 09:43:33.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.553" endtime="20201112 09:43:33.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.553" endtime="20201112 09:43:33.946"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.954" endtime="20201112 09:43:33.972"></status>
</kw>
<msg timestamp="20201112 09:43:33.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.953" endtime="20201112 09:43:33.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:33.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:33.973" endtime="20201112 09:43:33.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.976" endtime="20201112 09:43:33.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.950" endtime="20201112 09:43:33.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.948" endtime="20201112 09:43:33.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:33.986" endtime="20201112 09:43:34.272"></status>
</kw>
<msg timestamp="20201112 09:43:34.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:33.984" endtime="20201112 09:43:34.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022260153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.276" endtime="20201112 09:43:34.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.284" endtime="20201112 09:43:34.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.982" endtime="20201112 09:43:34.286"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.980" endtime="20201112 09:43:34.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.291" level="INFO">${RESULT} = [{'time': 0.022260153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.559700000000016e-05, 'source_diff': 7.559700000000016e-05}, {'time': 0.022339736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.288" endtime="20201112 09:43:34.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.304" level="INFO">${ACCURACY} = {'time': [0.022260153, 0.022339736, 0.022418736, 0.02249775, 0.02257675, 0.022654764, 0.022733764, 0.022811778, 0.022890792, 0.022969778, 0.023048806, 0.023127792, 0.023206792, 0.023285819, 0.02336480...</msg>
<status status="PASS" starttime="20201112 09:43:34.292" endtime="20201112 09:43:34.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.309" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.308" endtime="20201112 09:43:34.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.311" level="INFO">VALUE: [7.559700000000016e-05, 7.448599999999861e-05, 7.486100000000245e-05, 7.491700000000073e-05, 7.484699999999941e-05, 7.413900000000084e-05, 7.494499999999987e-05, 7.408400000000204e-05, 7.480600000000018e-05, 7.491700000000073e-05, 7.498700000000205e-05, 7.466700000000048e-05, 7.483399999999932e-05, 7.45829999999996e-05, 7.474999999999843e-05, 7.479100000000113e-05, 7.472199999999929e-05, 7.474999999999843e-05, 7.416600000000051e-05, 7.481900000000027e-05, 7.495799999999997e-05, 7.491600000000126e-05, 7.405499999999995e-05, 7.494499999999987e-05, 7.472299999999876e-05, 7.416699999999998e-05, 7.502800000000129e-05, 7.461099999999873e-05, 7.504200000000086e-05, 7.47370000000018e-05, 7.469499999999962e-05, 7.479200000000061e-05, 7.472299999999876e-05, 7.47500000000019e-05, 7.494499999999987e-05, 7.488799999999865e-05, 7.416699999999998e-05, 7.48050000000007e-05, 7.40829999999991e-05, 7.416600000000051e-05, 7.484699999999941e-05, 7.401400000000072e-05, 7.472199999999929e-05, 7.409700000000213e-05, 7.481900000000027e-05, 7.502799999999782e-05, 7.487499999999855e-05, 7.470799999999972e-05, 7.470799999999972e-05, 7.479199999999714e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.310" endtime="20201112 09:43:34.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.305" endtime="20201112 09:43:34.313"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.315" endtime="20201112 09:43:34.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.318" endtime="20201112 09:43:34.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.317" endtime="20201112 09:43:34.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.313" endtime="20201112 09:43:34.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.946" endtime="20201112 09:43:34.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:33.946" endtime="20201112 09:43:34.339"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.348" endtime="20201112 09:43:34.364"></status>
</kw>
<msg timestamp="20201112 09:43:34.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.346" endtime="20201112 09:43:34.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.366" endtime="20201112 09:43:34.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.369" endtime="20201112 09:43:34.371"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.343" endtime="20201112 09:43:34.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.341" endtime="20201112 09:43:34.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.379" endtime="20201112 09:43:34.664"></status>
</kw>
<msg timestamp="20201112 09:43:34.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.377" endtime="20201112 09:43:34.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021717931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021794111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.668" endtime="20201112 09:43:34.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.676" endtime="20201112 09:43:34.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.375" endtime="20201112 09:43:34.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.373" endtime="20201112 09:43:34.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:34.683" level="INFO">${RESULT} = [{'time': 0.021794111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.618000000000208e-05, 'source_diff': 7.618000000000208e-05}, {'time': 0.021874764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:34.679" endtime="20201112 09:43:34.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:34.696" level="INFO">${ACCURACY} = {'time': [0.021794111, 0.021874764, 0.021954764, 0.022034764, 0.022113764, 0.022193764, 0.022273778, 0.022353778, 0.022433806, 0.022513806, 0.022593847, 0.022673819, 0.022753819, 0.022833833, 0.022913...</msg>
<status status="PASS" starttime="20201112 09:43:34.684" endtime="20201112 09:43:34.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.700" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 09:43:34.699" endtime="20201112 09:43:34.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.703" level="INFO">VALUE: [7.618000000000208e-05, 7.559700000000016e-05, 7.602800000000229e-05, 7.563899999999887e-05, 7.513900000000184e-05, 7.587499999999955e-05, 7.58890000000026e-05, 7.563900000000234e-05, 7.5763999999999e-05, 7.570900000000019e-05, 7.565300000000191e-05, 7.573599999999986e-05, 7.581900000000127e-05, 7.57500000000029e-05, 7.597199999999707e-05, 7.506900000000052e-05, 7.56249999999993e-05, 7.511099999999923e-05, 7.513899999999837e-05, 7.601399999999925e-05, 7.563899999999887e-05, 7.51110000000027e-05, 7.609800000000014e-05, 7.5763999999999e-05, 7.594500000000087e-05, 7.584700000000041e-05, 7.573599999999986e-05, 7.512500000000227e-05, 7.598600000000011e-05, 7.505600000000043e-05, 7.516699999999751e-05, 7.515300000000141e-05, 7.565200000000244e-05, 7.576400000000247e-05, 7.598600000000011e-05, 7.576400000000247e-05, 7.58890000000026e-05, 7.512500000000227e-05, 7.580599999999771e-05, 7.515300000000141e-05, 7.517999999999761e-05, 7.592999999999836e-05, 7.579199999999814e-05, 7.58189999999978e-05, 7.569399999999768e-05, 7.509699999999966e-05, 7.570900000000019e-05, 7.516700000000098e-05, 7.570800000000072e-05, 7.513899999999837e-05]</msg>
<status status="PASS" starttime="20201112 09:43:34.702" endtime="20201112 09:43:34.704"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.697" endtime="20201112 09:43:34.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.707" endtime="20201112 09:43:34.708"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:34.710" endtime="20201112 09:43:34.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.708" endtime="20201112 09:43:34.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.705" endtime="20201112 09:43:34.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.340" endtime="20201112 09:43:34.731"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.339" endtime="20201112 09:43:34.731"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.739" endtime="20201112 09:43:34.756"></status>
</kw>
<msg timestamp="20201112 09:43:34.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.738" endtime="20201112 09:43:34.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:34.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:34.758" endtime="20201112 09:43:34.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.760" endtime="20201112 09:43:34.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.735" endtime="20201112 09:43:34.763"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.733" endtime="20201112 09:43:34.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:34.770" endtime="20201112 09:43:35.056"></status>
</kw>
<msg timestamp="20201112 09:43:35.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:34.769" endtime="20201112 09:43:35.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021804458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.060" endtime="20201112 09:43:35.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.069" endtime="20201112 09:43:35.070"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.766" endtime="20201112 09:43:35.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.764" endtime="20201112 09:43:35.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.075" level="INFO">${RESULT} = [{'time': 0.021881931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.747300000000151e-05, 'source_diff': 7.747300000000151e-05}, {'time': 0.021963528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.072" endtime="20201112 09:43:35.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.089" level="INFO">${ACCURACY} = {'time': [0.021881931, 0.021963528, 0.022043542, 0.022124542, 0.022205542, 0.022286556, 0.022367556, 0.022448625, 0.022529583, 0.022610611, 0.022691597, 0.022772611, 0.022853597, 0.022934611, 0.023015...</msg>
<status status="PASS" starttime="20201112 09:43:35.076" endtime="20201112 09:43:35.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.093" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.092" endtime="20201112 09:43:35.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.096" level="INFO">VALUE: [7.747300000000151e-05, 7.698600000000111e-05, 7.613899999999937e-05, 7.697300000000101e-05, 7.673600000000086e-05, 7.688900000000012e-05, 7.673700000000033e-05, 7.69579999999985e-05, 7.669399999999868e-05, 7.665299999999944e-05, 7.684700000000141e-05, 7.702800000000329e-05, 7.683299999999837e-05, 7.695800000000197e-05, 7.687500000000055e-05, 7.705599999999896e-05, 7.688900000000012e-05, 7.688900000000012e-05, 7.620900000000069e-05, 7.654199999999889e-05, 7.61249999999998e-05, 7.672300000000076e-05, 7.670900000000119e-05, 7.609800000000014e-05, 7.697299999999754e-05, 7.606999999999753e-05, 7.675000000000043e-05, 7.691699999999926e-05, 7.683299999999837e-05, 7.683299999999837e-05, 7.602699999999935e-05, 7.687500000000055e-05, 7.702799999999982e-05, 7.68189999999988e-05, 7.679099999999967e-05, 7.670800000000172e-05, 7.673599999999739e-05, 7.670800000000172e-05, 7.691700000000273e-05, 7.616700000000198e-05, 7.669400000000215e-05, 7.693099999999883e-05, 7.66250000000003e-05, 7.666700000000248e-05, 7.681999999999828e-05, 7.669500000000162e-05, 7.61249999999998e-05, 7.618100000000155e-05, 7.677699999999663e-05, 7.675000000000043e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.094" endtime="20201112 09:43:35.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.089" endtime="20201112 09:43:35.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.099" endtime="20201112 09:43:35.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.103" endtime="20201112 09:43:35.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.101" endtime="20201112 09:43:35.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.098" endtime="20201112 09:43:35.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.732" endtime="20201112 09:43:35.123"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:34.731" endtime="20201112 09:43:35.124"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.132" endtime="20201112 09:43:35.150"></status>
</kw>
<msg timestamp="20201112 09:43:35.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.131" endtime="20201112 09:43:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.151" endtime="20201112 09:43:35.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.154" endtime="20201112 09:43:35.156"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.128" endtime="20201112 09:43:35.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.126" endtime="20201112 09:43:35.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.164" endtime="20201112 09:43:35.449"></status>
</kw>
<msg timestamp="20201112 09:43:35.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.162" endtime="20201112 09:43:35.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022031986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:35.453" endtime="20201112 09:43:35.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.462" endtime="20201112 09:43:35.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.160" endtime="20201112 09:43:35.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.158" endtime="20201112 09:43:35.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.468" level="INFO">${RESULT} = [{'time': 0.022110194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.820799999999975e-05, 'source_diff': 7.820799999999975e-05}, {'time': 0.022192819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:35.465" endtime="20201112 09:43:35.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.483" level="INFO">${ACCURACY} = {'time': [0.022110194, 0.022192819, 0.022274833, 0.022356833, 0.022438833, 0.022519847, 0.022601861, 0.022683861, 0.022765861, 0.022847861, 0.022928875, 0.023010875, 0.023092889, 0.023174889, 0.023256...</msg>
<status status="PASS" starttime="20201112 09:43:35.469" endtime="20201112 09:43:35.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.487" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.486" endtime="20201112 09:43:35.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.490" level="INFO">VALUE: [7.820799999999975e-05, 7.747199999999857e-05, 7.761100000000173e-05, 7.768000000000011e-05, 7.788899999999765e-05, 7.704099999999992e-05, 7.763900000000087e-05, 7.779200000000014e-05, 7.774999999999796e-05, 7.777800000000057e-05, 7.709700000000166e-05, 7.786099999999851e-05, 7.784699999999894e-05, 7.793099999999983e-05, 7.774999999999796e-05, 7.766700000000001e-05, 7.791700000000026e-05, 7.777800000000057e-05, 7.71250000000008e-05, 7.711200000000071e-05, 7.798699999999811e-05, 7.709700000000166e-05, 7.780500000000024e-05, 7.716600000000004e-05, 7.78189999999998e-05, 7.78189999999998e-05, 7.769500000000262e-05, 7.79030000000007e-05, 7.780500000000024e-05, 7.773600000000186e-05, 7.780599999999971e-05, 7.784699999999894e-05, 7.784700000000241e-05, 7.766700000000001e-05, 7.775000000000143e-05, 7.715299999999994e-05, 7.7764000000001e-05, 7.705599999999896e-05, 7.76250000000013e-05, 7.788899999999765e-05, 7.709800000000114e-05, 7.793099999999983e-05, 7.790200000000122e-05, 7.766600000000054e-05, 7.798599999999864e-05, 7.708299999999862e-05, 7.779100000000067e-05, 7.713900000000037e-05, 7.786100000000198e-05, 7.711100000000123e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.488" endtime="20201112 09:43:35.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.484" endtime="20201112 09:43:35.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.493" endtime="20201112 09:43:35.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.497" endtime="20201112 09:43:35.516"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.495" endtime="20201112 09:43:35.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.492" endtime="20201112 09:43:35.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.125" endtime="20201112 09:43:35.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.124" endtime="20201112 09:43:35.517"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.526" endtime="20201112 09:43:35.544"></status>
</kw>
<msg timestamp="20201112 09:43:35.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.525" endtime="20201112 09:43:35.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.546" endtime="20201112 09:43:35.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.548" endtime="20201112 09:43:35.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.522" endtime="20201112 09:43:35.551"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.520" endtime="20201112 09:43:35.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.558" endtime="20201112 09:43:35.844"></status>
</kw>
<msg timestamp="20201112 09:43:35.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021670042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:35.557" endtime="20201112 09:43:35.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021670042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0217495, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:43:35.849" endtime="20201112 09:43:35.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.857" endtime="20201112 09:43:35.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.554" endtime="20201112 09:43:35.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.552" endtime="20201112 09:43:35.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:35.864" level="INFO">${RESULT} = [{'time': 0.0217495, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.9458000000001e-05, 'source_diff': 7.9458000000001e-05}, {'time': 0.021833181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.8...</msg>
<status status="PASS" starttime="20201112 09:43:35.860" endtime="20201112 09:43:35.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:35.877" level="INFO">${ACCURACY} = {'time': [0.0217495, 0.021833181, 0.021916139, 0.021998181, 0.022080194, 0.022163167, 0.022246236, 0.022328181, 0.022411194, 0.022494236, 0.022577208, 0.022659222, 0.022741208, 0.022823208, 0.02290623...</msg>
<status status="PASS" starttime="20201112 09:43:35.865" endtime="20201112 09:43:35.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.881" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 09:43:35.880" endtime="20201112 09:43:35.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.884" level="INFO">VALUE: [7.9458000000001e-05, 7.879200000000114e-05, 7.887500000000255e-05, 7.80839999999991e-05, 7.820799999999975e-05, 7.877800000000157e-05, 7.867999999999764e-05, 7.811199999999824e-05, 7.899999999999921e-05, 7.863900000000187e-05, 7.875000000000243e-05, 7.818000000000061e-05, 7.811099999999876e-05, 7.805500000000049e-05, 7.879200000000114e-05, 7.861099999999926e-05, 7.89580000000005e-05, 7.880599999999724e-05, 7.866699999999754e-05, 7.893100000000083e-05, 7.865300000000144e-05, 7.89580000000005e-05, 7.899999999999921e-05, 7.812499999999833e-05, 7.89030000000017e-05, 7.886200000000246e-05, 7.869500000000015e-05, 7.893100000000083e-05, 7.901399999999878e-05, 7.893100000000083e-05, 7.888899999999865e-05, 7.862499999999883e-05, 7.894399999999746e-05, 7.813900000000137e-05, 7.80969999999992e-05, 7.867999999999764e-05, 7.87779999999981e-05, 7.901400000000225e-05, 7.869400000000068e-05, 7.877800000000157e-05, 7.863900000000187e-05, 7.808299999999962e-05, 7.86250000000023e-05, 7.877800000000157e-05, 7.882000000000028e-05, 7.86389999999984e-05, 7.806999999999953e-05, 7.870899999999972e-05, 7.888900000000212e-05, 7.811099999999876e-05]</msg>
<status status="PASS" starttime="20201112 09:43:35.882" endtime="20201112 09:43:35.885"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.878" endtime="20201112 09:43:35.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.888" endtime="20201112 09:43:35.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:35.891" endtime="20201112 09:43:35.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.889" endtime="20201112 09:43:35.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.886" endtime="20201112 09:43:35.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.518" endtime="20201112 09:43:35.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.518" endtime="20201112 09:43:35.912"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.920" endtime="20201112 09:43:35.938"></status>
</kw>
<msg timestamp="20201112 09:43:35.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.919" endtime="20201112 09:43:35.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:35.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:35.940" endtime="20201112 09:43:35.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.942" endtime="20201112 09:43:35.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.916" endtime="20201112 09:43:35.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.914" endtime="20201112 09:43:35.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:35.952" endtime="20201112 09:43:36.238"></status>
</kw>
<msg timestamp="20201112 09:43:36.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:35.950" endtime="20201112 09:43:36.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022253056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02233275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:36.242" endtime="20201112 09:43:36.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.251" endtime="20201112 09:43:36.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.948" endtime="20201112 09:43:36.253"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.946" endtime="20201112 09:43:36.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.257" level="INFO">${RESULT} = [{'time': 0.02233275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.969399999999821e-05, 'source_diff': 7.969399999999821e-05}, {'time': 0.022417375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:36.254" endtime="20201112 09:43:36.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.271" level="INFO">${ACCURACY} = {'time': [0.02233275, 0.022417375, 0.022501389, 0.022585389, 0.022669389, 0.022752417, 0.022835403, 0.022919444, 0.023002431, 0.023085431, 0.023168514, 0.023252431, 0.023336458, 0.023420444, 0.0235044...</msg>
<status status="PASS" starttime="20201112 09:43:36.258" endtime="20201112 09:43:36.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.275" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.274" endtime="20201112 09:43:36.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.278" level="INFO">VALUE: [7.969399999999821e-05, 7.993099999999836e-05, 7.993100000000183e-05, 7.970800000000125e-05, 7.998600000000064e-05, 7.919500000000065e-05, 7.913900000000237e-05, 7.986100000000051e-05, 7.918100000000108e-05, 7.90840000000001e-05, 7.915300000000194e-05, 7.979200000000214e-05, 7.973600000000039e-05, 7.998599999999717e-05, 7.969399999999821e-05, 7.966599999999907e-05, 7.908300000000063e-05, 7.96389999999994e-05, 7.917999999999814e-05, 7.908299999999716e-05, 7.97779999999991e-05, 7.96389999999994e-05, 7.981899999999834e-05, 7.998600000000064e-05, 7.965300000000244e-05, 7.99719999999976e-05, 7.994499999999793e-05, 7.913900000000237e-05, 7.981999999999781e-05, 7.998600000000064e-05, 7.991599999999932e-05, 7.988800000000018e-05, 7.90970000000002e-05, 7.904100000000192e-05, 7.90970000000002e-05, 7.98190000000018e-05, 7.983300000000138e-05, 7.969400000000168e-05, 7.995799999999803e-05, 7.917999999999814e-05, 7.965299999999897e-05, 7.98329999999979e-05, 7.972200000000082e-05, 7.91389999999989e-05, 7.915300000000194e-05, 8.000000000000021e-05, 7.990299999999922e-05, 7.907000000000053e-05, 8.002799999999935e-05, 7.995900000000097e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.276" endtime="20201112 09:43:36.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.272" endtime="20201112 09:43:36.279"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.281" endtime="20201112 09:43:36.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.285" endtime="20201112 09:43:36.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.283" endtime="20201112 09:43:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.280" endtime="20201112 09:43:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.913" endtime="20201112 09:43:36.305"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:35.912" endtime="20201112 09:43:36.306"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.314" endtime="20201112 09:43:36.332"></status>
</kw>
<msg timestamp="20201112 09:43:36.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.313" endtime="20201112 09:43:36.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.333" endtime="20201112 09:43:36.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.336" endtime="20201112 09:43:36.338"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.310" endtime="20201112 09:43:36.339"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.308" endtime="20201112 09:43:36.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.346" endtime="20201112 09:43:36.631"></status>
</kw>
<msg timestamp="20201112 09:43:36.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.344" endtime="20201112 09:43:36.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021831667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021913111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.635" endtime="20201112 09:43:36.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.643" endtime="20201112 09:43:36.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.342" endtime="20201112 09:43:36.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.340" endtime="20201112 09:43:36.646"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:36.650" level="INFO">${RESULT} = [{'time': 0.021913111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.144399999999996e-05, 'source_diff': 8.144399999999996e-05}, {'time': 0.02199875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:36.647" endtime="20201112 09:43:36.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:36.663" level="INFO">${ACCURACY} = {'time': [0.021913111, 0.02199875, 0.022083819, 0.022168792, 0.022252764, 0.022337806, 0.022421778, 0.022506806, 0.022590806, 0.022675861, 0.022760806, 0.022845819, 0.022930833, 0.023015819, 0.0231008...</msg>
<status status="PASS" starttime="20201112 09:43:36.651" endtime="20201112 09:43:36.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.668" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 09:43:36.667" endtime="20201112 09:43:36.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.671" level="INFO">VALUE: [8.144399999999996e-05, 8.090300000000022e-05, 8.081899999999934e-05, 8.102800000000035e-05, 8.01389999999999e-05, 8.09450000000024e-05, 8.011100000000076e-05, 8.079199999999967e-05, 8.018100000000208e-05, 8.105500000000002e-05, 8.07230000000013e-05, 8.07910000000002e-05, 8.087500000000108e-05, 8.08329999999989e-05, 8.094400000000293e-05, 8.072199999999835e-05, 8.062500000000083e-05, 8.016600000000304e-05, 8.006899999999859e-05, 8.017999999999914e-05, 8.086100000000151e-05, 8.012500000000033e-05, 8.011100000000076e-05, 8.094499999999893e-05, 8.075000000000096e-05, 8.076400000000053e-05, 8.069500000000215e-05, 8.087499999999762e-05, 8.09169999999998e-05, 8.094499999999893e-05, 8.081999999999881e-05, 8.090199999999728e-05, 8.069399999999921e-05, 8.068000000000311e-05, 8.080499999999977e-05, 8.084700000000195e-05, 8.07910000000002e-05, 8.086100000000151e-05, 8.104100000000045e-05, 8.068099999999911e-05, 8.102800000000035e-05, 8.100000000000121e-05, 8.098600000000164e-05, 8.01389999999999e-05, 8.095799999999903e-05, 8.063899999999694e-05, 8.097300000000154e-05, 8.09719999999986e-05, 8.066699999999954e-05, 8.01389999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:43:36.669" endtime="20201112 09:43:36.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.664" endtime="20201112 09:43:36.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.674" endtime="20201112 09:43:36.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:36.678" endtime="20201112 09:43:36.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.676" endtime="20201112 09:43:36.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.672" endtime="20201112 09:43:36.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.307" endtime="20201112 09:43:36.698"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.306" endtime="20201112 09:43:36.698"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.707" endtime="20201112 09:43:36.725"></status>
</kw>
<msg timestamp="20201112 09:43:36.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.705" endtime="20201112 09:43:36.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:36.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:36.727" endtime="20201112 09:43:36.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.729" endtime="20201112 09:43:36.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.703" endtime="20201112 09:43:36.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.701" endtime="20201112 09:43:36.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:36.739" endtime="20201112 09:43:37.024"></status>
</kw>
<msg timestamp="20201112 09:43:37.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:36.738" endtime="20201112 09:43:37.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021867792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.029" endtime="20201112 09:43:37.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.037" endtime="20201112 09:43:37.038"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.735" endtime="20201112 09:43:37.039"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.733" endtime="20201112 09:43:37.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.043" level="INFO">${RESULT} = [{'time': 0.021867792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.212499999999887e-05, 'source_diff': 8.212499999999887e-05}, {'time': 0.021954417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:37.040" endtime="20201112 09:43:37.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.058" level="INFO">${ACCURACY} = {'time': [0.021867792, 0.021954417, 0.022040431, 0.022126431, 0.022212444, 0.022298458, 0.022384528, 0.022470472, 0.0225565, 0.022642472, 0.022727472, 0.022813486, 0.022899514, 0.0229845, 0.023070528,...</msg>
<status status="PASS" starttime="20201112 09:43:37.044" endtime="20201112 09:43:37.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.062" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.061" endtime="20201112 09:43:37.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.065" level="INFO">VALUE: [8.212499999999887e-05, 8.16109999999988e-05, 8.19170000000008e-05, 8.184799999999895e-05, 8.180500000000077e-05, 8.180500000000077e-05, 8.202800000000135e-05, 8.158299999999966e-05, 8.170799999999978e-05, 8.173599999999892e-05, 8.11659999999971e-05, 8.170799999999978e-05, 8.187499999999862e-05, 8.104199999999992e-05, 8.17780000000011e-05, 8.116700000000004e-05, 8.184699999999948e-05, 8.109699999999873e-05, 8.111100000000177e-05, 8.190299999999776e-05, 8.174999999999849e-05, 8.191600000000132e-05, 8.180600000000024e-05, 8.169499999999968e-05, 8.173599999999892e-05, 8.170799999999978e-05, 8.194400000000046e-05, 8.172199999999935e-05, 8.102800000000035e-05, 8.106899999999959e-05, 8.17919999999972e-05, 8.175000000000196e-05, 8.16390000000014e-05, 8.113899999999744e-05, 8.112500000000133e-05, 8.111100000000177e-05, 8.115300000000047e-05, 8.16109999999988e-05, 8.118099999999961e-05, 8.112500000000133e-05, 8.176400000000153e-05, 8.202800000000135e-05, 8.191699999999733e-05, 8.109800000000167e-05, 8.198599999999917e-05, 8.195800000000003e-05, 8.112500000000133e-05, 8.176400000000153e-05, 8.169399999999674e-05, 8.187500000000208e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.063" endtime="20201112 09:43:37.069"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.059" endtime="20201112 09:43:37.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.072" endtime="20201112 09:43:37.073"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.076" endtime="20201112 09:43:37.095"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.074" endtime="20201112 09:43:37.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.070" endtime="20201112 09:43:37.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.699" endtime="20201112 09:43:37.096"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:36.699" endtime="20201112 09:43:37.096"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.105" endtime="20201112 09:43:37.123"></status>
</kw>
<msg timestamp="20201112 09:43:37.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.103" endtime="20201112 09:43:37.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.125" endtime="20201112 09:43:37.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.127" endtime="20201112 09:43:37.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.101" endtime="20201112 09:43:37.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.099" endtime="20201112 09:43:37.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.137" endtime="20201112 09:43:37.424"></status>
</kw>
<msg timestamp="20201112 09:43:37.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.136" endtime="20201112 09:43:37.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.428" endtime="20201112 09:43:37.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.436" endtime="20201112 09:43:37.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.133" endtime="20201112 09:43:37.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.131" endtime="20201112 09:43:37.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.443" level="INFO">${RESULT} = [{'time': 0.022008361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.327799999999913e-05, 'source_diff': 8.327799999999913e-05}, {'time': 0.022096, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 09:43:37.439" endtime="20201112 09:43:37.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.456" level="INFO">${ACCURACY} = {'time': [0.022008361, 0.022096, 0.022182, 0.022269028, 0.022356028, 0.022442042, 0.022529028, 0.022616056, 0.022703042, 0.022790056, 0.022876056, 0.022962111, 0.023049083, 0.023136069, 0.023222097, 0...</msg>
<status status="PASS" starttime="20201112 09:43:37.444" endtime="20201112 09:43:37.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.461" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.460" endtime="20201112 09:43:37.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.463" level="INFO">VALUE: [8.327799999999913e-05, 8.254200000000142e-05, 8.209699999999973e-05, 8.287499999999962e-05, 8.273599999999992e-05, 8.20979999999992e-05, 8.299999999999974e-05, 8.27919999999982e-05, 8.263899999999894e-05, 8.290299999999876e-05, 8.216699999999758e-05, 8.215300000000147e-05, 8.27910000000022e-05, 8.298600000000017e-05, 8.218000000000114e-05, 8.266600000000207e-05, 8.269400000000121e-05, 8.272200000000035e-05, 8.294500000000093e-05, 8.29170000000018e-05, 8.266700000000154e-05, 8.281900000000134e-05, 8.212500000000234e-05, 8.218100000000061e-05, 8.277799999999863e-05, 8.286100000000005e-05, 8.212499999999887e-05, 8.305599999999802e-05, 8.291600000000232e-05, 8.263899999999894e-05, 8.261199999999927e-05, 8.279099999999873e-05, 8.212499999999887e-05, 8.265199999999903e-05, 8.270800000000078e-05, 8.21109999999993e-05, 8.288900000000265e-05, 8.292999999999842e-05, 8.267999999999817e-05, 8.282000000000081e-05, 8.274999999999949e-05, 8.291699999999833e-05, 8.282000000000081e-05, 8.215199999999853e-05, 8.287499999999962e-05, 8.306900000000159e-05, 8.279200000000167e-05, 8.282000000000081e-05, 8.284799999999995e-05, 8.287500000000309e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.462" endtime="20201112 09:43:37.464"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.457" endtime="20201112 09:43:37.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.467" endtime="20201112 09:43:37.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.470" endtime="20201112 09:43:37.489"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.468" endtime="20201112 09:43:37.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.465" endtime="20201112 09:43:37.490"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.097" endtime="20201112 09:43:37.491"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.097" endtime="20201112 09:43:37.491"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.499" endtime="20201112 09:43:37.517"></status>
</kw>
<msg timestamp="20201112 09:43:37.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.498" endtime="20201112 09:43:37.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.519" endtime="20201112 09:43:37.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.521" endtime="20201112 09:43:37.524"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.495" endtime="20201112 09:43:37.525"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.493" endtime="20201112 09:43:37.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.531" endtime="20201112 09:43:37.816"></status>
</kw>
<msg timestamp="20201112 09:43:37.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02176125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:37.530" endtime="20201112 09:43:37.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02176125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:37.821" endtime="20201112 09:43:37.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.829" endtime="20201112 09:43:37.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.527" endtime="20201112 09:43:37.831"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.526" endtime="20201112 09:43:37.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:37.836" level="INFO">${RESULT} = [{'time': 0.021845625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.437500000000112e-05, 'source_diff': 8.437500000000112e-05}, {'time': 0.021934264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:37.832" endtime="20201112 09:43:37.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:37.849" level="INFO">${ACCURACY} = {'time': [0.021845625, 0.021934264, 0.022022264, 0.022109278, 0.022196292, 0.022284292, 0.022372306, 0.022459292, 0.022547306, 0.022635306, 0.022723347, 0.022811319, 0.022899333, 0.022986333, 0.023073...</msg>
<status status="PASS" starttime="20201112 09:43:37.837" endtime="20201112 09:43:37.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.854" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 09:43:37.853" endtime="20201112 09:43:37.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.856" level="INFO">VALUE: [8.437500000000112e-05, 8.381999999999834e-05, 8.37919999999992e-05, 8.31110000000003e-05, 8.319499999999772e-05, 8.382000000000181e-05, 8.368100000000211e-05, 8.319499999999772e-05, 8.377799999999963e-05, 8.380600000000224e-05, 8.376400000000006e-05, 8.369399999999874e-05, 8.390200000000028e-05, 8.316600000000257e-05, 8.308300000000116e-05, 8.376400000000006e-05, 8.36659999999996e-05, 8.39720000000016e-05, 8.390299999999976e-05, 8.312499999999987e-05, 8.399999999999727e-05, 8.366699999999908e-05, 8.369500000000168e-05, 8.404199999999945e-05, 8.305599999999802e-05, 8.402799999999988e-05, 8.400000000000074e-05, 8.380599999999877e-05, 8.394500000000193e-05, 8.31110000000003e-05, 8.306900000000159e-05, 8.405499999999955e-05, 8.36110000000008e-05, 8.372200000000135e-05, 8.306900000000159e-05, 8.387500000000062e-05, 8.3152999999999e-05, 8.386099999999758e-05, 8.398600000000117e-05, 8.313899999999944e-05, 8.402799999999988e-05, 8.359699999999776e-05, 8.313799999999996e-05, 8.402799999999988e-05, 8.375000000000049e-05, 8.312499999999987e-05, 8.319400000000171e-05, 8.312499999999987e-05, 8.305599999999802e-05, 8.384700000000148e-05]</msg>
<status status="PASS" starttime="20201112 09:43:37.855" endtime="20201112 09:43:37.857"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.850" endtime="20201112 09:43:37.857"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.860" endtime="20201112 09:43:37.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:37.863" endtime="20201112 09:43:37.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.862" endtime="20201112 09:43:37.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.858" endtime="20201112 09:43:37.883"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.492" endtime="20201112 09:43:37.884"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.491" endtime="20201112 09:43:37.884"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.893" endtime="20201112 09:43:37.910"></status>
</kw>
<msg timestamp="20201112 09:43:37.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.891" endtime="20201112 09:43:37.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:37.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:37.912" endtime="20201112 09:43:37.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.914" endtime="20201112 09:43:37.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.888" endtime="20201112 09:43:37.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.886" endtime="20201112 09:43:37.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:37.924" endtime="20201112 09:43:38.211"></status>
</kw>
<msg timestamp="20201112 09:43:38.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:37.923" endtime="20201112 09:43:38.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.215" endtime="20201112 09:43:38.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.223" endtime="20201112 09:43:38.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.920" endtime="20201112 09:43:38.226"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.918" endtime="20201112 09:43:38.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.230" level="INFO">${RESULT} = [{'time': 0.021897514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.461099999999833e-05, 'source_diff': 8.461099999999833e-05}, {'time': 0.021987153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.227" endtime="20201112 09:43:38.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.244" level="INFO">${ACCURACY} = {'time': [0.021897514, 0.021987153, 0.022076167, 0.022165167, 0.022254181, 0.022342208, 0.022431194, 0.022520194, 0.022609208, 0.022698194, 0.022787208, 0.022875208, 0.022963222, 0.023052222, 0.023140...</msg>
<status status="PASS" starttime="20201112 09:43:38.231" endtime="20201112 09:43:38.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.248" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.247" endtime="20201112 09:43:38.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.251" level="INFO">VALUE: [8.461099999999833e-05, 8.497199999999913e-05, 8.495899999999904e-05, 8.483399999999891e-05, 8.494500000000293e-05, 8.417999999999967e-05, 8.48050000000003e-05, 8.46660000000006e-05, 8.481899999999987e-05, 8.501300000000184e-05, 8.477700000000116e-05, 8.404099999999998e-05, 8.41249999999974e-05, 8.463900000000094e-05, 8.405500000000302e-05, 8.501400000000131e-05, 8.491699999999686e-05, 8.473600000000192e-05, 8.472199999999888e-05, 8.47920000000002e-05, 8.481999999999934e-05, 8.476399999999759e-05, 8.419499999999872e-05, 8.44309999999994e-05, 8.405599999999902e-05, 8.498700000000164e-05, 8.408399999999816e-05, 8.423600000000142e-05, 8.41660000000001e-05, 8.500000000000174e-05, 8.487499999999815e-05, 8.412500000000087e-05, 8.504099999999751e-05, 8.420799999999881e-05, 8.418099999999915e-05, 8.476399999999759e-05, 8.49309999999999e-05, 8.469499999999922e-05, 8.407000000000206e-05, 8.470799999999931e-05, 8.462500000000137e-05, 8.4153e-05, 8.502800000000088e-05, 8.480599999999977e-05, 8.408400000000163e-05, 8.405599999999902e-05, 8.474999999999802e-05, 8.41249999999974e-05, 8.495799999999956e-05, 8.491600000000085e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.249" endtime="20201112 09:43:38.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.245" endtime="20201112 09:43:38.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.254" endtime="20201112 09:43:38.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.258" endtime="20201112 09:43:38.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.256" endtime="20201112 09:43:38.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.252" endtime="20201112 09:43:38.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.885" endtime="20201112 09:43:38.278"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:37.884" endtime="20201112 09:43:38.278"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.287" endtime="20201112 09:43:38.306"></status>
</kw>
<msg timestamp="20201112 09:43:38.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.285" endtime="20201112 09:43:38.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.307" endtime="20201112 09:43:38.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.309" endtime="20201112 09:43:38.312"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.283" endtime="20201112 09:43:38.313"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.281" endtime="20201112 09:43:38.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.319" endtime="20201112 09:43:38.605"></status>
</kw>
<msg timestamp="20201112 09:43:38.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.318" endtime="20201112 09:43:38.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021968333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.609" endtime="20201112 09:43:38.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.617" endtime="20201112 09:43:38.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.315" endtime="20201112 09:43:38.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.314" endtime="20201112 09:43:38.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:38.624" level="INFO">${RESULT} = [{'time': 0.022054597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.626399999999909e-05, 'source_diff': 8.626399999999909e-05}, {'time': 0.022145278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:38.620" endtime="20201112 09:43:38.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:38.638" level="INFO">${ACCURACY} = {'time': [0.022054597, 0.022145278, 0.022235264, 0.02232525, 0.02241525, 0.022505264, 0.022594278, 0.022683264, 0.022773278, 0.022862278, 0.022951306, 0.023041292, 0.023131319, 0.023221306, 0.02331133...</msg>
<status status="PASS" starttime="20201112 09:43:38.625" endtime="20201112 09:43:38.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.643" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 09:43:38.642" endtime="20201112 09:43:38.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.645" level="INFO">VALUE: [8.626399999999909e-05, 8.59859999999997e-05, 8.590300000000176e-05, 8.602800000000188e-05, 8.600000000000274e-05, 8.587499999999915e-05, 8.506999999999959e-05, 8.512500000000187e-05, 8.586099999999958e-05, 8.504200000000045e-05, 8.508400000000263e-05, 8.570899999999979e-05, 8.575000000000249e-05, 8.570899999999979e-05, 8.563899999999847e-05, 8.508299999999969e-05, 8.591599999999838e-05, 8.586100000000305e-05, 8.508299999999969e-05, 8.572199999999988e-05, 8.563899999999847e-05, 8.586099999999958e-05, 8.604199999999798e-05, 8.604200000000145e-05, 8.59310000000009e-05, 8.590300000000176e-05, 8.51249999999984e-05, 8.50980000000022e-05, 8.595900000000004e-05, 8.59310000000009e-05, 8.563799999999899e-05, 8.586099999999958e-05, 8.574999999999902e-05, 8.574999999999902e-05, 8.515199999999806e-05, 8.51660000000011e-05, 8.568000000000117e-05, 8.56249999999989e-05, 8.56799999999977e-05, 8.576399999999859e-05, 8.568100000000065e-05, 8.594400000000099e-05, 8.562500000000237e-05, 8.583399999999991e-05, 8.509699999999926e-05, 8.559699999999976e-05, 8.518100000000015e-05, 8.562500000000237e-05, 8.566700000000108e-05, 8.588899999999872e-05]</msg>
<status status="PASS" starttime="20201112 09:43:38.644" endtime="20201112 09:43:38.646"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.639" endtime="20201112 09:43:38.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.649" endtime="20201112 09:43:38.650"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:38.652" endtime="20201112 09:43:38.671"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.651" endtime="20201112 09:43:38.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.647" endtime="20201112 09:43:38.672"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.279" endtime="20201112 09:43:38.673"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.279" endtime="20201112 09:43:38.673"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.681" endtime="20201112 09:43:38.700"></status>
</kw>
<msg timestamp="20201112 09:43:38.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.680" endtime="20201112 09:43:38.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:38.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:38.701" endtime="20201112 09:43:38.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.704" endtime="20201112 09:43:38.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.677" endtime="20201112 09:43:38.707"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.675" endtime="20201112 09:43:38.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:38.714" endtime="20201112 09:43:39.000"></status>
</kw>
<msg timestamp="20201112 09:43:39.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:38.712" endtime="20201112 09:43:39.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022024917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022112361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.004" endtime="20201112 09:43:39.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.012" endtime="20201112 09:43:39.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.710" endtime="20201112 09:43:39.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.708" endtime="20201112 09:43:39.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.019" level="INFO">${RESULT} = [{'time': 0.022112361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.744399999999902e-05, 'source_diff': 8.744399999999902e-05}, {'time': 0.022203986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.016" endtime="20201112 09:43:39.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.032" level="INFO">${ACCURACY} = {'time': [0.022112361, 0.022203986, 0.022293986, 0.022385, 0.022476014, 0.022567014, 0.022658028, 0.022749014, 0.022840042, 0.022930028, 0.023021042, 0.023112056, 0.023203056, 0.023294069, 0.023385069...</msg>
<status status="PASS" starttime="20201112 09:43:39.020" endtime="20201112 09:43:39.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.037" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.036" endtime="20201112 09:43:39.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.039" level="INFO">VALUE: [8.744399999999902e-05, 8.658299999999772e-05, 8.608299999999722e-05, 8.665299999999904e-05, 8.663899999999947e-05, 8.6847000000001e-05, 8.69860000000007e-05, 8.675000000000002e-05, 8.684800000000048e-05, 8.612500000000287e-05, 8.690299999999929e-05, 8.670899999999732e-05, 8.66669999999986e-05, 8.681900000000187e-05, 8.665200000000303e-05, 8.609700000000026e-05, 8.706899999999865e-05, 8.679099999999926e-05, 8.676399999999959e-05, 8.66799999999987e-05, 8.704199999999898e-05, 8.672200000000088e-05, 8.616700000000158e-05, 8.676399999999959e-05, 8.66669999999986e-05, 8.670899999999732e-05, 8.672200000000088e-05, 8.670900000000079e-05, 8.677800000000263e-05, 8.66530000000025e-05, 8.663899999999947e-05, 8.6153000000002e-05, 8.612500000000287e-05, 8.666599999999913e-05, 8.658299999999772e-05, 8.676399999999959e-05, 8.66249999999999e-05, 8.606900000000112e-05, 8.679199999999873e-05, 8.701399999999984e-05, 8.672199999999741e-05, 8.66530000000025e-05, 8.676299999999665e-05, 8.665299999999904e-05, 8.695900000000104e-05, 8.616700000000158e-05, 8.688899999999972e-05, 8.680600000000177e-05, 8.688899999999972e-05, 8.680499999999883e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.038" endtime="20201112 09:43:39.040"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.033" endtime="20201112 09:43:39.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.043" endtime="20201112 09:43:39.044"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.046" endtime="20201112 09:43:39.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.045" endtime="20201112 09:43:39.066"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.041" endtime="20201112 09:43:39.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.674" endtime="20201112 09:43:39.067"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:38.673" endtime="20201112 09:43:39.067"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.076" endtime="20201112 09:43:39.094"></status>
</kw>
<msg timestamp="20201112 09:43:39.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.074" endtime="20201112 09:43:39.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.096" endtime="20201112 09:43:39.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.098" endtime="20201112 09:43:39.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.072" endtime="20201112 09:43:39.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.070" endtime="20201112 09:43:39.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.108" endtime="20201112 09:43:39.393"></status>
</kw>
<msg timestamp="20201112 09:43:39.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.107" endtime="20201112 09:43:39.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021853069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.398" endtime="20201112 09:43:39.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.406" endtime="20201112 09:43:39.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.104" endtime="20201112 09:43:39.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.102" endtime="20201112 09:43:39.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.412" level="INFO">${RESULT} = [{'time': 0.021941528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.845899999999907e-05, 'source_diff': 8.845899999999907e-05}, {'time': 0.022034167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.409" endtime="20201112 09:43:39.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.426" level="INFO">${ACCURACY} = {'time': [0.021941528, 0.022034167, 0.022125181, 0.022217181, 0.022309181, 0.022401194, 0.022493208, 0.022585222, 0.022677222, 0.022769236, 0.022861236, 0.022953236, 0.02304525, 0.02313625, 0.02322825...</msg>
<status status="PASS" starttime="20201112 09:43:39.413" endtime="20201112 09:43:39.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.430" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.429" endtime="20201112 09:43:39.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.433" level="INFO">VALUE: [8.845899999999907e-05, 8.787500000000115e-05, 8.708400000000116e-05, 8.762499999999743e-05, 8.795900000000204e-05, 8.777700000000069e-05, 8.787500000000115e-05, 8.762499999999743e-05, 8.802800000000041e-05, 8.795800000000256e-05, 8.773600000000145e-05, 8.797199999999866e-05, 8.763900000000047e-05, 8.718100000000215e-05, 8.794399999999952e-05, 8.777800000000016e-05, 8.711100000000083e-05, 8.786099999999811e-05, 8.790300000000029e-05, 8.78059999999993e-05, 8.79860000000017e-05, 8.713800000000049e-05, 8.776400000000059e-05, 8.800000000000127e-05, 8.713799999999702e-05, 8.790200000000081e-05, 8.719399999999877e-05, 8.766600000000013e-05, 8.79860000000017e-05, 8.804199999999998e-05, 8.788900000000072e-05, 8.774999999999755e-05, 8.776400000000059e-05, 8.797200000000213e-05, 8.772199999999841e-05, 8.715299999999954e-05, 8.805500000000008e-05, 8.786100000000158e-05, 8.71669999999991e-05, 8.801399999999737e-05, 8.800000000000127e-05, 8.794399999999952e-05, 8.76799999999997e-05, 8.71250000000004e-05, 8.779100000000026e-05, 8.708299999999822e-05, 8.797199999999866e-05, 8.805599999999955e-05, 8.797199999999866e-05, 8.801399999999737e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.431" endtime="20201112 09:43:39.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.427" endtime="20201112 09:43:39.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.436" endtime="20201112 09:43:39.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.440" endtime="20201112 09:43:39.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.438" endtime="20201112 09:43:39.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.435" endtime="20201112 09:43:39.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.068" endtime="20201112 09:43:39.460"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.067" endtime="20201112 09:43:39.460"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.469" endtime="20201112 09:43:39.488"></status>
</kw>
<msg timestamp="20201112 09:43:39.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.468" endtime="20201112 09:43:39.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.489" endtime="20201112 09:43:39.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.492" endtime="20201112 09:43:39.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.465" endtime="20201112 09:43:39.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.463" endtime="20201112 09:43:39.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.502" endtime="20201112 09:43:39.787"></status>
</kw>
<msg timestamp="20201112 09:43:39.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.500" endtime="20201112 09:43:39.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021790833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021880347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.792" endtime="20201112 09:43:39.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.800" endtime="20201112 09:43:39.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.498" endtime="20201112 09:43:39.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.496" endtime="20201112 09:43:39.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:39.807" level="INFO">${RESULT} = [{'time': 0.021880347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.951400000000234e-05, 'source_diff': 8.951400000000234e-05}, {'time': 0.021973972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:39.803" endtime="20201112 09:43:39.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:39.820" level="INFO">${ACCURACY} = {'time': [0.021880347, 0.021973972, 0.022066986, 0.02216, 0.022251986, 0.022344, 0.022437, 0.022530014, 0.022623014, 0.022716014, 0.022809028, 0.022901028, 0.022994056, 0.023087042, 0.023180069, 0.023...</msg>
<status status="PASS" starttime="20201112 09:43:39.808" endtime="20201112 09:43:39.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.825" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 09:43:39.823" endtime="20201112 09:43:39.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.827" level="INFO">VALUE: [8.951400000000234e-05, 8.875000000000202e-05, 8.865300000000104e-05, 8.893100000000043e-05, 8.81250000000014e-05, 8.806899999999965e-05, 8.872199999999941e-05, 8.872199999999941e-05, 8.886099999999911e-05, 8.888899999999825e-05, 8.886099999999911e-05, 8.811100000000183e-05, 8.891699999999739e-05, 8.887499999999868e-05, 8.86800000000007e-05, 8.881999999999987e-05, 8.879100000000126e-05, 8.877699999999822e-05, 8.883299999999997e-05, 8.884699999999954e-05, 8.865299999999757e-05, 8.897199999999966e-05, 8.884699999999954e-05, 8.863900000000147e-05, 8.891700000000086e-05, 8.81670000000001e-05, 8.895800000000009e-05, 8.809699999999879e-05, 8.875000000000202e-05, 8.865300000000104e-05, 8.884799999999901e-05, 8.81250000000014e-05, 8.877800000000116e-05, 8.876399999999812e-05, 8.813900000000097e-05, 8.805500000000008e-05, 8.902800000000141e-05, 8.870799999999984e-05, 8.887499999999868e-05, 8.884699999999954e-05, 8.815300000000054e-05, 8.897199999999966e-05, 8.866699999999714e-05, 8.901399999999837e-05, 8.819499999999925e-05, 8.851399999999787e-05, 8.893100000000043e-05, 8.811099999999836e-05, 8.906900000000065e-05, 8.869500000000322e-05]</msg>
<status status="PASS" starttime="20201112 09:43:39.826" endtime="20201112 09:43:39.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.821" endtime="20201112 09:43:39.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.831" endtime="20201112 09:43:39.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:39.834" endtime="20201112 09:43:39.853"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.832" endtime="20201112 09:43:39.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.829" endtime="20201112 09:43:39.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.461" endtime="20201112 09:43:39.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.461" endtime="20201112 09:43:39.855"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.863" endtime="20201112 09:43:39.883"></status>
</kw>
<msg timestamp="20201112 09:43:39.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.862" endtime="20201112 09:43:39.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:39.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:39.884" endtime="20201112 09:43:39.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.887" endtime="20201112 09:43:39.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.859" endtime="20201112 09:43:39.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.857" endtime="20201112 09:43:39.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:39.897" endtime="20201112 09:43:40.183"></status>
</kw>
<msg timestamp="20201112 09:43:40.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:39.896" endtime="20201112 09:43:40.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022189833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022279597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.187" endtime="20201112 09:43:40.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.196" endtime="20201112 09:43:40.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.893" endtime="20201112 09:43:40.198"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.891" endtime="20201112 09:43:40.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.203" level="INFO">${RESULT} = [{'time': 0.022279597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.976400000000259e-05, 'source_diff': 8.976400000000259e-05}, {'time': 0.022374306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:40.199" endtime="20201112 09:43:40.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.217" level="INFO">${ACCURACY} = {'time': [0.022279597, 0.022374306, 0.022467236, 0.022561278, 0.022655278, 0.022749264, 0.022842292, 0.022936278, 0.023030278, 0.023124292, 0.023218292, 0.023312306, 0.023406319, 0.023500319, 0.023594...</msg>
<status status="PASS" starttime="20201112 09:43:40.204" endtime="20201112 09:43:40.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.221" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.220" endtime="20201112 09:43:40.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.224" level="INFO">VALUE: [8.976400000000259e-05, 8.965299999999857e-05, 8.91800000000012e-05, 8.974999999999955e-05, 8.974999999999955e-05, 8.969500000000075e-05, 8.919500000000025e-05, 8.974999999999955e-05, 8.988900000000272e-05, 8.96670000000016e-05, 8.986100000000011e-05, 8.995900000000057e-05, 8.988799999999977e-05, 8.973599999999998e-05, 8.981899999999793e-05, 8.911100000000283e-05, 8.973599999999998e-05, 8.988900000000272e-05, 8.963900000000247e-05, 8.976400000000259e-05, 8.965299999999857e-05, 8.986100000000011e-05, 8.977799999999869e-05, 8.988899999999925e-05, 8.983400000000044e-05, 8.99999999999998e-05, 8.977799999999869e-05, 8.987499999999968e-05, 8.907000000000012e-05, 9.002699999999947e-05, 8.990299999999882e-05, 8.988899999999925e-05, 9.002699999999947e-05, 8.995799999999762e-05, 8.965299999999857e-05, 8.983300000000097e-05, 8.994400000000152e-05, 8.976399999999912e-05, 8.962499999999943e-05, 8.995800000000109e-05, 9.001399999999937e-05, 8.909699999999979e-05, 8.979199999999826e-05, 8.976399999999912e-05, 8.909699999999979e-05, 8.988899999999925e-05, 8.973599999999998e-05, 8.997300000000014e-05, 8.980499999999836e-05, 8.98190000000014e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.223" endtime="20201112 09:43:40.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.218" endtime="20201112 09:43:40.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.228" endtime="20201112 09:43:40.229"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.231" endtime="20201112 09:43:40.250"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.230" endtime="20201112 09:43:40.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.226" endtime="20201112 09:43:40.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.856" endtime="20201112 09:43:40.252"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:39.855" endtime="20201112 09:43:40.252"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.260" endtime="20201112 09:43:40.278"></status>
</kw>
<msg timestamp="20201112 09:43:40.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.259" endtime="20201112 09:43:40.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.280" endtime="20201112 09:43:40.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.282" endtime="20201112 09:43:40.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.256" endtime="20201112 09:43:40.285"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.254" endtime="20201112 09:43:40.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.292" endtime="20201112 09:43:40.578"></status>
</kw>
<msg timestamp="20201112 09:43:40.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.291" endtime="20201112 09:43:40.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022119167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022209806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.582" endtime="20201112 09:43:40.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.590" endtime="20201112 09:43:40.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.288" endtime="20201112 09:43:40.592"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.287" endtime="20201112 09:43:40.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.597" level="INFO">${RESULT} = [{'time': 0.022209806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.0639e-05, 'source_diff': 9.0639e-05}, {'time': 0.022305431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.04870000000002e-0...</msg>
<status status="PASS" starttime="20201112 09:43:40.593" endtime="20201112 09:43:40.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:40.610" level="INFO">${ACCURACY} = {'time': [0.022209806, 0.022305431, 0.022400444, 0.022495444, 0.022589444, 0.022684458, 0.022779472, 0.022874486, 0.022969486, 0.0230645, 0.023159514, 0.023254542, 0.023349514, 0.023444528, 0.02353954...</msg>
<status status="PASS" starttime="20201112 09:43:40.598" endtime="20201112 09:43:40.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.614" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 09:43:40.613" endtime="20201112 09:43:40.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.617" level="INFO">VALUE: [9.0639e-05, 9.04870000000002e-05, 9.066599999999966e-05, 9.077700000000022e-05, 9.006900000000165e-05, 9.098600000000123e-05, 9.06939999999988e-05, 9.081899999999893e-05, 9.0639e-05, 9.08060000000023e-05, 9.101400000000037e-05, 9.08199999999984e-05, 9.066699999999914e-05, 9.079199999999926e-05, 9.086100000000111e-05, 9.091699999999939e-05, 9.08190000000024e-05, 9.011100000000036e-05, 9.075000000000055e-05, 9.066699999999914e-05, 9.086100000000111e-05, 9.006900000000165e-05, 9.083300000000197e-05, 9.011100000000036e-05, 9.012499999999993e-05, 9.08329999999985e-05, 9.105599999999908e-05, 9.0639e-05, 9.095800000000209e-05, 9.079199999999926e-05, 9.10000000000008e-05, 9.011100000000036e-05, 9.104199999999951e-05, 9.101400000000037e-05, 9.073600000000098e-05, 9.01670000000021e-05, 9.070899999999785e-05, 9.090299999999982e-05, 9.086100000000111e-05, 9.076300000000065e-05, 9.084700000000154e-05, 9.101400000000037e-05, 9.088900000000025e-05, 9.076400000000012e-05, 9.01670000000021e-05, 9.072200000000141e-05, 9.012499999999993e-05, 9.061100000000086e-05, 9.005599999999808e-05, 9.079199999999926e-05]</msg>
<status status="PASS" starttime="20201112 09:43:40.616" endtime="20201112 09:43:40.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.611" endtime="20201112 09:43:40.618"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.620" endtime="20201112 09:43:40.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:40.624" endtime="20201112 09:43:40.643"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.622" endtime="20201112 09:43:40.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.619" endtime="20201112 09:43:40.644"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.253" endtime="20201112 09:43:40.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.252" endtime="20201112 09:43:40.645"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.653" endtime="20201112 09:43:40.671"></status>
</kw>
<msg timestamp="20201112 09:43:40.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.652" endtime="20201112 09:43:40.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:40.673" endtime="20201112 09:43:40.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.675" endtime="20201112 09:43:40.678"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.649" endtime="20201112 09:43:40.679"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.647" endtime="20201112 09:43:40.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.685" endtime="20201112 09:43:40.970"></status>
</kw>
<msg timestamp="20201112 09:43:40.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.684" endtime="20201112 09:43:40.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:40.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022194125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:40.974" endtime="20201112 09:43:40.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:40.982" endtime="20201112 09:43:40.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.681" endtime="20201112 09:43:40.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.680" endtime="20201112 09:43:40.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:40.989" level="INFO">${RESULT} = [{'time': 0.022286444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.231900000000043e-05, 'source_diff': 9.231900000000043e-05}, {'time': 0.022383069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:40.986" endtime="20201112 09:43:40.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.002" level="INFO">${ACCURACY} = {'time': [0.022286444, 0.022383069, 0.022479069, 0.022575097, 0.022671083, 0.022767111, 0.022863111, 0.022959125, 0.023055125, 0.023151125, 0.023246139, 0.023342139, 0.023437153, 0.023533153, 0.023628...</msg>
<status status="PASS" starttime="20201112 09:43:40.990" endtime="20201112 09:43:41.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.007" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.006" endtime="20201112 09:43:41.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.009" level="INFO">VALUE: [9.231900000000043e-05, 9.145799999999912e-05, 9.188800000000177e-05, 9.190299999999735e-05, 9.179100000000079e-05, 9.172199999999894e-05, 9.187499999999821e-05, 9.173600000000198e-05, 9.204200000000051e-05, 9.169400000000327e-05, 9.112499999999746e-05, 9.204200000000051e-05, 9.111099999999789e-05, 9.177800000000069e-05, 9.115300000000007e-05, 9.118099999999921e-05, 9.18199999999994e-05, 9.177800000000069e-05, 9.188900000000125e-05, 9.191600000000091e-05, 9.1639000000001e-05, 9.20139999999979e-05, 9.120799999999887e-05, 9.111100000000136e-05, 9.193000000000048e-05, 9.115300000000007e-05, 9.136100000000161e-05, 9.193099999999996e-05, 9.166700000000014e-05, 9.101400000000037e-05, 9.165300000000057e-05, 9.112500000000093e-05, 9.176400000000112e-05, 9.20139999999979e-05, 9.118099999999921e-05, 9.177799999999722e-05, 9.177700000000122e-05, 9.108299999999875e-05, 9.177700000000122e-05, 9.170799999999937e-05, 9.175000000000155e-05, 9.175000000000155e-05, 9.20139999999979e-05, 9.195799999999962e-05, 9.20139999999979e-05, 9.20139999999979e-05, 9.190300000000082e-05, 9.105600000000255e-05, 9.18199999999994e-05, 9.161099999999839e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.008" endtime="20201112 09:43:41.010"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.003" endtime="20201112 09:43:41.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.013" endtime="20201112 09:43:41.014"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.016" endtime="20201112 09:43:41.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.015" endtime="20201112 09:43:41.036"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.011" endtime="20201112 09:43:41.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.646" endtime="20201112 09:43:41.037"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:40.645" endtime="20201112 09:43:41.037"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.046" endtime="20201112 09:43:41.065"></status>
</kw>
<msg timestamp="20201112 09:43:41.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.044" endtime="20201112 09:43:41.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.066" endtime="20201112 09:43:41.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.069" endtime="20201112 09:43:41.071"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.042" endtime="20201112 09:43:41.072"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.040" endtime="20201112 09:43:41.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.079" endtime="20201112 09:43:41.365"></status>
</kw>
<msg timestamp="20201112 09:43:41.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.077" endtime="20201112 09:43:41.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021767833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021861236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.369" endtime="20201112 09:43:41.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.377" endtime="20201112 09:43:41.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.075" endtime="20201112 09:43:41.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.073" endtime="20201112 09:43:41.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.384" level="INFO">${RESULT} = [{'time': 0.021861236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.340299999999885e-05, 'source_diff': 9.340299999999885e-05}, {'time': 0.021958903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.380" endtime="20201112 09:43:41.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.397" level="INFO">${ACCURACY} = {'time': [0.021861236, 0.021958903, 0.022054847, 0.022151861, 0.022248861, 0.022345875, 0.022441875, 0.022537889, 0.022633944, 0.022729903, 0.022826917, 0.022923931, 0.023019917, 0.023116, 0.023212931...</msg>
<status status="PASS" starttime="20201112 09:43:41.385" endtime="20201112 09:43:41.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.401" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.400" endtime="20201112 09:43:41.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.404" level="INFO">VALUE: [9.340299999999885e-05, 9.266699999999767e-05, 9.217999999999726e-05, 9.280499999999789e-05, 9.28330000000005e-05, 9.288900000000225e-05, 9.209699999999932e-05, 9.204199999999704e-05, 9.208299999999975e-05, 9.218100000000021e-05, 9.302799999999847e-05, 9.302800000000194e-05, 9.216700000000064e-05, 9.218100000000021e-05, 9.291699999999792e-05, 9.206900000000018e-05, 9.275000000000255e-05, 9.286099999999964e-05, 9.261099999999939e-05, 9.291700000000139e-05, 9.304199999999804e-05, 9.287499999999921e-05, 9.29720000000002e-05, 9.305600000000108e-05, 9.28330000000005e-05, 9.280600000000083e-05, 9.304200000000151e-05, 9.30139999999989e-05, 9.302799999999847e-05, 9.280600000000083e-05, 9.205600000000008e-05, 9.205600000000008e-05, 9.277700000000222e-05, 9.26520000000021e-05, 9.273599999999951e-05, 9.277699999999875e-05, 9.26659999999982e-05, 9.273599999999951e-05, 9.266699999999767e-05, 9.298600000000323e-05, 9.293100000000096e-05, 9.218100000000021e-05, 9.241700000000089e-05, 9.266699999999767e-05, 9.294500000000053e-05, 9.298599999999976e-05, 9.20000000000018e-05, 9.215300000000107e-05, 9.207000000000312e-05, 9.288900000000225e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.403" endtime="20201112 09:43:41.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.398" endtime="20201112 09:43:41.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.408" endtime="20201112 09:43:41.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.411" endtime="20201112 09:43:41.430"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.409" endtime="20201112 09:43:41.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.406" endtime="20201112 09:43:41.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.038" endtime="20201112 09:43:41.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.038" endtime="20201112 09:43:41.432"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.440" endtime="20201112 09:43:41.459"></status>
</kw>
<msg timestamp="20201112 09:43:41.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.439" endtime="20201112 09:43:41.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.460" endtime="20201112 09:43:41.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.463" endtime="20201112 09:43:41.465"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.436" endtime="20201112 09:43:41.466"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.434" endtime="20201112 09:43:41.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.473" endtime="20201112 09:43:41.759"></status>
</kw>
<msg timestamp="20201112 09:43:41.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.471" endtime="20201112 09:43:41.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022047819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.763" endtime="20201112 09:43:41.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.771" endtime="20201112 09:43:41.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.469" endtime="20201112 09:43:41.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.467" endtime="20201112 09:43:41.774"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:41.778" level="INFO">${RESULT} = [{'time': 0.022047819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.405499999999914e-05, 'source_diff': 9.405499999999914e-05}, {'time': 0.022146458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:41.775" endtime="20201112 09:43:41.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:41.792" level="INFO">${ACCURACY} = {'time': [0.022047819, 0.022146458, 0.022243514, 0.022341514, 0.022439486, 0.022537486, 0.0226355, 0.022733542, 0.022830514, 0.022928528, 0.023026542, 0.023124528, 0.023221542, 0.023319556, 0.02341755...</msg>
<status status="PASS" starttime="20201112 09:43:41.779" endtime="20201112 09:43:41.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.797" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 09:43:41.796" endtime="20201112 09:43:41.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.799" level="INFO">VALUE: [9.405499999999914e-05, 9.348600000000026e-05, 9.32079999999974e-05, 9.40139999999999e-05, 9.393000000000248e-05, 9.40139999999999e-05, 9.390299999999935e-05, 9.408399999999775e-05, 9.316699999999817e-05, 9.380600000000183e-05, 9.383400000000097e-05, 9.39859999999973e-05, 9.316700000000164e-05, 9.380600000000183e-05, 9.394499999999806e-05, 9.398700000000024e-05, 9.379099999999932e-05, 9.391600000000291e-05, 9.31940000000013e-05, 9.370800000000137e-05, 9.379200000000226e-05, 9.308299999999728e-05, 9.311099999999989e-05, 9.381899999999846e-05, 9.306899999999771e-05, 9.393099999999849e-05, 9.368099999999824e-05, 9.39720000000012e-05, 9.365300000000257e-05, 9.318100000000121e-05, 9.365300000000257e-05, 9.40139999999999e-05, 9.381999999999793e-05, 9.397300000000067e-05, 9.311099999999989e-05, 9.390199999999987e-05, 9.375000000000008e-05, 9.39859999999973e-05, 9.37079999999979e-05, 9.376399999999965e-05, 9.404199999999904e-05, 9.31940000000013e-05, 9.341700000000189e-05, 9.38200000000014e-05, 9.399999999999686e-05, 9.307000000000065e-05, 9.391699999999892e-05, 9.376399999999965e-05, 9.379199999999879e-05, 9.312499999999946e-05]</msg>
<status status="PASS" starttime="20201112 09:43:41.798" endtime="20201112 09:43:41.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.793" endtime="20201112 09:43:41.801"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.803" endtime="20201112 09:43:41.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:41.806" endtime="20201112 09:43:41.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.805" endtime="20201112 09:43:41.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.801" endtime="20201112 09:43:41.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.433" endtime="20201112 09:43:41.827"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.432" endtime="20201112 09:43:41.827"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.836" endtime="20201112 09:43:41.854"></status>
</kw>
<msg timestamp="20201112 09:43:41.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.834" endtime="20201112 09:43:41.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:41.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:41.855" endtime="20201112 09:43:41.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.858" endtime="20201112 09:43:41.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.831" endtime="20201112 09:43:41.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.829" endtime="20201112 09:43:41.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:41.868" endtime="20201112 09:43:42.154"></status>
</kw>
<msg timestamp="20201112 09:43:42.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:41.866" endtime="20201112 09:43:42.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021840931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021936028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.158" endtime="20201112 09:43:42.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.166" endtime="20201112 09:43:42.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.864" endtime="20201112 09:43:42.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.862" endtime="20201112 09:43:42.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.173" level="INFO">${RESULT} = [{'time': 0.021936028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.509699999999885e-05, 'source_diff': 9.509699999999885e-05}, {'time': 0.022035653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.169" endtime="20201112 09:43:42.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.186" level="INFO">${ACCURACY} = {'time': [0.021936028, 0.022035653, 0.022134653, 0.022233681, 0.022332667, 0.022430694, 0.022528722, 0.022627708, 0.022726694, 0.022825708, 0.022924722, 0.023023722, 0.023122722, 0.02322175, 0.0233207...</msg>
<status status="PASS" starttime="20201112 09:43:42.174" endtime="20201112 09:43:42.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.191" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.190" endtime="20201112 09:43:42.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.193" level="INFO">VALUE: [9.509699999999885e-05, 9.472199999999847e-05, 9.498600000000176e-05, 9.488900000000078e-05, 9.49590000000021e-05, 9.418000000000273e-05, 9.41659999999997e-05, 9.481899999999946e-05, 9.483299999999903e-05, 9.461100000000139e-05, 9.494400000000305e-05, 9.473600000000151e-05, 9.499999999999786e-05, 9.497199999999872e-05, 9.470800000000237e-05, 9.473599999999804e-05, 9.48200000000024e-05, 9.408299999999828e-05, 9.413900000000003e-05, 9.500000000000133e-05, 9.493099999999949e-05, 9.46530000000001e-05, 9.508300000000275e-05, 9.463900000000053e-05, 9.458299999999878e-05, 9.486100000000164e-05, 9.408300000000175e-05, 9.46530000000001e-05, 9.41529999999996e-05, 9.413900000000003e-05, 9.479199999999979e-05, 9.48469999999986e-05, 9.5027999999997e-05, 9.418099999999874e-05, 9.480599999999936e-05, 9.41529999999996e-05, 9.405599999999861e-05, 9.411100000000089e-05, 9.473600000000151e-05, 9.483299999999903e-05, 9.416699999999917e-05, 9.479199999999979e-05, 9.483299999999903e-05, 9.491599999999698e-05, 9.500000000000133e-05, 9.498600000000176e-05, 9.462500000000096e-05, 9.491699999999992e-05, 9.494399999999958e-05, 9.483299999999903e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.192" endtime="20201112 09:43:42.197"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.187" endtime="20201112 09:43:42.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.200" endtime="20201112 09:43:42.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.204" endtime="20201112 09:43:42.223"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.202" endtime="20201112 09:43:42.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.199" endtime="20201112 09:43:42.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.828" endtime="20201112 09:43:42.225"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:41.827" endtime="20201112 09:43:42.225"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.234" endtime="20201112 09:43:42.252"></status>
</kw>
<msg timestamp="20201112 09:43:42.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.232" endtime="20201112 09:43:42.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.253" endtime="20201112 09:43:42.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.256" endtime="20201112 09:43:42.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.230" endtime="20201112 09:43:42.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.227" endtime="20201112 09:43:42.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.266" endtime="20201112 09:43:42.552"></status>
</kw>
<msg timestamp="20201112 09:43:42.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.265" endtime="20201112 09:43:42.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022125556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022221347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.557" endtime="20201112 09:43:42.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.565" endtime="20201112 09:43:42.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.262" endtime="20201112 09:43:42.567"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.260" endtime="20201112 09:43:42.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.572" level="INFO">${RESULT} = [{'time': 0.022221347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.579099999999785e-05, 'source_diff': 9.579099999999785e-05}, {'time': 0.022320972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.568" endtime="20201112 09:43:42.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.585" level="INFO">${ACCURACY} = {'time': [0.022221347, 0.022320972, 0.022420986, 0.02252, 0.022619, 0.022719014, 0.022819014, 0.022918028, 0.023017028, 0.023117042, 0.023217056, 0.023316056, 0.023416069, 0.023516097, 0.023616069, 0....</msg>
<status status="PASS" starttime="20201112 09:43:42.573" endtime="20201112 09:43:42.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.590" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.589" endtime="20201112 09:43:42.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.592" level="INFO">VALUE: [9.579099999999785e-05, 9.505500000000014e-05, 9.552800000000097e-05, 9.512499999999799e-05, 9.509699999999885e-05, 9.572199999999947e-05, 9.569499999999981e-05, 9.508399999999875e-05, 9.509699999999885e-05, 9.562500000000196e-05, 9.591700000000092e-05, 9.512500000000146e-05, 9.579100000000132e-05, 9.561099999999892e-05, 9.573599999999904e-05, 9.580499999999742e-05, 9.587499999999874e-05, 9.56660000000012e-05, 9.579100000000132e-05, 9.581900000000046e-05, 9.59859999999993e-05, 9.569400000000033e-05, 9.566700000000067e-05, 9.573599999999904e-05, 9.608300000000028e-05, 9.508399999999875e-05, 9.588799999999884e-05, 9.518099999999974e-05, 9.540200000000137e-05, 9.519499999999931e-05, 9.57079999999999e-05, 9.587499999999874e-05, 9.569400000000033e-05, 9.601399999999843e-05, 9.509699999999885e-05, 9.511099999999842e-05, 9.58469999999996e-05, 9.573599999999904e-05, 9.58469999999996e-05, 9.597199999999972e-05, 9.581900000000046e-05, 9.576400000000165e-05, 9.511099999999842e-05, 9.516700000000017e-05, 9.583300000000003e-05, 9.593000000000101e-05, 9.511099999999842e-05, 9.518000000000026e-05, 9.569399999999686e-05, 9.513900000000103e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.591" endtime="20201112 09:43:42.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.586" endtime="20201112 09:43:42.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.596" endtime="20201112 09:43:42.597"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.599" endtime="20201112 09:43:42.618"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.598" endtime="20201112 09:43:42.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.594" endtime="20201112 09:43:42.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.226" endtime="20201112 09:43:42.620"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.225" endtime="20201112 09:43:42.620"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.628" endtime="20201112 09:43:42.647"></status>
</kw>
<msg timestamp="20201112 09:43:42.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.627" endtime="20201112 09:43:42.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:42.648" endtime="20201112 09:43:42.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.651" endtime="20201112 09:43:42.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.624" endtime="20201112 09:43:42.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.622" endtime="20201112 09:43:42.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.661" endtime="20201112 09:43:42.946"></status>
</kw>
<msg timestamp="20201112 09:43:42.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.659" endtime="20201112 09:43:42.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022292556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:42.950" endtime="20201112 09:43:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.959" endtime="20201112 09:43:42.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.657" endtime="20201112 09:43:42.961"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.655" endtime="20201112 09:43:42.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:42.965" level="INFO">${RESULT} = [{'time': 0.022292556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.709800000000032e-05, 'source_diff': 9.709800000000032e-05}, {'time': 0.022394194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:42.962" endtime="20201112 09:43:42.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:42.979" level="INFO">${ACCURACY} = {'time': [0.022292556, 0.022394194, 0.022494208, 0.022595222, 0.022695222, 0.022796222, 0.022897236, 0.022998236, 0.023099264, 0.023200292, 0.023301264, 0.023402278, 0.023503333, 0.023604361, 0.023705...</msg>
<status status="PASS" starttime="20201112 09:43:42.966" endtime="20201112 09:43:42.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.983" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 09:43:42.982" endtime="20201112 09:43:42.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:42.986" level="INFO">VALUE: [9.709800000000032e-05, 9.686100000000017e-05, 9.612500000000246e-05, 9.683300000000103e-05, 9.619400000000083e-05, 9.633300000000053e-05, 9.687499999999974e-05, 9.659699999999688e-05, 9.69860000000003e-05, 9.668100000000124e-05, 9.695799999999768e-05, 9.687499999999974e-05, 9.709700000000085e-05, 9.676399999999918e-05, 9.69860000000003e-05, 9.606999999999671e-05, 9.677799999999875e-05, 9.658300000000078e-05, 9.661099999999992e-05, 9.708300000000128e-05, 9.69019999999994e-05, 9.611099999999942e-05, 9.68470000000006e-05, 9.694399999999812e-05, 9.611100000000289e-05, 9.605600000000061e-05, 9.690300000000235e-05, 9.618100000000074e-05, 9.657000000000068e-05, 9.608399999999975e-05, 9.608399999999975e-05, 9.613900000000203e-05, 9.662500000000296e-05, 9.616700000000117e-05, 9.701399999999943e-05, 9.605500000000114e-05, 9.683300000000103e-05, 9.68470000000006e-05, 9.683300000000103e-05, 9.615299999999813e-05, 9.688899999999931e-05, 9.609699999999985e-05, 9.693099999999802e-05, 9.69860000000003e-05, 9.691699999999845e-05, 9.695900000000063e-05, 9.661099999999992e-05, 9.682000000000093e-05, 9.680600000000136e-05, 9.670900000000038e-05]</msg>
<status status="PASS" starttime="20201112 09:43:42.984" endtime="20201112 09:43:42.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.980" endtime="20201112 09:43:42.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:42.989" endtime="20201112 09:43:42.991"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:42.993" endtime="20201112 09:43:43.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.991" endtime="20201112 09:43:43.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.988" endtime="20201112 09:43:43.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.621" endtime="20201112 09:43:43.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:42.620" endtime="20201112 09:43:43.014"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.022" endtime="20201112 09:43:43.041"></status>
</kw>
<msg timestamp="20201112 09:43:43.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.021" endtime="20201112 09:43:43.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.043" endtime="20201112 09:43:43.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.045" endtime="20201112 09:43:43.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.018" endtime="20201112 09:43:43.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.016" endtime="20201112 09:43:43.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.055" endtime="20201112 09:43:43.340"></status>
</kw>
<msg timestamp="20201112 09:43:43.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.053" endtime="20201112 09:43:43.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021933069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.344" endtime="20201112 09:43:43.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.352" endtime="20201112 09:43:43.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.051" endtime="20201112 09:43:43.355"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.049" endtime="20201112 09:43:43.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.359" level="INFO">${RESULT} = [{'time': 0.021933069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.797199999999825e-05, 'source_diff': 9.797199999999825e-05}, {'time': 0.022035667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:43.356" endtime="20201112 09:43:43.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.374" level="INFO">${ACCURACY} = {'time': [0.021933069, 0.022035667, 0.022137681, 0.022239681, 0.022341681, 0.022443694, 0.022545694, 0.022647708, 0.022749722, 0.022850722, 0.022952736, 0.023054736, 0.02315675, 0.02325875, 0.02335979...</msg>
<status status="PASS" starttime="20201112 09:43:43.360" endtime="20201112 09:43:43.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.378" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.377" endtime="20201112 09:43:43.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.381" level="INFO">VALUE: [9.797199999999825e-05, 9.75279999999995e-05, 9.775000000000061e-05, 9.765299999999963e-05, 9.773699999999705e-05, 9.770799999999843e-05, 9.772200000000147e-05, 9.798599999999782e-05, 9.770799999999843e-05, 9.716599999999923e-05, 9.787500000000074e-05, 9.787500000000074e-05, 9.756899999999874e-05, 9.786100000000117e-05, 9.718100000000174e-05, 9.794499999999859e-05, 9.794499999999859e-05, 9.775000000000061e-05, 9.76669999999992e-05, 9.722200000000097e-05, 9.793099999999902e-05, 9.769399999999887e-05, 9.800000000000086e-05, 9.802700000000053e-05, 9.761099999999745e-05, 9.794499999999859e-05, 9.772200000000147e-05, 9.761099999999745e-05, 9.787500000000074e-05, 9.794400000000258e-05, 9.779199999999932e-05, 9.761100000000092e-05, 9.709700000000085e-05, 9.772300000000095e-05, 9.776400000000018e-05, 9.793099999999902e-05, 9.719500000000131e-05, 9.773599999999757e-05, 9.763800000000059e-05, 9.783300000000203e-05, 9.776400000000018e-05, 9.780499999999942e-05, 9.795800000000215e-05, 9.77920000000028e-05, 9.801400000000043e-05, 9.779199999999932e-05, 9.769399999999887e-05, 9.781999999999846e-05, 9.709700000000085e-05, 9.713899999999956e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.379" endtime="20201112 09:43:43.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.375" endtime="20201112 09:43:43.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.384" endtime="20201112 09:43:43.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.388" endtime="20201112 09:43:43.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.386" endtime="20201112 09:43:43.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.383" endtime="20201112 09:43:43.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.015" endtime="20201112 09:43:43.408"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.014" endtime="20201112 09:43:43.408"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.417" endtime="20201112 09:43:43.436"></status>
</kw>
<msg timestamp="20201112 09:43:43.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.415" endtime="20201112 09:43:43.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.437" endtime="20201112 09:43:43.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.440" endtime="20201112 09:43:43.442"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.413" endtime="20201112 09:43:43.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.411" endtime="20201112 09:43:43.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.450" endtime="20201112 09:43:43.735"></status>
</kw>
<msg timestamp="20201112 09:43:43.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.448" endtime="20201112 09:43:43.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021707569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.739" endtime="20201112 09:43:43.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.747" endtime="20201112 09:43:43.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.446" endtime="20201112 09:43:43.749"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.444" endtime="20201112 09:43:43.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:43.754" level="INFO">${RESULT} = [{'time': 0.021806417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.884800000000207e-05, 'source_diff': 9.884800000000207e-05}, {'time': 0.021910056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:43.750" endtime="20201112 09:43:43.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:43.767" level="INFO">${ACCURACY} = {'time': [0.021806417, 0.021910056, 0.022013056, 0.022115083, 0.022218083, 0.022321083, 0.022424111, 0.022527097, 0.022630181, 0.022733125, 0.022835167, 0.022938139, 0.023040167, 0.023143139, 0.023246...</msg>
<status status="PASS" starttime="20201112 09:43:43.755" endtime="20201112 09:43:43.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.772" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 09:43:43.771" endtime="20201112 09:43:43.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.774" level="INFO">VALUE: [9.884800000000207e-05, 9.891700000000045e-05, 9.888900000000131e-05, 9.809700000000185e-05, 9.888900000000131e-05, 9.873599999999857e-05, 9.8721999999999e-05, 9.881899999999999e-05, 9.911199999999842e-05, 9.86670000000002e-05, 9.820899999999841e-05, 9.873599999999857e-05, 9.813900000000056e-05, 9.862500000000149e-05, 9.90419999999971e-05, 9.884699999999913e-05, 9.901399999999796e-05, 9.806999999999871e-05, 9.872299999999848e-05, 9.873599999999857e-05, 9.809699999999838e-05, 9.815200000000066e-05, 9.884699999999913e-05, 9.815300000000013e-05, 9.805499999999967e-05, 9.8721999999999e-05, 9.888899999999784e-05, 9.869399999999987e-05, 9.863900000000106e-05, 9.8721999999999e-05, 9.897199999999926e-05, 9.898599999999882e-05, 9.876400000000118e-05, 9.9028000000001e-05, 9.811099999999795e-05, 9.870799999999944e-05, 9.8721999999999e-05, 9.869399999999987e-05, 9.877800000000075e-05, 9.873599999999857e-05, 9.875000000000161e-05, 9.9028000000001e-05, 9.865299999999716e-05, 9.888900000000131e-05, 9.904200000000057e-05, 9.88059999999999e-05, 9.881999999999946e-05, 9.887499999999827e-05, 9.873600000000204e-05, 9.88609999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:43:43.773" endtime="20201112 09:43:43.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.768" endtime="20201112 09:43:43.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.778" endtime="20201112 09:43:43.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:43.781" endtime="20201112 09:43:43.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.780" endtime="20201112 09:43:43.801"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.776" endtime="20201112 09:43:43.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.409" endtime="20201112 09:43:43.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.409" endtime="20201112 09:43:43.802"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.811" endtime="20201112 09:43:43.830"></status>
</kw>
<msg timestamp="20201112 09:43:43.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.809" endtime="20201112 09:43:43.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:43.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:43.831" endtime="20201112 09:43:43.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.833" endtime="20201112 09:43:43.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.807" endtime="20201112 09:43:43.837"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.805" endtime="20201112 09:43:43.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:43.843" endtime="20201112 09:43:44.129"></status>
</kw>
<msg timestamp="20201112 09:43:44.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:43.842" endtime="20201112 09:43:44.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021812847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021912569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.133" endtime="20201112 09:43:44.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.141" endtime="20201112 09:43:44.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.839" endtime="20201112 09:43:44.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.838" endtime="20201112 09:43:44.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.148" level="INFO">${RESULT} = [{'time': 0.021912569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.9722e-05, 'source_diff': 9.9722e-05}, {'time': 0.022017181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.994500000000059e-...</msg>
<status status="PASS" starttime="20201112 09:43:44.144" endtime="20201112 09:43:44.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.161" level="INFO">${ACCURACY} = {'time': [0.021912569, 0.022017181, 0.022121194, 0.022225194, 0.022329208, 0.022433222, 0.022537208, 0.022640222, 0.022744306, 0.022848236, 0.022952292, 0.02305625, 0.023160264, 0.023264264, 0.0233682...</msg>
<status status="PASS" starttime="20201112 09:43:44.149" endtime="20201112 09:43:44.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.166" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.165" endtime="20201112 09:43:44.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.168" level="INFO">VALUE: [9.9722e-05, 9.994500000000059e-05, 9.969400000000087e-05, 9.99159999999985e-05, 9.963899999999859e-05, 9.98609999999997e-05, 9.988899999999884e-05, 9.91800000000008e-05, 9.973699999999905e-05, 9.987499999999927e-05, 9.994500000000059e-05, 9.993100000000102e-05, 9.997200000000026e-05, 9.961099999999945e-05, 9.969500000000034e-05, 9.911100000000242e-05, 9.997200000000026e-05, 9.966600000000173e-05, 9.965200000000216e-05, 9.962499999999902e-05, 9.966600000000173e-05, 9.96800000000013e-05, 9.963899999999859e-05, 0.00010005599999999767, 9.9722e-05, 9.988899999999884e-05, 9.973599999999957e-05, 9.913899999999809e-05, 9.99999999999994e-05, 9.96670000000012e-05, 9.916600000000123e-05, 9.911100000000242e-05, 9.982000000000046e-05, 0.00010002699999999906, 9.905600000000014e-05, 9.961099999999945e-05, 9.91800000000008e-05, 9.916600000000123e-05, 9.98609999999997e-05, 9.988899999999884e-05, 9.913900000000156e-05, 9.979200000000132e-05, 9.905500000000067e-05, 9.968100000000077e-05, 9.976399999999871e-05, 9.9722e-05, 9.974999999999914e-05, 9.974999999999914e-05, 0.00010001400000000243, 9.96670000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:43:44.167" endtime="20201112 09:43:44.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.162" endtime="20201112 09:43:44.170"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.172" endtime="20201112 09:43:44.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.175" endtime="20201112 09:43:44.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.174" endtime="20201112 09:43:44.195"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.170" endtime="20201112 09:43:44.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.803" endtime="20201112 09:43:44.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:43.802" endtime="20201112 09:43:44.196"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.205" endtime="20201112 09:43:44.225"></status>
</kw>
<msg timestamp="20201112 09:43:44.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.203" endtime="20201112 09:43:44.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.226" endtime="20201112 09:43:44.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.229" endtime="20201112 09:43:44.231"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.201" endtime="20201112 09:43:44.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.199" endtime="20201112 09:43:44.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.239" endtime="20201112 09:43:44.525"></status>
</kw>
<msg timestamp="20201112 09:43:44.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.237" endtime="20201112 09:43:44.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021732792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021833431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.529" endtime="20201112 09:43:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.537" endtime="20201112 09:43:44.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.235" endtime="20201112 09:43:44.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.233" endtime="20201112 09:43:44.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.543" level="INFO">${RESULT} = [{'time': 0.021833431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010063899999999959, 'source_diff': 0.00010063899999999959}, {'time': 0.021939056, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:44.540" endtime="20201112 09:43:44.543"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.556" level="INFO">${ACCURACY} = {'time': [0.021833431, 0.021939056, 0.022044069, 0.022149069, 0.022253069, 0.022357069, 0.022461083, 0.022566097, 0.022671111, 0.022776097, 0.022881111, 0.022986139, 0.023091139, 0.023196139, 0.023301...</msg>
<status status="PASS" starttime="20201112 09:43:44.544" endtime="20201112 09:43:44.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.561" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.560" endtime="20201112 09:43:44.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.563" level="INFO">VALUE: [0.00010063899999999959, 0.00010099999999999693, 0.00010101300000000049, 0.000100722000000001, 0.00010001299999999949, 0.00010009700000000038, 0.00010019400000000137, 0.00010090299999999941, 0.00010088899999999984, 0.00010080499999999895, 0.0001006939999999984, 0.00010091699999999898, 0.00010076399999999971, 0.00010088899999999984, 0.0001010419999999991, 0.00010061100000000045, 0.00010090299999999941, 0.00010019500000000084, 0.00010041699999999848, 0.0001001939999999979, 0.00010062500000000002, 0.0001001800000000018, 0.0001006800000000023, 0.00010009700000000038, 0.0001006800000000023, 0.00010084699999999766, 0.00010066699999999873, 0.00010095800000000169, 0.00010068100000000177, 0.00010088899999999984, 0.00010015300000000213, 0.0001008610000000007, 0.00010084700000000113, 0.00010075000000000014, 0.00010070900000000091, 0.00010062500000000002, 0.00010087500000000027, 0.00010065199999999969, 0.00010015299999999866, 0.00010008300000000081, 0.0001009159999999995, 0.00010079199999999885, 0.00010077799999999928, 0.00010093100000000202, 0.00010066699999999873, 0.00010076399999999971, 0.00010018100000000127, 0.00010015299999999866, 0.00010088899999999984, 0.00010098600000000083]</msg>
<status status="PASS" starttime="20201112 09:43:44.562" endtime="20201112 09:43:44.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.557" endtime="20201112 09:43:44.565"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.567" endtime="20201112 09:43:44.568"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.570" endtime="20201112 09:43:44.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.569" endtime="20201112 09:43:44.590"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.565" endtime="20201112 09:43:44.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.197" endtime="20201112 09:43:44.591"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.197" endtime="20201112 09:43:44.591"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.600" endtime="20201112 09:43:44.619"></status>
</kw>
<msg timestamp="20201112 09:43:44.619" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.598" endtime="20201112 09:43:44.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.620" endtime="20201112 09:43:44.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.623" endtime="20201112 09:43:44.625"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.596" endtime="20201112 09:43:44.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.593" endtime="20201112 09:43:44.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.633" endtime="20201112 09:43:44.919"></status>
</kw>
<msg timestamp="20201112 09:43:44.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.631" endtime="20201112 09:43:44.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021795097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021897611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:44.923" endtime="20201112 09:43:44.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.931" endtime="20201112 09:43:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.629" endtime="20201112 09:43:44.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.627" endtime="20201112 09:43:44.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:44.938" level="INFO">${RESULT} = [{'time': 0.021897611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010251400000000147, 'source_diff': 0.00010251400000000147}, {'time': 0.02200425, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:44.935" endtime="20201112 09:43:44.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:44.952" level="INFO">${ACCURACY} = {'time': [0.021897611, 0.02200425, 0.022110306, 0.02221625, 0.022321264, 0.022427306, 0.022533278, 0.022639278, 0.022745292, 0.022851347, 0.022957319, 0.023063319, 0.023169333, 0.023275333, 0.02338133...</msg>
<status status="PASS" starttime="20201112 09:43:44.939" endtime="20201112 09:43:44.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.956" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 09:43:44.955" endtime="20201112 09:43:44.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:44.959" level="INFO">VALUE: [0.00010251400000000147, 0.0001015419999999996, 0.00010208399999999881, 0.0001016939999999994, 0.00010113900000000009, 0.00010165300000000016, 0.00010166699999999973, 0.00010202799999999707, 0.00010197300000000173, 0.00010190300000000041, 0.0001016939999999994, 0.00010193000000000008, 0.00010190200000000094, 0.00010198599999999836, 0.00010198600000000183, 0.00010112500000000052, 0.00010186099999999823, 0.00010109700000000138, 0.00010169400000000287, 0.00010191699999999998, 0.00010187500000000127, 0.00010175000000000115, 0.00010177800000000028, 0.00010195899999999869, 0.00010101399999999996, 0.00010204099999999716, 0.00010179100000000038, 0.00010167999999999983, 0.00010106899999999877, 0.00010179100000000038, 0.00010162500000000102, 0.00010195799999999922, 0.00010162500000000102, 0.00010195799999999922, 0.00010183299999999909, 0.00010169400000000287, 0.00010162499999999755, 0.0001020000000000014, 0.0001020420000000001, 0.00010105599999999867, 0.00010187500000000127, 0.00010201400000000097, 0.00010190300000000041, 0.00010166699999999973, 0.0001016800000000033, 0.00010108299999999834, 0.00010163900000000059, 0.00010111100000000095, 0.00010195900000000216, 0.00010206999999999924]</msg>
<status status="PASS" starttime="20201112 09:43:44.958" endtime="20201112 09:43:44.960"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.953" endtime="20201112 09:43:44.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.962" endtime="20201112 09:43:44.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:44.966" endtime="20201112 09:43:44.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.964" endtime="20201112 09:43:44.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.961" endtime="20201112 09:43:44.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.592" endtime="20201112 09:43:44.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.591" endtime="20201112 09:43:44.987"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:44.995" endtime="20201112 09:43:45.015"></status>
</kw>
<msg timestamp="20201112 09:43:45.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:44.994" endtime="20201112 09:43:45.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.016" endtime="20201112 09:43:45.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.019" endtime="20201112 09:43:45.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.991" endtime="20201112 09:43:45.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.989" endtime="20201112 09:43:45.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.029" endtime="20201112 09:43:45.317"></status>
</kw>
<msg timestamp="20201112 09:43:45.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.027" endtime="20201112 09:43:45.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021891181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.321" endtime="20201112 09:43:45.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.329" endtime="20201112 09:43:45.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.025" endtime="20201112 09:43:45.332"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.023" endtime="20201112 09:43:45.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.336" level="INFO">${RESULT} = [{'time': 0.021891181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010320899999999994, 'source_diff': 0.00010320899999999994}, {'time': 0.021998819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:45.333" endtime="20201112 09:43:45.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.349" level="INFO">${ACCURACY} = {'time': [0.021891181, 0.021998819, 0.022105833, 0.022211833, 0.022318861, 0.022424847, 0.022530861, 0.022637875, 0.022743875, 0.022850903, 0.022956889, 0.023062944, 0.023169903, 0.023276931, 0.023383...</msg>
<status status="PASS" starttime="20201112 09:43:45.337" endtime="20201112 09:43:45.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.354" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.353" endtime="20201112 09:43:45.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.356" level="INFO">VALUE: [0.00010320899999999994, 0.00010299999999999893, 0.00010265199999999822, 0.00010218000000000033, 0.00010274999999999868, 0.00010208300000000281, 0.00010213899999999762, 0.00010284699999999966, 0.00010216700000000023, 0.00010276399999999825, 0.00010216700000000023, 0.00010222199999999904, 0.00010304199999999764, 0.00010283399999999956, 0.00010266600000000126, 0.00010276299999999877, 0.00010213800000000162, 0.00010284699999999966, 0.00010220799999999947, 0.00010256999999999974, 0.00010280500000000095, 0.00010299999999999893, 0.00010294400000000065, 0.00010208299999999934, 0.00010282, 0.00010297299999999926, 0.00010299999999999893, 0.00010215300000000066, 0.00010213899999999762, 0.0001030420000000011, 0.00010288900000000184, 0.00010206899999999977, 0.0001028879999999989, 0.0001020550000000002, 0.00010281900000000052, 0.00010277799999999782, 0.0001030000000000024, 0.00010208299999999934, 0.00010263899999999812, 0.00010262500000000202, 0.00010209699999999891, 0.00010215300000000066, 0.00010211099999999848, 0.00010282, 0.00010211100000000195, 0.0001021809999999998, 0.00010261100000000245, 0.00010206999999999924, 0.00010212500000000152, 0.00010304100000000163]</msg>
<status status="PASS" starttime="20201112 09:43:45.355" endtime="20201112 09:43:45.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.350" endtime="20201112 09:43:45.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.360" endtime="20201112 09:43:45.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.363" endtime="20201112 09:43:45.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.362" endtime="20201112 09:43:45.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.358" endtime="20201112 09:43:45.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.988" endtime="20201112 09:43:45.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:44.987" endtime="20201112 09:43:45.384"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.392" endtime="20201112 09:43:45.412"></status>
</kw>
<msg timestamp="20201112 09:43:45.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.391" endtime="20201112 09:43:45.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.413" endtime="20201112 09:43:45.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.416" endtime="20201112 09:43:45.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.388" endtime="20201112 09:43:45.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.386" endtime="20201112 09:43:45.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.426" endtime="20201112 09:43:45.712"></status>
</kw>
<msg timestamp="20201112 09:43:45.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:45.424" endtime="20201112 09:43:45.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021821139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02192525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:45.716" endtime="20201112 09:43:45.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.724" endtime="20201112 09:43:45.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.422" endtime="20201112 09:43:45.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.420" endtime="20201112 09:43:45.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:45.730" level="INFO">${RESULT} = [{'time': 0.02192525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010411100000000048, 'source_diff': 0.00010411100000000048}, {'time': 0.022033875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:43:45.727" endtime="20201112 09:43:45.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:45.743" level="INFO">${ACCURACY} = {'time': [0.02192525, 0.022033875, 0.022140917, 0.022248903, 0.022356903, 0.022463903, 0.022571917, 0.022678931, 0.022786958, 0.022894986, 0.023002944, 0.023110972, 0.023217972, 0.023325972, 0.0234339...</msg>
<status status="PASS" starttime="20201112 09:43:45.731" endtime="20201112 09:43:45.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.748" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 09:43:45.747" endtime="20201112 09:43:45.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.750" level="INFO">VALUE: [0.00010411100000000048, 0.00010390300000000241, 0.00010315299999999819, 0.00010370900000000044, 0.0001040420000000021, 0.0001031810000000008, 0.00010358400000000031, 0.00010305600000000067, 0.00010379099999999891, 0.00010374999999999968, 0.0001038749999999998, 0.00010376399999999925, 0.0001030139999999985, 0.00010376399999999925, 0.00010362499999999955, 0.00010313899999999862, 0.00010381900000000152, 0.00010379199999999839, 0.00010372200000000054, 0.00010384700000000066, 0.00010369500000000087, 0.00010309699999999991, 0.00010369500000000087, 0.00010398600000000036, 0.00010309699999999991, 0.00010376400000000272, 0.00010402699999999959, 0.00010388899999999937, 0.00010394400000000165, 0.00010363900000000259, 0.00010313900000000209, 0.00010341700000000148, 0.00010374999999999968, 0.00010319500000000037, 0.00010380600000000142, 0.000103820000000001, 0.00010372200000000054, 0.00010398600000000036, 0.00010311099999999948, 0.00010312499999999905, 0.00010312499999999905, 0.00010376299999999977, 0.00010397200000000079, 0.00010372200000000054, 0.00010397200000000079, 0.00010402799999999907, 0.00010390299999999894, 0.00010399999999999993, 0.0001038749999999998, 0.00010379200000000185]</msg>
<status status="PASS" starttime="20201112 09:43:45.749" endtime="20201112 09:43:45.751"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.744" endtime="20201112 09:43:45.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.754" endtime="20201112 09:43:45.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.758" endtime="20201112 09:43:45.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.756" endtime="20201112 09:43:45.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.752" endtime="20201112 09:43:45.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.385" endtime="20201112 09:43:45.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.384" endtime="20201112 09:43:45.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:06.446" endtime="20201112 09:43:45.778"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.783" endtime="20201112 09:43:45.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.781" endtime="20201112 09:43:45.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.780" endtime="20201112 09:43:45.803"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:06.372" endtime="20201112 09:43:45.804" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:45.811" endtime="20201112 09:43:45.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.810" endtime="20201112 09:43:45.831"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.845" endtime="20201112 09:43:45.863"></status>
</kw>
<msg timestamp="20201112 09:43:45.864" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.843" endtime="20201112 09:43:45.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.865" endtime="20201112 09:43:45.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.869" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:43:45.867" endtime="20201112 09:43:45.870"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:45.841" endtime="20201112 09:43:45.870"></status>
</kw>
<status status="FAIL" starttime="20201112 09:43:45.838" endtime="20201112 09:43:45.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.837" endtime="20201112 09:43:45.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:43:45.875" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:43:45.874" endtime="20201112 09:43:45.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.872" endtime="20201112 09:43:45.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.836" endtime="20201112 09:43:45.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.835" endtime="20201112 09:43:45.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.876" endtime="20201112 09:43:45.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.833" endtime="20201112 09:43:45.878"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.832" endtime="20201112 09:43:45.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.808" endtime="20201112 09:43:45.879"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.889" endtime="20201112 09:43:45.903"></status>
</kw>
<msg timestamp="20201112 09:43:45.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.888" endtime="20201112 09:43:45.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:45.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:45.905" endtime="20201112 09:43:45.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.907" endtime="20201112 09:43:45.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.885" endtime="20201112 09:43:45.910"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.883" endtime="20201112 09:43:45.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:45.918" endtime="20201112 09:43:46.199"></status>
</kw>
<msg timestamp="20201112 09:43:46.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070941069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070945847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:45.915" endtime="20201112 09:43:46.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070941069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070945847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.203" endtime="20201112 09:43:46.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.211" endtime="20201112 09:43:46.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.912" endtime="20201112 09:43:46.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.911" endtime="20201112 09:43:46.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.218" level="INFO">${RESULT} = [{'time': 0.070945847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.778000000010829e-06, 'source_diff': 4.778000000010829e-06}, {'time': 0.070951472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.215" endtime="20201112 09:43:46.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.231" level="INFO">${ACCURACY} = {'time': [0.070945847, 0.070951472, 0.070956514, 0.0709625, 0.070968347, 0.070973375, 0.070978319, 0.070983264, 0.070988208, 0.070993403, 0.070998417, 0.071003347, 0.071008319, 0.071013347, 0.07101829...</msg>
<status status="PASS" starttime="20201112 09:43:46.219" endtime="20201112 09:43:46.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.236" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.235" endtime="20201112 09:43:46.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.238" level="INFO">VALUE: [4.778000000010829e-06, 3.8049999999956174e-06, 3.805999999995091e-06, 4.375000000000906e-06, 4.153000000006735e-06, 3.4440000000052207e-06, 3.319000000001626e-06, 3.79200000000246e-06, 3.2769999999959776e-06, 3.79200000000246e-06, 3.2919999999880822e-06, 3.7779999999959513e-06, 3.3049999999951174e-06, 3.319000000001626e-06, 3.3200000000011e-06, 3.7779999999959513e-06, 3.2909999999886086e-06, 3.79200000000246e-06, 3.305999999994591e-06, 3.7779999999959513e-06, 3.2910000000024864e-06, 3.79200000000246e-06, 3.3049999999951174e-06, 3.2360000000036804e-06, 3.388999999992537e-06, 3.7779999999959513e-06, 3.306000000008469e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.7499999999968114e-06, 3.778000000009829e-06, 3.305999999994591e-06, 3.805999999995091e-06, 3.319000000001626e-06, 3.7779999999959513e-06, 3.3049999999951174e-06, 3.7779999999959513e-06, 3.360999999993397e-06, 3.3200000000011e-06, 3.278000000009329e-06, 3.7639999999894425e-06, 3.79200000000246e-06, 3.778000000009829e-06, 3.7910000000029864e-06, 3.3049999999951174e-06, 3.79200000000246e-06, 3.2910000000024864e-06, 3.319000000001626e-06, 3.7779999999959513e-06, 3.3049999999951174e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.237" endtime="20201112 09:43:46.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.232" endtime="20201112 09:43:46.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.242" endtime="20201112 09:43:46.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.245" endtime="20201112 09:43:46.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.243" endtime="20201112 09:43:46.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.240" endtime="20201112 09:43:46.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.881" endtime="20201112 09:43:46.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.881" endtime="20201112 09:43:46.266"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.276" endtime="20201112 09:43:46.290"></status>
</kw>
<msg timestamp="20201112 09:43:46.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.274" endtime="20201112 09:43:46.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.291" endtime="20201112 09:43:46.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.294" endtime="20201112 09:43:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.271" endtime="20201112 09:43:46.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.269" endtime="20201112 09:43:46.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.303" endtime="20201112 09:43:46.595"></status>
</kw>
<msg timestamp="20201112 09:43:46.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.301" endtime="20201112 09:43:46.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023253306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023259139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:46.599" endtime="20201112 09:43:46.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.607" endtime="20201112 09:43:46.609"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.299" endtime="20201112 09:43:46.610"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.297" endtime="20201112 09:43:46.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:46.614" level="INFO">${RESULT} = [{'time': 0.023259139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.833000000000227e-06, 'source_diff': 5.833000000000227e-06}, {'time': 0.023265639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.611" endtime="20201112 09:43:46.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:46.627" level="INFO">${ACCURACY} = {'time': [0.023259139, 0.023265639, 0.023271708, 0.023277472, 0.023283486, 0.023289625, 0.023295708, 0.023301528, 0.023307639, 0.023313708, 0.023319444, 0.023325639, 0.023331528, 0.023337806, 0.023344...</msg>
<status status="PASS" starttime="20201112 09:43:46.615" endtime="20201112 09:43:46.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.632" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 09:43:46.631" endtime="20201112 09:43:46.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.634" level="INFO">VALUE: [5.833000000000227e-06, 4.875000000001406e-06, 4.846999999998797e-06, 4.152999999999796e-06, 4.860999999998367e-06, 4.514000000000601e-06, 4.8749999999979365e-06, 4.152999999999796e-06, 4.889000000000976e-06, 4.471999999998422e-06, 4.1660000000033615e-06, 4.528000000000171e-06, 4.528000000000171e-06, 4.5699999999988805e-06, 5.221999999999172e-06, 4.528000000000171e-06, 4.554999999999837e-06, 4.166999999999366e-06, 4.555000000003306e-06, 4.8749999999979365e-06, 4.514000000000601e-06, 4.152999999999796e-06, 4.513999999997131e-06, 4.513000000001127e-06, 4.875000000001406e-06, 4.513999999997131e-06, 4.8749999999979365e-06, 4.152999999999796e-06, 4.917000000000116e-06, 4.875000000001406e-06, 4.8749999999979365e-06, 4.513000000001127e-06, 4.903000000000546e-06, 4.152999999999796e-06, 4.514000000000601e-06, 4.889000000000976e-06, 4.875000000001406e-06, 4.458999999998325e-06, 4.875000000001406e-06, 4.513000000001127e-06, 4.514000000000601e-06, 4.846999999998797e-06, 4.514000000000601e-06, 4.8749999999979365e-06, 4.514000000000601e-06, 4.875000000001406e-06, 4.4999999999975615e-06, 4.860999999998367e-06, 4.152999999999796e-06, 4.86200000000131e-06]</msg>
<status status="PASS" starttime="20201112 09:43:46.633" endtime="20201112 09:43:46.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.628" endtime="20201112 09:43:46.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.638" endtime="20201112 09:43:46.639"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:46.641" endtime="20201112 09:43:46.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.640" endtime="20201112 09:43:46.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.636" endtime="20201112 09:43:46.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.267" endtime="20201112 09:43:46.662"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.267" endtime="20201112 09:43:46.662"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.671" endtime="20201112 09:43:46.685"></status>
</kw>
<msg timestamp="20201112 09:43:46.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.669" endtime="20201112 09:43:46.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:46.686" endtime="20201112 09:43:46.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.689" endtime="20201112 09:43:46.690"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.667" endtime="20201112 09:43:46.691"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.665" endtime="20201112 09:43:46.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.698" endtime="20201112 09:43:46.981"></status>
</kw>
<msg timestamp="20201112 09:43:46.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02173, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736528, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:43:46.696" endtime="20201112 09:43:46.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:46.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02173, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021736528, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201112 09:43:46.986" endtime="20201112 09:43:46.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:46.994" endtime="20201112 09:43:46.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.694" endtime="20201112 09:43:46.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.692" endtime="20201112 09:43:46.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.001" level="INFO">${RESULT} = [{'time': 0.021736528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.528000000002171e-06, 'source_diff': 6.528000000002171e-06}, {'time': 0.021743847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:46.997" endtime="20201112 09:43:47.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.014" level="INFO">${ACCURACY} = {'time': [0.021736528, 0.021743847, 0.021750931, 0.021758056, 0.021764972, 0.021771833, 0.021778972, 0.021786014, 0.021793125, 0.021799861, 0.021807097, 0.021813875, 0.021821056, 0.021827972, 0.021834...</msg>
<status status="PASS" starttime="20201112 09:43:47.002" endtime="20201112 09:43:47.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.019" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.018" endtime="20201112 09:43:47.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.021" level="INFO">VALUE: [6.528000000002171e-06, 5.930000000001212e-06, 5.59800000000249e-06, 5.59800000000249e-06, 5.569000000000407e-06, 5.596999999999547e-06, 5.639000000001726e-06, 5.945000000000256e-06, 5.931000000000686e-06, 5.180000000000462e-06, 5.930000000001212e-06, 5.235999999998742e-06, 5.569999999999881e-06, 5.236000000002211e-06, 5.250000000001781e-06, 5.569999999999881e-06, 5.556000000000311e-06, 5.596999999999547e-06, 5.5979999999990204e-06, 5.222000000002641e-06, 5.569999999999881e-06, 5.235999999998742e-06, 5.582999999999977e-06, 5.569000000000407e-06, 5.5839999999994505e-06, 5.221999999999172e-06, 5.540999999997798e-06, 5.931000000000686e-06, 5.236000000002211e-06, 5.582999999999977e-06, 5.582999999999977e-06, 5.903000000001546e-06, 6.292000000001491e-06, 6.291999999998021e-06, 5.542000000000741e-06, 5.596999999999547e-06, 5.2499999999983116e-06, 5.916000000001642e-06, 5.596999999999547e-06, 5.915999999998173e-06, 5.236000000002211e-06, 5.958000000000352e-06, 5.542000000000741e-06, 5.542000000000741e-06, 5.9729999999993955e-06, 5.971999999999922e-06, 5.556000000000311e-06, 5.221999999999172e-06, 5.582999999999977e-06, 5.221999999999172e-06]</msg>
<status status="PASS" starttime="20201112 09:43:47.020" endtime="20201112 09:43:47.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.015" endtime="20201112 09:43:47.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.025" endtime="20201112 09:43:47.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.028" endtime="20201112 09:43:47.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.027" endtime="20201112 09:43:47.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.023" endtime="20201112 09:43:47.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.663" endtime="20201112 09:43:47.049"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:46.662" endtime="20201112 09:43:47.049"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.058" endtime="20201112 09:43:47.072"></status>
</kw>
<msg timestamp="20201112 09:43:47.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.056" endtime="20201112 09:43:47.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.073" endtime="20201112 09:43:47.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.076" endtime="20201112 09:43:47.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.053" endtime="20201112 09:43:47.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.051" endtime="20201112 09:43:47.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.085" endtime="20201112 09:43:47.369"></status>
</kw>
<msg timestamp="20201112 09:43:47.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.083" endtime="20201112 09:43:47.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021918264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.373" endtime="20201112 09:43:47.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.381" endtime="20201112 09:43:47.383"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.081" endtime="20201112 09:43:47.384"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.079" endtime="20201112 09:43:47.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.388" level="INFO">${RESULT} = [{'time': 0.021918264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.611000000001117e-06, 'source_diff': 7.611000000001117e-06}, {'time': 0.021926986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.385" endtime="20201112 09:43:47.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.401" level="INFO">${ACCURACY} = {'time': [0.021918264, 0.021926986, 0.021934958, 0.021943014, 0.021951042, 0.021958917, 0.021966819, 0.021975139, 0.021983861, 0.021992069, 0.022000069, 0.022007903, 0.022015903, 0.022024083, 0.022033...</msg>
<status status="PASS" starttime="20201112 09:43:47.389" endtime="20201112 09:43:47.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.406" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.405" endtime="20201112 09:43:47.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.408" level="INFO">VALUE: [7.611000000001117e-06, 7.0279999999992016e-06, 6.651999999999353e-06, 6.6529999999988265e-06, 6.292000000001491e-06, 6.639000000002726e-06, 6.651999999999353e-06, 7.000000000000062e-06, 7.054999999998868e-06, 6.665999999998923e-06, 6.319000000001157e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.651999999999353e-06, 7.361000000000867e-06, 6.360999999999867e-06, 6.292000000001491e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.667000000001866e-06, 6.291000000002017e-06, 6.304999999998118e-06, 6.305000000001587e-06, 6.667000000001866e-06, 6.6669999999983964e-06, 6.653000000002296e-06, 6.651999999999353e-06, 6.319000000001157e-06, 7.013999999999632e-06, 7.013999999999632e-06, 6.651999999999353e-06, 6.290999999998548e-06, 6.6529999999988265e-06, 6.306000000001061e-06, 6.291999999998021e-06, 6.652000000002822e-06, 6.333000000000727e-06, 7.013000000000158e-06, 6.653000000002296e-06, 6.305999999997591e-06, 7.013999999999632e-06, 7.0419999999987715e-06, 6.665999999998923e-06, 6.638999999999257e-06, 7.013000000000158e-06, 6.679999999998493e-06, 6.6529999999988265e-06, 6.6529999999988265e-06, 6.651999999999353e-06, 6.318999999997688e-06]</msg>
<status status="PASS" starttime="20201112 09:43:47.407" endtime="20201112 09:43:47.413"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.402" endtime="20201112 09:43:47.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.416" endtime="20201112 09:43:47.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.420" endtime="20201112 09:43:47.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.418" endtime="20201112 09:43:47.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.415" endtime="20201112 09:43:47.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.050" endtime="20201112 09:43:47.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.049" endtime="20201112 09:43:47.441"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.449" endtime="20201112 09:43:47.464"></status>
</kw>
<msg timestamp="20201112 09:43:47.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.448" endtime="20201112 09:43:47.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.465" endtime="20201112 09:43:47.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.468" endtime="20201112 09:43:47.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.445" endtime="20201112 09:43:47.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.443" endtime="20201112 09:43:47.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.477" endtime="20201112 09:43:47.762"></status>
</kw>
<msg timestamp="20201112 09:43:47.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.475" endtime="20201112 09:43:47.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021936097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021944069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.767" endtime="20201112 09:43:47.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.775" endtime="20201112 09:43:47.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.472" endtime="20201112 09:43:47.777"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.471" endtime="20201112 09:43:47.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:47.782" level="INFO">${RESULT} = [{'time': 0.021944069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.971999999998453e-06, 'source_diff': 7.971999999998453e-06}, {'time': 0.021953778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:47.778" endtime="20201112 09:43:47.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:47.795" level="INFO">${ACCURACY} = {'time': [0.021944069, 0.021953778, 0.021962819, 0.021971875, 0.021980875, 0.021989861, 0.021998778, 0.022007722, 0.022016681, 0.022025986, 0.022034667, 0.022043806, 0.022052694, 0.022061653, 0.022070...</msg>
<status status="PASS" starttime="20201112 09:43:47.783" endtime="20201112 09:43:47.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.800" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 09:43:47.799" endtime="20201112 09:43:47.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.802" level="INFO">VALUE: [7.971999999998453e-06, 8.069999999998911e-06, 7.763000000000908e-06, 7.389000000000007e-06, 7.736000000001242e-06, 7.707999999998633e-06, 7.722000000001672e-06, 7.347000000001297e-06, 7.375000000000437e-06, 8.083000000002477e-06, 7.375000000000437e-06, 7.722999999997676e-06, 7.361000000000867e-06, 7.722000000001672e-06, 7.375000000000437e-06, 8.028000000000202e-06, 7.735999999997772e-06, 7.333000000001727e-06, 7.736000000001242e-06, 7.375000000000437e-06, 7.736000000001242e-06, 7.722000000001672e-06, 7.430999999998716e-06, 8.068999999999438e-06, 7.737000000000716e-06, 7.333000000001727e-06, 7.777999999999952e-06, 7.347000000001297e-06, 7.360999999997397e-06, 7.708000000002102e-06, 7.737000000000716e-06, 7.708000000002102e-06, 7.693999999999063e-06, 7.723000000001146e-06, 7.361000000000867e-06, 7.721999999998203e-06, 7.375000000000437e-06, 7.389000000000007e-06, 7.318999999998688e-06, 8.082999999999008e-06, 7.361000000000867e-06, 7.721999999998203e-06, 7.333999999997731e-06, 7.764000000000382e-06, 7.375000000000437e-06, 7.723000000001146e-06, 7.361000000000867e-06, 7.721999999998203e-06, 7.721999999998203e-06, 7.750000000000812e-06]</msg>
<status status="PASS" starttime="20201112 09:43:47.801" endtime="20201112 09:43:47.803"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.796" endtime="20201112 09:43:47.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.806" endtime="20201112 09:43:47.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:47.809" endtime="20201112 09:43:47.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.807" endtime="20201112 09:43:47.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.804" endtime="20201112 09:43:47.829"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.442" endtime="20201112 09:43:47.830"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.441" endtime="20201112 09:43:47.830"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.839" endtime="20201112 09:43:47.853"></status>
</kw>
<msg timestamp="20201112 09:43:47.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.837" endtime="20201112 09:43:47.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:47.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:47.855" endtime="20201112 09:43:47.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.858" endtime="20201112 09:43:47.859"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.835" endtime="20201112 09:43:47.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.832" endtime="20201112 09:43:47.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:47.867" endtime="20201112 09:43:48.153"></status>
</kw>
<msg timestamp="20201112 09:43:48.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:47.865" endtime="20201112 09:43:48.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022522542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.157" endtime="20201112 09:43:48.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.166" endtime="20201112 09:43:48.167"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.862" endtime="20201112 09:43:48.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.861" endtime="20201112 09:43:48.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.172" level="INFO">${RESULT} = [{'time': 0.022532292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.749999999999343e-06, 'source_diff': 9.749999999999343e-06}, {'time': 0.022542847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:48.169" endtime="20201112 09:43:48.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.231" level="INFO">${ACCURACY} = {'time': [0.022532292, 0.022542847, 0.022553014, 0.022562944, 0.022572917, 0.022583042, 0.022593014, 0.02260275, 0.022613069, 0.022623903, 0.022633931, 0.022643792, 0.022653889, 0.022663917, 0.0226739...</msg>
<status status="PASS" starttime="20201112 09:43:48.173" endtime="20201112 09:43:48.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.235" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.234" endtime="20201112 09:43:48.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.238" level="INFO">VALUE: [9.749999999999343e-06, 8.791000000001048e-06, 8.792000000000522e-06, 8.443999999999813e-06, 8.806000000000092e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.430999999999716e-06, 8.791000000001048e-06, 9.153000000001327e-06, 8.778000000000952e-06, 8.430999999999716e-06, 8.430999999999716e-06, 8.417000000000147e-06, 8.819999999999661e-06, 8.444999999999286e-06, 8.806000000000092e-06, 8.430999999999716e-06, 8.430999999999716e-06, 8.819999999999661e-06, 8.721999999999203e-06, 8.778000000000952e-06, 8.792000000000522e-06, 8.430999999999716e-06, 8.806000000000092e-06, 8.459000000002326e-06, 8.777999999997482e-06, 8.778000000000952e-06, 8.736000000002242e-06, 8.417000000000147e-06, 8.792000000000522e-06, 8.778000000000952e-06, 8.833999999999231e-06, 8.792000000000522e-06, 8.457999999999383e-06, 9.180000000000993e-06, 8.721999999999203e-06, 8.457999999999383e-06, 8.791000000001048e-06, 8.429999999996773e-06, 8.778000000000952e-06, 8.430999999999716e-06, 8.444999999999286e-06, 8.806000000000092e-06, 8.430000000000243e-06, 8.097000000002047e-06, 8.790999999997579e-06, 8.430999999999716e-06, 8.819000000000188e-06, 8.429999999996773e-06]</msg>
<status status="PASS" starttime="20201112 09:43:48.237" endtime="20201112 09:43:48.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.232" endtime="20201112 09:43:48.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.241" endtime="20201112 09:43:48.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.245" endtime="20201112 09:43:48.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.243" endtime="20201112 09:43:48.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.240" endtime="20201112 09:43:48.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.831" endtime="20201112 09:43:48.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:47.830" endtime="20201112 09:43:48.266"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.275" endtime="20201112 09:43:48.290"></status>
</kw>
<msg timestamp="20201112 09:43:48.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.273" endtime="20201112 09:43:48.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.291" endtime="20201112 09:43:48.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.294" endtime="20201112 09:43:48.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.270" endtime="20201112 09:43:48.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.268" endtime="20201112 09:43:48.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.303" endtime="20201112 09:43:48.589"></status>
</kw>
<msg timestamp="20201112 09:43:48.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022863333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.302" endtime="20201112 09:43:48.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022853222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022863333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.593" endtime="20201112 09:43:48.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.601" endtime="20201112 09:43:48.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.299" endtime="20201112 09:43:48.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.297" endtime="20201112 09:43:48.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.608" level="INFO">${RESULT} = [{'time': 0.022863333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.022874139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.605" endtime="20201112 09:43:48.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:48.621" level="INFO">${ACCURACY} = {'time': [0.022863333, 0.022874139, 0.02288525, 0.022896097, 0.022907111, 0.022918125, 0.022929986, 0.022941097, 0.022952014, 0.022962944, 0.022973958, 0.022985069, 0.022996181, 0.023007167, 0.0230179...</msg>
<status status="PASS" starttime="20201112 09:43:48.609" endtime="20201112 09:43:48.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.626" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 09:43:48.625" endtime="20201112 09:43:48.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.628" level="INFO">VALUE: [1.0111000000000148e-05, 9.500000000002562e-06, 9.541999999997802e-06, 9.499999999999093e-06, 9.458000000000383e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.556000000000842e-06, 9.429999999997773e-06, 9.499999999999093e-06, 9.833000000000758e-06, 9.861999999999371e-06, 9.485999999999523e-06, 9.499999999999093e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.153000000001327e-06, 9.499999999999093e-06, 9.513999999998662e-06, 9.860999999999898e-06, 1.0208000000001133e-05, 9.555000000001368e-06, 9.486000000002992e-06, 9.847000000000328e-06, 9.485999999999523e-06, 9.153000000001327e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.847000000000328e-06, 9.471999999999953e-06, 9.485999999999523e-06, 9.513999999998662e-06, 9.860999999999898e-06, 9.819000000001188e-06, 9.542000000001272e-06, 9.874999999999468e-06, 9.153000000001327e-06, 9.513999999998662e-06, 9.528000000001702e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.166000000001423e-06, 9.832999999997288e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201112 09:43:48.627" endtime="20201112 09:43:48.629"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.622" endtime="20201112 09:43:48.630"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.632" endtime="20201112 09:43:48.633"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:48.635" endtime="20201112 09:43:48.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.634" endtime="20201112 09:43:48.655"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.630" endtime="20201112 09:43:48.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.267" endtime="20201112 09:43:48.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.266" endtime="20201112 09:43:48.656"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.666" endtime="20201112 09:43:48.680"></status>
</kw>
<msg timestamp="20201112 09:43:48.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.663" endtime="20201112 09:43:48.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:48.681" endtime="20201112 09:43:48.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.684" endtime="20201112 09:43:48.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.661" endtime="20201112 09:43:48.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.659" endtime="20201112 09:43:48.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.693" endtime="20201112 09:43:48.977"></status>
</kw>
<msg timestamp="20201112 09:43:48.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.691" endtime="20201112 09:43:48.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:48.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022782625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022793764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:48.981" endtime="20201112 09:43:48.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:48.989" endtime="20201112 09:43:48.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.689" endtime="20201112 09:43:48.991"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.687" endtime="20201112 09:43:48.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:48.996" level="INFO">${RESULT} = [{'time': 0.022793764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1139000000000288e-05, 'source_diff': 1.1139000000000288e-05}, {'time': 0.022806597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:48.992" endtime="20201112 09:43:48.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.009" level="INFO">${ACCURACY} = {'time': [0.022793764, 0.022806597, 0.022818333, 0.022830417, 0.022842375, 0.022854542, 0.022866444, 0.022878458, 0.022890597, 0.022902403, 0.022914611, 0.022926653, 0.022939556, 0.022951306, 0.022963...</msg>
<status status="PASS" starttime="20201112 09:43:48.997" endtime="20201112 09:43:49.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.014" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.013" endtime="20201112 09:43:49.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.016" level="INFO">VALUE: [1.1139000000000288e-05, 1.1304999999999649e-05, 1.0151999999999384e-05, 1.0847999999997332e-05, 1.0236000000000273e-05, 1.0610999999997178e-05, 1.0222000000000703e-05, 1.0597000000001078e-05, 1.0596999999997608e-05, 1.0222000000000703e-05, 1.0583000000001508e-05, 1.0597000000001078e-05, 1.1305999999999122e-05, 1.0195000000001037e-05, 1.0554999999998899e-05, 1.0500000000000093e-05, 1.0568999999998469e-05, 1.0209000000000606e-05, 1.0930999999998747e-05, 1.0584000000000982e-05, 1.0223000000000176e-05, 1.0583000000001508e-05, 1.0569000000001938e-05, 1.0943999999998844e-05, 1.0583000000001508e-05, 1.0569999999997942e-05, 1.0930999999998747e-05, 1.0583000000001508e-05, 1.0207999999997663e-05, 1.0569000000001938e-05, 1.0540999999999329e-05, 1.0568999999998469e-05, 1.0930999999998747e-05, 1.1291999999999552e-05, 1.0541999999998802e-05, 1.0221999999997233e-05, 1.0583000000001508e-05, 1.0930000000002743e-05, 1.0584000000000982e-05, 1.0916999999999177e-05, 1.0929999999999274e-05, 1.0152999999998857e-05, 1.0583000000001508e-05, 1.0598000000000551e-05, 1.0236000000000273e-05, 1.0583999999997512e-05, 1.0625000000000218e-05, 1.0929999999999274e-05, 1.0568999999998469e-05, 1.0569999999997942e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.015" endtime="20201112 09:43:49.017"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.010" endtime="20201112 09:43:49.018"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.020" endtime="20201112 09:43:49.021"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.023" endtime="20201112 09:43:49.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.022" endtime="20201112 09:43:49.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.018" endtime="20201112 09:43:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.657" endtime="20201112 09:43:49.044"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:48.657" endtime="20201112 09:43:49.044"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.053" endtime="20201112 09:43:49.068"></status>
</kw>
<msg timestamp="20201112 09:43:49.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.051" endtime="20201112 09:43:49.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.069" endtime="20201112 09:43:49.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.072" endtime="20201112 09:43:49.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.049" endtime="20201112 09:43:49.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.047" endtime="20201112 09:43:49.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.081" endtime="20201112 09:43:49.366"></status>
</kw>
<msg timestamp="20201112 09:43:49.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.079" endtime="20201112 09:43:49.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022770042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022782639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.370" endtime="20201112 09:43:49.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.378" endtime="20201112 09:43:49.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.077" endtime="20201112 09:43:49.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.075" endtime="20201112 09:43:49.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.385" level="INFO">${RESULT} = [{'time': 0.022782639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.022796333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.382" endtime="20201112 09:43:49.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.399" level="INFO">${ACCURACY} = {'time': [0.022782639, 0.022796333, 0.022809167, 0.022822486, 0.022836167, 0.022849486, 0.022862181, 0.022875417, 0.02288825, 0.022901389, 0.022914444, 0.022927306, 0.022940167, 0.022953361, 0.0229661...</msg>
<status status="PASS" starttime="20201112 09:43:49.386" endtime="20201112 09:43:49.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.403" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.402" endtime="20201112 09:43:49.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.406" level="INFO">VALUE: [1.2596999999999609e-05, 1.1999999999998123e-05, 1.1639000000000788e-05, 1.1653000000000358e-05, 1.2000000000001593e-05, 1.1638999999997318e-05, 1.1264000000000413e-05, 1.1638999999997318e-05, 1.1638999999997318e-05, 1.1653000000000358e-05, 1.1624999999997748e-05, 1.1277999999999982e-05, 1.1306000000002592e-05, 1.1999999999998123e-05, 1.1277999999999982e-05, 1.1999999999998123e-05, 1.1652000000000884e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.1653000000000358e-05, 1.1652000000000884e-05, 1.1639000000000788e-05, 1.1291999999999552e-05, 1.1666999999999927e-05, 1.1625000000001218e-05, 1.1652000000000884e-05, 1.1291999999999552e-05, 1.1318999999999219e-05, 1.1625000000001218e-05, 1.1638999999997318e-05, 1.1639000000000788e-05, 1.1305999999999122e-05, 1.1653000000000358e-05, 1.1624999999997748e-05, 1.1305000000003118e-05, 1.1971999999998983e-05, 1.1582999999999039e-05, 1.1652000000000884e-05, 1.1986000000002023e-05, 1.1611000000001648e-05, 1.1612000000001121e-05, 1.1639000000000788e-05, 1.1221999999998233e-05, 1.1624999999997748e-05, 1.2000000000001593e-05, 1.1347000000001828e-05, 1.1624999999997748e-05, 1.1653000000000358e-05, 1.1568999999999469e-05, 1.1639000000000788e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.404" endtime="20201112 09:43:49.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.400" endtime="20201112 09:43:49.407"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.409" endtime="20201112 09:43:49.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.413" endtime="20201112 09:43:49.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.411" endtime="20201112 09:43:49.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.408" endtime="20201112 09:43:49.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.045" endtime="20201112 09:43:49.433"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.044" endtime="20201112 09:43:49.433"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.442" endtime="20201112 09:43:49.457"></status>
</kw>
<msg timestamp="20201112 09:43:49.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.441" endtime="20201112 09:43:49.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.458" endtime="20201112 09:43:49.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.461" endtime="20201112 09:43:49.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.438" endtime="20201112 09:43:49.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.436" endtime="20201112 09:43:49.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.470" endtime="20201112 09:43:49.756"></status>
</kw>
<msg timestamp="20201112 09:43:49.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.468" endtime="20201112 09:43:49.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021992292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022006375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.761" endtime="20201112 09:43:49.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.769" endtime="20201112 09:43:49.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.466" endtime="20201112 09:43:49.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.464" endtime="20201112 09:43:49.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:49.776" level="INFO">${RESULT} = [{'time': 0.022006375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4083000000001539e-05, 'source_diff': 1.4083000000001539e-05}, {'time': 0.022020889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:49.772" endtime="20201112 09:43:49.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:49.790" level="INFO">${ACCURACY} = {'time': [0.022006375, 0.022020889, 0.022035028, 0.02204975, 0.022063708, 0.022077708, 0.022091764, 0.022105847, 0.022119819, 0.022134056, 0.022147889, 0.02216175, 0.02217575, 0.022189986, 0.022203819...</msg>
<status status="PASS" starttime="20201112 09:43:49.777" endtime="20201112 09:43:49.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.795" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 09:43:49.793" endtime="20201112 09:43:49.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.797" level="INFO">VALUE: [1.4083000000001539e-05, 1.308299999999707e-05, 1.2681000000000497e-05, 1.3083000000000539e-05, 1.2708000000000164e-05, 1.2694000000000594e-05, 1.2360999999998928e-05, 1.2389000000001538e-05, 1.2708000000000164e-05, 1.2749999999998873e-05, 1.2735999999999303e-05, 1.2346999999999358e-05, 1.2361000000002398e-05, 1.308299999999707e-05, 1.2360999999998928e-05, 1.2708000000000164e-05, 1.2332999999999789e-05, 1.2708000000000164e-05, 1.2721999999999734e-05, 1.2722999999999207e-05, 1.2361000000002398e-05, 1.2346999999999358e-05, 1.2722000000003203e-05, 1.2695000000000067e-05, 1.2360999999998928e-05, 1.2360999999998928e-05, 1.2375000000001968e-05, 1.2305000000000649e-05, 1.2417000000000677e-05, 1.3069000000000969e-05, 1.2360999999998928e-05, 1.2360999999998928e-05, 1.2346999999999358e-05, 1.2708000000000164e-05, 1.2346999999999358e-05, 1.2708000000000164e-05, 1.2347999999998832e-05, 1.2721999999999734e-05, 1.3070000000000442e-05, 1.2389000000001538e-05, 1.2360999999998928e-05, 1.2722000000003203e-05, 1.2708999999999637e-05, 1.2708000000000164e-05, 1.3097000000000109e-05, 1.3055000000001399e-05, 1.2360999999998928e-05, 1.2375000000001968e-05, 1.2735999999999303e-05, 1.2709000000003107e-05]</msg>
<status status="PASS" starttime="20201112 09:43:49.796" endtime="20201112 09:43:49.798"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.791" endtime="20201112 09:43:49.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.801" endtime="20201112 09:43:49.802"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:49.804" endtime="20201112 09:43:49.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.802" endtime="20201112 09:43:49.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.799" endtime="20201112 09:43:49.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.434" endtime="20201112 09:43:49.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.434" endtime="20201112 09:43:49.825"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.833" endtime="20201112 09:43:49.848"></status>
</kw>
<msg timestamp="20201112 09:43:49.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.832" endtime="20201112 09:43:49.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:49.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:49.849" endtime="20201112 09:43:49.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.852" endtime="20201112 09:43:49.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.829" endtime="20201112 09:43:49.855"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.827" endtime="20201112 09:43:49.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:49.862" endtime="20201112 09:43:50.147"></status>
</kw>
<msg timestamp="20201112 09:43:50.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:49.860" endtime="20201112 09:43:50.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021881375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021896125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.151" endtime="20201112 09:43:50.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.160" endtime="20201112 09:43:50.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.857" endtime="20201112 09:43:50.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.856" endtime="20201112 09:43:50.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.167" level="INFO">${RESULT} = [{'time': 0.021896125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4749999999997404e-05, 'source_diff': 1.4749999999997404e-05}, {'time': 0.021911917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:50.163" endtime="20201112 09:43:50.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.180" level="INFO">${ACCURACY} = {'time': [0.021896125, 0.021911917, 0.021926708, 0.021941722, 0.021956653, 0.021971611, 0.021986944, 0.022001792, 0.022016819, 0.022031917, 0.022046792, 0.022061736, 0.022076639, 0.022091764, 0.022106...</msg>
<status status="PASS" starttime="20201112 09:43:50.168" endtime="20201112 09:43:50.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.185" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.183" endtime="20201112 09:43:50.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.187" level="INFO">VALUE: [1.4749999999997404e-05, 1.4125000000000248e-05, 1.3401999999999165e-05, 1.3415999999998734e-05, 1.3791999999998583e-05, 1.3416999999998208e-05, 1.4138000000000345e-05, 1.3486000000000054e-05, 1.3708000000001164e-05, 1.3792000000002053e-05, 1.3430999999997778e-05, 1.3777999999999013e-05, 1.3346999999996889e-05, 1.3791999999998583e-05, 1.3431000000001247e-05, 1.3431000000001247e-05, 1.3777999999999013e-05, 1.3429999999998304e-05, 1.3401999999999165e-05, 1.3443999999997874e-05, 1.3431000000001247e-05, 1.3791999999998583e-05, 1.3417000000001678e-05, 1.3472000000000484e-05, 1.3777999999999013e-05, 1.4208000000001664e-05, 1.3444000000001344e-05, 1.3430000000001774e-05, 1.3749999999999873e-05, 1.3431000000001247e-05, 1.3416000000002204e-05, 1.3430000000001774e-05, 1.3417000000001678e-05, 1.3430999999997778e-05, 1.3777999999999013e-05, 1.3834000000000762e-05, 1.3416999999998208e-05, 1.3777999999999013e-05, 1.3124999999999248e-05, 1.3430999999997778e-05, 1.3791000000002579e-05, 1.3778000000002483e-05, 1.3416999999998208e-05, 1.3763999999999443e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3430000000001774e-05, 1.3403000000002108e-05, 1.3374999999999498e-05, 1.3430999999997778e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.186" endtime="20201112 09:43:50.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.181" endtime="20201112 09:43:50.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.191" endtime="20201112 09:43:50.192"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.194" endtime="20201112 09:43:50.213"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.193" endtime="20201112 09:43:50.214"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.189" endtime="20201112 09:43:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.826" endtime="20201112 09:43:50.215"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:49.825" endtime="20201112 09:43:50.215"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.224" endtime="20201112 09:43:50.238"></status>
</kw>
<msg timestamp="20201112 09:43:50.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.222" endtime="20201112 09:43:50.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.240" endtime="20201112 09:43:50.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.242" endtime="20201112 09:43:50.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.220" endtime="20201112 09:43:50.245"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.218" endtime="20201112 09:43:50.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.252" endtime="20201112 09:43:50.539"></status>
</kw>
<msg timestamp="20201112 09:43:50.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.251" endtime="20201112 09:43:50.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022106764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022122931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.543" endtime="20201112 09:43:50.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.551" endtime="20201112 09:43:50.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.248" endtime="20201112 09:43:50.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.246" endtime="20201112 09:43:50.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.558" level="INFO">${RESULT} = [{'time': 0.022122931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.616699999999749e-05, 'source_diff': 1.616699999999749e-05}, {'time': 0.022139347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.554" endtime="20201112 09:43:50.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.571" level="INFO">${ACCURACY} = {'time': [0.022122931, 0.022139347, 0.022155514, 0.022172486, 0.022188319, 0.022204472, 0.022220333, 0.022236542, 0.022252292, 0.022268486, 0.022284472, 0.022300583, 0.022316486, 0.022332361, 0.022348...</msg>
<status status="PASS" starttime="20201112 09:43:50.559" endtime="20201112 09:43:50.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.576" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.575" endtime="20201112 09:43:50.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.578" level="INFO">VALUE: [1.616699999999749e-05, 1.483299999999882e-05, 1.4500000000000624e-05, 1.5264000000000943e-05, 1.4472000000001484e-05, 1.4500000000000624e-05, 1.4513999999996724e-05, 1.4848000000001332e-05, 1.4125000000000248e-05, 1.4847000000001859e-05, 1.4500000000000624e-05, 1.484699999999839e-05, 1.4429999999999304e-05, 1.4499999999997154e-05, 1.486099999999796e-05, 1.4429999999999304e-05, 1.4500000000000624e-05, 1.486099999999796e-05, 1.4902000000000665e-05, 1.4514000000000193e-05, 1.4138999999999818e-05, 1.484699999999839e-05, 1.4514000000000193e-05, 1.4500000000000624e-05, 1.4875000000000999e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4500000000000624e-05, 1.4486000000001054e-05, 1.4875000000000999e-05, 1.5193999999999624e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.4138999999999818e-05, 1.4833000000002289e-05, 1.486099999999796e-05, 1.4514000000000193e-05, 1.4889000000000568e-05, 1.4500000000000624e-05, 1.4514000000000193e-05, 1.4513999999996724e-05, 1.4833999999998293e-05, 1.5208999999998668e-05, 1.4471999999998014e-05, 1.4486000000001054e-05, 1.4847000000001859e-05, 1.4486000000001054e-05, 1.4486000000001054e-05, 1.454099999999986e-05, 1.4500000000000624e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.577" endtime="20201112 09:43:50.579"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.572" endtime="20201112 09:43:50.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.582" endtime="20201112 09:43:50.583"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.585" endtime="20201112 09:43:50.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.584" endtime="20201112 09:43:50.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.580" endtime="20201112 09:43:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.216" endtime="20201112 09:43:50.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.215" endtime="20201112 09:43:50.606"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.615" endtime="20201112 09:43:50.630"></status>
</kw>
<msg timestamp="20201112 09:43:50.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.613" endtime="20201112 09:43:50.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:50.631" endtime="20201112 09:43:50.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.634" endtime="20201112 09:43:50.636"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.611" endtime="20201112 09:43:50.637"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.609" endtime="20201112 09:43:50.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.644" endtime="20201112 09:43:50.929"></status>
</kw>
<msg timestamp="20201112 09:43:50.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.642" endtime="20201112 09:43:50.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021905681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021922472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:50.934" endtime="20201112 09:43:50.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.942" endtime="20201112 09:43:50.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.640" endtime="20201112 09:43:50.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.638" endtime="20201112 09:43:50.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:50.949" level="INFO">${RESULT} = [{'time': 0.021922472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.679099999999864e-05, 'source_diff': 1.679099999999864e-05}, {'time': 0.021939903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:50.945" endtime="20201112 09:43:50.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:50.962" level="INFO">${ACCURACY} = {'time': [0.021922472, 0.021939903, 0.021956792, 0.021973819, 0.021990875, 0.022008014, 0.022024764, 0.022042042, 0.022058958, 0.022076139, 0.022092986, 0.022110056, 0.022126847, 0.022143917, 0.022160...</msg>
<status status="PASS" starttime="20201112 09:43:50.950" endtime="20201112 09:43:50.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.967" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 09:43:50.966" endtime="20201112 09:43:50.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:50.969" level="INFO">VALUE: [1.679099999999864e-05, 1.5569999999999473e-05, 1.5249999999997904e-05, 1.5943999999996905e-05, 1.5221999999998764e-05, 1.5555999999999903e-05, 1.5153000000000388e-05, 1.5570000000002943e-05, 1.558299999999957e-05, 1.563900000000132e-05, 1.555499999999696e-05, 1.5555999999999903e-05, 1.555500000000043e-05, 1.5583999999999043e-05, 1.558299999999957e-05, 1.555500000000043e-05, 1.555500000000043e-05, 1.558299999999957e-05, 1.5569e-05, 1.5541999999996864e-05, 1.6263999999998474e-05, 1.5569e-05, 1.5569e-05, 1.5929999999997335e-05, 1.588900000000157e-05, 1.5583999999999043e-05, 1.5569999999999473e-05, 1.554100000000086e-05, 1.5193999999999624e-05, 1.5555999999999903e-05, 1.5901999999998195e-05, 1.558299999999957e-05, 1.5207999999999194e-05, 1.562500000000175e-05, 1.563899999999785e-05, 1.5569e-05, 1.591699999999724e-05, 1.5180999999999528e-05, 1.5569e-05, 1.5555999999999903e-05, 1.588900000000157e-05, 1.5555999999999903e-05, 1.5569999999999473e-05, 1.555500000000043e-05, 1.558299999999957e-05, 1.5514000000001194e-05, 1.5569e-05, 1.5569e-05, 1.5555999999999903e-05, 1.5207999999999194e-05]</msg>
<status status="PASS" starttime="20201112 09:43:50.968" endtime="20201112 09:43:50.970"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.963" endtime="20201112 09:43:50.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:50.973" endtime="20201112 09:43:50.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:50.976" endtime="20201112 09:43:50.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.975" endtime="20201112 09:43:50.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.971" endtime="20201112 09:43:50.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.607" endtime="20201112 09:43:50.997"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.607" endtime="20201112 09:43:50.997"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.006" endtime="20201112 09:43:51.021"></status>
</kw>
<msg timestamp="20201112 09:43:51.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.004" endtime="20201112 09:43:51.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.022" endtime="20201112 09:43:51.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.025" endtime="20201112 09:43:51.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.001" endtime="20201112 09:43:51.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.999" endtime="20201112 09:43:51.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.034" endtime="20201112 09:43:51.321"></status>
</kw>
<msg timestamp="20201112 09:43:51.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.033" endtime="20201112 09:43:51.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022079972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.325" endtime="20201112 09:43:51.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.333" endtime="20201112 09:43:51.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.030" endtime="20201112 09:43:51.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.029" endtime="20201112 09:43:51.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.340" level="INFO">${RESULT} = [{'time': 0.022079972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7929999999999335e-05, 'source_diff': 1.7929999999999335e-05}, {'time': 0.022098653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:51.337" endtime="20201112 09:43:51.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.354" level="INFO">${ACCURACY} = {'time': [0.022079972, 0.022098653, 0.022116542, 0.022134708, 0.022152736, 0.022170611, 0.022188556, 0.022206403, 0.022224639, 0.022242431, 0.022260625, 0.022278556, 0.022296389, 0.022314597, 0.022332...</msg>
<status status="PASS" starttime="20201112 09:43:51.341" endtime="20201112 09:43:51.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.359" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.358" endtime="20201112 09:43:51.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.362" level="INFO">VALUE: [1.7929999999999335e-05, 1.6986000000000084e-05, 1.663899999999885e-05, 1.6986000000000084e-05, 1.666699999999799e-05, 1.663899999999885e-05, 1.666700000000146e-05, 1.6570000000000473e-05, 1.6999999999999654e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.665300000000189e-05, 1.663899999999885e-05, 1.6986000000000084e-05, 1.665300000000189e-05, 1.663900000000232e-05, 1.736100000000046e-05, 1.6278000000001513e-05, 1.666699999999799e-05, 1.6709000000000168e-05, 1.736099999999699e-05, 1.734700000000089e-05, 1.663899999999885e-05, 1.662499999999928e-05, 1.665299999999842e-05, 1.6333999999999793e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.663899999999885e-05, 1.663900000000232e-05, 1.662499999999928e-05, 1.6637999999999376e-05, 1.630500000000118e-05, 1.695899999999695e-05, 1.6263999999998474e-05, 1.630499999999771e-05, 1.662500000000275e-05, 1.662499999999928e-05, 1.662500000000275e-05, 1.668099999999756e-05, 1.6277999999998044e-05, 1.6637999999999376e-05, 1.659700000000014e-05, 1.6999999999999654e-05, 1.6306000000000653e-05, 1.629100000000161e-05, 1.663899999999885e-05, 1.665299999999842e-05, 1.6986000000000084e-05, 1.663900000000232e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.360" endtime="20201112 09:43:51.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.356" endtime="20201112 09:43:51.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.365" endtime="20201112 09:43:51.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.369" endtime="20201112 09:43:51.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.367" endtime="20201112 09:43:51.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.364" endtime="20201112 09:43:51.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.998" endtime="20201112 09:43:51.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:50.997" endtime="20201112 09:43:51.390"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.398" endtime="20201112 09:43:51.413"></status>
</kw>
<msg timestamp="20201112 09:43:51.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.397" endtime="20201112 09:43:51.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.415" endtime="20201112 09:43:51.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.417" endtime="20201112 09:43:51.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.394" endtime="20201112 09:43:51.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.392" endtime="20201112 09:43:51.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.427" endtime="20201112 09:43:51.712"></status>
</kw>
<msg timestamp="20201112 09:43:51.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.425" endtime="20201112 09:43:51.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022037736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022056028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.717" endtime="20201112 09:43:51.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.725" endtime="20201112 09:43:51.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.423" endtime="20201112 09:43:51.727"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.421" endtime="20201112 09:43:51.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:51.732" level="INFO">${RESULT} = [{'time': 0.022056028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8291999999999614e-05, 'source_diff': 1.8291999999999614e-05}, {'time': 0.022075486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:51.728" endtime="20201112 09:43:51.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:51.745" level="INFO">${ACCURACY} = {'time': [0.022056028, 0.022075486, 0.022094569, 0.022113472, 0.022132597, 0.022151583, 0.022170625, 0.022189528, 0.022208708, 0.022228403, 0.022247708, 0.022266611, 0.022285458, 0.022304458, 0.022323...</msg>
<status status="PASS" starttime="20201112 09:43:51.732" endtime="20201112 09:43:51.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.749" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 09:43:51.748" endtime="20201112 09:43:51.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.752" level="INFO">VALUE: [1.8291999999999614e-05, 1.806899999999903e-05, 1.7694000000002125e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.7693999999998655e-05, 1.734700000000089e-05, 1.7679999999999085e-05, 1.8056000000002403e-05, 1.7708000000001695e-05, 1.7707999999998225e-05, 1.734700000000089e-05, 1.73889999999996e-05, 1.7694000000002125e-05, 1.809699999999817e-05, 1.7722000000001265e-05, 1.7679999999999085e-05, 1.734700000000089e-05, 1.7709000000001168e-05, 1.7680000000002555e-05, 1.7708000000001695e-05, 1.734700000000089e-05, 1.7709000000001168e-05, 1.7707999999998225e-05, 1.7693999999998655e-05, 1.8055999999998934e-05, 1.7749999999996935e-05, 1.7319999999997754e-05, 1.8056000000002403e-05, 1.7709000000001168e-05, 1.733300000000132e-05, 1.7319999999997754e-05, 1.7334000000000793e-05, 1.734700000000089e-05, 1.734700000000089e-05, 1.7694000000002125e-05, 1.734700000000089e-05, 1.7709000000001168e-05, 1.736100000000046e-05, 1.8055999999998934e-05, 1.734699999999742e-05, 1.734700000000089e-05, 1.762500000000028e-05, 1.76950000000016e-05, 1.736100000000046e-05, 1.7763999999999974e-05, 1.8055999999998934e-05, 1.736100000000046e-05, 1.7694000000002125e-05]</msg>
<status status="PASS" starttime="20201112 09:43:51.750" endtime="20201112 09:43:51.753"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.746" endtime="20201112 09:43:51.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.755" endtime="20201112 09:43:51.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:51.759" endtime="20201112 09:43:51.778"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.757" endtime="20201112 09:43:51.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.754" endtime="20201112 09:43:51.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.391" endtime="20201112 09:43:51.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.390" endtime="20201112 09:43:51.780"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.788" endtime="20201112 09:43:51.803"></status>
</kw>
<msg timestamp="20201112 09:43:51.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.787" endtime="20201112 09:43:51.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:51.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:51.804" endtime="20201112 09:43:51.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.807" endtime="20201112 09:43:51.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.784" endtime="20201112 09:43:51.810"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.782" endtime="20201112 09:43:51.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:51.817" endtime="20201112 09:43:52.102"></status>
</kw>
<msg timestamp="20201112 09:43:52.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:51.815" endtime="20201112 09:43:52.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022011306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.107" endtime="20201112 09:43:52.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.115" endtime="20201112 09:43:52.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.812" endtime="20201112 09:43:52.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.811" endtime="20201112 09:43:52.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.122" level="INFO">${RESULT} = [{'time': 0.022011306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9334000000002793e-05, 'source_diff': 1.9334000000002793e-05}, {'time': 0.022031875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:52.118" endtime="20201112 09:43:52.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.135" level="INFO">${ACCURACY} = {'time': [0.022011306, 0.022031875, 0.022052708, 0.022072708, 0.022092667, 0.022112639, 0.022132625, 0.022152583, 0.022172917, 0.022192736, 0.022212931, 0.022232722, 0.022252778, 0.022272583, 0.022292...</msg>
<status status="PASS" starttime="20201112 09:43:52.123" endtime="20201112 09:43:52.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.140" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.139" endtime="20201112 09:43:52.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.142" level="INFO">VALUE: [1.9334000000002793e-05, 1.911099999999874e-05, 1.912500000000178e-05, 1.83890000000006e-05, 1.843099999999931e-05, 1.841699999999974e-05, 1.8471999999998545e-05, 1.877700000000107e-05, 1.8764000000000974e-05, 1.841699999999974e-05, 1.8778000000000544e-05, 1.8429999999999835e-05, 1.8736000000001835e-05, 1.8416000000000265e-05, 1.8777999999997075e-05, 1.8792000000000114e-05, 1.915299999999745e-05, 1.8777999999997075e-05, 1.8416000000000265e-05, 1.8721999999998795e-05, 1.8736000000001835e-05, 1.841699999999974e-05, 1.909699999999917e-05, 1.913900000000135e-05, 1.8429999999999835e-05, 1.8416000000000265e-05, 1.8750000000001404e-05, 1.881899999999978e-05, 1.8416000000000265e-05, 1.841699999999974e-05, 1.8764000000000974e-05, 1.841699999999974e-05, 1.8778000000000544e-05, 1.8749999999997935e-05, 1.8792000000000114e-05, 1.843099999999931e-05, 1.877700000000107e-05, 1.8416000000000265e-05, 1.837499999999756e-05, 1.841699999999974e-05, 1.912499999999831e-05, 1.8416000000000265e-05, 1.881900000000325e-05, 1.8778000000000544e-05, 1.8764000000000974e-05, 1.841699999999974e-05, 1.8778000000000544e-05, 1.8443999999999405e-05, 1.8429999999999835e-05, 1.883299999999935e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.141" endtime="20201112 09:43:52.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.136" endtime="20201112 09:43:52.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.146" endtime="20201112 09:43:52.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.149" endtime="20201112 09:43:52.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.148" endtime="20201112 09:43:52.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.144" endtime="20201112 09:43:52.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.781" endtime="20201112 09:43:52.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:51.780" endtime="20201112 09:43:52.170"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.179" endtime="20201112 09:43:52.194"></status>
</kw>
<msg timestamp="20201112 09:43:52.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.177" endtime="20201112 09:43:52.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.195" endtime="20201112 09:43:52.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.198" endtime="20201112 09:43:52.200"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.174" endtime="20201112 09:43:52.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.172" endtime="20201112 09:43:52.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.208" endtime="20201112 09:43:52.493"></status>
</kw>
<msg timestamp="20201112 09:43:52.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.206" endtime="20201112 09:43:52.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.498" endtime="20201112 09:43:52.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.506" endtime="20201112 09:43:52.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.203" endtime="20201112 09:43:52.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.202" endtime="20201112 09:43:52.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.513" level="INFO">${RESULT} = [{'time': 0.022025528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0819999999997785e-05, 'source_diff': 2.0819999999997785e-05}, {'time': 0.022046875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:52.509" endtime="20201112 09:43:52.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.526" level="INFO">${ACCURACY} = {'time': [0.022025528, 0.022046875, 0.022067806, 0.022088917, 0.022109819, 0.022131014, 0.022152097, 0.022172875, 0.022193958, 0.022215028, 0.022235792, 0.022256958, 0.022278, 0.022298819, 0.022320056...</msg>
<status status="PASS" starttime="20201112 09:43:52.514" endtime="20201112 09:43:52.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.530" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.529" endtime="20201112 09:43:52.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.533" level="INFO">VALUE: [2.0819999999997785e-05, 1.9485999999999115e-05, 1.9499999999998685e-05, 1.9847999999999394e-05, 1.9485999999999115e-05, 1.9570000000000004e-05, 1.981900000000078e-05, 1.9500000000002154e-05, 1.984699999999992e-05, 1.9514000000001724e-05, 1.912500000000178e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9486000000002585e-05, 1.9833999999999824e-05, 1.945899999999945e-05, 1.9542000000000864e-05, 1.983300000000035e-05, 1.986099999999949e-05, 1.981899999999731e-05, 1.9472000000003015e-05, 1.9499999999998685e-05, 1.984699999999992e-05, 1.983300000000035e-05, 1.9471999999999545e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.913900000000135e-05, 1.983300000000035e-05, 1.9500000000002154e-05, 1.9471999999999545e-05, 1.9444000000000405e-05, 1.9499999999998685e-05, 1.983300000000035e-05, 1.9485999999999115e-05, 1.9457999999999975e-05, 1.987499999999906e-05, 1.9444000000000405e-05, 1.9500000000002154e-05, 1.912500000000178e-05, 1.9457999999999975e-05, 1.9485999999999115e-05, 1.912500000000178e-05, 1.947299999999902e-05, 1.984699999999992e-05, 1.9472000000003015e-05, 1.9472000000003015e-05, 1.984699999999992e-05, 1.951300000000225e-05, 1.981900000000078e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.531" endtime="20201112 09:43:52.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.527" endtime="20201112 09:43:52.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.541" endtime="20201112 09:43:52.542"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.544" endtime="20201112 09:43:52.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.542" endtime="20201112 09:43:52.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.539" endtime="20201112 09:43:52.564"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.171" endtime="20201112 09:43:52.565"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.170" endtime="20201112 09:43:52.565"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.574" endtime="20201112 09:43:52.589"></status>
</kw>
<msg timestamp="20201112 09:43:52.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.572" endtime="20201112 09:43:52.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.590" endtime="20201112 09:43:52.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.593" endtime="20201112 09:43:52.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.570" endtime="20201112 09:43:52.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.567" endtime="20201112 09:43:52.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.603" endtime="20201112 09:43:52.889"></status>
</kw>
<msg timestamp="20201112 09:43:52.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.601" endtime="20201112 09:43:52.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022196778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022218667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:52.893" endtime="20201112 09:43:52.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.901" endtime="20201112 09:43:52.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.599" endtime="20201112 09:43:52.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.597" endtime="20201112 09:43:52.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:52.908" level="INFO">${RESULT} = [{'time': 0.022218667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.188900000000063e-05, 'source_diff': 2.188900000000063e-05}, {'time': 0.022241083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:52.905" endtime="20201112 09:43:52.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:52.922" level="INFO">${ACCURACY} = {'time': [0.022218667, 0.022241083, 0.022263125, 0.022285181, 0.022307153, 0.022329194, 0.022351028, 0.022373056, 0.022395125, 0.022417278, 0.022439236, 0.022461042, 0.02248325, 0.022505319, 0.0225273...</msg>
<status status="PASS" starttime="20201112 09:43:52.909" endtime="20201112 09:43:52.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.927" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 09:43:52.926" endtime="20201112 09:43:52.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.929" level="INFO">VALUE: [2.188900000000063e-05, 2.0915999999999296e-05, 2.0556000000001434e-05, 2.0542000000001864e-05, 2.0556000000001434e-05, 2.056900000000153e-05, 2.02090000000002e-05, 2.0555999999997965e-05, 2.0555999999997965e-05, 2.0541999999998395e-05, 2.055500000000196e-05, 2.0556000000001434e-05, 2.056899999999806e-05, 2.055499999999849e-05, 2.05830000000011e-05, 2.065299999999895e-05, 2.0556000000001434e-05, 2.056900000000153e-05, 2.056900000000153e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.019499999999716e-05, 2.0222000000000295e-05, 2.0929999999998866e-05, 2.0569999999997535e-05, 2.086100000000049e-05, 2.019499999999716e-05, 2.091699999999877e-05, 2.055499999999849e-05, 2.0556000000001434e-05, 2.0958000000001475e-05, 2.0193999999997686e-05, 2.055499999999849e-05, 2.1291999999999145e-05, 2.0555999999997965e-05, 2.0986000000000615e-05, 2.056899999999806e-05, 2.052699999999935e-05, 2.0570000000001004e-05, 2.0570000000001004e-05, 2.0555999999997965e-05, 2.1319999999998285e-05, 2.019500000000063e-05, 2.056899999999806e-05, 2.091700000000224e-05, 2.0194000000001155e-05, 2.0570000000001004e-05, 2.0513999999999255e-05, 2.0555999999997965e-05, 2.062499999999981e-05]</msg>
<status status="PASS" starttime="20201112 09:43:52.928" endtime="20201112 09:43:52.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.923" endtime="20201112 09:43:52.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.933" endtime="20201112 09:43:52.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:52.936" endtime="20201112 09:43:52.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.935" endtime="20201112 09:43:52.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.931" endtime="20201112 09:43:52.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.566" endtime="20201112 09:43:52.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.565" endtime="20201112 09:43:52.957"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.966" endtime="20201112 09:43:52.981"></status>
</kw>
<msg timestamp="20201112 09:43:52.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.964" endtime="20201112 09:43:52.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:52.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:52.982" endtime="20201112 09:43:52.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.985" endtime="20201112 09:43:52.987"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.961" endtime="20201112 09:43:52.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.959" endtime="20201112 09:43:52.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:52.995" endtime="20201112 09:43:53.280"></status>
</kw>
<msg timestamp="20201112 09:43:53.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:52.993" endtime="20201112 09:43:53.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02210675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022128972, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:53.284" endtime="20201112 09:43:53.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.292" endtime="20201112 09:43:53.294"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.991" endtime="20201112 09:43:53.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.989" endtime="20201112 09:43:53.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.299" level="INFO">${RESULT} = [{'time': 0.022128972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2221999999998826e-05, 'source_diff': 2.2221999999998826e-05}, {'time': 0.022151722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:53.296" endtime="20201112 09:43:53.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.312" level="INFO">${ACCURACY} = {'time': [0.022128972, 0.022151722, 0.02217475, 0.022197569, 0.022220708, 0.022243903, 0.022266722, 0.022289681, 0.022312861, 0.022335667, 0.022358597, 0.022381708, 0.022404778, 0.022427708, 0.0224508...</msg>
<status status="PASS" starttime="20201112 09:43:53.300" endtime="20201112 09:43:53.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.317" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.316" endtime="20201112 09:43:53.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.319" level="INFO">VALUE: [2.2221999999998826e-05, 2.1264000000000005e-05, 2.161100000000124e-05, 2.126300000000053e-05, 2.1999999999997716e-05, 2.168099999999909e-05, 2.1264000000000005e-05, 2.162499999999734e-05, 2.2014000000000755e-05, 2.1320000000001754e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.129099999999967e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.126300000000053e-05, 2.1929999999999866e-05, 2.1291999999999145e-05, 2.161100000000124e-05, 2.1612000000000714e-05, 2.1971999999998576e-05, 2.162499999999734e-05, 2.1985999999998146e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1264000000000005e-05, 2.162500000000081e-05, 2.162499999999734e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.1638000000000907e-05, 2.162499999999734e-05, 2.1277999999999575e-05, 2.161099999999777e-05, 2.12770000000001e-05, 2.162500000000081e-05, 2.1666000000000046e-05, 2.163899999999691e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1278000000003044e-05, 2.1264000000000005e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.1986000000001615e-05, 2.163900000000038e-05, 2.15969999999982e-05, 2.158299999999863e-05, 2.1971999999998576e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.318" endtime="20201112 09:43:53.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.313" endtime="20201112 09:43:53.321"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.323" endtime="20201112 09:43:53.324"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.327" endtime="20201112 09:43:53.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.325" endtime="20201112 09:43:53.346"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.321" endtime="20201112 09:43:53.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.958" endtime="20201112 09:43:53.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:52.957" endtime="20201112 09:43:53.347"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.356" endtime="20201112 09:43:53.372"></status>
</kw>
<msg timestamp="20201112 09:43:53.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.354" endtime="20201112 09:43:53.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.373" endtime="20201112 09:43:53.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.376" endtime="20201112 09:43:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.352" endtime="20201112 09:43:53.379"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.350" endtime="20201112 09:43:53.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.387" endtime="20201112 09:43:53.673"></status>
</kw>
<msg timestamp="20201112 09:43:53.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.385" endtime="20201112 09:43:53.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021961208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.677" endtime="20201112 09:43:53.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.685" endtime="20201112 09:43:53.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.382" endtime="20201112 09:43:53.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.380" endtime="20201112 09:43:53.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:53.692" level="INFO">${RESULT} = [{'time': 0.021961208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4013999999999286e-05, 'source_diff': 2.4013999999999286e-05}, {'time': 0.021985833, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:53.689" endtime="20201112 09:43:53.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:53.705" level="INFO">${ACCURACY} = {'time': [0.021961208, 0.021985833, 0.022009681, 0.022033903, 0.022057708, 0.022081736, 0.022105833, 0.022129694, 0.022153764, 0.022177903, 0.022201653, 0.022225792, 0.022249806, 0.022273847, 0.022297...</msg>
<status status="PASS" starttime="20201112 09:43:53.693" endtime="20201112 09:43:53.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.710" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 09:43:53.709" endtime="20201112 09:43:53.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.712" level="INFO">VALUE: [2.4013999999999286e-05, 2.305500000000099e-05, 2.2333999999998855e-05, 2.269499999999966e-05, 2.231899999999981e-05, 2.2750000000001935e-05, 2.263899999999791e-05, 2.2693999999996717e-05, 2.269499999999966e-05, 2.269499999999966e-05, 2.2333999999998855e-05, 2.27090000000027e-05, 2.2348000000001894e-05, 2.2707999999999756e-05, 2.27229999999988e-05, 2.238900000000113e-05, 2.233299999999938e-05, 2.234700000000242e-05, 2.2333999999998855e-05, 2.233299999999938e-05, 2.2722000000002796e-05, 2.261099999999877e-05, 2.234699999999895e-05, 2.266699999999705e-05, 2.2333999999998855e-05, 2.27090000000027e-05, 2.2319999999999285e-05, 2.233300000000285e-05, 2.268100000000009e-05, 2.269499999999966e-05, 2.270899999999923e-05, 2.2680000000000616e-05, 2.234700000000242e-05, 2.233300000000285e-05, 2.268100000000009e-05, 2.268100000000009e-05, 2.268100000000009e-05, 2.2319999999999285e-05, 2.2278000000000575e-05, 2.3028000000001325e-05, 2.2333999999998855e-05, 2.269499999999966e-05, 2.233299999999938e-05, 2.270899999999923e-05, 2.238899999999766e-05, 2.2707999999999756e-05, 2.273700000000184e-05, 2.231899999999981e-05, 2.2764000000001505e-05, 2.2694000000000186e-05]</msg>
<status status="PASS" starttime="20201112 09:43:53.711" endtime="20201112 09:43:53.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.706" endtime="20201112 09:43:53.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.716" endtime="20201112 09:43:53.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:53.719" endtime="20201112 09:43:53.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.718" endtime="20201112 09:43:53.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.714" endtime="20201112 09:43:53.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.348" endtime="20201112 09:43:53.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.348" endtime="20201112 09:43:53.740"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.749" endtime="20201112 09:43:53.764"></status>
</kw>
<msg timestamp="20201112 09:43:53.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.747" endtime="20201112 09:43:53.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:53.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:53.765" endtime="20201112 09:43:53.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.768" endtime="20201112 09:43:53.770"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.745" endtime="20201112 09:43:53.771"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.742" endtime="20201112 09:43:53.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:53.778" endtime="20201112 09:43:54.063"></status>
</kw>
<msg timestamp="20201112 09:43:54.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:53.776" endtime="20201112 09:43:54.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021976667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.067" endtime="20201112 09:43:54.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.076" endtime="20201112 09:43:54.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.774" endtime="20201112 09:43:54.078"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.772" endtime="20201112 09:43:54.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.082" level="INFO">${RESULT} = [{'time': 0.021976667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.472299999999733e-05, 'source_diff': 2.472299999999733e-05}, {'time': 0.022002403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.079" endtime="20201112 09:43:54.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.096" level="INFO">${ACCURACY} = {'time': [0.021976667, 0.022002403, 0.022027417, 0.022052153, 0.022077389, 0.022102319, 0.022127375, 0.022152319, 0.022177375, 0.022202264, 0.022227389, 0.022252389, 0.0222775, 0.022302236, 0.02232726...</msg>
<status status="PASS" starttime="20201112 09:43:54.083" endtime="20201112 09:43:54.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.100" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.099" endtime="20201112 09:43:54.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.103" level="INFO">VALUE: [2.472299999999733e-05, 2.413899999999941e-05, 2.3763999999999036e-05, 2.34030000000017e-05, 2.3791999999998176e-05, 2.3776999999999132e-05, 2.3708000000000756e-05, 2.3762999999999562e-05, 2.340299999999823e-05, 2.340299999999823e-05, 2.3749999999999466e-05, 2.34030000000017e-05, 2.3749999999999466e-05, 2.3444000000000936e-05, 2.3458000000000506e-05, 2.413899999999941e-05, 2.3401999999998757e-05, 2.3401999999998757e-05, 2.338899999999866e-05, 2.3415999999998327e-05, 2.3763999999999036e-05, 2.3749999999999466e-05, 2.3778000000002075e-05, 2.3402000000002227e-05, 2.3430000000001366e-05, 2.3749999999999466e-05, 2.341700000000127e-05, 2.416700000000202e-05, 2.4084000000000605e-05, 2.3749999999999466e-05, 2.3415999999998327e-05, 2.3763999999999036e-05, 2.3735999999999896e-05, 2.412500000000331e-05, 2.34169999999978e-05, 2.3402000000002227e-05, 2.3763999999999036e-05, 2.336099999999952e-05, 2.341700000000127e-05, 2.334699999999995e-05, 2.3791999999998176e-05, 2.3777999999998606e-05, 2.340299999999823e-05, 2.3804999999998272e-05, 2.3458000000000506e-05, 2.337499999999909e-05, 2.3416000000001796e-05, 2.3763999999999036e-05, 2.34169999999978e-05, 2.370899999999676e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.101" endtime="20201112 09:43:54.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.097" endtime="20201112 09:43:54.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.106" endtime="20201112 09:43:54.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.110" endtime="20201112 09:43:54.129"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.108" endtime="20201112 09:43:54.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.105" endtime="20201112 09:43:54.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.741" endtime="20201112 09:43:54.130"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:53.740" endtime="20201112 09:43:54.130"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.139" endtime="20201112 09:43:54.154"></status>
</kw>
<msg timestamp="20201112 09:43:54.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.138" endtime="20201112 09:43:54.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.156" endtime="20201112 09:43:54.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.158" endtime="20201112 09:43:54.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.135" endtime="20201112 09:43:54.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.133" endtime="20201112 09:43:54.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.168" endtime="20201112 09:43:54.454"></status>
</kw>
<msg timestamp="20201112 09:43:54.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:54.167" endtime="20201112 09:43:54.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02194225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021968389, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:54.458" endtime="20201112 09:43:54.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.466" endtime="20201112 09:43:54.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.164" endtime="20201112 09:43:54.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.162" endtime="20201112 09:43:54.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.473" level="INFO">${RESULT} = [{'time': 0.021968389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.613900000000141e-05, 'source_diff': 2.613900000000141e-05}, {'time': 0.021994861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:54.470" endtime="20201112 09:43:54.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.487" level="INFO">${ACCURACY} = {'time': [0.021968389, 0.021994861, 0.022020708, 0.022046653, 0.022072917, 0.022098972, 0.022124861, 0.022150653, 0.022176806, 0.022202958, 0.022229014, 0.022254986, 0.022280736, 0.022306833, 0.022332...</msg>
<status status="PASS" starttime="20201112 09:43:54.474" endtime="20201112 09:43:54.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.492" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.491" endtime="20201112 09:43:54.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.494" level="INFO">VALUE: [2.613900000000141e-05, 2.483300000000188e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.486100000000102e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.4084000000000605e-05, 2.448700000000012e-05, 2.4832999999998412e-05, 2.488899999999669e-05, 2.484700000000145e-05, 2.412499999999984e-05, 2.4486000000000646e-05, 2.4818999999998842e-05, 2.4833999999997886e-05, 2.5179999999999647e-05, 2.4500000000000216e-05, 2.5193999999999217e-05, 2.4820000000001785e-05, 2.5193999999999217e-05, 2.483300000000188e-05, 2.4457999999998037e-05, 2.447300000000055e-05, 2.4486000000000646e-05, 2.413899999999941e-05, 2.4834000000001355e-05, 2.483300000000188e-05, 2.4471999999997607e-05, 2.4471999999997607e-05, 2.4500000000000216e-05, 2.4846999999997982e-05, 2.4472000000001076e-05, 2.4818999999998842e-05, 2.413899999999941e-05, 2.4486000000000646e-05, 2.4471999999997607e-05, 2.4832999999998412e-05, 2.4832999999998412e-05, 2.4472000000001076e-05, 2.4500000000000216e-05, 2.443100000000184e-05, 2.4429999999998897e-05, 2.4486000000000646e-05, 2.4819999999998316e-05, 2.4486000000000646e-05, 2.412499999999984e-05, 2.4471999999997607e-05, 2.4444000000001936e-05, 2.447300000000055e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.493" endtime="20201112 09:43:54.495"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.488" endtime="20201112 09:43:54.496"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.498" endtime="20201112 09:43:54.499"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.501" endtime="20201112 09:43:54.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.500" endtime="20201112 09:43:54.521"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.496" endtime="20201112 09:43:54.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.131" endtime="20201112 09:43:54.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.131" endtime="20201112 09:43:54.522"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.531" endtime="20201112 09:43:54.546"></status>
</kw>
<msg timestamp="20201112 09:43:54.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.529" endtime="20201112 09:43:54.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.548" endtime="20201112 09:43:54.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.550" endtime="20201112 09:43:54.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.527" endtime="20201112 09:43:54.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.525" endtime="20201112 09:43:54.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.560" endtime="20201112 09:43:54.846"></status>
</kw>
<msg timestamp="20201112 09:43:54.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.559" endtime="20201112 09:43:54.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.850" endtime="20201112 09:43:54.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.858" endtime="20201112 09:43:54.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.556" endtime="20201112 09:43:54.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.554" endtime="20201112 09:43:54.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:54.865" level="INFO">${RESULT} = [{'time': 0.021932917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6485999999999177e-05, 'source_diff': 2.6485999999999177e-05}, {'time': 0.021960403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:54.862" endtime="20201112 09:43:54.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:54.878" level="INFO">${ACCURACY} = {'time': [0.021932917, 0.021960403, 0.021987514, 0.022014361, 0.022041486, 0.022068361, 0.022095264, 0.022122194, 0.022149403, 0.022176431, 0.022204528, 0.022231431, 0.022258236, 0.022285542, 0.022312...</msg>
<status status="PASS" starttime="20201112 09:43:54.866" endtime="20201112 09:43:54.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.883" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 09:43:54.882" endtime="20201112 09:43:54.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.885" level="INFO">VALUE: [2.6485999999999177e-05, 2.59170000000003e-05, 2.5528000000000356e-05, 2.5528000000000356e-05, 2.5528000000000356e-05, 2.5541999999999926e-05, 2.518099999999912e-05, 2.5541000000000452e-05, 2.5570000000002535e-05, 2.5847999999998456e-05, 2.6319999999999816e-05, 2.5541999999999926e-05, 2.5528000000000356e-05, 2.5597999999998206e-05, 2.5568999999999592e-05, 2.5541999999999926e-05, 2.5541999999999926e-05, 2.5568999999999592e-05, 2.590300000000073e-05, 2.520900000000173e-05, 2.588900000000116e-05, 2.5193999999999217e-05, 2.5902000000001257e-05, 2.590300000000073e-05, 2.5555999999999496e-05, 2.5915999999997358e-05, 2.518099999999912e-05, 2.588900000000116e-05, 2.5570000000002535e-05, 2.5528000000000356e-05, 2.55970000000022e-05, 2.5582999999999162e-05, 2.590299999999726e-05, 2.513900000000041e-05, 2.5832999999999412e-05, 2.5597999999998206e-05, 2.5528000000000356e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.5568999999999592e-05, 2.5499999999997747e-05, 2.5848000000001925e-05, 2.5916000000000827e-05, 2.6249999999998497e-05, 2.5527999999996887e-05, 2.5541999999999926e-05, 2.5179999999999647e-05, 2.5541999999999926e-05, 2.5555999999999496e-05, 2.593099999999987e-05]</msg>
<status status="PASS" starttime="20201112 09:43:54.884" endtime="20201112 09:43:54.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.879" endtime="20201112 09:43:54.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.889" endtime="20201112 09:43:54.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:54.892" endtime="20201112 09:43:54.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.891" endtime="20201112 09:43:54.912"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.887" endtime="20201112 09:43:54.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.523" endtime="20201112 09:43:54.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.523" endtime="20201112 09:43:54.913"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.922" endtime="20201112 09:43:54.937"></status>
</kw>
<msg timestamp="20201112 09:43:54.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.920" endtime="20201112 09:43:54.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:54.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:54.938" endtime="20201112 09:43:54.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.941" endtime="20201112 09:43:54.943"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.918" endtime="20201112 09:43:54.944"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.916" endtime="20201112 09:43:54.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:54.951" endtime="20201112 09:43:55.237"></status>
</kw>
<msg timestamp="20201112 09:43:55.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:54.949" endtime="20201112 09:43:55.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022001625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022029542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.241" endtime="20201112 09:43:55.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.249" endtime="20201112 09:43:55.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.947" endtime="20201112 09:43:55.251"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.945" endtime="20201112 09:43:55.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.256" level="INFO">${RESULT} = [{'time': 0.022029542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.791699999999883e-05, 'source_diff': 2.791699999999883e-05}, {'time': 0.022057931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:55.253" endtime="20201112 09:43:55.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.269" level="INFO">${ACCURACY} = {'time': [0.022029542, 0.022057931, 0.022085931, 0.022113903, 0.022142181, 0.022169986, 0.022198153, 0.022226, 0.022254208, 0.022282056, 0.022310139, 0.022337986, 0.022366264, 0.022394083, 0.022421889...</msg>
<status status="PASS" starttime="20201112 09:43:55.257" endtime="20201112 09:43:55.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.274" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.273" endtime="20201112 09:43:55.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.276" level="INFO">VALUE: [2.791699999999883e-05, 2.665299999999801e-05, 2.6611999999998776e-05, 2.6278000000001106e-05, 2.697299999999958e-05, 2.6638999999998442e-05, 2.695900000000001e-05, 2.6207999999999787e-05, 2.6610999999999302e-05, 2.666700000000105e-05, 2.6596999999999732e-05, 2.6250000000001966e-05, 2.7013999999998817e-05, 2.6638999999998442e-05, 2.6624999999998872e-05, 2.6596999999999732e-05, 2.6249999999998497e-05, 2.6610999999999302e-05, 2.661100000000277e-05, 2.6596999999999732e-05, 2.6624999999998872e-05, 2.662500000000234e-05, 2.6570000000000066e-05, 2.6263000000002062e-05, 2.6624999999998872e-05, 2.6958000000000537e-05, 2.6610999999999302e-05, 2.6583999999999636e-05, 2.6596999999999732e-05, 2.694500000000044e-05, 2.6611999999998776e-05, 2.6999999999999247e-05, 2.661100000000277e-05, 2.6624999999998872e-05, 2.620899999999926e-05, 2.6249999999998497e-05, 2.6278000000001106e-05, 2.6610999999999302e-05, 2.6610999999999302e-05, 2.6624999999998872e-05, 2.6319000000000342e-05, 2.6263999999998067e-05, 2.6540999999997983e-05, 2.6306000000000246e-05, 2.666699999999758e-05, 2.6638999999998442e-05, 2.6305000000000772e-05, 2.6235999999998927e-05, 2.6972000000000107e-05, 2.694499999999697e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.275" endtime="20201112 09:43:55.277"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.270" endtime="20201112 09:43:55.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.280" endtime="20201112 09:43:55.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.283" endtime="20201112 09:43:55.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.282" endtime="20201112 09:43:55.303"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.278" endtime="20201112 09:43:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.914" endtime="20201112 09:43:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:54.914" endtime="20201112 09:43:55.304"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.313" endtime="20201112 09:43:55.328"></status>
</kw>
<msg timestamp="20201112 09:43:55.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.311" endtime="20201112 09:43:55.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.329" endtime="20201112 09:43:55.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.331" endtime="20201112 09:43:55.334"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.309" endtime="20201112 09:43:55.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.307" endtime="20201112 09:43:55.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.341" endtime="20201112 09:43:55.627"></status>
</kw>
<msg timestamp="20201112 09:43:55.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.340" endtime="20201112 09:43:55.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021873986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.631" endtime="20201112 09:43:55.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.639" endtime="20201112 09:43:55.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.337" endtime="20201112 09:43:55.641"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.336" endtime="20201112 09:43:55.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:55.646" level="INFO">${RESULT} = [{'time': 0.021873986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9000000000001247e-05, 'source_diff': 2.9000000000001247e-05}, {'time': 0.021903472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:55.643" endtime="20201112 09:43:55.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:55.659" level="INFO">${ACCURACY} = {'time': [0.021873986, 0.021903472, 0.021932514, 0.021961444, 0.0219905, 0.022019458, 0.022048736, 0.0220775, 0.022106736, 0.022136486, 0.022165569, 0.022194472, 0.022223542, 0.022252597, 0.022281625,...</msg>
<status status="PASS" starttime="20201112 09:43:55.647" endtime="20201112 09:43:55.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.664" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 09:43:55.663" endtime="20201112 09:43:55.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.666" level="INFO">VALUE: [2.9000000000001247e-05, 2.8040999999999483e-05, 2.7333000000000912e-05, 2.7694000000001717e-05, 2.768099999999815e-05, 2.7679999999998678e-05, 2.8027999999999387e-05, 2.7347000000000482e-05, 2.7679999999998678e-05, 2.7972000000001107e-05, 2.7611000000000302e-05, 2.7319000000001342e-05, 2.769499999999772e-05, 2.7707999999997818e-05, 2.7361000000000052e-05, 2.7638999999999442e-05, 2.768099999999815e-05, 2.769499999999772e-05, 2.7334000000000386e-05, 2.7334000000000386e-05, 2.768099999999815e-05, 2.768100000000162e-05, 2.7305999999997776e-05, 2.7693999999998248e-05, 2.7334000000000386e-05, 2.770900000000076e-05, 2.7333000000000912e-05, 2.768100000000162e-05, 2.768099999999815e-05, 2.768099999999815e-05, 2.7320000000000816e-05, 2.7652000000003008e-05, 2.7318999999997873e-05, 2.8040999999999483e-05, 2.8041999999998957e-05, 2.7652999999999012e-05, 2.766699999999858e-05, 2.7332999999997443e-05, 2.770900000000076e-05, 2.8042000000002426e-05, 2.7679999999998678e-05, 2.7638999999999442e-05, 2.8068999999998623e-05, 2.8027999999999387e-05, 2.7320000000000816e-05, 2.7333000000000912e-05, 2.766699999999858e-05, 2.7693999999998248e-05, 2.768099999999815e-05, 2.7693999999998248e-05]</msg>
<status status="PASS" starttime="20201112 09:43:55.665" endtime="20201112 09:43:55.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.660" endtime="20201112 09:43:55.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.670" endtime="20201112 09:43:55.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:55.673" endtime="20201112 09:43:55.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.672" endtime="20201112 09:43:55.693"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.668" endtime="20201112 09:43:55.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.305" endtime="20201112 09:43:55.694"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.305" endtime="20201112 09:43:55.694"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.703" endtime="20201112 09:43:55.718"></status>
</kw>
<msg timestamp="20201112 09:43:55.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.701" endtime="20201112 09:43:55.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:55.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:55.719" endtime="20201112 09:43:55.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.722" endtime="20201112 09:43:55.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.699" endtime="20201112 09:43:55.725"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.697" endtime="20201112 09:43:55.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:55.732" endtime="20201112 09:43:56.016"></status>
</kw>
<msg timestamp="20201112 09:43:56.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:55.730" endtime="20201112 09:43:56.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.021" endtime="20201112 09:43:56.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.029" endtime="20201112 09:43:56.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.728" endtime="20201112 09:43:56.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.726" endtime="20201112 09:43:56.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.036" level="INFO">${RESULT} = [{'time': 0.021889292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0083999999999667e-05, 'source_diff': 3.0083999999999667e-05}, {'time': 0.021918986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:56.032" endtime="20201112 09:43:56.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.050" level="INFO">${ACCURACY} = {'time': [0.021889292, 0.021918986, 0.021948958, 0.021979014, 0.022008875, 0.022038667, 0.022069028, 0.022098972, 0.022128708, 0.022158903, 0.022188708, 0.022218958, 0.022248778, 0.022278778, 0.022309...</msg>
<status status="PASS" starttime="20201112 09:43:56.037" endtime="20201112 09:43:56.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.055" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.053" endtime="20201112 09:43:56.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.057" level="INFO">VALUE: [3.0083999999999667e-05, 2.8402999999999762e-05, 2.8764000000000567e-05, 2.840300000000323e-05, 2.841699999999933e-05, 2.8389000000000192e-05, 2.8791999999999707e-05, 2.8402999999999762e-05, 2.8389000000000192e-05, 2.8764000000000567e-05, 2.8389000000000192e-05, 2.8777000000000663e-05, 2.8402999999999762e-05, 2.8402999999999762e-05, 2.9098000000001706e-05, 2.8415999999999858e-05, 2.8375000000000622e-05, 2.8750000000000997e-05, 2.8764000000000567e-05, 2.8764000000000567e-05, 2.8375000000000622e-05, 2.8778000000000137e-05, 2.870899999999829e-05, 2.9083000000002662e-05, 2.840300000000323e-05, 2.8736000000001427e-05, 2.8415999999999858e-05, 2.8764000000000567e-05, 2.8402999999999762e-05, 2.8415999999999858e-05, 2.8764000000000567e-05, 2.8750000000000997e-05, 2.8402999999999762e-05, 2.841699999999933e-05, 2.8402999999999762e-05, 2.8374999999997152e-05, 2.8750000000000997e-05, 2.8750000000000997e-05, 2.8402999999999762e-05, 2.8735999999997958e-05, 2.8778000000000137e-05, 2.8749999999997528e-05, 2.8402999999999762e-05, 2.8750000000000997e-05, 2.8778000000000137e-05, 2.8749999999997528e-05, 2.8820000000002316e-05, 2.8402999999999762e-05, 2.9124999999997903e-05, 2.840300000000323e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.056" endtime="20201112 09:43:56.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.051" endtime="20201112 09:43:56.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.061" endtime="20201112 09:43:56.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.064" endtime="20201112 09:43:56.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.062" endtime="20201112 09:43:56.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.059" endtime="20201112 09:43:56.084"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.695" endtime="20201112 09:43:56.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:55.695" endtime="20201112 09:43:56.085"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.093" endtime="20201112 09:43:56.108"></status>
</kw>
<msg timestamp="20201112 09:43:56.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.092" endtime="20201112 09:43:56.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.110" endtime="20201112 09:43:56.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.112" endtime="20201112 09:43:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.089" endtime="20201112 09:43:56.115"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.087" endtime="20201112 09:43:56.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.122" endtime="20201112 09:43:56.407"></status>
</kw>
<msg timestamp="20201112 09:43:56.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02191675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:56.120" endtime="20201112 09:43:56.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02191675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021947486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:43:56.411" endtime="20201112 09:43:56.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.420" endtime="20201112 09:43:56.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.118" endtime="20201112 09:43:56.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.116" endtime="20201112 09:43:56.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.427" level="INFO">${RESULT} = [{'time': 0.021947486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073599999999996e-05, 'source_diff': 3.073599999999996e-05}, {'time': 0.021978833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:56.423" endtime="20201112 09:43:56.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.441" level="INFO">${ACCURACY} = {'time': [0.021947486, 0.021978833, 0.022010125, 0.022041069, 0.022072153, 0.022103139, 0.022135014, 0.022166181, 0.022198042, 0.022228986, 0.022260083, 0.022290917, 0.022321847, 0.022352861, 0.022384...</msg>
<status status="PASS" starttime="20201112 09:43:56.428" endtime="20201112 09:43:56.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.445" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.444" endtime="20201112 09:43:56.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.448" level="INFO">VALUE: [3.073599999999996e-05, 2.9457999999999568e-05, 2.9832999999999943e-05, 2.9471999999999138e-05, 2.9528000000000887e-05, 2.9846999999999513e-05, 3.0153000000001512e-05, 2.9847999999998986e-05, 3.0181000000000652e-05, 2.9443999999999998e-05, 2.9457999999999568e-05, 2.947300000000208e-05, 2.9457999999999568e-05, 2.9805000000000803e-05, 2.9528000000000887e-05, 2.9819999999999847e-05, 2.9457999999999568e-05, 2.944499999999947e-05, 2.9125000000001372e-05, 3.0194000000000748e-05, 2.9138999999997472e-05, 2.9833999999999417e-05, 2.9471999999999138e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.945899999999904e-05, 2.9819999999999847e-05, 2.9541999999996987e-05, 2.9485999999998708e-05, 2.9458000000003037e-05, 2.9540999999997514e-05, 2.9472000000002607e-05, 2.9555000000000553e-05, 2.9832999999999943e-05, 2.947299999999861e-05, 2.9457999999999568e-05, 2.9457999999999568e-05, 2.947300000000208e-05, 2.9833999999999417e-05, 2.9805000000000803e-05, 2.944499999999947e-05, 2.947299999999861e-05, 2.9457999999999568e-05, 3.0180000000001178e-05, 2.94309999999999e-05, 2.9806000000000277e-05, 2.9486000000002177e-05, 2.9097999999998236e-05, 2.9832999999999943e-05, 2.9832999999999943e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.446" endtime="20201112 09:43:56.449"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.442" endtime="20201112 09:43:56.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.451" endtime="20201112 09:43:56.453"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.455" endtime="20201112 09:43:56.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.453" endtime="20201112 09:43:56.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.450" endtime="20201112 09:43:56.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.086" endtime="20201112 09:43:56.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.085" endtime="20201112 09:43:56.476"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.484" endtime="20201112 09:43:56.500"></status>
</kw>
<msg timestamp="20201112 09:43:56.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.483" endtime="20201112 09:43:56.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.502" endtime="20201112 09:43:56.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.504" endtime="20201112 09:43:56.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.480" endtime="20201112 09:43:56.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.478" endtime="20201112 09:43:56.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.514" endtime="20201112 09:43:56.800"></status>
</kw>
<msg timestamp="20201112 09:43:56.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.513" endtime="20201112 09:43:56.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022476583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022507708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.804" endtime="20201112 09:43:56.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.812" endtime="20201112 09:43:56.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.510" endtime="20201112 09:43:56.815"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.509" endtime="20201112 09:43:56.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:56.819" level="INFO">${RESULT} = [{'time': 0.022507708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.11249999999999e-05, 'source_diff': 3.11249999999999e-05}, {'time': 0.022540403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:56.816" endtime="20201112 09:43:56.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:56.832" level="INFO">${ACCURACY} = {'time': [0.022507708, 0.022540403, 0.022572347, 0.022604319, 0.022636361, 0.022669278, 0.022701639, 0.022733611, 0.022765569, 0.0227975, 0.022829361, 0.022861472, 0.022893611, 0.022925417, 0.02295762...</msg>
<status status="PASS" starttime="20201112 09:43:56.820" endtime="20201112 09:43:56.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.837" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 09:43:56.836" endtime="20201112 09:43:56.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.839" level="INFO">VALUE: [3.11249999999999e-05, 3.088899999999922e-05, 3.056900000000112e-05, 3.052700000000241e-05, 3.090300000000226e-05, 3.088900000000269e-05, 3.086100000000008e-05, 3.054200000000146e-05, 3.0540999999998514e-05, 3.052799999999842e-05, 3.017999999999771e-05, 3.0514000000002317e-05, 3.083300000000094e-05, 3.019500000000022e-05, 3.086100000000008e-05, 3.0499999999999278e-05, 3.052799999999842e-05, 3.088899999999922e-05, 3.095900000000054e-05, 3.0596999999996793e-05, 3.052799999999842e-05, 3.054100000000198e-05, 3.054200000000146e-05, 3.055599999999756e-05, 3.125000000000003e-05, 3.017999999999771e-05, 3.0180000000001178e-05, 3.081999999999738e-05, 3.055600000000103e-05, 3.017999999999771e-05, 3.090299999999879e-05, 3.0221999999999888e-05, 3.052799999999842e-05, 3.054199999999799e-05, 3.054200000000146e-05, 3.0584000000000167e-05, 3.127799999999917e-05, 3.088899999999922e-05, 3.054200000000146e-05, 3.054100000000198e-05, 3.052799999999842e-05, 3.059700000000026e-05, 3.125000000000003e-05, 3.0166000000001608e-05, 3.088900000000269e-05, 3.0181000000000652e-05, 3.059700000000026e-05, 3.054200000000146e-05, 3.0167000000001082e-05, 3.088799999999975e-05]</msg>
<status status="PASS" starttime="20201112 09:43:56.838" endtime="20201112 09:43:56.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.833" endtime="20201112 09:43:56.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.843" endtime="20201112 09:43:56.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:56.846" endtime="20201112 09:43:56.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.845" endtime="20201112 09:43:56.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.841" endtime="20201112 09:43:56.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.477" endtime="20201112 09:43:56.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.476" endtime="20201112 09:43:56.867"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.876" endtime="20201112 09:43:56.892"></status>
</kw>
<msg timestamp="20201112 09:43:56.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.874" endtime="20201112 09:43:56.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:56.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:56.893" endtime="20201112 09:43:56.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.896" endtime="20201112 09:43:56.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.872" endtime="20201112 09:43:56.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.870" endtime="20201112 09:43:56.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:56.906" endtime="20201112 09:43:57.193"></status>
</kw>
<msg timestamp="20201112 09:43:57.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:56.904" endtime="20201112 09:43:57.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021993958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.197" endtime="20201112 09:43:57.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.205" endtime="20201112 09:43:57.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.902" endtime="20201112 09:43:57.208"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.900" endtime="20201112 09:43:57.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.212" level="INFO">${RESULT} = [{'time': 0.021993958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.291600000000089e-05, 'source_diff': 3.291600000000089e-05}, {'time': 0.0220265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:43:57.209" endtime="20201112 09:43:57.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.225" level="INFO">${ACCURACY} = {'time': [0.021993958, 0.0220265, 0.022060778, 0.022093653, 0.022126597, 0.022159736, 0.0221925, 0.022225514, 0.022258792, 0.022291611, 0.022324722, 0.022357806, 0.022390625, 0.022423583, 0.02245675, ...</msg>
<status status="PASS" starttime="20201112 09:43:57.213" endtime="20201112 09:43:57.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.230" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.229" endtime="20201112 09:43:57.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.232" level="INFO">VALUE: [3.291600000000089e-05, 3.125000000000003e-05, 3.231999999999888e-05, 3.161100000000083e-05, 3.123600000000046e-05, 3.165299999999954e-05, 3.161100000000083e-05, 3.162499999999693e-05, 3.193099999999893e-05, 3.125000000000003e-05, 3.161100000000083e-05, 3.1612000000000307e-05, 3.159700000000126e-05, 3.12639999999996e-05, 3.195800000000207e-05, 3.161100000000083e-05, 3.159700000000126e-05, 3.158400000000117e-05, 3.127799999999917e-05, 3.161100000000083e-05, 3.197199999999817e-05, 3.125000000000003e-05, 3.197300000000111e-05, 3.158400000000117e-05, 3.158400000000117e-05, 3.161100000000083e-05, 3.158400000000117e-05, 3.155599999999856e-05, 3.19449999999985e-05, 3.1596999999997794e-05, 3.197300000000111e-05, 3.123599999999699e-05, 3.158300000000169e-05, 3.165200000000007e-05, 3.161100000000083e-05, 3.1554999999999084e-05, 3.163899999999997e-05, 3.158300000000169e-05, 3.1582999999998224e-05, 3.122200000000089e-05, 3.161100000000083e-05, 3.159700000000126e-05, 3.197199999999817e-05, 3.161100000000083e-05, 3.125000000000003e-05, 3.1610999999997363e-05, 3.161100000000083e-05, 3.12639999999996e-05, 3.16250000000004e-05, 3.161100000000083e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.231" endtime="20201112 09:43:57.233"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.226" endtime="20201112 09:43:57.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.236" endtime="20201112 09:43:57.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.239" endtime="20201112 09:43:57.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.238" endtime="20201112 09:43:57.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.234" endtime="20201112 09:43:57.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.868" endtime="20201112 09:43:57.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:56.868" endtime="20201112 09:43:57.260"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.269" endtime="20201112 09:43:57.285"></status>
</kw>
<msg timestamp="20201112 09:43:57.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.267" endtime="20201112 09:43:57.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.287" endtime="20201112 09:43:57.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.289" endtime="20201112 09:43:57.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.265" endtime="20201112 09:43:57.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.263" endtime="20201112 09:43:57.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.299" endtime="20201112 09:43:57.585"></status>
</kw>
<msg timestamp="20201112 09:43:57.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.298" endtime="20201112 09:43:57.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022466208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.589" endtime="20201112 09:43:57.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.598" endtime="20201112 09:43:57.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.295" endtime="20201112 09:43:57.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.294" endtime="20201112 09:43:57.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:57.604" level="INFO">${RESULT} = [{'time': 0.022466208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1319000000001466e-05, 'source_diff': 4.1319000000001466e-05}, {'time': 0.022510222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:57.601" endtime="20201112 09:43:57.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:57.619" level="INFO">${ACCURACY} = {'time': [0.022466208, 0.022510222, 0.022554222, 0.022598236, 0.022642208, 0.022686236, 0.022730222, 0.022774264, 0.022818236, 0.022862292, 0.022906236, 0.022950278, 0.022994264, 0.023038264, 0.023082...</msg>
<status status="PASS" starttime="20201112 09:43:57.605" endtime="20201112 09:43:57.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.623" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 09:43:57.622" endtime="20201112 09:43:57.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.626" level="INFO">VALUE: [4.1319000000001466e-05, 4.14860000000003e-05, 4.1582999999997816e-05, 4.149999999999987e-05, 4.166599999999923e-05, 4.175000000000012e-05, 4.1374999999999745e-05, 4.1611000000000425e-05, 4.1804999999998926e-05, 4.1875000000000245e-05, 4.14860000000003e-05, 4.157000000000119e-05, 4.172200000000098e-05, 4.1930999999998525e-05, 4.1402999999998885e-05, 4.141599999999898e-05, 4.172200000000098e-05, 4.1709000000000884e-05, 4.1652999999999135e-05, 4.152799999999901e-05, 4.1624999999999995e-05, 4.145800000000116e-05, 4.158400000000076e-05, 4.1847000000001106e-05, 4.1361000000000175e-05, 4.1624999999999995e-05, 4.1709000000000884e-05, 4.1695000000001314e-05, 4.1611000000000425e-05, 4.1555000000002146e-05, 4.1416999999998455e-05, 4.191599999999948e-05, 4.170800000000141e-05, 4.191599999999948e-05, 4.1388999999999315e-05, 4.175000000000012e-05, 4.1333000000001036e-05, 4.1361000000000175e-05, 4.176299999999675e-05, 4.169399999999837e-05, 4.1290999999998856e-05, 4.1611000000000425e-05, 4.1833000000001536e-05, 4.1403000000002355e-05, 4.151399999999944e-05, 4.154199999999858e-05, 4.1374999999999745e-05, 4.14860000000003e-05, 4.1611000000000425e-05, 4.1680999999998275e-05]</msg>
<status status="PASS" starttime="20201112 09:43:57.624" endtime="20201112 09:43:57.630"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.620" endtime="20201112 09:43:57.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.633" endtime="20201112 09:43:57.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:57.637" endtime="20201112 09:43:57.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.635" endtime="20201112 09:43:57.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.632" endtime="20201112 09:43:57.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.261" endtime="20201112 09:43:57.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.261" endtime="20201112 09:43:57.658"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.666" endtime="20201112 09:43:57.682"></status>
</kw>
<msg timestamp="20201112 09:43:57.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.665" endtime="20201112 09:43:57.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:57.683" endtime="20201112 09:43:57.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.686" endtime="20201112 09:43:57.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.662" endtime="20201112 09:43:57.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.660" endtime="20201112 09:43:57.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.696" endtime="20201112 09:43:57.981"></status>
</kw>
<msg timestamp="20201112 09:43:57.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.694" endtime="20201112 09:43:57.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:57.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021956792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021999625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:57.985" endtime="20201112 09:43:57.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:57.993" endtime="20201112 09:43:57.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.692" endtime="20201112 09:43:57.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.690" endtime="20201112 09:43:57.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.000" level="INFO">${RESULT} = [{'time': 0.021999625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2832999999999066e-05, 'source_diff': 4.2832999999999066e-05}, {'time': 0.022044653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:57.997" endtime="20201112 09:43:58.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.013" level="INFO">${ACCURACY} = {'time': [0.021999625, 0.022044653, 0.022089625, 0.022134694, 0.022179625, 0.022224667, 0.022269639, 0.022314667, 0.022359639, 0.022404681, 0.022449639, 0.022494667, 0.022539653, 0.022584681, 0.022629...</msg>
<status status="PASS" starttime="20201112 09:43:58.001" endtime="20201112 09:43:58.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.018" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.017" endtime="20201112 09:43:58.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.020" level="INFO">VALUE: [4.2832999999999066e-05, 4.2861000000001676e-05, 4.255600000000262e-05, 4.2860999999998206e-05, 4.275000000000112e-05, 4.2666999999999705e-05, 4.247200000000173e-05, 4.2666999999999705e-05, 4.2597000000001856e-05, 4.255599999999915e-05, 4.2402999999999885e-05, 4.2874999999997776e-05, 4.2444999999998595e-05, 4.276399999999722e-05, 4.250000000000087e-05, 4.2666999999999705e-05, 4.281999999999897e-05, 4.247199999999826e-05, 4.2624999999997526e-05, 4.2596999999998386e-05, 4.2541000000000107e-05, 4.2625000000000995e-05, 4.263800000000109e-05, 4.2625000000000995e-05, 4.2569000000002716e-05, 4.2346999999998136e-05, 4.2361000000001175e-05, 4.2874999999997776e-05, 4.2889000000000815e-05, 4.2361000000001175e-05, 4.277700000000079e-05, 4.2596999999998386e-05, 4.2568999999999246e-05, 4.2625000000000995e-05, 4.2791000000000357e-05, 4.2846999999998636e-05, 4.252800000000001e-05, 4.251400000000044e-05, 4.2596999999998386e-05, 4.28059999999994e-05, 4.255600000000262e-05, 4.283400000000201e-05, 4.2375000000000745e-05, 4.2625000000000995e-05, 4.251400000000044e-05, 4.2389000000000315e-05, 4.2860999999998206e-05, 4.277800000000026e-05, 4.2402999999999885e-05, 4.2944999999999095e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.019" endtime="20201112 09:43:58.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.014" endtime="20201112 09:43:58.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.024" endtime="20201112 09:43:58.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.027" endtime="20201112 09:43:58.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.026" endtime="20201112 09:43:58.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.022" endtime="20201112 09:43:58.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.658" endtime="20201112 09:43:58.048"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:57.658" endtime="20201112 09:43:58.048"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.057" endtime="20201112 09:43:58.073"></status>
</kw>
<msg timestamp="20201112 09:43:58.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.055" endtime="20201112 09:43:58.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.075" endtime="20201112 09:43:58.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.077" endtime="20201112 09:43:58.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.053" endtime="20201112 09:43:58.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.051" endtime="20201112 09:43:58.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.087" endtime="20201112 09:43:58.373"></status>
</kw>
<msg timestamp="20201112 09:43:58.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.086" endtime="20201112 09:43:58.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021954333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021998014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.378" endtime="20201112 09:43:58.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.386" endtime="20201112 09:43:58.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.083" endtime="20201112 09:43:58.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.081" endtime="20201112 09:43:58.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.393" level="INFO">${RESULT} = [{'time': 0.021998014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3681000000000275e-05, 'source_diff': 4.3681000000000275e-05}, {'time': 0.022044042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:43:58.389" endtime="20201112 09:43:58.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.406" level="INFO">${ACCURACY} = {'time': [0.021998014, 0.022044042, 0.022090028, 0.022136042, 0.022182042, 0.022228097, 0.022274028, 0.022320069, 0.022366056, 0.022411083, 0.022457056, 0.022503069, 0.022549056, 0.022595097, 0.022641...</msg>
<status status="PASS" starttime="20201112 09:43:58.394" endtime="20201112 09:43:58.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.411" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.410" endtime="20201112 09:43:58.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.413" level="INFO">VALUE: [4.3681000000000275e-05, 4.376399999999822e-05, 4.3667000000000705e-05, 4.379200000000083e-05, 4.3402999999997416e-05, 4.354099999999764e-05, 4.373600000000255e-05, 4.3541000000001107e-05, 4.38060000000004e-05, 4.317999999999683e-05, 4.383399999999954e-05, 4.3346999999999136e-05, 4.358400000000276e-05, 4.3403000000000885e-05, 4.3582999999999816e-05, 4.3596999999999386e-05, 4.36800000000008e-05, 4.394400000000062e-05, 4.348599999999883e-05, 4.373599999999908e-05, 4.3569000000000246e-05, 4.3403000000000885e-05, 4.3541000000001107e-05, 4.3431000000000025e-05, 4.3596999999999386e-05, 4.3846999999999636e-05, 4.379099999999789e-05, 4.397199999999976e-05, 4.3375000000001745e-05, 4.3611000000002426e-05, 4.3318999999999996e-05, 4.3874999999998776e-05, 4.3819000000000496e-05, 4.3625000000001996e-05, 4.3860999999999206e-05, 4.351399999999797e-05, 4.34999999999984e-05, 4.373599999999908e-05, 4.3625000000001996e-05, 4.3737000000002024e-05, 4.373599999999908e-05, 4.3874999999998776e-05, 4.381999999999997e-05, 4.3874999999998776e-05, 4.356999999999972e-05, 4.348599999999883e-05, 4.3487000000001774e-05, 4.340199999999794e-05, 4.35129999999985e-05, 4.370799999999994e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.412" endtime="20201112 09:43:58.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.407" endtime="20201112 09:43:58.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.417" endtime="20201112 09:43:58.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.420" endtime="20201112 09:43:58.439"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.419" endtime="20201112 09:43:58.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.415" endtime="20201112 09:43:58.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.049" endtime="20201112 09:43:58.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.049" endtime="20201112 09:43:58.441"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.450" endtime="20201112 09:43:58.467"></status>
</kw>
<msg timestamp="20201112 09:43:58.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.448" endtime="20201112 09:43:58.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.469" endtime="20201112 09:43:58.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.471" endtime="20201112 09:43:58.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.446" endtime="20201112 09:43:58.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.443" endtime="20201112 09:43:58.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.481" endtime="20201112 09:43:58.767"></status>
</kw>
<msg timestamp="20201112 09:43:58.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.480" endtime="20201112 09:43:58.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022576583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.771" endtime="20201112 09:43:58.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.779" endtime="20201112 09:43:58.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.477" endtime="20201112 09:43:58.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.475" endtime="20201112 09:43:58.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:58.786" level="INFO">${RESULT} = [{'time': 0.022576583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.451400000000244e-05, 'source_diff': 4.451400000000244e-05}, {'time': 0.022623611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:58.783" endtime="20201112 09:43:58.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:58.799" level="INFO">${ACCURACY} = {'time': [0.022576583, 0.022623611, 0.022670667, 0.022717667, 0.022764597, 0.022811667, 0.022858625, 0.022905625, 0.022952611, 0.022999653, 0.023046639, 0.023093667, 0.023140625, 0.023187653, 0.023234...</msg>
<status status="PASS" starttime="20201112 09:43:58.787" endtime="20201112 09:43:58.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.804" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 09:43:58.803" endtime="20201112 09:43:58.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.807" level="INFO">VALUE: [4.451400000000244e-05, 4.484699999999717e-05, 4.484800000000011e-05, 4.476399999999922e-05, 4.4403000000001885e-05, 4.4888999999999346e-05, 4.4610999999999956e-05, 4.472200000000051e-05, 4.4610999999999956e-05, 4.4444999999997126e-05, 4.455600000000115e-05, 4.4666999999998236e-05, 4.4347000000000136e-05, 4.451399999999897e-05, 4.447200000000026e-05, 4.476399999999922e-05, 4.44999999999994e-05, 4.4472999999999735e-05, 4.4319999999997e-05, 4.4888999999999346e-05, 4.4139000000002065e-05, 4.459799999999986e-05, 4.482000000000097e-05, 4.4709000000000415e-05, 4.4403000000001885e-05, 4.454099999999864e-05, 4.4861000000000206e-05, 4.474999999999965e-05, 4.484800000000011e-05, 4.48329999999976e-05, 4.4319999999997e-05, 4.4945000000001095e-05, 4.4597000000000386e-05, 4.4902999999998916e-05, 4.467999999999833e-05, 4.4833000000001066e-05, 4.4638999999999096e-05, 4.455600000000115e-05, 4.4888999999999346e-05, 4.4555000000001677e-05, 4.445799999999722e-05, 4.48060000000014e-05, 4.454099999999864e-05, 4.482000000000097e-05, 4.4666999999998236e-05, 4.4874999999999776e-05, 4.452799999999854e-05, 4.4403000000001885e-05, 4.470800000000094e-05, 4.4374999999999276e-05]</msg>
<status status="PASS" starttime="20201112 09:43:58.805" endtime="20201112 09:43:58.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.800" endtime="20201112 09:43:58.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.810" endtime="20201112 09:43:58.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:58.813" endtime="20201112 09:43:58.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.812" endtime="20201112 09:43:58.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.808" endtime="20201112 09:43:58.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.442" endtime="20201112 09:43:58.834"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.441" endtime="20201112 09:43:58.834"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.843" endtime="20201112 09:43:58.859"></status>
</kw>
<msg timestamp="20201112 09:43:58.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.841" endtime="20201112 09:43:58.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:58.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:58.860" endtime="20201112 09:43:58.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.863" endtime="20201112 09:43:58.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.839" endtime="20201112 09:43:58.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.837" endtime="20201112 09:43:58.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:58.873" endtime="20201112 09:43:59.161"></status>
</kw>
<msg timestamp="20201112 09:43:59.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:58.871" endtime="20201112 09:43:59.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022074444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.165" endtime="20201112 09:43:59.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.173" endtime="20201112 09:43:59.175"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.869" endtime="20201112 09:43:59.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.867" endtime="20201112 09:43:59.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.180" level="INFO">${RESULT} = [{'time': 0.022074444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597199999999829e-05, 'source_diff': 4.597199999999829e-05}, {'time': 0.022122472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.177" endtime="20201112 09:43:59.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.194" level="INFO">${ACCURACY} = {'time': [0.022074444, 0.022122472, 0.022170472, 0.022218486, 0.0222665, 0.022314486, 0.022362542, 0.022410556, 0.022458486, 0.0225065, 0.0225545, 0.022602514, 0.022650486, 0.022698514, 0.022746556, 0...</msg>
<status status="PASS" starttime="20201112 09:43:59.181" endtime="20201112 09:43:59.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.199" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.198" endtime="20201112 09:43:59.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.201" level="INFO">VALUE: [4.597199999999829e-05, 4.5875000000000776e-05, 4.576400000000022e-05, 4.558299999999835e-05, 4.5653000000003136e-05, 4.5625000000000526e-05, 4.5388999999999846e-05, 4.584800000000111e-05, 4.5611000000000956e-05, 4.5680999999998806e-05, 4.5833000000002067e-05, 4.5847000000001636e-05, 4.5347000000001136e-05, 4.5680999999998806e-05, 4.579200000000283e-05, 4.5931000000002525e-05, 4.545800000000169e-05, 4.555599999999868e-05, 4.5430999999998556e-05, 4.533399999999757e-05, 4.552799999999954e-05, 4.591600000000001e-05, 4.557000000000172e-05, 4.5639000000000096e-05, 4.5597000000001386e-05, 4.576399999999675e-05, 4.543000000000255e-05, 4.581899999999903e-05, 4.5388999999999846e-05, 4.577700000000032e-05, 4.573600000000108e-05, 4.545800000000169e-05, 4.559800000000086e-05, 4.565200000000019e-05, 4.56939999999989e-05, 4.561099999999749e-05, 4.58329999999986e-05, 4.530500000000243e-05, 4.541599999999951e-05, 4.545799999999822e-05, 4.5459000000001165e-05, 4.579200000000283e-05, 4.531899999999853e-05, 4.556999999999825e-05, 4.5361000000000706e-05, 4.5875000000000776e-05, 4.53329999999981e-05, 4.5902999999999916e-05, 4.577799999999979e-05, 4.58199999999985e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.200" endtime="20201112 09:43:59.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.195" endtime="20201112 09:43:59.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.205" endtime="20201112 09:43:59.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.208" endtime="20201112 09:43:59.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.207" endtime="20201112 09:43:59.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.203" endtime="20201112 09:43:59.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.835" endtime="20201112 09:43:59.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:58.835" endtime="20201112 09:43:59.229"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.238" endtime="20201112 09:43:59.254"></status>
</kw>
<msg timestamp="20201112 09:43:59.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.236" endtime="20201112 09:43:59.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.256" endtime="20201112 09:43:59.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.258" endtime="20201112 09:43:59.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.234" endtime="20201112 09:43:59.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.232" endtime="20201112 09:43:59.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.268" endtime="20201112 09:43:59.555"></status>
</kw>
<msg timestamp="20201112 09:43:59.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.267" endtime="20201112 09:43:59.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022190431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022237222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.559" endtime="20201112 09:43:59.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.568" endtime="20201112 09:43:59.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.264" endtime="20201112 09:43:59.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.262" endtime="20201112 09:43:59.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.574" level="INFO">${RESULT} = [{'time': 0.022237222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.679100000000089e-05, 'source_diff': 4.679100000000089e-05}, {'time': 0.02228625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:43:59.571" endtime="20201112 09:43:59.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.588" level="INFO">${ACCURACY} = {'time': [0.022237222, 0.02228625, 0.022335264, 0.02238425, 0.022433236, 0.022482264, 0.02253125, 0.022580292, 0.02262925, 0.022678278, 0.022727278, 0.022776306, 0.022825278, 0.022874292, 0.022923278,...</msg>
<status status="PASS" starttime="20201112 09:43:59.575" endtime="20201112 09:43:59.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.592" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.591" endtime="20201112 09:43:59.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.595" level="INFO">VALUE: [4.679100000000089e-05, 4.659699999999892e-05, 4.6861000000002206e-05, 4.6361000000001706e-05, 4.636099999999824e-05, 4.673599999999861e-05, 4.66939999999999e-05, 4.65139999999975e-05, 4.661099999999849e-05, 4.6667000000000236e-05, 4.659699999999892e-05, 4.684799999999864e-05, 4.633400000000204e-05, 4.684800000000211e-05, 4.661099999999849e-05, 4.654100000000064e-05, 4.6708999999998946e-05, 4.652799999999707e-05, 4.6736999999998086e-05, 4.654100000000064e-05, 4.68199999999995e-05, 4.645799999999922e-05, 4.636200000000118e-05, 4.6625000000001526e-05, 4.662499999999806e-05, 4.658299999999935e-05, 4.670799999999947e-05, 4.692999999999711e-05, 4.649999999999793e-05, 4.68329999999996e-05, 4.6639000000001096e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.630499999999996e-05, 4.652800000000054e-05, 4.652800000000054e-05, 4.66939999999999e-05, 4.673599999999861e-05, 4.6889000000001346e-05, 4.654200000000011e-05, 4.654200000000011e-05, 4.6931000000000056e-05, 4.647200000000226e-05, 4.6903000000000916e-05, 4.655500000000021e-05, 4.6375000000001276e-05, 4.65139999999975e-05, 4.649999999999793e-05, 4.6875000000001776e-05, 4.680599999999993e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.593" endtime="20201112 09:43:59.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.589" endtime="20201112 09:43:59.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.598" endtime="20201112 09:43:59.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.602" endtime="20201112 09:43:59.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.600" endtime="20201112 09:43:59.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.597" endtime="20201112 09:43:59.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.230" endtime="20201112 09:43:59.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.230" endtime="20201112 09:43:59.622"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.631" endtime="20201112 09:43:59.647"></status>
</kw>
<msg timestamp="20201112 09:43:59.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.630" endtime="20201112 09:43:59.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:43:59.648" endtime="20201112 09:43:59.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.651" endtime="20201112 09:43:59.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.627" endtime="20201112 09:43:59.654"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.625" endtime="20201112 09:43:59.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.661" endtime="20201112 09:43:59.947"></status>
</kw>
<msg timestamp="20201112 09:43:59.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.659" endtime="20201112 09:43:59.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022120167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:43:59.952" endtime="20201112 09:43:59.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.960" endtime="20201112 09:43:59.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.657" endtime="20201112 09:43:59.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.655" endtime="20201112 09:43:59.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:43:59.967" level="INFO">${RESULT} = [{'time': 0.022168111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.794400000000115e-05, 'source_diff': 4.794400000000115e-05}, {'time': 0.022218139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:43:59.963" endtime="20201112 09:43:59.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:43:59.980" level="INFO">${ACCURACY} = {'time': [0.022168111, 0.022218139, 0.022268111, 0.022318139, 0.022368139, 0.022418222, 0.022468139, 0.022518167, 0.022568139, 0.022618167, 0.022668167, 0.022718181, 0.022768153, 0.022818208, 0.022868...</msg>
<status status="PASS" starttime="20201112 09:43:59.968" endtime="20201112 09:43:59.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.985" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 09:43:59.984" endtime="20201112 09:43:59.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:43:59.987" level="INFO">VALUE: [4.794400000000115e-05, 4.786099999999974e-05, 4.781900000000103e-05, 4.7667000000001236e-05, 4.759699999999992e-05, 4.744400000000065e-05, 4.732e-05, 4.786099999999974e-05, 4.7681000000000806e-05, 4.7931000000001056e-05, 4.779199999999789e-05, 4.7389000000001846e-05, 4.755600000000068e-05, 4.740199999999847e-05, 4.75139999999985e-05, 4.756900000000078e-05, 4.7389000000001846e-05, 4.745799999999675e-05, 4.761199999999896e-05, 4.791600000000201e-05, 4.762499999999906e-05, 4.76940000000009e-05, 4.784700000000017e-05, 4.749999999999893e-05, 4.751400000000197e-05, 4.742999999999761e-05, 4.758300000000035e-05, 4.776400000000222e-05, 4.786099999999974e-05, 4.751400000000197e-05, 4.756900000000078e-05, 4.7417000000000986e-05, 4.752799999999807e-05, 4.7181000000000306e-05, 4.754200000000111e-05, 4.788899999999888e-05, 4.786099999999974e-05, 4.788899999999888e-05, 4.7625000000002526e-05, 4.75139999999985e-05, 4.781899999999756e-05, 4.757000000000025e-05, 4.748599999999936e-05, 4.7722999999999516e-05, 4.749999999999893e-05, 4.738899999999838e-05, 4.784700000000017e-05, 4.790299999999845e-05, 4.751400000000197e-05, 4.773599999999961e-05]</msg>
<status status="PASS" starttime="20201112 09:43:59.986" endtime="20201112 09:43:59.988"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.981" endtime="20201112 09:43:59.988"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:43:59.991" endtime="20201112 09:43:59.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:43:59.994" endtime="20201112 09:44:00.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.992" endtime="20201112 09:44:00.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.989" endtime="20201112 09:44:00.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.623" endtime="20201112 09:44:00.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:59.623" endtime="20201112 09:44:00.015"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.023" endtime="20201112 09:44:00.040"></status>
</kw>
<msg timestamp="20201112 09:44:00.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.022" endtime="20201112 09:44:00.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.041" endtime="20201112 09:44:00.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.044" endtime="20201112 09:44:00.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.019" endtime="20201112 09:44:00.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.017" endtime="20201112 09:44:00.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.054" endtime="20201112 09:44:00.340"></status>
</kw>
<msg timestamp="20201112 09:44:00.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.052" endtime="20201112 09:44:00.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022006597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.344" endtime="20201112 09:44:00.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.352" endtime="20201112 09:44:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.050" endtime="20201112 09:44:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.048" endtime="20201112 09:44:00.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.359" level="INFO">${RESULT} = [{'time': 0.022054792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8195000000000876e-05, 'source_diff': 4.8195000000000876e-05}, {'time': 0.022105819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:00.355" endtime="20201112 09:44:00.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.372" level="INFO">${ACCURACY} = {'time': [0.022054792, 0.022105819, 0.022156806, 0.022207875, 0.022258819, 0.022309847, 0.022360833, 0.022411861, 0.022462819, 0.022513847, 0.022564833, 0.022615861, 0.022666861, 0.022717875, 0.022768...</msg>
<status status="PASS" starttime="20201112 09:44:00.360" endtime="20201112 09:44:00.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.377" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.376" endtime="20201112 09:44:00.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.379" level="INFO">VALUE: [4.8195000000000876e-05, 4.88880000000004e-05, 4.875000000000018e-05, 4.891699999999902e-05, 4.887500000000031e-05, 4.843000000000208e-05, 4.847200000000079e-05, 4.877800000000279e-05, 4.875000000000018e-05, 4.85139999999995e-05, 4.836100000000024e-05, 4.855500000000221e-05, 4.858300000000135e-05, 4.862500000000006e-05, 4.870800000000147e-05, 4.859699999999745e-05, 4.883299999999813e-05, 4.890299999999945e-05, 4.849999999999993e-05, 4.855599999999821e-05, 4.858300000000135e-05, 4.869499999999791e-05, 4.8695000000001376e-05, 4.85139999999995e-05, 4.8445000000001126e-05, 4.880599999999846e-05, 4.873600000000061e-05, 4.884800000000064e-05, 4.840299999999895e-05, 4.877799999999932e-05, 4.887500000000031e-05, 4.856999999999778e-05, 4.876399999999975e-05, 4.816599999999879e-05, 4.868099999999834e-05, 4.879099999999942e-05, 4.872200000000104e-05, 4.847199999999732e-05, 4.884700000000117e-05, 4.85269999999996e-05, 4.880499999999899e-05, 4.890299999999945e-05, 4.886100000000074e-05, 4.898600000000086e-05, 4.872200000000104e-05, 4.892999999999911e-05, 4.867999999999886e-05, 4.838899999999938e-05, 4.854099999999917e-05, 4.8389000000002846e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.378" endtime="20201112 09:44:00.380"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.373" endtime="20201112 09:44:00.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.383" endtime="20201112 09:44:00.384"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.386" endtime="20201112 09:44:00.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.385" endtime="20201112 09:44:00.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.381" endtime="20201112 09:44:00.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.016" endtime="20201112 09:44:00.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.015" endtime="20201112 09:44:00.407"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.416" endtime="20201112 09:44:00.431"></status>
</kw>
<msg timestamp="20201112 09:44:00.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.414" endtime="20201112 09:44:00.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.433" endtime="20201112 09:44:00.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.435" endtime="20201112 09:44:00.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.412" endtime="20201112 09:44:00.438"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.409" endtime="20201112 09:44:00.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.445" endtime="20201112 09:44:00.732"></status>
</kw>
<msg timestamp="20201112 09:44:00.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.444" endtime="20201112 09:44:00.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021938514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021987847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.736" endtime="20201112 09:44:00.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.744" endtime="20201112 09:44:00.746"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.441" endtime="20201112 09:44:00.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.439" endtime="20201112 09:44:00.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:00.751" level="INFO">${RESULT} = [{'time': 0.021987847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.93330000000021e-05, 'source_diff': 4.93330000000021e-05}, {'time': 0.022039847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:00.748" endtime="20201112 09:44:00.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:00.765" level="INFO">${ACCURACY} = {'time': [0.021987847, 0.022039847, 0.022091806, 0.022143833, 0.022195875, 0.022247847, 0.022299833, 0.022351861, 0.022403847, 0.022455861, 0.022507847, 0.022559875, 0.022611861, 0.022663889, 0.022715...</msg>
<status status="PASS" starttime="20201112 09:44:00.752" endtime="20201112 09:44:00.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.770" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 09:44:00.769" endtime="20201112 09:44:00.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.772" level="INFO">VALUE: [4.93330000000021e-05, 4.991600000000054e-05, 4.937499999999734e-05, 4.966600000000029e-05, 4.95140000000005e-05, 4.945800000000222e-05, 4.959700000000192e-05, 4.991700000000002e-05, 4.936100000000124e-05, 4.956899999999931e-05, 4.958300000000235e-05, 4.976400000000075e-05, 4.967999999999986e-05, 4.938900000000038e-05, 4.930499999999949e-05, 4.963900000000063e-05, 4.936100000000124e-05, 4.987499999999784e-05, 4.950000000000093e-05, 4.9181000000002306e-05, 4.954199999999964e-05, 4.976300000000128e-05, 4.9431000000002556e-05, 4.9459000000001696e-05, 4.947200000000179e-05, 4.9695000000002376e-05, 4.973600000000161e-05, 4.941600000000004e-05, 4.9709000000001946e-05, 4.986100000000174e-05, 4.941699999999952e-05, 4.990200000000097e-05, 4.959699999999845e-05, 4.944399999999918e-05, 4.954199999999964e-05, 4.991600000000054e-05, 4.961099999999802e-05, 4.9707999999999e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.981899999999956e-05, 4.980599999999946e-05, 4.938900000000038e-05, 4.96940000000029e-05, 4.962499999999759e-05, 4.948600000000136e-05, 4.938899999999691e-05, 4.979199999999989e-05, 4.959700000000192e-05, 4.954199999999964e-05]</msg>
<status status="PASS" starttime="20201112 09:44:00.771" endtime="20201112 09:44:00.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.766" endtime="20201112 09:44:00.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.776" endtime="20201112 09:44:00.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:00.780" endtime="20201112 09:44:00.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.778" endtime="20201112 09:44:00.799"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.774" endtime="20201112 09:44:00.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.408" endtime="20201112 09:44:00.800"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.407" endtime="20201112 09:44:00.800"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.809" endtime="20201112 09:44:00.826"></status>
</kw>
<msg timestamp="20201112 09:44:00.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.807" endtime="20201112 09:44:00.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:00.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:00.827" endtime="20201112 09:44:00.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.830" endtime="20201112 09:44:00.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.805" endtime="20201112 09:44:00.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.803" endtime="20201112 09:44:00.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:00.840" endtime="20201112 09:44:01.125"></status>
</kw>
<msg timestamp="20201112 09:44:01.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:00.838" endtime="20201112 09:44:01.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021875944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021926514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.129" endtime="20201112 09:44:01.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.138" endtime="20201112 09:44:01.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.836" endtime="20201112 09:44:01.140"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.834" endtime="20201112 09:44:01.140"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.144" level="INFO">${RESULT} = [{'time': 0.021926514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.056999999999978e-05, 'source_diff': 5.056999999999978e-05}, {'time': 0.021979542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.141" endtime="20201112 09:44:01.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.158" level="INFO">${ACCURACY} = {'time': [0.021926514, 0.021979542, 0.022032528, 0.022084569, 0.022137528, 0.022190556, 0.022243556, 0.022296583, 0.022349556, 0.022402583, 0.022455556, 0.022508583, 0.022561583, 0.022614597, 0.022666...</msg>
<status status="PASS" starttime="20201112 09:44:01.145" endtime="20201112 09:44:01.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.162" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.161" endtime="20201112 09:44:01.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.165" level="INFO">VALUE: [5.056999999999978e-05, 5.058400000000282e-05, 5.077799999999785e-05, 5.019399999999993e-05, 5.045899999999923e-05, 5.052800000000107e-05, 5.087500000000231e-05, 5.086099999999927e-05, 5.038899999999791e-05, 5.079100000000142e-05, 5.086200000000221e-05, 5.037499999999834e-05, 5.0401999999998004e-05, 5.087499999999884e-05, 5.013900000000113e-05, 5.048600000000236e-05, 5.087499999999884e-05, 5.091699999999755e-05, 5.044400000000018e-05, 5.056900000000031e-05, 5.044400000000018e-05, 5.036099999999877e-05, 5.074999999999871e-05, 5.076400000000175e-05, 5.086099999999927e-05, 5.040299999999748e-05, 5.069400000000043e-05, 5.068100000000034e-05, 5.079199999999742e-05, 5.072199999999957e-05, 5.044499999999966e-05, 5.073599999999914e-05, 5.08469999999997e-05, 5.044499999999966e-05, 5.037500000000181e-05, 5.055600000000021e-05, 5.06669999999973e-05, 5.0651999999998254e-05, 5.0472999999998797e-05, 5.068000000000086e-05, 5.088899999999841e-05, 5.086099999999927e-05, 5.034799999999867e-05, 5.06530000000012e-05, 5.068100000000034e-05, 5.069400000000043e-05, 5.037500000000181e-05, 5.06530000000012e-05, 5.0651999999998254e-05, 5.058299999999988e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.163" endtime="20201112 09:44:01.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.159" endtime="20201112 09:44:01.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.168" endtime="20201112 09:44:01.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.172" endtime="20201112 09:44:01.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.170" endtime="20201112 09:44:01.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.167" endtime="20201112 09:44:01.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.801" endtime="20201112 09:44:01.192"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:00.801" endtime="20201112 09:44:01.192"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.201" endtime="20201112 09:44:01.217"></status>
</kw>
<msg timestamp="20201112 09:44:01.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.200" endtime="20201112 09:44:01.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.219" endtime="20201112 09:44:01.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.221" endtime="20201112 09:44:01.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.197" endtime="20201112 09:44:01.224"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.195" endtime="20201112 09:44:01.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.231" endtime="20201112 09:44:01.519"></status>
</kw>
<msg timestamp="20201112 09:44:01.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.229" endtime="20201112 09:44:01.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022029097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022081083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.523" endtime="20201112 09:44:01.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.531" endtime="20201112 09:44:01.533"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.227" endtime="20201112 09:44:01.534"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.225" endtime="20201112 09:44:01.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.538" level="INFO">${RESULT} = [{'time': 0.022081083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.198600000000039e-05, 'source_diff': 5.198600000000039e-05}, {'time': 0.022135083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.535" endtime="20201112 09:44:01.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.551" level="INFO">${ACCURACY} = {'time': [0.022081083, 0.022135083, 0.022189056, 0.022243097, 0.022297069, 0.022351097, 0.022405097, 0.022459097, 0.022513083, 0.022567125, 0.022621097, 0.022675125, 0.022729097, 0.022783139, 0.022837...</msg>
<status status="PASS" starttime="20201112 09:44:01.539" endtime="20201112 09:44:01.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.556" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.555" endtime="20201112 09:44:01.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.559" level="INFO">VALUE: [5.198600000000039e-05, 5.173600000000014e-05, 5.140299999999848e-05, 5.187499999999984e-05, 5.1693999999997964e-05, 5.187499999999984e-05, 5.1679999999998394e-05, 5.149999999999946e-05, 5.174999999999971e-05, 5.159700000000045e-05, 5.147200000000032e-05, 5.162499999999959e-05, 5.144400000000118e-05, 5.148599999999989e-05, 5.163899999999916e-05, 5.140300000000195e-05, 5.154200000000164e-05, 5.186100000000027e-05, 5.154200000000164e-05, 5.156999999999731e-05, 5.145800000000075e-05, 5.168099999999787e-05, 5.172200000000057e-05, 5.169499999999744e-05, 5.180600000000146e-05, 5.170900000000048e-05, 5.155600000000121e-05, 5.176399999999928e-05, 5.162500000000306e-05, 5.1679999999998394e-05, 5.111099999999952e-05, 5.155499999999827e-05, 5.1652000000002724e-05, 5.147200000000032e-05, 5.134800000000314e-05, 5.15409999999987e-05, 5.187499999999984e-05, 5.187499999999984e-05, 5.191699999999855e-05, 5.122200000000007e-05, 5.179100000000242e-05, 5.1693999999997964e-05, 5.143000000000161e-05, 5.149999999999946e-05, 5.180600000000146e-05, 5.163899999999916e-05, 5.176399999999928e-05, 5.188899999999941e-05, 5.166700000000177e-05, 5.182000000000103e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.557" endtime="20201112 09:44:01.559"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.552" endtime="20201112 09:44:01.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.562" endtime="20201112 09:44:01.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.566" endtime="20201112 09:44:01.585"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.564" endtime="20201112 09:44:01.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.561" endtime="20201112 09:44:01.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.193" endtime="20201112 09:44:01.586"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.193" endtime="20201112 09:44:01.587"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.595" endtime="20201112 09:44:01.612"></status>
</kw>
<msg timestamp="20201112 09:44:01.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.594" endtime="20201112 09:44:01.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.614" endtime="20201112 09:44:01.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.616" endtime="20201112 09:44:01.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.591" endtime="20201112 09:44:01.619"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.589" endtime="20201112 09:44:01.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.626" endtime="20201112 09:44:01.912"></status>
</kw>
<msg timestamp="20201112 09:44:01.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.625" endtime="20201112 09:44:01.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022079458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022131972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:01.916" endtime="20201112 09:44:01.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.925" endtime="20201112 09:44:01.926"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.622" endtime="20201112 09:44:01.927"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.620" endtime="20201112 09:44:01.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:01.931" level="INFO">${RESULT} = [{'time': 0.022131972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.251400000000003e-05, 'source_diff': 5.251400000000003e-05}, {'time': 0.022187042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:01.928" endtime="20201112 09:44:01.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:01.945" level="INFO">${ACCURACY} = {'time': [0.022131972, 0.022187042, 0.022241972, 0.022297014, 0.022351972, 0.022407014, 0.022462, 0.022517028, 0.022571986, 0.022627014, 0.022682, 0.022737028, 0.022792, 0.022847042, 0.022902014, 0.02...</msg>
<status status="PASS" starttime="20201112 09:44:01.932" endtime="20201112 09:44:01.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.949" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 09:44:01.948" endtime="20201112 09:44:01.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:01.952" level="INFO">VALUE: [5.251400000000003e-05, 5.243100000000209e-05, 5.237500000000034e-05, 5.2708000000002e-05, 5.2708000000002e-05, 5.279199999999942e-05, 5.2471999999997854e-05, 5.268100000000234e-05, 5.2693999999998964e-05, 5.244500000000166e-05, 5.276400000000028e-05, 5.248600000000089e-05, 5.288900000000041e-05, 5.288900000000041e-05, 5.234699999999773e-05, 5.272300000000105e-05, 5.272300000000105e-05, 5.24730000000008e-05, 5.244499999999819e-05, 5.263900000000016e-05, 5.232000000000153e-05, 5.244400000000218e-05, 5.26669999999993e-05, 5.284699999999823e-05, 5.241699999999905e-05, 5.245800000000175e-05, 5.261200000000049e-05, 5.2665999999999824e-05, 5.230499999999902e-05, 5.261100000000102e-05, 5.2443999999998714e-05, 5.243100000000209e-05, 5.244499999999819e-05, 5.287500000000084e-05, 5.233300000000163e-05, 5.251400000000003e-05, 5.2749999999997244e-05, 5.286100000000127e-05, 5.258399999999788e-05, 5.263900000000016e-05, 5.288900000000041e-05, 5.251400000000003e-05, 5.23609999999973e-05, 5.263900000000016e-05, 5.263900000000016e-05, 5.279199999999942e-05, 5.259699999999798e-05, 5.269500000000191e-05, 5.23340000000011e-05, 5.236200000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:44:01.950" endtime="20201112 09:44:01.952"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.946" endtime="20201112 09:44:01.953"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.955" endtime="20201112 09:44:01.956"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:01.959" endtime="20201112 09:44:01.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.957" endtime="20201112 09:44:01.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.953" endtime="20201112 09:44:01.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.587" endtime="20201112 09:44:01.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.587" endtime="20201112 09:44:01.980"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:01.988" endtime="20201112 09:44:02.005"></status>
</kw>
<msg timestamp="20201112 09:44:02.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:01.987" endtime="20201112 09:44:02.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.007" endtime="20201112 09:44:02.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.009" endtime="20201112 09:44:02.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.984" endtime="20201112 09:44:02.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.982" endtime="20201112 09:44:02.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.019" endtime="20201112 09:44:02.306"></status>
</kw>
<msg timestamp="20201112 09:44:02.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.017" endtime="20201112 09:44:02.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022193139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022246958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.310" endtime="20201112 09:44:02.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.318" endtime="20201112 09:44:02.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.015" endtime="20201112 09:44:02.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.013" endtime="20201112 09:44:02.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.325" level="INFO">${RESULT} = [{'time': 0.022246958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.381900000000009e-05, 'source_diff': 5.381900000000009e-05}, {'time': 0.022303014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.322" endtime="20201112 09:44:02.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.339" level="INFO">${ACCURACY} = {'time': [0.022246958, 0.022303014, 0.022358958, 0.022415014, 0.022470986, 0.022527, 0.022582986, 0.022639014, 0.022694986, 0.022751028, 0.022807, 0.022863056, 0.022919, 0.022975028, 0.023031014, 0.02...</msg>
<status status="PASS" starttime="20201112 09:44:02.326" endtime="20201112 09:44:02.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.344" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.343" endtime="20201112 09:44:02.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.346" level="INFO">VALUE: [5.381900000000009e-05, 5.383299999999966e-05, 5.347200000000232e-05, 5.3471999999998854e-05, 5.341700000000005e-05, 5.384699999999923e-05, 5.380500000000052e-05, 5.3735999999998674e-05, 5.380500000000052e-05, 5.391700000000055e-05, 5.361100000000202e-05, 5.338900000000091e-05, 5.341700000000005e-05, 5.382000000000303e-05, 5.355599999999974e-05, 5.388900000000141e-05, 5.384699999999923e-05, 5.391700000000055e-05, 5.344499999999919e-05, 5.358299999999941e-05, 5.35280000000006e-05, 5.3402000000001004e-05, 5.340299999999701e-05, 5.358299999999941e-05, 5.351400000000103e-05, 5.3721999999999104e-05, 5.351300000000156e-05, 5.358299999999941e-05, 5.33470000000022e-05, 5.3416000000000574e-05, 5.3415999999997105e-05, 5.372200000000257e-05, 5.330500000000002e-05, 5.3499999999997994e-05, 5.3680000000000394e-05, 5.381900000000009e-05, 5.348600000000189e-05, 5.356999999999931e-05, 5.3680000000000394e-05, 5.381999999999956e-05, 5.3652000000001254e-05, 5.332000000000253e-05, 5.387499999999837e-05, 5.343099999999962e-05, 5.35280000000006e-05, 5.391700000000055e-05, 5.312500000000109e-05, 5.343099999999962e-05, 5.38609999999988e-05, 5.351300000000156e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.345" endtime="20201112 09:44:02.347"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.340" endtime="20201112 09:44:02.348"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.350" endtime="20201112 09:44:02.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.353" endtime="20201112 09:44:02.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.352" endtime="20201112 09:44:02.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.348" endtime="20201112 09:44:02.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.980" endtime="20201112 09:44:02.374"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:01.980" endtime="20201112 09:44:02.374"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.383" endtime="20201112 09:44:02.400"></status>
</kw>
<msg timestamp="20201112 09:44:02.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.381" endtime="20201112 09:44:02.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.403" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.402" endtime="20201112 09:44:02.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.404" endtime="20201112 09:44:02.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.379" endtime="20201112 09:44:02.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.376" endtime="20201112 09:44:02.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.414" endtime="20201112 09:44:02.701"></status>
</kw>
<msg timestamp="20201112 09:44:02.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.413" endtime="20201112 09:44:02.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022279472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022334083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.705" endtime="20201112 09:44:02.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.714" endtime="20201112 09:44:02.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.410" endtime="20201112 09:44:02.716"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.408" endtime="20201112 09:44:02.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:02.721" level="INFO">${RESULT} = [{'time': 0.022334083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.461099999999955e-05, 'source_diff': 5.461099999999955e-05}, {'time': 0.022391125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:02.717" endtime="20201112 09:44:02.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:02.734" level="INFO">${ACCURACY} = {'time': [0.022334083, 0.022391125, 0.022448125, 0.022505111, 0.022562097, 0.022619153, 0.022676111, 0.022733139, 0.022790111, 0.022847167, 0.022904125, 0.022961167, 0.023018125, 0.023075153, 0.023132...</msg>
<status status="PASS" starttime="20201112 09:44:02.722" endtime="20201112 09:44:02.734"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.738" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 09:44:02.737" endtime="20201112 09:44:02.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.741" level="INFO">VALUE: [5.461099999999955e-05, 5.4444000000000714e-05, 5.483300000000066e-05, 5.476400000000228e-05, 5.458300000000041e-05, 5.465299999999826e-05, 5.4777999999998384e-05, 5.482000000000056e-05, 5.4513999999998564e-05, 5.468100000000087e-05, 5.468100000000087e-05, 5.443100000000062e-05, 5.483300000000066e-05, 5.458399999999988e-05, 5.4527999999998134e-05, 5.444500000000019e-05, 5.483400000000013e-05, 5.48479999999997e-05, 5.441700000000105e-05, 5.48479999999997e-05, 5.462499999999912e-05, 5.4749999999999244e-05, 5.4735999999999674e-05, 5.461099999999955e-05, 5.452699999999866e-05, 5.45410000000017e-05, 5.479200000000142e-05, 5.4679999999997925e-05, 5.477699999999891e-05, 5.4458000000000284e-05, 5.4666000000001824e-05, 5.4444000000000714e-05, 5.4694000000000964e-05, 5.479200000000142e-05, 5.4749999999999244e-05, 5.4749999999999244e-05, 5.437499999999887e-05, 5.488899999999894e-05, 5.441700000000105e-05, 5.4471999999999854e-05, 5.45280000000016e-05, 5.465300000000173e-05, 5.443100000000062e-05, 5.454200000000117e-05, 5.4499999999998994e-05, 5.458300000000041e-05, 5.4791999999997953e-05, 5.4499999999998994e-05, 5.443100000000062e-05, 5.469499999999697e-05]</msg>
<status status="PASS" starttime="20201112 09:44:02.739" endtime="20201112 09:44:02.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.735" endtime="20201112 09:44:02.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.751" endtime="20201112 09:44:02.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:02.755" endtime="20201112 09:44:02.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.753" endtime="20201112 09:44:02.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.749" endtime="20201112 09:44:02.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.375" endtime="20201112 09:44:02.776"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.374" endtime="20201112 09:44:02.776"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.784" endtime="20201112 09:44:02.802"></status>
</kw>
<msg timestamp="20201112 09:44:02.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.783" endtime="20201112 09:44:02.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:02.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:02.803" endtime="20201112 09:44:02.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.806" endtime="20201112 09:44:02.808"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.780" endtime="20201112 09:44:02.809"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.778" endtime="20201112 09:44:02.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:02.816" endtime="20201112 09:44:03.102"></status>
</kw>
<msg timestamp="20201112 09:44:03.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:02.814" endtime="20201112 09:44:03.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022349556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.106" endtime="20201112 09:44:03.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.114" endtime="20201112 09:44:03.116"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.811" endtime="20201112 09:44:03.117"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.810" endtime="20201112 09:44:03.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.121" level="INFO">${RESULT} = [{'time': 0.022405028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5472000000000854e-05, 'source_diff': 5.5472000000000854e-05}, {'time': 0.022463042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:03.118" endtime="20201112 09:44:03.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.134" level="INFO">${ACCURACY} = {'time': [0.022405028, 0.022463042, 0.022521028, 0.022579056, 0.022637028, 0.022695069, 0.022753056, 0.022811083, 0.022869056, 0.022927083, 0.022985069, 0.023043097, 0.023101069, 0.023159097, 0.023217...</msg>
<status status="PASS" starttime="20201112 09:44:03.122" endtime="20201112 09:44:03.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.139" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.138" endtime="20201112 09:44:03.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.141" level="INFO">VALUE: [5.5472000000000854e-05, 5.570899999999754e-05, 5.570899999999754e-05, 5.5791999999998954e-05, 5.569500000000144e-05, 5.583299999999819e-05, 5.537499999999987e-05, 5.5915999999999605e-05, 5.5527999999999134e-05, 5.588899999999994e-05, 5.5444000000001714e-05, 5.5429999999998675e-05, 5.561099999999708e-05, 5.5513999999999564e-05, 5.580499999999905e-05, 5.5708000000001534e-05, 5.581900000000209e-05, 5.581899999999862e-05, 5.5499999999999994e-05, 5.5722000000001104e-05, 5.5472000000000854e-05, 5.5499999999999994e-05, 5.56670000000023e-05, 5.51809999999979e-05, 5.538900000000291e-05, 5.565299999999926e-05, 5.534700000000073e-05, 5.584700000000123e-05, 5.570900000000101e-05, 5.587500000000037e-05, 5.5305999999998023e-05, 5.591699999999908e-05, 5.538899999999944e-05, 5.537499999999987e-05, 5.544500000000119e-05, 5.5387999999999965e-05, 5.55549999999988e-05, 5.559700000000098e-05, 5.5458000000001284e-05, 5.5763999999999814e-05, 5.5387999999999965e-05, 5.538899999999944e-05, 5.5722000000001104e-05, 5.559700000000098e-05, 5.595900000000126e-05, 5.580499999999905e-05, 5.584699999999776e-05, 5.561100000000055e-05, 5.5429999999998675e-05, 5.590299999999951e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.140" endtime="20201112 09:44:03.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.135" endtime="20201112 09:44:03.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.145" endtime="20201112 09:44:03.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.148" endtime="20201112 09:44:03.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.147" endtime="20201112 09:44:03.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.143" endtime="20201112 09:44:03.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.777" endtime="20201112 09:44:03.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:02.776" endtime="20201112 09:44:03.169"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.178" endtime="20201112 09:44:03.195"></status>
</kw>
<msg timestamp="20201112 09:44:03.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.176" endtime="20201112 09:44:03.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.196" endtime="20201112 09:44:03.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.199" endtime="20201112 09:44:03.201"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.174" endtime="20201112 09:44:03.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.172" endtime="20201112 09:44:03.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.209" endtime="20201112 09:44:03.495"></status>
</kw>
<msg timestamp="20201112 09:44:03.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:03.207" endtime="20201112 09:44:03.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02195075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022007083, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:03.499" endtime="20201112 09:44:03.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.507" endtime="20201112 09:44:03.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.205" endtime="20201112 09:44:03.509"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.203" endtime="20201112 09:44:03.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.514" level="INFO">${RESULT} = [{'time': 0.022007083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.633299999999869e-05, 'source_diff': 5.633299999999869e-05}, {'time': 0.022066153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.511" endtime="20201112 09:44:03.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.528" level="INFO">${ACCURACY} = {'time': [0.022007083, 0.022066153, 0.022125097, 0.022184125, 0.022243125, 0.022302139, 0.022361125, 0.022420139, 0.022479139, 0.022538153, 0.022597139, 0.022656153, 0.022715194, 0.022774167, 0.022833...</msg>
<status status="PASS" starttime="20201112 09:44:03.515" endtime="20201112 09:44:03.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.533" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.531" endtime="20201112 09:44:03.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.535" level="INFO">VALUE: [5.633299999999869e-05, 5.6764000000000814e-05, 5.6764000000000814e-05, 5.656899999999937e-05, 5.659699999999851e-05, 5.6777999999996914e-05, 5.6763999999997344e-05, 5.684699999999876e-05, 5.661099999999808e-05, 5.638899999999697e-05, 5.644499999999872e-05, 5.6305999999999023e-05, 5.681899999999962e-05, 5.6514000000000564e-05, 5.643100000000262e-05, 5.661200000000102e-05, 5.613900000000019e-05, 5.637500000000087e-05, 5.6791999999999954e-05, 5.656899999999937e-05, 5.647300000000133e-05, 5.6486000000001424e-05, 5.686099999999833e-05, 5.688900000000094e-05, 5.6791999999999954e-05, 5.6528000000000134e-05, 5.6486000000001424e-05, 5.6750000000001244e-05, 5.6666000000000355e-05, 5.6555999999999274e-05, 5.686099999999833e-05, 5.697300000000183e-05, 5.6485999999997955e-05, 5.6791999999999954e-05, 5.6471999999998385e-05, 5.654200000000317e-05, 5.658299999999894e-05, 5.640300000000001e-05, 5.6749999999997774e-05, 5.6888000000001465e-05, 5.63749999999974e-05, 5.654100000000023e-05, 5.644500000000219e-05, 5.680600000000299e-05, 5.633400000000163e-05, 5.66809999999994e-05, 5.6500000000000994e-05, 5.6930000000000175e-05, 5.6514000000000564e-05, 5.6722000000002104e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.534" endtime="20201112 09:44:03.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.529" endtime="20201112 09:44:03.537"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.539" endtime="20201112 09:44:03.540"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.542" endtime="20201112 09:44:03.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.541" endtime="20201112 09:44:03.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.537" endtime="20201112 09:44:03.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.170" endtime="20201112 09:44:03.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.170" endtime="20201112 09:44:03.563"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.572" endtime="20201112 09:44:03.589"></status>
</kw>
<msg timestamp="20201112 09:44:03.589" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.571" endtime="20201112 09:44:03.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.590" endtime="20201112 09:44:03.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.593" endtime="20201112 09:44:03.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.568" endtime="20201112 09:44:03.596"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.566" endtime="20201112 09:44:03.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.603" endtime="20201112 09:44:03.888"></status>
</kw>
<msg timestamp="20201112 09:44:03.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.601" endtime="20201112 09:44:03.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022123181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022181056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.892" endtime="20201112 09:44:03.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.900" endtime="20201112 09:44:03.902"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.599" endtime="20201112 09:44:03.903"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.597" endtime="20201112 09:44:03.903"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:03.907" level="INFO">${RESULT} = [{'time': 0.022181056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.787500000000237e-05, 'source_diff': 5.787500000000237e-05}, {'time': 0.022241097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:03.904" endtime="20201112 09:44:03.907"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:03.922" level="INFO">${ACCURACY} = {'time': [0.022181056, 0.022241097, 0.022301056, 0.022361083, 0.022421097, 0.022481111, 0.022541097, 0.022601125, 0.022661083, 0.022721125, 0.022781097, 0.022841125, 0.022901111, 0.022961153, 0.023021...</msg>
<status status="PASS" starttime="20201112 09:44:03.908" endtime="20201112 09:44:03.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.926" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 09:44:03.925" endtime="20201112 09:44:03.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.929" level="INFO">VALUE: [5.787500000000237e-05, 5.761100000000255e-05, 5.738899999999797e-05, 5.7402000000001535e-05, 5.7444000000000245e-05, 5.787500000000237e-05, 5.762499999999865e-05, 5.788899999999847e-05, 5.7499999999998525e-05, 5.788899999999847e-05, 5.7499999999998525e-05, 5.7542000000000704e-05, 5.736099999999883e-05, 5.7514000000001564e-05, 5.7569999999999844e-05, 5.743100000000015e-05, 5.7708000000000065e-05, 5.757000000000331e-05, 5.762500000000212e-05, 5.794500000000022e-05, 5.7513999999998094e-05, 5.769499999999997e-05, 5.761099999999908e-05, 5.73610000000023e-05, 5.7471999999999385e-05, 5.766699999999736e-05, 5.766700000000083e-05, 5.7180000000000425e-05, 5.7569999999999844e-05, 5.7792000000000954e-05, 5.7513999999998094e-05, 5.734699999999926e-05, 5.754099999999776e-05, 5.7569999999999844e-05, 5.7499999999998525e-05, 5.7457999999999815e-05, 5.784700000000323e-05, 5.78749999999989e-05, 5.7792000000000954e-05, 5.7721999999999635e-05, 5.7429999999997206e-05, 5.766699999999736e-05, 5.736099999999883e-05, 5.759799999999898e-05, 5.78749999999989e-05, 5.788899999999847e-05, 5.765300000000126e-05, 5.780500000000105e-05, 5.734699999999926e-05, 5.71809999999999e-05]</msg>
<status status="PASS" starttime="20201112 09:44:03.927" endtime="20201112 09:44:03.929"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.923" endtime="20201112 09:44:03.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.932" endtime="20201112 09:44:03.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:03.936" endtime="20201112 09:44:03.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.934" endtime="20201112 09:44:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.931" endtime="20201112 09:44:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.564" endtime="20201112 09:44:03.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.564" endtime="20201112 09:44:03.957"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.965" endtime="20201112 09:44:03.982"></status>
</kw>
<msg timestamp="20201112 09:44:03.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.963" endtime="20201112 09:44:03.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:03.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:03.984" endtime="20201112 09:44:03.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.986" endtime="20201112 09:44:03.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.961" endtime="20201112 09:44:03.989"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.959" endtime="20201112 09:44:03.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:03.996" endtime="20201112 09:44:04.282"></status>
</kw>
<msg timestamp="20201112 09:44:04.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:03.995" endtime="20201112 09:44:04.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022052153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022110889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.286" endtime="20201112 09:44:04.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.295" endtime="20201112 09:44:04.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.992" endtime="20201112 09:44:04.297"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.990" endtime="20201112 09:44:04.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.301" level="INFO">${RESULT} = [{'time': 0.022110889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8736000000000205e-05, 'source_diff': 5.8736000000000205e-05}, {'time': 0.022171903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.298" endtime="20201112 09:44:04.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.315" level="INFO">${ACCURACY} = {'time': [0.022110889, 0.022171903, 0.022232903, 0.022293903, 0.022354889, 0.022415917, 0.022476903, 0.022537917, 0.022598903, 0.022659944, 0.022720917, 0.022781944, 0.022842931, 0.022903944, 0.022964...</msg>
<status status="PASS" starttime="20201112 09:44:04.302" endtime="20201112 09:44:04.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.319" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.318" endtime="20201112 09:44:04.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.322" level="INFO">VALUE: [5.8736000000000205e-05, 5.8472000000000385e-05, 5.86949999999975e-05, 5.890299999999904e-05, 5.83749999999994e-05, 5.845900000000029e-05, 5.863899999999922e-05, 5.844500000000072e-05, 5.861100000000008e-05, 5.879100000000248e-05, 5.8777999999998914e-05, 5.861100000000008e-05, 5.865299999999879e-05, 5.8887999999999996e-05, 5.863899999999922e-05, 5.8443999999997776e-05, 5.879100000000248e-05, 5.890299999999904e-05, 5.883299999999772e-05, 5.863899999999922e-05, 5.8763999999999345e-05, 5.855499999999833e-05, 5.883299999999772e-05, 5.8472000000000385e-05, 5.862499999999965e-05, 5.8513999999999095e-05, 5.862499999999965e-05, 5.8499999999999525e-05, 5.8499999999999525e-05, 5.8556000000001274e-05, 5.881900000000162e-05, 5.884700000000076e-05, 5.834700000000026e-05, 5.8806000000001524e-05, 5.8792000000001954e-05, 5.890299999999904e-05, 5.838900000000244e-05, 5.8569999999997374e-05, 5.863900000000269e-05, 5.8485999999999955e-05, 5.8347999999999733e-05, 5.8637999999999746e-05, 5.861199999999955e-05, 5.862499999999965e-05, 5.858299999999747e-05, 5.879099999999901e-05, 5.8415999999998636e-05, 5.8806000000001524e-05, 5.83749999999994e-05, 5.8736000000000205e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.320" endtime="20201112 09:44:04.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.316" endtime="20201112 09:44:04.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.325" endtime="20201112 09:44:04.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.329" endtime="20201112 09:44:04.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.327" endtime="20201112 09:44:04.348"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.323" endtime="20201112 09:44:04.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.957" endtime="20201112 09:44:04.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:03.957" endtime="20201112 09:44:04.349"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.358" endtime="20201112 09:44:04.375"></status>
</kw>
<msg timestamp="20201112 09:44:04.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.356" endtime="20201112 09:44:04.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.376" endtime="20201112 09:44:04.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.379" endtime="20201112 09:44:04.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.354" endtime="20201112 09:44:04.382"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.352" endtime="20201112 09:44:04.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.389" endtime="20201112 09:44:04.674"></status>
</kw>
<msg timestamp="20201112 09:44:04.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.387" endtime="20201112 09:44:04.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022036042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.679" endtime="20201112 09:44:04.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.687" endtime="20201112 09:44:04.688"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.385" endtime="20201112 09:44:04.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.383" endtime="20201112 09:44:04.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:04.694" level="INFO">${RESULT} = [{'time': 0.022036042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0013999999997125e-05, 'source_diff': 6.0013999999997125e-05}, {'time': 0.022098069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:04.690" endtime="20201112 09:44:04.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:04.707" level="INFO">${ACCURACY} = {'time': [0.022036042, 0.022098069, 0.022160042, 0.022222069, 0.022284056, 0.022346083, 0.022408056, 0.022470083, 0.022532069, 0.022594111, 0.022656111, 0.022718111, 0.022780125, 0.022842125, 0.022904...</msg>
<status status="PASS" starttime="20201112 09:44:04.695" endtime="20201112 09:44:04.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.712" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 09:44:04.710" endtime="20201112 09:44:04.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.714" level="INFO">VALUE: [6.0013999999997125e-05, 5.951300000000062e-05, 5.9320000000001594e-05, 5.977700000000044e-05, 5.970900000000154e-05, 5.9721999999998165e-05, 5.938899999999997e-05, 5.9457999999998346e-05, 5.9693999999999026e-05, 5.962500000000065e-05, 5.965299999999979e-05, 5.93750000000004e-05, 5.9777999999999915e-05, 5.940300000000301e-05, 5.979100000000001e-05, 5.994499999999875e-05, 5.9443999999998776e-05, 5.9735999999997735e-05, 5.940299999999954e-05, 5.9570000000001844e-05, 5.9458000000001815e-05, 5.9819999999998624e-05, 5.983299999999872e-05, 5.988900000000047e-05, 5.9527999999999665e-05, 5.9750000000000775e-05, 5.9472000000001385e-05, 5.9500000000000525e-05, 5.93750000000004e-05, 5.93750000000004e-05, 5.944499999999825e-05, 5.955499999999933e-05, 5.9598000000000984e-05, 5.9458000000001815e-05, 5.931900000000212e-05, 5.9486000000000955e-05, 5.959700000000151e-05, 5.963900000000022e-05, 5.936099999999736e-05, 5.962500000000065e-05, 5.979100000000001e-05, 5.93750000000004e-05, 5.9721999999998165e-05, 5.990300000000004e-05, 5.938899999999997e-05, 5.944500000000172e-05, 5.966699999999936e-05, 5.9791999999999484e-05, 5.9721999999998165e-05, 5.991699999999961e-05]</msg>
<status status="PASS" starttime="20201112 09:44:04.713" endtime="20201112 09:44:04.715"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.708" endtime="20201112 09:44:04.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.718" endtime="20201112 09:44:04.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:04.721" endtime="20201112 09:44:04.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.720" endtime="20201112 09:44:04.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.716" endtime="20201112 09:44:04.741"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.350" endtime="20201112 09:44:04.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.350" endtime="20201112 09:44:04.742"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.750" endtime="20201112 09:44:04.768"></status>
</kw>
<msg timestamp="20201112 09:44:04.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.749" endtime="20201112 09:44:04.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:04.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:04.769" endtime="20201112 09:44:04.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.772" endtime="20201112 09:44:04.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.746" endtime="20201112 09:44:04.775"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.744" endtime="20201112 09:44:04.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:04.782" endtime="20201112 09:44:05.067"></status>
</kw>
<msg timestamp="20201112 09:44:05.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:04.780" endtime="20201112 09:44:05.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021953042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.071" endtime="20201112 09:44:05.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.079" endtime="20201112 09:44:05.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.778" endtime="20201112 09:44:05.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.776" endtime="20201112 09:44:05.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.086" level="INFO">${RESULT} = [{'time': 0.022013236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0193999999999526e-05, 'source_diff': 6.0193999999999526e-05}, {'time': 0.022076306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:05.083" endtime="20201112 09:44:05.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.100" level="INFO">${ACCURACY} = {'time': [0.022013236, 0.022076306, 0.02213925, 0.022202278, 0.022265264, 0.022328347, 0.022391264, 0.022454306, 0.022517278, 0.022580306, 0.022643319, 0.022706319, 0.022769292, 0.022832319, 0.0228953...</msg>
<status status="PASS" starttime="20201112 09:44:05.087" endtime="20201112 09:44:05.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.104" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.103" endtime="20201112 09:44:05.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.107" level="INFO">VALUE: [6.0193999999999526e-05, 6.0542000000000235e-05, 6.036099999999836e-05, 6.070899999999907e-05, 6.036099999999836e-05, 6.0971999999999416e-05, 6.0305999999999554e-05, 6.06949999999995e-05, 6.0306000000003024e-05, 6.041700000000011e-05, 6.0499999999998055e-05, 6.0387999999998027e-05, 6.0569999999999374e-05, 6.086099999999886e-05, 6.059699999999904e-05, 6.090299999999757e-05, 6.07629999999984e-05, 6.088900000000147e-05, 6.0708000000003065e-05, 6.063899999999775e-05, 6.033299999999922e-05, 6.0500000000001525e-05, 6.080500000000058e-05, 6.0735999999998735e-05, 6.0499999999998055e-05, 6.0514000000001095e-05, 6.081900000000015e-05, 6.040299999999707e-05, 6.0806000000000054e-05, 6.047299999999839e-05, 6.0806000000000054e-05, 6.041700000000011e-05, 6.069500000000297e-05, 6.018099999999943e-05, 6.0528000000000665e-05, 6.0388000000001496e-05, 6.045900000000229e-05, 6.047299999999839e-05, 6.0735999999998735e-05, 6.054100000000076e-05, 6.0500000000001525e-05, 6.084699999999929e-05, 6.0778000000000915e-05, 6.0528000000000665e-05, 6.0694000000000026e-05, 6.041700000000011e-05, 6.0514000000001095e-05, 6.0806000000000054e-05, 6.080500000000058e-05, 6.0528000000000665e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.105" endtime="20201112 09:44:05.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.101" endtime="20201112 09:44:05.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.110" endtime="20201112 09:44:05.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.114" endtime="20201112 09:44:05.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.112" endtime="20201112 09:44:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.109" endtime="20201112 09:44:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.743" endtime="20201112 09:44:05.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:04.742" endtime="20201112 09:44:05.135"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.143" endtime="20201112 09:44:05.161"></status>
</kw>
<msg timestamp="20201112 09:44:05.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.142" endtime="20201112 09:44:05.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.163" endtime="20201112 09:44:05.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.165" endtime="20201112 09:44:05.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.139" endtime="20201112 09:44:05.168"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.137" endtime="20201112 09:44:05.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.175" endtime="20201112 09:44:05.460"></status>
</kw>
<msg timestamp="20201112 09:44:05.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.174" endtime="20201112 09:44:05.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021999028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022060347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.465" endtime="20201112 09:44:05.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.473" endtime="20201112 09:44:05.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.171" endtime="20201112 09:44:05.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.169" endtime="20201112 09:44:05.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.479" level="INFO">${RESULT} = [{'time': 0.022060347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.131900000000065e-05, 'source_diff': 6.131900000000065e-05}, {'time': 0.022124375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.476" endtime="20201112 09:44:05.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.494" level="INFO">${ACCURACY} = {'time': [0.022060347, 0.022124375, 0.022188347, 0.022251389, 0.022315361, 0.022379403, 0.022443375, 0.022507417, 0.022571403, 0.022635417, 0.022699403, 0.022763417, 0.022827486, 0.022891431, 0.022955...</msg>
<status status="PASS" starttime="20201112 09:44:05.480" endtime="20201112 09:44:05.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.498" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.497" endtime="20201112 09:44:05.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.501" level="INFO">VALUE: [6.131900000000065e-05, 6.175000000000277e-05, 6.161099999999961e-05, 6.1195e-05, 6.17499999999993e-05, 6.177799999999845e-05, 6.188900000000247e-05, 6.148599999999949e-05, 6.161099999999961e-05, 6.190300000000204e-05, 6.1888999999999e-05, 6.162500000000265e-05, 6.186099999999986e-05, 6.176399999999888e-05, 6.181999999999716e-05, 6.17499999999993e-05, 6.172300000000311e-05, 6.163799999999928e-05, 6.184700000000029e-05, 6.165199999999885e-05, 6.162499999999918e-05, 6.175000000000277e-05, 6.186099999999986e-05, 6.191600000000214e-05, 6.148599999999949e-05, 6.191700000000161e-05, 6.183300000000072e-05, 6.161099999999961e-05, 6.1582999999997e-05, 6.180599999999759e-05, 6.18750000000029e-05, 6.175000000000277e-05, 6.166700000000136e-05, 6.13750000000024e-05, 6.186099999999986e-05, 6.187499999999943e-05, 6.134799999999926e-05, 6.168100000000093e-05, 6.15699999999969e-05, 6.154199999999777e-05, 6.145900000000329e-05, 6.159799999999951e-05, 6.162499999999918e-05, 6.166599999999842e-05, 6.141600000000164e-05, 6.158300000000047e-05, 6.149999999999906e-05, 6.168000000000146e-05, 6.158300000000047e-05, 6.14300000000012e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.499" endtime="20201112 09:44:05.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.495" endtime="20201112 09:44:05.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.504" endtime="20201112 09:44:05.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.508" endtime="20201112 09:44:05.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.506" endtime="20201112 09:44:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.503" endtime="20201112 09:44:05.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.135" endtime="20201112 09:44:05.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.135" endtime="20201112 09:44:05.529"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.537" endtime="20201112 09:44:05.555"></status>
</kw>
<msg timestamp="20201112 09:44:05.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.536" endtime="20201112 09:44:05.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.557" endtime="20201112 09:44:05.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.559" endtime="20201112 09:44:05.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.533" endtime="20201112 09:44:05.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.531" endtime="20201112 09:44:05.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.570" endtime="20201112 09:44:05.855"></status>
</kw>
<msg timestamp="20201112 09:44:05.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.569" endtime="20201112 09:44:05.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.859" endtime="20201112 09:44:05.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.868" endtime="20201112 09:44:05.869"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.566" endtime="20201112 09:44:05.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.564" endtime="20201112 09:44:05.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:05.874" level="INFO">${RESULT} = [{'time': 0.021981153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.229199999999852e-05, 'source_diff': 6.229199999999852e-05}, {'time': 0.022046167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:05.871" endtime="20201112 09:44:05.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:05.888" level="INFO">${ACCURACY} = {'time': [0.021981153, 0.022046167, 0.022111153, 0.022176181, 0.022241153, 0.022306208, 0.022371181, 0.022436222, 0.022501208, 0.022566208, 0.022631208, 0.022696292, 0.022761194, 0.022826236, 0.022891...</msg>
<status status="PASS" starttime="20201112 09:44:05.875" endtime="20201112 09:44:05.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.892" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 09:44:05.891" endtime="20201112 09:44:05.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.895" level="INFO">VALUE: [6.229199999999852e-05, 6.247299999999692e-05, 6.266700000000236e-05, 6.251399999999963e-05, 6.263899999999975e-05, 6.287500000000043e-05, 6.258400000000094e-05, 6.277799999999945e-05, 6.29020000000001e-05, 6.265199999999985e-05, 6.241599999999917e-05, 6.262500000000018e-05, 6.274999999999684e-05, 6.286100000000086e-05, 6.242999999999874e-05, 6.2889e-05, 6.245800000000135e-05, 6.270799999999813e-05, 6.233299999999775e-05, 6.265199999999985e-05, 6.254199999999877e-05, 6.218100000000143e-05, 6.262500000000018e-05, 6.240299999999907e-05, 6.231899999999818e-05, 6.280599999999859e-05, 6.270900000000107e-05, 6.265300000000279e-05, 6.27500000000003e-05, 6.236199999999983e-05, 6.231999999999766e-05, 6.247300000000039e-05, 6.281899999999868e-05, 6.277699999999997e-05, 6.28340000000012e-05, 6.277799999999945e-05, 6.232000000000112e-05, 6.248599999999702e-05, 6.284700000000129e-05, 6.254099999999929e-05, 6.241599999999917e-05, 6.291700000000261e-05, 6.261100000000061e-05, 6.2889e-05, 6.281899999999868e-05, 6.269400000000203e-05, 6.269399999999856e-05, 6.2889e-05, 6.245800000000135e-05, 6.273700000000021e-05]</msg>
<status status="PASS" starttime="20201112 09:44:05.893" endtime="20201112 09:44:05.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.889" endtime="20201112 09:44:05.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.898" endtime="20201112 09:44:05.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:05.902" endtime="20201112 09:44:05.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.900" endtime="20201112 09:44:05.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.897" endtime="20201112 09:44:05.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.530" endtime="20201112 09:44:05.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.529" endtime="20201112 09:44:05.923"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.931" endtime="20201112 09:44:05.949"></status>
</kw>
<msg timestamp="20201112 09:44:05.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.930" endtime="20201112 09:44:05.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:05.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:05.950" endtime="20201112 09:44:05.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.953" endtime="20201112 09:44:05.955"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.927" endtime="20201112 09:44:05.956"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.925" endtime="20201112 09:44:05.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:05.963" endtime="20201112 09:44:06.249"></status>
</kw>
<msg timestamp="20201112 09:44:06.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:05.961" endtime="20201112 09:44:06.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022063681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.253" endtime="20201112 09:44:06.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.262" endtime="20201112 09:44:06.263"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.959" endtime="20201112 09:44:06.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.957" endtime="20201112 09:44:06.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.268" level="INFO">${RESULT} = [{'time': 0.022063681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.358400000000194e-05, 'source_diff': 6.358400000000194e-05}, {'time': 0.022129708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.265" endtime="20201112 09:44:06.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.282" level="INFO">${ACCURACY} = {'time': [0.022063681, 0.022129708, 0.022195708, 0.022261722, 0.022327708, 0.022393722, 0.022459708, 0.02252575, 0.022591764, 0.022657764, 0.022723736, 0.022789764, 0.02285575, 0.022921764, 0.02298775...</msg>
<status status="PASS" starttime="20201112 09:44:06.269" endtime="20201112 09:44:06.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.286" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.285" endtime="20201112 09:44:06.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.289" level="INFO">VALUE: [6.358400000000194e-05, 6.369400000000303e-05, 6.37500000000013e-05, 6.355499999999986e-05, 6.33890000000005e-05, 6.369400000000303e-05, 6.370799999999913e-05, 6.373600000000174e-05, 6.359699999999857e-05, 6.373600000000174e-05, 6.333300000000222e-05, 6.355599999999934e-05, 6.37080000000026e-05, 6.366699999999989e-05, 6.350000000000106e-05, 6.38340000000022e-05, 6.348600000000149e-05, 6.372300000000164e-05, 6.354199999999977e-05, 6.390300000000057e-05, 6.336100000000136e-05, 6.334800000000126e-05, 6.34020000000006e-05, 6.366699999999989e-05, 6.361100000000161e-05, 6.377700000000097e-05, 6.368099999999946e-05, 6.3889000000001e-05, 6.340300000000007e-05, 6.373600000000174e-05, 6.333299999999875e-05, 6.359699999999857e-05, 6.379100000000054e-05, 6.348599999999802e-05, 6.341600000000017e-05, 6.373599999999827e-05, 6.379200000000002e-05, 6.369499999999903e-05, 6.37219999999987e-05, 6.387499999999796e-05, 6.356899999999943e-05, 6.390300000000057e-05, 6.334699999999832e-05, 6.336099999999789e-05, 6.377800000000045e-05, 6.373699999999774e-05, 6.351400000000063e-05, 6.373699999999774e-05, 6.380599999999959e-05, 6.376299999999793e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.287" endtime="20201112 09:44:06.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.283" endtime="20201112 09:44:06.290"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.292" endtime="20201112 09:44:06.294"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.296" endtime="20201112 09:44:06.315"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.294" endtime="20201112 09:44:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.291" endtime="20201112 09:44:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.923" endtime="20201112 09:44:06.316"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:05.923" endtime="20201112 09:44:06.317"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.325" endtime="20201112 09:44:06.343"></status>
</kw>
<msg timestamp="20201112 09:44:06.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.324" endtime="20201112 09:44:06.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.344" endtime="20201112 09:44:06.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.347" endtime="20201112 09:44:06.349"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.321" endtime="20201112 09:44:06.350"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.319" endtime="20201112 09:44:06.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.357" endtime="20201112 09:44:06.643"></status>
</kw>
<msg timestamp="20201112 09:44:06.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.355" endtime="20201112 09:44:06.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021951042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022016028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:06.647" endtime="20201112 09:44:06.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.655" endtime="20201112 09:44:06.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.353" endtime="20201112 09:44:06.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.351" endtime="20201112 09:44:06.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:06.662" level="INFO">${RESULT} = [{'time': 0.022016028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.498599999999952e-05, 'source_diff': 6.498599999999952e-05}, {'time': 0.022083028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:06.659" endtime="20201112 09:44:06.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:06.675" level="INFO">${ACCURACY} = {'time': [0.022016028, 0.022083028, 0.02215, 0.022217056, 0.022284014, 0.022351042, 0.022418028, 0.022485056, 0.022552042, 0.022619069, 0.022686042, 0.022753069, 0.022820056, 0.022887083, 0.022954083,...</msg>
<status status="PASS" starttime="20201112 09:44:06.663" endtime="20201112 09:44:06.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.680" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 09:44:06.679" endtime="20201112 09:44:06.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.682" level="INFO">VALUE: [6.498599999999952e-05, 6.45280000000012e-05, 6.437499999999846e-05, 6.443100000000021e-05, 6.461100000000261e-05, 6.480600000000059e-05, 6.454200000000077e-05, 6.462499999999871e-05, 6.462500000000218e-05, 6.452699999999825e-05, 6.45699999999999e-05, 6.486099999999939e-05, 6.444499999999978e-05, 6.436099999999889e-05, 6.459699999999957e-05, 6.436100000000236e-05, 6.440199999999813e-05, 6.438899999999803e-05, 6.465200000000185e-05, 6.463900000000175e-05, 6.463899999999828e-05, 6.438899999999803e-05, 6.450000000000206e-05, 6.458399999999948e-05, 6.479200000000102e-05, 6.438899999999803e-05, 6.4583e-05, 6.463900000000175e-05, 6.436099999999889e-05, 6.488899999999853e-05, 6.438899999999803e-05, 6.452799999999773e-05, 6.45280000000012e-05, 6.43890000000015e-05, 6.448599999999902e-05, 6.44159999999977e-05, 6.43479999999988e-05, 6.481900000000068e-05, 6.438899999999803e-05, 6.449999999999859e-05, 6.468000000000099e-05, 6.455500000000086e-05, 6.470800000000013e-05, 6.451399999999816e-05, 6.451400000000163e-05, 6.465299999999785e-05, 6.459699999999957e-05, 6.440300000000107e-05, 6.434700000000279e-05, 6.455599999999687e-05]</msg>
<status status="PASS" starttime="20201112 09:44:06.681" endtime="20201112 09:44:06.683"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.676" endtime="20201112 09:44:06.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.686" endtime="20201112 09:44:06.687"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:06.689" endtime="20201112 09:44:06.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.688" endtime="20201112 09:44:06.709"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.684" endtime="20201112 09:44:06.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.318" endtime="20201112 09:44:06.710"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.317" endtime="20201112 09:44:06.710"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.719" endtime="20201112 09:44:06.736"></status>
</kw>
<msg timestamp="20201112 09:44:06.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.717" endtime="20201112 09:44:06.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:06.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:06.737" endtime="20201112 09:44:06.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.740" endtime="20201112 09:44:06.742"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.715" endtime="20201112 09:44:06.743"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.713" endtime="20201112 09:44:06.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:06.750" endtime="20201112 09:44:07.036"></status>
</kw>
<msg timestamp="20201112 09:44:07.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02207825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02214375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:06.748" endtime="20201112 09:44:07.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02207825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02214375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:07.040" endtime="20201112 09:44:07.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.049" endtime="20201112 09:44:07.050"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.746" endtime="20201112 09:44:07.051"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.744" endtime="20201112 09:44:07.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.055" level="INFO">${RESULT} = [{'time': 0.02214375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.549999999999959e-05, 'source_diff': 6.549999999999959e-05}, {'time': 0.022211778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 09:44:07.052" endtime="20201112 09:44:07.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.070" level="INFO">${ACCURACY} = {'time': [0.02214375, 0.022211778, 0.02227975, 0.022347792, 0.022415847, 0.022483806, 0.022551792, 0.022619819, 0.022687792, 0.022755819, 0.022823792, 0.022891819, 0.022959806, 0.023027833, 0.02309581...</msg>
<status status="PASS" starttime="20201112 09:44:07.056" endtime="20201112 09:44:07.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.074" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.073" endtime="20201112 09:44:07.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.077" level="INFO">VALUE: [6.549999999999959e-05, 6.590300000000257e-05, 6.55280000000022e-05, 6.548599999999655e-05, 6.577799999999898e-05, 6.57639999999994e-05, 6.580600000000159e-05, 6.565199999999938e-05, 6.5583999999997e-05, 6.588800000000006e-05, 6.583400000000073e-05, 6.537499999999946e-05, 6.57639999999994e-05, 6.561100000000014e-05, 6.587499999999996e-05, 6.579200000000202e-05, 6.555500000000186e-05, 6.55969999999971e-05, 6.574999999999984e-05, 6.59029999999991e-05, 6.559700000000057e-05, 6.536099999999989e-05, 6.542999999999827e-05, 6.584700000000082e-05, 6.545799999999741e-05, 6.543100000000121e-05, 6.57639999999994e-05, 6.565199999999938e-05, 6.534700000000032e-05, 6.55280000000022e-05, 6.555600000000134e-05, 6.563900000000275e-05, 6.552799999999873e-05, 6.58480000000003e-05, 6.555600000000134e-05, 6.540199999999913e-05, 6.566700000000189e-05, 6.556899999999796e-05, 6.541700000000164e-05, 6.555499999999839e-05, 6.587499999999996e-05, 6.561100000000014e-05, 6.52639999999989e-05, 6.588800000000006e-05, 6.536099999999989e-05, 6.561100000000014e-05, 6.533300000000075e-05, 6.577800000000245e-05, 6.545800000000088e-05, 6.555600000000134e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.075" endtime="20201112 09:44:07.077"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.071" endtime="20201112 09:44:07.078"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.080" endtime="20201112 09:44:07.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.084" endtime="20201112 09:44:07.103"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.082" endtime="20201112 09:44:07.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.079" endtime="20201112 09:44:07.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.711" endtime="20201112 09:44:07.104"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:06.711" endtime="20201112 09:44:07.105"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.113" endtime="20201112 09:44:07.131"></status>
</kw>
<msg timestamp="20201112 09:44:07.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.111" endtime="20201112 09:44:07.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.132" endtime="20201112 09:44:07.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.135" endtime="20201112 09:44:07.137"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.109" endtime="20201112 09:44:07.138"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.107" endtime="20201112 09:44:07.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.145" endtime="20201112 09:44:07.431"></status>
</kw>
<msg timestamp="20201112 09:44:07.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.143" endtime="20201112 09:44:07.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021906111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021972917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.435" endtime="20201112 09:44:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.443" endtime="20201112 09:44:07.445"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.141" endtime="20201112 09:44:07.446"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.139" endtime="20201112 09:44:07.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.450" level="INFO">${RESULT} = [{'time': 0.021972917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.680600000000259e-05, 'source_diff': 6.680600000000259e-05}, {'time': 0.022041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.447" endtime="20201112 09:44:07.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.463" level="INFO">${ACCURACY} = {'time': [0.021972917, 0.022041944, 0.022110958, 0.022179958, 0.022248944, 0.022317986, 0.022386958, 0.022455972, 0.022524958, 0.022594, 0.022662972, 0.022732042, 0.022800972, 0.022870014, 0.022938986...</msg>
<status status="PASS" starttime="20201112 09:44:07.451" endtime="20201112 09:44:07.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.468" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.467" endtime="20201112 09:44:07.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.471" level="INFO">VALUE: [6.680600000000259e-05, 6.642999999999927e-05, 6.658299999999853e-05, 6.656899999999896e-05, 6.684699999999835e-05, 6.651400000000016e-05, 6.644399999999884e-05, 6.645800000000188e-05, 6.659700000000157e-05, 6.669399999999909e-05, 6.64159999999997e-05, 6.691699999999967e-05, 6.631899999999871e-05, 6.686100000000139e-05, 6.675000000000084e-05, 6.679199999999955e-05, 6.679199999999955e-05, 6.645899999999788e-05, 6.615300000000282e-05, 6.663900000000028e-05, 6.652799999999973e-05, 6.647300000000092e-05, 6.67229999999977e-05, 6.656999999999844e-05, 6.64029999999996e-05, 6.6583000000002e-05, 6.687500000000096e-05, 6.652799999999973e-05, 6.669499999999856e-05, 6.67359999999978e-05, 6.65969999999981e-05, 6.69030000000001e-05, 6.669400000000256e-05, 6.691699999999967e-05, 6.650000000000059e-05, 6.669399999999909e-05, 6.677799999999998e-05, 6.636099999999742e-05, 6.645800000000188e-05, 6.666699999999942e-05, 6.638900000000003e-05, 6.669499999999856e-05, 6.684699999999835e-05, 6.640300000000307e-05, 6.65700000000019e-05, 6.679199999999955e-05, 6.669500000000203e-05, 6.634700000000132e-05, 6.636100000000089e-05, 6.669399999999909e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.469" endtime="20201112 09:44:07.471"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.464" endtime="20201112 09:44:07.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.474" endtime="20201112 09:44:07.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.478" endtime="20201112 09:44:07.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.476" endtime="20201112 09:44:07.497"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.472" endtime="20201112 09:44:07.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.105" endtime="20201112 09:44:07.498"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.105" endtime="20201112 09:44:07.498"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.507" endtime="20201112 09:44:07.525"></status>
</kw>
<msg timestamp="20201112 09:44:07.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.505" endtime="20201112 09:44:07.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.526" endtime="20201112 09:44:07.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.529" endtime="20201112 09:44:07.531"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.503" endtime="20201112 09:44:07.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.501" endtime="20201112 09:44:07.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.539" endtime="20201112 09:44:07.825"></status>
</kw>
<msg timestamp="20201112 09:44:07.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.537" endtime="20201112 09:44:07.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021918278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.829" endtime="20201112 09:44:07.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.837" endtime="20201112 09:44:07.839"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.535" endtime="20201112 09:44:07.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.533" endtime="20201112 09:44:07.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:07.844" level="INFO">${RESULT} = [{'time': 0.021985486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.720799999999916e-05, 'source_diff': 6.720799999999916e-05}, {'time': 0.022055486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:07.841" endtime="20201112 09:44:07.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:07.858" level="INFO">${ACCURACY} = {'time': [0.021985486, 0.022055486, 0.022125458, 0.022195486, 0.022265458, 0.022335486, 0.022405472, 0.0224755, 0.022545486, 0.022615528, 0.022685486, 0.022755528, 0.0228255, 0.022895569, 0.022965528,...</msg>
<status status="PASS" starttime="20201112 09:44:07.845" endtime="20201112 09:44:07.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.865" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 09:44:07.861" endtime="20201112 09:44:07.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.868" level="INFO">VALUE: [6.720799999999916e-05, 6.763899999999781e-05, 6.740200000000113e-05, 6.745799999999941e-05, 6.776399999999794e-05, 6.755500000000039e-05, 6.74160000000007e-05, 6.737499999999799e-05, 6.768000000000052e-05, 6.791700000000067e-05, 6.736100000000189e-05, 6.761100000000214e-05, 6.752799999999726e-05, 6.790200000000163e-05, 6.762499999999824e-05, 6.79169999999972e-05, 6.783399999999926e-05, 6.748599999999855e-05, 6.77090000000026e-05, 6.73480000000018e-05, 6.765299999999738e-05, 6.780500000000064e-05, 6.756899999999996e-05, 6.762499999999824e-05, 6.783299999999978e-05, 6.743000000000027e-05, 6.744399999999984e-05, 6.79299999999973e-05, 6.770799999999966e-05, 6.756999999999944e-05, 6.75969999999991e-05, 6.756999999999944e-05, 6.769400000000009e-05, 6.772199999999923e-05, 6.734699999999885e-05, 6.763899999999781e-05, 6.768099999999999e-05, 6.756999999999944e-05, 6.737500000000146e-05, 6.77229999999987e-05, 6.773600000000227e-05, 6.777800000000098e-05, 6.787500000000196e-05, 6.790199999999816e-05, 6.77359999999988e-05, 6.779100000000107e-05, 6.787500000000196e-05, 6.762500000000171e-05, 6.754099999999735e-05, 6.748599999999855e-05]</msg>
<status status="PASS" starttime="20201112 09:44:07.866" endtime="20201112 09:44:07.872"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.858" endtime="20201112 09:44:07.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.875" endtime="20201112 09:44:07.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:07.879" endtime="20201112 09:44:07.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.877" endtime="20201112 09:44:07.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.874" endtime="20201112 09:44:07.899"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.499" endtime="20201112 09:44:07.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.499" endtime="20201112 09:44:07.900"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.908" endtime="20201112 09:44:07.925"></status>
</kw>
<msg timestamp="20201112 09:44:07.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.907" endtime="20201112 09:44:07.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:07.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:07.927" endtime="20201112 09:44:07.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.929" endtime="20201112 09:44:07.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.904" endtime="20201112 09:44:07.932"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.902" endtime="20201112 09:44:07.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:07.939" endtime="20201112 09:44:08.225"></status>
</kw>
<msg timestamp="20201112 09:44:08.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:07.938" endtime="20201112 09:44:08.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022081056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.229" endtime="20201112 09:44:08.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.237" endtime="20201112 09:44:08.239"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.935" endtime="20201112 09:44:08.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.933" endtime="20201112 09:44:08.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.244" level="INFO">${RESULT} = [{'time': 0.022150028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.897199999999701e-05, 'source_diff': 6.897199999999701e-05}, {'time': 0.022221056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.241" endtime="20201112 09:44:08.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.257" level="INFO">${ACCURACY} = {'time': [0.022150028, 0.022221056, 0.022292056, 0.022363069, 0.022434056, 0.022505097, 0.022576083, 0.022647083, 0.022718083, 0.022789181, 0.022860167, 0.022931153, 0.023002097, 0.023073125, 0.023144...</msg>
<status status="PASS" starttime="20201112 09:44:08.245" endtime="20201112 09:44:08.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.262" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.261" endtime="20201112 09:44:08.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.265" level="INFO">VALUE: [6.897199999999701e-05, 6.888899999999906e-05, 6.874999999999937e-05, 6.880499999999817e-05, 6.873699999999927e-05, 6.868000000000152e-05, 6.858300000000053e-05, 6.87359999999998e-05, 6.831900000000071e-05, 6.883400000000026e-05, 6.865300000000185e-05, 6.887499999999949e-05, 6.837499999999899e-05, 6.855600000000087e-05, 6.856899999999749e-05, 6.866699999999795e-05, 6.837500000000246e-05, 6.837499999999899e-05, 6.868100000000099e-05, 6.85420000000013e-05, 6.862499999999924e-05, 6.851400000000216e-05, 6.868100000000099e-05, 6.863900000000228e-05, 6.863899999999881e-05, 6.870800000000066e-05, 6.84030000000016e-05, 6.874999999999937e-05, 6.879100000000207e-05, 6.847199999999998e-05, 6.838900000000203e-05, 6.87359999999998e-05, 6.852700000000225e-05, 6.870799999999719e-05, 6.884700000000035e-05, 6.884700000000035e-05, 6.888899999999906e-05, 6.852800000000173e-05, 6.87359999999998e-05, 6.852800000000173e-05, 6.865299999999838e-05, 6.851399999999869e-05, 6.886099999999992e-05, 6.844500000000031e-05, 6.87640000000024e-05, 6.83480000000028e-05, 6.883300000000078e-05, 6.855600000000087e-05, 6.836099999999942e-05, 6.873699999999927e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.263" endtime="20201112 09:44:08.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.258" endtime="20201112 09:44:08.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.268" endtime="20201112 09:44:08.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.272" endtime="20201112 09:44:08.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.270" endtime="20201112 09:44:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.267" endtime="20201112 09:44:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.901" endtime="20201112 09:44:08.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:07.900" endtime="20201112 09:44:08.292"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.301" endtime="20201112 09:44:08.318"></status>
</kw>
<msg timestamp="20201112 09:44:08.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.300" endtime="20201112 09:44:08.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.319" endtime="20201112 09:44:08.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.322" endtime="20201112 09:44:08.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.297" endtime="20201112 09:44:08.325"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.295" endtime="20201112 09:44:08.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.332" endtime="20201112 09:44:08.618"></status>
</kw>
<msg timestamp="20201112 09:44:08.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.331" endtime="20201112 09:44:08.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021995556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022065042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.622" endtime="20201112 09:44:08.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.631" endtime="20201112 09:44:08.632"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.328" endtime="20201112 09:44:08.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.326" endtime="20201112 09:44:08.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:08.638" level="INFO">${RESULT} = [{'time': 0.022065042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.948600000000055e-05, 'source_diff': 6.948600000000055e-05}, {'time': 0.022137083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:08.634" endtime="20201112 09:44:08.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:08.652" level="INFO">${ACCURACY} = {'time': [0.022065042, 0.022137083, 0.022209056, 0.022281083, 0.022353083, 0.022425083, 0.022497083, 0.022569125, 0.022641083, 0.022713111, 0.022785083, 0.022857111, 0.022929097, 0.023000125, 0.023072...</msg>
<status status="PASS" starttime="20201112 09:44:08.639" endtime="20201112 09:44:08.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.656" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 09:44:08.655" endtime="20201112 09:44:08.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.659" level="INFO">VALUE: [6.948600000000055e-05, 6.963899999999981e-05, 6.962500000000024e-05, 6.983300000000178e-05, 6.976399999999994e-05, 6.981899999999874e-05, 6.97360000000008e-05, 6.943099999999827e-05, 6.938899999999956e-05, 6.951399999999969e-05, 6.944400000000184e-05, 6.983299999999831e-05, 6.967999999999905e-05, 6.916699999999845e-05, 6.980599999999865e-05, 6.968100000000199e-05, 6.970800000000166e-05, 6.962500000000024e-05, 6.97499999999969e-05, 6.951399999999969e-05, 6.934700000000085e-05, 6.980599999999865e-05, 6.952800000000273e-05, 6.98620000000004e-05, 6.948600000000055e-05, 6.97499999999969e-05, 6.987500000000049e-05, 6.945800000000141e-05, 6.951399999999969e-05, 6.952699999999978e-05, 6.933300000000128e-05, 6.938899999999956e-05, 6.936099999999695e-05, 6.952799999999926e-05, 6.948600000000055e-05, 6.993100000000224e-05, 6.970799999999819e-05, 6.95970000000011e-05, 6.940299999999913e-05, 6.95420000000023e-05, 6.965300000000285e-05, 6.958399999999754e-05, 6.956999999999797e-05, 6.986100000000092e-05, 6.986100000000092e-05, 6.986099999999745e-05, 6.973599999999733e-05, 6.937499999999999e-05, 6.984800000000083e-05, 6.948599999999708e-05]</msg>
<status status="PASS" starttime="20201112 09:44:08.658" endtime="20201112 09:44:08.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.653" endtime="20201112 09:44:08.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.662" endtime="20201112 09:44:08.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:08.666" endtime="20201112 09:44:08.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.664" endtime="20201112 09:44:08.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.661" endtime="20201112 09:44:08.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.293" endtime="20201112 09:44:08.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.293" endtime="20201112 09:44:08.687"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.695" endtime="20201112 09:44:08.713"></status>
</kw>
<msg timestamp="20201112 09:44:08.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.694" endtime="20201112 09:44:08.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:08.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:08.715" endtime="20201112 09:44:08.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.718" endtime="20201112 09:44:08.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.691" endtime="20201112 09:44:08.721"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.689" endtime="20201112 09:44:08.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:08.728" endtime="20201112 09:44:09.014"></status>
</kw>
<msg timestamp="20201112 09:44:09.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:08.726" endtime="20201112 09:44:09.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022273514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022344333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.018" endtime="20201112 09:44:09.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.026" endtime="20201112 09:44:09.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.723" endtime="20201112 09:44:09.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.722" endtime="20201112 09:44:09.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.033" level="INFO">${RESULT} = [{'time': 0.022344333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.081899999999974e-05, 'source_diff': 7.081899999999974e-05}, {'time': 0.022417403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.029" endtime="20201112 09:44:09.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.046" level="INFO">${ACCURACY} = {'time': [0.022344333, 0.022417403, 0.022490347, 0.022563389, 0.022636347, 0.022709389, 0.022782361, 0.022855389, 0.022928375, 0.023001403, 0.023074389, 0.023147417, 0.023220417, 0.023293486, 0.023366...</msg>
<status status="PASS" starttime="20201112 09:44:09.034" endtime="20201112 09:44:09.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.051" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.050" endtime="20201112 09:44:09.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.053" level="INFO">VALUE: [7.081899999999974e-05, 7.094499999999934e-05, 7.080500000000017e-05, 7.077800000000051e-05, 7.04299999999998e-05, 7.05559999999994e-05, 7.033300000000228e-05, 7.081999999999922e-05, 7.077800000000051e-05, 7.087500000000149e-05, 7.076400000000094e-05, 7.083399999999879e-05, 7.063900000000081e-05, 7.066699999999995e-05, 7.062500000000124e-05, 7.05559999999994e-05, 7.050000000000112e-05, 7.061100000000167e-05, 7.070799999999919e-05, 7.084699999999888e-05, 7.041600000000023e-05, 7.095799999999944e-05, 7.066699999999995e-05, 7.087500000000149e-05, 7.05970000000021e-05, 7.04169999999997e-05, 7.086100000000192e-05, 7.047200000000198e-05, 7.047200000000198e-05, 7.044399999999937e-05, 7.016699999999945e-05, 7.072299999999823e-05, 7.076400000000094e-05, 7.087499999999802e-05, 7.04299999999998e-05, 7.044499999999884e-05, 7.087500000000149e-05, 7.07910000000006e-05, 7.051400000000069e-05, 7.077700000000103e-05, 7.068099999999952e-05, 7.048599999999808e-05, 7.066699999999995e-05, 7.081899999999974e-05, 7.07910000000006e-05, 7.044399999999937e-05, 7.050000000000112e-05, 7.070799999999919e-05, 7.040200000000066e-05, 7.080500000000017e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.052" endtime="20201112 09:44:09.054"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.047" endtime="20201112 09:44:09.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.057" endtime="20201112 09:44:09.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.060" endtime="20201112 09:44:09.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.059" endtime="20201112 09:44:09.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.055" endtime="20201112 09:44:09.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.688" endtime="20201112 09:44:09.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:08.687" endtime="20201112 09:44:09.081"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.090" endtime="20201112 09:44:09.106"></status>
</kw>
<msg timestamp="20201112 09:44:09.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.088" endtime="20201112 09:44:09.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.108" endtime="20201112 09:44:09.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.110" endtime="20201112 09:44:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.086" endtime="20201112 09:44:09.113"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.083" endtime="20201112 09:44:09.114"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.120" endtime="20201112 09:44:09.406"></status>
</kw>
<msg timestamp="20201112 09:44:09.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.119" endtime="20201112 09:44:09.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021991486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.410" endtime="20201112 09:44:09.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.419" endtime="20201112 09:44:09.420"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.116" endtime="20201112 09:44:09.421"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.114" endtime="20201112 09:44:09.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.425" level="INFO">${RESULT} = [{'time': 0.021991486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.140300000000113e-05, 'source_diff': 7.140300000000113e-05}, {'time': 0.022065542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.422" endtime="20201112 09:44:09.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.439" level="INFO">${ACCURACY} = {'time': [0.021991486, 0.022065542, 0.022139486, 0.022213514, 0.022287514, 0.022361583, 0.022435514, 0.022509542, 0.022583528, 0.022657569, 0.022731542, 0.022805569, 0.022878542, 0.022952583, 0.023026...</msg>
<status status="PASS" starttime="20201112 09:44:09.426" endtime="20201112 09:44:09.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.443" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.442" endtime="20201112 09:44:09.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.446" level="INFO">VALUE: [7.140300000000113e-05, 7.159799999999911e-05, 7.15690000000005e-05, 7.193100000000077e-05, 7.158300000000006e-05, 7.140200000000166e-05, 7.14170000000007e-05, 7.169500000000009e-05, 7.17499999999989e-05, 7.148599999999908e-05, 7.173599999999933e-05, 7.154100000000135e-05, 7.112500000000174e-05, 7.16109999999992e-05, 7.151299999999874e-05, 7.187499999999902e-05, 7.134699999999938e-05, 7.137499999999852e-05, 7.165200000000191e-05, 7.163900000000181e-05, 7.186099999999945e-05, 7.180500000000117e-05, 7.170800000000019e-05, 7.168099999999705e-05, 7.163899999999834e-05, 7.162499999999877e-05, 7.152799999999779e-05, 7.119499999999959e-05, 7.172199999999976e-05, 7.137499999999852e-05, 7.14170000000007e-05, 7.14309999999968e-05, 7.15560000000004e-05, 7.176400000000194e-05, 7.172299999999923e-05, 7.148599999999908e-05, 7.13620000000019e-05, 7.144400000000037e-05, 7.145799999999994e-05, 7.17499999999989e-05, 7.131900000000024e-05, 7.187500000000249e-05, 7.183300000000031e-05, 7.148599999999908e-05, 7.186100000000292e-05, 7.137500000000199e-05, 7.136099999999895e-05, 7.147199999999951e-05, 7.152800000000126e-05, 7.156999999999997e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.444" endtime="20201112 09:44:09.447"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.440" endtime="20201112 09:44:09.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.449" endtime="20201112 09:44:09.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.453" endtime="20201112 09:44:09.472"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.451" endtime="20201112 09:44:09.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.448" endtime="20201112 09:44:09.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.082" endtime="20201112 09:44:09.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.081" endtime="20201112 09:44:09.474"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.482" endtime="20201112 09:44:09.500"></status>
</kw>
<msg timestamp="20201112 09:44:09.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.481" endtime="20201112 09:44:09.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.502" endtime="20201112 09:44:09.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.504" endtime="20201112 09:44:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.478" endtime="20201112 09:44:09.507"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.476" endtime="20201112 09:44:09.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.514" endtime="20201112 09:44:09.799"></status>
</kw>
<msg timestamp="20201112 09:44:09.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.513" endtime="20201112 09:44:09.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021896903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021969722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.804" endtime="20201112 09:44:09.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.812" endtime="20201112 09:44:09.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.510" endtime="20201112 09:44:09.814"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.508" endtime="20201112 09:44:09.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:09.819" level="INFO">${RESULT} = [{'time': 0.021969722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.281900000000174e-05, 'source_diff': 7.281900000000174e-05}, {'time': 0.022043764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:09.815" endtime="20201112 09:44:09.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:09.832" level="INFO">${ACCURACY} = {'time': [0.021969722, 0.022043764, 0.022118736, 0.022193764, 0.02226875, 0.022343778, 0.02241875, 0.022493792, 0.022568764, 0.022643792, 0.022718764, 0.022793819, 0.022868778, 0.022943806, 0.02301880...</msg>
<status status="PASS" starttime="20201112 09:44:09.820" endtime="20201112 09:44:09.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.837" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 09:44:09.836" endtime="20201112 09:44:09.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.839" level="INFO">VALUE: [7.281900000000174e-05, 7.220800000000069e-05, 7.276399999999947e-05, 7.262499999999977e-05, 7.276399999999947e-05, 7.266700000000195e-05, 7.279200000000208e-05, 7.266699999999848e-05, 7.268100000000152e-05, 7.270900000000066e-05, 7.259700000000063e-05, 7.240199999999919e-05, 7.237499999999952e-05, 7.290299999999916e-05, 7.27499999999999e-05, 7.27910000000026e-05, 7.254200000000183e-05, 7.266600000000248e-05, 7.249999999999965e-05, 7.295800000000144e-05, 7.284700000000088e-05, 7.283400000000079e-05, 7.287500000000002e-05, 7.248600000000008e-05, 7.259700000000063e-05, 7.270800000000119e-05, 7.249999999999965e-05, 7.286199999999993e-05, 7.234700000000038e-05, 7.272200000000076e-05, 7.25560000000014e-05, 7.243100000000127e-05, 7.213899999999884e-05, 7.280600000000165e-05, 7.258400000000054e-05, 7.218100000000102e-05, 7.287500000000002e-05, 7.277699999999956e-05, 7.269400000000162e-05, 7.277699999999956e-05, 7.295799999999797e-05, 7.245799999999747e-05, 7.236099999999995e-05, 7.26110000000002e-05, 7.252699999999931e-05, 7.284700000000088e-05, 7.248600000000008e-05, 7.248600000000008e-05, 7.259700000000063e-05, 7.236099999999995e-05]</msg>
<status status="PASS" starttime="20201112 09:44:09.838" endtime="20201112 09:44:09.840"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.833" endtime="20201112 09:44:09.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.843" endtime="20201112 09:44:09.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:09.846" endtime="20201112 09:44:09.865"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.845" endtime="20201112 09:44:09.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.841" endtime="20201112 09:44:09.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.475" endtime="20201112 09:44:09.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.474" endtime="20201112 09:44:09.867"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.876" endtime="20201112 09:44:09.893"></status>
</kw>
<msg timestamp="20201112 09:44:09.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.874" endtime="20201112 09:44:09.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:09.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:09.895" endtime="20201112 09:44:09.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.897" endtime="20201112 09:44:09.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.871" endtime="20201112 09:44:09.900"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.869" endtime="20201112 09:44:09.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:09.907" endtime="20201112 09:44:10.193"></status>
</kw>
<msg timestamp="20201112 09:44:10.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:09.906" endtime="20201112 09:44:10.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022016681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022090556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.197" endtime="20201112 09:44:10.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.205" endtime="20201112 09:44:10.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.903" endtime="20201112 09:44:10.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.901" endtime="20201112 09:44:10.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.212" level="INFO">${RESULT} = [{'time': 0.022090556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.387500000000102e-05, 'source_diff': 7.387500000000102e-05}, {'time': 0.022166514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.208" endtime="20201112 09:44:10.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.226" level="INFO">${ACCURACY} = {'time': [0.022090556, 0.022166514, 0.022242472, 0.022318583, 0.022394486, 0.022470528, 0.0225465, 0.022622528, 0.022698528, 0.022774556, 0.022850542, 0.022926556, 0.023002542, 0.023078611, 0.02315454...</msg>
<status status="PASS" starttime="20201112 09:44:10.213" endtime="20201112 09:44:10.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.231" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.230" endtime="20201112 09:44:10.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.233" level="INFO">VALUE: [7.387500000000102e-05, 7.374999999999743e-05, 7.362500000000077e-05, 7.379100000000013e-05, 7.35690000000025e-05, 7.390300000000016e-05, 7.337500000000052e-05, 7.370899999999819e-05, 7.347199999999804e-05, 7.359800000000111e-05, 7.387500000000102e-05, 7.343100000000227e-05, 7.370900000000166e-05, 7.345799999999847e-05, 7.366699999999948e-05, 7.3763000000001e-05, 7.35699999999985e-05, 7.372199999999829e-05, 7.366699999999948e-05, 7.362500000000077e-05, 7.363900000000034e-05, 7.390300000000016e-05, 7.34439999999989e-05, 7.380600000000265e-05, 7.356899999999902e-05, 7.37500000000009e-05, 7.347200000000151e-05, 7.354199999999936e-05, 7.373600000000133e-05, 7.386099999999798e-05, 7.374999999999743e-05, 7.344499999999837e-05, 7.373599999999786e-05, 7.34170000000027e-05, 7.373600000000133e-05, 7.372300000000123e-05, 7.347300000000098e-05, 7.35690000000025e-05, 7.337500000000052e-05, 7.3763999999997e-05, 7.387500000000102e-05, 7.337500000000052e-05, 7.348599999999761e-05, 7.337500000000052e-05, 7.337500000000052e-05, 7.387499999999755e-05, 7.370799999999872e-05, 7.373600000000133e-05, 7.358300000000206e-05, 7.383399999999832e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.232" endtime="20201112 09:44:10.234"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.227" endtime="20201112 09:44:10.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.237" endtime="20201112 09:44:10.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.240" endtime="20201112 09:44:10.259"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.238" endtime="20201112 09:44:10.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.235" endtime="20201112 09:44:10.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.868" endtime="20201112 09:44:10.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:09.867" endtime="20201112 09:44:10.261"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.269" endtime="20201112 09:44:10.286"></status>
</kw>
<msg timestamp="20201112 09:44:10.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.268" endtime="20201112 09:44:10.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.288" endtime="20201112 09:44:10.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.290" endtime="20201112 09:44:10.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.265" endtime="20201112 09:44:10.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.263" endtime="20201112 09:44:10.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.300" endtime="20201112 09:44:10.585"></status>
</kw>
<msg timestamp="20201112 09:44:10.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.299" endtime="20201112 09:44:10.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021974069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.589" endtime="20201112 09:44:10.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.597" endtime="20201112 09:44:10.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.296" endtime="20201112 09:44:10.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.294" endtime="20201112 09:44:10.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.604" level="INFO">${RESULT} = [{'time': 0.021974069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.505499999999748e-05, 'source_diff': 7.505499999999748e-05}, {'time': 0.022051097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.601" endtime="20201112 09:44:10.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:10.617" level="INFO">${ACCURACY} = {'time': [0.021974069, 0.022051097, 0.022128083, 0.022205097, 0.022282097, 0.022359111, 0.022436111, 0.022513125, 0.022590125, 0.022667139, 0.022744125, 0.022821167, 0.022898125, 0.022975181, 0.023052...</msg>
<status status="PASS" starttime="20201112 09:44:10.605" endtime="20201112 09:44:10.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.622" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 09:44:10.621" endtime="20201112 09:44:10.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.625" level="INFO">VALUE: [7.505499999999748e-05, 7.45829999999996e-05, 7.434699999999891e-05, 7.473599999999886e-05, 7.473600000000233e-05, 7.477800000000104e-05, 7.476400000000147e-05, 7.479199999999714e-05, 7.445799999999947e-05, 7.436099999999848e-05, 7.441700000000023e-05, 7.49310000000003e-05, 7.447199999999904e-05, 7.466700000000048e-05, 7.455599999999993e-05, 7.488899999999812e-05, 7.445899999999894e-05, 7.484699999999941e-05, 7.466700000000048e-05, 7.419399999999965e-05, 7.495799999999997e-05, 7.472199999999929e-05, 7.486099999999898e-05, 7.441599999999729e-05, 7.443000000000033e-05, 7.440300000000066e-05, 7.43050000000002e-05, 7.488900000000159e-05, 7.452799999999732e-05, 7.455599999999993e-05, 7.43050000000002e-05, 7.491699999999726e-05, 7.441700000000023e-05, 7.455599999999993e-05, 7.466699999999701e-05, 7.447199999999904e-05, 7.445799999999947e-05, 7.445899999999894e-05, 7.436099999999848e-05, 7.456900000000002e-05, 7.484800000000236e-05, 7.466600000000101e-05, 7.463899999999787e-05, 7.472199999999929e-05, 7.479099999999766e-05, 7.472199999999929e-05, 7.48050000000007e-05, 7.454100000000088e-05, 7.474999999999843e-05, 7.474999999999843e-05]</msg>
<status status="PASS" starttime="20201112 09:44:10.623" endtime="20201112 09:44:10.626"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.618" endtime="20201112 09:44:10.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.629" endtime="20201112 09:44:10.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:10.632" endtime="20201112 09:44:10.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.631" endtime="20201112 09:44:10.652"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.627" endtime="20201112 09:44:10.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.262" endtime="20201112 09:44:10.653"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.261" endtime="20201112 09:44:10.653"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.662" endtime="20201112 09:44:10.680"></status>
</kw>
<msg timestamp="20201112 09:44:10.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.660" endtime="20201112 09:44:10.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:10.681" endtime="20201112 09:44:10.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.684" endtime="20201112 09:44:10.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.658" endtime="20201112 09:44:10.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.656" endtime="20201112 09:44:10.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.694" endtime="20201112 09:44:10.979"></status>
</kw>
<msg timestamp="20201112 09:44:10.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.692" endtime="20201112 09:44:10.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:10.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021976486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022051861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:10.983" endtime="20201112 09:44:10.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:10.992" endtime="20201112 09:44:10.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.690" endtime="20201112 09:44:10.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.688" endtime="20201112 09:44:10.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:10.998" level="INFO">${RESULT} = [{'time': 0.022051861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.537499999999905e-05, 'source_diff': 7.537499999999905e-05}, {'time': 0.022129875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:10.995" endtime="20201112 09:44:10.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.012" level="INFO">${ACCURACY} = {'time': [0.022051861, 0.022129875, 0.022207875, 0.022285889, 0.022363931, 0.022441917, 0.022519903, 0.022597931, 0.022675931, 0.022753944, 0.022831903, 0.022909944, 0.022987986, 0.023065958, 0.023143...</msg>
<status status="PASS" starttime="20201112 09:44:10.999" endtime="20201112 09:44:11.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.016" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.015" endtime="20201112 09:44:11.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.019" level="INFO">VALUE: [7.537499999999905e-05, 7.565300000000191e-05, 7.538899999999862e-05, 7.588899999999912e-05, 7.552800000000179e-05, 7.593099999999783e-05, 7.554200000000136e-05, 7.590300000000216e-05, 7.5763999999999e-05, 7.5763000000003e-05, 7.573599999999986e-05, 7.540200000000219e-05, 7.592999999999836e-05, 7.574999999999943e-05, 7.572299999999976e-05, 7.573599999999986e-05, 7.552699999999885e-05, 7.545800000000047e-05, 7.568000000000158e-05, 7.584699999999694e-05, 7.534699999999991e-05, 7.579199999999814e-05, 7.574999999999943e-05, 7.552799999999832e-05, 7.552800000000179e-05, 7.54029999999982e-05, 7.549999999999918e-05, 7.554200000000136e-05, 7.565299999999844e-05, 7.545899999999994e-05, 7.544500000000037e-05, 7.570900000000019e-05, 7.580600000000118e-05, 7.577799999999857e-05, 7.566699999999801e-05, 7.549999999999918e-05, 7.544399999999743e-05, 7.573599999999986e-05, 7.566599999999854e-05, 7.565299999999844e-05, 7.551400000000222e-05, 7.555499999999798e-05, 7.56249999999993e-05, 7.580600000000118e-05, 7.56249999999993e-05, 7.590300000000216e-05, 7.543000000000133e-05, 7.540300000000166e-05, 7.530600000000068e-05, 7.570900000000019e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.018" endtime="20201112 09:44:11.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.013" endtime="20201112 09:44:11.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.023" endtime="20201112 09:44:11.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.026" endtime="20201112 09:44:11.045"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.024" endtime="20201112 09:44:11.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.021" endtime="20201112 09:44:11.046"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.654" endtime="20201112 09:44:11.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:10.654" endtime="20201112 09:44:11.047"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.055" endtime="20201112 09:44:11.074"></status>
</kw>
<msg timestamp="20201112 09:44:11.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.054" endtime="20201112 09:44:11.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.075" endtime="20201112 09:44:11.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.078" endtime="20201112 09:44:11.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.051" endtime="20201112 09:44:11.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.049" endtime="20201112 09:44:11.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.088" endtime="20201112 09:44:11.374"></status>
</kw>
<msg timestamp="20201112 09:44:11.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.086" endtime="20201112 09:44:11.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022103028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.378" endtime="20201112 09:44:11.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.386" endtime="20201112 09:44:11.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.084" endtime="20201112 09:44:11.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.082" endtime="20201112 09:44:11.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.393" level="INFO">${RESULT} = [{'time': 0.022179444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.641599999999929e-05, 'source_diff': 7.641599999999929e-05}, {'time': 0.022258458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:11.390" endtime="20201112 09:44:11.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.406" level="INFO">${ACCURACY} = {'time': [0.022179444, 0.022258458, 0.022337472, 0.022416458, 0.022495514, 0.022574472, 0.022653472, 0.022732542, 0.022811472, 0.0228905, 0.022969472, 0.0230485, 0.023127486, 0.023206514, 0.0232855, 0...</msg>
<status status="PASS" starttime="20201112 09:44:11.394" endtime="20201112 09:44:11.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.411" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.410" endtime="20201112 09:44:11.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.413" level="INFO">VALUE: [7.641599999999929e-05, 7.691599999999979e-05, 7.680499999999923e-05, 7.652699999999985e-05, 7.661100000000073e-05, 7.669400000000215e-05, 7.641599999999929e-05, 7.652800000000279e-05, 7.68189999999988e-05, 7.638899999999962e-05, 7.634700000000091e-05, 7.638899999999962e-05, 7.634700000000091e-05, 7.663899999999987e-05, 7.684700000000141e-05, 7.652799999999932e-05, 7.654199999999889e-05, 7.667999999999911e-05, 7.670799999999825e-05, 7.683299999999837e-05, 7.636100000000048e-05, 7.686100000000098e-05, 7.684699999999794e-05, 7.637500000000005e-05, 7.669400000000215e-05, 7.69579999999985e-05, 7.683299999999837e-05, 7.670799999999825e-05, 7.654100000000288e-05, 7.645800000000147e-05, 7.63189999999983e-05, 7.669400000000215e-05, 7.669400000000215e-05, 7.652799999999932e-05, 7.677799999999957e-05, 7.676300000000053e-05, 7.64029999999992e-05, 7.637500000000005e-05, 7.656999999999803e-05, 7.682000000000175e-05, 7.65700000000015e-05, 7.637500000000005e-05, 7.633400000000082e-05, 7.692999999999936e-05, 7.66250000000003e-05, 7.652800000000279e-05, 7.681900000000227e-05, 7.686100000000098e-05, 7.691699999999926e-05, 7.652799999999932e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.412" endtime="20201112 09:44:11.414"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.407" endtime="20201112 09:44:11.415"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.417" endtime="20201112 09:44:11.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.420" endtime="20201112 09:44:11.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.419" endtime="20201112 09:44:11.440"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.415" endtime="20201112 09:44:11.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.048" endtime="20201112 09:44:11.441"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.047" endtime="20201112 09:44:11.441"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.450" endtime="20201112 09:44:11.467"></status>
</kw>
<msg timestamp="20201112 09:44:11.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.448" endtime="20201112 09:44:11.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.468" endtime="20201112 09:44:11.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.471" endtime="20201112 09:44:11.473"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.446" endtime="20201112 09:44:11.474"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.444" endtime="20201112 09:44:11.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.481" endtime="20201112 09:44:11.765"></status>
</kw>
<msg timestamp="20201112 09:44:11.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.479" endtime="20201112 09:44:11.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.769" endtime="20201112 09:44:11.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.778" endtime="20201112 09:44:11.779"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.477" endtime="20201112 09:44:11.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.475" endtime="20201112 09:44:11.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:11.784" level="INFO">${RESULT} = [{'time': 0.022017806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.7764000000001e-05, 'source_diff': 7.7764000000001e-05}, {'time': 0.022097806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201112 09:44:11.781" endtime="20201112 09:44:11.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:11.799" level="INFO">${ACCURACY} = {'time': [0.022017806, 0.022097806, 0.022177806, 0.022257861, 0.022337806, 0.022417833, 0.022497833, 0.022577917, 0.022657833, 0.022737875, 0.022817875, 0.022897861, 0.022977861, 0.023057889, 0.023137...</msg>
<status status="PASS" starttime="20201112 09:44:11.785" endtime="20201112 09:44:11.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.803" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 09:44:11.802" endtime="20201112 09:44:11.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.806" level="INFO">VALUE: [7.7764000000001e-05, 7.768099999999958e-05, 7.74310000000028e-05, 7.741699999999976e-05, 7.769500000000262e-05, 7.734700000000191e-05, 7.733299999999887e-05, 7.762499999999783e-05, 7.783299999999937e-05, 7.78189999999998e-05, 7.791700000000026e-05, 7.79169999999968e-05, 7.734699999999844e-05, 7.752800000000032e-05, 7.779199999999667e-05, 7.747200000000204e-05, 7.780599999999971e-05, 7.787499999999808e-05, 7.756999999999903e-05, 7.777800000000057e-05, 7.761099999999826e-05, 7.74030000000002e-05, 7.77229999999983e-05, 7.736099999999801e-05, 7.759799999999817e-05, 7.784699999999894e-05, 7.754199999999989e-05, 7.761099999999826e-05, 7.7457999999999e-05, 7.747199999999857e-05, 7.748600000000161e-05, 7.761099999999826e-05, 7.756899999999955e-05, 7.758299999999912e-05, 7.780599999999971e-05, 7.755599999999946e-05, 7.737500000000105e-05, 7.748599999999814e-05, 7.748600000000161e-05, 7.766700000000001e-05, 7.750000000000118e-05, 7.766700000000001e-05, 7.788900000000112e-05, 7.777800000000057e-05, 7.769499999999915e-05, 7.736100000000148e-05, 7.77770000000011e-05, 7.742999999999986e-05, 7.780500000000024e-05, 7.780500000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:44:11.804" endtime="20201112 09:44:11.807"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.800" endtime="20201112 09:44:11.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.809" endtime="20201112 09:44:11.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:11.813" endtime="20201112 09:44:11.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.811" endtime="20201112 09:44:11.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.808" endtime="20201112 09:44:11.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.442" endtime="20201112 09:44:11.833"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.441" endtime="20201112 09:44:11.833"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.842" endtime="20201112 09:44:11.861"></status>
</kw>
<msg timestamp="20201112 09:44:11.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.841" endtime="20201112 09:44:11.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:11.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:11.862" endtime="20201112 09:44:11.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.865" endtime="20201112 09:44:11.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.838" endtime="20201112 09:44:11.868"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.836" endtime="20201112 09:44:11.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:11.875" endtime="20201112 09:44:12.161"></status>
</kw>
<msg timestamp="20201112 09:44:12.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:11.873" endtime="20201112 09:44:12.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022373556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022452569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.165" endtime="20201112 09:44:12.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.174" endtime="20201112 09:44:12.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.871" endtime="20201112 09:44:12.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.869" endtime="20201112 09:44:12.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.181" level="INFO">${RESULT} = [{'time': 0.022452569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.90129999999993e-05, 'source_diff': 7.90129999999993e-05}, {'time': 0.022533611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:12.177" endtime="20201112 09:44:12.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.194" level="INFO">${ACCURACY} = {'time': [0.022452569, 0.022533611, 0.022614569, 0.022695611, 0.022776583, 0.022857611, 0.022938597, 0.023019625, 0.023100611, 0.023181653, 0.023262625, 0.023343653, 0.023424639, 0.023505681, 0.023586...</msg>
<status status="PASS" starttime="20201112 09:44:12.182" endtime="20201112 09:44:12.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.198" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.197" endtime="20201112 09:44:12.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.201" level="INFO">VALUE: [7.90129999999993e-05, 7.849999999999871e-05, 7.868000000000111e-05, 7.8764000000002e-05, 7.888899999999865e-05, 7.838900000000162e-05, 7.869400000000068e-05, 7.837499999999858e-05, 7.879200000000114e-05, 7.877800000000157e-05, 7.84169999999973e-05, 7.890299999999822e-05, 7.888900000000212e-05, 7.862499999999883e-05, 7.837499999999858e-05, 7.883399999999985e-05, 7.847199999999957e-05, 7.870899999999972e-05, 7.873599999999939e-05, 7.869400000000068e-05, 7.854199999999742e-05, 7.847199999999957e-05, 7.834699999999944e-05, 7.8458e-05, 7.883300000000037e-05, 7.848599999999914e-05, 7.841700000000076e-05, 7.854199999999742e-05, 7.812499999999833e-05, 7.854199999999742e-05, 7.841700000000076e-05, 7.838899999999815e-05, 7.888899999999865e-05, 7.891700000000126e-05, 7.876399999999853e-05, 7.859799999999917e-05, 7.877800000000157e-05, 7.87770000000021e-05, 7.838900000000162e-05, 7.886099999999951e-05, 7.851400000000175e-05, 7.870800000000025e-05, 7.840299999999772e-05, 7.888899999999865e-05, 7.85129999999988e-05, 7.817999999999714e-05, 7.86519999999985e-05, 7.863900000000187e-05, 7.876399999999853e-05, 7.873599999999939e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.199" endtime="20201112 09:44:12.202"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.195" endtime="20201112 09:44:12.202"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.204" endtime="20201112 09:44:12.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.208" endtime="20201112 09:44:12.227"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.206" endtime="20201112 09:44:12.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.203" endtime="20201112 09:44:12.228"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.834" endtime="20201112 09:44:12.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:11.834" endtime="20201112 09:44:12.229"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.237" endtime="20201112 09:44:12.255"></status>
</kw>
<msg timestamp="20201112 09:44:12.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.236" endtime="20201112 09:44:12.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.258" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.257" endtime="20201112 09:44:12.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.259" endtime="20201112 09:44:12.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.233" endtime="20201112 09:44:12.262"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.231" endtime="20201112 09:44:12.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.269" endtime="20201112 09:44:12.555"></status>
</kw>
<msg timestamp="20201112 09:44:12.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.268" endtime="20201112 09:44:12.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021987083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022066319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.559" endtime="20201112 09:44:12.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.567" endtime="20201112 09:44:12.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.265" endtime="20201112 09:44:12.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.263" endtime="20201112 09:44:12.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.574" level="INFO">${RESULT} = [{'time': 0.022066319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.923599999999989e-05, 'source_diff': 7.923599999999989e-05}, {'time': 0.022148278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:12.571" endtime="20201112 09:44:12.574"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.587" level="INFO">${ACCURACY} = {'time': [0.022066319, 0.022148278, 0.02223025, 0.022312278, 0.022394278, 0.022476292, 0.022558278, 0.022639306, 0.022721333, 0.022803319, 0.022885292, 0.022967361, 0.023049319, 0.023131347, 0.0232133...</msg>
<status status="PASS" starttime="20201112 09:44:12.575" endtime="20201112 09:44:12.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.592" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.591" endtime="20201112 09:44:12.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.594" level="INFO">VALUE: [7.923599999999989e-05, 7.983400000000085e-05, 7.965299999999897e-05, 7.963900000000287e-05, 7.980600000000171e-05, 7.958399999999713e-05, 7.968100000000158e-05, 7.918100000000108e-05, 7.97909999999992e-05, 7.940199999999925e-05, 7.962499999999983e-05, 7.98329999999979e-05, 7.974999999999996e-05, 7.991599999999932e-05, 7.967999999999864e-05, 7.970800000000125e-05, 7.980499999999877e-05, 7.949999999999971e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.977800000000257e-05, 7.94169999999983e-05, 7.968100000000158e-05, 7.947300000000004e-05, 7.968099999999811e-05, 7.98329999999979e-05, 7.972200000000082e-05, 7.952800000000232e-05, 7.940299999999872e-05, 7.979200000000214e-05, 7.965300000000244e-05, 7.968000000000211e-05, 7.930600000000121e-05, 7.99450000000014e-05, 7.965300000000244e-05, 7.967999999999864e-05, 7.976399999999953e-05, 7.961100000000026e-05, 7.97779999999991e-05, 7.936100000000001e-05, 7.951399999999928e-05, 7.97779999999991e-05, 7.966700000000201e-05, 7.951399999999928e-05, 7.949999999999971e-05, 7.952799999999885e-05, 7.986100000000051e-05, 7.94450000000009e-05, 7.969500000000115e-05, 7.94030000000022e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.593" endtime="20201112 09:44:12.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.588" endtime="20201112 09:44:12.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.598" endtime="20201112 09:44:12.599"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:12.601" endtime="20201112 09:44:12.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.600" endtime="20201112 09:44:12.621"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.596" endtime="20201112 09:44:12.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.230" endtime="20201112 09:44:12.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.229" endtime="20201112 09:44:12.622"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.631" endtime="20201112 09:44:12.649"></status>
</kw>
<msg timestamp="20201112 09:44:12.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.629" endtime="20201112 09:44:12.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:12.650" endtime="20201112 09:44:12.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.653" endtime="20201112 09:44:12.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.627" endtime="20201112 09:44:12.656"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.625" endtime="20201112 09:44:12.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.664" endtime="20201112 09:44:12.950"></status>
</kw>
<msg timestamp="20201112 09:44:12.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.662" endtime="20201112 09:44:12.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022206125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022286583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:12.954" endtime="20201112 09:44:12.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.962" endtime="20201112 09:44:12.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.659" endtime="20201112 09:44:12.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.657" endtime="20201112 09:44:12.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:12.969" level="INFO">${RESULT} = [{'time': 0.022286583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.045799999999853e-05, 'source_diff': 8.045799999999853e-05}, {'time': 0.022369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:12.966" endtime="20201112 09:44:12.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:12.983" level="INFO">${ACCURACY} = {'time': [0.022286583, 0.022369611, 0.022452583, 0.022535625, 0.022617667, 0.022700639, 0.022783611, 0.022866639, 0.022949625, 0.023032653, 0.023115639, 0.023198681, 0.023281667, 0.023364694, 0.023447...</msg>
<status status="PASS" starttime="20201112 09:44:12.970" endtime="20201112 09:44:12.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.987" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 09:44:12.986" endtime="20201112 09:44:12.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:12.990" level="INFO">VALUE: [8.045799999999853e-05, 8.056900000000256e-05, 8.037500000000058e-05, 8.040299999999972e-05, 8.019500000000165e-05, 8.043100000000233e-05, 8.036099999999755e-05, 8.037500000000058e-05, 8.065299999999997e-05, 8.080599999999924e-05, 8.076400000000053e-05, 8.061199999999727e-05, 8.084799999999795e-05, 8.054099999999995e-05, 8.073599999999792e-05, 8.061100000000126e-05, 8.076400000000053e-05, 8.061100000000126e-05, 8.069399999999921e-05, 8.066699999999954e-05, 8.069399999999921e-05, 8.069399999999921e-05, 8.066600000000007e-05, 8.092999999999989e-05, 8.036100000000101e-05, 8.080599999999924e-05, 8.045799999999853e-05, 8.058299999999866e-05, 8.015300000000294e-05, 8.04450000000019e-05, 8.051400000000028e-05, 8.052799999999985e-05, 8.048600000000114e-05, 8.081999999999881e-05, 8.076400000000053e-05, 8.049999999999724e-05, 8.055599999999899e-05, 8.054099999999995e-05, 8.072200000000182e-05, 8.054099999999995e-05, 8.080499999999977e-05, 8.080499999999977e-05, 8.058299999999866e-05, 8.06109999999978e-05, 8.070799999999878e-05, 8.038900000000015e-05, 8.086100000000151e-05, 8.050000000000071e-05, 8.044399999999896e-05, 8.04169999999993e-05]</msg>
<status status="PASS" starttime="20201112 09:44:12.988" endtime="20201112 09:44:12.996"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.983" endtime="20201112 09:44:12.997"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:12.999" endtime="20201112 09:44:13.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.003" endtime="20201112 09:44:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.001" endtime="20201112 09:44:13.022"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.997" endtime="20201112 09:44:13.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.623" endtime="20201112 09:44:13.023"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:12.623" endtime="20201112 09:44:13.023"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.032" endtime="20201112 09:44:13.051"></status>
</kw>
<msg timestamp="20201112 09:44:13.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.030" endtime="20201112 09:44:13.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.052" endtime="20201112 09:44:13.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.055" endtime="20201112 09:44:13.057"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.028" endtime="20201112 09:44:13.058"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.026" endtime="20201112 09:44:13.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.065" endtime="20201112 09:44:13.351"></status>
</kw>
<msg timestamp="20201112 09:44:13.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.063" endtime="20201112 09:44:13.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022330097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022411681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.355" endtime="20201112 09:44:13.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.363" endtime="20201112 09:44:13.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.060" endtime="20201112 09:44:13.365"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.059" endtime="20201112 09:44:13.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.370" level="INFO">${RESULT} = [{'time': 0.022411681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.158399999999913e-05, 'source_diff': 8.158399999999913e-05}, {'time': 0.022495708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.366" endtime="20201112 09:44:13.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.384" level="INFO">${ACCURACY} = {'time': [0.022411681, 0.022495708, 0.022579736, 0.022663722, 0.022747708, 0.022831764, 0.022915736, 0.022999764, 0.023083736, 0.023167778, 0.023251736, 0.023335806, 0.023419764, 0.023503778, 0.023587...</msg>
<status status="PASS" starttime="20201112 09:44:13.371" endtime="20201112 09:44:13.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.389" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.388" endtime="20201112 09:44:13.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.391" level="INFO">VALUE: [8.158399999999913e-05, 8.140200000000125e-05, 8.193000000000089e-05, 8.191600000000132e-05, 8.16659999999976e-05, 8.150000000000171e-05, 8.16529999999975e-05, 8.159699999999923e-05, 8.14170000000003e-05, 8.187499999999862e-05, 8.158299999999966e-05, 8.17780000000011e-05, 8.177799999999763e-05, 8.17780000000011e-05, 8.158299999999966e-05, 8.150000000000171e-05, 8.184700000000295e-05, 8.138900000000115e-05, 8.144499999999943e-05, 8.173599999999892e-05, 8.158399999999913e-05, 8.16520000000015e-05, 8.17780000000011e-05, 8.187500000000208e-05, 8.174999999999849e-05, 8.187499999999862e-05, 8.16390000000014e-05, 8.170799999999978e-05, 8.170799999999978e-05, 8.1458999999999e-05, 8.144399999999996e-05, 8.190299999999776e-05, 8.156900000000009e-05, 8.170899999999925e-05, 8.17780000000011e-05, 8.168100000000011e-05, 8.177799999999763e-05, 8.190299999999776e-05, 8.16520000000015e-05, 8.141600000000082e-05, 8.159699999999923e-05, 8.156899999999662e-05, 8.165199999999803e-05, 8.183400000000285e-05, 8.158299999999966e-05, 8.151400000000128e-05, 8.180600000000024e-05, 8.177799999999763e-05, 8.181900000000034e-05, 8.14719999999991e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.390" endtime="20201112 09:44:13.392"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.385" endtime="20201112 09:44:13.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.395" endtime="20201112 09:44:13.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.398" endtime="20201112 09:44:13.417"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.397" endtime="20201112 09:44:13.418"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.393" endtime="20201112 09:44:13.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.024" endtime="20201112 09:44:13.419"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.024" endtime="20201112 09:44:13.419"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.428" endtime="20201112 09:44:13.445"></status>
</kw>
<msg timestamp="20201112 09:44:13.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.426" endtime="20201112 09:44:13.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.447" endtime="20201112 09:44:13.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.449" endtime="20201112 09:44:13.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.423" endtime="20201112 09:44:13.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.421" endtime="20201112 09:44:13.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.459" endtime="20201112 09:44:13.745"></status>
</kw>
<msg timestamp="20201112 09:44:13.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.458" endtime="20201112 09:44:13.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022132653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022215056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.749" endtime="20201112 09:44:13.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.758" endtime="20201112 09:44:13.759"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.455" endtime="20201112 09:44:13.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.453" endtime="20201112 09:44:13.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:13.764" level="INFO">${RESULT} = [{'time': 0.022215056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.240300000000172e-05, 'source_diff': 8.240300000000172e-05}, {'time': 0.022300083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:13.761" endtime="20201112 09:44:13.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:13.778" level="INFO">${ACCURACY} = {'time': [0.022215056, 0.022300083, 0.022385056, 0.022470111, 0.022555069, 0.022640111, 0.022725167, 0.022810167, 0.022895083, 0.022980125, 0.023065111, 0.023150153, 0.023235111, 0.023320153, 0.023405...</msg>
<status status="PASS" starttime="20201112 09:44:13.765" endtime="20201112 09:44:13.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.782" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 09:44:13.781" endtime="20201112 09:44:13.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.785" level="INFO">VALUE: [8.240300000000172e-05, 8.2846999999997e-05, 8.25979999999997e-05, 8.294400000000146e-05, 8.269400000000121e-05, 8.262499999999937e-05, 8.248599999999967e-05, 8.298600000000017e-05, 8.255500000000152e-05, 8.268100000000111e-05, 8.267999999999817e-05, 8.26529999999985e-05, 8.240299999999826e-05, 8.268100000000111e-05, 8.272200000000035e-05, 8.263899999999894e-05, 8.233299999999694e-05, 8.251399999999881e-05, 8.284799999999995e-05, 8.244500000000043e-05, 8.232000000000031e-05, 8.301399999999931e-05, 8.24170000000013e-05, 8.24720000000001e-05, 8.276299999999959e-05, 8.26390000000024e-05, 8.286100000000005e-05, 8.243000000000139e-05, 8.245800000000053e-05, 8.249999999999924e-05, 8.244400000000096e-05, 8.280600000000124e-05, 8.272200000000035e-05, 8.282000000000081e-05, 8.281899999999787e-05, 8.244500000000043e-05, 8.270900000000025e-05, 8.269399999999774e-05, 8.290300000000222e-05, 8.255599999999752e-05, 8.27780000000021e-05, 8.26659999999986e-05, 8.265300000000197e-05, 8.24720000000001e-05, 8.273599999999992e-05, 8.26109999999998e-05, 8.256900000000109e-05, 8.238900000000215e-05, 8.266600000000207e-05, 8.26109999999998e-05]</msg>
<status status="PASS" starttime="20201112 09:44:13.783" endtime="20201112 09:44:13.786"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.779" endtime="20201112 09:44:13.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.788" endtime="20201112 09:44:13.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:13.792" endtime="20201112 09:44:13.811"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.790" endtime="20201112 09:44:13.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.787" endtime="20201112 09:44:13.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.420" endtime="20201112 09:44:13.812"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.419" endtime="20201112 09:44:13.813"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.821" endtime="20201112 09:44:13.839"></status>
</kw>
<msg timestamp="20201112 09:44:13.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.820" endtime="20201112 09:44:13.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:13.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:13.841" endtime="20201112 09:44:13.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.843" endtime="20201112 09:44:13.846"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.817" endtime="20201112 09:44:13.847"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.815" endtime="20201112 09:44:13.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:13.853" endtime="20201112 09:44:14.139"></status>
</kw>
<msg timestamp="20201112 09:44:14.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:13.852" endtime="20201112 09:44:14.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022282778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.143" endtime="20201112 09:44:14.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.152" endtime="20201112 09:44:14.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.849" endtime="20201112 09:44:14.154"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.848" endtime="20201112 09:44:14.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.159" level="INFO">${RESULT} = [{'time': 0.022282778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.412500000000087e-05, 'source_diff': 8.412500000000087e-05}, {'time': 0.022368736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.155" endtime="20201112 09:44:14.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.172" level="INFO">${ACCURACY} = {'time': [0.022282778, 0.022368736, 0.022454736, 0.022540764, 0.022626736, 0.022712764, 0.022798764, 0.022884778, 0.022970764, 0.023056806, 0.023142764, 0.023228806, 0.023314792, 0.023400833, 0.023486...</msg>
<status status="PASS" starttime="20201112 09:44:14.160" endtime="20201112 09:44:14.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.177" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.176" endtime="20201112 09:44:14.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.179" level="INFO">VALUE: [8.412500000000087e-05, 8.392999999999942e-05, 8.345799999999806e-05, 8.34720000000011e-05, 8.338900000000316e-05, 8.377799999999963e-05, 8.345799999999806e-05, 8.355600000000199e-05, 8.344500000000143e-05, 8.369499999999822e-05, 8.34309999999984e-05, 8.348700000000014e-05, 8.362500000000037e-05, 8.356899999999862e-05, 8.333399999999741e-05, 8.379099999999973e-05, 8.333400000000088e-05, 8.3846999999998e-05, 8.370799999999831e-05, 8.338900000000316e-05, 8.354099999999948e-05, 8.386100000000105e-05, 8.333299999999794e-05, 8.345800000000153e-05, 8.352799999999938e-05, 8.337500000000012e-05, 8.344399999999849e-05, 8.358400000000113e-05, 8.390299999999976e-05, 8.340299999999926e-05, 8.341699999999883e-05, 8.36110000000008e-05, 8.390200000000028e-05, 8.383299999999844e-05, 8.331999999999784e-05, 8.373600000000092e-05, 8.343100000000186e-05, 8.351399999999981e-05, 8.367999999999917e-05, 8.384700000000148e-05, 8.390299999999976e-05, 8.377799999999963e-05, 8.331899999999837e-05, 8.391699999999933e-05, 8.356899999999862e-05, 8.33469999999975e-05, 8.36249999999969e-05, 8.387500000000062e-05, 8.333400000000088e-05, 8.316700000000204e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.178" endtime="20201112 09:44:14.180"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.173" endtime="20201112 09:44:14.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.183" endtime="20201112 09:44:14.184"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.186" endtime="20201112 09:44:14.205"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.185" endtime="20201112 09:44:14.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.181" endtime="20201112 09:44:14.206"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.813" endtime="20201112 09:44:14.207"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:13.813" endtime="20201112 09:44:14.207"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.216" endtime="20201112 09:44:14.233"></status>
</kw>
<msg timestamp="20201112 09:44:14.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.214" endtime="20201112 09:44:14.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.235" endtime="20201112 09:44:14.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.237" endtime="20201112 09:44:14.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.211" endtime="20201112 09:44:14.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.209" endtime="20201112 09:44:14.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.247" endtime="20201112 09:44:14.533"></status>
</kw>
<msg timestamp="20201112 09:44:14.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.246" endtime="20201112 09:44:14.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022065361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022150389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.537" endtime="20201112 09:44:14.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.545" endtime="20201112 09:44:14.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.243" endtime="20201112 09:44:14.547"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.241" endtime="20201112 09:44:14.548"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.552" level="INFO">${RESULT} = [{'time': 0.022150389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.502800000000088e-05, 'source_diff': 8.502800000000088e-05}, {'time': 0.022237403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.549" endtime="20201112 09:44:14.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.565" level="INFO">${ACCURACY} = {'time': [0.022150389, 0.022237403, 0.022324403, 0.022411431, 0.022498417, 0.022585431, 0.022672472, 0.022759458, 0.022846431, 0.022933444, 0.023020431, 0.023107458, 0.023194444, 0.023281472, 0.023368...</msg>
<status status="PASS" starttime="20201112 09:44:14.553" endtime="20201112 09:44:14.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.570" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.569" endtime="20201112 09:44:14.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.572" level="INFO">VALUE: [8.502800000000088e-05, 8.4846999999999e-05, 8.454199999999995e-05, 8.476399999999759e-05, 8.462500000000137e-05, 8.477800000000063e-05, 8.493000000000042e-05, 8.46660000000006e-05, 8.46530000000005e-05, 8.486100000000205e-05, 8.441699999999983e-05, 8.448600000000167e-05, 8.441600000000035e-05, 8.434700000000198e-05, 8.488900000000119e-05, 8.490300000000076e-05, 8.470799999999931e-05, 8.456899999999962e-05, 8.488900000000119e-05, 8.459700000000223e-05, 8.438899999999722e-05, 8.436100000000155e-05, 8.451400000000081e-05, 8.488900000000119e-05, 8.436099999999808e-05, 8.488900000000119e-05, 8.438899999999722e-05, 8.448600000000167e-05, 8.480599999999977e-05, 8.454199999999995e-05, 8.454100000000048e-05, 8.474999999999802e-05, 8.43469999999985e-05, 8.447199999999863e-05, 8.442999999999992e-05, 8.490300000000076e-05, 8.483299999999944e-05, 8.463900000000094e-05, 8.480599999999977e-05, 8.477800000000063e-05, 8.470799999999931e-05, 8.455599999999952e-05, 8.473600000000192e-05, 8.456999999999909e-05, 8.473600000000192e-05, 8.472300000000182e-05, 8.454199999999995e-05, 8.451300000000134e-05, 8.452800000000038e-05, 8.438900000000069e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.571" endtime="20201112 09:44:14.573"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.566" endtime="20201112 09:44:14.574"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.576" endtime="20201112 09:44:14.577"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.579" endtime="20201112 09:44:14.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.578" endtime="20201112 09:44:14.599"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.574" endtime="20201112 09:44:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.208" endtime="20201112 09:44:14.600"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.207" endtime="20201112 09:44:14.600"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.609" endtime="20201112 09:44:14.627"></status>
</kw>
<msg timestamp="20201112 09:44:14.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.607" endtime="20201112 09:44:14.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:14.628" endtime="20201112 09:44:14.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.631" endtime="20201112 09:44:14.633"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.605" endtime="20201112 09:44:14.634"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.602" endtime="20201112 09:44:14.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.641" endtime="20201112 09:44:14.927"></status>
</kw>
<msg timestamp="20201112 09:44:14.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.639" endtime="20201112 09:44:14.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021965181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022050833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:14.931" endtime="20201112 09:44:14.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.939" endtime="20201112 09:44:14.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.636" endtime="20201112 09:44:14.941"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.635" endtime="20201112 09:44:14.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:14.946" level="INFO">${RESULT} = [{'time': 0.022050833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.565199999999856e-05, 'source_diff': 8.565199999999856e-05}, {'time': 0.022138875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:14.942" endtime="20201112 09:44:14.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:14.960" level="INFO">${ACCURACY} = {'time': [0.022050833, 0.022138875, 0.022226903, 0.022314917, 0.022402861, 0.022490889, 0.022578875, 0.022666903, 0.022754917, 0.022842931, 0.022930903, 0.023017931, 0.023105917, 0.023193944, 0.023281...</msg>
<status status="PASS" starttime="20201112 09:44:14.947" endtime="20201112 09:44:14.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.965" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 09:44:14.964" endtime="20201112 09:44:14.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:14.967" level="INFO">VALUE: [8.565199999999856e-05, 8.552799999999791e-05, 8.569500000000022e-05, 8.561099999999933e-05, 8.570800000000031e-05, 8.530600000000027e-05, 8.587500000000262e-05, 8.570899999999979e-05, 8.541700000000083e-05, 8.56530000000015e-05, 8.570899999999979e-05, 8.518100000000015e-05, 8.583399999999991e-05, 8.543000000000092e-05, 8.558399999999966e-05, 8.594500000000047e-05, 8.588800000000271e-05, 8.593000000000142e-05, 8.581900000000087e-05, 8.541700000000083e-05, 8.540199999999831e-05, 8.558300000000019e-05, 8.506900000000012e-05, 8.57920000000012e-05, 8.547199999999963e-05, 8.572299999999936e-05, 8.563900000000194e-05, 8.555600000000052e-05, 8.544499999999997e-05, 8.54729999999991e-05, 8.536100000000255e-05, 8.577799999999816e-05, 8.584799999999948e-05, 8.543000000000092e-05, 8.557000000000009e-05, 8.565199999999856e-05, 8.576300000000259e-05, 8.570800000000031e-05, 8.559699999999976e-05, 8.574999999999902e-05, 8.551399999999834e-05, 8.554199999999748e-05, 8.563900000000194e-05, 8.590300000000176e-05, 8.57920000000012e-05, 8.577799999999816e-05, 8.54859999999992e-05, 8.58059999999973e-05, 8.565199999999856e-05, 8.548700000000214e-05]</msg>
<status status="PASS" starttime="20201112 09:44:14.966" endtime="20201112 09:44:14.968"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.961" endtime="20201112 09:44:14.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:14.971" endtime="20201112 09:44:14.972"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:14.974" endtime="20201112 09:44:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.973" endtime="20201112 09:44:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.969" endtime="20201112 09:44:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.601" endtime="20201112 09:44:14.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.600" endtime="20201112 09:44:14.995"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.004" endtime="20201112 09:44:15.022"></status>
</kw>
<msg timestamp="20201112 09:44:15.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.002" endtime="20201112 09:44:15.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.023" endtime="20201112 09:44:15.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.026" endtime="20201112 09:44:15.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.000" endtime="20201112 09:44:15.029"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.998" endtime="20201112 09:44:15.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.036" endtime="20201112 09:44:15.322"></status>
</kw>
<msg timestamp="20201112 09:44:15.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.034" endtime="20201112 09:44:15.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022114153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.326" endtime="20201112 09:44:15.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.335" endtime="20201112 09:44:15.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.032" endtime="20201112 09:44:15.337"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.030" endtime="20201112 09:44:15.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.341" level="INFO">${RESULT} = [{'time': 0.022114153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.669500000000122e-05, 'source_diff': 8.669500000000122e-05}, {'time': 0.022203194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.338" endtime="20201112 09:44:15.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.355" level="INFO">${ACCURACY} = {'time': [0.022114153, 0.022203194, 0.022292222, 0.022381194, 0.022470181, 0.022559222, 0.022648194, 0.022737222, 0.022826208, 0.022915236, 0.023004236, 0.023093264, 0.02318225, 0.023271264, 0.0233602...</msg>
<status status="PASS" starttime="20201112 09:44:15.342" endtime="20201112 09:44:15.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.359" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.358" endtime="20201112 09:44:15.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.362" level="INFO">VALUE: [8.669500000000122e-05, 8.684699999999754e-05, 8.63470000000005e-05, 8.644400000000149e-05, 8.66119999999998e-05, 8.665299999999904e-05, 8.649999999999977e-05, 8.688899999999972e-05, 8.66249999999999e-05, 8.652799999999891e-05, 8.655500000000205e-05, 8.647199999999716e-05, 8.661100000000033e-05, 8.6847000000001e-05, 8.672199999999741e-05, 8.64310000000014e-05, 8.657000000000109e-05, 8.683400000000091e-05, 8.658400000000066e-05, 8.663899999999947e-05, 8.651399999999934e-05, 8.669399999999827e-05, 8.634699999999704e-05, 8.666599999999913e-05, 8.66799999999987e-05, 8.643000000000192e-05, 8.68189999999984e-05, 8.618099999999768e-05, 8.636100000000008e-05, 8.67920000000022e-05, 8.668000000000217e-05, 8.676400000000306e-05, 8.688899999999972e-05, 8.64730000000001e-05, 8.672199999999741e-05, 8.668099999999818e-05, 8.655599999999805e-05, 8.649999999999977e-05, 8.677799999999916e-05, 8.654100000000248e-05, 8.657000000000109e-05, 8.64860000000002e-05, 8.641600000000235e-05, 8.691599999999938e-05, 8.652699999999944e-05, 8.691700000000233e-05, 8.661100000000033e-05, 8.636100000000008e-05, 8.675000000000002e-05, 8.687500000000015e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.360" endtime="20201112 09:44:15.363"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.356" endtime="20201112 09:44:15.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.365" endtime="20201112 09:44:15.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.369" endtime="20201112 09:44:15.388"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.367" endtime="20201112 09:44:15.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.364" endtime="20201112 09:44:15.389"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.996" endtime="20201112 09:44:15.390"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:14.995" endtime="20201112 09:44:15.390"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.398" endtime="20201112 09:44:15.416"></status>
</kw>
<msg timestamp="20201112 09:44:15.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.397" endtime="20201112 09:44:15.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.417" endtime="20201112 09:44:15.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.420" endtime="20201112 09:44:15.422"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.394" endtime="20201112 09:44:15.423"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.392" endtime="20201112 09:44:15.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.430" endtime="20201112 09:44:15.716"></status>
</kw>
<msg timestamp="20201112 09:44:15.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.428" endtime="20201112 09:44:15.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022000361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022088139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.720" endtime="20201112 09:44:15.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.728" endtime="20201112 09:44:15.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.426" endtime="20201112 09:44:15.730"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.424" endtime="20201112 09:44:15.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:15.735" level="INFO">${RESULT} = [{'time': 0.022088139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777800000000016e-05, 'source_diff': 8.777800000000016e-05}, {'time': 0.022178167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:15.732" endtime="20201112 09:44:15.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:15.748" level="INFO">${ACCURACY} = {'time': [0.022088139, 0.022178167, 0.022268153, 0.022358181, 0.022448181, 0.022538194, 0.022628181, 0.022718208, 0.022808208, 0.022898222, 0.022988208, 0.023078236, 0.023168222, 0.023258236, 0.023348...</msg>
<status status="PASS" starttime="20201112 09:44:15.736" endtime="20201112 09:44:15.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.753" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 09:44:15.752" endtime="20201112 09:44:15.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.755" level="INFO">VALUE: [8.777800000000016e-05, 8.74449999999985e-05, 8.777800000000016e-05, 8.790300000000029e-05, 8.784800000000148e-05, 8.744400000000249e-05, 8.752799999999991e-05, 8.744399999999902e-05, 8.750000000000077e-05, 8.783299999999897e-05, 8.74860000000012e-05, 8.769399999999927e-05, 8.742999999999945e-05, 8.744400000000249e-05, 8.776399999999712e-05, 8.777800000000016e-05, 8.772200000000188e-05, 8.788899999999725e-05, 8.768099999999918e-05, 8.756999999999862e-05, 8.742999999999945e-05, 8.756999999999862e-05, 8.773600000000145e-05, 8.775000000000102e-05, 8.787500000000115e-05, 8.797199999999866e-05, 8.748700000000068e-05, 8.745799999999859e-05, 8.713899999999997e-05, 8.76669999999996e-05, 8.738900000000022e-05, 8.784699999999854e-05, 8.787500000000115e-05, 8.750000000000077e-05, 8.737499999999718e-05, 8.762499999999743e-05, 8.743099999999893e-05, 8.784700000000201e-05, 8.773700000000093e-05, 8.763900000000047e-05, 8.772200000000188e-05, 8.748700000000068e-05, 8.743099999999893e-05, 8.761099999999786e-05, 8.775000000000102e-05, 8.742999999999945e-05, 8.762499999999743e-05, 8.744400000000249e-05, 8.775000000000102e-05, 8.756899999999915e-05]</msg>
<status status="PASS" starttime="20201112 09:44:15.754" endtime="20201112 09:44:15.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.749" endtime="20201112 09:44:15.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.759" endtime="20201112 09:44:15.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:15.762" endtime="20201112 09:44:15.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.761" endtime="20201112 09:44:15.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.757" endtime="20201112 09:44:15.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.391" endtime="20201112 09:44:15.783"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.390" endtime="20201112 09:44:15.783"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.792" endtime="20201112 09:44:15.810"></status>
</kw>
<msg timestamp="20201112 09:44:15.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.790" endtime="20201112 09:44:15.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:15.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:15.811" endtime="20201112 09:44:15.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.814" endtime="20201112 09:44:15.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.788" endtime="20201112 09:44:15.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.786" endtime="20201112 09:44:15.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:15.824" endtime="20201112 09:44:16.110"></status>
</kw>
<msg timestamp="20201112 09:44:16.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:15.822" endtime="20201112 09:44:16.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021997333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.114" endtime="20201112 09:44:16.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.122" endtime="20201112 09:44:16.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.820" endtime="20201112 09:44:16.124"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.818" endtime="20201112 09:44:16.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.129" level="INFO">${RESULT} = [{'time': 0.022085875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.854200000000048e-05, 'source_diff': 8.854200000000048e-05}, {'time': 0.022176903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.126" endtime="20201112 09:44:16.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.142" level="INFO">${ACCURACY} = {'time': [0.022085875, 0.022176903, 0.022267889, 0.022358917, 0.022449903, 0.022540931, 0.022631917, 0.022722944, 0.022813958, 0.022904958, 0.022995931, 0.023086986, 0.023177944, 0.023269, 0.023359958...</msg>
<status status="PASS" starttime="20201112 09:44:16.130" endtime="20201112 09:44:16.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.147" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.146" endtime="20201112 09:44:16.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.149" level="INFO">VALUE: [8.854200000000048e-05, 8.868100000000018e-05, 8.84999999999983e-05, 8.865299999999757e-05, 8.861099999999886e-05, 8.888900000000172e-05, 8.888900000000172e-05, 8.856899999999668e-05, 8.852699999999797e-05, 8.886099999999911e-05, 8.886200000000205e-05, 8.843000000000045e-05, 8.872199999999941e-05, 8.873600000000245e-05, 8.886099999999911e-05, 8.858299999999972e-05, 8.869400000000027e-05, 8.819499999999925e-05, 8.859700000000276e-05, 8.870899999999932e-05, 8.861099999999886e-05, 8.880500000000083e-05, 8.852800000000091e-05, 8.888899999999825e-05, 8.851400000000134e-05, 8.84860000000022e-05, 8.840300000000079e-05, 8.876299999999865e-05, 8.877800000000116e-05, 8.880500000000083e-05, 8.883299999999997e-05, 8.881899999999693e-05, 8.837499999999818e-05, 8.891699999999739e-05, 8.86800000000007e-05, 8.8945e-05, 8.844500000000297e-05, 8.888899999999825e-05, 8.854200000000048e-05, 8.881999999999987e-05, 8.888900000000172e-05, 8.843099999999993e-05, 8.852799999999744e-05, 8.872199999999941e-05, 8.844400000000002e-05, 8.837500000000165e-05, 8.870799999999984e-05, 8.890200000000181e-05, 8.854099999999754e-05, 8.886099999999911e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.148" endtime="20201112 09:44:16.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.143" endtime="20201112 09:44:16.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.153" endtime="20201112 09:44:16.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.156" endtime="20201112 09:44:16.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.155" endtime="20201112 09:44:16.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.151" endtime="20201112 09:44:16.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.784" endtime="20201112 09:44:16.177"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:15.784" endtime="20201112 09:44:16.177"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.186" endtime="20201112 09:44:16.204"></status>
</kw>
<msg timestamp="20201112 09:44:16.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.184" endtime="20201112 09:44:16.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.205" endtime="20201112 09:44:16.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.208" endtime="20201112 09:44:16.210"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.182" endtime="20201112 09:44:16.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.180" endtime="20201112 09:44:16.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.218" endtime="20201112 09:44:16.503"></status>
</kw>
<msg timestamp="20201112 09:44:16.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.216" endtime="20201112 09:44:16.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021978667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022068708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.508" endtime="20201112 09:44:16.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.516" endtime="20201112 09:44:16.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.214" endtime="20201112 09:44:16.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.212" endtime="20201112 09:44:16.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.523" level="INFO">${RESULT} = [{'time': 0.022068708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.004099999999904e-05, 'source_diff': 9.004099999999904e-05}, {'time': 0.022160722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.519" endtime="20201112 09:44:16.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.537" level="INFO">${ACCURACY} = {'time': [0.022068708, 0.022160722, 0.022252764, 0.022344736, 0.022436722, 0.022528806, 0.022620736, 0.022712778, 0.02280475, 0.022896778, 0.022988764, 0.023080792, 0.023172806, 0.023264806, 0.0233567...</msg>
<status status="PASS" starttime="20201112 09:44:16.524" endtime="20201112 09:44:16.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.542" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.540" endtime="20201112 09:44:16.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.544" level="INFO">VALUE: [9.004099999999904e-05, 8.940300000000179e-05, 8.977800000000216e-05, 8.938899999999875e-05, 8.951399999999887e-05, 8.966699999999814e-05, 8.938899999999875e-05, 8.988899999999925e-05, 8.954199999999801e-05, 8.98060000000013e-05, 8.972199999999694e-05, 8.987499999999968e-05, 8.990300000000229e-05, 8.936199999999908e-05, 8.96670000000016e-05, 8.944399999999755e-05, 8.940300000000179e-05, 8.938899999999875e-05, 8.991599999999891e-05, 8.952799999999844e-05, 8.945800000000059e-05, 8.945900000000007e-05, 8.952799999999844e-05, 8.959700000000029e-05, 8.959700000000029e-05, 8.982000000000087e-05, 8.984700000000054e-05, 8.94450000000005e-05, 8.937499999999918e-05, 8.919500000000025e-05, 8.962499999999943e-05, 8.970799999999737e-05, 8.972199999999694e-05, 8.955499999999811e-05, 8.976400000000259e-05, 8.952799999999844e-05, 8.940300000000179e-05, 8.961099999999986e-05, 8.974999999999955e-05, 8.990300000000229e-05, 8.943000000000145e-05, 8.951400000000234e-05, 8.987499999999968e-05, 8.945799999999712e-05, 8.976399999999912e-05, 8.963900000000247e-05, 8.91389999999985e-05, 8.976299999999965e-05, 8.973599999999998e-05, 8.972299999999989e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.543" endtime="20201112 09:44:16.545"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.538" endtime="20201112 09:44:16.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.548" endtime="20201112 09:44:16.549"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.551" endtime="20201112 09:44:16.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.549" endtime="20201112 09:44:16.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.546" endtime="20201112 09:44:16.571"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.178" endtime="20201112 09:44:16.572"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.178" endtime="20201112 09:44:16.572"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.580" endtime="20201112 09:44:16.599"></status>
</kw>
<msg timestamp="20201112 09:44:16.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.579" endtime="20201112 09:44:16.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.601" endtime="20201112 09:44:16.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.603" endtime="20201112 09:44:16.606"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.576" endtime="20201112 09:44:16.607"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.574" endtime="20201112 09:44:16.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.613" endtime="20201112 09:44:16.899"></status>
</kw>
<msg timestamp="20201112 09:44:16.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.612" endtime="20201112 09:44:16.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022406847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:16.903" endtime="20201112 09:44:16.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.912" endtime="20201112 09:44:16.913"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.609" endtime="20201112 09:44:16.914"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.608" endtime="20201112 09:44:16.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:16.918" level="INFO">${RESULT} = [{'time': 0.022406847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.045800000000159e-05, 'source_diff': 9.045800000000159e-05}, {'time': 0.022499875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:16.915" endtime="20201112 09:44:16.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:16.932" level="INFO">${ACCURACY} = {'time': [0.022406847, 0.022499875, 0.022592847, 0.022685931, 0.022778875, 0.022871889, 0.022964889, 0.023057903, 0.023150903, 0.023243931, 0.023336903, 0.023429944, 0.023522917, 0.023615972, 0.023708...</msg>
<status status="PASS" starttime="20201112 09:44:16.919" endtime="20201112 09:44:16.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.936" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 09:44:16.935" endtime="20201112 09:44:16.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.939" level="INFO">VALUE: [9.045800000000159e-05, 9.040299999999932e-05, 9.070799999999837e-05, 9.094499999999853e-05, 9.076400000000012e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.075000000000055e-05, 9.052799999999944e-05, 9.070899999999785e-05, 9.084699999999807e-05, 9.058300000000172e-05, 9.069500000000175e-05, 9.087500000000068e-05, 9.058400000000119e-05, 9.019400000000177e-05, 9.012499999999993e-05, 9.048600000000073e-05, 9.048600000000073e-05, 9.086099999999764e-05, 9.06939999999988e-05, 9.077799999999969e-05, 9.080599999999883e-05, 9.075000000000055e-05, 9.05000000000003e-05, 9.051399999999987e-05, 9.048600000000073e-05, 9.065299999999957e-05, 9.041699999999889e-05, 9.059800000000076e-05, 9.057000000000162e-05, 9.073600000000098e-05, 9.040299999999932e-05, 9.06939999999988e-05, 9.033300000000147e-05, 9.055499999999911e-05, 9.054099999999954e-05, 9.038899999999975e-05, 9.048600000000073e-05, 9.088900000000025e-05, 9.048599999999726e-05, 9.084699999999807e-05, 9.055500000000258e-05, 9.094499999999853e-05, 9.052799999999944e-05, 9.0639e-05, 9.06670000000026e-05, 9.047199999999769e-05, 9.059700000000129e-05, 9.08190000000024e-05]</msg>
<status status="PASS" starttime="20201112 09:44:16.937" endtime="20201112 09:44:16.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.933" endtime="20201112 09:44:16.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.942" endtime="20201112 09:44:16.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:16.946" endtime="20201112 09:44:16.965"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.944" endtime="20201112 09:44:16.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.941" endtime="20201112 09:44:16.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.573" endtime="20201112 09:44:16.966"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.572" endtime="20201112 09:44:16.967"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.975" endtime="20201112 09:44:16.993"></status>
</kw>
<msg timestamp="20201112 09:44:16.994" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.973" endtime="20201112 09:44:16.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:16.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:16.995" endtime="20201112 09:44:16.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:16.997" endtime="20201112 09:44:17.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.971" endtime="20201112 09:44:17.000"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.969" endtime="20201112 09:44:17.001"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.007" endtime="20201112 09:44:17.293"></status>
</kw>
<msg timestamp="20201112 09:44:17.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:17.006" endtime="20201112 09:44:17.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021947, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022038361, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 09:44:17.297" endtime="20201112 09:44:17.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.306" endtime="20201112 09:44:17.307"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.003" endtime="20201112 09:44:17.308"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.001" endtime="20201112 09:44:17.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.312" level="INFO">${RESULT} = [{'time': 0.022038361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.136099999999814e-05, 'source_diff': 9.136099999999814e-05}, {'time': 0.022132389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.309" endtime="20201112 09:44:17.313"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.326" level="INFO">${ACCURACY} = {'time': [0.022038361, 0.022132389, 0.022226431, 0.022320417, 0.022414389, 0.022508417, 0.022602403, 0.022696431, 0.022790403, 0.022884444, 0.022978417, 0.023072472, 0.023166431, 0.023260486, 0.023354...</msg>
<status status="PASS" starttime="20201112 09:44:17.313" endtime="20201112 09:44:17.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.330" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.329" endtime="20201112 09:44:17.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.333" level="INFO">VALUE: [9.136099999999814e-05, 9.158299999999925e-05, 9.145900000000207e-05, 9.18199999999994e-05, 9.1332999999999e-05, 9.158399999999872e-05, 9.143099999999946e-05, 9.1639000000001e-05, 9.165300000000057e-05, 9.15130000000014e-05, 9.133400000000194e-05, 9.140300000000032e-05, 9.134800000000151e-05, 9.16939999999998e-05, 9.168000000000023e-05, 9.173600000000198e-05, 9.159700000000229e-05, 9.188900000000125e-05, 9.166700000000014e-05, 9.157000000000262e-05, 9.174999999999808e-05, 9.179200000000026e-05, 9.126400000000062e-05, 9.179199999999679e-05, 9.141600000000041e-05, 9.166700000000014e-05, 9.161099999999839e-05, 9.173599999999851e-05, 9.156999999999915e-05, 9.188900000000125e-05, 9.140200000000084e-05, 9.137500000000118e-05, 9.176400000000112e-05, 9.142999999999998e-05, 9.138900000000075e-05, 9.187500000000168e-05, 9.166700000000014e-05, 9.15000000000013e-05, 9.175000000000155e-05, 9.191700000000039e-05, 9.184700000000254e-05, 9.187500000000168e-05, 9.156999999999915e-05, 9.186100000000211e-05, 9.188900000000125e-05, 9.158299999999925e-05, 9.18199999999994e-05, 9.177800000000069e-05, 9.141699999999989e-05, 9.140300000000032e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.331" endtime="20201112 09:44:17.333"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.327" endtime="20201112 09:44:17.334"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.336" endtime="20201112 09:44:17.338"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.340" endtime="20201112 09:44:17.359"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.338" endtime="20201112 09:44:17.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.335" endtime="20201112 09:44:17.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.967" endtime="20201112 09:44:17.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:16.967" endtime="20201112 09:44:17.361"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.369" endtime="20201112 09:44:17.388"></status>
</kw>
<msg timestamp="20201112 09:44:17.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.368" endtime="20201112 09:44:17.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.390" endtime="20201112 09:44:17.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.392" endtime="20201112 09:44:17.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.365" endtime="20201112 09:44:17.395"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.363" endtime="20201112 09:44:17.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.402" endtime="20201112 09:44:17.688"></status>
</kw>
<msg timestamp="20201112 09:44:17.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.401" endtime="20201112 09:44:17.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022087472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022179569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.693" endtime="20201112 09:44:17.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.701" endtime="20201112 09:44:17.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.398" endtime="20201112 09:44:17.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.396" endtime="20201112 09:44:17.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:17.708" level="INFO">${RESULT} = [{'time': 0.022179569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.209699999999932e-05, 'source_diff': 9.209699999999932e-05}, {'time': 0.022274611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:17.704" endtime="20201112 09:44:17.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:17.721" level="INFO">${ACCURACY} = {'time': [0.022179569, 0.022274611, 0.022369597, 0.022464611, 0.022559597, 0.022654625, 0.022749611, 0.022844681, 0.022939639, 0.023034653, 0.023129639, 0.023224694, 0.023319653, 0.023414681, 0.023509...</msg>
<status status="PASS" starttime="20201112 09:44:17.709" endtime="20201112 09:44:17.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.726" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 09:44:17.724" endtime="20201112 09:44:17.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.728" level="INFO">VALUE: [9.209699999999932e-05, 9.26940000000008e-05, 9.276400000000212e-05, 9.284700000000007e-05, 9.284700000000007e-05, 9.28330000000005e-05, 9.236099999999914e-05, 9.270899999999985e-05, 9.290300000000182e-05, 9.26529999999981e-05, 9.236099999999914e-05, 9.25000000000023e-05, 9.274999999999908e-05, 9.238899999999828e-05, 9.287500000000268e-05, 9.240199999999837e-05, 9.280600000000083e-05, 9.241600000000141e-05, 9.263799999999905e-05, 9.241600000000141e-05, 9.288899999999878e-05, 9.24719999999997e-05, 9.258300000000025e-05, 9.291700000000139e-05, 9.258300000000025e-05, 9.28200000000004e-05, 9.287500000000268e-05, 9.265300000000157e-05, 9.23199999999999e-05, 9.286099999999964e-05, 9.241699999999742e-05, 9.28879999999993e-05, 9.288900000000225e-05, 9.287499999999921e-05, 9.238900000000175e-05, 9.276399999999865e-05, 9.243000000000098e-05, 9.286099999999964e-05, 9.273599999999951e-05, 9.293100000000096e-05, 9.236099999999914e-05, 9.268100000000071e-05, 9.26529999999981e-05, 9.258300000000025e-05, 9.273600000000298e-05, 9.268099999999724e-05, 9.263899999999853e-05, 9.240300000000132e-05, 9.274999999999908e-05, 9.291700000000139e-05]</msg>
<status status="PASS" starttime="20201112 09:44:17.727" endtime="20201112 09:44:17.729"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.722" endtime="20201112 09:44:17.730"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.732" endtime="20201112 09:44:17.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:17.736" endtime="20201112 09:44:17.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.734" endtime="20201112 09:44:17.756"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.730" endtime="20201112 09:44:17.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.361" endtime="20201112 09:44:17.757"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.361" endtime="20201112 09:44:17.757"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.766" endtime="20201112 09:44:17.784"></status>
</kw>
<msg timestamp="20201112 09:44:17.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.764" endtime="20201112 09:44:17.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:17.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:17.786" endtime="20201112 09:44:17.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.788" endtime="20201112 09:44:17.791"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.762" endtime="20201112 09:44:17.792"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.759" endtime="20201112 09:44:17.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:17.798" endtime="20201112 09:44:18.087"></status>
</kw>
<msg timestamp="20201112 09:44:18.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:17.797" endtime="20201112 09:44:18.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022184486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022278153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.091" endtime="20201112 09:44:18.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.099" endtime="20201112 09:44:18.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.794" endtime="20201112 09:44:18.101"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.793" endtime="20201112 09:44:18.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.106" level="INFO">${RESULT} = [{'time': 0.022278153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.366699999999867e-05, 'source_diff': 9.366699999999867e-05}, {'time': 0.022374181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.103" endtime="20201112 09:44:18.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.120" level="INFO">${ACCURACY} = {'time': [0.022278153, 0.022374181, 0.022470167, 0.022566208, 0.022662181, 0.022758264, 0.022854194, 0.022950222, 0.023046208, 0.023142236, 0.023238222, 0.023334264, 0.02343025, 0.023526278, 0.0236222...</msg>
<status status="PASS" starttime="20201112 09:44:18.107" endtime="20201112 09:44:18.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.125" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.124" endtime="20201112 09:44:18.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.127" level="INFO">VALUE: [9.366699999999867e-05, 9.375000000000008e-05, 9.36529999999991e-05, 9.393000000000248e-05, 9.34590000000006e-05, 9.393100000000196e-05, 9.334700000000057e-05, 9.37079999999979e-05, 9.379099999999932e-05, 9.348600000000026e-05, 9.336100000000014e-05, 9.36529999999991e-05, 9.337499999999971e-05, 9.343100000000146e-05, 9.356900000000168e-05, 9.361099999999692e-05, 9.3639000000003e-05, 9.338899999999928e-05, 9.386100000000064e-05, 9.383400000000097e-05, 9.390299999999935e-05, 9.379100000000279e-05, 9.383400000000097e-05, 9.376399999999965e-05, 9.351400000000287e-05, 9.349999999999983e-05, 9.352799999999897e-05, 9.354199999999854e-05, 9.34720000000007e-05, 9.387500000000021e-05, 9.352799999999897e-05, 9.359800000000029e-05, 9.348600000000026e-05, 9.340299999999885e-05, 9.329199999999829e-05, 9.34590000000006e-05, 9.381999999999793e-05, 9.377799999999922e-05, 9.343100000000146e-05, 9.390199999999987e-05, 9.336100000000014e-05, 9.355499999999864e-05, 9.345799999999765e-05, 9.392999999999901e-05, 9.387500000000021e-05, 9.356900000000168e-05, 9.363899999999953e-05, 9.349999999999983e-05, 9.365300000000257e-05, 9.349999999999983e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.126" endtime="20201112 09:44:18.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.121" endtime="20201112 09:44:18.132"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.134" endtime="20201112 09:44:18.136"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.138" endtime="20201112 09:44:18.157"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.136" endtime="20201112 09:44:18.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.133" endtime="20201112 09:44:18.158"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.758" endtime="20201112 09:44:18.159"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:17.757" endtime="20201112 09:44:18.159"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.167" endtime="20201112 09:44:18.186"></status>
</kw>
<msg timestamp="20201112 09:44:18.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.166" endtime="20201112 09:44:18.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.188" endtime="20201112 09:44:18.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.190" endtime="20201112 09:44:18.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.163" endtime="20201112 09:44:18.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.161" endtime="20201112 09:44:18.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.200" endtime="20201112 09:44:18.486"></status>
</kw>
<msg timestamp="20201112 09:44:18.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.199" endtime="20201112 09:44:18.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022353333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022447569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.491" endtime="20201112 09:44:18.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.499" endtime="20201112 09:44:18.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.196" endtime="20201112 09:44:18.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.194" endtime="20201112 09:44:18.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.506" level="INFO">${RESULT} = [{'time': 0.022447569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.423600000000101e-05, 'source_diff': 9.423600000000101e-05}, {'time': 0.022544597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.502" endtime="20201112 09:44:18.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.519" level="INFO">${ACCURACY} = {'time': [0.022447569, 0.022544597, 0.022641583, 0.022738611, 0.022835597, 0.022932625, 0.023029625, 0.023126653, 0.023223625, 0.023320667, 0.023417639, 0.023514667, 0.023611653, 0.023708681, 0.023805...</msg>
<status status="PASS" starttime="20201112 09:44:18.507" endtime="20201112 09:44:18.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.523" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.522" endtime="20201112 09:44:18.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.526" level="INFO">VALUE: [9.423600000000101e-05, 9.459699999999835e-05, 9.448600000000126e-05, 9.461099999999792e-05, 9.431899999999896e-05, 9.488900000000078e-05, 9.4333000000002e-05, 9.475000000000108e-05, 9.452799999999997e-05, 9.476400000000065e-05, 9.463900000000053e-05, 9.461099999999792e-05, 9.438900000000028e-05, 9.444499999999856e-05, 9.472299999999795e-05, 9.444399999999908e-05, 9.443099999999899e-05, 9.461099999999792e-05, 9.488900000000078e-05, 9.466699999999967e-05, 9.438900000000028e-05, 9.452799999999997e-05, 9.43469999999981e-05, 9.490300000000035e-05, 9.450000000000083e-05, 9.452799999999997e-05, 9.41529999999996e-05, 9.484799999999807e-05, 9.467999999999976e-05, 9.487499999999774e-05, 9.469499999999881e-05, 9.437500000000071e-05, 9.437499999999724e-05, 9.491599999999698e-05, 9.436099999999767e-05, 9.450000000000083e-05, 9.458300000000225e-05, 9.475000000000108e-05, 9.461100000000139e-05, 9.447199999999822e-05, 9.441699999999942e-05, 9.463900000000053e-05, 9.46530000000001e-05, 9.459800000000129e-05, 9.452799999999997e-05, 9.475000000000108e-05, 9.48200000000024e-05, 9.434800000000104e-05, 9.440200000000037e-05, 9.450000000000083e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.525" endtime="20201112 09:44:18.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.520" endtime="20201112 09:44:18.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.530" endtime="20201112 09:44:18.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.533" endtime="20201112 09:44:18.552"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.531" endtime="20201112 09:44:18.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.528" endtime="20201112 09:44:18.553"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.160" endtime="20201112 09:44:18.554"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.159" endtime="20201112 09:44:18.554"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.562" endtime="20201112 09:44:18.581"></status>
</kw>
<msg timestamp="20201112 09:44:18.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.561" endtime="20201112 09:44:18.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.582" endtime="20201112 09:44:18.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.585" endtime="20201112 09:44:18.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.558" endtime="20201112 09:44:18.588"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.556" endtime="20201112 09:44:18.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.595" endtime="20201112 09:44:18.881"></status>
</kw>
<msg timestamp="20201112 09:44:18.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.593" endtime="20201112 09:44:18.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021868583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021963667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.885" endtime="20201112 09:44:18.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.894" endtime="20201112 09:44:18.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.591" endtime="20201112 09:44:18.896"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.589" endtime="20201112 09:44:18.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:18.900" level="INFO">${RESULT} = [{'time': 0.021963667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.508399999999875e-05, 'source_diff': 9.508399999999875e-05}, {'time': 0.022061694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:18.897" endtime="20201112 09:44:18.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:18.914" level="INFO">${ACCURACY} = {'time': [0.021963667, 0.022061694, 0.022159681, 0.022257708, 0.022355694, 0.022453722, 0.022551708, 0.022649736, 0.022747722, 0.02284575, 0.022943736, 0.023041764, 0.02313975, 0.023237792, 0.02333576...</msg>
<status status="PASS" starttime="20201112 09:44:18.901" endtime="20201112 09:44:18.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.918" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 09:44:18.917" endtime="20201112 09:44:18.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.921" level="INFO">VALUE: [9.508399999999875e-05, 9.543000000000051e-05, 9.563900000000153e-05, 9.555500000000064e-05, 9.531899999999996e-05, 9.587499999999874e-05, 9.573599999999904e-05, 9.573599999999904e-05, 9.584700000000307e-05, 9.541700000000042e-05, 9.543000000000051e-05, 9.588899999999831e-05, 9.568100000000024e-05, 9.55140000000014e-05, 9.551399999999793e-05, 9.543000000000051e-05, 9.540300000000085e-05, 9.565199999999816e-05, 9.55140000000014e-05, 9.533299999999953e-05, 9.549999999999836e-05, 9.556900000000021e-05, 9.540200000000137e-05, 9.587499999999874e-05, 9.572199999999947e-05, 9.537500000000171e-05, 9.51530000000006e-05, 9.565200000000162e-05, 9.54859999999988e-05, 9.555600000000011e-05, 9.558299999999978e-05, 9.591700000000092e-05, 9.543099999999999e-05, 9.555499999999717e-05, 9.531999999999943e-05, 9.580500000000089e-05, 9.577800000000122e-05, 9.54859999999988e-05, 9.549999999999836e-05, 9.586099999999917e-05, 9.563900000000153e-05, 9.566700000000067e-05, 9.580499999999742e-05, 9.537499999999824e-05, 9.563900000000153e-05, 9.58469999999996e-05, 9.562499999999849e-05, 9.577800000000122e-05, 9.547199999999922e-05, 9.545799999999965e-05]</msg>
<status status="PASS" starttime="20201112 09:44:18.919" endtime="20201112 09:44:18.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.915" endtime="20201112 09:44:18.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.924" endtime="20201112 09:44:18.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:18.928" endtime="20201112 09:44:18.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.926" endtime="20201112 09:44:18.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.923" endtime="20201112 09:44:18.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.555" endtime="20201112 09:44:18.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.554" endtime="20201112 09:44:18.949"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.957" endtime="20201112 09:44:18.977"></status>
</kw>
<msg timestamp="20201112 09:44:18.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.956" endtime="20201112 09:44:18.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:18.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:18.978" endtime="20201112 09:44:18.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.981" endtime="20201112 09:44:18.983"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.953" endtime="20201112 09:44:18.984"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.951" endtime="20201112 09:44:18.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:18.991" endtime="20201112 09:44:19.277"></status>
</kw>
<msg timestamp="20201112 09:44:19.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:18.989" endtime="20201112 09:44:19.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022304264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022401111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.281" endtime="20201112 09:44:19.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.289" endtime="20201112 09:44:19.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.987" endtime="20201112 09:44:19.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.985" endtime="20201112 09:44:19.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.296" level="INFO">${RESULT} = [{'time': 0.022401111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.68470000000006e-05, 'source_diff': 9.68470000000006e-05}, {'time': 0.022500153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:19.292" endtime="20201112 09:44:19.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.309" level="INFO">${ACCURACY} = {'time': [0.022401111, 0.022500153, 0.022599125, 0.022698181, 0.022797208, 0.022896264, 0.022995181, 0.023094194, 0.023193181, 0.023292222, 0.023391194, 0.023490222, 0.023589208, 0.023688236, 0.023787...</msg>
<status status="PASS" starttime="20201112 09:44:19.297" endtime="20201112 09:44:19.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.314" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.313" endtime="20201112 09:44:19.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.316" level="INFO">VALUE: [9.68470000000006e-05, 9.677799999999875e-05, 9.652800000000197e-05, 9.640300000000185e-05, 9.69019999999994e-05, 9.658300000000078e-05, 9.679199999999832e-05, 9.686100000000017e-05, 9.680600000000136e-05, 9.68470000000006e-05, 9.651299999999946e-05, 9.661099999999992e-05, 9.687499999999974e-05, 9.641700000000142e-05, 9.638899999999881e-05, 9.674999999999961e-05, 9.654200000000154e-05, 9.657000000000068e-05, 9.655600000000111e-05, 9.682000000000093e-05, 9.679199999999832e-05, 9.663899999999906e-05, 9.670900000000038e-05, 9.636199999999914e-05, 9.661099999999992e-05, 9.691599999999898e-05, 9.655499999999817e-05, 9.69019999999994e-05, 9.642999999999805e-05, 9.686100000000017e-05, 9.65409999999986e-05, 9.643000000000151e-05, 9.649999999999936e-05, 9.661099999999992e-05, 9.643099999999752e-05, 9.669500000000081e-05, 9.638899999999881e-05, 9.6721999999997e-05, 9.66660000000022e-05, 9.645900000000013e-05, 9.662499999999949e-05, 9.659700000000035e-05, 9.686100000000017e-05, 9.655499999999817e-05, 9.654200000000154e-05, 9.688899999999931e-05, 9.631899999999749e-05, 9.672200000000047e-05, 9.636099999999967e-05, 9.643099999999752e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.315" endtime="20201112 09:44:19.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.310" endtime="20201112 09:44:19.318"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.320" endtime="20201112 09:44:19.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.323" endtime="20201112 09:44:19.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.322" endtime="20201112 09:44:19.343"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.318" endtime="20201112 09:44:19.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.949" endtime="20201112 09:44:19.344"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:18.949" endtime="20201112 09:44:19.344"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.353" endtime="20201112 09:44:19.371"></status>
</kw>
<msg timestamp="20201112 09:44:19.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.351" endtime="20201112 09:44:19.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.372" endtime="20201112 09:44:19.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.375" endtime="20201112 09:44:19.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.349" endtime="20201112 09:44:19.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.347" endtime="20201112 09:44:19.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.385" endtime="20201112 09:44:19.670"></status>
</kw>
<msg timestamp="20201112 09:44:19.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.383" endtime="20201112 09:44:19.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022077111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022175111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.674" endtime="20201112 09:44:19.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.682" endtime="20201112 09:44:19.684"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.381" endtime="20201112 09:44:19.685"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.379" endtime="20201112 09:44:19.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:19.689" level="INFO">${RESULT} = [{'time': 0.022175111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.800000000000086e-05, 'source_diff': 9.800000000000086e-05}, {'time': 0.022275153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:19.686" endtime="20201112 09:44:19.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:19.703" level="INFO">${ACCURACY} = {'time': [0.022175111, 0.022275153, 0.022375125, 0.022475167, 0.022575181, 0.022675194, 0.022775181, 0.022875194, 0.022975181, 0.023075208, 0.023175194, 0.023275222, 0.023375222, 0.02347525, 0.0235742...</msg>
<status status="PASS" starttime="20201112 09:44:19.690" endtime="20201112 09:44:19.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.708" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 09:44:19.707" endtime="20201112 09:44:19.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.710" level="INFO">VALUE: [9.800000000000086e-05, 9.78609999999977e-05, 9.729199999999882e-05, 9.754199999999907e-05, 9.759800000000082e-05, 9.773599999999757e-05, 9.790299999999988e-05, 9.755500000000264e-05, 9.754199999999907e-05, 9.761100000000092e-05, 9.780499999999942e-05, 9.781900000000246e-05, 9.763900000000006e-05, 9.765299999999963e-05, 9.713899999999956e-05, 9.786100000000117e-05, 9.761100000000092e-05, 9.781999999999846e-05, 9.75279999999995e-05, 9.783299999999856e-05, 9.773600000000104e-05, 9.738800000000034e-05, 9.769499999999834e-05, 9.737500000000024e-05, 9.775000000000061e-05, 9.763800000000059e-05, 9.752700000000003e-05, 9.780499999999942e-05, 9.737499999999677e-05, 9.766599999999973e-05, 9.775000000000061e-05, 9.751399999999993e-05, 9.783300000000203e-05, 9.779099999999985e-05, 9.769399999999887e-05, 9.755599999999864e-05, 9.752800000000297e-05, 9.738899999999981e-05, 9.750000000000036e-05, 9.761199999999692e-05, 9.755499999999917e-05, 9.74860000000008e-05, 9.758400000000125e-05, 9.781899999999899e-05, 9.783299999999856e-05, 9.773600000000104e-05, 9.761100000000092e-05, 9.744399999999862e-05, 9.741699999999895e-05, 9.776400000000018e-05]</msg>
<status status="PASS" starttime="20201112 09:44:19.709" endtime="20201112 09:44:19.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.704" endtime="20201112 09:44:19.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.714" endtime="20201112 09:44:19.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:19.718" endtime="20201112 09:44:19.737"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.716" endtime="20201112 09:44:19.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.712" endtime="20201112 09:44:19.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.345" endtime="20201112 09:44:19.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.345" endtime="20201112 09:44:19.738"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.747" endtime="20201112 09:44:19.766"></status>
</kw>
<msg timestamp="20201112 09:44:19.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.746" endtime="20201112 09:44:19.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:19.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:19.768" endtime="20201112 09:44:19.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.771" endtime="20201112 09:44:19.773"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.743" endtime="20201112 09:44:19.774"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.741" endtime="20201112 09:44:19.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:19.781" endtime="20201112 09:44:20.067"></status>
</kw>
<msg timestamp="20201112 09:44:20.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:19.779" endtime="20201112 09:44:20.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022004694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.071" endtime="20201112 09:44:20.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.079" endtime="20201112 09:44:20.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.777" endtime="20201112 09:44:20.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.775" endtime="20201112 09:44:20.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.086" level="INFO">${RESULT} = [{'time': 0.022102875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.818099999999927e-05, 'source_diff': 9.818099999999927e-05}, {'time': 0.022203917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.083" endtime="20201112 09:44:20.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.099" level="INFO">${ACCURACY} = {'time': [0.022102875, 0.022203917, 0.022304903, 0.022405931, 0.022506903, 0.022607931, 0.022708917, 0.022809958, 0.022910931, 0.023011972, 0.023112944, 0.023214, 0.023314972, 0.023415986, 0.023516972...</msg>
<status status="PASS" starttime="20201112 09:44:20.087" endtime="20201112 09:44:20.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.104" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.103" endtime="20201112 09:44:20.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.106" level="INFO">VALUE: [9.818099999999927e-05, 9.84730000000017e-05, 9.873600000000204e-05, 9.855599999999964e-05, 9.840300000000038e-05, 9.861200000000139e-05, 9.887499999999827e-05, 9.879100000000085e-05, 9.874999999999814e-05, 9.865299999999716e-05, 9.862500000000149e-05, 9.843099999999952e-05, 9.841600000000048e-05, 9.848599999999832e-05, 9.888900000000131e-05, 9.879200000000032e-05, 9.85280000000005e-05, 9.859699999999888e-05, 9.873600000000204e-05, 9.887500000000174e-05, 9.851400000000093e-05, 9.883299999999956e-05, 9.81669999999997e-05, 9.855500000000017e-05, 9.859800000000182e-05, 9.843000000000005e-05, 9.857000000000268e-05, 9.843000000000005e-05, 9.859699999999888e-05, 9.859700000000235e-05, 9.845800000000265e-05, 9.852799999999703e-05, 9.887499999999827e-05, 9.879200000000032e-05, 9.881999999999946e-05, 9.845899999999866e-05, 9.855599999999964e-05, 9.865300000000063e-05, 9.843099999999952e-05, 9.88479999999986e-05, 9.837500000000124e-05, 9.879100000000085e-05, 9.876400000000118e-05, 9.836100000000167e-05, 9.855500000000017e-05, 9.845799999999919e-05, 9.852799999999703e-05, 9.869399999999987e-05, 9.863899999999759e-05, 9.888899999999784e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.105" endtime="20201112 09:44:20.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.100" endtime="20201112 09:44:20.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.110" endtime="20201112 09:44:20.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.113" endtime="20201112 09:44:20.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.112" endtime="20201112 09:44:20.133"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.108" endtime="20201112 09:44:20.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.739" endtime="20201112 09:44:20.134"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:19.739" endtime="20201112 09:44:20.134"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.143" endtime="20201112 09:44:20.163"></status>
</kw>
<msg timestamp="20201112 09:44:20.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.141" endtime="20201112 09:44:20.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.164" endtime="20201112 09:44:20.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.167" endtime="20201112 09:44:20.169"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.139" endtime="20201112 09:44:20.170"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.137" endtime="20201112 09:44:20.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.177" endtime="20201112 09:44:20.462"></status>
</kw>
<msg timestamp="20201112 09:44:20.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.175" endtime="20201112 09:44:20.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022369653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022469306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.466" endtime="20201112 09:44:20.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.474" endtime="20201112 09:44:20.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.173" endtime="20201112 09:44:20.476"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.171" endtime="20201112 09:44:20.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.481" level="INFO">${RESULT} = [{'time': 0.022469306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.965300000000163e-05, 'source_diff': 9.965300000000163e-05}, {'time': 0.022571389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.477" endtime="20201112 09:44:20.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.494" level="INFO">${ACCURACY} = {'time': [0.022469306, 0.022571389, 0.022673347, 0.022775333, 0.022877319, 0.022979347, 0.023081333, 0.023183403, 0.023285347, 0.023387389, 0.023489375, 0.023591417, 0.023693389, 0.023795472, 0.023897...</msg>
<status status="PASS" starttime="20201112 09:44:20.482" endtime="20201112 09:44:20.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.499" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.498" endtime="20201112 09:44:20.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.501" level="INFO">VALUE: [9.965300000000163e-05, 9.959699999999988e-05, 9.951399999999846e-05, 9.99159999999985e-05, 9.933300000000006e-05, 9.933300000000006e-05, 9.94999999999989e-05, 9.984700000000013e-05, 9.938900000000181e-05, 9.961100000000292e-05, 9.956900000000074e-05, 9.95280000000015e-05, 9.979199999999785e-05, 9.995800000000069e-05, 9.937500000000224e-05, 9.954200000000107e-05, 9.974999999999914e-05, 9.970800000000044e-05, 9.970899999999991e-05, 9.926400000000168e-05, 9.95410000000016e-05, 9.980500000000142e-05, 9.977699999999881e-05, 9.969400000000087e-05, 9.934699999999963e-05, 9.940299999999791e-05, 9.956900000000074e-05, 9.941700000000095e-05, 9.954200000000107e-05, 9.988899999999884e-05, 9.976399999999871e-05, 9.991600000000198e-05, 9.977800000000175e-05, 9.9722e-05, 9.94999999999989e-05, 9.956900000000074e-05, 9.95549999999977e-05, 9.988899999999884e-05, 9.948599999999932e-05, 9.94999999999989e-05, 9.937499999999877e-05, 9.991700000000145e-05, 9.963899999999859e-05, 9.947199999999976e-05, 9.954200000000107e-05, 9.990300000000188e-05, 9.974999999999914e-05, 9.951399999999846e-05, 9.962499999999902e-05, 9.968100000000077e-05]</msg>
<status status="PASS" starttime="20201112 09:44:20.500" endtime="20201112 09:44:20.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.495" endtime="20201112 09:44:20.503"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.505" endtime="20201112 09:44:20.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.508" endtime="20201112 09:44:20.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.507" endtime="20201112 09:44:20.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.503" endtime="20201112 09:44:20.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.135" endtime="20201112 09:44:20.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.135" endtime="20201112 09:44:20.529"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.538" endtime="20201112 09:44:20.556"></status>
</kw>
<msg timestamp="20201112 09:44:20.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.536" endtime="20201112 09:44:20.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.557" endtime="20201112 09:44:20.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.560" endtime="20201112 09:44:20.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.534" endtime="20201112 09:44:20.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.531" endtime="20201112 09:44:20.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.570" endtime="20201112 09:44:20.856"></status>
</kw>
<msg timestamp="20201112 09:44:20.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:20.569" endtime="20201112 09:44:20.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021937667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220385, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:20.860" endtime="20201112 09:44:20.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.868" endtime="20201112 09:44:20.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.566" endtime="20201112 09:44:20.870"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.564" endtime="20201112 09:44:20.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:20.874" level="INFO">${RESULT} = [{'time': 0.0220385, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010083299999999809, 'source_diff': 0.00010083299999999809}, {'time': 0.022141528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:20.871" endtime="20201112 09:44:20.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:20.888" level="INFO">${ACCURACY} = {'time': [0.0220385, 0.022141528, 0.022244514, 0.022347542, 0.022450528, 0.022553556, 0.022656542, 0.022759569, 0.022862569, 0.022965597, 0.023068583, 0.023171611, 0.023274597, 0.023377639, 0.02348062...</msg>
<status status="PASS" starttime="20201112 09:44:20.875" endtime="20201112 09:44:20.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.892" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 09:44:20.891" endtime="20201112 09:44:20.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.895" level="INFO">VALUE: [0.00010083299999999809, 0.00010088899999999984, 0.00010066699999999873, 0.0001008610000000007, 0.00010057000000000121, 0.0001005419999999986, 0.00010077799999999928, 0.0001008610000000007, 0.00010070799999999797, 0.00010055500000000217, 0.00010073600000000058, 0.0001006670000000022, 0.00010051399999999946, 0.0001004999999999999, 0.00010090300000000288, 0.0001003610000000002, 0.00010083299999999809, 0.00010075000000000014, 0.00010063899999999959, 0.00010038899999999934, 0.0001003610000000002, 0.00010058400000000078, 0.0001004999999999999, 0.00010051299999999999, 0.00010037499999999977, 0.00010069400000000187, 0.00010043000000000205, 0.0001004999999999999, 0.00010080599999999842, 0.00010062500000000002, 0.00010066699999999873, 0.00010059700000000088, 0.00010069499999999787, 0.0001008610000000007, 0.00010054200000000207, 0.00010052799999999903, 0.00010047200000000076, 0.000100722000000001, 0.00010079199999999885, 0.00010063800000000012, 0.00010052699999999956, 0.00010045799999999772, 0.0001008610000000007, 0.00010040299999999891, 0.00010063899999999959, 0.00010087500000000027, 0.00010051400000000293, 0.00010062500000000002, 0.0001006939999999984, 0.00010076400000000318]</msg>
<status status="PASS" starttime="20201112 09:44:20.893" endtime="20201112 09:44:20.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.888" endtime="20201112 09:44:20.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.898" endtime="20201112 09:44:20.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:20.902" endtime="20201112 09:44:20.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.900" endtime="20201112 09:44:20.921"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.896" endtime="20201112 09:44:20.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.530" endtime="20201112 09:44:20.922"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.529" endtime="20201112 09:44:20.922"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.931" endtime="20201112 09:44:20.950"></status>
</kw>
<msg timestamp="20201112 09:44:20.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.929" endtime="20201112 09:44:20.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:20.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:20.951" endtime="20201112 09:44:20.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.954" endtime="20201112 09:44:20.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.927" endtime="20201112 09:44:20.957"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.925" endtime="20201112 09:44:20.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:20.964" endtime="20201112 09:44:21.251"></status>
</kw>
<msg timestamp="20201112 09:44:21.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:20.962" endtime="20201112 09:44:21.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.255" endtime="20201112 09:44:21.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.263" endtime="20201112 09:44:21.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.960" endtime="20201112 09:44:21.265"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.958" endtime="20201112 09:44:21.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.270" level="INFO">${RESULT} = [{'time': 0.022098319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010133300000000206, 'source_diff': 0.00010133300000000206}, {'time': 0.022202347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:21.266" endtime="20201112 09:44:21.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.284" level="INFO">${ACCURACY} = {'time': [0.022098319, 0.022202347, 0.022306333, 0.022410375, 0.022514347, 0.022618417, 0.022722361, 0.022826403, 0.022930389, 0.023034417, 0.023138417, 0.023242431, 0.023346472, 0.023450444, 0.023554...</msg>
<status status="PASS" starttime="20201112 09:44:21.271" endtime="20201112 09:44:21.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.288" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.287" endtime="20201112 09:44:21.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.291" level="INFO">VALUE: [0.00010133300000000206, 0.00010142999999999958, 0.00010167999999999983, 0.00010161100000000145, 0.00010179100000000038, 0.00010145899999999819, 0.00010145799999999872, 0.00010143099999999905, 0.00010177800000000028, 0.00010137500000000077, 0.00010143100000000252, 0.00010165300000000016, 0.00010167999999999983, 0.00010159700000000188, 0.00010188900000000084, 0.00010145900000000166, 0.00010137500000000077, 0.00010156899999999927, 0.0001018610000000017, 0.00010159699999999841, 0.00010170799999999897, 0.00010183299999999909, 0.00010165300000000016, 0.00010175000000000115, 0.00010184699999999866, 0.00010175000000000115, 0.00010182000000000246, 0.000101416, 0.000101819999999999, 0.0001016939999999994, 0.00010162500000000102, 0.00010148599999999786, 0.00010151300000000099, 0.00010169500000000234, 0.00010149999999999743, 0.00010140299999999991, 0.00010163899999999712, 0.00010191699999999998, 0.00010181900000000299, 0.00010194499999999912, 0.00010183299999999909, 0.00010143099999999905, 0.00010151400000000046, 0.00010159699999999841, 0.0001015419999999996, 0.0001018619999999977, 0.00010130599999999892, 0.00010170800000000244, 0.00010152800000000003, 0.00010190300000000041]</msg>
<status status="PASS" starttime="20201112 09:44:21.289" endtime="20201112 09:44:21.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.285" endtime="20201112 09:44:21.292"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.294" endtime="20201112 09:44:21.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.298" endtime="20201112 09:44:21.317"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.296" endtime="20201112 09:44:21.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.293" endtime="20201112 09:44:21.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.923" endtime="20201112 09:44:21.318"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:20.923" endtime="20201112 09:44:21.319"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.327" endtime="20201112 09:44:21.346"></status>
</kw>
<msg timestamp="20201112 09:44:21.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.326" endtime="20201112 09:44:21.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.348" endtime="20201112 09:44:21.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.350" endtime="20201112 09:44:21.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.323" endtime="20201112 09:44:21.353"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.321" endtime="20201112 09:44:21.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.360" endtime="20201112 09:44:21.646"></status>
</kw>
<msg timestamp="20201112 09:44:21.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:21.359" endtime="20201112 09:44:21.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021996028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0220985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:44:21.650" endtime="20201112 09:44:21.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.658" endtime="20201112 09:44:21.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.356" endtime="20201112 09:44:21.660"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.354" endtime="20201112 09:44:21.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:21.665" level="INFO">${RESULT} = [{'time': 0.0220985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010247199999999929, 'source_diff': 0.00010247199999999929}, {'time': 0.022203583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 09:44:21.662" endtime="20201112 09:44:21.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:21.678" level="INFO">${ACCURACY} = {'time': [0.0220985, 0.022203583, 0.022308528, 0.022413542, 0.022518542, 0.022623569, 0.022728542, 0.022833597, 0.022938556, 0.023043597, 0.023148611, 0.023253597, 0.023358597, 0.023463625, 0.02356861...</msg>
<status status="PASS" starttime="20201112 09:44:21.666" endtime="20201112 09:44:21.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.683" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 09:44:21.682" endtime="20201112 09:44:21.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.685" level="INFO">VALUE: [0.00010247199999999929, 0.00010279099999999791, 0.00010238900000000134, 0.00010279200000000085, 0.00010248599999999886, 0.00010247199999999929, 0.0001023610000000022, 0.00010245799999999972, 0.00010259799999999888, 0.00010241599999999754, 0.00010284699999999966, 0.00010263900000000159, 0.00010286099999999923, 0.00010265299999999769, 0.00010240300000000091, 0.00010245799999999972, 0.00010275000000000215, 0.00010293100000000055, 0.00010290299999999794, 0.00010245899999999919, 0.00010290299999999794, 0.0001025000000000019, 0.00010241699999999701, 0.00010262499999999855, 0.0001023619999999982, 0.00010284699999999966, 0.00010280500000000095, 0.00010272199999999954, 0.00010262499999999855, 0.00010263899999999812, 0.00010231900000000002, 0.00010279200000000085, 0.00010247199999999929, 0.00010291699999999751, 0.00010286099999999923, 0.00010270899999999944, 0.0001026810000000003, 0.00010267999999999736, 0.0001025420000000006, 0.00010244400000000015, 0.00010245799999999972, 0.00010262500000000202, 0.00010281900000000052, 0.00010243100000000005, 0.00010252800000000103, 0.00010265300000000116, 0.00010252799999999757, 0.00010290299999999794, 0.00010277799999999782, 0.00010290300000000141]</msg>
<status status="PASS" starttime="20201112 09:44:21.684" endtime="20201112 09:44:21.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.679" endtime="20201112 09:44:21.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.689" endtime="20201112 09:44:21.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:21.692" endtime="20201112 09:44:21.711"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.690" endtime="20201112 09:44:21.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.687" endtime="20201112 09:44:21.712"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.319" endtime="20201112 09:44:21.713"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.319" endtime="20201112 09:44:21.713"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.721" endtime="20201112 09:44:21.741"></status>
</kw>
<msg timestamp="20201112 09:44:21.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.720" endtime="20201112 09:44:21.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:21.743" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:21.742" endtime="20201112 09:44:21.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.745" endtime="20201112 09:44:21.747"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.717" endtime="20201112 09:44:21.748"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.715" endtime="20201112 09:44:21.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:21.755" endtime="20201112 09:44:22.041"></status>
</kw>
<msg timestamp="20201112 09:44:22.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:21.753" endtime="20201112 09:44:22.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022027333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.046" endtime="20201112 09:44:22.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.054" endtime="20201112 09:44:22.055"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.751" endtime="20201112 09:44:22.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.749" endtime="20201112 09:44:22.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.060" level="INFO">${RESULT} = [{'time': 0.022027333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010329099999999841, 'source_diff': 0.00010329099999999841}, {'time': 0.022133292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.057" endtime="20201112 09:44:22.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.073" level="INFO">${ACCURACY} = {'time': [0.022027333, 0.022133292, 0.022239292, 0.022345319, 0.022451292, 0.022557333, 0.022663306, 0.022769347, 0.022875375, 0.022981361, 0.023087431, 0.023193375, 0.023299361, 0.023405389, 0.023511...</msg>
<status status="PASS" starttime="20201112 09:44:22.061" endtime="20201112 09:44:22.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.078" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.077" endtime="20201112 09:44:22.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.080" level="INFO">VALUE: [0.00010329099999999841, 0.0001036949999999974, 0.00010361099999999998, 0.00010352699999999909, 0.00010370900000000044, 0.00010363899999999912, 0.00010384800000000013, 0.00010361099999999998, 0.0001035420000000016, 0.00010377799999999882, 0.00010363899999999912, 0.00010362499999999955, 0.00010363900000000259, 0.00010340299999999844, 0.00010344500000000062, 0.00010341699999999801, 0.00010336099999999973, 0.00010351400000000247, 0.00010358400000000031, 0.00010372199999999707, 0.00010379200000000185, 0.00010395800000000122, 0.00010384700000000066, 0.00010388900000000284, 0.00010362499999999955, 0.00010351400000000247, 0.000103513999999999, 0.00010393099999999808, 0.00010377800000000229, 0.00010367999999999836, 0.00010376399999999925, 0.00010366699999999826, 0.000103513999999999, 0.0001038749999999998, 0.00010343100000000105, 0.00010388899999999937, 0.00010343100000000105, 0.0001037079999999975, 0.00010357000000000074, 0.00010376400000000272, 0.00010343000000000158, 0.00010384700000000066, 0.00010345800000000072, 0.00010361099999999998, 0.0001036940000000014, 0.0001035420000000016, 0.0001038749999999998, 0.00010358300000000084, 0.0001033749999999993, 0.00010348599999999986]</msg>
<status status="PASS" starttime="20201112 09:44:22.079" endtime="20201112 09:44:22.081"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.074" endtime="20201112 09:44:22.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.084" endtime="20201112 09:44:22.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.087" endtime="20201112 09:44:22.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.086" endtime="20201112 09:44:22.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.082" endtime="20201112 09:44:22.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.714" endtime="20201112 09:44:22.108"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:21.713" endtime="20201112 09:44:22.108"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.117" endtime="20201112 09:44:22.137"></status>
</kw>
<msg timestamp="20201112 09:44:22.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.115" endtime="20201112 09:44:22.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.138" endtime="20201112 09:44:22.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.141" endtime="20201112 09:44:22.143"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.113" endtime="20201112 09:44:22.144"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.111" endtime="20201112 09:44:22.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.151" endtime="20201112 09:44:22.436"></status>
</kw>
<msg timestamp="20201112 09:44:22.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.149" endtime="20201112 09:44:22.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022411681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022515861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.440" endtime="20201112 09:44:22.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.448" endtime="20201112 09:44:22.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.147" endtime="20201112 09:44:22.450"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.145" endtime="20201112 09:44:22.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.455" level="INFO">${RESULT} = [{'time': 0.022515861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010418000000000233, 'source_diff': 0.00010418000000000233}, {'time': 0.022622903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.451" endtime="20201112 09:44:22.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.468" level="INFO">${ACCURACY} = {'time': [0.022515861, 0.022622903, 0.022729889, 0.022836917, 0.022943889, 0.023050931, 0.023157917, 0.023264944, 0.023371944, 0.023478972, 0.023586, 0.023692972, 0.023799958, 0.023907056, 0.024013986...</msg>
<status status="PASS" starttime="20201112 09:44:22.456" endtime="20201112 09:44:22.468"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.472" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.471" endtime="20201112 09:44:22.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.475" level="INFO">VALUE: [0.00010418000000000233, 0.00010472199999999807, 0.00010459699999999794, 0.00010452800000000304, 0.00010462499999999708, 0.00010459800000000088, 0.00010461100000000098, 0.00010455499999999923, 0.00010441599999999954, 0.00010475000000000068, 0.00010476400000000025, 0.00010442999999999911, 0.00010463900000000012, 0.00010494499999999865, 0.00010472200000000154, 0.00010462500000000055, 0.00010448600000000086, 0.00010438899999999987, 0.0001047360000000011, 0.000104514, 0.00010456999999999828, 0.00010481999999999853, 0.00010480599999999896, 0.00010476300000000077, 0.00010479099999999991, 0.00010473599999999764, 0.00010490200000000047, 0.00010466599999999979, 0.00010459700000000141, 0.00010484700000000166, 0.00010461200000000045, 0.00010477799999999982, 0.00010444400000000215, 0.00010466699999999926, 0.00010444499999999815, 0.00010494399999999918, 0.0001045559999999987, 0.00010450000000000043, 0.00010457000000000174, 0.0001048750000000008, 0.00010484699999999819, 0.00010470800000000197, 0.00010430500000000245, 0.00010475000000000068, 0.0001047360000000011, 0.00010480499999999948, 0.00010447200000000129, 0.0001045559999999987, 0.00010466699999999926, 0.00010438899999999987]</msg>
<status status="PASS" starttime="20201112 09:44:22.473" endtime="20201112 09:44:22.475"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.469" endtime="20201112 09:44:22.476"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.478" endtime="20201112 09:44:22.480"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.482" endtime="20201112 09:44:22.501"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.480" endtime="20201112 09:44:22.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.477" endtime="20201112 09:44:22.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.109" endtime="20201112 09:44:22.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.109" endtime="20201112 09:44:22.502"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.511" endtime="20201112 09:44:22.531"></status>
</kw>
<msg timestamp="20201112 09:44:22.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.510" endtime="20201112 09:44:22.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.532" endtime="20201112 09:44:22.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.535" endtime="20201112 09:44:22.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.507" endtime="20201112 09:44:22.538"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.505" endtime="20201112 09:44:22.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.545" endtime="20201112 09:44:22.831"></status>
</kw>
<msg timestamp="20201112 09:44:22.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.543" endtime="20201112 09:44:22.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022148917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022254639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.835" endtime="20201112 09:44:22.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.843" endtime="20201112 09:44:22.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.541" endtime="20201112 09:44:22.845"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.539" endtime="20201112 09:44:22.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:22.850" level="INFO">${RESULT} = [{'time': 0.022254639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010572199999999907, 'source_diff': 0.00010572199999999907}, {'time': 0.022362722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:22.846" endtime="20201112 09:44:22.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:22.864" level="INFO">${ACCURACY} = {'time': [0.022254639, 0.022362722, 0.022470653, 0.022578694, 0.022686667, 0.022794694, 0.022902681, 0.023010778, 0.023118722, 0.023226722, 0.023334708, 0.023442764, 0.023550722, 0.023658778, 0.023766...</msg>
<status status="PASS" starttime="20201112 09:44:22.851" endtime="20201112 09:44:22.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.868" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 09:44:22.867" endtime="20201112 09:44:22.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.871" level="INFO">VALUE: [0.00010572199999999907, 0.00010569399999999993, 0.00010558399999999885, 0.00010568000000000036, 0.00010572300000000201, 0.00010591600000000104, 0.00010568099999999983, 0.00010558399999999885, 0.00010547200000000229, 0.00010565300000000069, 0.00010576399999999778, 0.00010588900000000137, 0.00010559699999999894, 0.00010581999999999953, 0.0001053750000000013, 0.00010565299999999722, 0.00010563900000000112, 0.00010570899999999897, 0.00010559799999999842, 0.0001056949999999994, 0.00010587499999999833, 0.0001057360000000021, 0.00010563900000000112, 0.00010562499999999808, 0.00010548599999999839, 0.00010541700000000001, 0.00010541600000000054, 0.0001053889999999974, 0.00010565300000000069, 0.00010565300000000069, 0.00010533299999999912, 0.00010580599999999996, 0.00010538900000000087, 0.00010594499999999965, 0.00010572300000000201, 0.00010576400000000125, 0.00010559800000000188, 0.00010583299999999962, 0.00010586099999999876, 0.00010558300000000284, 0.00010551299999999805, 0.0001057079999999995, 0.00010580500000000048, 0.00010543099999999958, 0.00010563900000000112, 0.0001051949999999989, 0.00010583299999999962, 0.00010544499999999915, 0.00010588900000000137, 0.0001056949999999994]</msg>
<status status="PASS" starttime="20201112 09:44:22.869" endtime="20201112 09:44:22.871"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.865" endtime="20201112 09:44:22.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.874" endtime="20201112 09:44:22.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:22.878" endtime="20201112 09:44:22.897"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.876" endtime="20201112 09:44:22.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.873" endtime="20201112 09:44:22.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.503" endtime="20201112 09:44:22.898"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.503" endtime="20201112 09:44:22.899"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.907" endtime="20201112 09:44:22.926"></status>
</kw>
<msg timestamp="20201112 09:44:22.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.906" endtime="20201112 09:44:22.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:22.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:22.928" endtime="20201112 09:44:22.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.930" endtime="20201112 09:44:22.933"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.903" endtime="20201112 09:44:22.934"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.901" endtime="20201112 09:44:22.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:22.940" endtime="20201112 09:44:23.226"></status>
</kw>
<msg timestamp="20201112 09:44:23.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:22.939" endtime="20201112 09:44:23.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021835931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.230" endtime="20201112 09:44:23.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.238" endtime="20201112 09:44:23.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.936" endtime="20201112 09:44:23.240"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.935" endtime="20201112 09:44:23.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.245" level="INFO">${RESULT} = [{'time': 0.021942764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010683300000000062, 'source_diff': 0.00010683300000000062}, {'time': 0.022051819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:23.242" endtime="20201112 09:44:23.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:23.258" level="INFO">${ACCURACY} = {'time': [0.021942764, 0.022051819, 0.022160792, 0.022269819, 0.022378833, 0.022487833, 0.022596833, 0.022705861, 0.022814861, 0.022923861, 0.023032875, 0.023141875, 0.023250861, 0.023359917, 0.023468...</msg>
<status status="PASS" starttime="20201112 09:44:23.246" endtime="20201112 09:44:23.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.263" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 09:44:23.261" endtime="20201112 09:44:23.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.265" level="INFO">VALUE: [0.00010683300000000062, 0.00010684700000000019, 0.00010645899999999972, 0.00010655500000000123, 0.00010638900000000187, 0.00010692999999999814, 0.00010681900000000105, 0.00010659699999999994, 0.0001067080000000005, 0.00010640300000000144, 0.00010691700000000151, 0.0001065279999999981, 0.00010650000000000243, 0.00010690300000000194, 0.0001066950000000004, 0.00010693100000000108, 0.00010662499999999908, 0.00010644400000000068, 0.00010682000000000053, 0.00010681899999999758, 0.00010666600000000179, 0.00010684700000000019, 0.00010663799999999918, 0.00010655500000000123, 0.00010629099999999794, 0.00010661099999999951, 0.00010672200000000007, 0.00010670799999999703, 0.00010649999999999896, 0.0001065560000000007, 0.00010640299999999797, 0.00010647299999999929, 0.00010680600000000096, 0.00010636199999999874, 0.00010645800000000025, 0.00010648600000000286, 0.00010644500000000015, 0.00010668000000000136, 0.00010669399999999746, 0.00010683300000000062, 0.00010640200000000197, 0.00010666700000000126, 0.00010676399999999878, 0.00010657000000000028, 0.00010637499999999883, 0.00010662499999999908, 0.00010676400000000225, 0.0001063750000000023, 0.00010686099999999976, 0.00010648600000000286]</msg>
<status status="PASS" starttime="20201112 09:44:23.264" endtime="20201112 09:44:23.266"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.259" endtime="20201112 09:44:23.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.269" endtime="20201112 09:44:23.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.272" endtime="20201112 09:44:23.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.271" endtime="20201112 09:44:23.292"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.267" endtime="20201112 09:44:23.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.899" endtime="20201112 09:44:23.293"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:22.899" endtime="20201112 09:44:23.293"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.302" endtime="20201112 09:44:23.321"></status>
</kw>
<msg timestamp="20201112 09:44:23.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.300" endtime="20201112 09:44:23.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.323" endtime="20201112 09:44:23.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.325" endtime="20201112 09:44:23.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.298" endtime="20201112 09:44:23.328"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.296" endtime="20201112 09:44:23.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.335" endtime="20201112 09:44:23.621"></status>
</kw>
<msg timestamp="20201112 09:44:23.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.334" endtime="20201112 09:44:23.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022098861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.625" endtime="20201112 09:44:23.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.633" endtime="20201112 09:44:23.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.331" endtime="20201112 09:44:23.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.329" endtime="20201112 09:44:23.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:23.640" level="INFO">${RESULT} = [{'time': 0.022098861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010768000000000236, 'source_diff': 0.00010768000000000236}, {'time': 0.022208889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:23.637" endtime="20201112 09:44:23.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:23.653" level="INFO">${ACCURACY} = {'time': [0.022098861, 0.022208889, 0.022318875, 0.022428903, 0.022538903, 0.022648944, 0.022758917, 0.022868944, 0.022978931, 0.023087958, 0.023197958, 0.023307972, 0.023417972, 0.023528028, 0.023637...</msg>
<status status="PASS" starttime="20201112 09:44:23.641" endtime="20201112 09:44:23.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.657" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 09:44:23.656" endtime="20201112 09:44:23.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.660" level="INFO">VALUE: [0.00010768000000000236, 0.00010773600000000064, 0.00010751399999999953, 0.00010736100000000026, 0.0001077219999999976, 0.00010762500000000008, 0.00010741699999999854, 0.00010741599999999907, 0.0001073340000000006, 0.00010717999999999839, 0.00010754100000000266, 0.00010741599999999907, 0.00010777799999999935, 0.00010762500000000008, 0.00010787500000000033, 0.00010734699999999722, 0.00010766700000000226, 0.00010744499999999768, 0.00010763899999999965, 0.00010765299999999922, 0.00010732000000000103, 0.00010777699999999987, 0.00010786100000000076, 0.00010788800000000043, 0.00010766600000000279, 0.00010737499999999983, 0.00010783299999999815, 0.00010737499999999983, 0.0001077500000000002, 0.00010784700000000119, 0.0001077500000000002, 0.00010769499999999793, 0.00010740300000000244, 0.00010758400000000085, 0.00010759700000000094, 0.00010740300000000244, 0.0001078340000000011, 0.00010762500000000008, 0.0001073340000000006, 0.000107902, 0.00010779199999999892, 0.00010749999999999996, 0.00010783300000000162, 0.00010752800000000257, 0.00010761100000000051, 0.00010719399999999796, 0.0001075690000000018, 0.00010741699999999854, 0.0001076950000000014, 0.00010745900000000072]</msg>
<status status="PASS" starttime="20201112 09:44:23.658" endtime="20201112 09:44:23.661"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.654" endtime="20201112 09:44:23.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.663" endtime="20201112 09:44:23.665"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:23.667" endtime="20201112 09:44:23.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.665" endtime="20201112 09:44:23.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.662" endtime="20201112 09:44:23.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.294" endtime="20201112 09:44:23.687"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.294" endtime="20201112 09:44:23.688"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.696" endtime="20201112 09:44:23.716"></status>
</kw>
<msg timestamp="20201112 09:44:23.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.695" endtime="20201112 09:44:23.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:23.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:23.717" endtime="20201112 09:44:23.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.720" endtime="20201112 09:44:23.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.692" endtime="20201112 09:44:23.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.690" endtime="20201112 09:44:23.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:23.730" endtime="20201112 09:44:24.017"></status>
</kw>
<msg timestamp="20201112 09:44:24.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022126208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:23.728" endtime="20201112 09:44:24.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022017875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022126208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.021" endtime="20201112 09:44:24.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.029" endtime="20201112 09:44:24.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.726" endtime="20201112 09:44:24.031"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.724" endtime="20201112 09:44:24.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.035" level="INFO">${RESULT} = [{'time': 0.022126208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010833300000000212, 'source_diff': 0.00010833300000000212}, {'time': 0.02223725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:44:24.032" endtime="20201112 09:44:24.036"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:24.049" level="INFO">${ACCURACY} = {'time': [0.022126208, 0.02223725, 0.022348222, 0.022459264, 0.022570236, 0.022681278, 0.02279225, 0.022903292, 0.023014264, 0.023125319, 0.023236292, 0.023347319, 0.023458306, 0.023569361, 0.02368031...</msg>
<status status="PASS" starttime="20201112 09:44:24.036" endtime="20201112 09:44:24.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.053" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 09:44:24.052" endtime="20201112 09:44:24.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.056" level="INFO">VALUE: [0.00010833300000000212, 0.0001085280000000001, 0.00010877800000000035, 0.00010870799999999903, 0.00010827799999999985, 0.00010893099999999961, 0.00010881899999999958, 0.00010887499999999786, 0.0001085280000000001, 0.00010870799999999903, 0.00010881999999999906, 0.00010874999999999774, 0.00010840299999999997, 0.00010875000000000121, 0.00010873599999999817, 0.0001085280000000001, 0.00010877700000000087, 0.0001085829999999989, 0.00010840299999999997, 0.00010886099999999829, 0.00010836200000000074, 0.00010863900000000065, 0.00010863900000000065, 0.00010868100000000283, 0.00010836099999999779, 0.0001085560000000027, 0.00010884800000000167, 0.00010884700000000219, 0.00010863900000000065, 0.00010886100000000176, 0.00010867999999999989, 0.00010850000000000096, 0.00010867999999999989, 0.0001085280000000001, 0.00010861100000000151, 0.0001087219999999986, 0.00010851400000000053, 0.00010847299999999782, 0.00010831999999999856, 0.00010861200000000099, 0.0001083479999999977, 0.00010877700000000087, 0.00010858400000000185, 0.00010867999999999989, 0.00010862500000000108, 0.00010869399999999946, 0.00010844399999999921, 0.00010884699999999872, 0.00010875000000000121, 0.00010840299999999997]</msg>
<status status="PASS" starttime="20201112 09:44:24.054" endtime="20201112 09:44:24.056"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.049" endtime="20201112 09:44:24.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.059" endtime="20201112 09:44:24.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:24.063" endtime="20201112 09:44:24.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.061" endtime="20201112 09:44:24.082"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.058" endtime="20201112 09:44:24.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.689" endtime="20201112 09:44:24.083"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:23.688" endtime="20201112 09:44:24.083"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.092" endtime="20201112 09:44:24.112"></status>
</kw>
<msg timestamp="20201112 09:44:24.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.090" endtime="20201112 09:44:24.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.113" endtime="20201112 09:44:24.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.116" endtime="20201112 09:44:24.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.088" endtime="20201112 09:44:24.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.086" endtime="20201112 09:44:24.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.126" endtime="20201112 09:44:24.411"></status>
</kw>
<msg timestamp="20201112 09:44:24.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.124" endtime="20201112 09:44:24.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022261736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022371708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.415" endtime="20201112 09:44:24.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.423" endtime="20201112 09:44:24.425"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.122" endtime="20201112 09:44:24.426"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.120" endtime="20201112 09:44:24.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.430" level="INFO">${RESULT} = [{'time': 0.022371708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010997199999999985, 'source_diff': 0.00010997199999999985}, {'time': 0.02248375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 09:44:24.427" endtime="20201112 09:44:24.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:24.444" level="INFO">${ACCURACY} = {'time': [0.022371708, 0.02248375, 0.022595736, 0.022707764, 0.02281975, 0.022931778, 0.023043792, 0.023155792, 0.023267778, 0.023379819, 0.023491792, 0.023603889, 0.023715861, 0.023827847, 0.02393984...</msg>
<status status="PASS" starttime="20201112 09:44:24.431" endtime="20201112 09:44:24.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.449" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 09:44:24.448" endtime="20201112 09:44:24.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.451" level="INFO">VALUE: [0.00010997199999999985, 0.00010943100000000011, 0.00010947200000000282, 0.00010952799999999763, 0.00010955600000000024, 0.00010969499999999993, 0.00010937500000000183, 0.00010962500000000208, 0.00010947199999999935, 0.00010941600000000107, 0.0001098479999999992, 0.00010987499999999886, 0.00010961100000000251, 0.00010961099999999904, 0.00010979100000000144, 0.00010988899999999843, 0.00010937499999999836, 0.00010963899999999818, 0.00010937500000000183, 0.00010979200000000092, 0.00010937499999999836, 0.00010954200000000067, 0.0001095419999999972, 0.00010983399999999963, 0.00010977800000000135, 0.00010979100000000144, 0.00010968100000000036, 0.00010969400000000046, 0.00010970800000000003, 0.00010979100000000144, 0.00010988899999999843, 0.00010956900000000033, 0.00010941700000000054, 0.00010977800000000135, 0.00010968099999999689, 0.00010941699999999707, 0.00010951399999999806, 0.00010940300000000097, 0.00010948700000000186, 0.00010987500000000233, 0.00010936099999999879, 0.00010977700000000187, 0.00010961200000000199, 0.0001095829999999999, 0.0001093890000000014, 0.00010994500000000018, 0.00010987500000000233, 0.00010980600000000049, 0.00010934699999999922, 0.00010916700000000029]</msg>
<status status="PASS" starttime="20201112 09:44:24.450" endtime="20201112 09:44:24.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.445" endtime="20201112 09:44:24.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.455" endtime="20201112 09:44:24.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:24.458" endtime="20201112 09:44:24.477"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.457" endtime="20201112 09:44:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.453" endtime="20201112 09:44:24.478"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.084" endtime="20201112 09:44:24.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.084" endtime="20201112 09:44:24.479"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.487" endtime="20201112 09:44:24.508"></status>
</kw>
<msg timestamp="20201112 09:44:24.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.486" endtime="20201112 09:44:24.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.510" endtime="20201112 09:44:24.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.512" endtime="20201112 09:44:24.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.483" endtime="20201112 09:44:24.515"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.481" endtime="20201112 09:44:24.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.522" endtime="20201112 09:44:24.808"></status>
</kw>
<msg timestamp="20201112 09:44:24.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022156083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.521" endtime="20201112 09:44:24.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022156083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022266847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.812" endtime="20201112 09:44:24.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.820" endtime="20201112 09:44:24.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.518" endtime="20201112 09:44:24.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.517" endtime="20201112 09:44:24.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:24.827" level="INFO">${RESULT} = [{'time': 0.022266847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011076399999999931, 'source_diff': 0.00011076399999999931}, {'time': 0.022379917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 09:44:24.824" endtime="20201112 09:44:24.827"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:24.841" level="INFO">${ACCURACY} = {'time': [0.022266847, 0.022379917, 0.022492847, 0.022605903, 0.022718861, 0.022831917, 0.022944875, 0.023057931, 0.023170903, 0.023283931, 0.023396931, 0.023509944, 0.023622931, 0.023735958, 0.023848...</msg>
<status status="PASS" starttime="20201112 09:44:24.828" endtime="20201112 09:44:24.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.845" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 09:44:24.844" endtime="20201112 09:44:24.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.848" level="INFO">VALUE: [0.00011076399999999931, 0.00011062499999999961, 0.00011052799999999863, 0.00011083400000000063, 0.00011087499999999986, 0.00011059799999999995, 0.00011062499999999961, 0.00011052799999999863, 0.00011084700000000072, 0.00011049999999999949, 0.00011055599999999777, 0.00011088799999999996, 0.00011074999999999974, 0.00011065200000000275, 0.00011055500000000176, 0.00011093000000000214, 0.00011076399999999931, 0.00011048599999999992, 0.00011062499999999961, 0.00011094500000000118, 0.00011033400000000013, 0.00011069500000000093, 0.00011041700000000154, 0.00011041700000000154, 0.00011038899999999893, 0.00011079100000000244, 0.00011087499999999986, 0.00011086100000000029, 0.00011076299999999983, 0.00011079100000000244, 0.00011049999999999949, 0.00011094400000000171, 0.00011038899999999893, 0.00011076399999999931, 0.00011066700000000179, 0.00011043100000000111, 0.00011049999999999949, 0.0001108480000000002, 0.00011040300000000197, 0.0001109159999999991, 0.00011044500000000068, 0.00011087499999999986, 0.00011045900000000025, 0.00011054099999999872, 0.00011084700000000072, 0.00011080499999999854, 0.00011061100000000004, 0.00011048599999999992, 0.00011043000000000164, 0.00011074999999999974]</msg>
<status status="PASS" starttime="20201112 09:44:24.847" endtime="20201112 09:44:24.849"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.842" endtime="20201112 09:44:24.849"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.851" endtime="20201112 09:44:24.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:24.855" endtime="20201112 09:44:24.874"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.853" endtime="20201112 09:44:24.875"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.850" endtime="20201112 09:44:24.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.480" endtime="20201112 09:44:24.876"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.479" endtime="20201112 09:44:24.876"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.885" endtime="20201112 09:44:24.904"></status>
</kw>
<msg timestamp="20201112 09:44:24.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.883" endtime="20201112 09:44:24.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:24.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:24.905" endtime="20201112 09:44:24.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.908" endtime="20201112 09:44:24.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.880" endtime="20201112 09:44:24.911"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.878" endtime="20201112 09:44:24.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:24.918" endtime="20201112 09:44:25.204"></status>
</kw>
<msg timestamp="20201112 09:44:25.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:24.917" endtime="20201112 09:44:25.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022162972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:25.208" endtime="20201112 09:44:25.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.216" endtime="20201112 09:44:25.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.914" endtime="20201112 09:44:25.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.912" endtime="20201112 09:44:25.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:25.223" level="INFO">${RESULT} = [{'time': 0.022162972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000111596999999998, 'source_diff': 0.000111596999999998}, {'time': 0.022277014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 09:44:25.220" endtime="20201112 09:44:25.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 09:44:25.236" level="INFO">${ACCURACY} = {'time': [0.022162972, 0.022277014, 0.022391014, 0.022505028, 0.022619014, 0.022733042, 0.022847028, 0.022961069, 0.023075042, 0.023189083, 0.023303056, 0.023417153, 0.023531097, 0.023645125, 0.023759...</msg>
<status status="PASS" starttime="20201112 09:44:25.224" endtime="20201112 09:44:25.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.241" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 09:44:25.240" endtime="20201112 09:44:25.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.243" level="INFO">VALUE: [0.000111596999999998, 0.0001115700000000018, 0.00011180599999999902, 0.00011138899999999993, 0.00011129199999999895, 0.00011158399999999791, 0.00011183399999999816, 0.00011179099999999997, 0.0001115419999999992, 0.00011148600000000092, 0.00011162500000000061, 0.00011169499999999846, 0.0001119160000000001, 0.00011179199999999945, 0.00011133299999999818, 0.00011186099999999782, 0.00011137500000000036, 0.00011186100000000129, 0.00011166699999999932, 0.00011156999999999834, 0.00011145799999999831, 0.0001115700000000018, 0.00011136100000000079, 0.00011192999999999967, 0.00011144499999999821, 0.000111903, 0.00011152700000000015, 0.000111209000000001, 0.00011144399999999874, 0.00011166700000000279, 0.00011179099999999997, 0.00011159799999999748, 0.00011173600000000117, 0.00011144499999999821, 0.00011169499999999846, 0.00011168099999999889, 0.00011152799999999963, 0.00011175000000000074, 0.00011183399999999816, 0.00011166599999999985, 0.00011140200000000003, 0.00011145799999999831, 0.0001115549999999993, 0.00011161099999999757, 0.00011184700000000172, 0.00011144400000000221, 0.00011184699999999825, 0.00011170799999999856, 0.00011179199999999945, 0.0001114029999999995]</msg>
<status status="PASS" starttime="20201112 09:44:25.242" endtime="20201112 09:44:25.244"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.237" endtime="20201112 09:44:25.244"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:25.247" endtime="20201112 09:44:25.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:25.250" endtime="20201112 09:44:25.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.249" endtime="20201112 09:44:25.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.245" endtime="20201112 09:44:25.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.877" endtime="20201112 09:44:25.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:24.876" endtime="20201112 09:44:25.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:43:45.880" endtime="20201112 09:44:25.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:25.276" endtime="20201112 09:44:25.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.274" endtime="20201112 09:44:25.296"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.273" endtime="20201112 09:44:25.296"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:43:45.805" endtime="20201112 09:44:25.296" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:43:04.860" endtime="20201112 09:44:25.300"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 09:44:25.356" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 09:44:25.364" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 09:44:26.466" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 09:44:25.355" endtime="20201112 09:44:26.467"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.469" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 09:44:26.468" endtime="20201112 09:44:26.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.353" endtime="20201112 09:44:26.470"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.472" endtime="20201112 09:44:26.657"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.471" endtime="20201112 09:44:26.658"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.670" endtime="20201112 09:44:26.692"></status>
</kw>
<msg timestamp="20201112 09:44:26.693" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.668" endtime="20201112 09:44:26.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.698" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.695" endtime="20201112 09:44:26.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.704" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:26.700" endtime="20201112 09:44:26.705"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:26.666" endtime="20201112 09:44:26.707"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:26.664" endtime="20201112 09:44:26.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.662" endtime="20201112 09:44:26.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:26.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:26.717" endtime="20201112 09:44:26.719"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.710" endtime="20201112 09:44:26.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.662" endtime="20201112 09:44:26.720"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.661" endtime="20201112 09:44:26.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.722" endtime="20201112 09:44:26.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.660" endtime="20201112 09:44:26.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.728" endtime="20201112 09:44:26.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.658" endtime="20201112 09:44:26.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:25.352" endtime="20201112 09:44:26.733"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:26.746" endtime="20201112 09:44:26.768"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.743" endtime="20201112 09:44:26.769"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.791" endtime="20201112 09:44:26.810"></status>
</kw>
<msg timestamp="20201112 09:44:26.810" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.790" endtime="20201112 09:44:26.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.813" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f767zi', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 09:44:26.811" endtime="20201112 09:44:26.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 09:44:26.816" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 09:44:26.814" endtime="20201112 09:44:26.816"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:26.787" endtime="20201112 09:44:26.817"></status>
</kw>
<status status="FAIL" starttime="20201112 09:44:26.782" endtime="20201112 09:44:26.817"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.780" endtime="20201112 09:44:26.817"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 09:44:26.821" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 09:44:26.820" endtime="20201112 09:44:26.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.818" endtime="20201112 09:44:26.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.778" endtime="20201112 09:44:26.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.777" endtime="20201112 09:44:26.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.823" endtime="20201112 09:44:26.824"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.774" endtime="20201112 09:44:26.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.770" endtime="20201112 09:44:26.825"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.740" endtime="20201112 09:44:26.826"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:26.829" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:26.839" endtime="20201112 09:44:28.949"></status>
</kw>
<msg timestamp="20201112 09:44:28.950" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 491207141, 'wakeups': [491217147, 491227146, 491237147, 491247147, 491...</msg>
<status status="PASS" starttime="20201112 09:44:26.837" endtime="20201112 09:44:28.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.956" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 491207141, 'wakeups': [491217147, 491227146, 491237147, 491247147, 491...</msg>
<status status="PASS" starttime="20201112 09:44:28.953" endtime="20201112 09:44:28.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:28.960" endtime="20201112 09:44:28.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.834" endtime="20201112 09:44:28.964"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.831" endtime="20201112 09:44:28.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:28.971" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'wakeups': [491217147, 491227146, 491237147, 491247147, 491257146, 491267147, 491277147, 491287147, 491297146, 491307147, 491317147, 491327147, 491337147, 4...</msg>
<status status="PASS" starttime="20201112 09:44:28.967" endtime="20201112 09:44:28.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.980" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:28.977" endtime="20201112 09:44:28.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.984" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:28.982" endtime="20201112 09:44:28.985"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.973" endtime="20201112 09:44:28.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.994" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:28.992" endtime="20201112 09:44:28.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:28.998" level="INFO">VALUE: 491207141</msg>
<status status="PASS" starttime="20201112 09:44:28.996" endtime="20201112 09:44:28.999"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:28.987" endtime="20201112 09:44:29.000"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.009" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:29.007" endtime="20201112 09:44:29.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.013" level="INFO">VALUE: [491217147, 491227146, 491237147, 491247147, 491257146, 491267147, 491277147, 491287147, 491297146, 491307147, 491317147, 491327147, 491337147, 491347147, 491357146, 491367147, 491377147, 491387147, 491397147, 491407147, 491417147, 491427147, 491437147, 491447147, 491457146, 491467147, 491477147, 491487147, 491497147, 491507147, 491517147, 491527147, 491537147, 491547147, 491557146, 491567147, 491577147, 491587147, 491597147, 491607147, 491617147, 491627147, 491637147, 491647147, 491657146, 491667147, 491677147, 491687147, 491697147, 491707147, 491717147, 491727147, 491737147, 491747147, 491757146, 491767147, 491777147, 491787147, 491797147, 491807147, 491817147, 491827147, 491837147, 491847147, 491857146, 491867147, 491877147, 491887147, 491897147, 491907147, 491917147, 491927147, 491937147, 491947147, 491957146, 491967147, 491977147, 491987147, 491997147, 492007147, 492017147, 492027147, 492037147, 492047147, 492057146, 492067147, 492077147, 492087147, 492097147, 492107147, 492117147, 492127147, 492137147, 492147147, 492157146, 492167147, 492177147, 492187147, 492197147, 492207147]</msg>
<status status="PASS" starttime="20201112 09:44:29.011" endtime="20201112 09:44:29.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.002" endtime="20201112 09:44:29.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.029" endtime="20201112 09:44:29.328"></status>
</kw>
<msg timestamp="20201112 09:44:29.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081772889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091779806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.026" endtime="20201112 09:44:29.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.081772889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.091779806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:29.332" endtime="20201112 09:44:29.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.339" endtime="20201112 09:44:29.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.020" endtime="20201112 09:44:29.341"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.017" endtime="20201112 09:44:29.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:29.366" level="INFO">${RESULT} = {'time': [0.081772889, 0.091779806, 0.101780347, 0.11178175, 0.121782389, 0.131782264, 0.141783944, 0.151784986, 0.161785389, 0.171785125, 0.181786833, 0.191787778, 0.201788542, 0.211789125, 0.2217897...</msg>
<status status="PASS" starttime="20201112 09:44:29.343" endtime="20201112 09:44:29.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.371" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:29.370" endtime="20201112 09:44:29.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.373" level="INFO">VALUE: 0.081772889</msg>
<status status="PASS" starttime="20201112 09:44:29.372" endtime="20201112 09:44:29.373"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.367" endtime="20201112 09:44:29.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.378" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:29.377" endtime="20201112 09:44:29.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:29.380" level="INFO">VALUE: [0.091779806, 0.101780347, 0.11178175, 0.121782389, 0.131782264, 0.141783944, 0.151784986, 0.161785389, 0.171785125, 0.181786833, 0.191787778, 0.201788542, 0.211789125, 0.221789736, 0.231789625, 0.241791306, 0.251792306, 0.261792708, 0.271793486, 0.281794194, 0.291795097, 0.301795917, 0.311796486, 0.321797097, 0.331796958, 0.341798667, 0.351799681, 0.361800056, 0.371800889, 0.381801556, 0.391802458, 0.40180325, 0.411803875, 0.421804417, 0.431804347, 0.441805986, 0.451806986, 0.461807361, 0.471808153, 0.481808833, 0.491809736, 0.501810542, 0.511811111, 0.521811722, 0.531811597, 0.541813292, 0.551814278, 0.561814667, 0.571815417, 0.581816153, 0.591817014, 0.601817833, 0.611818389, 0.621819, 0.631818875, 0.641820583, 0.651821569, 0.661821958, 0.671822708, 0.681823417, 0.691824306, 0.701825125, 0.711825681, 0.721826306, 0.731826167, 0.741827875, 0.751828861, 0.761829236, 0.77183, 0.781830708, 0.791831611, 0.801832417, 0.811833, 0.821833583, 0.831833458, 0.841835153, 0.851836153, 0.861836528, 0.871837319, 0.881838014, 0.891838917, 0.901839708, 0.911840319, 0.921840889, 0.931840819, 0.941842458, 0.951843444, 0.961843833, 0.971844611, 0.981845306, 0.991846194, 1.001847014, 1.011847583, 1.021848181, 1.031848056, 1.041849764, 1.05185075, 1.061851125, 1.071851917, 1.081852597] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:29.380" endtime="20201112 09:44:29.381"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.374" endtime="20201112 09:44:29.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.384" endtime="20201112 09:44:29.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:29.387" endtime="20201112 09:44:29.406"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.386" endtime="20201112 09:44:29.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.382" endtime="20201112 09:44:29.407"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.830" endtime="20201112 09:44:29.408"></status>
</kw>
<msg timestamp="20201112 09:44:29.408" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:29.416" endtime="20201112 09:44:31.526"></status>
</kw>
<msg timestamp="20201112 09:44:31.527" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 493784625, 'wakeups': [493794631, 493804630, 493814631, 493824631, 493...</msg>
<status status="PASS" starttime="20201112 09:44:29.414" endtime="20201112 09:44:31.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.533" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 493784625, 'wakeups': [493794631, 493804630, 493814631, 493824631, 493...</msg>
<status status="PASS" starttime="20201112 09:44:31.530" endtime="20201112 09:44:31.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.536" endtime="20201112 09:44:31.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.412" endtime="20201112 09:44:31.540"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.410" endtime="20201112 09:44:31.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.547" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'wakeups': [493794631, 493804630, 493814631, 493824631, 493834630, 493844631, 493854631, 493864631, 493874630, 493884631, 493894631, 493904631, 493914631, 4...</msg>
<status status="PASS" starttime="20201112 09:44:31.542" endtime="20201112 09:44:31.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.557" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:31.553" endtime="20201112 09:44:31.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.562" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:31.560" endtime="20201112 09:44:31.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.548" endtime="20201112 09:44:31.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.573" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:31.571" endtime="20201112 09:44:31.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.577" level="INFO">VALUE: 493784625</msg>
<status status="PASS" starttime="20201112 09:44:31.575" endtime="20201112 09:44:31.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.565" endtime="20201112 09:44:31.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.587" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:31.585" endtime="20201112 09:44:31.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.592" level="INFO">VALUE: [493794631, 493804630, 493814631, 493824631, 493834630, 493844631, 493854631, 493864631, 493874630, 493884631, 493894631, 493904631, 493914631, 493924631, 493934630, 493944631, 493954631, 493964631, 493974631, 493984631, 493994631, 494004631, 494014631, 494024631, 494034630, 494044631, 494054631, 494064631, 494074631, 494084631, 494094631, 494104631, 494114631, 494124631, 494134630, 494144631, 494154631, 494164631, 494174631, 494184631, 494194631, 494204631, 494214631, 494224631, 494234630, 494244631, 494254631, 494264631, 494274631, 494284631, 494294631, 494304631, 494314631, 494324631, 494334630, 494344631, 494354631, 494364631, 494374631, 494384631, 494394631, 494404631, 494414631, 494424631, 494434630, 494444631, 494454631, 494464631, 494474631, 494484631, 494494631, 494504631, 494514631, 494524631, 494534630, 494544631, 494554631, 494564631, 494574631, 494584631, 494594631, 494604631, 494614631, 494624631, 494634630, 494644631, 494654631, 494664631, 494674631, 494684631, 494694631, 494704631, 494714631, 494724631, 494734630, 494744631, 494754631, 494764631, 494774631, 494784631]</msg>
<status status="PASS" starttime="20201112 09:44:31.590" endtime="20201112 09:44:31.593"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.580" endtime="20201112 09:44:31.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.603" endtime="20201112 09:44:31.895"></status>
</kw>
<msg timestamp="20201112 09:44:31.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019013389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029020278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.601" endtime="20201112 09:44:31.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019013389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029020278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:31.898" endtime="20201112 09:44:31.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.906" endtime="20201112 09:44:31.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.599" endtime="20201112 09:44:31.908"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.595" endtime="20201112 09:44:31.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:31.932" level="INFO">${RESULT} = {'time': [0.019013389, 0.029020278, 0.039020889, 0.049022222, 0.059022875, 0.069022764, 0.079024431, 0.089025472, 0.099025819, 0.109025597, 0.119027333, 0.12902825, 0.139029042, 0.149029597, 0.1590302...</msg>
<status status="PASS" starttime="20201112 09:44:31.909" endtime="20201112 09:44:31.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.937" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:31.936" endtime="20201112 09:44:31.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.939" level="INFO">VALUE: 0.019013389</msg>
<status status="PASS" starttime="20201112 09:44:31.938" endtime="20201112 09:44:31.939"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.933" endtime="20201112 09:44:31.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.944" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:31.943" endtime="20201112 09:44:31.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:31.947" level="INFO">VALUE: [0.029020278, 0.039020889, 0.049022222, 0.059022875, 0.069022764, 0.079024431, 0.089025472, 0.099025819, 0.109025597, 0.119027333, 0.12902825, 0.139029042, 0.149029597, 0.159030208, 0.169030083, 0.179031792, 0.189032792, 0.199033167, 0.209033958, 0.219034653, 0.229035556, 0.239036431, 0.249037028, 0.259037583, 0.269037431, 0.279039125, 0.289040125, 0.299040514, 0.309041306, 0.319042, 0.329042917, 0.339043708, 0.349044292, 0.359044903, 0.369044778, 0.379046472, 0.389047472, 0.399047861, 0.409048639, 0.419049361, 0.42905025, 0.439051069, 0.449051625, 0.459052264, 0.469052111, 0.479053792, 0.489054778, 0.499055167, 0.509055958, 0.519056639, 0.529057556, 0.539058347, 0.549058944, 0.559059514, 0.569059403, 0.579061097, 0.589062069, 0.599062458, 0.609063222, 0.619063931, 0.629064861, 0.639065625, 0.649066194, 0.659066792, 0.669066681, 0.679068361, 0.689069389, 0.699069806, 0.709070514, 0.719071222, 0.729072111, 0.739072931, 0.749073486, 0.759074125, 0.769073972, 0.779075667, 0.789076653, 0.799077028, 0.809077833, 0.819078528, 0.829079444, 0.839080222, 0.849080806, 0.859081389, 0.869081333, 0.879082958, 0.889083944, 0.899084347, 0.909085097, 0.919085806, 0.929086736, 0.939087569, 0.949088097, 0.959088708, 0.969088556, 0.97909025, 0.989091236, 0.999091639, 1.009092403, 1.019093111] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:31.946" endtime="20201112 09:44:31.947"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.940" endtime="20201112 09:44:31.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.950" endtime="20201112 09:44:31.951"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:31.953" endtime="20201112 09:44:31.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.952" endtime="20201112 09:44:31.973"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.948" endtime="20201112 09:44:31.974"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:29.409" endtime="20201112 09:44:31.974"></status>
</kw>
<msg timestamp="20201112 09:44:31.974" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:31.982" endtime="20201112 09:44:34.093"></status>
</kw>
<msg timestamp="20201112 09:44:34.094" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 496350981, 'wakeups': [496360987, 496370986, 496380987, 496390987, 496...</msg>
<status status="PASS" starttime="20201112 09:44:31.981" endtime="20201112 09:44:34.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.100" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 496350981, 'wakeups': [496360987, 496370986, 496380987, 496390987, 496...</msg>
<status status="PASS" starttime="20201112 09:44:34.097" endtime="20201112 09:44:34.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.103" endtime="20201112 09:44:34.106"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.978" endtime="20201112 09:44:34.107"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.976" endtime="20201112 09:44:34.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.114" level="INFO">${RESULT} = {'timer-count': 1, 'timer-interval': 10000, 'wakeups': [496360987, 496370986, 496380987, 496390987, 496400986, 496410987, 496420987, 496430987, 496440986, 496450987, 496460987, 496470987, 496480987, 4...</msg>
<status status="PASS" starttime="20201112 09:44:34.110" endtime="20201112 09:44:34.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.122" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:34.120" endtime="20201112 09:44:34.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.126" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:34.124" endtime="20201112 09:44:34.127"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.115" endtime="20201112 09:44:34.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.137" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:34.135" endtime="20201112 09:44:34.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.139" level="INFO">VALUE: 496350981</msg>
<status status="PASS" starttime="20201112 09:44:34.138" endtime="20201112 09:44:34.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.129" endtime="20201112 09:44:34.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.144" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:34.143" endtime="20201112 09:44:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.146" level="INFO">VALUE: [496360987, 496370986, 496380987, 496390987, 496400986, 496410987, 496420987, 496430987, 496440986, 496450987, 496460987, 496470987, 496480987, 496490987, 496500986, 496510987, 496520987, 496530987, 496540987, 496550987, 496560987, 496570987, 496580987, 496590987, 496600986, 496610987, 496620987, 496630987, 496640987, 496650987, 496660987, 496670987, 496680987, 496690987, 496700986, 496710987, 496720987, 496730987, 496740987, 496750987, 496760987, 496770987, 496780987, 496790987, 496800986, 496810987, 496820987, 496830987, 496840987, 496850987, 496860987, 496870987, 496880987, 496890987, 496900986, 496910987, 496920987, 496930987, 496940987, 496950987, 496960987, 496970987, 496980987, 496990987, 497000986, 497010987, 497020987, 497030987, 497040987, 497050987, 497060987, 497070987, 497080987, 497090987, 497100986, 497110987, 497120987, 497130987, 497140987, 497150987, 497160987, 497170987, 497180987, 497190987, 497200986, 497210987, 497220987, 497230987, 497240987, 497250987, 497260987, 497270987, 497280987, 497290987, 497300986, 497310987, 497320987, 497330987, 497340987, 497350987]</msg>
<status status="PASS" starttime="20201112 09:44:34.145" endtime="20201112 09:44:34.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.140" endtime="20201112 09:44:34.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.158" endtime="20201112 09:44:34.450"></status>
</kw>
<msg timestamp="20201112 09:44:34.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018983208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028990111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.157" endtime="20201112 09:44:34.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018983208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028990111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:34.454" endtime="20201112 09:44:34.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.461" endtime="20201112 09:44:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.153" endtime="20201112 09:44:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.151" endtime="20201112 09:44:34.464"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:34.487" level="INFO">${RESULT} = {'time': [0.018983208, 0.028990111, 0.038990681, 0.048992056, 0.058992778, 0.068992569, 0.078994264, 0.088995319, 0.098995653, 0.108995431, 0.118997139, 0.128998042, 0.138998847, 0.148999431, 0.159000...</msg>
<status status="PASS" starttime="20201112 09:44:34.464" endtime="20201112 09:44:34.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.492" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 09:44:34.491" endtime="20201112 09:44:34.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.494" level="INFO">VALUE: 0.018983208</msg>
<status status="PASS" starttime="20201112 09:44:34.493" endtime="20201112 09:44:34.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.488" endtime="20201112 09:44:34.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.499" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:34.498" endtime="20201112 09:44:34.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:34.501" level="INFO">VALUE: [0.028990111, 0.038990681, 0.048992056, 0.058992778, 0.068992569, 0.078994264, 0.088995319, 0.098995653, 0.108995431, 0.118997139, 0.128998042, 0.138998847, 0.148999431, 0.159000028, 0.168999917, 0.179001611, 0.189002597, 0.199003, 0.209003778, 0.219004486, 0.229005375, 0.239006194, 0.249006778, 0.259007375, 0.269007264, 0.279008944, 0.289009944, 0.299010347, 0.309011125, 0.319011819, 0.329012722, 0.339013569, 0.349014111, 0.359014722, 0.369014611, 0.379016292, 0.389017292, 0.399017681, 0.409018458, 0.419019208, 0.429020056, 0.439020875, 0.449021458, 0.459022042, 0.469021903, 0.479023597, 0.489024583, 0.499024972, 0.509025736, 0.519026444, 0.529027347, 0.539028153, 0.549028708, 0.559029319, 0.569029194, 0.579030875, 0.589031875, 0.599032264, 0.609033042, 0.619033792, 0.629034625, 0.6390355, 0.649036, 0.659036597, 0.669036472, 0.679038222, 0.689039167, 0.699039542, 0.709040306, 0.719041014, 0.729041917, 0.739042722, 0.749043292, 0.759043889, 0.769043764, 0.779045458, 0.789046444, 0.799046833, 0.809047611, 0.819048319, 0.829049208, 0.839050028, 0.849050597, 0.859051194, 0.869051056, 0.87905275, 0.889053736, 0.899054125, 0.909054917, 0.919055611, 0.929056569, 0.939057306, 0.949057931, 0.959058486, 0.969058375, 0.979060056, 0.989061056, 0.999061431, 1.009062194, 1.019062903] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:34.500" endtime="20201112 09:44:34.502"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.495" endtime="20201112 09:44:34.502"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.505" endtime="20201112 09:44:34.506"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:34.508" endtime="20201112 09:44:34.527"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.506" endtime="20201112 09:44:34.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.503" endtime="20201112 09:44:34.528"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:31.975" endtime="20201112 09:44:34.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.828" endtime="20201112 09:44:34.529"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.827" endtime="20201112 09:44:34.529"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:34.532" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:34.541" endtime="20201112 09:44:36.651"></status>
</kw>
<msg timestamp="20201112 09:44:36.653" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 498909710, 'wakeups': [498919721, 498929721, 498939719, 498949720, 498...</msg>
<status status="PASS" starttime="20201112 09:44:34.539" endtime="20201112 09:44:36.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 498909710, 'wakeups': [498919721, 498929721, 498939719, 498949720, 498...</msg>
<status status="PASS" starttime="20201112 09:44:36.655" endtime="20201112 09:44:36.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.661" endtime="20201112 09:44:36.664"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.536" endtime="20201112 09:44:36.666"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.533" endtime="20201112 09:44:36.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:36.672" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'wakeups': [498919721, 498929721, 498939719, 498949720, 498959720, 498969720, 498979720, 498989720, 498999720, 499009720, 499019720, 499029720, 499039720, 4...</msg>
<status status="PASS" starttime="20201112 09:44:36.668" endtime="20201112 09:44:36.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.681" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:36.678" endtime="20201112 09:44:36.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.685" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:36.683" endtime="20201112 09:44:36.686"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.674" endtime="20201112 09:44:36.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.695" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:36.693" endtime="20201112 09:44:36.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.699" level="INFO">VALUE: 498909710</msg>
<status status="PASS" starttime="20201112 09:44:36.697" endtime="20201112 09:44:36.700"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.688" endtime="20201112 09:44:36.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.705" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:36.704" endtime="20201112 09:44:36.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:36.708" level="INFO">VALUE: [498919721, 498929721, 498939719, 498949720, 498959720, 498969720, 498979720, 498989720, 498999720, 499009720, 499019720, 499029720, 499039720, 499049720, 499059720, 499069720, 499079720, 499089720, 499099720, 499109720, 499119720, 499129720, 499139720, 499149720, 499159720, 499169720, 499179720, 499189720, 499199720, 499209720, 499219720, 499229720, 499239720, 499249720, 499259720, 499269720, 499279720, 499289720, 499299720, 499309720, 499319720, 499329720, 499339720, 499349720, 499359720, 499369720, 499379720, 499389720, 499399720, 499409720, 499419720, 499429720, 499439720, 499449720, 499459720, 499469720, 499479720, 499489720, 499499720, 499509720, 499519720, 499529720, 499539720, 499549720, 499559720, 499569720, 499579720, 499589720, 499599720, 499609720, 499619720, 499629720, 499639720, 499649720, 499659720, 499669720, 499679720, 499689720, 499699720, 499709720, 499719720, 499729720, 499739720, 499749720, 499759720, 499769720, 499779720, 499789720, 499799720, 499809720, 499819720, 499829720, 499839720, 499849720, 499859720, 499869720, 499879720, 499889720, 499899720, 499909720]</msg>
<status status="PASS" starttime="20201112 09:44:36.707" endtime="20201112 09:44:36.708"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.702" endtime="20201112 09:44:36.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:36.715" endtime="20201112 09:44:37.007"></status>
</kw>
<msg timestamp="20201112 09:44:37.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033239944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:36.713" endtime="20201112 09:44:37.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023228194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033239944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:37.010" endtime="20201112 09:44:37.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.018" endtime="20201112 09:44:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.711" endtime="20201112 09:44:37.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:36.709" endtime="20201112 09:44:37.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:37.045" level="INFO">${RESULT} = {'time': [0.023228194, 0.033239944, 0.0432405, 0.053240028, 0.063241722, 0.073242458, 0.083243181, 0.093243986, 0.103244583, 0.113245417, 0.123246125, 0.133246958, 0.143247583, 0.153248333, 0.16324905...</msg>
<status status="PASS" starttime="20201112 09:44:37.022" endtime="20201112 09:44:37.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.049" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:37.048" endtime="20201112 09:44:37.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.051" level="INFO">VALUE: 0.023228194</msg>
<status status="PASS" starttime="20201112 09:44:37.050" endtime="20201112 09:44:37.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.046" endtime="20201112 09:44:37.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.057" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:37.056" endtime="20201112 09:44:37.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:37.059" level="INFO">VALUE: [0.033239944, 0.0432405, 0.053240028, 0.063241722, 0.073242458, 0.083243181, 0.093243986, 0.103244583, 0.113245417, 0.123246125, 0.133246958, 0.143247583, 0.153248333, 0.163249056, 0.173249847, 0.183250472, 0.193251264, 0.203252, 0.213252806, 0.223253389, 0.233254208, 0.243254944, 0.253255736, 0.263256333, 0.273257208, 0.283257861, 0.293258653, 0.303259264, 0.313260083, 0.323260806, 0.333261597, 0.343262208, 0.353263014, 0.36326375, 0.373264542, 0.383265167, 0.393265958, 0.403266681, 0.413267472, 0.423268083, 0.433268917, 0.443269611, 0.453270417, 0.463271042, 0.473271833, 0.483272556, 0.493273333, 0.503273958, 0.51327475, 0.523275458, 0.533276306, 0.543276861, 0.553277667, 0.563278375, 0.573279181, 0.583279764, 0.593280583, 0.603281292, 0.613282069, 0.623282694, 0.633283486, 0.643284194, 0.653285056, 0.663285597, 0.673286403, 0.683287111, 0.693287903, 0.703288542, 0.713289306, 0.723290042, 0.733290889, 0.743291431, 0.753292236, 0.763292944, 0.773293736, 0.783294361, 0.793295139, 0.803295861, 0.813296653, 0.823297278, 0.833298069, 0.843298778, 0.853299583, 0.863300181, 0.873300972, 0.883301708, 0.8933025, 0.903303111, 0.913303903, 0.923304625, 0.933305403, 0.943306042, 0.953306819, 0.963307556, 0.973308347, 0.983308931, 0.993309736, 1.003310458, 1.013311306, 1.023311875] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:37.058" endtime="20201112 09:44:37.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.053" endtime="20201112 09:44:37.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.062" endtime="20201112 09:44:37.063"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:37.065" endtime="20201112 09:44:37.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.064" endtime="20201112 09:44:37.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.060" endtime="20201112 09:44:37.086"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.532" endtime="20201112 09:44:37.086"></status>
</kw>
<msg timestamp="20201112 09:44:37.086" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:37.094" endtime="20201112 09:44:39.205"></status>
</kw>
<msg timestamp="20201112 09:44:39.206" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 501462685, 'wakeups': [501472696, 501482696, 501492694, 501502695, 501...</msg>
<status status="PASS" starttime="20201112 09:44:37.092" endtime="20201112 09:44:39.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.212" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 501462685, 'wakeups': [501472696, 501482696, 501492694, 501502695, 501...</msg>
<status status="PASS" starttime="20201112 09:44:39.208" endtime="20201112 09:44:39.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.214" endtime="20201112 09:44:39.217"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.090" endtime="20201112 09:44:39.218"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.088" endtime="20201112 09:44:39.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.225" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'wakeups': [501472696, 501482696, 501492694, 501502695, 501512695, 501522695, 501532695, 501542695, 501552695, 501562695, 501572695, 501582695, 501592695, 5...</msg>
<status status="PASS" starttime="20201112 09:44:39.221" endtime="20201112 09:44:39.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.238" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:39.236" endtime="20201112 09:44:39.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.242" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:39.241" endtime="20201112 09:44:39.243"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.231" endtime="20201112 09:44:39.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.255" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:39.251" endtime="20201112 09:44:39.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.259" level="INFO">VALUE: 501462685</msg>
<status status="PASS" starttime="20201112 09:44:39.257" endtime="20201112 09:44:39.260"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.246" endtime="20201112 09:44:39.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.267" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:39.266" endtime="20201112 09:44:39.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.269" level="INFO">VALUE: [501472696, 501482696, 501492694, 501502695, 501512695, 501522695, 501532695, 501542695, 501552695, 501562695, 501572695, 501582695, 501592695, 501602695, 501612695, 501622695, 501632695, 501642695, 501652695, 501662695, 501672695, 501682695, 501692695, 501702695, 501712695, 501722695, 501732695, 501742695, 501752695, 501762695, 501772695, 501782695, 501792695, 501802695, 501812695, 501822695, 501832695, 501842695, 501852695, 501862695, 501872695, 501882695, 501892695, 501902695, 501912695, 501922695, 501932695, 501942695, 501952695, 501962695, 501972695, 501982695, 501992695, 502002695, 502012695, 502022695, 502032695, 502042695, 502052695, 502062695, 502072695, 502082695, 502092695, 502102695, 502112695, 502122695, 502132695, 502142695, 502152695, 502162695, 502172695, 502182695, 502192695, 502202695, 502212695, 502222695, 502232695, 502242695, 502252695, 502262695, 502272695, 502282695, 502292695, 502302695, 502312695, 502322695, 502332695, 502342695, 502352695, 502362695, 502372695, 502382695, 502392695, 502402695, 502412695, 502422695, 502432695, 502442695, 502452695, 502462695]</msg>
<status status="PASS" starttime="20201112 09:44:39.268" endtime="20201112 09:44:39.270"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.262" endtime="20201112 09:44:39.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.277" endtime="20201112 09:44:39.569"></status>
</kw>
<msg timestamp="20201112 09:44:39.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018910458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028922528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.275" endtime="20201112 09:44:39.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018910458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028922528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:39.572" endtime="20201112 09:44:39.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.580" endtime="20201112 09:44:39.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.272" endtime="20201112 09:44:39.582"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.271" endtime="20201112 09:44:39.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:39.606" level="INFO">${RESULT} = {'time': [0.018910458, 0.028922528, 0.038923056, 0.048922611, 0.058924264, 0.068925056, 0.078925833, 0.088926556, 0.098927181, 0.108927972, 0.118928792, 0.1289295, 0.138930111, 0.148930931, 0.15893163...</msg>
<status status="PASS" starttime="20201112 09:44:39.583" endtime="20201112 09:44:39.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.611" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:39.610" endtime="20201112 09:44:39.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.613" level="INFO">VALUE: 0.018910458</msg>
<status status="PASS" starttime="20201112 09:44:39.612" endtime="20201112 09:44:39.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.607" endtime="20201112 09:44:39.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.619" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:39.618" endtime="20201112 09:44:39.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:39.621" level="INFO">VALUE: [0.028922528, 0.038923056, 0.048922611, 0.058924264, 0.068925056, 0.078925833, 0.088926556, 0.098927181, 0.108927972, 0.118928792, 0.1289295, 0.138930111, 0.148930931, 0.158931639, 0.168932431, 0.178933042, 0.188933847, 0.198934583, 0.208935375, 0.218935986, 0.228936792, 0.238937528, 0.248938306, 0.258938931, 0.268939722, 0.278940472, 0.28894125, 0.298941903, 0.308942667, 0.318943403, 0.328944181, 0.338944792, 0.348945597, 0.358946333, 0.368947125, 0.378947736, 0.388948611, 0.398949264, 0.408950069, 0.418950639, 0.428951444, 0.438952153, 0.448953, 0.458953569, 0.468954389, 0.478955153, 0.488955847, 0.498956458, 0.508957292, 0.518957972, 0.528958764, 0.538959389, 0.548960167, 0.558960903, 0.568961681, 0.578962278, 0.588963083, 0.598963792, 0.608964583, 0.618965194, 0.628966, 0.638966722, 0.6489675, 0.658968111, 0.668968917, 0.678969625, 0.688970417, 0.698971028, 0.708971819, 0.718972542, 0.728973347, 0.738973958, 0.748974764, 0.7589755, 0.768976264, 0.778976861, 0.788977653, 0.798978375, 0.808979181, 0.818979792, 0.828980569, 0.838981292, 0.848982083, 0.858982736, 0.868983486, 0.878984208, 0.888985014, 0.898985611, 0.908986403, 0.918987125, 0.928987931, 0.938988528, 0.948989319, 0.958990042, 0.968990875, 0.978991444, 0.988992264, 0.998992958, 1.00899375, 1.018994347] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:39.620" endtime="20201112 09:44:39.622"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.614" endtime="20201112 09:44:39.622"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.625" endtime="20201112 09:44:39.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:39.628" endtime="20201112 09:44:39.647"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.627" endtime="20201112 09:44:39.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.623" endtime="20201112 09:44:39.648"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:37.087" endtime="20201112 09:44:39.649"></status>
</kw>
<msg timestamp="20201112 09:44:39.649" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:39.657" endtime="20201112 09:44:41.768"></status>
</kw>
<msg timestamp="20201112 09:44:41.769" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 504025540, 'wakeups': [504035551, 504045551, 504055549, 504065550, 504...</msg>
<status status="PASS" starttime="20201112 09:44:39.655" endtime="20201112 09:44:41.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.775" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 504025540, 'wakeups': [504035551, 504045551, 504055549, 504065550, 504...</msg>
<status status="PASS" starttime="20201112 09:44:41.771" endtime="20201112 09:44:41.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.777" endtime="20201112 09:44:41.780"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.653" endtime="20201112 09:44:41.782"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.651" endtime="20201112 09:44:41.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:41.788" level="INFO">${RESULT} = {'timer-count': 2, 'timer-interval': 10000, 'wakeups': [504035551, 504045551, 504055549, 504065550, 504075550, 504085550, 504095550, 504105550, 504115550, 504125550, 504135550, 504145550, 504155550, 5...</msg>
<status status="PASS" starttime="20201112 09:44:41.784" endtime="20201112 09:44:41.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.797" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:41.795" endtime="20201112 09:44:41.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.801" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:41.799" endtime="20201112 09:44:41.802"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.790" endtime="20201112 09:44:41.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.811" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:41.809" endtime="20201112 09:44:41.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.815" level="INFO">VALUE: 504025540</msg>
<status status="PASS" starttime="20201112 09:44:41.813" endtime="20201112 09:44:41.816"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.804" endtime="20201112 09:44:41.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.826" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:41.824" endtime="20201112 09:44:41.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:41.831" level="INFO">VALUE: [504035551, 504045551, 504055549, 504065550, 504075550, 504085550, 504095550, 504105550, 504115550, 504125550, 504135550, 504145550, 504155550, 504165550, 504175550, 504185550, 504195550, 504205550, 504215550, 504225550, 504235550, 504245550, 504255550, 504265550, 504275550, 504285550, 504295550, 504305550, 504315550, 504325550, 504335550, 504345550, 504355550, 504365550, 504375550, 504385550, 504395550, 504405550, 504415550, 504425550, 504435550, 504445550, 504455550, 504465550, 504475550, 504485550, 504495550, 504505550, 504515550, 504525550, 504535550, 504545550, 504555550, 504565550, 504575550, 504585550, 504595550, 504605550, 504615550, 504625550, 504635550, 504645550, 504655550, 504665550, 504675550, 504685550, 504695550, 504705550, 504715550, 504725550, 504735550, 504745550, 504755550, 504765550, 504775550, 504785550, 504795550, 504805550, 504815550, 504825550, 504835550, 504845550, 504855550, 504865550, 504875550, 504885550, 504895550, 504905550, 504915550, 504925550, 504935550, 504945550, 504955550, 504965550, 504975550, 504985550, 504995550, 505005550, 505015550, 505025550]</msg>
<status status="PASS" starttime="20201112 09:44:41.829" endtime="20201112 09:44:41.832"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.818" endtime="20201112 09:44:41.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:41.847" endtime="20201112 09:44:42.142"></status>
</kw>
<msg timestamp="20201112 09:44:42.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028992222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:41.843" endtime="20201112 09:44:42.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018979819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028992222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:42.145" endtime="20201112 09:44:42.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.153" endtime="20201112 09:44:42.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.838" endtime="20201112 09:44:42.155"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:41.834" endtime="20201112 09:44:42.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:42.179" level="INFO">${RESULT} = {'time': [0.018979819, 0.028992222, 0.03899275, 0.048992306, 0.058993944, 0.06899475, 0.078995458, 0.088996264, 0.098996861, 0.108997722, 0.118998389, 0.128999181, 0.138999792, 0.149000597, 0.15900131...</msg>
<status status="PASS" starttime="20201112 09:44:42.156" endtime="20201112 09:44:42.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.183" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 09:44:42.182" endtime="20201112 09:44:42.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.185" level="INFO">VALUE: 0.018979819</msg>
<status status="PASS" starttime="20201112 09:44:42.184" endtime="20201112 09:44:42.186"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.180" endtime="20201112 09:44:42.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.191" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:42.189" endtime="20201112 09:44:42.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:42.193" level="INFO">VALUE: [0.028992222, 0.03899275, 0.048992306, 0.058993944, 0.06899475, 0.078995458, 0.088996264, 0.098996861, 0.108997722, 0.118998389, 0.128999181, 0.138999792, 0.149000597, 0.159001319, 0.169002139, 0.17900275, 0.189003556, 0.199004264, 0.209005056, 0.219005667, 0.229006472, 0.239007194, 0.249007986, 0.259008653, 0.269009403, 0.279010125, 0.289010917, 0.299011542, 0.309012333, 0.319013056, 0.329013875, 0.339014486, 0.349015319, 0.359016, 0.369016792, 0.379017403, 0.389018208, 0.399018931, 0.409019722, 0.419020347, 0.429021153, 0.439021875, 0.449022694, 0.459023264, 0.469024069, 0.479024792, 0.489025611, 0.499026194, 0.509026972, 0.519027694, 0.529028472, 0.539029097, 0.549029875, 0.559030597, 0.569031389, 0.579031986, 0.589032792, 0.599033528, 0.609034292, 0.619034917, 0.629035694, 0.639036417, 0.649037222, 0.659037806, 0.669038611, 0.679039347, 0.689040111, 0.699040778, 0.709041514, 0.719042292, 0.729043028, 0.739043639, 0.749044431, 0.759045153, 0.769045958, 0.779046556, 0.789047347, 0.799048153, 0.809048861, 0.819049458, 0.829050264, 0.839051014, 0.849051792, 0.859052417, 0.869053181, 0.879053889, 0.889054681, 0.899055306, 0.909056125, 0.919056806, 0.929057597, 0.939058208, 0.949059, 0.959059722, 0.969060528, 0.979061125, 0.989061917, 0.999062708, 1.009063431, 1.019064028] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:42.192" endtime="20201112 09:44:42.193"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.187" endtime="20201112 09:44:42.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.196" endtime="20201112 09:44:42.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:42.200" endtime="20201112 09:44:42.219"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.198" endtime="20201112 09:44:42.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.194" endtime="20201112 09:44:42.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:39.650" endtime="20201112 09:44:42.220"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.530" endtime="20201112 09:44:42.221"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:34.529" endtime="20201112 09:44:42.221"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:42.223" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:42.232" endtime="20201112 09:44:44.344"></status>
</kw>
<msg timestamp="20201112 09:44:44.345" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 506601022, 'wakeups': [506611037, 506621036, 506631036, 506641036, 506...</msg>
<status status="PASS" starttime="20201112 09:44:42.230" endtime="20201112 09:44:44.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.351" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 506601022, 'wakeups': [506611037, 506621036, 506631036, 506641036, 506...</msg>
<status status="PASS" starttime="20201112 09:44:44.347" endtime="20201112 09:44:44.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.353" endtime="20201112 09:44:44.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.227" endtime="20201112 09:44:44.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.225" endtime="20201112 09:44:44.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.364" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'wakeups': [506611037, 506621036, 506631036, 506641036, 506651036, 506661036, 506671036, 506681036, 506691036, 506701036, 506711036, 506721036, 506731036, 5...</msg>
<status status="PASS" starttime="20201112 09:44:44.360" endtime="20201112 09:44:44.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.373" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:44.371" endtime="20201112 09:44:44.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.377" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:44.375" endtime="20201112 09:44:44.378"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.366" endtime="20201112 09:44:44.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.388" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:44.386" endtime="20201112 09:44:44.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.392" level="INFO">VALUE: 506601022</msg>
<status status="PASS" starttime="20201112 09:44:44.390" endtime="20201112 09:44:44.393"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.380" endtime="20201112 09:44:44.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.402" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:44.400" endtime="20201112 09:44:44.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.407" level="INFO">VALUE: [506611037, 506621036, 506631036, 506641036, 506651036, 506661036, 506671036, 506681036, 506691036, 506701036, 506711036, 506721036, 506731036, 506741036, 506751036, 506761036, 506771036, 506781036, 506791036, 506801036, 506811036, 506821036, 506831036, 506841036, 506851036, 506861036, 506871036, 506881036, 506891036, 506901036, 506911036, 506921036, 506931036, 506941036, 506951036, 506961036, 506971036, 506981036, 506991036, 507001036, 507011036, 507021036, 507031036, 507041036, 507051036, 507061036, 507071036, 507081036, 507091036, 507101036, 507111036, 507121036, 507131036, 507141036, 507151036, 507161036, 507171036, 507181036, 507191036, 507201036, 507211036, 507221036, 507231036, 507241036, 507251036, 507261036, 507271036, 507281036, 507291036, 507301036, 507311036, 507321036, 507331036, 507341036, 507351036, 507361036, 507371036, 507381036, 507391036, 507401036, 507411036, 507421036, 507431036, 507441036, 507451036, 507461036, 507471036, 507481036, 507491036, 507501036, 507511036, 507521036, 507531036, 507541036, 507551036, 507561036, 507571036, 507581036, 507591036, 507601036]</msg>
<status status="PASS" starttime="20201112 09:44:44.405" endtime="20201112 09:44:44.412"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.395" endtime="20201112 09:44:44.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.420" endtime="20201112 09:44:44.710"></status>
</kw>
<msg timestamp="20201112 09:44:44.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022948486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032965486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.418" endtime="20201112 09:44:44.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022948486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032965486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:44.713" endtime="20201112 09:44:44.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.721" endtime="20201112 09:44:44.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.416" endtime="20201112 09:44:44.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.414" endtime="20201112 09:44:44.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:44.748" level="INFO">${RESULT} = {'time': [0.022948486, 0.032965486, 0.042965292, 0.052965653, 0.062966264, 0.072967069, 0.082967778, 0.092968583, 0.102969181, 0.11297, 0.122970708, 0.1329715, 0.142972125, 0.152972917, 0.162973639, 0...</msg>
<status status="PASS" starttime="20201112 09:44:44.724" endtime="20201112 09:44:44.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.753" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:44.751" endtime="20201112 09:44:44.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.755" level="INFO">VALUE: 0.022948486</msg>
<status status="PASS" starttime="20201112 09:44:44.754" endtime="20201112 09:44:44.755"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.749" endtime="20201112 09:44:44.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.760" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:44.759" endtime="20201112 09:44:44.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:44.762" level="INFO">VALUE: [0.032965486, 0.042965292, 0.052965653, 0.062966264, 0.072967069, 0.082967778, 0.092968583, 0.102969181, 0.11297, 0.122970708, 0.1329715, 0.142972125, 0.152972917, 0.162973639, 0.172974431, 0.182975042, 0.192975847, 0.202976569, 0.212977375, 0.222977986, 0.232978778, 0.2429795, 0.252980292, 0.262980903, 0.272981722, 0.282982431, 0.292983236, 0.302983847, 0.312984639, 0.322985361, 0.332986167, 0.342986778, 0.352987583, 0.362988306, 0.372989097, 0.382989722, 0.392990514, 0.40299125, 0.412992028, 0.422992625, 0.432993431, 0.442994153, 0.452994944, 0.462995556, 0.472996347, 0.482997069, 0.492997833, 0.502998444, 0.51299925, 0.522999958, 0.53300075, 0.543001389, 0.553002208, 0.563002875, 0.573003667, 0.583004278, 0.593005056, 0.603005792, 0.613006569, 0.623007194, 0.633007986, 0.643008694, 0.653009472, 0.663010083, 0.673010903, 0.683011611, 0.693012389, 0.703013, 0.713013806, 0.723014556, 0.733015306, 0.743015958, 0.753016708, 0.763017431, 0.773018222, 0.783018819, 0.793019639, 0.803020347, 0.813021125, 0.823021736, 0.833022542, 0.843023306, 0.853024042, 0.863024681, 0.873025444, 0.883026167, 0.893026958, 0.903027583, 0.913028361, 0.923029097, 0.933029889, 0.943030486, 0.953031306, 0.963032, 0.973032792, 0.983033403, 0.993034194, 1.003034917, 1.013035708, 1.023036306] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:44.761" endtime="20201112 09:44:44.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.756" endtime="20201112 09:44:44.763"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.765" endtime="20201112 09:44:44.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:44.769" endtime="20201112 09:44:44.788"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.767" endtime="20201112 09:44:44.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.763" endtime="20201112 09:44:44.789"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.224" endtime="20201112 09:44:44.789"></status>
</kw>
<msg timestamp="20201112 09:44:44.790" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:44.798" endtime="20201112 09:44:46.909"></status>
</kw>
<msg timestamp="20201112 09:44:46.911" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 509166754, 'wakeups': [509176769, 509186768, 509196768, 509206768, 509...</msg>
<status status="PASS" starttime="20201112 09:44:44.796" endtime="20201112 09:44:46.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.917" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 509166754, 'wakeups': [509176769, 509186768, 509196768, 509206768, 509...</msg>
<status status="PASS" starttime="20201112 09:44:46.913" endtime="20201112 09:44:46.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.919" endtime="20201112 09:44:46.923"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.793" endtime="20201112 09:44:46.924"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.791" endtime="20201112 09:44:46.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:46.931" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'wakeups': [509176769, 509186768, 509196768, 509206768, 509216768, 509226768, 509236768, 509246768, 509256768, 509266768, 509276768, 509286768, 509296768, 5...</msg>
<status status="PASS" starttime="20201112 09:44:46.927" endtime="20201112 09:44:46.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.940" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:46.938" endtime="20201112 09:44:46.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.945" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:46.942" endtime="20201112 09:44:46.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.933" endtime="20201112 09:44:46.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.958" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:46.955" endtime="20201112 09:44:46.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.962" level="INFO">VALUE: 509166754</msg>
<status status="PASS" starttime="20201112 09:44:46.960" endtime="20201112 09:44:46.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.948" endtime="20201112 09:44:46.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.974" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:46.972" endtime="20201112 09:44:46.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:46.978" level="INFO">VALUE: [509176769, 509186768, 509196768, 509206768, 509216768, 509226768, 509236768, 509246768, 509256768, 509266768, 509276768, 509286768, 509296768, 509306768, 509316768, 509326768, 509336768, 509346768, 509356768, 509366768, 509376768, 509386768, 509396768, 509406768, 509416768, 509426768, 509436768, 509446768, 509456768, 509466768, 509476768, 509486768, 509496768, 509506768, 509516768, 509526768, 509536768, 509546768, 509556768, 509566768, 509576768, 509586768, 509596768, 509606768, 509616768, 509626768, 509636768, 509646768, 509656768, 509666768, 509676768, 509686768, 509696768, 509706768, 509716768, 509726768, 509736768, 509746768, 509756768, 509766768, 509776768, 509786768, 509796768, 509806768, 509816768, 509826768, 509836768, 509846768, 509856768, 509866768, 509876768, 509886768, 509896768, 509906768, 509916768, 509926768, 509936768, 509946768, 509956768, 509966768, 509976768, 509986768, 509996768, 510006768, 510016768, 510026768, 510036768, 510046768, 510056768, 510066768, 510076768, 510086768, 510096768, 510106768, 510116768, 510126768, 510136768, 510146768, 510156768, 510166768]</msg>
<status status="PASS" starttime="20201112 09:44:46.977" endtime="20201112 09:44:46.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.966" endtime="20201112 09:44:46.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:46.985" endtime="20201112 09:44:47.276"></status>
</kw>
<msg timestamp="20201112 09:44:47.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029594708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:46.984" endtime="20201112 09:44:47.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019577708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029594708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:47.280" endtime="20201112 09:44:47.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.288" endtime="20201112 09:44:47.290"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.981" endtime="20201112 09:44:47.291"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:46.979" endtime="20201112 09:44:47.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:47.315" level="INFO">${RESULT} = {'time': [0.019577708, 0.029594708, 0.0395945, 0.049594903, 0.059595514, 0.069596264, 0.079597, 0.089597792, 0.099598403, 0.10959925, 0.1196, 0.12960075, 0.139601333, 0.149602153, 0.159602875, 0.16960...</msg>
<status status="PASS" starttime="20201112 09:44:47.292" endtime="20201112 09:44:47.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.320" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:47.319" endtime="20201112 09:44:47.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.322" level="INFO">VALUE: 0.019577708</msg>
<status status="PASS" starttime="20201112 09:44:47.321" endtime="20201112 09:44:47.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.316" endtime="20201112 09:44:47.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.328" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:47.326" endtime="20201112 09:44:47.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:47.330" level="INFO">VALUE: [0.029594708, 0.0395945, 0.049594903, 0.059595514, 0.069596264, 0.079597, 0.089597792, 0.099598403, 0.10959925, 0.1196, 0.12960075, 0.139601333, 0.149602153, 0.159602875, 0.169603653, 0.179604278, 0.189605069, 0.199605806, 0.209606583, 0.219607208, 0.229608, 0.239608722, 0.249609514, 0.259610139, 0.269610931, 0.279611667, 0.289612458, 0.299613069, 0.309613861, 0.319614583, 0.329615375, 0.339616014, 0.349616792, 0.359617528, 0.369618319, 0.379618944, 0.389619792, 0.399620458, 0.409621292, 0.419621903, 0.429622667, 0.439623389, 0.449624181, 0.459624806, 0.469625611, 0.479626319, 0.489627111, 0.499627722, 0.509628542, 0.519629222, 0.529630014, 0.539630611, 0.549631403, 0.559632125, 0.569632917, 0.579633556, 0.589634333, 0.599635042, 0.609635819, 0.619636514, 0.629637222, 0.639637958, 0.64963875, 0.659639333, 0.669640139, 0.679640875, 0.689641653, 0.69964225, 0.709643042, 0.719643764, 0.729644556, 0.739645222, 0.749645958, 0.759646681, 0.769647458, 0.779648069, 0.789648889, 0.799649597, 0.809650375, 0.819650986, 0.829651778, 0.839652514, 0.849653306, 0.859653903, 0.869654694, 0.879655417, 0.889656222, 0.899656819, 0.909657611, 0.919658333, 0.929659111, 0.939659736, 0.949660542, 0.959661236, 0.969662028, 0.979662639, 0.989663431, 0.999664153, 1.009664958, 1.019665556] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:47.329" endtime="20201112 09:44:47.331"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.323" endtime="20201112 09:44:47.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.334" endtime="20201112 09:44:47.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:47.337" endtime="20201112 09:44:47.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.336" endtime="20201112 09:44:47.357"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.332" endtime="20201112 09:44:47.358"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:44.790" endtime="20201112 09:44:47.358"></status>
</kw>
<msg timestamp="20201112 09:44:47.358" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:47.368" endtime="20201112 09:44:49.479"></status>
</kw>
<msg timestamp="20201112 09:44:49.480" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 511736360, 'wakeups': [511746375, 511756374, 511766374, 511776374, 511...</msg>
<status status="PASS" starttime="20201112 09:44:47.365" endtime="20201112 09:44:49.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.486" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 511736360, 'wakeups': [511746375, 511756374, 511766374, 511776374, 511...</msg>
<status status="PASS" starttime="20201112 09:44:49.483" endtime="20201112 09:44:49.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.489" endtime="20201112 09:44:49.492"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.362" endtime="20201112 09:44:49.494"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.360" endtime="20201112 09:44:49.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.500" level="INFO">${RESULT} = {'timer-count': 3, 'timer-interval': 10000, 'wakeups': [511746375, 511756374, 511766374, 511776374, 511786374, 511796374, 511806374, 511816374, 511826374, 511836374, 511846374, 511856374, 511866374, 5...</msg>
<status status="PASS" starttime="20201112 09:44:49.496" endtime="20201112 09:44:49.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.516" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:49.514" endtime="20201112 09:44:49.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.521" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:49.519" endtime="20201112 09:44:49.522"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.509" endtime="20201112 09:44:49.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.529" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:49.528" endtime="20201112 09:44:49.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.531" level="INFO">VALUE: 511736360</msg>
<status status="PASS" starttime="20201112 09:44:49.530" endtime="20201112 09:44:49.532"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.524" endtime="20201112 09:44:49.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.536" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:49.535" endtime="20201112 09:44:49.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.539" level="INFO">VALUE: [511746375, 511756374, 511766374, 511776374, 511786374, 511796374, 511806374, 511816374, 511826374, 511836374, 511846374, 511856374, 511866374, 511876374, 511886374, 511896374, 511906374, 511916374, 511926374, 511936374, 511946374, 511956374, 511966374, 511976374, 511986374, 511996374, 512006374, 512016374, 512026374, 512036374, 512046374, 512056374, 512066374, 512076374, 512086374, 512096374, 512106374, 512116374, 512126374, 512136374, 512146374, 512156374, 512166374, 512176374, 512186374, 512196374, 512206374, 512216374, 512226374, 512236374, 512246374, 512256374, 512266374, 512276374, 512286374, 512296374, 512306374, 512316374, 512326374, 512336374, 512346374, 512356374, 512366374, 512376374, 512386374, 512396374, 512406374, 512416374, 512426374, 512436374, 512446374, 512456374, 512466374, 512476374, 512486374, 512496374, 512506374, 512516374, 512526374, 512536374, 512546374, 512556374, 512566374, 512576374, 512586374, 512596374, 512606374, 512616374, 512626374, 512636374, 512646374, 512656374, 512666374, 512676374, 512686374, 512696374, 512706374, 512716374, 512726374, 512736374]</msg>
<status status="PASS" starttime="20201112 09:44:49.537" endtime="20201112 09:44:49.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.533" endtime="20201112 09:44:49.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.547" endtime="20201112 09:44:49.838"></status>
</kw>
<msg timestamp="20201112 09:44:49.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030433681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.545" endtime="20201112 09:44:49.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030433681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:49.842" endtime="20201112 09:44:49.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.849" endtime="20201112 09:44:49.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.542" endtime="20201112 09:44:49.851"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.540" endtime="20201112 09:44:49.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:49.875" level="INFO">${RESULT} = {'time': [0.020416694, 0.030433681, 0.040433486, 0.050433847, 0.060434458, 0.07043525, 0.080435986, 0.090436778, 0.100437389, 0.110438181, 0.120438903, 0.130439694, 0.140440319, 0.150441111, 0.1604418...</msg>
<status status="PASS" starttime="20201112 09:44:49.852" endtime="20201112 09:44:49.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.880" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 09:44:49.879" endtime="20201112 09:44:49.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.882" level="INFO">VALUE: 0.020416694</msg>
<status status="PASS" starttime="20201112 09:44:49.881" endtime="20201112 09:44:49.882"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.876" endtime="20201112 09:44:49.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.887" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:49.886" endtime="20201112 09:44:49.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:49.890" level="INFO">VALUE: [0.030433681, 0.040433486, 0.050433847, 0.060434458, 0.07043525, 0.080435986, 0.090436778, 0.100437389, 0.110438181, 0.120438903, 0.130439694, 0.140440319, 0.150441111, 0.160441833, 0.170442625, 0.180443264, 0.190444042, 0.200444806, 0.210445583, 0.220446208, 0.230447, 0.240447708, 0.250448514, 0.260449139, 0.270449917, 0.280450653, 0.290451444, 0.300452042, 0.310452875, 0.320453569, 0.330454361, 0.340455042, 0.350455764, 0.360456486, 0.370457264, 0.380457875, 0.390458667, 0.400459403, 0.410460194, 0.420460792, 0.430461583, 0.440462306, 0.450463125, 0.460463708, 0.4704645, 0.480465222, 0.490466014, 0.500466597, 0.510467403, 0.520468125, 0.530468903, 0.540469514, 0.550470319, 0.560471097, 0.570471819, 0.580472431, 0.590473222, 0.600473931, 0.610474722, 0.620475333, 0.630476125, 0.640476847, 0.650477639, 0.66047825, 0.670479042, 0.680479778, 0.690480556, 0.700481153, 0.710481972, 0.720482667, 0.730483458, 0.740484069, 0.750484875, 0.760485583, 0.770486403, 0.780487042, 0.790487778, 0.8004885, 0.810489319, 0.820489958, 0.830490694, 0.840491417, 0.850492194, 0.860492819, 0.870493611, 0.880494319, 0.890495111, 0.900495722, 0.910496514, 0.920497236, 0.930498028, 0.940498708, 0.950499444, 0.960500153, 0.970500958, 0.980501569, 0.990502347, 1.000503125, 1.010503861, 1.020504458] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:49.889" endtime="20201112 09:44:49.890"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.883" endtime="20201112 09:44:49.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.893" endtime="20201112 09:44:49.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:49.896" endtime="20201112 09:44:49.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.895" endtime="20201112 09:44:49.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.891" endtime="20201112 09:44:49.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:47.359" endtime="20201112 09:44:49.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.222" endtime="20201112 09:44:49.917"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:42.221" endtime="20201112 09:44:49.917"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:49.920" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:49.929" endtime="20201112 09:44:52.039"></status>
</kw>
<msg timestamp="20201112 09:44:52.040" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 514297212, 'wakeups': [514307233, 514317233, 514327231, 514337231, 514...</msg>
<status status="PASS" starttime="20201112 09:44:49.926" endtime="20201112 09:44:52.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.046" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 514297212, 'wakeups': [514307233, 514317233, 514327231, 514337231, 514...</msg>
<status status="PASS" starttime="20201112 09:44:52.042" endtime="20201112 09:44:52.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.049" endtime="20201112 09:44:52.052"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.923" endtime="20201112 09:44:52.053"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.922" endtime="20201112 09:44:52.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.060" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'wakeups': [514307233, 514317233, 514327231, 514337231, 514347231, 514357231, 514367231, 514377231, 514387231, 514397231, 514407231, 514417231, 514427231, 5...</msg>
<status status="PASS" starttime="20201112 09:44:52.056" endtime="20201112 09:44:52.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.068" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:52.066" endtime="20201112 09:44:52.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.072" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:52.070" endtime="20201112 09:44:52.073"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.061" endtime="20201112 09:44:52.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.082" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:52.080" endtime="20201112 09:44:52.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.085" level="INFO">VALUE: 514297212</msg>
<status status="PASS" starttime="20201112 09:44:52.084" endtime="20201112 09:44:52.085"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.075" endtime="20201112 09:44:52.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.090" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:52.089" endtime="20201112 09:44:52.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.092" level="INFO">VALUE: [514307233, 514317233, 514327231, 514337231, 514347231, 514357231, 514367231, 514377231, 514387231, 514397231, 514407231, 514417231, 514427231, 514437231, 514447231, 514457231, 514467231, 514477231, 514487231, 514497231, 514507231, 514517231, 514527231, 514537231, 514547231, 514557231, 514567231, 514577231, 514587231, 514597231, 514607231, 514617231, 514627231, 514637231, 514647231, 514657231, 514667231, 514677231, 514687231, 514697231, 514707231, 514717231, 514727231, 514737231, 514747231, 514757231, 514767231, 514777231, 514787231, 514797231, 514807231, 514817231, 514827231, 514837231, 514847231, 514857231, 514867231, 514877231, 514887231, 514897231, 514907231, 514917231, 514927231, 514937231, 514947231, 514957231, 514967231, 514977231, 514987231, 514997231, 515007231, 515017231, 515027231, 515037231, 515047231, 515057231, 515067231, 515077231, 515087231, 515097231, 515107231, 515117231, 515127231, 515137231, 515147231, 515157231, 515167231, 515177231, 515187231, 515197231, 515207231, 515217231, 515227231, 515237231, 515247231, 515257231, 515267231, 515277231, 515287231, 515297231]</msg>
<status status="PASS" starttime="20201112 09:44:52.091" endtime="20201112 09:44:52.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.087" endtime="20201112 09:44:52.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.100" endtime="20201112 09:44:52.391"></status>
</kw>
<msg timestamp="20201112 09:44:52.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032564611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.098" endtime="20201112 09:44:52.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022542694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032564611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:52.395" endtime="20201112 09:44:52.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.403" endtime="20201112 09:44:52.404"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.096" endtime="20201112 09:44:52.405"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.094" endtime="20201112 09:44:52.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:52.429" level="INFO">${RESULT} = {'time': [0.022542694, 0.032564611, 0.042565097, 0.052564444, 0.062565083, 0.072565875, 0.082566625, 0.092567403, 0.102568014, 0.112568819, 0.122569556, 0.132570333, 0.142570972, 0.152571764, 0.162572...</msg>
<status status="PASS" starttime="20201112 09:44:52.406" endtime="20201112 09:44:52.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.433" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:52.432" endtime="20201112 09:44:52.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.436" level="INFO">VALUE: 0.022542694</msg>
<status status="PASS" starttime="20201112 09:44:52.435" endtime="20201112 09:44:52.436"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.430" endtime="20201112 09:44:52.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.441" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:52.440" endtime="20201112 09:44:52.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:52.443" level="INFO">VALUE: [0.032564611, 0.042565097, 0.052564444, 0.062565083, 0.072565875, 0.082566625, 0.092567403, 0.102568014, 0.112568819, 0.122569556, 0.132570333, 0.142570972, 0.152571764, 0.1625725, 0.172573278, 0.182573889, 0.192574708, 0.202575431, 0.212576236, 0.222576847, 0.232577694, 0.242578361, 0.252579153, 0.262579764, 0.272580597, 0.282581306, 0.292582111, 0.302582708, 0.312583528, 0.322584236, 0.332585028, 0.342585639, 0.352586458, 0.362587167, 0.372587944, 0.382588569, 0.392589347, 0.402590083, 0.412590861, 0.422591514, 0.432592278, 0.442592986, 0.452593819, 0.462594389, 0.472595181, 0.482595917, 0.492596708, 0.502597306, 0.512598111, 0.522598819, 0.532599611, 0.542600208, 0.552601014, 0.562601736, 0.572602528, 0.582603125, 0.592603931, 0.602604653, 0.612605444, 0.622606042, 0.632606847, 0.642607569, 0.652608361, 0.662608986, 0.672609764, 0.6826105, 0.692611278, 0.702611889, 0.712612694, 0.722613417, 0.732614208, 0.742614806, 0.752615597, 0.762616333, 0.772617111, 0.782617736, 0.792618528, 0.802619264, 0.812620042, 0.822620653, 0.832621458, 0.842622236, 0.852622944, 0.862623556, 0.872624375, 0.882625083, 0.892625875, 0.9026265, 0.912627278, 0.922628, 0.932628792, 0.942629417, 0.952630208, 0.962630917, 0.972631708, 0.982632333, 0.992633125, 1.002633833, 1.012634681, 1.022635236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:52.442" endtime="20201112 09:44:52.443"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.437" endtime="20201112 09:44:52.444"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.446" endtime="20201112 09:44:52.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:52.450" endtime="20201112 09:44:52.469"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.448" endtime="20201112 09:44:52.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.445" endtime="20201112 09:44:52.470"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.920" endtime="20201112 09:44:52.470"></status>
</kw>
<msg timestamp="20201112 09:44:52.471" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:52.479" endtime="20201112 09:44:54.590"></status>
</kw>
<msg timestamp="20201112 09:44:54.592" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 516847188, 'wakeups': [516857209, 516867209, 516877207, 516887207, 516...</msg>
<status status="PASS" starttime="20201112 09:44:52.477" endtime="20201112 09:44:54.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 516847188, 'wakeups': [516857209, 516867209, 516877207, 516887207, 516...</msg>
<status status="PASS" starttime="20201112 09:44:54.594" endtime="20201112 09:44:54.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.600" endtime="20201112 09:44:54.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.475" endtime="20201112 09:44:54.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.473" endtime="20201112 09:44:54.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.611" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'wakeups': [516857209, 516867209, 516877207, 516887207, 516897207, 516907207, 516917207, 516927207, 516937207, 516947207, 516957207, 516967207, 516977207, 5...</msg>
<status status="PASS" starttime="20201112 09:44:54.607" endtime="20201112 09:44:54.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.619" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:54.617" endtime="20201112 09:44:54.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.623" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:54.621" endtime="20201112 09:44:54.624"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.612" endtime="20201112 09:44:54.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.633" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:54.631" endtime="20201112 09:44:54.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.638" level="INFO">VALUE: 516847188</msg>
<status status="PASS" starttime="20201112 09:44:54.637" endtime="20201112 09:44:54.638"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.626" endtime="20201112 09:44:54.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.643" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:54.642" endtime="20201112 09:44:54.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.645" level="INFO">VALUE: [516857209, 516867209, 516877207, 516887207, 516897207, 516907207, 516917207, 516927207, 516937207, 516947207, 516957207, 516967207, 516977207, 516987207, 516997207, 517007207, 517017207, 517027207, 517037207, 517047207, 517057207, 517067207, 517077207, 517087207, 517097207, 517107207, 517117207, 517127207, 517137207, 517147207, 517157207, 517167207, 517177207, 517187207, 517197207, 517207207, 517217207, 517227207, 517237207, 517247207, 517257207, 517267207, 517277207, 517287207, 517297207, 517307207, 517317207, 517327207, 517337207, 517347207, 517357207, 517367207, 517377207, 517387207, 517397207, 517407207, 517417207, 517427207, 517437207, 517447207, 517457207, 517467207, 517477207, 517487207, 517497207, 517507207, 517517207, 517527207, 517537207, 517547207, 517557207, 517567207, 517577207, 517587207, 517597207, 517607207, 517617207, 517627207, 517637207, 517647207, 517657207, 517667207, 517677207, 517687207, 517697207, 517707207, 517717207, 517727207, 517737207, 517747207, 517757207, 517767207, 517777207, 517787207, 517797207, 517807207, 517817207, 517827207, 517837207, 517847207]</msg>
<status status="PASS" starttime="20201112 09:44:54.644" endtime="20201112 09:44:54.645"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.639" endtime="20201112 09:44:54.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.657" endtime="20201112 09:44:54.949"></status>
</kw>
<msg timestamp="20201112 09:44:54.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01882775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028849625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:54.656" endtime="20201112 09:44:54.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01882775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028849625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 09:44:54.953" endtime="20201112 09:44:54.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:54.960" endtime="20201112 09:44:54.962"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.653" endtime="20201112 09:44:54.963"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.647" endtime="20201112 09:44:54.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:54.987" level="INFO">${RESULT} = {'time': [0.01882775, 0.028849625, 0.038850139, 0.048849472, 0.058850111, 0.068850903, 0.078851694, 0.088852444, 0.098853042, 0.108853847, 0.118854583, 0.128855375, 0.138855972, 0.148856778, 0.1588575...</msg>
<status status="PASS" starttime="20201112 09:44:54.964" endtime="20201112 09:44:54.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.991" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:54.990" endtime="20201112 09:44:54.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.993" level="INFO">VALUE: 0.01882775</msg>
<status status="PASS" starttime="20201112 09:44:54.992" endtime="20201112 09:44:54.993"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.988" endtime="20201112 09:44:54.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:54.998" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:54.997" endtime="20201112 09:44:54.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:55.002" level="INFO">VALUE: [0.028849625, 0.038850139, 0.048849472, 0.058850111, 0.068850903, 0.078851694, 0.088852444, 0.098853042, 0.108853847, 0.118854583, 0.128855375, 0.138855972, 0.148856778, 0.1588575, 0.168858319, 0.178858917, 0.188859722, 0.198860444, 0.208861236, 0.218861861, 0.228862667, 0.238863389, 0.248864181, 0.258864847, 0.268865597, 0.278866333, 0.288867111, 0.298867722, 0.308868528, 0.31886925, 0.328870056, 0.338870667, 0.348871486, 0.358872194, 0.368872986, 0.378873625, 0.388874403, 0.398875153, 0.408876, 0.418876528, 0.428877389, 0.438878056, 0.448878833, 0.458879444, 0.468880292, 0.478880986, 0.488881764, 0.498882361, 0.508883153, 0.518883875, 0.528884667, 0.538885319, 0.548886069, 0.558886792, 0.568887583, 0.578888181, 0.588889014, 0.598889736, 0.608890514, 0.618891111, 0.628891917, 0.638892611, 0.648893403, 0.658894028, 0.668894806, 0.678895528, 0.688896333, 0.698896931, 0.708897722, 0.718898444, 0.728899236, 0.738899861, 0.748900639, 0.758901361, 0.768902167, 0.778902764, 0.788903569, 0.798904278, 0.808905083, 0.818905681, 0.828906486, 0.838907208, 0.848907986, 0.858908611, 0.868909403, 0.878910139, 0.888910917, 0.898911514, 0.908912333, 0.918913042, 0.928913833, 0.938914431, 0.948915236, 0.958915972, 0.96891675, 0.978917347, 0.988918167, 0.998918889, 1.008919681, 1.018920278] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:55.000" endtime="20201112 09:44:55.002"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:54.995" endtime="20201112 09:44:55.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.005" endtime="20201112 09:44:55.006"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:55.008" endtime="20201112 09:44:55.027"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.007" endtime="20201112 09:44:55.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.003" endtime="20201112 09:44:55.028"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:52.471" endtime="20201112 09:44:55.029"></status>
</kw>
<msg timestamp="20201112 09:44:55.029" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:55.037" endtime="20201112 09:44:57.147"></status>
</kw>
<msg timestamp="20201112 09:44:57.149" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 519405294, 'wakeups': [519415315, 519425315, 519435313, 519445313, 519...</msg>
<status status="PASS" starttime="20201112 09:44:55.035" endtime="20201112 09:44:57.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 519405294, 'wakeups': [519415315, 519425315, 519435313, 519445313, 519...</msg>
<status status="PASS" starttime="20201112 09:44:57.151" endtime="20201112 09:44:57.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.158" endtime="20201112 09:44:57.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.033" endtime="20201112 09:44:57.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.031" endtime="20201112 09:44:57.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.169" level="INFO">${RESULT} = {'timer-count': 4, 'timer-interval': 10000, 'wakeups': [519415315, 519425315, 519435313, 519445313, 519455313, 519465313, 519475313, 519485313, 519495313, 519505313, 519515313, 519525313, 519535313, 5...</msg>
<status status="PASS" starttime="20201112 09:44:57.165" endtime="20201112 09:44:57.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.177" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:57.175" endtime="20201112 09:44:57.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.181" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:57.179" endtime="20201112 09:44:57.182"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.170" endtime="20201112 09:44:57.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.191" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:57.189" endtime="20201112 09:44:57.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.195" level="INFO">VALUE: 519405294</msg>
<status status="PASS" starttime="20201112 09:44:57.193" endtime="20201112 09:44:57.196"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.184" endtime="20201112 09:44:57.197"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.206" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:57.203" endtime="20201112 09:44:57.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.210" level="INFO">VALUE: [519415315, 519425315, 519435313, 519445313, 519455313, 519465313, 519475313, 519485313, 519495313, 519505313, 519515313, 519525313, 519535313, 519545313, 519555313, 519565313, 519575313, 519585313, 519595313, 519605313, 519615313, 519625313, 519635313, 519645313, 519655313, 519665313, 519675313, 519685313, 519695313, 519705313, 519715313, 519725313, 519735313, 519745313, 519755313, 519765313, 519775313, 519785313, 519795313, 519805313, 519815313, 519825313, 519835313, 519845313, 519855313, 519865313, 519875313, 519885313, 519895313, 519905313, 519915313, 519925313, 519935313, 519945313, 519955313, 519965313, 519975313, 519985313, 519995313, 520005313, 520015313, 520025313, 520035313, 520045313, 520055313, 520065313, 520075313, 520085313, 520095313, 520105313, 520115313, 520125313, 520135313, 520145313, 520155313, 520165313, 520175313, 520185313, 520195313, 520205313, 520215313, 520225313, 520235313, 520245313, 520255313, 520265313, 520275313, 520285313, 520295313, 520305313, 520315313, 520325313, 520335313, 520345313, 520355313, 520365313, 520375313, 520385313, 520395313, 520405313]</msg>
<status status="PASS" starttime="20201112 09:44:57.208" endtime="20201112 09:44:57.211"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.198" endtime="20201112 09:44:57.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.225" endtime="20201112 09:44:57.526"></status>
</kw>
<msg timestamp="20201112 09:44:57.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018847569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028870125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.222" endtime="20201112 09:44:57.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018847569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028870125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:57.530" endtime="20201112 09:44:57.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.537" endtime="20201112 09:44:57.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.217" endtime="20201112 09:44:57.539"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.213" endtime="20201112 09:44:57.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:57.563" level="INFO">${RESULT} = {'time': [0.018847569, 0.028870125, 0.038870611, 0.048869986, 0.058870611, 0.068871472, 0.078872125, 0.088872917, 0.098873569, 0.108874333, 0.118875083, 0.128875847, 0.138876458, 0.148877264, 0.158877...</msg>
<status status="PASS" starttime="20201112 09:44:57.541" endtime="20201112 09:44:57.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.568" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 09:44:57.567" endtime="20201112 09:44:57.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.570" level="INFO">VALUE: 0.018847569</msg>
<status status="PASS" starttime="20201112 09:44:57.569" endtime="20201112 09:44:57.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.564" endtime="20201112 09:44:57.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.575" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:57.574" endtime="20201112 09:44:57.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:57.577" level="INFO">VALUE: [0.028870125, 0.038870611, 0.048869986, 0.058870611, 0.068871472, 0.078872125, 0.088872917, 0.098873569, 0.108874333, 0.118875083, 0.128875847, 0.138876458, 0.148877264, 0.158877986, 0.168878819, 0.178879417, 0.188880208, 0.198880931, 0.208881722, 0.218882347, 0.228883153, 0.238883861, 0.248884653, 0.258885264, 0.268886069, 0.278886806, 0.288887597, 0.298888208, 0.308889014, 0.318889736, 0.328890528, 0.338891181, 0.348891944, 0.358892681, 0.368893542, 0.378894125, 0.388894889, 0.398895625, 0.408896431, 0.418897028, 0.428897819, 0.438898556, 0.448899333, 0.458899972, 0.468900736, 0.478901458, 0.488902278, 0.498902861, 0.508903653, 0.518904389, 0.528905153, 0.538905764, 0.548906569, 0.558907292, 0.568908083, 0.578908694, 0.588909542, 0.598910194, 0.608910986, 0.618911611, 0.628912389, 0.638913111, 0.648913903, 0.658914514, 0.668915347, 0.678916028, 0.688916819, 0.698917444, 0.708918236, 0.718918944, 0.728919736, 0.738920361, 0.748921139, 0.758921875, 0.768922681, 0.778923264, 0.788924056, 0.798924778, 0.808925569, 0.818926181, 0.828926972, 0.838927694, 0.848928486, 0.858929097, 0.868929917, 0.878930625, 0.888931417, 0.898932014, 0.908932875, 0.918933542, 0.928934347, 0.938934944, 0.948935764, 0.958936458, 0.96893725, 0.978937861, 0.988938653, 0.998939375, 1.008940181, 1.018940778] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:44:57.576" endtime="20201112 09:44:57.578"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.571" endtime="20201112 09:44:57.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.580" endtime="20201112 09:44:57.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:44:57.584" endtime="20201112 09:44:57.603"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.582" endtime="20201112 09:44:57.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.579" endtime="20201112 09:44:57.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:55.029" endtime="20201112 09:44:57.604"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.918" endtime="20201112 09:44:57.605"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:49.918" endtime="20201112 09:44:57.605"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:44:57.607" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:57.616" endtime="20201112 09:44:59.726"></status>
</kw>
<msg timestamp="20201112 09:44:59.727" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 521984771, 'wakeups': [521994797, 522004796, 522014796, 522024797, 522...</msg>
<status status="PASS" starttime="20201112 09:44:57.614" endtime="20201112 09:44:59.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.733" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 521984771, 'wakeups': [521994797, 522004796, 522014796, 522024797, 522...</msg>
<status status="PASS" starttime="20201112 09:44:59.730" endtime="20201112 09:44:59.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.736" endtime="20201112 09:44:59.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.611" endtime="20201112 09:44:59.740"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.609" endtime="20201112 09:44:59.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:44:59.746" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'wakeups': [521994797, 522004796, 522014796, 522024797, 522034797, 522044797, 522054797, 522064797, 522074797, 522084797, 522094797, 522104797, 522114797, 5...</msg>
<status status="PASS" starttime="20201112 09:44:59.742" endtime="20201112 09:44:59.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.762" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:44:59.760" endtime="20201112 09:44:59.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.766" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:44:59.764" endtime="20201112 09:44:59.767"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.755" endtime="20201112 09:44:59.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.776" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:44:59.774" endtime="20201112 09:44:59.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.781" level="INFO">VALUE: 521984771</msg>
<status status="PASS" starttime="20201112 09:44:59.779" endtime="20201112 09:44:59.781"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.769" endtime="20201112 09:44:59.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.791" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:44:59.789" endtime="20201112 09:44:59.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:44:59.795" level="INFO">VALUE: [521994797, 522004796, 522014796, 522024797, 522034797, 522044797, 522054797, 522064797, 522074797, 522084797, 522094797, 522104797, 522114797, 522124797, 522134797, 522144797, 522154797, 522164797, 522174797, 522184797, 522194797, 522204797, 522214797, 522224797, 522234797, 522244797, 522254797, 522264797, 522274797, 522284797, 522294797, 522304797, 522314797, 522324797, 522334797, 522344797, 522354797, 522364797, 522374797, 522384797, 522394797, 522404797, 522414797, 522424797, 522434797, 522444797, 522454797, 522464797, 522474797, 522484797, 522494797, 522504797, 522514797, 522524797, 522534797, 522544797, 522554797, 522564797, 522574797, 522584797, 522594797, 522604797, 522614797, 522624797, 522634797, 522644797, 522654797, 522664797, 522674797, 522684797, 522694797, 522704797, 522714797, 522724797, 522734797, 522744797, 522754797, 522764797, 522774797, 522784797, 522794797, 522804797, 522814797, 522824797, 522834797, 522844797, 522854797, 522864797, 522874797, 522884797, 522894797, 522904797, 522914797, 522924797, 522934797, 522944797, 522954797, 522964797, 522974797, 522984797]</msg>
<status status="PASS" starttime="20201112 09:44:59.793" endtime="20201112 09:44:59.796"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.784" endtime="20201112 09:44:59.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:44:59.810" endtime="20201112 09:45:00.109"></status>
</kw>
<msg timestamp="20201112 09:45:00.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032627625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:44:59.807" endtime="20201112 09:45:00.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022600097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032627625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:00.112" endtime="20201112 09:45:00.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.120" endtime="20201112 09:45:00.121"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.802" endtime="20201112 09:45:00.122"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:59.798" endtime="20201112 09:45:00.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:00.147" level="INFO">${RESULT} = {'time': [0.022600097, 0.032627625, 0.042627208, 0.052628306, 0.062629931, 0.072630736, 0.082631444, 0.092632236, 0.102632847, 0.112633667, 0.122634375, 0.132635167, 0.142635778, 0.152636583, 0.162637...</msg>
<status status="PASS" starttime="20201112 09:45:00.123" endtime="20201112 09:45:00.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.151" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:00.150" endtime="20201112 09:45:00.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.153" level="INFO">VALUE: 0.022600097</msg>
<status status="PASS" starttime="20201112 09:45:00.152" endtime="20201112 09:45:00.153"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.148" endtime="20201112 09:45:00.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.159" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:00.157" endtime="20201112 09:45:00.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:00.161" level="INFO">VALUE: [0.032627625, 0.042627208, 0.052628306, 0.062629931, 0.072630736, 0.082631444, 0.092632236, 0.102632847, 0.112633667, 0.122634375, 0.132635167, 0.142635778, 0.152636583, 0.162637333, 0.172638139, 0.182638722, 0.192639528, 0.202640264, 0.212641083, 0.222641708, 0.232642458, 0.242643181, 0.252644, 0.262644597, 0.272645403, 0.282646125, 0.292646917, 0.302647556, 0.312648333, 0.322649069, 0.332649861, 0.342650486, 0.352651292, 0.362652042, 0.372652792, 0.382653431, 0.392654264, 0.402654931, 0.412655722, 0.422656333, 0.432657125, 0.442657847, 0.452658653, 0.462659264, 0.472660056, 0.482660778, 0.492661569, 0.502662167, 0.512662958, 0.522663694, 0.532664472, 0.542665069, 0.552665875, 0.562666681, 0.572667375, 0.582668, 0.592668806, 0.602669514, 0.612670292, 0.622670903, 0.632671722, 0.642672417, 0.652673222, 0.662673833, 0.672674625, 0.682675347, 0.692676125, 0.70267675, 0.712677542, 0.722678264, 0.732679056, 0.742679653, 0.752680472, 0.76268125, 0.772681958, 0.782682569, 0.792683417, 0.802684097, 0.812684889, 0.8226855, 0.832686306, 0.842687014, 0.852687833, 0.862688417, 0.872689208, 0.882689931, 0.892690722, 0.902691333, 0.912692139, 0.922692861, 0.932693639, 0.94269425, 0.952695056, 0.962695778, 0.972696556, 0.982697167, 0.992697972, 1.002698778, 1.012699486, 1.022700083] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:00.160" endtime="20201112 09:45:00.161"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.155" endtime="20201112 09:45:00.162"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.164" endtime="20201112 09:45:00.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:00.168" endtime="20201112 09:45:00.187"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.166" endtime="20201112 09:45:00.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.162" endtime="20201112 09:45:00.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.608" endtime="20201112 09:45:00.188"></status>
</kw>
<msg timestamp="20201112 09:45:00.188" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:00.196" endtime="20201112 09:45:02.306"></status>
</kw>
<msg timestamp="20201112 09:45:02.308" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 524564881, 'wakeups': [524574907, 524584906, 524594906, 524604907, 524...</msg>
<status status="PASS" starttime="20201112 09:45:00.195" endtime="20201112 09:45:02.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.313" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 524564881, 'wakeups': [524574907, 524584906, 524594906, 524604907, 524...</msg>
<status status="PASS" starttime="20201112 09:45:02.310" endtime="20201112 09:45:02.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.316" endtime="20201112 09:45:02.319"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.192" endtime="20201112 09:45:02.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.190" endtime="20201112 09:45:02.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.327" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'wakeups': [524574907, 524584906, 524594906, 524604907, 524614907, 524624907, 524634907, 524644907, 524654907, 524664907, 524674907, 524684907, 524694907, 5...</msg>
<status status="PASS" starttime="20201112 09:45:02.323" endtime="20201112 09:45:02.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.335" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:02.333" endtime="20201112 09:45:02.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.339" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:02.337" endtime="20201112 09:45:02.340"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.328" endtime="20201112 09:45:02.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.351" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:02.349" endtime="20201112 09:45:02.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.356" level="INFO">VALUE: 524564881</msg>
<status status="PASS" starttime="20201112 09:45:02.354" endtime="20201112 09:45:02.356"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.342" endtime="20201112 09:45:02.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.366" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:02.363" endtime="20201112 09:45:02.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.371" level="INFO">VALUE: [524574907, 524584906, 524594906, 524604907, 524614907, 524624907, 524634907, 524644907, 524654907, 524664907, 524674907, 524684907, 524694907, 524704907, 524714907, 524724907, 524734907, 524744907, 524754907, 524764907, 524774907, 524784907, 524794907, 524804907, 524814907, 524824907, 524834907, 524844907, 524854907, 524864907, 524874907, 524884907, 524894907, 524904907, 524914907, 524924907, 524934907, 524944907, 524954907, 524964907, 524974907, 524984907, 524994907, 525004907, 525014907, 525024907, 525034907, 525044907, 525054907, 525064907, 525074907, 525084907, 525094907, 525104907, 525114907, 525124907, 525134907, 525144907, 525154907, 525164907, 525174907, 525184907, 525194907, 525204907, 525214907, 525224907, 525234907, 525244907, 525254907, 525264907, 525274907, 525284907, 525294907, 525304907, 525314907, 525324907, 525334907, 525344907, 525354907, 525364907, 525374907, 525384907, 525394907, 525404907, 525414907, 525424907, 525434907, 525444907, 525454907, 525464907, 525474907, 525484907, 525494907, 525504907, 525514907, 525524907, 525534907, 525544907, 525554907, 525564907]</msg>
<status status="PASS" starttime="20201112 09:45:02.369" endtime="20201112 09:45:02.372"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.359" endtime="20201112 09:45:02.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.386" endtime="20201112 09:45:02.682"></status>
</kw>
<msg timestamp="20201112 09:45:02.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018805958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028833486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.383" endtime="20201112 09:45:02.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018805958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028833486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:02.686" endtime="20201112 09:45:02.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.693" endtime="20201112 09:45:02.695"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.378" endtime="20201112 09:45:02.696"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.374" endtime="20201112 09:45:02.696"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:02.719" level="INFO">${RESULT} = {'time': [0.018805958, 0.028833486, 0.038833069, 0.048834139, 0.058835806, 0.068836597, 0.078837306, 0.088838083, 0.098838694, 0.108839514, 0.118840222, 0.128841028, 0.138841667, 0.148842431, 0.158843...</msg>
<status status="PASS" starttime="20201112 09:45:02.697" endtime="20201112 09:45:02.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.724" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:02.723" endtime="20201112 09:45:02.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.726" level="INFO">VALUE: 0.018805958</msg>
<status status="PASS" starttime="20201112 09:45:02.725" endtime="20201112 09:45:02.726"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.720" endtime="20201112 09:45:02.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.732" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:02.730" endtime="20201112 09:45:02.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:02.734" level="INFO">VALUE: [0.028833486, 0.038833069, 0.048834139, 0.058835806, 0.068836597, 0.078837306, 0.088838083, 0.098838694, 0.108839514, 0.118840222, 0.128841028, 0.138841667, 0.148842431, 0.158843167, 0.168843958, 0.178844569, 0.188845389, 0.198846097, 0.208846917, 0.2188475, 0.228848306, 0.238849056, 0.248849861, 0.258850431, 0.268851236, 0.278851958, 0.288852764, 0.298853375, 0.308854181, 0.318854903, 0.328855694, 0.338856319, 0.348857111, 0.358857833, 0.368858625, 0.37885925, 0.388860042, 0.398860778, 0.408861569, 0.418862167, 0.428863, 0.438863681, 0.448864472, 0.458865069, 0.468865875, 0.478866583, 0.488867444, 0.498867986, 0.508868792, 0.5188695, 0.528870292, 0.538870986, 0.548871694, 0.558872417, 0.568873194, 0.578873819, 0.588874611, 0.598875361, 0.608876111, 0.618876736, 0.628877528, 0.638878236, 0.648879042, 0.658879639, 0.668880444, 0.678881167, 0.688881958, 0.698882556, 0.708883361, 0.718884069, 0.728884875, 0.738885472, 0.748886306, 0.758887, 0.768887819, 0.778888403, 0.788889181, 0.798889903, 0.808890764, 0.818891333, 0.828892097, 0.838892819, 0.848893611, 0.858894236, 0.868895014, 0.878895736, 0.888896528, 0.898897153, 0.908897931, 0.918898667, 0.928899444, 0.938900056, 0.948900917, 0.958901597, 0.968902361, 0.978902972, 0.988903778, 0.998904486, 1.008905292, 1.018905889] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:02.733" endtime="20201112 09:45:02.735"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.727" endtime="20201112 09:45:02.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.737" endtime="20201112 09:45:02.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:02.741" endtime="20201112 09:45:02.760"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.740" endtime="20201112 09:45:02.761"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.736" endtime="20201112 09:45:02.762"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:00.189" endtime="20201112 09:45:02.762"></status>
</kw>
<msg timestamp="20201112 09:45:02.762" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:02.771" endtime="20201112 09:45:04.882"></status>
</kw>
<msg timestamp="20201112 09:45:04.883" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 527139730, 'wakeups': [527149756, 527159755, 527169755, 527179756, 527...</msg>
<status status="PASS" starttime="20201112 09:45:02.769" endtime="20201112 09:45:04.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.889" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 527139730, 'wakeups': [527149756, 527159755, 527169755, 527179756, 527...</msg>
<status status="PASS" starttime="20201112 09:45:04.885" endtime="20201112 09:45:04.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.891" endtime="20201112 09:45:04.894"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.766" endtime="20201112 09:45:04.895"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.764" endtime="20201112 09:45:04.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:04.902" level="INFO">${RESULT} = {'timer-count': 5, 'timer-interval': 10000, 'wakeups': [527149756, 527159755, 527169755, 527179756, 527189756, 527199756, 527209756, 527219756, 527229756, 527239756, 527249756, 527259756, 527269756, 5...</msg>
<status status="PASS" starttime="20201112 09:45:04.898" endtime="20201112 09:45:04.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.911" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:04.909" endtime="20201112 09:45:04.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.915" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:04.913" endtime="20201112 09:45:04.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.903" endtime="20201112 09:45:04.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.925" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:04.923" endtime="20201112 09:45:04.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.930" level="INFO">VALUE: 527139730</msg>
<status status="PASS" starttime="20201112 09:45:04.928" endtime="20201112 09:45:04.930"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.918" endtime="20201112 09:45:04.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.940" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:04.938" endtime="20201112 09:45:04.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:04.944" level="INFO">VALUE: [527149756, 527159755, 527169755, 527179756, 527189756, 527199756, 527209756, 527219756, 527229756, 527239756, 527249756, 527259756, 527269756, 527279756, 527289756, 527299756, 527309756, 527319756, 527329756, 527339756, 527349756, 527359756, 527369756, 527379756, 527389756, 527399756, 527409756, 527419756, 527429756, 527439756, 527449756, 527459756, 527469756, 527479756, 527489756, 527499756, 527509756, 527519756, 527529756, 527539756, 527549756, 527559756, 527569756, 527579756, 527589756, 527599756, 527609756, 527619756, 527629756, 527639756, 527649756, 527659756, 527669756, 527679756, 527689756, 527699756, 527709756, 527719756, 527729756, 527739756, 527749756, 527759756, 527769756, 527779756, 527789756, 527799756, 527809756, 527819756, 527829756, 527839756, 527849756, 527859756, 527869756, 527879756, 527889756, 527899756, 527909756, 527919756, 527929756, 527939756, 527949756, 527959756, 527969756, 527979756, 527989756, 527999756, 528009756, 528019756, 528029756, 528039756, 528049756, 528059756, 528069756, 528079756, 528089756, 528099756, 528109756, 528119756, 528129756, 528139756]</msg>
<status status="PASS" starttime="20201112 09:45:04.942" endtime="20201112 09:45:04.945"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.933" endtime="20201112 09:45:04.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:04.953" endtime="20201112 09:45:05.244"></status>
</kw>
<msg timestamp="20201112 09:45:05.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030215806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:04.951" endtime="20201112 09:45:05.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020188639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030215806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:05.248" endtime="20201112 09:45:05.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.255" endtime="20201112 09:45:05.257"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.949" endtime="20201112 09:45:05.258"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:04.947" endtime="20201112 09:45:05.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:05.281" level="INFO">${RESULT} = {'time': [0.020188639, 0.030215806, 0.040215389, 0.050216472, 0.060218083, 0.070218889, 0.080219611, 0.090220403, 0.100221014, 0.110221819, 0.120222542, 0.130223333, 0.140223958, 0.15022475, 0.1602255...</msg>
<status status="PASS" starttime="20201112 09:45:05.259" endtime="20201112 09:45:05.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.285" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 09:45:05.284" endtime="20201112 09:45:05.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.287" level="INFO">VALUE: 0.020188639</msg>
<status status="PASS" starttime="20201112 09:45:05.286" endtime="20201112 09:45:05.288"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.282" endtime="20201112 09:45:05.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.293" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:05.292" endtime="20201112 09:45:05.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:05.295" level="INFO">VALUE: [0.030215806, 0.040215389, 0.050216472, 0.060218083, 0.070218889, 0.080219611, 0.090220403, 0.100221014, 0.110221819, 0.120222542, 0.130223333, 0.140223958, 0.15022475, 0.1602255, 0.170226292, 0.180226889, 0.190227694, 0.200228458, 0.210229208, 0.220229875, 0.230230639, 0.240231347, 0.250232139, 0.26023275, 0.270233597, 0.280234278, 0.290235083, 0.300235694, 0.310236514, 0.320237236, 0.330238014, 0.340238639, 0.350239444, 0.360240153, 0.370240944, 0.380241625, 0.390242361, 0.400243125, 0.410243889, 0.4202445, 0.430245319, 0.440246042, 0.450246819, 0.460247444, 0.470248236, 0.480248958, 0.49024975, 0.500250375, 0.510251153, 0.520251875, 0.530252681, 0.540253292, 0.550254069, 0.560254778, 0.570255583, 0.580256181, 0.590257014, 0.600257736, 0.610258486, 0.620259097, 0.630259889, 0.640260611, 0.650261403, 0.660262, 0.670262792, 0.680263514, 0.690264306, 0.700264917, 0.710265708, 0.720266431, 0.730267222, 0.740267819, 0.750268625, 0.760269347, 0.770270139, 0.780270778, 0.790271542, 0.800272264, 0.810273111, 0.820273667, 0.830274528, 0.840275181, 0.850275958, 0.860276569, 0.870277361, 0.880278083, 0.890278875, 0.900279486, 0.910280292, 0.920281014, 0.930281806, 0.940282403, 0.950283236, 0.960283917, 0.970284708, 0.980285319, 0.990286111, 1.000286833, 1.010287667, 1.020288236] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:05.294" endtime="20201112 09:45:05.295"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.289" endtime="20201112 09:45:05.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.298" endtime="20201112 09:45:05.299"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:05.301" endtime="20201112 09:45:05.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.300" endtime="20201112 09:45:05.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.296" endtime="20201112 09:45:05.321"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:02.763" endtime="20201112 09:45:05.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.606" endtime="20201112 09:45:05.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:57.605" endtime="20201112 09:45:05.322"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:05.325" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:05.334" endtime="20201112 09:45:07.444"></status>
</kw>
<msg timestamp="20201112 09:45:07.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 529702966, 'wakeups': [529712999, 529722998, 529732997, 529742997, 529...</msg>
<status status="PASS" starttime="20201112 09:45:05.333" endtime="20201112 09:45:07.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.452" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 529702966, 'wakeups': [529712999, 529722998, 529732997, 529742997, 529...</msg>
<status status="PASS" starttime="20201112 09:45:07.448" endtime="20201112 09:45:07.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.455" endtime="20201112 09:45:07.458"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.329" endtime="20201112 09:45:07.459"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.327" endtime="20201112 09:45:07.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:07.465" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'wakeups': [529712999, 529722998, 529732997, 529742997, 529752997, 529762997, 529772997, 529782997, 529792997, 529802997, 529812997, 529822997, 529832997, 5...</msg>
<status status="PASS" starttime="20201112 09:45:07.461" endtime="20201112 09:45:07.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.474" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:07.472" endtime="20201112 09:45:07.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.478" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:07.476" endtime="20201112 09:45:07.479"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.467" endtime="20201112 09:45:07.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.488" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:07.486" endtime="20201112 09:45:07.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.493" level="INFO">VALUE: 529702966</msg>
<status status="PASS" starttime="20201112 09:45:07.491" endtime="20201112 09:45:07.493"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.481" endtime="20201112 09:45:07.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.502" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:07.500" endtime="20201112 09:45:07.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.507" level="INFO">VALUE: [529712999, 529722998, 529732997, 529742997, 529752997, 529762997, 529772997, 529782997, 529792997, 529802997, 529812997, 529822997, 529832997, 529842997, 529852997, 529862997, 529872997, 529882997, 529892997, 529902997, 529912997, 529922997, 529932997, 529942997, 529952997, 529962997, 529972997, 529982997, 529992997, 530002997, 530012997, 530022997, 530032997, 530042997, 530052997, 530062997, 530072997, 530082997, 530092997, 530102997, 530112997, 530122997, 530132997, 530142997, 530152997, 530162997, 530172997, 530182997, 530192997, 530202997, 530212997, 530222997, 530232997, 530242997, 530252997, 530262997, 530272997, 530282997, 530292997, 530302997, 530312997, 530322997, 530332997, 530342997, 530352997, 530362997, 530372997, 530382997, 530392997, 530402997, 530412997, 530422997, 530432997, 530442997, 530452997, 530462997, 530472997, 530482997, 530492997, 530502997, 530512997, 530522997, 530532997, 530542997, 530552997, 530562997, 530572997, 530582997, 530592997, 530602997, 530612997, 530622997, 530632997, 530642997, 530652997, 530662997, 530672997, 530682997, 530692997, 530702997]</msg>
<status status="PASS" starttime="20201112 09:45:07.505" endtime="20201112 09:45:07.508"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.496" endtime="20201112 09:45:07.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.517" endtime="20201112 09:45:07.809"></status>
</kw>
<msg timestamp="20201112 09:45:07.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023538639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033572486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:07.516" endtime="20201112 09:45:07.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023538639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033572486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:07.813" endtime="20201112 09:45:07.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.820" endtime="20201112 09:45:07.822"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.513" endtime="20201112 09:45:07.823"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.510" endtime="20201112 09:45:07.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:07.847" level="INFO">${RESULT} = {'time': [0.023538639, 0.033572486, 0.043572, 0.053571764, 0.063572389, 0.073573208, 0.083573958, 0.093574708, 0.103575361, 0.113576139, 0.123576847, 0.133577639, 0.143578264, 0.153579056, 0.163579778...</msg>
<status status="PASS" starttime="20201112 09:45:07.824" endtime="20201112 09:45:07.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.852" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:07.851" endtime="20201112 09:45:07.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.854" level="INFO">VALUE: 0.023538639</msg>
<status status="PASS" starttime="20201112 09:45:07.853" endtime="20201112 09:45:07.854"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.848" endtime="20201112 09:45:07.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.859" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:07.858" endtime="20201112 09:45:07.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:07.861" level="INFO">VALUE: [0.033572486, 0.043572, 0.053571764, 0.063572389, 0.073573208, 0.083573958, 0.093574708, 0.103575361, 0.113576139, 0.123576847, 0.133577639, 0.143578264, 0.153579056, 0.163579778, 0.173580597, 0.183581181, 0.193582, 0.203582722, 0.213583514, 0.223584125, 0.233584944, 0.243585667, 0.253586444, 0.263587069, 0.273587861, 0.283588583, 0.293589375, 0.303589986, 0.313590806, 0.323591556, 0.333592319, 0.343592931, 0.353593722, 0.363594514, 0.37359525, 0.383595833, 0.393596639, 0.403597361, 0.413598139, 0.423598764, 0.433599556, 0.443600264, 0.453601056, 0.463601667, 0.473602458, 0.483603181, 0.493603958, 0.503604569, 0.513605403, 0.523606083, 0.533606889, 0.543607486, 0.553608278, 0.563609014, 0.573609806, 0.583610389, 0.593611194, 0.603611903, 0.613612722, 0.623613306, 0.633614139, 0.643614819, 0.653615667, 0.663616222, 0.673617014, 0.683617736, 0.693618542, 0.703619139, 0.713619931, 0.723620694, 0.733621444, 0.743622069, 0.753622861, 0.763623569, 0.773624361, 0.783624958, 0.793625764, 0.803626472, 0.813627278, 0.823627889, 0.833628681, 0.843629403, 0.853630194, 0.863630792, 0.873631611, 0.883632306, 0.893633097, 0.903633708, 0.913634514, 0.92363525, 0.933636014, 0.943636653, 0.953637417, 0.963638139, 0.973638958, 0.983639542, 0.993640333, 1.003641069, 1.013641847, 1.023642472] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:07.860" endtime="20201112 09:45:07.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.855" endtime="20201112 09:45:07.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.864" endtime="20201112 09:45:07.866"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:07.868" endtime="20201112 09:45:07.887"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.866" endtime="20201112 09:45:07.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.863" endtime="20201112 09:45:07.888"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.325" endtime="20201112 09:45:07.889"></status>
</kw>
<msg timestamp="20201112 09:45:07.889" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:07.898" endtime="20201112 09:45:10.008"></status>
</kw>
<msg timestamp="20201112 09:45:10.009" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 532266445, 'wakeups': [532276478, 532286477, 532296476, 532306476, 532...</msg>
<status status="PASS" starttime="20201112 09:45:07.896" endtime="20201112 09:45:10.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 532266445, 'wakeups': [532276478, 532286477, 532296476, 532306476, 532...</msg>
<status status="PASS" starttime="20201112 09:45:10.011" endtime="20201112 09:45:10.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.017" endtime="20201112 09:45:10.020"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.893" endtime="20201112 09:45:10.021"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.891" endtime="20201112 09:45:10.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:10.028" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'wakeups': [532276478, 532286477, 532296476, 532306476, 532316476, 532326476, 532336476, 532346476, 532356476, 532366476, 532376476, 532386476, 532396476, 5...</msg>
<status status="PASS" starttime="20201112 09:45:10.024" endtime="20201112 09:45:10.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.038" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:10.035" endtime="20201112 09:45:10.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.042" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:10.040" endtime="20201112 09:45:10.043"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.030" endtime="20201112 09:45:10.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.052" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:10.050" endtime="20201112 09:45:10.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.059" level="INFO">VALUE: 532266445</msg>
<status status="PASS" starttime="20201112 09:45:10.056" endtime="20201112 09:45:10.059"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.045" endtime="20201112 09:45:10.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.069" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:10.067" endtime="20201112 09:45:10.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.073" level="INFO">VALUE: [532276478, 532286477, 532296476, 532306476, 532316476, 532326476, 532336476, 532346476, 532356476, 532366476, 532376476, 532386476, 532396476, 532406476, 532416476, 532426476, 532436476, 532446476, 532456476, 532466476, 532476476, 532486476, 532496476, 532506476, 532516476, 532526476, 532536476, 532546476, 532556476, 532566476, 532576476, 532586476, 532596476, 532606476, 532616476, 532626476, 532636476, 532646476, 532656476, 532666476, 532676476, 532686476, 532696476, 532706476, 532716476, 532726476, 532736476, 532746476, 532756476, 532766476, 532776476, 532786476, 532796476, 532806476, 532816476, 532826476, 532836476, 532846476, 532856476, 532866476, 532876476, 532886476, 532896476, 532906476, 532916476, 532926476, 532936476, 532946476, 532956476, 532966476, 532976476, 532986476, 532996476, 533006476, 533016476, 533026476, 533036476, 533046476, 533056476, 533066476, 533076476, 533086476, 533096476, 533106476, 533116476, 533126476, 533136476, 533146476, 533156476, 533166476, 533176476, 533186476, 533196476, 533206476, 533216476, 533226476, 533236476, 533246476, 533256476, 533266476]</msg>
<status status="PASS" starttime="20201112 09:45:10.071" endtime="20201112 09:45:10.074"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.062" endtime="20201112 09:45:10.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.088" endtime="20201112 09:45:10.384"></status>
</kw>
<msg timestamp="20201112 09:45:10.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020325556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030359722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:10.085" endtime="20201112 09:45:10.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020325556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030359722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:10.388" endtime="20201112 09:45:10.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.395" endtime="20201112 09:45:10.397"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.080" endtime="20201112 09:45:10.398"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.076" endtime="20201112 09:45:10.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:10.421" level="INFO">${RESULT} = {'time': [0.020325556, 0.030359722, 0.040359222, 0.050359, 0.060359653, 0.070360444, 0.080361153, 0.090361972, 0.100362597, 0.110363361, 0.120364125, 0.130364875, 0.140365542, 0.150366319, 0.160367014...</msg>
<status status="PASS" starttime="20201112 09:45:10.399" endtime="20201112 09:45:10.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.426" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:10.425" endtime="20201112 09:45:10.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.428" level="INFO">VALUE: 0.020325556</msg>
<status status="PASS" starttime="20201112 09:45:10.427" endtime="20201112 09:45:10.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.422" endtime="20201112 09:45:10.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.433" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:10.432" endtime="20201112 09:45:10.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:10.436" level="INFO">VALUE: [0.030359722, 0.040359222, 0.050359, 0.060359653, 0.070360444, 0.080361153, 0.090361972, 0.100362597, 0.110363361, 0.120364125, 0.130364875, 0.140365542, 0.150366319, 0.160367014, 0.170367819, 0.180368472, 0.19036925, 0.200369958, 0.21037075, 0.220371375, 0.230372167, 0.240372903, 0.250373681, 0.260374292, 0.270375125, 0.280375819, 0.290376611, 0.300377236, 0.310378042, 0.320378778, 0.330379556, 0.340380167, 0.350380958, 0.360381694, 0.3703825, 0.380383097, 0.390383972, 0.400384625, 0.410385431, 0.420386056, 0.430386833, 0.440387569, 0.450388361, 0.460388958, 0.470389764, 0.480390486, 0.490391333, 0.500391875, 0.510392667, 0.520393389, 0.530394181, 0.540394778, 0.550395583, 0.560396292, 0.570397111, 0.580397694, 0.590398514, 0.600399208, 0.6104, 0.620400597, 0.630401403, 0.640402139, 0.650402903, 0.660403514, 0.670404319, 0.680405042, 0.690405819, 0.700406431, 0.710407222, 0.720407958, 0.73040875, 0.740409347, 0.750410139, 0.760410875, 0.770411653, 0.78041225, 0.790413125, 0.800413778, 0.810414625, 0.820415181, 0.830415972, 0.840416694, 0.850417486, 0.860418139, 0.870418889, 0.880419611, 0.890420403, 0.900421, 0.910421806, 0.920422528, 0.930423319, 0.940424, 0.950424708, 0.960425431, 0.970426236, 0.980426833, 0.990427639, 1.000428347, 1.010429139, 1.02042975] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:10.435" endtime="20201112 09:45:10.437"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.429" endtime="20201112 09:45:10.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.439" endtime="20201112 09:45:10.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:10.443" endtime="20201112 09:45:10.462"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.441" endtime="20201112 09:45:10.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.438" endtime="20201112 09:45:10.463"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:07.889" endtime="20201112 09:45:10.463"></status>
</kw>
<msg timestamp="20201112 09:45:10.464" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:10.471" endtime="20201112 09:45:12.582"></status>
</kw>
<msg timestamp="20201112 09:45:12.583" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 534840055, 'wakeups': [534850088, 534860087, 534870086, 534880086, 534...</msg>
<status status="PASS" starttime="20201112 09:45:10.470" endtime="20201112 09:45:12.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.589" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 534840055, 'wakeups': [534850088, 534860087, 534870086, 534880086, 534...</msg>
<status status="PASS" starttime="20201112 09:45:12.585" endtime="20201112 09:45:12.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.591" endtime="20201112 09:45:12.594"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.467" endtime="20201112 09:45:12.595"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.466" endtime="20201112 09:45:12.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:12.602" level="INFO">${RESULT} = {'timer-count': 6, 'timer-interval': 10000, 'wakeups': [534850088, 534860087, 534870086, 534880086, 534890086, 534900086, 534910086, 534920086, 534930086, 534940086, 534950086, 534960086, 534970086, 5...</msg>
<status status="PASS" starttime="20201112 09:45:12.598" endtime="20201112 09:45:12.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.610" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:12.608" endtime="20201112 09:45:12.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.614" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:12.612" endtime="20201112 09:45:12.615"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.603" endtime="20201112 09:45:12.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.624" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:12.622" endtime="20201112 09:45:12.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.627" level="INFO">VALUE: 534840055</msg>
<status status="PASS" starttime="20201112 09:45:12.626" endtime="20201112 09:45:12.628"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.617" endtime="20201112 09:45:12.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.632" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:12.631" endtime="20201112 09:45:12.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.635" level="INFO">VALUE: [534850088, 534860087, 534870086, 534880086, 534890086, 534900086, 534910086, 534920086, 534930086, 534940086, 534950086, 534960086, 534970086, 534980086, 534990086, 535000086, 535010086, 535020086, 535030086, 535040086, 535050086, 535060086, 535070086, 535080086, 535090086, 535100086, 535110086, 535120086, 535130086, 535140086, 535150086, 535160086, 535170086, 535180086, 535190086, 535200086, 535210086, 535220086, 535230086, 535240086, 535250086, 535260086, 535270086, 535280086, 535290086, 535300086, 535310086, 535320086, 535330086, 535340086, 535350086, 535360086, 535370086, 535380086, 535390086, 535400086, 535410086, 535420086, 535430086, 535440086, 535450086, 535460086, 535470086, 535480086, 535490086, 535500086, 535510086, 535520086, 535530086, 535540086, 535550086, 535560086, 535570086, 535580086, 535590086, 535600086, 535610086, 535620086, 535630086, 535640086, 535650086, 535660086, 535670086, 535680086, 535690086, 535700086, 535710086, 535720086, 535730086, 535740086, 535750086, 535760086, 535770086, 535780086, 535790086, 535800086, 535810086, 535820086, 535830086, 535840086]</msg>
<status status="PASS" starttime="20201112 09:45:12.633" endtime="20201112 09:45:12.635"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.629" endtime="20201112 09:45:12.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.642" endtime="20201112 09:45:12.936"></status>
</kw>
<msg timestamp="20201112 09:45:12.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018912458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028946653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:12.640" endtime="20201112 09:45:12.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018912458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028946653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:12.939" endtime="20201112 09:45:12.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.947" endtime="20201112 09:45:12.948"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.638" endtime="20201112 09:45:12.949"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.636" endtime="20201112 09:45:12.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:12.972" level="INFO">${RESULT} = {'time': [0.018912458, 0.028946653, 0.038946139, 0.048945931, 0.058946542, 0.068947417, 0.078948111, 0.088948875, 0.098949472, 0.108950292, 0.118951, 0.128951792, 0.138952403, 0.148953208, 0.158953958...</msg>
<status status="PASS" starttime="20201112 09:45:12.950" endtime="20201112 09:45:12.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.977" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 09:45:12.976" endtime="20201112 09:45:12.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.979" level="INFO">VALUE: 0.018912458</msg>
<status status="PASS" starttime="20201112 09:45:12.978" endtime="20201112 09:45:12.979"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.973" endtime="20201112 09:45:12.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.984" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:12.983" endtime="20201112 09:45:12.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:12.986" level="INFO">VALUE: [0.028946653, 0.038946139, 0.048945931, 0.058946542, 0.068947417, 0.078948111, 0.088948875, 0.098949472, 0.108950292, 0.118951, 0.128951792, 0.138952403, 0.148953208, 0.158953958, 0.168954778, 0.178955347, 0.188956153, 0.198956861, 0.208957667, 0.218958264, 0.228959069, 0.238959792, 0.248960583, 0.258961194, 0.268962014, 0.278962736, 0.288963597, 0.298964139, 0.308964958, 0.318965667, 0.328966486, 0.338967069, 0.348967861, 0.358968583, 0.368969403, 0.378970014, 0.388970833, 0.398971542, 0.408972347, 0.418972972, 0.428973736, 0.438974458, 0.44897525, 0.458975861, 0.468976681, 0.478977403, 0.488978208, 0.498978806, 0.508979611, 0.518980333, 0.528981125, 0.538981806, 0.548982542, 0.558983264, 0.568984069, 0.578984653, 0.588985458, 0.598986167, 0.608986958, 0.618987569, 0.628988361, 0.638989097, 0.648989875, 0.658990528, 0.668991292, 0.678992, 0.688992778, 0.698993375, 0.708994194, 0.718994903, 0.728995681, 0.738996319, 0.748997083, 0.758997806, 0.768998597, 0.778999208, 0.789000056, 0.799000722, 0.8090015, 0.819002125, 0.829002917, 0.839003639, 0.849004417, 0.859005028, 0.869005833, 0.879006556, 0.889007361, 0.899007944, 0.909008736, 0.919009514, 0.92901025, 0.939010861, 0.949011653, 0.959012375, 0.969013167, 0.979013778, 0.989014583, 0.999015292, 1.009016069, 1.019016708] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:12.985" endtime="20201112 09:45:12.986"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.980" endtime="20201112 09:45:12.987"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:12.989" endtime="20201112 09:45:12.990"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:12.993" endtime="20201112 09:45:13.012"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.991" endtime="20201112 09:45:13.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:12.987" endtime="20201112 09:45:13.013"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:10.464" endtime="20201112 09:45:13.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.323" endtime="20201112 09:45:13.014"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:05.322" endtime="20201112 09:45:13.014"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:13.017" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:13.027" endtime="20201112 09:45:15.137"></status>
</kw>
<msg timestamp="20201112 09:45:15.138" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 537395274, 'wakeups': [537405313, 537415312, 537425312, 537435312, 537...</msg>
<status status="PASS" starttime="20201112 09:45:13.025" endtime="20201112 09:45:15.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.144" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 537395274, 'wakeups': [537405313, 537415312, 537425312, 537435312, 537...</msg>
<status status="PASS" starttime="20201112 09:45:15.140" endtime="20201112 09:45:15.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.146" endtime="20201112 09:45:15.150"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.021" endtime="20201112 09:45:15.151"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.019" endtime="20201112 09:45:15.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:15.157" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'wakeups': [537405313, 537415312, 537425312, 537435312, 537445312, 537455312, 537465312, 537475312, 537485312, 537495312, 537505312, 537515312, 537525312, 5...</msg>
<status status="PASS" starttime="20201112 09:45:15.153" endtime="20201112 09:45:15.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.166" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:15.163" endtime="20201112 09:45:15.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.170" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:15.168" endtime="20201112 09:45:15.171"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.159" endtime="20201112 09:45:15.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.178" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:15.177" endtime="20201112 09:45:15.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.180" level="INFO">VALUE: 537395274</msg>
<status status="PASS" starttime="20201112 09:45:15.179" endtime="20201112 09:45:15.181"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.173" endtime="20201112 09:45:15.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.185" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:15.184" endtime="20201112 09:45:15.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.187" level="INFO">VALUE: [537405313, 537415312, 537425312, 537435312, 537445312, 537455312, 537465312, 537475312, 537485312, 537495312, 537505312, 537515312, 537525312, 537535312, 537545312, 537555312, 537565312, 537575312, 537585312, 537595312, 537605312, 537615312, 537625312, 537635312, 537645312, 537655312, 537665312, 537675312, 537685312, 537695312, 537705312, 537715312, 537725312, 537735312, 537745312, 537755312, 537765312, 537775312, 537785312, 537795312, 537805312, 537815312, 537825312, 537835312, 537845312, 537855312, 537865312, 537875312, 537885312, 537895312, 537905312, 537915312, 537925312, 537935312, 537945312, 537955312, 537965312, 537975312, 537985312, 537995312, 538005312, 538015312, 538025312, 538035312, 538045312, 538055312, 538065312, 538075312, 538085312, 538095312, 538105312, 538115312, 538125312, 538135312, 538145312, 538155312, 538165312, 538175312, 538185312, 538195312, 538205312, 538215312, 538225312, 538235312, 538245312, 538255312, 538265312, 538275312, 538285312, 538295312, 538305312, 538315312, 538325312, 538335312, 538345312, 538355312, 538365312, 538375312, 538385312, 538395312]</msg>
<status status="PASS" starttime="20201112 09:45:15.186" endtime="20201112 09:45:15.188"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.182" endtime="20201112 09:45:15.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.200" endtime="20201112 09:45:15.491"></status>
</kw>
<msg timestamp="20201112 09:45:15.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034387056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:15.198" endtime="20201112 09:45:15.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024347236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034387056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:15.495" endtime="20201112 09:45:15.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.503" endtime="20201112 09:45:15.504"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.190" endtime="20201112 09:45:15.505"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.189" endtime="20201112 09:45:15.505"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:15.529" level="INFO">${RESULT} = {'time': [0.024347236, 0.034387056, 0.044386597, 0.054387153, 0.064388, 0.074388792, 0.084389306, 0.094390097, 0.104390931, 0.114391764, 0.12439225, 0.134393028, 0.144393861, 0.154394653, 0.164395167,...</msg>
<status status="PASS" starttime="20201112 09:45:15.506" endtime="20201112 09:45:15.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.533" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:15.532" endtime="20201112 09:45:15.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.535" level="INFO">VALUE: 0.024347236</msg>
<status status="PASS" starttime="20201112 09:45:15.534" endtime="20201112 09:45:15.536"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.530" endtime="20201112 09:45:15.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.541" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:15.540" endtime="20201112 09:45:15.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:15.543" level="INFO">VALUE: [0.034387056, 0.044386597, 0.054387153, 0.064388, 0.074388792, 0.084389306, 0.094390097, 0.104390931, 0.114391764, 0.12439225, 0.134393028, 0.144393861, 0.154394653, 0.164395167, 0.174395958, 0.184396806, 0.194397583, 0.204398111, 0.214398889, 0.224399722, 0.234400542, 0.244401028, 0.254401833, 0.264402653, 0.274403458, 0.284403986, 0.29440475, 0.304405583, 0.314406389, 0.324406903, 0.334407694, 0.344408514, 0.354409319, 0.364409819, 0.374410639, 0.384411472, 0.394412264, 0.404412764, 0.414413569, 0.424414403, 0.434415208, 0.444415708, 0.454416514, 0.464417333, 0.474418153, 0.484418667, 0.494419444, 0.504420292, 0.514421083, 0.524421583, 0.534422389, 0.544423222, 0.554424028, 0.564424556, 0.574425319, 0.584426167, 0.594426986, 0.604427472, 0.614428278, 0.624429097, 0.634429903, 0.644430417, 0.65443125, 0.664432042, 0.674432861, 0.684433375, 0.694434153, 0.704434986, 0.714435806, 0.724436306, 0.734437111, 0.744437931, 0.754438736, 0.764439236, 0.774440056, 0.784440889, 0.794441681, 0.804442181, 0.814442972, 0.824443792, 0.834444611, 0.844445097, 0.854445889, 0.864446708, 0.874447528, 0.884448, 0.894448806, 0.904449639, 0.914450417, 0.924450931, 0.934451708, 0.944452542, 0.954453347, 0.964453833, 0.974454625, 0.984455458, 0.994456264, 1.00445675, 1.014457542, 1.024458375] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:15.542" endtime="20201112 09:45:15.543"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.537" endtime="20201112 09:45:15.544"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.546" endtime="20201112 09:45:15.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:15.549" endtime="20201112 09:45:15.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.548" endtime="20201112 09:45:15.569"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.544" endtime="20201112 09:45:15.570"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.018" endtime="20201112 09:45:15.570"></status>
</kw>
<msg timestamp="20201112 09:45:15.570" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:15.578" endtime="20201112 09:45:17.688"></status>
</kw>
<msg timestamp="20201112 09:45:17.690" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 539946637, 'wakeups': [539956676, 539966675, 539976675, 539986675, 539...</msg>
<status status="PASS" starttime="20201112 09:45:15.577" endtime="20201112 09:45:17.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.696" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 539946637, 'wakeups': [539956676, 539966675, 539976675, 539986675, 539...</msg>
<status status="PASS" starttime="20201112 09:45:17.692" endtime="20201112 09:45:17.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.698" endtime="20201112 09:45:17.702"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.574" endtime="20201112 09:45:17.703"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.572" endtime="20201112 09:45:17.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:17.709" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'wakeups': [539956676, 539966675, 539976675, 539986675, 539996675, 540006675, 540016675, 540026675, 540036675, 540046675, 540056675, 540066675, 540076675, 5...</msg>
<status status="PASS" starttime="20201112 09:45:17.706" endtime="20201112 09:45:17.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.718" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:17.716" endtime="20201112 09:45:17.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.722" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:17.720" endtime="20201112 09:45:17.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.711" endtime="20201112 09:45:17.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.734" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:17.732" endtime="20201112 09:45:17.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.739" level="INFO">VALUE: 539946637</msg>
<status status="PASS" starttime="20201112 09:45:17.737" endtime="20201112 09:45:17.739"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.725" endtime="20201112 09:45:17.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.749" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:17.747" endtime="20201112 09:45:17.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:17.753" level="INFO">VALUE: [539956676, 539966675, 539976675, 539986675, 539996675, 540006675, 540016675, 540026675, 540036675, 540046675, 540056675, 540066675, 540076675, 540086675, 540096675, 540106675, 540116675, 540126675, 540136675, 540146675, 540156675, 540166675, 540176675, 540186675, 540196675, 540206675, 540216675, 540226675, 540236675, 540246675, 540256675, 540266675, 540276675, 540286675, 540296675, 540306675, 540316675, 540326675, 540336675, 540346675, 540356675, 540366675, 540376675, 540386675, 540396675, 540406675, 540416675, 540426675, 540436675, 540446675, 540456675, 540466675, 540476675, 540486675, 540496675, 540506675, 540516675, 540526675, 540536675, 540546675, 540556675, 540566675, 540576675, 540586675, 540596675, 540606675, 540616675, 540626675, 540636675, 540646675, 540656675, 540666675, 540676675, 540686675, 540696675, 540706675, 540716675, 540726675, 540736675, 540746675, 540756675, 540766675, 540776675, 540786675, 540796675, 540806675, 540816675, 540826675, 540836675, 540846675, 540856675, 540866675, 540876675, 540886675, 540896675, 540906675, 540916675, 540926675, 540936675, 540946675]</msg>
<status status="PASS" starttime="20201112 09:45:17.751" endtime="20201112 09:45:17.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.742" endtime="20201112 09:45:17.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:17.769" endtime="20201112 09:45:18.067"></status>
</kw>
<msg timestamp="20201112 09:45:18.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018875167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028915306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:17.765" endtime="20201112 09:45:18.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018875167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028915306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:18.070" endtime="20201112 09:45:18.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.078" endtime="20201112 09:45:18.079"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.760" endtime="20201112 09:45:18.080"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:17.756" endtime="20201112 09:45:18.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:18.104" level="INFO">${RESULT} = {'time': [0.018875167, 0.028915306, 0.038914917, 0.0489155, 0.058916333, 0.068917125, 0.078917681, 0.088918514, 0.098919264, 0.108920069, 0.118920583, 0.128921389, 0.138922208, 0.148923, 0.158923514, ...</msg>
<status status="PASS" starttime="20201112 09:45:18.081" endtime="20201112 09:45:18.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.109" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:18.108" endtime="20201112 09:45:18.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.112" level="INFO">VALUE: 0.018875167</msg>
<status status="PASS" starttime="20201112 09:45:18.111" endtime="20201112 09:45:18.112"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.105" endtime="20201112 09:45:18.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.117" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:18.116" endtime="20201112 09:45:18.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:18.119" level="INFO">VALUE: [0.028915306, 0.038914917, 0.0489155, 0.058916333, 0.068917125, 0.078917681, 0.088918514, 0.098919264, 0.108920069, 0.118920583, 0.128921389, 0.138922208, 0.148923, 0.158923514, 0.168924347, 0.178925139, 0.188925944, 0.198926472, 0.208927236, 0.218928069, 0.228928875, 0.238929431, 0.248930194, 0.258931014, 0.268931819, 0.278932319, 0.288933125, 0.298933972, 0.308934778, 0.318935319, 0.328936097, 0.338936889, 0.348937694, 0.358938222, 0.368939, 0.378939833, 0.388940639, 0.398941125, 0.408941917, 0.418942778, 0.428943542, 0.438944056, 0.448944819, 0.458945653, 0.468946458, 0.478946958, 0.488947764, 0.498948569, 0.508949361, 0.518949861, 0.528950667, 0.5389515, 0.548952278, 0.558952792, 0.568953583, 0.578954444, 0.588955194, 0.598955694, 0.6089565, 0.618957306, 0.628958111, 0.638958625, 0.648959403, 0.658960236, 0.668961028, 0.678961528, 0.688962319, 0.698963139, 0.708963986, 0.718964444, 0.728965292, 0.738966056, 0.748966861, 0.758967361, 0.768968153, 0.778968986, 0.788969778, 0.798970292, 0.808971069, 0.818971944, 0.828972708, 0.838973236, 0.848974, 0.858974833, 0.868975611, 0.878976111, 0.888976903, 0.898977736, 0.908978542, 0.918979111, 0.928979847, 0.938980653, 0.948981444, 0.958981958, 0.968982736, 0.978983569, 0.988984389, 0.998984889, 1.008985681, 1.018986542] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:18.118" endtime="20201112 09:45:18.119"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.113" endtime="20201112 09:45:18.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.122" endtime="20201112 09:45:18.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:18.125" endtime="20201112 09:45:18.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.124" endtime="20201112 09:45:18.145"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.120" endtime="20201112 09:45:18.146"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:15.571" endtime="20201112 09:45:18.146"></status>
</kw>
<msg timestamp="20201112 09:45:18.146" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:18.155" endtime="20201112 09:45:20.266"></status>
</kw>
<msg timestamp="20201112 09:45:20.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 542524112, 'wakeups': [542534151, 542544150, 542554150, 542564150, 542...</msg>
<status status="PASS" starttime="20201112 09:45:18.154" endtime="20201112 09:45:20.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 542524112, 'wakeups': [542534151, 542544150, 542554150, 542564150, 542...</msg>
<status status="PASS" starttime="20201112 09:45:20.270" endtime="20201112 09:45:20.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.276" endtime="20201112 09:45:20.279"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.151" endtime="20201112 09:45:20.280"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.149" endtime="20201112 09:45:20.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:20.287" level="INFO">${RESULT} = {'timer-count': 7, 'timer-interval': 10000, 'wakeups': [542534151, 542544150, 542554150, 542564150, 542574150, 542584150, 542594150, 542604150, 542614150, 542624150, 542634150, 542644150, 542654150, 5...</msg>
<status status="PASS" starttime="20201112 09:45:20.283" endtime="20201112 09:45:20.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.295" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:20.293" endtime="20201112 09:45:20.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.305" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:20.297" endtime="20201112 09:45:20.306"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.288" endtime="20201112 09:45:20.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.315" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:20.313" endtime="20201112 09:45:20.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.319" level="INFO">VALUE: 542524112</msg>
<status status="PASS" starttime="20201112 09:45:20.318" endtime="20201112 09:45:20.320"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.308" endtime="20201112 09:45:20.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.329" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:20.327" endtime="20201112 09:45:20.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.334" level="INFO">VALUE: [542534151, 542544150, 542554150, 542564150, 542574150, 542584150, 542594150, 542604150, 542614150, 542624150, 542634150, 542644150, 542654150, 542664150, 542674150, 542684150, 542694150, 542704150, 542714150, 542724150, 542734150, 542744150, 542754150, 542764150, 542774150, 542784150, 542794150, 542804150, 542814150, 542824150, 542834150, 542844150, 542854150, 542864150, 542874150, 542884150, 542894150, 542904150, 542914150, 542924150, 542934150, 542944150, 542954150, 542964150, 542974150, 542984150, 542994150, 543004150, 543014150, 543024150, 543034150, 543044150, 543054150, 543064150, 543074150, 543084150, 543094150, 543104150, 543114150, 543124150, 543134150, 543144150, 543154150, 543164150, 543174150, 543184150, 543194150, 543204150, 543214150, 543224150, 543234150, 543244150, 543254150, 543264150, 543274150, 543284150, 543294150, 543304150, 543314150, 543324150, 543334150, 543344150, 543354150, 543364150, 543374150, 543384150, 543394150, 543404150, 543414150, 543424150, 543434150, 543444150, 543454150, 543464150, 543474150, 543484150, 543494150, 543504150, 543514150, 543524150]</msg>
<status status="PASS" starttime="20201112 09:45:20.332" endtime="20201112 09:45:20.335"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.322" endtime="20201112 09:45:20.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.351" endtime="20201112 09:45:20.645"></status>
</kw>
<msg timestamp="20201112 09:45:20.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030390944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:20.348" endtime="20201112 09:45:20.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020351125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030390944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:20.649" endtime="20201112 09:45:20.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.657" endtime="20201112 09:45:20.658"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.341" endtime="20201112 09:45:20.659"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.337" endtime="20201112 09:45:20.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:20.682" level="INFO">${RESULT} = {'time': [0.020351125, 0.030390944, 0.040390542, 0.050391111, 0.060391958, 0.070392764, 0.080393264, 0.090394056, 0.100394903, 0.110395708, 0.120396194, 0.130396986, 0.140397819, 0.150398625, 0.160399...</msg>
<status status="PASS" starttime="20201112 09:45:20.660" endtime="20201112 09:45:20.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.687" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 09:45:20.686" endtime="20201112 09:45:20.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.689" level="INFO">VALUE: 0.020351125</msg>
<status status="PASS" starttime="20201112 09:45:20.688" endtime="20201112 09:45:20.689"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.683" endtime="20201112 09:45:20.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.694" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:20.693" endtime="20201112 09:45:20.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:20.696" level="INFO">VALUE: [0.030390944, 0.040390542, 0.050391111, 0.060391958, 0.070392764, 0.080393264, 0.090394056, 0.100394903, 0.110395708, 0.120396194, 0.130396986, 0.140397819, 0.150398625, 0.160399125, 0.170399931, 0.180400764, 0.190401611, 0.200402111, 0.210402917, 0.220403722, 0.2304045, 0.240405, 0.250405806, 0.260406625, 0.270407444, 0.280407944, 0.290408736, 0.300409569, 0.310410361, 0.320410889, 0.330411667, 0.340412542, 0.350413306, 0.360413819, 0.370414611, 0.380415444, 0.39041625, 0.400416764, 0.410417556, 0.420418389, 0.430419181, 0.440419694, 0.4504205, 0.460421306, 0.470422111, 0.480422681, 0.490423403, 0.500424222, 0.510425042, 0.520425514, 0.530426319, 0.540427139, 0.550427944, 0.560428472, 0.570429236, 0.580430028, 0.590430833, 0.600431347, 0.610432139, 0.620432958, 0.63043375, 0.64043425, 0.650435042, 0.660435861, 0.670436653, 0.680437208, 0.690437986, 0.700438792, 0.710439569, 0.720440097, 0.730440861, 0.740441694, 0.7504425, 0.760443, 0.770443792, 0.780444625, 0.790445417, 0.800445917, 0.810446694, 0.820447514, 0.830448333, 0.840448819, 0.850449611, 0.860450444, 0.870451236, 0.880451736, 0.890452542, 0.900453389, 0.910454153, 0.920454694, 0.930455444, 0.940456278, 0.950457069, 0.960457583, 0.970458375, 0.980459194, 0.99046, 1.000460486, 1.010461278, 1.020462194] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:20.695" endtime="20201112 09:45:20.697"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.690" endtime="20201112 09:45:20.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.700" endtime="20201112 09:45:20.701"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:20.703" endtime="20201112 09:45:20.722"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.701" endtime="20201112 09:45:20.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.698" endtime="20201112 09:45:20.723"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:18.147" endtime="20201112 09:45:20.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.015" endtime="20201112 09:45:20.724"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:13.015" endtime="20201112 09:45:20.724"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:20.727" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:20.735" endtime="20201112 09:45:22.846"></status>
</kw>
<msg timestamp="20201112 09:45:22.847" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 545103971, 'wakeups': [545114017, 545124017, 545134016, 545144016, 545...</msg>
<status status="PASS" starttime="20201112 09:45:20.734" endtime="20201112 09:45:22.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 545103971, 'wakeups': [545114017, 545124017, 545134016, 545144016, 545...</msg>
<status status="PASS" starttime="20201112 09:45:22.849" endtime="20201112 09:45:22.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.855" endtime="20201112 09:45:22.858"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.731" endtime="20201112 09:45:22.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.728" endtime="20201112 09:45:22.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:22.866" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'wakeups': [545114017, 545124017, 545134016, 545144016, 545154016, 545164016, 545174016, 545184016, 545194016, 545204016, 545214016, 545224016, 545234016, 5...</msg>
<status status="PASS" starttime="20201112 09:45:22.862" endtime="20201112 09:45:22.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.874" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:22.872" endtime="20201112 09:45:22.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.879" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:22.877" endtime="20201112 09:45:22.879"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.868" endtime="20201112 09:45:22.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.889" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:22.887" endtime="20201112 09:45:22.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.893" level="INFO">VALUE: 545103971</msg>
<status status="PASS" starttime="20201112 09:45:22.891" endtime="20201112 09:45:22.893"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.882" endtime="20201112 09:45:22.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.903" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:22.901" endtime="20201112 09:45:22.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:22.907" level="INFO">VALUE: [545114017, 545124017, 545134016, 545144016, 545154016, 545164016, 545174016, 545184016, 545194016, 545204016, 545214016, 545224016, 545234016, 545244016, 545254016, 545264016, 545274016, 545284016, 545294016, 545304016, 545314016, 545324016, 545334016, 545344016, 545354016, 545364016, 545374016, 545384016, 545394016, 545404016, 545414016, 545424016, 545434016, 545444016, 545454016, 545464016, 545474016, 545484016, 545494016, 545504016, 545514016, 545524016, 545534016, 545544016, 545554016, 545564016, 545574016, 545584016, 545594016, 545604016, 545614016, 545624016, 545634016, 545644016, 545654016, 545664016, 545674016, 545684016, 545694016, 545704016, 545714016, 545724016, 545734016, 545744016, 545754016, 545764016, 545774016, 545784016, 545794016, 545804016, 545814016, 545824016, 545834016, 545844016, 545854016, 545864016, 545874016, 545884016, 545894016, 545904016, 545914016, 545924016, 545934016, 545944016, 545954016, 545964016, 545974016, 545984016, 545994016, 546004016, 546014016, 546024016, 546034016, 546044016, 546054016, 546064016, 546074016, 546084016, 546094016, 546104016]</msg>
<status status="PASS" starttime="20201112 09:45:22.905" endtime="20201112 09:45:22.909"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.896" endtime="20201112 09:45:22.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:22.923" endtime="20201112 09:45:23.219"></status>
</kw>
<msg timestamp="20201112 09:45:23.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032670486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:45:22.920" endtime="20201112 09:45:23.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0226235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032670486, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 09:45:23.223" endtime="20201112 09:45:23.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.230" endtime="20201112 09:45:23.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.915" endtime="20201112 09:45:23.232"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:22.911" endtime="20201112 09:45:23.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:23.257" level="INFO">${RESULT} = {'time': [0.0226235, 0.032670486, 0.042671194, 0.052670944, 0.062671569, 0.072672375, 0.08267325, 0.092673972, 0.102674514, 0.112675306, 0.122675903, 0.132676833, 0.142677431, 0.152678236, 0.162679097...</msg>
<status status="PASS" starttime="20201112 09:45:23.233" endtime="20201112 09:45:23.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.261" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:23.260" endtime="20201112 09:45:23.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.263" level="INFO">VALUE: 0.0226235</msg>
<status status="PASS" starttime="20201112 09:45:23.263" endtime="20201112 09:45:23.264"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.258" endtime="20201112 09:45:23.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.269" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:23.268" endtime="20201112 09:45:23.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:23.271" level="INFO">VALUE: [0.032670486, 0.042671194, 0.052670944, 0.062671569, 0.072672375, 0.08267325, 0.092673972, 0.102674514, 0.112675306, 0.122675903, 0.132676833, 0.142677431, 0.152678236, 0.162679097, 0.172679833, 0.182680361, 0.192681181, 0.202681819, 0.212682694, 0.222683292, 0.232684097, 0.242684694, 0.252685708, 0.262686236, 0.272687097, 0.282687639, 0.292688653, 0.302689167, 0.312689972, 0.322690569, 0.332691597, 0.342692111, 0.352692972, 0.3626935, 0.372694458, 0.382695042, 0.392695847, 0.402696722, 0.4126975, 0.422697986, 0.432698792, 0.442699375, 0.452700319, 0.462700917, 0.472701764, 0.482702292, 0.492703319, 0.502703833, 0.512704625, 0.522705208, 0.532706208, 0.542706792, 0.552707542, 0.562708111, 0.572709139, 0.582709639, 0.592710444, 0.602711042, 0.612711944, 0.622712569, 0.632713347, 0.642714167, 0.652714972, 0.662715528, 0.672716278, 0.682716847, 0.692717764, 0.702718389, 0.712719181, 0.722719764, 0.732720764, 0.742721306, 0.752722097, 0.762722681, 0.772723681, 0.782724194, 0.792725, 0.802725583, 0.812726597, 0.822727111, 0.832727917, 0.842728556, 0.852729431, 0.862730028, 0.872730833, 0.882731639, 0.892732417, 0.902732958, 0.91273375, 0.922734347, 0.93273525, 0.942735889, 0.952736653, 0.962737278, 0.972738264, 0.982738792, 0.992739597, 1.002740167, 1.012741181, 1.022741694] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:23.270" endtime="20201112 09:45:23.271"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.265" endtime="20201112 09:45:23.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.274" endtime="20201112 09:45:23.276"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:23.278" endtime="20201112 09:45:23.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.277" endtime="20201112 09:45:23.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.273" endtime="20201112 09:45:23.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.727" endtime="20201112 09:45:23.299"></status>
</kw>
<msg timestamp="20201112 09:45:23.299" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:23.307" endtime="20201112 09:45:25.418"></status>
</kw>
<msg timestamp="20201112 09:45:25.419" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 547676316, 'wakeups': [547686362, 547696362, 547706361, 547716361, 547...</msg>
<status status="PASS" starttime="20201112 09:45:23.306" endtime="20201112 09:45:25.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.425" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 547676316, 'wakeups': [547686362, 547696362, 547706361, 547716361, 547...</msg>
<status status="PASS" starttime="20201112 09:45:25.422" endtime="20201112 09:45:25.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.428" endtime="20201112 09:45:25.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.303" endtime="20201112 09:45:25.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.301" endtime="20201112 09:45:25.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:25.438" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'wakeups': [547686362, 547696362, 547706361, 547716361, 547726361, 547736361, 547746361, 547756361, 547766361, 547776361, 547786361, 547796361, 547806361, 5...</msg>
<status status="PASS" starttime="20201112 09:45:25.434" endtime="20201112 09:45:25.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.449" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:25.446" endtime="20201112 09:45:25.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.453" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:25.451" endtime="20201112 09:45:25.453"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.440" endtime="20201112 09:45:25.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.463" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:25.461" endtime="20201112 09:45:25.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.467" level="INFO">VALUE: 547676316</msg>
<status status="PASS" starttime="20201112 09:45:25.465" endtime="20201112 09:45:25.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.456" endtime="20201112 09:45:25.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.477" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:25.475" endtime="20201112 09:45:25.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.482" level="INFO">VALUE: [547686362, 547696362, 547706361, 547716361, 547726361, 547736361, 547746361, 547756361, 547766361, 547776361, 547786361, 547796361, 547806361, 547816361, 547826361, 547836361, 547846361, 547856361, 547866361, 547876361, 547886361, 547896361, 547906361, 547916361, 547926361, 547936361, 547946361, 547956361, 547966361, 547976361, 547986361, 547996361, 548006361, 548016361, 548026361, 548036361, 548046361, 548056361, 548066361, 548076361, 548086361, 548096361, 548106361, 548116361, 548126361, 548136361, 548146361, 548156361, 548166361, 548176361, 548186361, 548196361, 548206361, 548216361, 548226361, 548236361, 548246361, 548256361, 548266361, 548276361, 548286361, 548296361, 548306361, 548316361, 548326361, 548336361, 548346361, 548356361, 548366361, 548376361, 548386361, 548396361, 548406361, 548416361, 548426361, 548436361, 548446361, 548456361, 548466361, 548476361, 548486361, 548496361, 548506361, 548516361, 548526361, 548536361, 548546361, 548556361, 548566361, 548576361, 548586361, 548596361, 548606361, 548616361, 548626361, 548636361, 548646361, 548656361, 548666361, 548676361]</msg>
<status status="PASS" starttime="20201112 09:45:25.480" endtime="20201112 09:45:25.483"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.470" endtime="20201112 09:45:25.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.491" endtime="20201112 09:45:25.780"></status>
</kw>
<msg timestamp="20201112 09:45:25.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019365069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029412389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:25.490" endtime="20201112 09:45:25.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019365069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029412389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:25.784" endtime="20201112 09:45:25.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.791" endtime="20201112 09:45:25.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.487" endtime="20201112 09:45:25.797"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.485" endtime="20201112 09:45:25.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:25.821" level="INFO">${RESULT} = {'time': [0.019365069, 0.029412389, 0.039413097, 0.049412847, 0.059413472, 0.069414278, 0.079415083, 0.089415889, 0.099416403, 0.109417194, 0.119417792, 0.129418736, 0.139419347, 0.149420125, 0.159420...</msg>
<status status="PASS" starttime="20201112 09:45:25.798" endtime="20201112 09:45:25.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.826" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:25.825" endtime="20201112 09:45:25.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.828" level="INFO">VALUE: 0.019365069</msg>
<status status="PASS" starttime="20201112 09:45:25.827" endtime="20201112 09:45:25.828"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.822" endtime="20201112 09:45:25.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.833" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:25.832" endtime="20201112 09:45:25.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:25.835" level="INFO">VALUE: [0.029412389, 0.039413097, 0.049412847, 0.059413472, 0.069414278, 0.079415083, 0.089415889, 0.099416403, 0.109417194, 0.119417792, 0.129418736, 0.139419347, 0.149420125, 0.159420958, 0.169421736, 0.179422278, 0.189423056, 0.199423667, 0.209424597, 0.219425194, 0.229426, 0.239426597, 0.249427611, 0.259428139, 0.269428944, 0.279429542, 0.289430556, 0.299431069, 0.309431861, 0.319432472, 0.329433486, 0.339434, 0.349434847, 0.359435417, 0.369436333, 0.379436944, 0.389437778, 0.399438569, 0.409439375, 0.419439944, 0.429440694, 0.439441278, 0.449442208, 0.459442819, 0.469443625, 0.479444208, 0.489445208, 0.499445722, 0.509446514, 0.519447125, 0.529448111, 0.539448639, 0.549449431, 0.559450014, 0.569451028, 0.579451542, 0.589452333, 0.599452931, 0.609453847, 0.619454458, 0.62945525, 0.639456083, 0.649456861, 0.659457361, 0.669458153, 0.67945875, 0.689459681, 0.699460278, 0.709461083, 0.719461667, 0.729462681, 0.739463208, 0.749464, 0.759464583, 0.769465625, 0.779466111, 0.789466903, 0.799467486, 0.809468556, 0.819469014, 0.829469806, 0.839470403, 0.849471319, 0.859471944, 0.869472722, 0.879473542, 0.889474319, 0.899474931, 0.909475639, 0.91947625, 0.929477153, 0.939477764, 0.949478583, 0.959479153, 0.969480167, 0.979480681, 0.989481472, 0.999482083, 1.009483139, 1.019483583] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:25.834" endtime="20201112 09:45:25.836"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.829" endtime="20201112 09:45:25.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.838" endtime="20201112 09:45:25.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:25.842" endtime="20201112 09:45:25.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.840" endtime="20201112 09:45:25.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.837" endtime="20201112 09:45:25.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:23.300" endtime="20201112 09:45:25.862"></status>
</kw>
<msg timestamp="20201112 09:45:25.862" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:25.871" endtime="20201112 09:45:27.981"></status>
</kw>
<msg timestamp="20201112 09:45:27.982" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 550239049, 'wakeups': [550249095, 550259095, 550269094, 550279094, 550...</msg>
<status status="PASS" starttime="20201112 09:45:25.869" endtime="20201112 09:45:27.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:27.988" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 550239049, 'wakeups': [550249095, 550259095, 550269094, 550279094, 550...</msg>
<status status="PASS" starttime="20201112 09:45:27.985" endtime="20201112 09:45:27.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:27.990" endtime="20201112 09:45:27.994"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.867" endtime="20201112 09:45:27.995"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.864" endtime="20201112 09:45:27.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:28.001" level="INFO">${RESULT} = {'timer-count': 8, 'timer-interval': 10000, 'wakeups': [550249095, 550259095, 550269094, 550279094, 550289094, 550299094, 550309094, 550319094, 550329094, 550339094, 550349094, 550359094, 550369094, 5...</msg>
<status status="PASS" starttime="20201112 09:45:27.997" endtime="20201112 09:45:28.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.010" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:28.008" endtime="20201112 09:45:28.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.015" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:28.013" endtime="20201112 09:45:28.015"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.004" endtime="20201112 09:45:28.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.025" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:28.023" endtime="20201112 09:45:28.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.029" level="INFO">VALUE: 550239049</msg>
<status status="PASS" starttime="20201112 09:45:28.027" endtime="20201112 09:45:28.030"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.018" endtime="20201112 09:45:28.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.039" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:28.037" endtime="20201112 09:45:28.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.046" level="INFO">VALUE: [550249095, 550259095, 550269094, 550279094, 550289094, 550299094, 550309094, 550319094, 550329094, 550339094, 550349094, 550359094, 550369094, 550379094, 550389094, 550399094, 550409094, 550419094, 550429094, 550439094, 550449094, 550459094, 550469094, 550479094, 550489094, 550499094, 550509094, 550519094, 550529094, 550539094, 550549094, 550559094, 550569094, 550579094, 550589094, 550599094, 550609094, 550619094, 550629094, 550639094, 550649094, 550659094, 550669094, 550679094, 550689094, 550699094, 550709094, 550719094, 550729094, 550739094, 550749094, 550759094, 550769094, 550779094, 550789094, 550799094, 550809094, 550819094, 550829094, 550839094, 550849094, 550859094, 550869094, 550879094, 550889094, 550899094, 550909094, 550919094, 550929094, 550939094, 550949094, 550959094, 550969094, 550979094, 550989094, 550999094, 551009094, 551019094, 551029094, 551039094, 551049094, 551059094, 551069094, 551079094, 551089094, 551099094, 551109094, 551119094, 551129094, 551139094, 551149094, 551159094, 551169094, 551179094, 551189094, 551199094, 551209094, 551219094, 551229094, 551239094]</msg>
<status status="PASS" starttime="20201112 09:45:28.041" endtime="20201112 09:45:28.047"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.032" endtime="20201112 09:45:28.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.054" endtime="20201112 09:45:28.346"></status>
</kw>
<msg timestamp="20201112 09:45:28.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029054431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:28.052" endtime="20201112 09:45:28.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019007431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029054431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:28.350" endtime="20201112 09:45:28.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.358" endtime="20201112 09:45:28.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.049" endtime="20201112 09:45:28.360"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.048" endtime="20201112 09:45:28.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:28.384" level="INFO">${RESULT} = {'time': [0.019007431, 0.029054431, 0.039055139, 0.049054903, 0.0590555, 0.069056306, 0.079057139, 0.089057917, 0.099058444, 0.10905925, 0.119059833, 0.129060764, 0.139061375, 0.149062181, 0.159063, 0...</msg>
<status status="PASS" starttime="20201112 09:45:28.361" endtime="20201112 09:45:28.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.389" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 09:45:28.388" endtime="20201112 09:45:28.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.391" level="INFO">VALUE: 0.019007431</msg>
<status status="PASS" starttime="20201112 09:45:28.390" endtime="20201112 09:45:28.391"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.385" endtime="20201112 09:45:28.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.397" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:28.395" endtime="20201112 09:45:28.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:28.399" level="INFO">VALUE: [0.029054431, 0.039055139, 0.049054903, 0.0590555, 0.069056306, 0.079057139, 0.089057917, 0.099058444, 0.10905925, 0.119059833, 0.129060764, 0.139061375, 0.149062181, 0.159063, 0.169063778, 0.179064306, 0.189065111, 0.19906575, 0.209066625, 0.219067236, 0.229068083, 0.239068639, 0.249069653, 0.259070167, 0.269070972, 0.279071583, 0.289072597, 0.299073097, 0.309073903, 0.3190745, 0.329075528, 0.339076069, 0.349076875, 0.359077444, 0.369078361, 0.379079056, 0.389079778, 0.399080653, 0.409081403, 0.419081917, 0.429082708, 0.439083319, 0.449084222, 0.459084833, 0.469085625, 0.479086222, 0.489087222, 0.49908775, 0.509088611, 0.519089139, 0.529090139, 0.539090653, 0.549091444, 0.559092069, 0.569093083, 0.579093583, 0.589094361, 0.599094944, 0.609095861, 0.619096486, 0.629097278, 0.639098083, 0.649098917, 0.659099403, 0.669100194, 0.679100792, 0.689101708, 0.699102306, 0.709103181, 0.719103694, 0.729104708, 0.739105208, 0.749106014, 0.759106611, 0.769107611, 0.779108139, 0.789108917, 0.799109514, 0.809110528, 0.819111042, 0.829111889, 0.839112444, 0.849113347, 0.859113972, 0.869114778, 0.879115569, 0.889116347, 0.899116889, 0.909117667, 0.919118264, 0.929119194, 0.939119833, 0.949120597, 0.959121181, 0.969122181, 0.979122764, 0.989123514, 0.999124097, 1.009125097, 1.019125625] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:28.398" endtime="20201112 09:45:28.399"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.392" endtime="20201112 09:45:28.400"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.402" endtime="20201112 09:45:28.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:28.407" endtime="20201112 09:45:28.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.405" endtime="20201112 09:45:28.427"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.401" endtime="20201112 09:45:28.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:25.863" endtime="20201112 09:45:28.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.725" endtime="20201112 09:45:28.428"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:20.724" endtime="20201112 09:45:28.428"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:28.431" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:28.439" endtime="20201112 09:45:30.549"></status>
</kw>
<msg timestamp="20201112 09:45:30.551" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 552807277, 'wakeups': [552817331, 552827328, 552837329, 552847329, 552...</msg>
<status status="PASS" starttime="20201112 09:45:28.437" endtime="20201112 09:45:30.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.556" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 552807277, 'wakeups': [552817331, 552827328, 552837329, 552847329, 552...</msg>
<status status="PASS" starttime="20201112 09:45:30.553" endtime="20201112 09:45:30.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.559" endtime="20201112 09:45:30.562"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.435" endtime="20201112 09:45:30.563"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.433" endtime="20201112 09:45:30.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:30.569" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'wakeups': [552817331, 552827328, 552837329, 552847329, 552857329, 552867329, 552877329, 552887329, 552897329, 552907329, 552917329, 552927329, 552937329, 5...</msg>
<status status="PASS" starttime="20201112 09:45:30.565" endtime="20201112 09:45:30.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.578" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:30.576" endtime="20201112 09:45:30.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.582" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:30.580" endtime="20201112 09:45:30.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.571" endtime="20201112 09:45:30.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.592" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:30.590" endtime="20201112 09:45:30.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.596" level="INFO">VALUE: 552807277</msg>
<status status="PASS" starttime="20201112 09:45:30.595" endtime="20201112 09:45:30.597"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.585" endtime="20201112 09:45:30.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.607" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:30.605" endtime="20201112 09:45:30.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.612" level="INFO">VALUE: [552817331, 552827328, 552837329, 552847329, 552857329, 552867329, 552877329, 552887329, 552897329, 552907329, 552917329, 552927329, 552937329, 552947329, 552957329, 552967329, 552977329, 552987329, 552997329, 553007329, 553017329, 553027329, 553037329, 553047329, 553057329, 553067329, 553077329, 553087329, 553097329, 553107329, 553117329, 553127329, 553137329, 553147329, 553157329, 553167329, 553177329, 553187329, 553197329, 553207329, 553217329, 553227329, 553237329, 553247329, 553257329, 553267329, 553277329, 553287329, 553297329, 553307329, 553317329, 553327329, 553337329, 553347329, 553357329, 553367329, 553377329, 553387329, 553397329, 553407329, 553417329, 553427329, 553437329, 553447329, 553457329, 553467329, 553477329, 553487329, 553497329, 553507329, 553517329, 553527329, 553537329, 553547329, 553557329, 553567329, 553577329, 553587329, 553597329, 553607329, 553617329, 553627329, 553637329, 553647329, 553657329, 553667329, 553677329, 553687329, 553697329, 553707329, 553717329, 553727329, 553737329, 553747329, 553757329, 553767329, 553777329, 553787329, 553797329, 553807329]</msg>
<status status="PASS" starttime="20201112 09:45:30.610" endtime="20201112 09:45:30.613"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.600" endtime="20201112 09:45:30.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.627" endtime="20201112 09:45:30.927"></status>
</kw>
<msg timestamp="20201112 09:45:30.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031789375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:30.624" endtime="20201112 09:45:30.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021733917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031789375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:30.931" endtime="20201112 09:45:30.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.938" endtime="20201112 09:45:30.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.618" endtime="20201112 09:45:30.940"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.615" endtime="20201112 09:45:30.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:30.964" level="INFO">${RESULT} = {'time': [0.021733917, 0.031789375, 0.041786792, 0.051788861, 0.061789514, 0.071790306, 0.081791208, 0.091791819, 0.101792431, 0.11179325, 0.121794042, 0.13179475, 0.141795361, 0.151796222, 0.16179706...</msg>
<status status="PASS" starttime="20201112 09:45:30.941" endtime="20201112 09:45:30.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.968" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:30.967" endtime="20201112 09:45:30.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.970" level="INFO">VALUE: 0.021733917</msg>
<status status="PASS" starttime="20201112 09:45:30.969" endtime="20201112 09:45:30.971"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.965" endtime="20201112 09:45:30.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.976" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:30.975" endtime="20201112 09:45:30.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:30.978" level="INFO">VALUE: [0.031789375, 0.041786792, 0.051788861, 0.061789514, 0.071790306, 0.081791208, 0.091791819, 0.101792431, 0.11179325, 0.121794042, 0.13179475, 0.141795361, 0.151796222, 0.161797069, 0.171797681, 0.181798306, 0.191799097, 0.201799819, 0.211800611, 0.221801264, 0.231802028, 0.241802944, 0.251803556, 0.261804167, 0.271804986, 0.281805708, 0.291806486, 0.301807097, 0.311807917, 0.321808819, 0.331809417, 0.341810056, 0.351810833, 0.361811611, 0.371812333, 0.381812944, 0.391813736, 0.401814667, 0.41181525, 0.421815861, 0.431816667, 0.441817375, 0.451818153, 0.461818764, 0.471819556, 0.481820472, 0.491821069, 0.501821681, 0.511822486, 0.521823208, 0.531823972, 0.541824583, 0.551825375, 0.561826292, 0.571826889, 0.5818275, 0.591828333, 0.601829042, 0.611829792, 0.621830417, 0.631831194, 0.641832111, 0.651832722, 0.661833347, 0.671834111, 0.681834833, 0.691835625, 0.701836222, 0.711837042, 0.721837986, 0.731838542, 0.741839153, 0.751839972, 0.761840681, 0.771841514, 0.781842056, 0.791842861, 0.801843778, 0.811844389, 0.821844972, 0.831845778, 0.841846486, 0.851847347, 0.861847889, 0.871848681, 0.881849597, 0.891850208, 0.901850819, 0.911851611, 0.921852347, 0.931853111, 0.941853722, 0.951854528, 0.961855417, 0.971856028, 0.981856639, 0.991857472, 1.001858153, 1.011858931, 1.021859542] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:30.977" endtime="20201112 09:45:30.978"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.972" endtime="20201112 09:45:30.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:30.986" endtime="20201112 09:45:30.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:30.989" endtime="20201112 09:45:31.008"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.988" endtime="20201112 09:45:31.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:30.984" endtime="20201112 09:45:31.009"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.431" endtime="20201112 09:45:31.010"></status>
</kw>
<msg timestamp="20201112 09:45:31.010" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:31.019" endtime="20201112 09:45:33.129"></status>
</kw>
<msg timestamp="20201112 09:45:33.130" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 555387257, 'wakeups': [555397311, 555407308, 555417309, 555427309, 555...</msg>
<status status="PASS" starttime="20201112 09:45:31.016" endtime="20201112 09:45:33.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.136" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 555387257, 'wakeups': [555397311, 555407308, 555417309, 555427309, 555...</msg>
<status status="PASS" starttime="20201112 09:45:33.132" endtime="20201112 09:45:33.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.138" endtime="20201112 09:45:33.141"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.014" endtime="20201112 09:45:33.142"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.012" endtime="20201112 09:45:33.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:33.149" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'wakeups': [555397311, 555407308, 555417309, 555427309, 555437309, 555447309, 555457309, 555467309, 555477309, 555487309, 555497309, 555507309, 555517309, 5...</msg>
<status status="PASS" starttime="20201112 09:45:33.145" endtime="20201112 09:45:33.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.157" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:33.155" endtime="20201112 09:45:33.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.161" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:33.159" endtime="20201112 09:45:33.162"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.150" endtime="20201112 09:45:33.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.171" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:33.169" endtime="20201112 09:45:33.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.176" level="INFO">VALUE: 555387257</msg>
<status status="PASS" starttime="20201112 09:45:33.174" endtime="20201112 09:45:33.176"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.164" endtime="20201112 09:45:33.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.186" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:33.184" endtime="20201112 09:45:33.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.190" level="INFO">VALUE: [555397311, 555407308, 555417309, 555427309, 555437309, 555447309, 555457309, 555467309, 555477309, 555487309, 555497309, 555507309, 555517309, 555527309, 555537309, 555547309, 555557309, 555567309, 555577309, 555587309, 555597309, 555607309, 555617309, 555627309, 555637309, 555647309, 555657309, 555667309, 555677309, 555687309, 555697309, 555707309, 555717309, 555727309, 555737309, 555747309, 555757309, 555767309, 555777309, 555787309, 555797309, 555807309, 555817309, 555827309, 555837309, 555847309, 555857309, 555867309, 555877309, 555887309, 555897309, 555907309, 555917309, 555927309, 555937309, 555947309, 555957309, 555967309, 555977309, 555987309, 555997309, 556007309, 556017309, 556027309, 556037309, 556047309, 556057309, 556067309, 556077309, 556087309, 556097309, 556107309, 556117309, 556127309, 556137309, 556147309, 556157309, 556167309, 556177309, 556187309, 556197309, 556207309, 556217309, 556227309, 556237309, 556247309, 556257309, 556267309, 556277309, 556287309, 556297309, 556307309, 556317309, 556327309, 556337309, 556347309, 556357309, 556367309, 556377309, 556387309]</msg>
<status status="PASS" starttime="20201112 09:45:33.188" endtime="20201112 09:45:33.191"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.179" endtime="20201112 09:45:33.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.206" endtime="20201112 09:45:33.505"></status>
</kw>
<msg timestamp="20201112 09:45:33.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029879667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:33.203" endtime="20201112 09:45:33.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019824194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029879667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:33.509" endtime="20201112 09:45:33.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.516" endtime="20201112 09:45:33.517"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.198" endtime="20201112 09:45:33.518"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.193" endtime="20201112 09:45:33.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:33.543" level="INFO">${RESULT} = {'time': [0.019824194, 0.029879667, 0.039877097, 0.049879153, 0.059879778, 0.069880597, 0.079881514, 0.089882111, 0.099882736, 0.109883528, 0.119884236, 0.129885028, 0.139885639, 0.149886472, 0.159887...</msg>
<status status="PASS" starttime="20201112 09:45:33.519" endtime="20201112 09:45:33.544"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.548" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:33.547" endtime="20201112 09:45:33.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.550" level="INFO">VALUE: 0.019824194</msg>
<status status="PASS" starttime="20201112 09:45:33.549" endtime="20201112 09:45:33.550"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.544" endtime="20201112 09:45:33.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.555" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:33.554" endtime="20201112 09:45:33.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:33.557" level="INFO">VALUE: [0.029879667, 0.039877097, 0.049879153, 0.059879778, 0.069880597, 0.079881514, 0.089882111, 0.099882736, 0.109883528, 0.119884236, 0.129885028, 0.139885639, 0.149886472, 0.159887375, 0.169887972, 0.179888583, 0.189889389, 0.199890139, 0.209890889, 0.219891514, 0.229892319, 0.239893222, 0.249893847, 0.259894444, 0.26989525, 0.279896, 0.289896764, 0.299897375, 0.309898194, 0.319899111, 0.32989975, 0.339900333, 0.349901111, 0.359901847, 0.369902639, 0.379903278, 0.389904042, 0.399904986, 0.409905569, 0.419906181, 0.429906972, 0.439907708, 0.449908486, 0.459909083, 0.469909875, 0.479910792, 0.489911431, 0.499912014, 0.509912792, 0.519913528, 0.529914306, 0.539914903, 0.549915722, 0.559916667, 0.569917208, 0.579917833, 0.589918625, 0.599919319, 0.609920153, 0.619920722, 0.629921528, 0.639922431, 0.649923028, 0.659923639, 0.669924444, 0.679925167, 0.689925944, 0.699926542, 0.709927361, 0.71992825, 0.729928861, 0.739929458, 0.74993025, 0.759930986, 0.769931764, 0.779932361, 0.789933167, 0.799934069, 0.809934694, 0.819935278, 0.829936097, 0.839936806, 0.849937667, 0.859938194, 0.869939, 0.879939917, 0.889940528, 0.899941111, 0.909941917, 0.919942625, 0.9299435, 0.939944042, 0.949944875, 0.959945722, 0.969946361, 0.979946958, 0.989947736, 0.999948458, 1.009949236, 1.019949847] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:33.556" endtime="20201112 09:45:33.558"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.551" endtime="20201112 09:45:33.558"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.560" endtime="20201112 09:45:33.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:33.564" endtime="20201112 09:45:33.583"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.562" endtime="20201112 09:45:33.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.559" endtime="20201112 09:45:33.584"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:31.011" endtime="20201112 09:45:33.584"></status>
</kw>
<msg timestamp="20201112 09:45:33.585" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:33.592" endtime="20201112 09:45:35.703"></status>
</kw>
<msg timestamp="20201112 09:45:35.704" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 557960997, 'wakeups': [557971051, 557981048, 557991049, 558001049, 558...</msg>
<status status="PASS" starttime="20201112 09:45:33.591" endtime="20201112 09:45:35.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.711" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 557960997, 'wakeups': [557971051, 557981048, 557991049, 558001049, 558...</msg>
<status status="PASS" starttime="20201112 09:45:35.707" endtime="20201112 09:45:35.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.713" endtime="20201112 09:45:35.717"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.588" endtime="20201112 09:45:35.718"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.587" endtime="20201112 09:45:35.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:35.724" level="INFO">${RESULT} = {'timer-count': 9, 'timer-interval': 10000, 'wakeups': [557971051, 557981048, 557991049, 558001049, 558011049, 558021049, 558031049, 558041049, 558051049, 558061049, 558071049, 558081049, 558091049, 5...</msg>
<status status="PASS" starttime="20201112 09:45:35.720" endtime="20201112 09:45:35.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.733" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:35.730" endtime="20201112 09:45:35.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.737" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:35.735" endtime="20201112 09:45:35.738"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.726" endtime="20201112 09:45:35.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.747" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:35.745" endtime="20201112 09:45:35.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.753" level="INFO">VALUE: 557960997</msg>
<status status="PASS" starttime="20201112 09:45:35.749" endtime="20201112 09:45:35.754"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.740" endtime="20201112 09:45:35.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.763" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:35.761" endtime="20201112 09:45:35.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:35.768" level="INFO">VALUE: [557971051, 557981048, 557991049, 558001049, 558011049, 558021049, 558031049, 558041049, 558051049, 558061049, 558071049, 558081049, 558091049, 558101049, 558111049, 558121049, 558131049, 558141049, 558151049, 558161049, 558171049, 558181049, 558191049, 558201049, 558211049, 558221049, 558231049, 558241049, 558251049, 558261049, 558271049, 558281049, 558291049, 558301049, 558311049, 558321049, 558331049, 558341049, 558351049, 558361049, 558371049, 558381049, 558391049, 558401049, 558411049, 558421049, 558431049, 558441049, 558451049, 558461049, 558471049, 558481049, 558491049, 558501049, 558511049, 558521049, 558531049, 558541049, 558551049, 558561049, 558571049, 558581049, 558591049, 558601049, 558611049, 558621049, 558631049, 558641049, 558651049, 558661049, 558671049, 558681049, 558691049, 558701049, 558711049, 558721049, 558731049, 558741049, 558751049, 558761049, 558771049, 558781049, 558791049, 558801049, 558811049, 558821049, 558831049, 558841049, 558851049, 558861049, 558871049, 558881049, 558891049, 558901049, 558911049, 558921049, 558931049, 558941049, 558951049, 558961049]</msg>
<status status="PASS" starttime="20201112 09:45:35.766" endtime="20201112 09:45:35.769"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.756" endtime="20201112 09:45:35.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:35.783" endtime="20201112 09:45:36.080"></status>
</kw>
<msg timestamp="20201112 09:45:36.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018937778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:35.780" endtime="20201112 09:45:36.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018937778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028993236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:36.084" endtime="20201112 09:45:36.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.091" endtime="20201112 09:45:36.093"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.775" endtime="20201112 09:45:36.094"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:35.771" endtime="20201112 09:45:36.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:36.124" level="INFO">${RESULT} = {'time': [0.018937778, 0.028993236, 0.038990667, 0.048992722, 0.058993347, 0.068994153, 0.078995083, 0.088995667, 0.098996292, 0.108997083, 0.118997861, 0.128998611, 0.138999208, 0.149000014, 0.159000...</msg>
<status status="PASS" starttime="20201112 09:45:36.101" endtime="20201112 09:45:36.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.128" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 09:45:36.127" endtime="20201112 09:45:36.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.130" level="INFO">VALUE: 0.018937778</msg>
<status status="PASS" starttime="20201112 09:45:36.129" endtime="20201112 09:45:36.131"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.125" endtime="20201112 09:45:36.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.136" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:36.135" endtime="20201112 09:45:36.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:36.139" level="INFO">VALUE: [0.028993236, 0.038990667, 0.048992722, 0.058993347, 0.068994153, 0.078995083, 0.088995667, 0.098996292, 0.108997083, 0.118997861, 0.128998611, 0.138999208, 0.149000014, 0.159000931, 0.169001556, 0.179002153, 0.189002944, 0.199003736, 0.209004528, 0.219005069, 0.229005903, 0.239006819, 0.249007403, 0.259008014, 0.269008819, 0.279009556, 0.289010333, 0.299010958, 0.30901175, 0.319012653, 0.329013264, 0.339013889, 0.349014681, 0.359015403, 0.369016208, 0.379016806, 0.389017611, 0.399018528, 0.409019139, 0.419019736, 0.429020528, 0.43902125, 0.449022042, 0.459022653, 0.469023431, 0.479024347, 0.489025014, 0.499025569, 0.509026361, 0.519027069, 0.529027847, 0.539028458, 0.54902925, 0.559030236, 0.569030778, 0.579031375, 0.589032167, 0.599032889, 0.609033681, 0.619034278, 0.629035069, 0.639035986, 0.649036611, 0.659037194, 0.669037986, 0.679038708, 0.689039486, 0.699040111, 0.709040903, 0.719041806, 0.729042403, 0.739043014, 0.749043806, 0.759044528, 0.769045306, 0.779045917, 0.789046708, 0.799047625, 0.809048222, 0.819048833, 0.829049639, 0.839050347, 0.849051139, 0.859051736, 0.869052542, 0.879053458, 0.889054056, 0.899054653, 0.909055458, 0.919056181, 0.929056958, 0.939057569, 0.949058361, 0.959059278, 0.969059875, 0.979060569, 0.989061278, 0.999062, 1.009062778, 1.019063389] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:36.138" endtime="20201112 09:45:36.139"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.132" endtime="20201112 09:45:36.140"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.142" endtime="20201112 09:45:36.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:36.145" endtime="20201112 09:45:36.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.144" endtime="20201112 09:45:36.165"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.140" endtime="20201112 09:45:36.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:33.585" endtime="20201112 09:45:36.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.429" endtime="20201112 09:45:36.166"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:28.429" endtime="20201112 09:45:36.166"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 09:45:36.169" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:36.177" endtime="20201112 09:45:38.288"></status>
</kw>
<msg timestamp="20201112 09:45:38.289" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 560545442, 'wakeups': [560555503, 560565503, 560575501, 560585501, 5...</msg>
<status status="PASS" starttime="20201112 09:45:36.175" endtime="20201112 09:45:38.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.295" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 560545442, 'wakeups': [560555503, 560565503, 560575501, 560585501, 5...</msg>
<status status="PASS" starttime="20201112 09:45:38.291" endtime="20201112 09:45:38.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.297" endtime="20201112 09:45:38.300"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.173" endtime="20201112 09:45:38.301"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.171" endtime="20201112 09:45:38.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:38.308" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'wakeups': [560555503, 560565503, 560575501, 560585501, 560595501, 560605501, 560615501, 560625501, 560635501, 560645501, 560655501, 560665501, 560675501, ...</msg>
<status status="PASS" starttime="20201112 09:45:38.304" endtime="20201112 09:45:38.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.317" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:38.315" endtime="20201112 09:45:38.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.321" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:38.319" endtime="20201112 09:45:38.322"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.310" endtime="20201112 09:45:38.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.331" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:38.329" endtime="20201112 09:45:38.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.335" level="INFO">VALUE: 560545442</msg>
<status status="PASS" starttime="20201112 09:45:38.333" endtime="20201112 09:45:38.336"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.324" endtime="20201112 09:45:38.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.346" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:38.343" endtime="20201112 09:45:38.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.350" level="INFO">VALUE: [560555503, 560565503, 560575501, 560585501, 560595501, 560605501, 560615501, 560625501, 560635501, 560645501, 560655501, 560665501, 560675501, 560685502, 560695501, 560705501, 560715501, 560725501, 560735501, 560745501, 560755501, 560765501, 560775501, 560785501, 560795501, 560805501, 560815501, 560825501, 560835501, 560845501, 560855501, 560865501, 560875501, 560885501, 560895501, 560905501, 560915501, 560925501, 560935501, 560945501, 560955501, 560965501, 560975501, 560985501, 560995501, 561005501, 561015501, 561025501, 561035501, 561045501, 561055501, 561065501, 561075501, 561085501, 561095501, 561105501, 561115501, 561125501, 561135501, 561145501, 561155501, 561165501, 561175501, 561185501, 561195501, 561205501, 561215501, 561225501, 561235501, 561245501, 561255501, 561265501, 561275501, 561285501, 561295501, 561305501, 561315501, 561325501, 561335501, 561345501, 561355501, 561365501, 561375501, 561385501, 561395501, 561405501, 561415501, 561425501, 561435501, 561445501, 561455501, 561465501, 561475501, 561485501, 561495501, 561505501, 561515501, 561525501, 561535501, 561545501]</msg>
<status status="PASS" starttime="20201112 09:45:38.348" endtime="20201112 09:45:38.351"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.339" endtime="20201112 09:45:38.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.362" endtime="20201112 09:45:38.654"></status>
</kw>
<msg timestamp="20201112 09:45:38.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031891847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:38.359" endtime="20201112 09:45:38.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021829181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031891847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:38.658" endtime="20201112 09:45:38.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.665" endtime="20201112 09:45:38.667"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.357" endtime="20201112 09:45:38.668"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.353" endtime="20201112 09:45:38.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:38.692" level="INFO">${RESULT} = {'time': [0.021829181, 0.031891847, 0.041891708, 0.051891111, 0.061891722, 0.071892528, 0.081893264, 0.091894056, 0.101894653, 0.111895458, 0.121896181, 0.131897028, 0.141897611, 0.151898389, 0.161899...</msg>
<status status="PASS" starttime="20201112 09:45:38.669" endtime="20201112 09:45:38.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.696" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:38.695" endtime="20201112 09:45:38.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.698" level="INFO">VALUE: 0.021829181</msg>
<status status="PASS" starttime="20201112 09:45:38.697" endtime="20201112 09:45:38.699"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.693" endtime="20201112 09:45:38.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.704" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:38.702" endtime="20201112 09:45:38.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:38.706" level="INFO">VALUE: [0.031891847, 0.041891708, 0.051891111, 0.061891722, 0.071892528, 0.081893264, 0.091894056, 0.101894653, 0.111895458, 0.121896181, 0.131897028, 0.141897611, 0.151898389, 0.161899708, 0.171899931, 0.181900528, 0.191901319, 0.201902083, 0.211902833, 0.221903472, 0.231904264, 0.241904986, 0.251905819, 0.261906403, 0.271907208, 0.281907917, 0.291908708, 0.301909375, 0.311910125, 0.321910861, 0.331911653, 0.341912278, 0.351913056, 0.361913792, 0.371914625, 0.381915181, 0.391916, 0.401916764, 0.4119175, 0.421918125, 0.431918917, 0.441919653, 0.451920444, 0.461921056, 0.471921861, 0.481922653, 0.491923375, 0.501924, 0.511924792, 0.521925528, 0.531926319, 0.541926944, 0.551927736, 0.561928458, 0.571929264, 0.581929861, 0.591930667, 0.601931375, 0.611932153, 0.621932764, 0.631933583, 0.641934292, 0.651935069, 0.661935694, 0.6719365, 0.681937194, 0.691937986, 0.701938611, 0.711939417, 0.721940125, 0.731940903, 0.741941514, 0.751942319, 0.761943069, 0.771943833, 0.7819445, 0.791945264, 0.801945958, 0.81194675, 0.821947403, 0.831948153, 0.841948875, 0.851949667, 0.861950319, 0.871951083, 0.881951861, 0.891952583, 0.901953194, 0.911954, 0.921954708, 0.931955514, 0.941956111, 0.951956944, 0.961957653, 0.971958431, 0.981959028, 0.991959833, 1.001960556, 1.011961361, 1.021961958] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:38.705" endtime="20201112 09:45:38.706"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.700" endtime="20201112 09:45:38.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.709" endtime="20201112 09:45:38.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:38.713" endtime="20201112 09:45:38.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.711" endtime="20201112 09:45:38.732"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.708" endtime="20201112 09:45:38.733"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.169" endtime="20201112 09:45:38.733"></status>
</kw>
<msg timestamp="20201112 09:45:38.733" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:38.742" endtime="20201112 09:45:40.853"></status>
</kw>
<msg timestamp="20201112 09:45:40.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 563111044, 'wakeups': [563121105, 563131105, 563141103, 563151103, 5...</msg>
<status status="PASS" starttime="20201112 09:45:38.740" endtime="20201112 09:45:40.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.860" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 563111044, 'wakeups': [563121105, 563131105, 563141103, 563151103, 5...</msg>
<status status="PASS" starttime="20201112 09:45:40.856" endtime="20201112 09:45:40.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.862" endtime="20201112 09:45:40.866"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.737" endtime="20201112 09:45:40.867"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.735" endtime="20201112 09:45:40.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:40.873" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'wakeups': [563121105, 563131105, 563141103, 563151103, 563161103, 563171103, 563181103, 563191103, 563201103, 563211103, 563221103, 563231103, 563241103, ...</msg>
<status status="PASS" starttime="20201112 09:45:40.869" endtime="20201112 09:45:40.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.881" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:40.879" endtime="20201112 09:45:40.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.886" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:40.884" endtime="20201112 09:45:40.886"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.875" endtime="20201112 09:45:40.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.896" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:40.894" endtime="20201112 09:45:40.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.900" level="INFO">VALUE: 563111044</msg>
<status status="PASS" starttime="20201112 09:45:40.898" endtime="20201112 09:45:40.901"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.888" endtime="20201112 09:45:40.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.911" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:40.908" endtime="20201112 09:45:40.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:40.915" level="INFO">VALUE: [563121105, 563131105, 563141103, 563151103, 563161103, 563171103, 563181103, 563191103, 563201103, 563211103, 563221103, 563231103, 563241103, 563251104, 563261103, 563271103, 563281103, 563291103, 563301103, 563311103, 563321103, 563331103, 563341103, 563351103, 563361103, 563371103, 563381103, 563391103, 563401103, 563411103, 563421103, 563431103, 563441103, 563451103, 563461103, 563471103, 563481103, 563491103, 563501103, 563511103, 563521103, 563531103, 563541103, 563551103, 563561103, 563571103, 563581103, 563591103, 563601103, 563611103, 563621103, 563631103, 563641103, 563651103, 563661103, 563671103, 563681103, 563691103, 563701103, 563711103, 563721103, 563731103, 563741103, 563751103, 563761103, 563771103, 563781103, 563791103, 563801103, 563811103, 563821103, 563831103, 563841103, 563851103, 563861103, 563871103, 563881103, 563891103, 563901103, 563911103, 563921103, 563931103, 563941103, 563951103, 563961103, 563971103, 563981103, 563991103, 564001103, 564011103, 564021103, 564031103, 564041103, 564051103, 564061103, 564071103, 564081103, 564091103, 564101103, 564111103]</msg>
<status status="PASS" starttime="20201112 09:45:40.913" endtime="20201112 09:45:40.916"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.903" endtime="20201112 09:45:40.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:40.927" endtime="20201112 09:45:41.217"></status>
</kw>
<msg timestamp="20201112 09:45:41.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030253028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:40.925" endtime="20201112 09:45:41.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020190375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030253028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:41.220" endtime="20201112 09:45:41.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.228" endtime="20201112 09:45:41.229"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.922" endtime="20201112 09:45:41.230"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:40.918" endtime="20201112 09:45:41.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:41.254" level="INFO">${RESULT} = {'time': [0.020190375, 0.030253028, 0.040252861, 0.050252319, 0.060252958, 0.07025375, 0.080254458, 0.09025525, 0.100255875, 0.110256694, 0.120257417, 0.13025825, 0.140258819, 0.150259611, 0.160260917...</msg>
<status status="PASS" starttime="20201112 09:45:41.231" endtime="20201112 09:45:41.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.258" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:41.257" endtime="20201112 09:45:41.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.260" level="INFO">VALUE: 0.020190375</msg>
<status status="PASS" starttime="20201112 09:45:41.259" endtime="20201112 09:45:41.261"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.255" endtime="20201112 09:45:41.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.266" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:41.265" endtime="20201112 09:45:41.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:41.268" level="INFO">VALUE: [0.030253028, 0.040252861, 0.050252319, 0.060252958, 0.07025375, 0.080254458, 0.09025525, 0.100255875, 0.110256694, 0.120257417, 0.13025825, 0.140258819, 0.150259611, 0.160260917, 0.170261139, 0.180261764, 0.190262556, 0.200263278, 0.210264083, 0.220264708, 0.2302655, 0.240266222, 0.250267028, 0.260267625, 0.270268431, 0.280269236, 0.290269958, 0.300270569, 0.310271375, 0.320272139, 0.330272972, 0.340273542, 0.350274319, 0.360275097, 0.370275847, 0.380276444, 0.390277264, 0.400277986, 0.410278778, 0.420279389, 0.430280194, 0.440280889, 0.450281681, 0.460282278, 0.470283083, 0.480283819, 0.490284583, 0.500285208, 0.510286014, 0.520286722, 0.530287514, 0.540288111, 0.550288917, 0.560289625, 0.570290431, 0.580291028, 0.590291833, 0.600292542, 0.610293347, 0.620293944, 0.630294736, 0.640295458, 0.65029625, 0.660296861, 0.670297667, 0.680298375, 0.690299167, 0.700299792, 0.710300653, 0.720301306, 0.730302083, 0.740302694, 0.7503035, 0.760304208, 0.770305028, 0.780305611, 0.790306417, 0.800307153, 0.810307931, 0.820308528, 0.830309347, 0.840310056, 0.850310861, 0.860311472, 0.87031225, 0.880313028, 0.890313764, 0.900314389, 0.910315181, 0.920315889, 0.930316681, 0.940317292, 0.950318111, 0.960318819, 0.970319597, 0.980320222, 0.990321014, 1.000321778, 1.010322528, 1.020323153] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:41.267" endtime="20201112 09:45:41.268"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.262" endtime="20201112 09:45:41.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.271" endtime="20201112 09:45:41.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:41.279" endtime="20201112 09:45:41.298"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.277" endtime="20201112 09:45:41.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.269" endtime="20201112 09:45:41.299"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:38.734" endtime="20201112 09:45:41.300"></status>
</kw>
<msg timestamp="20201112 09:45:41.300" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:41.308" endtime="20201112 09:45:43.418"></status>
</kw>
<msg timestamp="20201112 09:45:43.420" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 565676273, 'wakeups': [565686335, 565696334, 565706332, 565716332, 5...</msg>
<status status="PASS" starttime="20201112 09:45:41.306" endtime="20201112 09:45:43.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.425" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 565676273, 'wakeups': [565686335, 565696334, 565706332, 565716332, 5...</msg>
<status status="PASS" starttime="20201112 09:45:43.422" endtime="20201112 09:45:43.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.428" endtime="20201112 09:45:43.431"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.304" endtime="20201112 09:45:43.432"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.302" endtime="20201112 09:45:43.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:43.438" level="INFO">${RESULT} = {'timer-count': 10, 'timer-interval': 10000, 'wakeups': [565686335, 565696334, 565706332, 565716332, 565726332, 565736332, 565746332, 565756332, 565766332, 565776332, 565786332, 565796332, 565806332, ...</msg>
<status status="PASS" starttime="20201112 09:45:43.434" endtime="20201112 09:45:43.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.447" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 09:45:43.445" endtime="20201112 09:45:43.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.451" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 09:45:43.449" endtime="20201112 09:45:43.452"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.440" endtime="20201112 09:45:43.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.461" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:43.459" endtime="20201112 09:45:43.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.468" level="INFO">VALUE: 565676273</msg>
<status status="PASS" starttime="20201112 09:45:43.463" endtime="20201112 09:45:43.468"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.454" endtime="20201112 09:45:43.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.478" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:43.476" endtime="20201112 09:45:43.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.482" level="INFO">VALUE: [565686335, 565696334, 565706332, 565716332, 565726332, 565736332, 565746332, 565756332, 565766332, 565776332, 565786332, 565796332, 565806332, 565816333, 565826332, 565836332, 565846332, 565856332, 565866332, 565876332, 565886332, 565896332, 565906332, 565916332, 565926332, 565936332, 565946332, 565956332, 565966332, 565976332, 565986332, 565996332, 566006332, 566016332, 566026332, 566036332, 566046332, 566056332, 566066332, 566076332, 566086332, 566096332, 566106332, 566116332, 566126332, 566136332, 566146332, 566156332, 566166332, 566176332, 566186332, 566196332, 566206332, 566216332, 566226332, 566236332, 566246332, 566256332, 566266332, 566276332, 566286332, 566296332, 566306332, 566316332, 566326332, 566336332, 566346332, 566356332, 566366332, 566376332, 566386332, 566396332, 566406332, 566416332, 566426332, 566436332, 566446332, 566456332, 566466332, 566476332, 566486332, 566496332, 566506332, 566516332, 566526332, 566536332, 566546332, 566556332, 566566332, 566576332, 566586332, 566596332, 566606332, 566616332, 566626332, 566636332, 566646332, 566656332, 566666332, 566676332]</msg>
<status status="PASS" starttime="20201112 09:45:43.480" endtime="20201112 09:45:43.482"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.471" endtime="20201112 09:45:43.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.489" endtime="20201112 09:45:43.781"></status>
</kw>
<msg timestamp="20201112 09:45:43.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018911194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028974542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:43.488" endtime="20201112 09:45:43.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018911194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028974542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 09:45:43.785" endtime="20201112 09:45:43.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.793" endtime="20201112 09:45:43.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.485" endtime="20201112 09:45:43.795"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.483" endtime="20201112 09:45:43.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 09:45:43.820" level="INFO">${RESULT} = {'time': [0.018911194, 0.028974542, 0.038973361, 0.048972847, 0.058973444, 0.068974222, 0.078974944, 0.088975736, 0.098976347, 0.108977167, 0.118977875, 0.128978667, 0.138979292, 0.148980083, 0.158981...</msg>
<status status="PASS" starttime="20201112 09:45:43.797" endtime="20201112 09:45:43.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.824" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 09:45:43.823" endtime="20201112 09:45:43.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.826" level="INFO">VALUE: 0.018911194</msg>
<status status="PASS" starttime="20201112 09:45:43.825" endtime="20201112 09:45:43.826"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.820" endtime="20201112 09:45:43.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.831" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 09:45:43.830" endtime="20201112 09:45:43.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 09:45:43.834" level="INFO">VALUE: [0.028974542, 0.038973361, 0.048972847, 0.058973444, 0.068974222, 0.078974944, 0.088975736, 0.098976347, 0.108977167, 0.118977875, 0.128978667, 0.138979292, 0.148980083, 0.158981431, 0.168981611, 0.178982222, 0.188983028, 0.19898375, 0.208984625, 0.218985167, 0.228986014, 0.238986694, 0.248987486, 0.258988097, 0.268988903, 0.278989639, 0.288990431, 0.298991056, 0.308991833, 0.318992556, 0.328993347, 0.338993972, 0.34899475, 0.358995472, 0.368996264, 0.378996861, 0.388997667, 0.398998389, 0.408999167, 0.418999778, 0.429000653, 0.439001292, 0.449002083, 0.459002694, 0.469003486, 0.479004222, 0.489005, 0.499005611, 0.509006403, 0.519007139, 0.529007931, 0.539008528, 0.549009319, 0.559010042, 0.569010847, 0.579011444, 0.589012236, 0.599012958, 0.60901375, 0.619014375, 0.629015153, 0.639015875, 0.649016667, 0.659017278, 0.669018097, 0.679018792, 0.689019625, 0.699020194, 0.709020986, 0.719021708, 0.7290225, 0.739023125, 0.749023917, 0.759024625, 0.769025431, 0.779026028, 0.789026833, 0.799027556, 0.809028375, 0.819028944, 0.82902975, 0.839030472, 0.84903125, 0.859031917, 0.869032667, 0.879033389, 0.889034181, 0.899034778, 0.909035597, 0.919036306, 0.929037139, 0.939037722, 0.9490385, 0.959039236, 0.969040069, 0.979040639, 0.989041431, 0.999042208, 1.009042931, 1.019043542] # exclude start event</msg>
<status status="PASS" starttime="20201112 09:45:43.833" endtime="20201112 09:45:43.835"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.827" endtime="20201112 09:45:43.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 09:45:43.837" endtime="20201112 09:45:43.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 09:45:43.841" endtime="20201112 09:45:43.860"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.839" endtime="20201112 09:45:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:43.836" endtime="20201112 09:45:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:41.301" endtime="20201112 09:45:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.167" endtime="20201112 09:45:43.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:45:36.167" endtime="20201112 09:45:43.862"></status>
</kw>
<status status="PASS" starttime="20201112 09:44:26.826" endtime="20201112 09:45:43.862"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f767zi</tag>
</tags>
<status status="PASS" starttime="20201112 09:44:26.734" endtime="20201112 09:45:43.863" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 09:44:25.310" endtime="20201112 09:45:43.866"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f767zi</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201112 09:42:37.678" endtime="20201112 09:45:43.882"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f767zi</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
