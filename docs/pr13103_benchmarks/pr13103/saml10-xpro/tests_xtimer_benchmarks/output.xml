<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201112 12:41:52.905" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:53.478" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:53.486" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:54.595" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:53.476" endtime="20201112 12:41:54.596"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.599" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:54.597" endtime="20201112 12:41:54.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.475" endtime="20201112 12:41:54.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.602" endtime="20201112 12:41:54.842"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.600" endtime="20201112 12:41:54.843"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.855" endtime="20201112 12:41:54.868"></status>
</kw>
<msg timestamp="20201112 12:41:54.868" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.854" endtime="20201112 12:41:54.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.871" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.869" endtime="20201112 12:41:54.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.874" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:54.872" endtime="20201112 12:41:54.874"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:54.852" endtime="20201112 12:41:54.875"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:54.849" endtime="20201112 12:41:54.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.848" endtime="20201112 12:41:54.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:54.880" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:54.879" endtime="20201112 12:41:54.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.877" endtime="20201112 12:41:54.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.847" endtime="20201112 12:41:54.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.847" endtime="20201112 12:41:54.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.882" endtime="20201112 12:41:54.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.845" endtime="20201112 12:41:54.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.885" endtime="20201112 12:41:54.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.844" endtime="20201112 12:41:54.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:53.473" endtime="20201112 12:41:54.887"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:54.894" endtime="20201112 12:41:54.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.892" endtime="20201112 12:41:54.914"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.927" endtime="20201112 12:41:54.939"></status>
</kw>
<msg timestamp="20201112 12:41:54.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.925" endtime="20201112 12:41:54.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.942" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.941" endtime="20201112 12:41:54.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.945" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:54.943" endtime="20201112 12:41:54.945"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:54.923" endtime="20201112 12:41:54.946"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:54.920" endtime="20201112 12:41:54.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.919" endtime="20201112 12:41:54.947"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:54.950" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:54.950" endtime="20201112 12:41:54.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.948" endtime="20201112 12:41:54.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.918" endtime="20201112 12:41:54.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.917" endtime="20201112 12:41:54.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.952" endtime="20201112 12:41:54.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.916" endtime="20201112 12:41:54.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.914" endtime="20201112 12:41:54.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.891" endtime="20201112 12:41:54.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.963" endtime="20201112 12:41:54.972"></status>
</kw>
<msg timestamp="20201112 12:41:54.972" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.962" endtime="20201112 12:41:54.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.974" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:54.973" endtime="20201112 12:41:54.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:54.975" endtime="20201112 12:41:54.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.958" endtime="20201112 12:41:54.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.956" endtime="20201112 12:41:54.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.983" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201112 12:41:54.982" endtime="20201112 12:41:54.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:54.985" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201112 12:41:54.984" endtime="20201112 12:41:54.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:54.979" endtime="20201112 12:41:54.986"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:54.887" endtime="20201112 12:41:54.987" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:53.015" endtime="20201112 12:41:54.990"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:41:55.044" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:41:55.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:41:56.217" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:41:55.043" endtime="20201112 12:41:56.217"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.220" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:41:56.218" endtime="20201112 12:41:56.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.041" endtime="20201112 12:41:56.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.222" endtime="20201112 12:41:56.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.221" endtime="20201112 12:41:56.502"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.514" endtime="20201112 12:41:56.527"></status>
</kw>
<msg timestamp="20201112 12:41:56.527" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.513" endtime="20201112 12:41:56.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.530" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.528" endtime="20201112 12:41:56.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.533" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:56.531" endtime="20201112 12:41:56.533"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.510" endtime="20201112 12:41:56.533"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.508" endtime="20201112 12:41:56.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.507" endtime="20201112 12:41:56.534"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:56.538" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:56.537" endtime="20201112 12:41:56.538"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.535" endtime="20201112 12:41:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.506" endtime="20201112 12:41:56.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.505" endtime="20201112 12:41:56.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.540" endtime="20201112 12:41:56.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.504" endtime="20201112 12:41:56.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.542" endtime="20201112 12:41:56.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.503" endtime="20201112 12:41:56.544"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:55.040" endtime="20201112 12:41:56.545"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:56.552" endtime="20201112 12:41:56.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.549" endtime="20201112 12:41:56.572"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.584" endtime="20201112 12:41:56.597"></status>
</kw>
<msg timestamp="20201112 12:41:56.597" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.583" endtime="20201112 12:41:56.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.600" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.598" endtime="20201112 12:41:56.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.603" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:41:56.601" endtime="20201112 12:41:56.603"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.580" endtime="20201112 12:41:56.604"></status>
</kw>
<status status="FAIL" starttime="20201112 12:41:56.578" endtime="20201112 12:41:56.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.577" endtime="20201112 12:41:56.605"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:41:56.608" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:41:56.608" endtime="20201112 12:41:56.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.605" endtime="20201112 12:41:56.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.576" endtime="20201112 12:41:56.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.575" endtime="20201112 12:41:56.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.610" endtime="20201112 12:41:56.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.574" endtime="20201112 12:41:56.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.572" endtime="20201112 12:41:56.612"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.548" endtime="20201112 12:41:56.612"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201112 12:41:56.615" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.623" endtime="20201112 12:41:56.633"></status>
</kw>
<msg timestamp="20201112 12:41:56.633" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.621" endtime="20201112 12:41:56.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.636" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:56.634" endtime="20201112 12:41:56.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.637" endtime="20201112 12:41:56.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.619" endtime="20201112 12:41:56.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.617" endtime="20201112 12:41:56.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.645" endtime="20201112 12:41:56.936"></status>
</kw>
<msg timestamp="20201112 12:41:56.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061706694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061707861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.644" endtime="20201112 12:41:56.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.061706694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061707861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:56.940" endtime="20201112 12:41:56.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:56.948" endtime="20201112 12:41:56.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.641" endtime="20201112 12:41:56.950"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.640" endtime="20201112 12:41:56.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.955" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:56.954" endtime="20201112 12:41:56.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.960" level="INFO">VALUE: [{'time': 0.061706694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061707861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1670000000033043e-06, 'source_diff': 1.1670000000033043e-06}, {'time': 0.061734403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6541999999997457e-05, 'source_diff': 2.6541999999997457e-05}, {'time': 0.061735472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.061754903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.943100000000031e-05, 'source_diff': 1.943100000000031e-05}, {'time': 0.061755944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.061775736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9791999999997645e-05, 'source_diff': 1.9791999999997645e-05}, {'time': 0.061776778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.061794028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7250000000003374e-05, 'source_diff': 1.7250000000003374e-05}, {'time': 0.061795097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.061810458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.536099999999846e-05, 'source_diff': 1.536099999999846e-05}, {'time': 0.061811514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.061840944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9430000000003897e-05, 'source_diff': 2.9430000000003897e-05}, {'time': 0.061841972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.061867653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.568099999999962e-05, 'source_diff': 2.568099999999962e-05}, {'time': 0.061868694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.061880347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.061881417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.061912069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065199999999907e-05, 'source_diff': 3.065199999999907e-05}, {'time': 0.061913153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.061936347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3194000000004156e-05, 'source_diff': 2.3194000000004156e-05}, {'time': 0.061937361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.061962069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4707999999998287e-05, 'source_diff': 2.4707999999998287e-05}, {'time': 0.061963139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.061992236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.061993292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062008667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5375000000004968e-05, 'source_diff': 1.5375000000004968e-05}, {'time': 0.062009764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.062028542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8777999999997075e-05, 'source_diff': 1.8777999999997075e-05}, {'time': 0.062029611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.062059333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9722000000002857e-05, 'source_diff': 2.9722000000002857e-05}, {'time': 0.062060375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.062088222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7846999999997513e-05, 'source_diff': 2.7846999999997513e-05}, {'time': 0.062089292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.062101889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2597000000003078e-05, 'source_diff': 1.2597000000003078e-05}, {'time': 0.062103, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.062118944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5944000000003844e-05, 'source_diff': 1.5944000000003844e-05}, {'time': 0.06212, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062149417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9416999999996862e-05, 'source_diff': 2.9416999999996862e-05}, {'time': 0.062150458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.062170847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.03890000000026e-05, 'source_diff': 2.03890000000026e-05}, {'time': 0.062171931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.062195403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3472000000003546e-05, 'source_diff': 2.3472000000003546e-05}, {'time': 0.062196458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.062208083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1624999999994279e-05, 'source_diff': 1.1624999999994279e-05}, {'time': 0.062209167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0840000000053585e-06, 'source_diff': 1.0840000000053585e-06}, {'time': 0.062233889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4721999999997857e-05, 'source_diff': 2.4721999999997857e-05}, {'time': 0.062234944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.062258125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318099999999712e-05, 'source_diff': 2.318099999999712e-05}, {'time': 0.062259181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062272694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513000000006659e-05, 'source_diff': 1.3513000000006659e-05}, {'time': 0.06227375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062285444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1693999999999594e-05, 'source_diff': 1.1693999999999594e-05}, {'time': 0.062286458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.062306222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9763999999998505e-05, 'source_diff': 1.9763999999998505e-05}, {'time': 0.062307278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062327958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0680000000002086e-05, 'source_diff': 2.0680000000002086e-05}, {'time': 0.062329014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062359986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097199999999717e-05, 'source_diff': 3.097199999999717e-05}, {'time': 0.062361042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062386708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5666000000000577e-05, 'source_diff': 2.5666000000000577e-05}, {'time': 0.062387778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.062401625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000004328e-05, 'source_diff': 1.3847000000004328e-05}, {'time': 0.062402667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.062431444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8777000000000663e-05, 'source_diff': 2.8777000000000663e-05}, {'time': 0.062432514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.062444472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.062445528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062474306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.062475375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.062501653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000004575e-05, 'source_diff': 2.6278000000004575e-05}, {'time': 0.062502736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.062532444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9708000000003287e-05, 'source_diff': 2.9708000000003287e-05}, {'time': 0.0625335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.06255075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999996435e-05, 'source_diff': 1.7249999999996435e-05}, {'time': 0.062551833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.062580292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8458999999994572e-05, 'source_diff': 2.8458999999994572e-05}, {'time': 0.062581347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.062596153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4806000000006092e-05, 'source_diff': 1.4806000000006092e-05}, {'time': 0.06259725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.096999999991577e-06, 'source_diff': 1.096999999991577e-06}, {'time': 0.0626235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6250000000005436e-05, 'source_diff': 2.6250000000005436e-05}, {'time': 0.062624528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.062643681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9153000000007858e-05, 'source_diff': 1.9153000000007858e-05}, {'time': 0.062644722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999932973e-06, 'source_diff': 1.0409999999932973e-06}, {'time': 0.062661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693099999999781e-05, 'source_diff': 1.693099999999781e-05}, {'time': 0.062662722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.069000000006315e-06, 'source_diff': 1.069000000006315e-06}, {'time': 0.062686833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4110999999993332e-05, 'source_diff': 2.4110999999993332e-05}, {'time': 0.062687903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0700000000057885e-06, 'source_diff': 1.0700000000057885e-06}, {'time': 0.062717917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0013999999994878e-05, 'source_diff': 3.0013999999994878e-05}, {'time': 0.062718986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.069000000006315e-06, 'source_diff': 1.069000000006315e-06}, {'time': 0.062747153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8166999999995612e-05, 'source_diff': 2.8166999999995612e-05}, {'time': 0.062748194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999932973e-06, 'source_diff': 1.0409999999932973e-06}, {'time': 0.062771389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.319500000000363e-05, 'source_diff': 2.319500000000363e-05}, {'time': 0.062772431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000066487e-06, 'source_diff': 1.0420000000066487e-06}, {'time': 0.06279125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881900000000325e-05, 'source_diff': 1.881900000000325e-05}, {'time': 0.062792306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.062812056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.062813125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0689999999924371e-06, 'source_diff': 1.0689999999924371e-06}, {'time': 0.062834111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.062835181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0700000000057885e-06, 'source_diff': 1.0700000000057885e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:56.956" endtime="20201112 12:41:56.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.951" endtime="20201112 12:41:56.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:56.986" level="INFO">${debug-compressed} = {'time': [0.061706694, 0.061707861, 0.061734403, 0.061735472, 0.061754903, 0.061755944, 0.061775736, 0.061776778, 0.061794028, 0.061795097, 0.061810458, 0.061811514, 0.061840944, 0.061841972, 0.061867...</msg>
<status status="PASS" starttime="20201112 12:41:56.963" endtime="20201112 12:41:56.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.989" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:56.988" endtime="20201112 12:41:56.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:56.993" level="INFO">VALUE: {'time': [0.061706694, 0.061707861, 0.061734403, 0.061735472, 0.061754903, 0.061755944, 0.061775736, 0.061776778, 0.061794028, 0.061795097, 0.061810458, 0.061811514, 0.061840944, 0.061841972, 0.061867653, 0.061868694, 0.061880347, 0.061881417, 0.061912069, 0.061913153, 0.061936347, 0.061937361, 0.061962069, 0.061963139, 0.061992236, 0.061993292, 0.062008667, 0.062009764, 0.062028542, 0.062029611, 0.062059333, 0.062060375, 0.062088222, 0.062089292, 0.062101889, 0.062103, 0.062118944, 0.06212, 0.062149417, 0.062150458, 0.062170847, 0.062171931, 0.062195403, 0.062196458, 0.062208083, 0.062209167, 0.062233889, 0.062234944, 0.062258125, 0.062259181, 0.062272694, 0.06227375, 0.062285444, 0.062286458, 0.062306222, 0.062307278, 0.062327958, 0.062329014, 0.062359986, 0.062361042, 0.062386708, 0.062387778, 0.062401625, 0.062402667, 0.062431444, 0.062432514, 0.062444472, 0.062445528, 0.062474306, 0.062475375, 0.062501653, 0.062502736, 0.062532444, 0.0625335, 0.06255075, 0.062551833, 0.062580292, 0.062581347, 0.062596153, 0.06259725, 0.0626235, 0.062624528, 0.062643681, 0.062644722, 0.062661653, 0.062662722, 0.062686833, 0.062687903, 0.062717917, 0.062718986, 0.062747153, 0.062748194, 0.062771389, 0.062772431, 0.06279125, 0.062792306, 0.062812056, 0.062813125, 0.062834111, 0.062835181], 'source_diff': [0, 1.1670000000033043e-06, 2.6541999999997457e-05, 1.068999999999376e-06, 1.943100000000031e-05, 1.0410000000002362e-06, 1.9791999999997645e-05, 1.0419999999997098e-06, 1.7250000000003374e-05, 1.068999999999376e-06, 1.536099999999846e-05, 1.0559999999992797e-06, 2.9430000000003897e-05, 1.02800000000014e-06, 2.568099999999962e-05, 1.0410000000002362e-06, 1.1653000000000358e-05, 1.0699999999988496e-06, 3.065199999999907e-05, 1.0839999999984196e-06, 2.3194000000004156e-05, 1.01400000000057e-06, 2.4707999999998287e-05, 1.0699999999988496e-06, 2.9096999999998763e-05, 1.0559999999992797e-06, 1.5375000000004968e-05, 1.0969999999985158e-06, 1.8777999999997075e-05, 1.068999999999376e-06, 2.9722000000002857e-05, 1.0419999999997098e-06, 2.7846999999997513e-05, 1.0699999999988496e-06, 1.2597000000003078e-05, 1.1109999999980857e-06, 1.5944000000003844e-05, 1.0559999999992797e-06, 2.9416999999996862e-05, 1.0410000000002362e-06, 2.03890000000026e-05, 1.0839999999984196e-06, 2.3472000000003546e-05, 1.054999999999806e-06, 1.1624999999994279e-05, 1.0840000000053585e-06, 2.4721999999997857e-05, 1.054999999999806e-06, 2.318099999999712e-05, 1.0559999999992797e-06, 1.3513000000006659e-05, 1.0559999999992797e-06, 1.1693999999999594e-05, 1.01400000000057e-06, 1.9763999999998505e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0559999999992797e-06, 3.097199999999717e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0699999999988496e-06, 1.3847000000004328e-05, 1.0419999999997098e-06, 2.8777000000000663e-05, 1.0699999999988496e-06, 1.1957999999999414e-05, 1.0559999999992797e-06, 2.8778000000000137e-05, 1.068999999999376e-06, 2.6278000000004575e-05, 1.082999999998946e-06, 2.9708000000003287e-05, 1.0559999999992797e-06, 1.7249999999996435e-05, 1.082999999998946e-06, 2.8458999999994572e-05, 1.054999999999806e-06, 1.4806000000006092e-05, 1.096999999991577e-06, 2.6250000000005436e-05, 1.02800000000014e-06, 1.9153000000007858e-05, 1.0409999999932973e-06, 1.693099999999781e-05, 1.069000000006315e-06, 2.4110999999993332e-05, 1.0700000000057885e-06, 3.0013999999994878e-05, 1.069000000006315e-06, 2.8166999999995612e-05, 1.0409999999932973e-06, 2.319500000000363e-05, 1.0420000000066487e-06, 1.881900000000325e-05, 1.0559999999992797e-06, 1.9749999999998935e-05, 1.0689999999924371e-06, 2.0986000000000615e-05, 1.0700000000057885e-06], 'diff': [0, 1.1670000000033043e-06, 2.6541999999997457e-05, 1.068999999999376e-06, 1.943100000000031e-05, 1.0410000000002362e-06, 1.9791999999997645e-05, 1.0419999999997098e-06, 1.7250000000003374e-05, 1.068999999999376e-06, 1.536099999999846e-05, 1.0559999999992797e-06, 2.9430000000003897e-05, 1.02800000000014e-06, 2.568099999999962e-05, 1.0410000000002362e-06, 1.1653000000000358e-05, 1.0699999999988496e-06, 3.065199999999907e-05, 1.0839999999984196e-06, 2.3194000000004156e-05, 1.01400000000057e-06, 2.4707999999998287e-05, 1.0699999999988496e-06, 2.9096999999998763e-05, 1.0559999999992797e-06, 1.5375000000004968e-05, 1.0969999999985158e-06, 1.8777999999997075e-05, 1.068999999999376e-06, 2.9722000000002857e-05, 1.0419999999997098e-06, 2.7846999999997513e-05, 1.0699999999988496e-06, 1.2597000000003078e-05, 1.1109999999980857e-06, 1.5944000000003844e-05, 1.0559999999992797e-06, 2.9416999999996862e-05, 1.0410000000002362e-06, 2.03890000000026e-05, 1.0839999999984196e-06, 2.3472000000003546e-05, 1.054999999999806e-06, 1.1624999999994279e-05, 1.0840000000053585e-06, 2.4721999999997857e-05, 1.054999999999806e-06, 2.318099999999712e-05, 1.0559999999992797e-06, 1.3513000000006659e-05, 1.0559999999992797e-06, 1.1693999999999594e-05, 1.01400000000057e-06, 1.9763999999998505e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0559999999992797e-06, 3.097199999999717e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0699999999988496e-06, 1.3847000000004328e-05, 1.0419999999997098e-06, 2.8777000000000663e-05, 1.0699999999988496e-06, 1.1957999999999414e-05, 1.0559999999992797e-06, 2.8778000000000137e-05, 1.068999999999376e-06, 2.6278000000004575e-05, 1.082999999998946e-06, 2.9708000000003287e-05, 1.0559999999992797e-06, 1.7249999999996435e-05, 1.082999999998946e-06, 2.8458999999994572e-05, 1.054999999999806e-06, 1.4806000000006092e-05, 1.096999999991577e-06, 2.6250000000005436e-05, 1.02800000000014e-06, 1.9153000000007858e-05, 1.0409999999932973e-06, 1.693099999999781e-05, 1.069000000006315e-06, 2.4110999999993332e-05, 1.0700000000057885e-06, 3.0013999999994878e-05, 1.069000000006315e-06, 2.8166999999995612e-05, 1.0409999999932973e-06, 2.319500000000363e-05, 1.0420000000066487e-06, 1.881900000000325e-05, 1.0559999999992797e-06, 1.9749999999998935e-05, 1.0689999999924371e-06, 2.0986000000000615e-05, 1.0700000000057885e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:56.990" endtime="20201112 12:41:56.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.987" endtime="20201112 12:41:56.995"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:56.999" level="INFO">${RESULT} = [{'time': 0.061707861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1670000000033043e-06, 'source_diff': 1.1670000000033043e-06}, {'time': 0.061735472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:56.996" endtime="20201112 12:41:56.999"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.013" level="INFO">${GPIO_OVERHEAD} = {'time': [0.061707861, 0.061735472, 0.061755944, 0.061776778, 0.061795097, 0.061811514, 0.061841972, 0.061868694, 0.061881417, 0.061913153, 0.061937361, 0.061963139, 0.061993292, 0.062009764, 0.062029...</msg>
<status status="PASS" starttime="20201112 12:41:57.000" endtime="20201112 12:41:57.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.017" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:57.016" endtime="20201112 12:41:57.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.020" level="INFO">VALUE: [1.1670000000033043e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.01400000000057e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0840000000053585e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.096999999991577e-06, 1.02800000000014e-06, 1.0409999999932973e-06, 1.069000000006315e-06, 1.0700000000057885e-06, 1.069000000006315e-06, 1.0409999999932973e-06, 1.0420000000066487e-06, 1.0559999999992797e-06, 1.0689999999924371e-06, 1.0700000000057885e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.018" endtime="20201112 12:41:57.020"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.014" endtime="20201112 12:41:57.020"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.023" endtime="20201112 12:41:57.024"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.026" endtime="20201112 12:41:57.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.024" endtime="20201112 12:41:57.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.021" endtime="20201112 12:41:57.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.616" endtime="20201112 12:41:57.047"></status>
</kw>
<msg timestamp="20201112 12:41:57.047" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.054" endtime="20201112 12:41:57.064"></status>
</kw>
<msg timestamp="20201112 12:41:57.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.053" endtime="20201112 12:41:57.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.066" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.065" endtime="20201112 12:41:57.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.067" endtime="20201112 12:41:57.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.050" endtime="20201112 12:41:57.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.049" endtime="20201112 12:41:57.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.076" endtime="20201112 12:41:57.361"></status>
</kw>
<msg timestamp="20201112 12:41:57.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018370125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.075" endtime="20201112 12:41:57.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018370125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.365" endtime="20201112 12:41:57.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.374" endtime="20201112 12:41:57.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.072" endtime="20201112 12:41:57.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.071" endtime="20201112 12:41:57.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.380" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:57.379" endtime="20201112 12:41:57.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.385" level="INFO">VALUE: [{'time': 0.018370125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018371306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018396903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5596999999998732e-05, 'source_diff': 2.5596999999998732e-05}, {'time': 0.018397958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018426444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8486000000001177e-05, 'source_diff': 2.8486000000001177e-05}, {'time': 0.018427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.0184395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.018440528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018467444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6915999999998358e-05, 'source_diff': 2.6915999999998358e-05}, {'time': 0.018468514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018483889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.53750000000015e-05, 'source_diff': 1.53750000000015e-05}, {'time': 0.018484944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018496639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1694999999999067e-05, 'source_diff': 1.1694999999999067e-05}, {'time': 0.018497653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018517417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9764000000001974e-05, 'source_diff': 1.9764000000001974e-05}, {'time': 0.018518528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018531361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2833000000000289e-05, 'source_diff': 1.2833000000000289e-05}, {'time': 0.018532417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018550319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7902000000000196e-05, 'source_diff': 1.7902000000000196e-05}, {'time': 0.018551361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018581722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0360999999999583e-05, 'source_diff': 3.0360999999999583e-05}, {'time': 0.018582764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.018597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.018598597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018621208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.261099999999877e-05, 'source_diff': 2.261099999999877e-05}, {'time': 0.018622208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018648208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5999999999998247e-05, 'source_diff': 2.5999999999998247e-05}, {'time': 0.01864925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018678069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8818999999999373e-05, 'source_diff': 2.8818999999999373e-05}, {'time': 0.018679125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018706014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6888999999998692e-05, 'source_diff': 2.6888999999998692e-05}, {'time': 0.018707097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018722153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5055999999999403e-05, 'source_diff': 1.5055999999999403e-05}, {'time': 0.018723236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018748917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.568099999999962e-05, 'source_diff': 2.568099999999962e-05}, {'time': 0.018749944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.018768139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.018769222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018784917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5695000000003068e-05, 'source_diff': 1.5695000000003068e-05}, {'time': 0.018785958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999967667e-06, 'source_diff': 1.0409999999967667e-06}, {'time': 0.018808514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2555999999999965e-05, 'source_diff': 2.2555999999999965e-05}, {'time': 0.018809583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018836208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6624999999998872e-05, 'source_diff': 2.6624999999998872e-05}, {'time': 0.018837306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018850208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2901999999998665e-05, 'source_diff': 1.2901999999998665e-05}, {'time': 0.018851208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018879375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.816699999999908e-05, 'source_diff': 2.816699999999908e-05}, {'time': 0.018880431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018892389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.018893472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018924417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.09449999999975e-05, 'source_diff': 3.09449999999975e-05}, {'time': 0.018925486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018951458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5972000000002576e-05, 'source_diff': 2.5972000000002576e-05}, {'time': 0.018952542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.0189645, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.018965556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018978764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3207999999997194e-05, 'source_diff': 1.3207999999997194e-05}, {'time': 0.018979806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019010472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.066600000000211e-05, 'source_diff': 3.066600000000211e-05}, {'time': 0.019011542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019024111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2569000000000469e-05, 'source_diff': 1.2569000000000469e-05}, {'time': 0.019025167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019042431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.019043486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019071347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.019072403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019094653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2249999999997966e-05, 'source_diff': 2.2249999999997966e-05}, {'time': 0.019095708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019106986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.019108042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019134903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.686100000000302e-05, 'source_diff': 2.686100000000302e-05}, {'time': 0.019135958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019149792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833999999997293e-05, 'source_diff': 1.3833999999997293e-05}, {'time': 0.019150861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019175889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.019176958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019207667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.070900000000029e-05, 'source_diff': 3.070900000000029e-05}, {'time': 0.019208694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0269999999971968e-06, 'source_diff': 1.0269999999971968e-06}, {'time': 0.019238389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.969500000000319e-05, 'source_diff': 2.969500000000319e-05}, {'time': 0.019239472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019263583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019264625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.01928375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.019284806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2915999999998234e-05, 'source_diff': 1.2915999999998234e-05}, {'time': 0.019298764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.0193235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4736000000000896e-05, 'source_diff': 2.4736000000000896e-05}, {'time': 0.019324569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019348375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3806000000001215e-05, 'source_diff': 2.3806000000001215e-05}, {'time': 0.019349431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019375403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5971999999999107e-05, 'source_diff': 2.5971999999999107e-05}, {'time': 0.0193765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019389667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3166999999997958e-05, 'source_diff': 1.3166999999997958e-05}, {'time': 0.01939075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019420444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9694000000000248e-05, 'source_diff': 2.9694000000000248e-05}, {'time': 0.019421514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019435028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.019436097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.019466597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:57.381" endtime="20201112 12:41:57.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.377" endtime="20201112 12:41:57.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:57.411" level="INFO">${debug-compressed} = {'time': [0.018370125, 0.018371306, 0.018396903, 0.018397958, 0.018426444, 0.018427486, 0.0184395, 0.018440528, 0.018467444, 0.018468514, 0.018483889, 0.018484944, 0.018496639, 0.018497653, 0.01851741...</msg>
<status status="PASS" starttime="20201112 12:41:57.388" endtime="20201112 12:41:57.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.415" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:57.414" endtime="20201112 12:41:57.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.419" level="INFO">VALUE: {'time': [0.018370125, 0.018371306, 0.018396903, 0.018397958, 0.018426444, 0.018427486, 0.0184395, 0.018440528, 0.018467444, 0.018468514, 0.018483889, 0.018484944, 0.018496639, 0.018497653, 0.018517417, 0.018518528, 0.018531361, 0.018532417, 0.018550319, 0.018551361, 0.018581722, 0.018582764, 0.018597542, 0.018598597, 0.018621208, 0.018622208, 0.018648208, 0.01864925, 0.018678069, 0.018679125, 0.018706014, 0.018707097, 0.018722153, 0.018723236, 0.018748917, 0.018749944, 0.018768139, 0.018769222, 0.018784917, 0.018785958, 0.018808514, 0.018809583, 0.018836208, 0.018837306, 0.018850208, 0.018851208, 0.018879375, 0.018880431, 0.018892389, 0.018893472, 0.018924417, 0.018925486, 0.018951458, 0.018952542, 0.0189645, 0.018965556, 0.018978764, 0.018979806, 0.019010472, 0.019011542, 0.019024111, 0.019025167, 0.019042431, 0.019043486, 0.019071347, 0.019072403, 0.019094653, 0.019095708, 0.019106986, 0.019108042, 0.019134903, 0.019135958, 0.019149792, 0.019150861, 0.019175889, 0.019176958, 0.019207667, 0.019208694, 0.019238389, 0.019239472, 0.019263583, 0.019264625, 0.01928375, 0.019284806, 0.019297722, 0.019298764, 0.0193235, 0.019324569, 0.019348375, 0.019349431, 0.019375403, 0.0193765, 0.019389667, 0.01939075, 0.019420444, 0.019421514, 0.019435028, 0.019436097, 0.019465514, 0.019466597], 'source_diff': [0, 1.1809999999994047e-06, 2.5596999999998732e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0419999999997098e-06, 1.2014000000001163e-05, 1.02800000000014e-06, 2.6915999999998358e-05, 1.0699999999988496e-06, 1.53750000000015e-05, 1.054999999999806e-06, 1.1694999999999067e-05, 1.01400000000057e-06, 1.9764000000001974e-05, 1.1109999999980857e-06, 1.2833000000000289e-05, 1.0559999999992797e-06, 1.7902000000000196e-05, 1.0419999999997098e-06, 3.0360999999999583e-05, 1.0420000000031793e-06, 1.4778000000000013e-05, 1.054999999999806e-06, 2.261099999999877e-05, 1.000000000001e-06, 2.5999999999998247e-05, 1.0419999999997098e-06, 2.8818999999999373e-05, 1.0560000000027492e-06, 2.6888999999998692e-05, 1.082999999998946e-06, 1.5055999999999403e-05, 1.0830000000024154e-06, 2.568099999999962e-05, 1.0270000000006663e-06, 1.819499999999863e-05, 1.082999999998946e-06, 1.5695000000003068e-05, 1.0409999999967667e-06, 2.2555999999999965e-05, 1.0690000000028455e-06, 2.6624999999998872e-05, 1.098000000001459e-06, 1.2901999999998665e-05, 1.000000000001e-06, 2.816699999999908e-05, 1.0559999999992797e-06, 1.1957999999999414e-05, 1.0830000000024154e-06, 3.09449999999975e-05, 1.068999999999376e-06, 2.5972000000002576e-05, 1.0839999999984196e-06, 1.1957999999999414e-05, 1.0560000000027492e-06, 1.3207999999997194e-05, 1.0419999999997098e-06, 3.066600000000211e-05, 1.0699999999988496e-06, 1.2569000000000469e-05, 1.0559999999992797e-06, 1.7263999999999474e-05, 1.054999999999806e-06, 2.7861000000000552e-05, 1.0560000000027492e-06, 2.2249999999997966e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.0559999999992797e-06, 2.686100000000302e-05, 1.054999999999806e-06, 1.3833999999997293e-05, 1.0690000000028455e-06, 2.5027999999999856e-05, 1.068999999999376e-06, 3.070900000000029e-05, 1.0269999999971968e-06, 2.969500000000319e-05, 1.082999999998946e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.0560000000027492e-06, 1.2915999999998234e-05, 1.0419999999997098e-06, 2.4736000000000896e-05, 1.068999999999376e-06, 2.3806000000001215e-05, 1.0559999999992797e-06, 2.5971999999999107e-05, 1.0970000000019853e-06, 1.3166999999997958e-05, 1.082999999998946e-06, 2.9694000000000248e-05, 1.070000000002319e-06, 1.3513999999999193e-05, 1.068999999999376e-06, 2.9417000000000332e-05, 1.082999999998946e-06], 'diff': [0, 1.1809999999994047e-06, 2.5596999999998732e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0419999999997098e-06, 1.2014000000001163e-05, 1.02800000000014e-06, 2.6915999999998358e-05, 1.0699999999988496e-06, 1.53750000000015e-05, 1.054999999999806e-06, 1.1694999999999067e-05, 1.01400000000057e-06, 1.9764000000001974e-05, 1.1109999999980857e-06, 1.2833000000000289e-05, 1.0559999999992797e-06, 1.7902000000000196e-05, 1.0419999999997098e-06, 3.0360999999999583e-05, 1.0420000000031793e-06, 1.4778000000000013e-05, 1.054999999999806e-06, 2.261099999999877e-05, 1.000000000001e-06, 2.5999999999998247e-05, 1.0419999999997098e-06, 2.8818999999999373e-05, 1.0560000000027492e-06, 2.6888999999998692e-05, 1.082999999998946e-06, 1.5055999999999403e-05, 1.0830000000024154e-06, 2.568099999999962e-05, 1.0270000000006663e-06, 1.819499999999863e-05, 1.082999999998946e-06, 1.5695000000003068e-05, 1.0409999999967667e-06, 2.2555999999999965e-05, 1.0690000000028455e-06, 2.6624999999998872e-05, 1.098000000001459e-06, 1.2901999999998665e-05, 1.000000000001e-06, 2.816699999999908e-05, 1.0559999999992797e-06, 1.1957999999999414e-05, 1.0830000000024154e-06, 3.09449999999975e-05, 1.068999999999376e-06, 2.5972000000002576e-05, 1.0839999999984196e-06, 1.1957999999999414e-05, 1.0560000000027492e-06, 1.3207999999997194e-05, 1.0419999999997098e-06, 3.066600000000211e-05, 1.0699999999988496e-06, 1.2569000000000469e-05, 1.0559999999992797e-06, 1.7263999999999474e-05, 1.054999999999806e-06, 2.7861000000000552e-05, 1.0560000000027492e-06, 2.2249999999997966e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.0559999999992797e-06, 2.686100000000302e-05, 1.054999999999806e-06, 1.3833999999997293e-05, 1.0690000000028455e-06, 2.5027999999999856e-05, 1.068999999999376e-06, 3.070900000000029e-05, 1.0269999999971968e-06, 2.969500000000319e-05, 1.082999999998946e-06, 2.411100000000027e-05, 1.0419999999997098e-06, 1.912499999999831e-05, 1.0560000000027492e-06, 1.2915999999998234e-05, 1.0419999999997098e-06, 2.4736000000000896e-05, 1.068999999999376e-06, 2.3806000000001215e-05, 1.0559999999992797e-06, 2.5971999999999107e-05, 1.0970000000019853e-06, 1.3166999999997958e-05, 1.082999999998946e-06, 2.9694000000000248e-05, 1.070000000002319e-06, 1.3513999999999193e-05, 1.068999999999376e-06, 2.9417000000000332e-05, 1.082999999998946e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:57.416" endtime="20201112 12:41:57.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.412" endtime="20201112 12:41:57.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.424" level="INFO">${RESULT} = [{'time': 0.018371306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018397958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:57.421" endtime="20201112 12:41:57.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.437" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018371306, 0.018397958, 0.018427486, 0.018440528, 0.018468514, 0.018484944, 0.018497653, 0.018518528, 0.018532417, 0.018551361, 0.018582764, 0.018598597, 0.018622208, 0.01864925, 0.0186791...</msg>
<status status="PASS" starttime="20201112 12:41:57.425" endtime="20201112 12:41:57.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.442" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:57.441" endtime="20201112 12:41:57.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.444" level="INFO">VALUE: [1.1809999999994047e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0270000000006663e-06, 1.082999999998946e-06, 1.0409999999967667e-06, 1.0690000000028455e-06, 1.098000000001459e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0269999999971968e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.068999999999376e-06, 1.082999999998946e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.443" endtime="20201112 12:41:57.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.438" endtime="20201112 12:41:57.445"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.447" endtime="20201112 12:41:57.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.450" endtime="20201112 12:41:57.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.449" endtime="20201112 12:41:57.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.445" endtime="20201112 12:41:57.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.048" endtime="20201112 12:41:57.471"></status>
</kw>
<msg timestamp="20201112 12:41:57.471" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.479" endtime="20201112 12:41:57.488"></status>
</kw>
<msg timestamp="20201112 12:41:57.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.477" endtime="20201112 12:41:57.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.489" endtime="20201112 12:41:57.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.492" endtime="20201112 12:41:57.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.475" endtime="20201112 12:41:57.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.473" endtime="20201112 12:41:57.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.501" endtime="20201112 12:41:57.785"></status>
</kw>
<msg timestamp="20201112 12:41:57.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018212111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.500" endtime="20201112 12:41:57.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018212111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018213292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.789" endtime="20201112 12:41:57.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.798" endtime="20201112 12:41:57.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.497" endtime="20201112 12:41:57.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.496" endtime="20201112 12:41:57.801"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.804" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:57.803" endtime="20201112 12:41:57.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.809" level="INFO">VALUE: [{'time': 0.018212111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018213292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018237917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.462500000000034e-05, 'source_diff': 2.462500000000034e-05}, {'time': 0.018238958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018258708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.018259778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018280778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.018281833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018305014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318100000000059e-05, 'source_diff': 2.318100000000059e-05}, {'time': 0.018306111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018332986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6874999999999122e-05, 'source_diff': 2.6874999999999122e-05}, {'time': 0.018334042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018350986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.018352069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018378653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6583999999999636e-05, 'source_diff': 2.6583999999999636e-05}, {'time': 0.018379722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018390986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.018392097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018422653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.055600000000103e-05, 'source_diff': 3.055600000000103e-05}, {'time': 0.018423708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018438792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5083999999998543e-05, 'source_diff': 1.5083999999998543e-05}, {'time': 0.018439847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018459583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9736000000002835e-05, 'source_diff': 1.9736000000002835e-05}, {'time': 0.018460681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0979999999979895e-06, 'source_diff': 1.0979999999979895e-06}, {'time': 0.018489139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8458000000002037e-05, 'source_diff': 2.8458000000002037e-05}, {'time': 0.018490181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018510569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0387999999999656e-05, 'source_diff': 2.0387999999999656e-05}, {'time': 0.018511611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018527319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5707999999999694e-05, 'source_diff': 1.5707999999999694e-05}, {'time': 0.018528389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018554972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6583000000000162e-05, 'source_diff': 2.6583000000000162e-05}, {'time': 0.018556042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018571444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5402000000001165e-05, 'source_diff': 1.5402000000001165e-05}, {'time': 0.018572528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018597222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4693999999998717e-05, 'source_diff': 2.4693999999998717e-05}, {'time': 0.018598333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018611792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3458999999996918e-05, 'source_diff': 1.3458999999996918e-05}, {'time': 0.018612917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018637903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4986000000001146e-05, 'source_diff': 2.4986000000001146e-05}, {'time': 0.018638986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018664639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.018665694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018689819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.018690903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018712167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1264000000000005e-05, 'source_diff': 2.1264000000000005e-05}, {'time': 0.018713264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018738917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.01874, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018767819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7819000000001842e-05, 'source_diff': 2.7819000000001842e-05}, {'time': 0.018768875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018798597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9721999999999388e-05, 'source_diff': 2.9721999999999388e-05}, {'time': 0.018799653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018821639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1986000000001615e-05, 'source_diff': 2.1986000000001615e-05}, {'time': 0.018822667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018852056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9388999999997723e-05, 'source_diff': 2.9388999999997723e-05}, {'time': 0.018853111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018871639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8528000000000294e-05, 'source_diff': 1.8528000000000294e-05}, {'time': 0.01887275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018895861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.311099999999927e-05, 'source_diff': 2.311099999999927e-05}, {'time': 0.018896917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018915111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.018916167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018945292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9124999999997903e-05, 'source_diff': 2.9124999999997903e-05}, {'time': 0.018946333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018968889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2555999999999965e-05, 'source_diff': 2.2555999999999965e-05}, {'time': 0.018969986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018982236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2249999999998373e-05, 'source_diff': 1.2249999999998373e-05}, {'time': 0.018983319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018994931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1612000000001121e-05, 'source_diff': 1.1612000000001121e-05}, {'time': 0.018996, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019012931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.019014014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019036861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.019037944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019068597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.019069639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019095931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.019097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019117069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.006900000000103e-05, 'source_diff': 2.006900000000103e-05}, {'time': 0.019118125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019140986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.019142056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019165556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3499999999999216e-05, 'source_diff': 2.3499999999999216e-05}, {'time': 0.019166597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019186986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.038899999999913e-05, 'source_diff': 2.038899999999913e-05}, {'time': 0.019188097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019216861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8763999999997097e-05, 'source_diff': 2.8763999999997097e-05}, {'time': 0.019217889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019238875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019239944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019255333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.019256389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019273333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.019274403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019287292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2889000000002038e-05, 'source_diff': 1.2889000000002038e-05}, {'time': 0.019288361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019318694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.01931975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.0193395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.019340569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:57.805" endtime="20201112 12:41:57.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.801" endtime="20201112 12:41:57.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:57.835" level="INFO">${debug-compressed} = {'time': [0.018212111, 0.018213292, 0.018237917, 0.018238958, 0.018258708, 0.018259778, 0.018280778, 0.018281833, 0.018305014, 0.018306111, 0.018332986, 0.018334042, 0.018350986, 0.018352069, 0.018378...</msg>
<status status="PASS" starttime="20201112 12:41:57.812" endtime="20201112 12:41:57.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.839" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:57.838" endtime="20201112 12:41:57.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.843" level="INFO">VALUE: {'time': [0.018212111, 0.018213292, 0.018237917, 0.018238958, 0.018258708, 0.018259778, 0.018280778, 0.018281833, 0.018305014, 0.018306111, 0.018332986, 0.018334042, 0.018350986, 0.018352069, 0.018378653, 0.018379722, 0.018390986, 0.018392097, 0.018422653, 0.018423708, 0.018438792, 0.018439847, 0.018459583, 0.018460681, 0.018489139, 0.018490181, 0.018510569, 0.018511611, 0.018527319, 0.018528389, 0.018554972, 0.018556042, 0.018571444, 0.018572528, 0.018597222, 0.018598333, 0.018611792, 0.018612917, 0.018637903, 0.018638986, 0.018664639, 0.018665694, 0.018689819, 0.018690903, 0.018712167, 0.018713264, 0.018738917, 0.01874, 0.018767819, 0.018768875, 0.018798597, 0.018799653, 0.018821639, 0.018822667, 0.018852056, 0.018853111, 0.018871639, 0.01887275, 0.018895861, 0.018896917, 0.018915111, 0.018916167, 0.018945292, 0.018946333, 0.018968889, 0.018969986, 0.018982236, 0.018983319, 0.018994931, 0.018996, 0.019012931, 0.019014014, 0.019036861, 0.019037944, 0.019068597, 0.019069639, 0.019095931, 0.019097, 0.019117069, 0.019118125, 0.019140986, 0.019142056, 0.019165556, 0.019166597, 0.019186986, 0.019188097, 0.019216861, 0.019217889, 0.019238875, 0.019239944, 0.019255333, 0.019256389, 0.019273333, 0.019274403, 0.019287292, 0.019288361, 0.019318694, 0.01931975, 0.0193395, 0.019340569], 'source_diff': [0, 1.1809999999994047e-06, 2.462500000000034e-05, 1.0410000000002362e-06, 1.9749999999998935e-05, 1.070000000002319e-06, 2.1000000000000185e-05, 1.054999999999806e-06, 2.318100000000059e-05, 1.0969999999985158e-06, 2.6874999999999122e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.082999999998946e-06, 2.6583999999999636e-05, 1.0690000000028455e-06, 1.1264000000000413e-05, 1.1109999999980857e-06, 3.055600000000103e-05, 1.054999999999806e-06, 1.5083999999998543e-05, 1.054999999999806e-06, 1.9736000000002835e-05, 1.0979999999979895e-06, 2.8458000000002037e-05, 1.0419999999997098e-06, 2.0387999999999656e-05, 1.0419999999997098e-06, 1.5707999999999694e-05, 1.0699999999988496e-06, 2.6583000000000162e-05, 1.0699999999988496e-06, 1.5402000000001165e-05, 1.084000000001889e-06, 2.4693999999998717e-05, 1.1110000000015552e-06, 1.3458999999996918e-05, 1.125000000001125e-06, 2.4986000000001146e-05, 1.082999999998946e-06, 2.565300000000048e-05, 1.054999999999806e-06, 2.412499999999984e-05, 1.0839999999984196e-06, 2.1264000000000005e-05, 1.0970000000019853e-06, 2.565300000000048e-05, 1.082999999998946e-06, 2.7819000000001842e-05, 1.0559999999992797e-06, 2.9721999999999388e-05, 1.0559999999992797e-06, 2.1986000000001615e-05, 1.02800000000014e-06, 2.9388999999997723e-05, 1.054999999999806e-06, 1.8528000000000294e-05, 1.1110000000015552e-06, 2.311099999999927e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0560000000027492e-06, 2.9124999999997903e-05, 1.0410000000002362e-06, 2.2555999999999965e-05, 1.0970000000019853e-06, 1.2249999999998373e-05, 1.082999999998946e-06, 1.1612000000001121e-05, 1.068999999999376e-06, 1.693100000000128e-05, 1.082999999998946e-06, 2.284699999999945e-05, 1.0830000000024154e-06, 3.065299999999854e-05, 1.0419999999997098e-06, 2.6292000000000676e-05, 1.068999999999376e-06, 2.006900000000103e-05, 1.0559999999992797e-06, 2.286099999999902e-05, 1.070000000002319e-06, 2.3499999999999216e-05, 1.0410000000002362e-06, 2.038899999999913e-05, 1.1110000000015552e-06, 2.8763999999997097e-05, 1.02800000000014e-06, 2.0986000000000615e-05, 1.068999999999376e-06, 1.538900000000107e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.0699999999988496e-06, 1.2889000000002038e-05, 1.068999999999376e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 1.9749999999998935e-05, 1.068999999999376e-06], 'diff': [0, 1.1809999999994047e-06, 2.462500000000034e-05, 1.0410000000002362e-06, 1.9749999999998935e-05, 1.070000000002319e-06, 2.1000000000000185e-05, 1.054999999999806e-06, 2.318100000000059e-05, 1.0969999999985158e-06, 2.6874999999999122e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.082999999998946e-06, 2.6583999999999636e-05, 1.0690000000028455e-06, 1.1264000000000413e-05, 1.1109999999980857e-06, 3.055600000000103e-05, 1.054999999999806e-06, 1.5083999999998543e-05, 1.054999999999806e-06, 1.9736000000002835e-05, 1.0979999999979895e-06, 2.8458000000002037e-05, 1.0419999999997098e-06, 2.0387999999999656e-05, 1.0419999999997098e-06, 1.5707999999999694e-05, 1.0699999999988496e-06, 2.6583000000000162e-05, 1.0699999999988496e-06, 1.5402000000001165e-05, 1.084000000001889e-06, 2.4693999999998717e-05, 1.1110000000015552e-06, 1.3458999999996918e-05, 1.125000000001125e-06, 2.4986000000001146e-05, 1.082999999998946e-06, 2.565300000000048e-05, 1.054999999999806e-06, 2.412499999999984e-05, 1.0839999999984196e-06, 2.1264000000000005e-05, 1.0970000000019853e-06, 2.565300000000048e-05, 1.082999999998946e-06, 2.7819000000001842e-05, 1.0559999999992797e-06, 2.9721999999999388e-05, 1.0559999999992797e-06, 2.1986000000001615e-05, 1.02800000000014e-06, 2.9388999999997723e-05, 1.054999999999806e-06, 1.8528000000000294e-05, 1.1110000000015552e-06, 2.311099999999927e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0560000000027492e-06, 2.9124999999997903e-05, 1.0410000000002362e-06, 2.2555999999999965e-05, 1.0970000000019853e-06, 1.2249999999998373e-05, 1.082999999998946e-06, 1.1612000000001121e-05, 1.068999999999376e-06, 1.693100000000128e-05, 1.082999999998946e-06, 2.284699999999945e-05, 1.0830000000024154e-06, 3.065299999999854e-05, 1.0419999999997098e-06, 2.6292000000000676e-05, 1.068999999999376e-06, 2.006900000000103e-05, 1.0559999999992797e-06, 2.286099999999902e-05, 1.070000000002319e-06, 2.3499999999999216e-05, 1.0410000000002362e-06, 2.038899999999913e-05, 1.1110000000015552e-06, 2.8763999999997097e-05, 1.02800000000014e-06, 2.0986000000000615e-05, 1.068999999999376e-06, 1.538900000000107e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.0699999999988496e-06, 1.2889000000002038e-05, 1.068999999999376e-06, 3.0333000000000443e-05, 1.0559999999992797e-06, 1.9749999999998935e-05, 1.068999999999376e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:57.840" endtime="20201112 12:41:57.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.836" endtime="20201112 12:41:57.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:57.848" level="INFO">${RESULT} = [{'time': 0.018213292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018238958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:57.845" endtime="20201112 12:41:57.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:57.862" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018213292, 0.018238958, 0.018259778, 0.018281833, 0.018306111, 0.018334042, 0.018352069, 0.018379722, 0.018392097, 0.018423708, 0.018439847, 0.018460681, 0.018490181, 0.018511611, 0.018528...</msg>
<status status="PASS" starttime="20201112 12:41:57.849" endtime="20201112 12:41:57.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.866" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:57.865" endtime="20201112 12:41:57.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.868" level="INFO">VALUE: [1.1809999999994047e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0690000000028455e-06, 1.1109999999980857e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0979999999979895e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.084000000001889e-06, 1.1110000000015552e-06, 1.125000000001125e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.1110000000015552e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0410000000002362e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:41:57.867" endtime="20201112 12:41:57.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.863" endtime="20201112 12:41:57.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.871" endtime="20201112 12:41:57.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:57.875" endtime="20201112 12:41:57.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.873" endtime="20201112 12:41:57.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.870" endtime="20201112 12:41:57.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.472" endtime="20201112 12:41:57.895"></status>
</kw>
<msg timestamp="20201112 12:41:57.896" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.903" endtime="20201112 12:41:57.912"></status>
</kw>
<msg timestamp="20201112 12:41:57.913" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.902" endtime="20201112 12:41:57.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:57.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:57.914" endtime="20201112 12:41:57.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.916" endtime="20201112 12:41:57.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.899" endtime="20201112 12:41:57.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.897" endtime="20201112 12:41:57.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:57.925" endtime="20201112 12:41:58.210"></status>
</kw>
<msg timestamp="20201112 12:41:58.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018284375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:57.923" endtime="20201112 12:41:58.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018284375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.214" endtime="20201112 12:41:58.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.223" endtime="20201112 12:41:58.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.921" endtime="20201112 12:41:58.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.919" endtime="20201112 12:41:58.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.229" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:58.228" endtime="20201112 12:41:58.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.234" level="INFO">VALUE: [{'time': 0.018284375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018285583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2080000000025404e-06, 'source_diff': 1.2080000000025404e-06}, {'time': 0.018306819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1235999999997396e-05, 'source_diff': 2.1235999999997396e-05}, {'time': 0.018307875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018323569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.018324639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018354972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333000000000443e-05, 'source_diff': 3.0333000000000443e-05}, {'time': 0.018356042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018372986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.018374042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018401264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.018402347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018431736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.018432819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.097300000000052e-05, 'source_diff': 2.097300000000052e-05}, {'time': 0.018454861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018485514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065300000000201e-05, 'source_diff': 3.065300000000201e-05}, {'time': 0.018486569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018502292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5722999999998738e-05, 'source_diff': 1.5722999999998738e-05}, {'time': 0.018503333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018524958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.018526028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018539569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.354099999999886e-05, 'source_diff': 1.354099999999886e-05}, {'time': 0.018540611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018571556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.094500000000097e-05, 'source_diff': 3.094500000000097e-05}, {'time': 0.018572625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018595806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318100000000059e-05, 'source_diff': 2.318100000000059e-05}, {'time': 0.018596861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018610681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.01861175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018636472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4722000000001326e-05, 'source_diff': 2.4722000000001326e-05}, {'time': 0.018637569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018651681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4112000000000152e-05, 'source_diff': 1.4112000000000152e-05}, {'time': 0.018652778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018679042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6264000000001536e-05, 'source_diff': 2.6264000000001536e-05}, {'time': 0.018680097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018710819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.072200000000039e-05, 'source_diff': 3.072200000000039e-05}, {'time': 0.018711819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018735625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3805999999997746e-05, 'source_diff': 2.3805999999997746e-05}, {'time': 0.01873675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018751458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4707999999998694e-05, 'source_diff': 1.4707999999998694e-05}, {'time': 0.0187525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018781917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.018782972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018807431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.445900000000098e-05, 'source_diff': 2.445900000000098e-05}, {'time': 0.018808444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.018837542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9097999999998236e-05, 'source_diff': 2.9097999999998236e-05}, {'time': 0.018838625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018864931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6306000000000246e-05, 'source_diff': 2.6306000000000246e-05}, {'time': 0.018865958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0269999999971968e-06, 'source_diff': 1.0269999999971968e-06}, {'time': 0.018886333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037500000000303e-05, 'source_diff': 2.037500000000303e-05}, {'time': 0.018887444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018900611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3167000000001428e-05, 'source_diff': 1.3167000000001428e-05}, {'time': 0.018901667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018913694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2027000000001259e-05, 'source_diff': 1.2027000000001259e-05}, {'time': 0.018914681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.869999999974344e-07, 'source_diff': 9.869999999974344e-07}, {'time': 0.018934125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9444000000000405e-05, 'source_diff': 1.9444000000000405e-05}, {'time': 0.018935181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018953083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7902000000000196e-05, 'source_diff': 1.7902000000000196e-05}, {'time': 0.018954194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018971389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7195000000001098e-05, 'source_diff': 1.7195000000001098e-05}, {'time': 0.018972444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019002472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0027999999997917e-05, 'source_diff': 3.0027999999997917e-05}, {'time': 0.019003528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019027653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.019028722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019040347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1624999999997748e-05, 'source_diff': 1.1624999999997748e-05}, {'time': 0.019041417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019056181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4763999999996974e-05, 'source_diff': 1.4763999999996974e-05}, {'time': 0.01905725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019072319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.019073375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019101236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.019102278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019131375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.019132486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019153444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0957999999998006e-05, 'source_diff': 2.0957999999998006e-05}, {'time': 0.019154542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.019168319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.377699999999954e-05, 'source_diff': 1.377699999999954e-05}, {'time': 0.019169389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5042000000002895e-05, 'source_diff': 2.5042000000002895e-05}, {'time': 0.019195486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019218361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.019219431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019246667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.019247694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.019262153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4459000000001387e-05, 'source_diff': 1.4459000000001387e-05}, {'time': 0.019263236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019283278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0042000000001364e-05, 'source_diff': 2.0042000000001364e-05}, {'time': 0.019284333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019311861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7527999999998887e-05, 'source_diff': 2.7527999999998887e-05}, {'time': 0.019312917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019327069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4151999999999915e-05, 'source_diff': 1.4151999999999915e-05}, {'time': 0.019328139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019355042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.690299999999826e-05, 'source_diff': 2.690299999999826e-05}, {'time': 0.019356097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019378667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2569999999999535e-05, 'source_diff': 2.2569999999999535e-05}, {'time': 0.019379708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019392, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2292000000000552e-05, 'source_diff': 1.2292000000000552e-05}, {'time': 0.019393042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:58.230" endtime="20201112 12:41:58.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.226" endtime="20201112 12:41:58.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:58.260" level="INFO">${debug-compressed} = {'time': [0.018284375, 0.018285583, 0.018306819, 0.018307875, 0.018323569, 0.018324639, 0.018354972, 0.018356042, 0.018372986, 0.018374042, 0.018401264, 0.018402347, 0.018431736, 0.018432819, 0.018453...</msg>
<status status="PASS" starttime="20201112 12:41:58.237" endtime="20201112 12:41:58.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.264" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:58.263" endtime="20201112 12:41:58.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.268" level="INFO">VALUE: {'time': [0.018284375, 0.018285583, 0.018306819, 0.018307875, 0.018323569, 0.018324639, 0.018354972, 0.018356042, 0.018372986, 0.018374042, 0.018401264, 0.018402347, 0.018431736, 0.018432819, 0.018453792, 0.018454861, 0.018485514, 0.018486569, 0.018502292, 0.018503333, 0.018524958, 0.018526028, 0.018539569, 0.018540611, 0.018571556, 0.018572625, 0.018595806, 0.018596861, 0.018610681, 0.01861175, 0.018636472, 0.018637569, 0.018651681, 0.018652778, 0.018679042, 0.018680097, 0.018710819, 0.018711819, 0.018735625, 0.01873675, 0.018751458, 0.0187525, 0.018781917, 0.018782972, 0.018807431, 0.018808444, 0.018837542, 0.018838625, 0.018864931, 0.018865958, 0.018886333, 0.018887444, 0.018900611, 0.018901667, 0.018913694, 0.018914681, 0.018934125, 0.018935181, 0.018953083, 0.018954194, 0.018971389, 0.018972444, 0.019002472, 0.019003528, 0.019027653, 0.019028722, 0.019040347, 0.019041417, 0.019056181, 0.01905725, 0.019072319, 0.019073375, 0.019101236, 0.019102278, 0.019131375, 0.019132486, 0.019153444, 0.019154542, 0.019168319, 0.019169389, 0.019194431, 0.019195486, 0.019218361, 0.019219431, 0.019246667, 0.019247694, 0.019262153, 0.019263236, 0.019283278, 0.019284333, 0.019311861, 0.019312917, 0.019327069, 0.019328139, 0.019355042, 0.019356097, 0.019378667, 0.019379708, 0.019392, 0.019393042], 'source_diff': [0, 1.2080000000025404e-06, 2.1235999999997396e-05, 1.0560000000027492e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 3.0333000000000443e-05, 1.0699999999988496e-06, 1.6944000000001375e-05, 1.0559999999992797e-06, 2.7222000000000357e-05, 1.082999999998946e-06, 2.9389000000001192e-05, 1.082999999998946e-06, 2.097300000000052e-05, 1.068999999999376e-06, 3.065300000000201e-05, 1.054999999999806e-06, 1.5722999999998738e-05, 1.0410000000002362e-06, 2.162500000000081e-05, 1.0699999999988496e-06, 1.354099999999886e-05, 1.0419999999997098e-06, 3.094500000000097e-05, 1.068999999999376e-06, 2.318100000000059e-05, 1.054999999999806e-06, 1.3820000000001192e-05, 1.068999999999376e-06, 2.4722000000001326e-05, 1.0969999999985158e-06, 1.4112000000000152e-05, 1.0969999999985158e-06, 2.6264000000001536e-05, 1.054999999999806e-06, 3.072200000000039e-05, 1.000000000001e-06, 2.3805999999997746e-05, 1.125000000001125e-06, 1.4707999999998694e-05, 1.0419999999997098e-06, 2.9417000000000332e-05, 1.054999999999806e-06, 2.445900000000098e-05, 1.0130000000010964e-06, 2.9097999999998236e-05, 1.0830000000024154e-06, 2.6306000000000246e-05, 1.0269999999971968e-06, 2.037500000000303e-05, 1.1109999999980857e-06, 1.3167000000001428e-05, 1.0559999999992797e-06, 1.2027000000001259e-05, 9.869999999974344e-07, 1.9444000000000405e-05, 1.0559999999992797e-06, 1.7902000000000196e-05, 1.1110000000015552e-06, 1.7195000000001098e-05, 1.054999999999806e-06, 3.0027999999997917e-05, 1.0559999999992797e-06, 2.412499999999984e-05, 1.0690000000028455e-06, 1.1624999999997748e-05, 1.070000000002319e-06, 1.4763999999996974e-05, 1.0690000000028455e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 2.7861000000000552e-05, 1.0419999999997098e-06, 2.9096999999998763e-05, 1.1110000000015552e-06, 2.0957999999998006e-05, 1.098000000001459e-06, 1.377699999999954e-05, 1.0699999999988496e-06, 2.5042000000002895e-05, 1.054999999999806e-06, 2.287499999999859e-05, 1.0699999999988496e-06, 2.7235999999999927e-05, 1.0270000000006663e-06, 1.4459000000001387e-05, 1.082999999998946e-06, 2.0042000000001364e-05, 1.054999999999806e-06, 2.7527999999998887e-05, 1.0559999999992797e-06, 1.4151999999999915e-05, 1.070000000002319e-06, 2.690299999999826e-05, 1.054999999999806e-06, 2.2569999999999535e-05, 1.0410000000002362e-06, 1.2292000000000552e-05, 1.0419999999997098e-06], 'diff': [0, 1.2080000000025404e-06, 2.1235999999997396e-05, 1.0560000000027492e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 3.0333000000000443e-05, 1.0699999999988496e-06, 1.6944000000001375e-05, 1.0559999999992797e-06, 2.7222000000000357e-05, 1.082999999998946e-06, 2.9389000000001192e-05, 1.082999999998946e-06, 2.097300000000052e-05, 1.068999999999376e-06, 3.065300000000201e-05, 1.054999999999806e-06, 1.5722999999998738e-05, 1.0410000000002362e-06, 2.162500000000081e-05, 1.0699999999988496e-06, 1.354099999999886e-05, 1.0419999999997098e-06, 3.094500000000097e-05, 1.068999999999376e-06, 2.318100000000059e-05, 1.054999999999806e-06, 1.3820000000001192e-05, 1.068999999999376e-06, 2.4722000000001326e-05, 1.0969999999985158e-06, 1.4112000000000152e-05, 1.0969999999985158e-06, 2.6264000000001536e-05, 1.054999999999806e-06, 3.072200000000039e-05, 1.000000000001e-06, 2.3805999999997746e-05, 1.125000000001125e-06, 1.4707999999998694e-05, 1.0419999999997098e-06, 2.9417000000000332e-05, 1.054999999999806e-06, 2.445900000000098e-05, 1.0130000000010964e-06, 2.9097999999998236e-05, 1.0830000000024154e-06, 2.6306000000000246e-05, 1.0269999999971968e-06, 2.037500000000303e-05, 1.1109999999980857e-06, 1.3167000000001428e-05, 1.0559999999992797e-06, 1.2027000000001259e-05, 9.869999999974344e-07, 1.9444000000000405e-05, 1.0559999999992797e-06, 1.7902000000000196e-05, 1.1110000000015552e-06, 1.7195000000001098e-05, 1.054999999999806e-06, 3.0027999999997917e-05, 1.0559999999992797e-06, 2.412499999999984e-05, 1.0690000000028455e-06, 1.1624999999997748e-05, 1.070000000002319e-06, 1.4763999999996974e-05, 1.0690000000028455e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 2.7861000000000552e-05, 1.0419999999997098e-06, 2.9096999999998763e-05, 1.1110000000015552e-06, 2.0957999999998006e-05, 1.098000000001459e-06, 1.377699999999954e-05, 1.0699999999988496e-06, 2.5042000000002895e-05, 1.054999999999806e-06, 2.287499999999859e-05, 1.0699999999988496e-06, 2.7235999999999927e-05, 1.0270000000006663e-06, 1.4459000000001387e-05, 1.082999999998946e-06, 2.0042000000001364e-05, 1.054999999999806e-06, 2.7527999999998887e-05, 1.0559999999992797e-06, 1.4151999999999915e-05, 1.070000000002319e-06, 2.690299999999826e-05, 1.054999999999806e-06, 2.2569999999999535e-05, 1.0410000000002362e-06, 1.2292000000000552e-05, 1.0419999999997098e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:58.265" endtime="20201112 12:41:58.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.261" endtime="20201112 12:41:58.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.274" level="INFO">${RESULT} = [{'time': 0.018285583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2080000000025404e-06, 'source_diff': 1.2080000000025404e-06}, {'time': 0.018307875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:58.270" endtime="20201112 12:41:58.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:58.287" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018285583, 0.018307875, 0.018324639, 0.018356042, 0.018374042, 0.018402347, 0.018432819, 0.018454861, 0.018486569, 0.018503333, 0.018526028, 0.018540611, 0.018572625, 0.018596861, 0.018611...</msg>
<status status="PASS" starttime="20201112 12:41:58.275" endtime="20201112 12:41:58.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.291" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:58.290" endtime="20201112 12:41:58.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.293" level="INFO">VALUE: [1.2080000000025404e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.125000000001125e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0130000000010964e-06, 1.0830000000024154e-06, 1.0269999999971968e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 9.869999999974344e-07, 1.0559999999992797e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.070000000002319e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.1110000000015552e-06, 1.098000000001459e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0270000000006663e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:41:58.292" endtime="20201112 12:41:58.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.288" endtime="20201112 12:41:58.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.296" endtime="20201112 12:41:58.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.300" endtime="20201112 12:41:58.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.298" endtime="20201112 12:41:58.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.295" endtime="20201112 12:41:58.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:57.896" endtime="20201112 12:41:58.320"></status>
</kw>
<msg timestamp="20201112 12:41:58.320" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.328" endtime="20201112 12:41:58.337"></status>
</kw>
<msg timestamp="20201112 12:41:58.337" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.326" endtime="20201112 12:41:58.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.338" endtime="20201112 12:41:58.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.341" endtime="20201112 12:41:58.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.324" endtime="20201112 12:41:58.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.322" endtime="20201112 12:41:58.343"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.351" endtime="20201112 12:41:58.635"></status>
</kw>
<msg timestamp="20201112 12:41:58.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.349" endtime="20201112 12:41:58.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.639" endtime="20201112 12:41:58.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.648" endtime="20201112 12:41:58.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.347" endtime="20201112 12:41:58.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.344" endtime="20201112 12:41:58.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.654" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:58.653" endtime="20201112 12:41:58.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.659" level="INFO">VALUE: [{'time': 0.018278681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018279875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018296125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6249999999998904e-05, 'source_diff': 1.6249999999998904e-05}, {'time': 0.018297181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018316931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.018318014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018342417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.440299999999923e-05, 'source_diff': 2.440299999999923e-05}, {'time': 0.0183435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018363542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0042000000001364e-05, 'source_diff': 2.0042000000001364e-05}, {'time': 0.018364597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018394, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.018395069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018418861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.018419917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018434694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.477700000000054e-05, 'source_diff': 1.477700000000054e-05}, {'time': 0.018435736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018447444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1707999999999164e-05, 'source_diff': 1.1707999999999164e-05}, {'time': 0.018448444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018475361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.691699999999783e-05, 'source_diff': 2.691699999999783e-05}, {'time': 0.018476431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018489653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.018490708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018517319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.018518361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018543111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4750000000000466e-05, 'source_diff': 2.4750000000000466e-05}, {'time': 0.018544167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018570458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291000000001202e-05, 'source_diff': 2.6291000000001202e-05}, {'time': 0.018571583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.018590014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.018591083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018609264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.818099999999906e-05, 'source_diff': 1.818099999999906e-05}, {'time': 0.018610319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018627583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.018628639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018651819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3180000000001116e-05, 'source_diff': 2.3180000000001116e-05}, {'time': 0.018652889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018674806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.191699999999977e-05, 'source_diff': 2.191699999999977e-05}, {'time': 0.018675875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018703736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7860999999997083e-05, 'source_diff': 2.7860999999997083e-05}, {'time': 0.018704819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018719556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4736999999997308e-05, 'source_diff': 1.4736999999997308e-05}, {'time': 0.018720611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018745667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5055999999998996e-05, 'source_diff': 2.5055999999998996e-05}, {'time': 0.018746708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018762417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5708999999999168e-05, 'source_diff': 1.5708999999999168e-05}, {'time': 0.018763528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018781667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.813899999999688e-05, 'source_diff': 1.813899999999688e-05}, {'time': 0.018782722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018799361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.663899999999885e-05, 'source_diff': 1.663899999999885e-05}, {'time': 0.018800417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018813319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2901999999998665e-05, 'source_diff': 1.2901999999998665e-05}, {'time': 0.018814375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018841292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.691699999999783e-05, 'source_diff': 2.691699999999783e-05}, {'time': 0.018842347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018863333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.018864431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018884778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.034700000000042e-05, 'source_diff': 2.034700000000042e-05}, {'time': 0.018885847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018912778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.693100000000087e-05, 'source_diff': 2.693100000000087e-05}, {'time': 0.018913819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999967667e-06, 'source_diff': 1.0409999999967667e-06}, {'time': 0.0189295, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5681000000000028e-05, 'source_diff': 1.5681000000000028e-05}, {'time': 0.018930597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018958722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8125000000000372e-05, 'source_diff': 2.8125000000000372e-05}, {'time': 0.018959792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018981403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.018982472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018998778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6306000000000653e-05, 'source_diff': 1.6306000000000653e-05}, {'time': 0.018999847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019023347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3499999999999216e-05, 'source_diff': 2.3499999999999216e-05}, {'time': 0.019024403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019052542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.019053611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.01908425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.019085319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019102569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019103694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.019127153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.345899999999998e-05, 'source_diff': 2.345899999999998e-05}, {'time': 0.019128181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019141069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2887999999999095e-05, 'source_diff': 1.2887999999999095e-05}, {'time': 0.019142139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019156583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4444000000002344e-05, 'source_diff': 1.4444000000002344e-05}, {'time': 0.019157639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019172722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.508299999999907e-05, 'source_diff': 1.508299999999907e-05}, {'time': 0.019173778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019193556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9778000000001544e-05, 'source_diff': 1.9778000000001544e-05}, {'time': 0.019194597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019222806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.820899999999779e-05, 'source_diff': 2.820899999999779e-05}, {'time': 0.019223819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.019241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.019242764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019271222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8458000000002037e-05, 'source_diff': 2.8458000000002037e-05}, {'time': 0.019272292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019296389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.019297444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019310333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.019311403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019333028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162499999999734e-05, 'source_diff': 2.162499999999734e-05}, {'time': 0.019334097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019356958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.019358, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:58.655" endtime="20201112 12:41:58.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.651" endtime="20201112 12:41:58.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:58.685" level="INFO">${debug-compressed} = {'time': [0.018278681, 0.018279875, 0.018296125, 0.018297181, 0.018316931, 0.018318014, 0.018342417, 0.0183435, 0.018363542, 0.018364597, 0.018394, 0.018395069, 0.018418861, 0.018419917, 0.018434694, ...</msg>
<status status="PASS" starttime="20201112 12:41:58.662" endtime="20201112 12:41:58.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.689" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:58.688" endtime="20201112 12:41:58.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.693" level="INFO">VALUE: {'time': [0.018278681, 0.018279875, 0.018296125, 0.018297181, 0.018316931, 0.018318014, 0.018342417, 0.0183435, 0.018363542, 0.018364597, 0.018394, 0.018395069, 0.018418861, 0.018419917, 0.018434694, 0.018435736, 0.018447444, 0.018448444, 0.018475361, 0.018476431, 0.018489653, 0.018490708, 0.018517319, 0.018518361, 0.018543111, 0.018544167, 0.018570458, 0.018571583, 0.018590014, 0.018591083, 0.018609264, 0.018610319, 0.018627583, 0.018628639, 0.018651819, 0.018652889, 0.018674806, 0.018675875, 0.018703736, 0.018704819, 0.018719556, 0.018720611, 0.018745667, 0.018746708, 0.018762417, 0.018763528, 0.018781667, 0.018782722, 0.018799361, 0.018800417, 0.018813319, 0.018814375, 0.018841292, 0.018842347, 0.018863333, 0.018864431, 0.018884778, 0.018885847, 0.018912778, 0.018913819, 0.0189295, 0.018930597, 0.018958722, 0.018959792, 0.018981403, 0.018982472, 0.018998778, 0.018999847, 0.019023347, 0.019024403, 0.019052542, 0.019053611, 0.01908425, 0.019085319, 0.019102569, 0.019103694, 0.019127153, 0.019128181, 0.019141069, 0.019142139, 0.019156583, 0.019157639, 0.019172722, 0.019173778, 0.019193556, 0.019194597, 0.019222806, 0.019223819, 0.019241694, 0.019242764, 0.019271222, 0.019272292, 0.019296389, 0.019297444, 0.019310333, 0.019311403, 0.019333028, 0.019334097, 0.019356958, 0.019358], 'source_diff': [0, 1.193999999999501e-06, 1.6249999999998904e-05, 1.0559999999992797e-06, 1.9750000000002405e-05, 1.082999999998946e-06, 2.440299999999923e-05, 1.082999999998946e-06, 2.0042000000001364e-05, 1.054999999999806e-06, 2.9403000000000762e-05, 1.068999999999376e-06, 2.3792000000001645e-05, 1.0559999999992797e-06, 1.477700000000054e-05, 1.0419999999997098e-06, 1.1707999999999164e-05, 1.000000000001e-06, 2.691699999999783e-05, 1.070000000002319e-06, 1.3222000000000234e-05, 1.054999999999806e-06, 2.6610999999999302e-05, 1.0419999999997098e-06, 2.4750000000000466e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.1249999999976557e-06, 1.843099999999931e-05, 1.0690000000028455e-06, 1.818099999999906e-05, 1.054999999999806e-06, 1.7263999999999474e-05, 1.0559999999992797e-06, 2.3180000000001116e-05, 1.0699999999988496e-06, 2.191699999999977e-05, 1.0690000000028455e-06, 2.7860999999997083e-05, 1.0830000000024154e-06, 1.4736999999997308e-05, 1.0550000000032755e-06, 2.5055999999998996e-05, 1.0410000000002362e-06, 1.5708999999999168e-05, 1.1110000000015552e-06, 1.813899999999688e-05, 1.0550000000032755e-06, 1.663899999999885e-05, 1.0559999999992797e-06, 1.2901999999998665e-05, 1.0560000000027492e-06, 2.691699999999783e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.098000000001459e-06, 2.034700000000042e-05, 1.068999999999376e-06, 2.693100000000087e-05, 1.0409999999967667e-06, 1.5681000000000028e-05, 1.0970000000019853e-06, 2.8125000000000372e-05, 1.0699999999988496e-06, 2.161100000000124e-05, 1.068999999999376e-06, 1.6306000000000653e-05, 1.068999999999376e-06, 2.3499999999999216e-05, 1.0559999999992797e-06, 2.8138999999999942e-05, 1.0690000000028455e-06, 3.063899999999897e-05, 1.068999999999376e-06, 1.7249999999999904e-05, 1.125000000001125e-06, 2.345899999999998e-05, 1.02800000000014e-06, 1.2887999999999095e-05, 1.0699999999988496e-06, 1.4444000000002344e-05, 1.0559999999992797e-06, 1.508299999999907e-05, 1.0559999999992797e-06, 1.9778000000001544e-05, 1.0410000000002362e-06, 2.820899999999779e-05, 1.0130000000010964e-06, 1.787500000000053e-05, 1.0699999999988496e-06, 2.8458000000002037e-05, 1.0699999999988496e-06, 2.40970000000007e-05, 1.054999999999806e-06, 1.2888999999998568e-05, 1.070000000002319e-06, 2.162499999999734e-05, 1.0690000000028455e-06, 2.286099999999902e-05, 1.0419999999997098e-06], 'diff': [0, 1.193999999999501e-06, 1.6249999999998904e-05, 1.0559999999992797e-06, 1.9750000000002405e-05, 1.082999999998946e-06, 2.440299999999923e-05, 1.082999999998946e-06, 2.0042000000001364e-05, 1.054999999999806e-06, 2.9403000000000762e-05, 1.068999999999376e-06, 2.3792000000001645e-05, 1.0559999999992797e-06, 1.477700000000054e-05, 1.0419999999997098e-06, 1.1707999999999164e-05, 1.000000000001e-06, 2.691699999999783e-05, 1.070000000002319e-06, 1.3222000000000234e-05, 1.054999999999806e-06, 2.6610999999999302e-05, 1.0419999999997098e-06, 2.4750000000000466e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.1249999999976557e-06, 1.843099999999931e-05, 1.0690000000028455e-06, 1.818099999999906e-05, 1.054999999999806e-06, 1.7263999999999474e-05, 1.0559999999992797e-06, 2.3180000000001116e-05, 1.0699999999988496e-06, 2.191699999999977e-05, 1.0690000000028455e-06, 2.7860999999997083e-05, 1.0830000000024154e-06, 1.4736999999997308e-05, 1.0550000000032755e-06, 2.5055999999998996e-05, 1.0410000000002362e-06, 1.5708999999999168e-05, 1.1110000000015552e-06, 1.813899999999688e-05, 1.0550000000032755e-06, 1.663899999999885e-05, 1.0559999999992797e-06, 1.2901999999998665e-05, 1.0560000000027492e-06, 2.691699999999783e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.098000000001459e-06, 2.034700000000042e-05, 1.068999999999376e-06, 2.693100000000087e-05, 1.0409999999967667e-06, 1.5681000000000028e-05, 1.0970000000019853e-06, 2.8125000000000372e-05, 1.0699999999988496e-06, 2.161100000000124e-05, 1.068999999999376e-06, 1.6306000000000653e-05, 1.068999999999376e-06, 2.3499999999999216e-05, 1.0559999999992797e-06, 2.8138999999999942e-05, 1.0690000000028455e-06, 3.063899999999897e-05, 1.068999999999376e-06, 1.7249999999999904e-05, 1.125000000001125e-06, 2.345899999999998e-05, 1.02800000000014e-06, 1.2887999999999095e-05, 1.0699999999988496e-06, 1.4444000000002344e-05, 1.0559999999992797e-06, 1.508299999999907e-05, 1.0559999999992797e-06, 1.9778000000001544e-05, 1.0410000000002362e-06, 2.820899999999779e-05, 1.0130000000010964e-06, 1.787500000000053e-05, 1.0699999999988496e-06, 2.8458000000002037e-05, 1.0699999999988496e-06, 2.40970000000007e-05, 1.054999999999806e-06, 1.2888999999998568e-05, 1.070000000002319e-06, 2.162499999999734e-05, 1.0690000000028455e-06, 2.286099999999902e-05, 1.0419999999997098e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:58.690" endtime="20201112 12:41:58.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.686" endtime="20201112 12:41:58.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:58.699" level="INFO">${RESULT} = [{'time': 0.018279875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018297181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:41:58.695" endtime="20201112 12:41:58.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:58.712" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018279875, 0.018297181, 0.018318014, 0.0183435, 0.018364597, 0.018395069, 0.018419917, 0.018435736, 0.018448444, 0.018476431, 0.018490708, 0.018518361, 0.018544167, 0.018571583, 0.01859108...</msg>
<status status="PASS" starttime="20201112 12:41:58.700" endtime="20201112 12:41:58.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.717" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:58.715" endtime="20201112 12:41:58.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.719" level="INFO">VALUE: [1.193999999999501e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.000000000001e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.1249999999976557e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.0830000000024154e-06, 1.0550000000032755e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 1.0550000000032755e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.098000000001459e-06, 1.068999999999376e-06, 1.0409999999967667e-06, 1.0970000000019853e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.125000000001125e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0130000000010964e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0690000000028455e-06, 1.0419999999997098e-06]</msg>
<status status="PASS" starttime="20201112 12:41:58.718" endtime="20201112 12:41:58.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.713" endtime="20201112 12:41:58.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.722" endtime="20201112 12:41:58.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:58.725" endtime="20201112 12:41:58.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.724" endtime="20201112 12:41:58.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.721" endtime="20201112 12:41:58.746"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.321" endtime="20201112 12:41:58.746"></status>
</kw>
<msg timestamp="20201112 12:41:58.746" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.754" endtime="20201112 12:41:58.763"></status>
</kw>
<msg timestamp="20201112 12:41:58.763" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.752" endtime="20201112 12:41:58.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:58.766" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:58.764" endtime="20201112 12:41:58.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.767" endtime="20201112 12:41:58.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.750" endtime="20201112 12:41:58.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.748" endtime="20201112 12:41:58.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:58.775" endtime="20201112 12:41:59.059"></status>
</kw>
<msg timestamp="20201112 12:41:59.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:58.774" endtime="20201112 12:41:59.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.063" endtime="20201112 12:41:59.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.072" endtime="20201112 12:41:59.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.772" endtime="20201112 12:41:59.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.770" endtime="20201112 12:41:59.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.078" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:59.077" endtime="20201112 12:41:59.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.083" level="INFO">VALUE: [{'time': 0.018296597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018297792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018311556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.018312625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018329556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.018330611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018353486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.018354542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018368056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3513999999999193e-05, 'source_diff': 1.3513999999999193e-05}, {'time': 0.018369139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018392611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3472000000000076e-05, 'source_diff': 2.3472000000000076e-05}, {'time': 0.018393667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018408139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4472000000001484e-05, 'source_diff': 1.4472000000001484e-05}, {'time': 0.018409181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018421472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2291000000001079e-05, 'source_diff': 1.2291000000001079e-05}, {'time': 0.018422556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018436653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4097000000001109e-05, 'source_diff': 1.4097000000001109e-05}, {'time': 0.018437736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018458708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0972000000001045e-05, 'source_diff': 2.0972000000001045e-05}, {'time': 0.018459764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018483903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.413899999999941e-05, 'source_diff': 2.413899999999941e-05}, {'time': 0.018485, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018497514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.018498597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018519, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.040300000000217e-05, 'source_diff': 2.040300000000217e-05}, {'time': 0.018520014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018545111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5096999999998232e-05, 'source_diff': 2.5096999999998232e-05}, {'time': 0.018546111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018571153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.018572236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018595083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.018596153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018615583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9430000000000835e-05, 'source_diff': 1.9430000000000835e-05}, {'time': 0.018616639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018643236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.018644306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018673069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8763000000001093e-05, 'source_diff': 2.8763000000001093e-05}, {'time': 0.018674139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018691083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.018692153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018709111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6958000000000945e-05, 'source_diff': 1.6958000000000945e-05}, {'time': 0.018710167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018738292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8125000000000372e-05, 'source_diff': 2.8125000000000372e-05}, {'time': 0.018739361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018768764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.018769833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018799222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.018800319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018830931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0611999999999306e-05, 'source_diff': 3.0611999999999306e-05}, {'time': 0.018831986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018851736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.018852806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018866639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.018867708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018888389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068099999999809e-05, 'source_diff': 2.068099999999809e-05}, {'time': 0.018889444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018915736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.018916819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.01892875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1930999999999747e-05, 'source_diff': 1.1930999999999747e-05}, {'time': 0.018929819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018955792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597299999999858e-05, 'source_diff': 2.597299999999858e-05}, {'time': 0.018956847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018976917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0070000000000504e-05, 'source_diff': 2.0070000000000504e-05}, {'time': 0.018977972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019003958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5986000000002146e-05, 'source_diff': 2.5986000000002146e-05}, {'time': 0.019005014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019035056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0042000000000957e-05, 'source_diff': 3.0042000000000957e-05}, {'time': 0.019036125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019052431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6306000000000653e-05, 'source_diff': 1.6306000000000653e-05}, {'time': 0.019053486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019069181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694999999999598e-05, 'source_diff': 1.5694999999999598e-05}, {'time': 0.01907025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019089389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.913899999999788e-05, 'source_diff': 1.913899999999788e-05}, {'time': 0.019090431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019119833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.940199999999782e-05, 'source_diff': 2.940199999999782e-05}, {'time': 0.019120889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019143125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2236000000001865e-05, 'source_diff': 2.2236000000001865e-05}, {'time': 0.019144181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019161125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.019162208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019190972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.019192042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019204014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.019205069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019222611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7541999999998864e-05, 'source_diff': 1.7541999999998864e-05}, {'time': 0.019223681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019244708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.102699999999985e-05, 'source_diff': 2.102699999999985e-05}, {'time': 0.01924575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019258014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.019259083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019272625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3542000000001803e-05, 'source_diff': 1.3542000000001803e-05}, {'time': 0.019273722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019295583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.186100000000149e-05, 'source_diff': 2.186100000000149e-05}, {'time': 0.019296653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019319806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.315299999999798e-05, 'source_diff': 2.315299999999798e-05}, {'time': 0.019320875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019334083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3207999999997194e-05, 'source_diff': 1.3207999999997194e-05}, {'time': 0.019335139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6013999999998224e-05, 'source_diff': 1.6013999999998224e-05}, {'time': 0.019352208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:59.079" endtime="20201112 12:41:59.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.075" endtime="20201112 12:41:59.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:59.109" level="INFO">${debug-compressed} = {'time': [0.018296597, 0.018297792, 0.018311556, 0.018312625, 0.018329556, 0.018330611, 0.018353486, 0.018354542, 0.018368056, 0.018369139, 0.018392611, 0.018393667, 0.018408139, 0.018409181, 0.018421...</msg>
<status status="PASS" starttime="20201112 12:41:59.086" endtime="20201112 12:41:59.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.113" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:59.112" endtime="20201112 12:41:59.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.117" level="INFO">VALUE: {'time': [0.018296597, 0.018297792, 0.018311556, 0.018312625, 0.018329556, 0.018330611, 0.018353486, 0.018354542, 0.018368056, 0.018369139, 0.018392611, 0.018393667, 0.018408139, 0.018409181, 0.018421472, 0.018422556, 0.018436653, 0.018437736, 0.018458708, 0.018459764, 0.018483903, 0.018485, 0.018497514, 0.018498597, 0.018519, 0.018520014, 0.018545111, 0.018546111, 0.018571153, 0.018572236, 0.018595083, 0.018596153, 0.018615583, 0.018616639, 0.018643236, 0.018644306, 0.018673069, 0.018674139, 0.018691083, 0.018692153, 0.018709111, 0.018710167, 0.018738292, 0.018739361, 0.018768764, 0.018769833, 0.018799222, 0.018800319, 0.018830931, 0.018831986, 0.018851736, 0.018852806, 0.018866639, 0.018867708, 0.018888389, 0.018889444, 0.018915736, 0.018916819, 0.01892875, 0.018929819, 0.018955792, 0.018956847, 0.018976917, 0.018977972, 0.019003958, 0.019005014, 0.019035056, 0.019036125, 0.019052431, 0.019053486, 0.019069181, 0.01907025, 0.019089389, 0.019090431, 0.019119833, 0.019120889, 0.019143125, 0.019144181, 0.019161125, 0.019162208, 0.019190972, 0.019192042, 0.019204014, 0.019205069, 0.019222611, 0.019223681, 0.019244708, 0.01924575, 0.019258014, 0.019259083, 0.019272625, 0.019273722, 0.019295583, 0.019296653, 0.019319806, 0.019320875, 0.019334083, 0.019335139, 0.019351153, 0.019352208], 'source_diff': [0, 1.1949999999989747e-06, 1.3763999999999443e-05, 1.068999999999376e-06, 1.693100000000128e-05, 1.054999999999806e-06, 2.287499999999859e-05, 1.0560000000027492e-06, 1.3513999999999193e-05, 1.082999999998946e-06, 2.3472000000000076e-05, 1.0559999999992797e-06, 1.4472000000001484e-05, 1.0419999999997098e-06, 1.2291000000001079e-05, 1.0839999999984196e-06, 1.4097000000001109e-05, 1.082999999998946e-06, 2.0972000000001045e-05, 1.0559999999992797e-06, 2.413899999999941e-05, 1.0970000000019853e-06, 1.2513999999998193e-05, 1.082999999998946e-06, 2.040300000000217e-05, 1.01400000000057e-06, 2.5096999999998232e-05, 1.000000000001e-06, 2.5041999999999426e-05, 1.082999999998946e-06, 2.284699999999945e-05, 1.070000000002319e-06, 1.9430000000000835e-05, 1.0559999999992797e-06, 2.6596999999999732e-05, 1.0699999999988496e-06, 2.8763000000001093e-05, 1.0699999999988496e-06, 1.6944000000001375e-05, 1.0699999999988496e-06, 1.6958000000000945e-05, 1.0559999999992797e-06, 2.8125000000000372e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.068999999999376e-06, 2.9389000000001192e-05, 1.0969999999985158e-06, 3.0611999999999306e-05, 1.054999999999806e-06, 1.9750000000002405e-05, 1.0699999999988496e-06, 1.3833000000001289e-05, 1.068999999999376e-06, 2.068099999999809e-05, 1.054999999999806e-06, 2.6292000000000676e-05, 1.0830000000024154e-06, 1.1930999999999747e-05, 1.068999999999376e-06, 2.597299999999858e-05, 1.054999999999806e-06, 2.0070000000000504e-05, 1.054999999999806e-06, 2.5986000000002146e-05, 1.0559999999992797e-06, 3.0042000000000957e-05, 1.068999999999376e-06, 1.6306000000000653e-05, 1.054999999999806e-06, 1.5694999999999598e-05, 1.068999999999376e-06, 1.913899999999788e-05, 1.0420000000031793e-06, 2.940199999999782e-05, 1.0559999999992797e-06, 2.2236000000001865e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.082999999998946e-06, 2.8764000000000567e-05, 1.0699999999988496e-06, 1.1971999999998983e-05, 1.0550000000032755e-06, 1.7541999999998864e-05, 1.0699999999988496e-06, 2.102699999999985e-05, 1.0419999999997098e-06, 1.2264000000001413e-05, 1.068999999999376e-06, 1.3542000000001803e-05, 1.0969999999985158e-06, 2.186100000000149e-05, 1.0699999999988496e-06, 2.315299999999798e-05, 1.0690000000028455e-06, 1.3207999999997194e-05, 1.0560000000027492e-06, 1.6013999999998224e-05, 1.054999999999806e-06], 'diff': [0, 1.1949999999989747e-06, 1.3763999999999443e-05, 1.068999999999376e-06, 1.693100000000128e-05, 1.054999999999806e-06, 2.287499999999859e-05, 1.0560000000027492e-06, 1.3513999999999193e-05, 1.082999999998946e-06, 2.3472000000000076e-05, 1.0559999999992797e-06, 1.4472000000001484e-05, 1.0419999999997098e-06, 1.2291000000001079e-05, 1.0839999999984196e-06, 1.4097000000001109e-05, 1.082999999998946e-06, 2.0972000000001045e-05, 1.0559999999992797e-06, 2.413899999999941e-05, 1.0970000000019853e-06, 1.2513999999998193e-05, 1.082999999998946e-06, 2.040300000000217e-05, 1.01400000000057e-06, 2.5096999999998232e-05, 1.000000000001e-06, 2.5041999999999426e-05, 1.082999999998946e-06, 2.284699999999945e-05, 1.070000000002319e-06, 1.9430000000000835e-05, 1.0559999999992797e-06, 2.6596999999999732e-05, 1.0699999999988496e-06, 2.8763000000001093e-05, 1.0699999999988496e-06, 1.6944000000001375e-05, 1.0699999999988496e-06, 1.6958000000000945e-05, 1.0559999999992797e-06, 2.8125000000000372e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.068999999999376e-06, 2.9389000000001192e-05, 1.0969999999985158e-06, 3.0611999999999306e-05, 1.054999999999806e-06, 1.9750000000002405e-05, 1.0699999999988496e-06, 1.3833000000001289e-05, 1.068999999999376e-06, 2.068099999999809e-05, 1.054999999999806e-06, 2.6292000000000676e-05, 1.0830000000024154e-06, 1.1930999999999747e-05, 1.068999999999376e-06, 2.597299999999858e-05, 1.054999999999806e-06, 2.0070000000000504e-05, 1.054999999999806e-06, 2.5986000000002146e-05, 1.0559999999992797e-06, 3.0042000000000957e-05, 1.068999999999376e-06, 1.6306000000000653e-05, 1.054999999999806e-06, 1.5694999999999598e-05, 1.068999999999376e-06, 1.913899999999788e-05, 1.0420000000031793e-06, 2.940199999999782e-05, 1.0559999999992797e-06, 2.2236000000001865e-05, 1.0559999999992797e-06, 1.6944000000001375e-05, 1.082999999998946e-06, 2.8764000000000567e-05, 1.0699999999988496e-06, 1.1971999999998983e-05, 1.0550000000032755e-06, 1.7541999999998864e-05, 1.0699999999988496e-06, 2.102699999999985e-05, 1.0419999999997098e-06, 1.2264000000001413e-05, 1.068999999999376e-06, 1.3542000000001803e-05, 1.0969999999985158e-06, 2.186100000000149e-05, 1.0699999999988496e-06, 2.315299999999798e-05, 1.0690000000028455e-06, 1.3207999999997194e-05, 1.0560000000027492e-06, 1.6013999999998224e-05, 1.054999999999806e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:59.114" endtime="20201112 12:41:59.118"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.110" endtime="20201112 12:41:59.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.123" level="INFO">${RESULT} = [{'time': 0.018297792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1949999999989747e-06, 'source_diff': 1.1949999999989747e-06}, {'time': 0.018312625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.119" endtime="20201112 12:41:59.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.136" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018297792, 0.018312625, 0.018330611, 0.018354542, 0.018369139, 0.018393667, 0.018409181, 0.018422556, 0.018437736, 0.018459764, 0.018485, 0.018498597, 0.018520014, 0.018546111, 0.018572236...</msg>
<status status="PASS" starttime="20201112 12:41:59.124" endtime="20201112 12:41:59.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.140" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:59.139" endtime="20201112 12:41:59.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.143" level="INFO">VALUE: [1.1949999999989747e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.082999999998946e-06, 1.01400000000057e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0420000000031793e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0699999999988496e-06, 1.0550000000032755e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.141" endtime="20201112 12:41:59.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.137" endtime="20201112 12:41:59.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.146" endtime="20201112 12:41:59.147"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.149" endtime="20201112 12:41:59.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.148" endtime="20201112 12:41:59.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.144" endtime="20201112 12:41:59.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:58.747" endtime="20201112 12:41:59.170"></status>
</kw>
<msg timestamp="20201112 12:41:59.170" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.177" endtime="20201112 12:41:59.187"></status>
</kw>
<msg timestamp="20201112 12:41:59.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.176" endtime="20201112 12:41:59.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.190" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.188" endtime="20201112 12:41:59.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.191" endtime="20201112 12:41:59.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.173" endtime="20201112 12:41:59.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.172" endtime="20201112 12:41:59.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.201" endtime="20201112 12:41:59.486"></status>
</kw>
<msg timestamp="20201112 12:41:59.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018303736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018304917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.200" endtime="20201112 12:41:59.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018303736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018304917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.490" endtime="20201112 12:41:59.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.499" endtime="20201112 12:41:59.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.196" endtime="20201112 12:41:59.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.194" endtime="20201112 12:41:59.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.505" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:59.504" endtime="20201112 12:41:59.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.510" level="INFO">VALUE: [{'time': 0.018303736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018304917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018335819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.090199999999932e-05, 'source_diff': 3.090199999999932e-05}, {'time': 0.018336861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018356681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9820000000000254e-05, 'source_diff': 1.9820000000000254e-05}, {'time': 0.018357667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018374917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.018375986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018401333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5346999999998482e-05, 'source_diff': 2.5346999999998482e-05}, {'time': 0.018402403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018414347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.018415431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018441069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5638000000001437e-05, 'source_diff': 2.5638000000001437e-05}, {'time': 0.018442139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018464389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.018465444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018490486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.018491528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018514111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.258299999999963e-05, 'source_diff': 2.258299999999963e-05}, {'time': 0.018515167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018532431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.018533458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.0185455, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2042000000000302e-05, 'source_diff': 1.2042000000000302e-05}, {'time': 0.0185465, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018561875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.537499999999803e-05, 'source_diff': 1.537499999999803e-05}, {'time': 0.018562944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018581431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.848699999999759e-05, 'source_diff': 1.848699999999759e-05}, {'time': 0.0185825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018603486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.018604583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.018627083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2499999999998216e-05, 'source_diff': 2.2499999999998216e-05}, {'time': 0.018628153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018641361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3207999999997194e-05, 'source_diff': 1.3207999999997194e-05}, {'time': 0.018642417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018668389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5971999999999107e-05, 'source_diff': 2.5971999999999107e-05}, {'time': 0.018669444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018695736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.018696819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018712806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5986999999998558e-05, 'source_diff': 1.5986999999998558e-05}, {'time': 0.018713889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018744528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.018745583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018774667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9083999999998666e-05, 'source_diff': 2.9083999999998666e-05}, {'time': 0.018775722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018798903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318099999999712e-05, 'source_diff': 2.318099999999712e-05}, {'time': 0.018799972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018827806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7833999999997416e-05, 'source_diff': 2.7833999999997416e-05}, {'time': 0.018828875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018851417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.018852486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018876597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.41109999999968e-05, 'source_diff': 2.41109999999968e-05}, {'time': 0.018877653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018907042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9388999999997723e-05, 'source_diff': 2.9388999999997723e-05}, {'time': 0.018908111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018928806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.069500000000113e-05, 'source_diff': 2.069500000000113e-05}, {'time': 0.018929847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018952097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.018953153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018967306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018968347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018989028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068100000000156e-05, 'source_diff': 2.068100000000156e-05}, {'time': 0.018990097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019011708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161099999999777e-05, 'source_diff': 2.161099999999777e-05}, {'time': 0.019012764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019039056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291999999997206e-05, 'source_diff': 2.6291999999997206e-05}, {'time': 0.019040125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019052097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1971999999998983e-05, 'source_diff': 1.1971999999998983e-05}, {'time': 0.019053153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019064417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.019065528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019087667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.213899999999741e-05, 'source_diff': 2.213899999999741e-05}, {'time': 0.019088722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019107222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.019108278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019127403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.019128458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019147903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944499999999988e-05, 'source_diff': 1.944499999999988e-05}, {'time': 0.019149028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019174306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5278000000000106e-05, 'source_diff': 2.5278000000000106e-05}, {'time': 0.019175375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019196361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0985999999997146e-05, 'source_diff': 2.0985999999997146e-05}, {'time': 0.019197417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019222458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5040999999999952e-05, 'source_diff': 2.5040999999999952e-05}, {'time': 0.019223542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019244514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0972000000001045e-05, 'source_diff': 2.0972000000001045e-05}, {'time': 0.019245583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019266931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1348000000000894e-05, 'source_diff': 2.1348000000000894e-05}, {'time': 0.019267958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.0192905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2541999999996926e-05, 'source_diff': 2.2541999999996926e-05}, {'time': 0.019291556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019303514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.019304611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019325889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1277999999999575e-05, 'source_diff': 2.1277999999999575e-05}, {'time': 0.019326944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019356972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0028000000001387e-05, 'source_diff': 3.0028000000001387e-05}, {'time': 0.019358028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019379958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1929999999999866e-05, 'source_diff': 2.1929999999999866e-05}, {'time': 0.019381028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019407681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665299999999801e-05, 'source_diff': 2.665299999999801e-05}, {'time': 0.019408681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:59.506" endtime="20201112 12:41:59.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.502" endtime="20201112 12:41:59.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:59.537" level="INFO">${debug-compressed} = {'time': [0.018303736, 0.018304917, 0.018335819, 0.018336861, 0.018356681, 0.018357667, 0.018374917, 0.018375986, 0.018401333, 0.018402403, 0.018414347, 0.018415431, 0.018441069, 0.018442139, 0.018464...</msg>
<status status="PASS" starttime="20201112 12:41:59.512" endtime="20201112 12:41:59.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.540" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:59.539" endtime="20201112 12:41:59.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.545" level="INFO">VALUE: {'time': [0.018303736, 0.018304917, 0.018335819, 0.018336861, 0.018356681, 0.018357667, 0.018374917, 0.018375986, 0.018401333, 0.018402403, 0.018414347, 0.018415431, 0.018441069, 0.018442139, 0.018464389, 0.018465444, 0.018490486, 0.018491528, 0.018514111, 0.018515167, 0.018532431, 0.018533458, 0.0185455, 0.0185465, 0.018561875, 0.018562944, 0.018581431, 0.0185825, 0.018603486, 0.018604583, 0.018627083, 0.018628153, 0.018641361, 0.018642417, 0.018668389, 0.018669444, 0.018695736, 0.018696819, 0.018712806, 0.018713889, 0.018744528, 0.018745583, 0.018774667, 0.018775722, 0.018798903, 0.018799972, 0.018827806, 0.018828875, 0.018851417, 0.018852486, 0.018876597, 0.018877653, 0.018907042, 0.018908111, 0.018928806, 0.018929847, 0.018952097, 0.018953153, 0.018967306, 0.018968347, 0.018989028, 0.018990097, 0.019011708, 0.019012764, 0.019039056, 0.019040125, 0.019052097, 0.019053153, 0.019064417, 0.019065528, 0.019087667, 0.019088722, 0.019107222, 0.019108278, 0.019127403, 0.019128458, 0.019147903, 0.019149028, 0.019174306, 0.019175375, 0.019196361, 0.019197417, 0.019222458, 0.019223542, 0.019244514, 0.019245583, 0.019266931, 0.019267958, 0.0192905, 0.019291556, 0.019303514, 0.019304611, 0.019325889, 0.019326944, 0.019356972, 0.019358028, 0.019379958, 0.019381028, 0.019407681, 0.019408681], 'source_diff': [0, 1.1809999999994047e-06, 3.090199999999932e-05, 1.0419999999997098e-06, 1.9820000000000254e-05, 9.860000000014302e-07, 1.7249999999999904e-05, 1.068999999999376e-06, 2.5346999999998482e-05, 1.070000000002319e-06, 1.1943999999999844e-05, 1.0839999999984196e-06, 2.5638000000001437e-05, 1.0699999999988496e-06, 2.2250000000001435e-05, 1.054999999999806e-06, 2.5041999999999426e-05, 1.0419999999997098e-06, 2.258299999999963e-05, 1.0559999999992797e-06, 1.7263999999999474e-05, 1.0270000000006663e-06, 1.2042000000000302e-05, 1.000000000001e-06, 1.537499999999803e-05, 1.0690000000028455e-06, 1.848699999999759e-05, 1.068999999999376e-06, 2.0986000000000615e-05, 1.0970000000019853e-06, 2.2499999999998216e-05, 1.070000000002319e-06, 1.3207999999997194e-05, 1.0560000000027492e-06, 2.5971999999999107e-05, 1.054999999999806e-06, 2.6292000000000676e-05, 1.082999999998946e-06, 1.5986999999998558e-05, 1.0830000000024154e-06, 3.063899999999897e-05, 1.054999999999806e-06, 2.9083999999998666e-05, 1.0550000000032755e-06, 2.318099999999712e-05, 1.0690000000028455e-06, 2.7833999999997416e-05, 1.068999999999376e-06, 2.2542000000000395e-05, 1.0690000000028455e-06, 2.41109999999968e-05, 1.0560000000027492e-06, 2.9388999999997723e-05, 1.068999999999376e-06, 2.069500000000113e-05, 1.0410000000002362e-06, 2.2250000000001435e-05, 1.0559999999992797e-06, 1.4152999999999388e-05, 1.0410000000002362e-06, 2.068100000000156e-05, 1.068999999999376e-06, 2.161099999999777e-05, 1.0560000000027492e-06, 2.6291999999997206e-05, 1.0690000000028455e-06, 1.1971999999998983e-05, 1.0559999999992797e-06, 1.1264000000000413e-05, 1.1110000000015552e-06, 2.213899999999741e-05, 1.054999999999806e-06, 1.8500000000001154e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.054999999999806e-06, 1.944499999999988e-05, 1.1249999999976557e-06, 2.5278000000000106e-05, 1.0690000000028455e-06, 2.0985999999997146e-05, 1.0560000000027492e-06, 2.5040999999999952e-05, 1.0839999999984196e-06, 2.0972000000001045e-05, 1.068999999999376e-06, 2.1348000000000894e-05, 1.0270000000006663e-06, 2.2541999999996926e-05, 1.0560000000027492e-06, 1.1957999999999414e-05, 1.0969999999985158e-06, 2.1277999999999575e-05, 1.054999999999806e-06, 3.0028000000001387e-05, 1.0559999999992797e-06, 2.1929999999999866e-05, 1.070000000002319e-06, 2.665299999999801e-05, 1.000000000001e-06], 'diff': [0, 1.1809999999994047e-06, 3.090199999999932e-05, 1.0419999999997098e-06, 1.9820000000000254e-05, 9.860000000014302e-07, 1.7249999999999904e-05, 1.068999999999376e-06, 2.5346999999998482e-05, 1.070000000002319e-06, 1.1943999999999844e-05, 1.0839999999984196e-06, 2.5638000000001437e-05, 1.0699999999988496e-06, 2.2250000000001435e-05, 1.054999999999806e-06, 2.5041999999999426e-05, 1.0419999999997098e-06, 2.258299999999963e-05, 1.0559999999992797e-06, 1.7263999999999474e-05, 1.0270000000006663e-06, 1.2042000000000302e-05, 1.000000000001e-06, 1.537499999999803e-05, 1.0690000000028455e-06, 1.848699999999759e-05, 1.068999999999376e-06, 2.0986000000000615e-05, 1.0970000000019853e-06, 2.2499999999998216e-05, 1.070000000002319e-06, 1.3207999999997194e-05, 1.0560000000027492e-06, 2.5971999999999107e-05, 1.054999999999806e-06, 2.6292000000000676e-05, 1.082999999998946e-06, 1.5986999999998558e-05, 1.0830000000024154e-06, 3.063899999999897e-05, 1.054999999999806e-06, 2.9083999999998666e-05, 1.0550000000032755e-06, 2.318099999999712e-05, 1.0690000000028455e-06, 2.7833999999997416e-05, 1.068999999999376e-06, 2.2542000000000395e-05, 1.0690000000028455e-06, 2.41109999999968e-05, 1.0560000000027492e-06, 2.9388999999997723e-05, 1.068999999999376e-06, 2.069500000000113e-05, 1.0410000000002362e-06, 2.2250000000001435e-05, 1.0559999999992797e-06, 1.4152999999999388e-05, 1.0410000000002362e-06, 2.068100000000156e-05, 1.068999999999376e-06, 2.161099999999777e-05, 1.0560000000027492e-06, 2.6291999999997206e-05, 1.0690000000028455e-06, 1.1971999999998983e-05, 1.0559999999992797e-06, 1.1264000000000413e-05, 1.1110000000015552e-06, 2.213899999999741e-05, 1.054999999999806e-06, 1.8500000000001154e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.054999999999806e-06, 1.944499999999988e-05, 1.1249999999976557e-06, 2.5278000000000106e-05, 1.0690000000028455e-06, 2.0985999999997146e-05, 1.0560000000027492e-06, 2.5040999999999952e-05, 1.0839999999984196e-06, 2.0972000000001045e-05, 1.068999999999376e-06, 2.1348000000000894e-05, 1.0270000000006663e-06, 2.2541999999996926e-05, 1.0560000000027492e-06, 1.1957999999999414e-05, 1.0969999999985158e-06, 2.1277999999999575e-05, 1.054999999999806e-06, 3.0028000000001387e-05, 1.0559999999992797e-06, 2.1929999999999866e-05, 1.070000000002319e-06, 2.665299999999801e-05, 1.000000000001e-06], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:59.542" endtime="20201112 12:41:59.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.538" endtime="20201112 12:41:59.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.551" level="INFO">${RESULT} = [{'time': 0.018304917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018336861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.547" endtime="20201112 12:41:59.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.564" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018304917, 0.018336861, 0.018357667, 0.018375986, 0.018402403, 0.018415431, 0.018442139, 0.018465444, 0.018491528, 0.018515167, 0.018533458, 0.0185465, 0.018562944, 0.0185825, 0.018604583,...</msg>
<status status="PASS" starttime="20201112 12:41:59.552" endtime="20201112 12:41:59.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.568" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:59.567" endtime="20201112 12:41:59.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.571" level="INFO">VALUE: [1.1809999999994047e-06, 1.0419999999997098e-06, 9.860000000014302e-07, 1.068999999999376e-06, 1.070000000002319e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0270000000006663e-06, 1.000000000001e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0970000000019853e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.0550000000032755e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.0690000000028455e-06, 1.0560000000027492e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.0270000000006663e-06, 1.0560000000027492e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.000000000001e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.569" endtime="20201112 12:41:59.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.565" endtime="20201112 12:41:59.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.574" endtime="20201112 12:41:59.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:41:59.578" endtime="20201112 12:41:59.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.575" endtime="20201112 12:41:59.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.572" endtime="20201112 12:41:59.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.171" endtime="20201112 12:41:59.598"></status>
</kw>
<msg timestamp="20201112 12:41:59.599" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.606" endtime="20201112 12:41:59.615"></status>
</kw>
<msg timestamp="20201112 12:41:59.616" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.605" endtime="20201112 12:41:59.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:41:59.617" endtime="20201112 12:41:59.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.619" endtime="20201112 12:41:59.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.602" endtime="20201112 12:41:59.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.600" endtime="20201112 12:41:59.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.628" endtime="20201112 12:41:59.912"></status>
</kw>
<msg timestamp="20201112 12:41:59.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.626" endtime="20201112 12:41:59.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:41:59.916" endtime="20201112 12:41:59.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.925" endtime="20201112 12:41:59.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.624" endtime="20201112 12:41:59.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.622" endtime="20201112 12:41:59.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.931" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:41:59.930" endtime="20201112 12:41:59.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.936" level="INFO">VALUE: [{'time': 0.018327222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018328403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018347139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8735999999998365e-05, 'source_diff': 1.8735999999998365e-05}, {'time': 0.018348222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018368944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0722000000000795e-05, 'source_diff': 2.0722000000000795e-05}, {'time': 0.018369944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018400917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097300000000011e-05, 'source_diff': 3.097300000000011e-05}, {'time': 0.018401958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018420514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8555999999999434e-05, 'source_diff': 1.8555999999999434e-05}, {'time': 0.018421514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018440333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881899999999978e-05, 'source_diff': 1.881899999999978e-05}, {'time': 0.018441389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018453667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.01845475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018478194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3444000000000936e-05, 'source_diff': 2.3444000000000936e-05}, {'time': 0.018479333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018509611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.018510667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018535792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.512499999999737e-05, 'source_diff': 2.512499999999737e-05}, {'time': 0.018536792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018557458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0665999999999046e-05, 'source_diff': 2.0665999999999046e-05}, {'time': 0.018558556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018584181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.562500000000134e-05, 'source_diff': 2.562500000000134e-05}, {'time': 0.018585236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018602806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7569999999998004e-05, 'source_diff': 1.7569999999998004e-05}, {'time': 0.018603861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018634569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.070800000000082e-05, 'source_diff': 3.070800000000082e-05}, {'time': 0.018635569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018650653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5083999999998543e-05, 'source_diff': 1.5083999999998543e-05}, {'time': 0.018651708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018664917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3209000000000137e-05, 'source_diff': 1.3209000000000137e-05}, {'time': 0.018665972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018679819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018680889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018695639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.018696694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018712708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6014000000001694e-05, 'source_diff': 1.6014000000001694e-05}, {'time': 0.018713764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018731042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7277999999999044e-05, 'source_diff': 1.7277999999999044e-05}, {'time': 0.018732083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018751833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.018752903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018782319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.941599999999739e-05, 'source_diff': 2.941599999999739e-05}, {'time': 0.018783375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018795639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.018796694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018816125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.943100000000031e-05, 'source_diff': 1.943100000000031e-05}, {'time': 0.018817194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018846, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8806000000002746e-05, 'source_diff': 2.8806000000002746e-05}, {'time': 0.018847042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018872083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5040999999999952e-05, 'source_diff': 2.5040999999999952e-05}, {'time': 0.018873153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018899458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6305000000000772e-05, 'source_diff': 2.6305000000000772e-05}, {'time': 0.018900514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018918069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.755499999999896e-05, 'source_diff': 1.755499999999896e-05}, {'time': 0.018919125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018931403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.018932458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018962486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0028000000001387e-05, 'source_diff': 3.0028000000001387e-05}, {'time': 0.018963556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018992958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402000000001288e-05, 'source_diff': 2.9402000000001288e-05}, {'time': 0.018994014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019016889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.019017944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019034597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.665300000000189e-05, 'source_diff': 1.665300000000189e-05}, {'time': 0.019035667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019050167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.019051153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019065292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.019066375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019089236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.019090319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019119056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.873699999999743e-05, 'source_diff': 2.873699999999743e-05}, {'time': 0.019120139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019133972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.019135014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019161611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.019162681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019192139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9457999999999568e-05, 'source_diff': 2.9457999999999568e-05}, {'time': 0.019193139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019220681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7541999999998457e-05, 'source_diff': 2.7541999999998457e-05}, {'time': 0.01922175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019244625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287500000000206e-05, 'source_diff': 2.287500000000206e-05}, {'time': 0.019245708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019271028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5319999999998816e-05, 'source_diff': 2.5319999999998816e-05}, {'time': 0.019272083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019287792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5709000000002638e-05, 'source_diff': 1.5709000000002638e-05}, {'time': 0.019288861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019310167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1305999999998715e-05, 'source_diff': 2.1305999999998715e-05}, {'time': 0.019311222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019341278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0056000000000527e-05, 'source_diff': 3.0056000000000527e-05}, {'time': 0.019342306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019361431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.019362486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019386611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.019387667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01940025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2583000000000039e-05, 'source_diff': 1.2583000000000039e-05}, {'time': 0.019401306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019431056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9749999999998528e-05, 'source_diff': 2.9749999999998528e-05}, {'time': 0.019432097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}]</msg>
<status status="PASS" starttime="20201112 12:41:59.932" endtime="20201112 12:41:59.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.928" endtime="20201112 12:41:59.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:41:59.962" level="INFO">${debug-compressed} = {'time': [0.018327222, 0.018328403, 0.018347139, 0.018348222, 0.018368944, 0.018369944, 0.018400917, 0.018401958, 0.018420514, 0.018421514, 0.018440333, 0.018441389, 0.018453667, 0.01845475, 0.0184781...</msg>
<status status="PASS" starttime="20201112 12:41:59.939" endtime="20201112 12:41:59.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.966" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:41:59.965" endtime="20201112 12:41:59.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.970" level="INFO">VALUE: {'time': [0.018327222, 0.018328403, 0.018347139, 0.018348222, 0.018368944, 0.018369944, 0.018400917, 0.018401958, 0.018420514, 0.018421514, 0.018440333, 0.018441389, 0.018453667, 0.01845475, 0.018478194, 0.018479333, 0.018509611, 0.018510667, 0.018535792, 0.018536792, 0.018557458, 0.018558556, 0.018584181, 0.018585236, 0.018602806, 0.018603861, 0.018634569, 0.018635569, 0.018650653, 0.018651708, 0.018664917, 0.018665972, 0.018679819, 0.018680889, 0.018695639, 0.018696694, 0.018712708, 0.018713764, 0.018731042, 0.018732083, 0.018751833, 0.018752903, 0.018782319, 0.018783375, 0.018795639, 0.018796694, 0.018816125, 0.018817194, 0.018846, 0.018847042, 0.018872083, 0.018873153, 0.018899458, 0.018900514, 0.018918069, 0.018919125, 0.018931403, 0.018932458, 0.018962486, 0.018963556, 0.018992958, 0.018994014, 0.019016889, 0.019017944, 0.019034597, 0.019035667, 0.019050167, 0.019051153, 0.019065292, 0.019066375, 0.019089236, 0.019090319, 0.019119056, 0.019120139, 0.019133972, 0.019135014, 0.019161611, 0.019162681, 0.019192139, 0.019193139, 0.019220681, 0.01922175, 0.019244625, 0.019245708, 0.019271028, 0.019272083, 0.019287792, 0.019288861, 0.019310167, 0.019311222, 0.019341278, 0.019342306, 0.019361431, 0.019362486, 0.019386611, 0.019387667, 0.01940025, 0.019401306, 0.019431056, 0.019432097], 'source_diff': [0, 1.1809999999994047e-06, 1.8735999999998365e-05, 1.0830000000024154e-06, 2.0722000000000795e-05, 9.999999999975306e-07, 3.097300000000011e-05, 1.0410000000002362e-06, 1.8555999999999434e-05, 1.000000000001e-06, 1.881899999999978e-05, 1.0559999999992797e-06, 1.2278000000000983e-05, 1.082999999998946e-06, 2.3444000000000936e-05, 1.139000000000695e-06, 3.0277999999998167e-05, 1.0560000000027492e-06, 2.512499999999737e-05, 1.000000000001e-06, 2.0665999999999046e-05, 1.098000000001459e-06, 2.562500000000134e-05, 1.054999999999806e-06, 1.7569999999998004e-05, 1.054999999999806e-06, 3.070800000000082e-05, 1.000000000001e-06, 1.5083999999998543e-05, 1.054999999999806e-06, 1.3209000000000137e-05, 1.054999999999806e-06, 1.3847000000000859e-05, 1.0699999999988496e-06, 1.4750000000000874e-05, 1.054999999999806e-06, 1.6014000000001694e-05, 1.0559999999992797e-06, 1.7277999999999044e-05, 1.0410000000002362e-06, 1.9749999999998935e-05, 1.070000000002319e-06, 2.941599999999739e-05, 1.0560000000027492e-06, 1.2263999999997943e-05, 1.054999999999806e-06, 1.943100000000031e-05, 1.068999999999376e-06, 2.8806000000002746e-05, 1.0419999999997098e-06, 2.5040999999999952e-05, 1.0699999999988496e-06, 2.6305000000000772e-05, 1.0559999999992797e-06, 1.755499999999896e-05, 1.0559999999992797e-06, 1.2278000000000983e-05, 1.054999999999806e-06, 3.0028000000001387e-05, 1.0699999999988496e-06, 2.9402000000001288e-05, 1.0559999999992797e-06, 2.287499999999859e-05, 1.054999999999806e-06, 1.665300000000189e-05, 1.0699999999988496e-06, 1.4500000000000624e-05, 9.860000000014302e-07, 1.4138999999999818e-05, 1.082999999998946e-06, 2.286099999999902e-05, 1.0830000000024154e-06, 2.873699999999743e-05, 1.0830000000024154e-06, 1.383299999999782e-05, 1.0419999999997098e-06, 2.6596999999999732e-05, 1.070000000002319e-06, 2.9457999999999568e-05, 1.000000000001e-06, 2.7541999999998457e-05, 1.068999999999376e-06, 2.287500000000206e-05, 1.082999999998946e-06, 2.5319999999998816e-05, 1.054999999999806e-06, 1.5709000000002638e-05, 1.068999999999376e-06, 2.1305999999998715e-05, 1.054999999999806e-06, 3.0056000000000527e-05, 1.02800000000014e-06, 1.912499999999831e-05, 1.0550000000032755e-06, 2.412499999999984e-05, 1.0559999999992797e-06, 1.2583000000000039e-05, 1.0559999999992797e-06, 2.9749999999998528e-05, 1.0410000000002362e-06], 'diff': [0, 1.1809999999994047e-06, 1.8735999999998365e-05, 1.0830000000024154e-06, 2.0722000000000795e-05, 9.999999999975306e-07, 3.097300000000011e-05, 1.0410000000002362e-06, 1.8555999999999434e-05, 1.000000000001e-06, 1.881899999999978e-05, 1.0559999999992797e-06, 1.2278000000000983e-05, 1.082999999998946e-06, 2.3444000000000936e-05, 1.139000000000695e-06, 3.0277999999998167e-05, 1.0560000000027492e-06, 2.512499999999737e-05, 1.000000000001e-06, 2.0665999999999046e-05, 1.098000000001459e-06, 2.562500000000134e-05, 1.054999999999806e-06, 1.7569999999998004e-05, 1.054999999999806e-06, 3.070800000000082e-05, 1.000000000001e-06, 1.5083999999998543e-05, 1.054999999999806e-06, 1.3209000000000137e-05, 1.054999999999806e-06, 1.3847000000000859e-05, 1.0699999999988496e-06, 1.4750000000000874e-05, 1.054999999999806e-06, 1.6014000000001694e-05, 1.0559999999992797e-06, 1.7277999999999044e-05, 1.0410000000002362e-06, 1.9749999999998935e-05, 1.070000000002319e-06, 2.941599999999739e-05, 1.0560000000027492e-06, 1.2263999999997943e-05, 1.054999999999806e-06, 1.943100000000031e-05, 1.068999999999376e-06, 2.8806000000002746e-05, 1.0419999999997098e-06, 2.5040999999999952e-05, 1.0699999999988496e-06, 2.6305000000000772e-05, 1.0559999999992797e-06, 1.755499999999896e-05, 1.0559999999992797e-06, 1.2278000000000983e-05, 1.054999999999806e-06, 3.0028000000001387e-05, 1.0699999999988496e-06, 2.9402000000001288e-05, 1.0559999999992797e-06, 2.287499999999859e-05, 1.054999999999806e-06, 1.665300000000189e-05, 1.0699999999988496e-06, 1.4500000000000624e-05, 9.860000000014302e-07, 1.4138999999999818e-05, 1.082999999998946e-06, 2.286099999999902e-05, 1.0830000000024154e-06, 2.873699999999743e-05, 1.0830000000024154e-06, 1.383299999999782e-05, 1.0419999999997098e-06, 2.6596999999999732e-05, 1.070000000002319e-06, 2.9457999999999568e-05, 1.000000000001e-06, 2.7541999999998457e-05, 1.068999999999376e-06, 2.287500000000206e-05, 1.082999999998946e-06, 2.5319999999998816e-05, 1.054999999999806e-06, 1.5709000000002638e-05, 1.068999999999376e-06, 2.1305999999998715e-05, 1.054999999999806e-06, 3.0056000000000527e-05, 1.02800000000014e-06, 1.912499999999831e-05, 1.0550000000032755e-06, 2.412499999999984e-05, 1.0559999999992797e-06, 1.2583000000000039e-05, 1.0559999999992797e-06, 2.9749999999998528e-05, 1.0410000000002362e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:41:59.967" endtime="20201112 12:41:59.971"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.963" endtime="20201112 12:41:59.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:41:59.976" level="INFO">${RESULT} = [{'time': 0.018328403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018348222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:41:59.973" endtime="20201112 12:41:59.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:41:59.989" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018328403, 0.018348222, 0.018369944, 0.018401958, 0.018421514, 0.018441389, 0.01845475, 0.018479333, 0.018510667, 0.018536792, 0.018558556, 0.018585236, 0.018603861, 0.018635569, 0.0186517...</msg>
<status status="PASS" starttime="20201112 12:41:59.977" endtime="20201112 12:41:59.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.993" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:41:59.992" endtime="20201112 12:41:59.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:41:59.995" level="INFO">VALUE: [1.1809999999994047e-06, 1.0830000000024154e-06, 9.999999999975306e-07, 1.0410000000002362e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.139000000000695e-06, 1.0560000000027492e-06, 1.000000000001e-06, 1.098000000001459e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 9.860000000014302e-07, 1.082999999998946e-06, 1.0830000000024154e-06, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.070000000002319e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.0550000000032755e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06]</msg>
<status status="PASS" starttime="20201112 12:41:59.994" endtime="20201112 12:41:59.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.990" endtime="20201112 12:41:59.996"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:41:59.998" endtime="20201112 12:42:00.000"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.002" endtime="20201112 12:42:00.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.000" endtime="20201112 12:42:00.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.997" endtime="20201112 12:42:00.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:59.599" endtime="20201112 12:42:00.023"></status>
</kw>
<msg timestamp="20201112 12:42:00.023" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.031" endtime="20201112 12:42:00.040"></status>
</kw>
<msg timestamp="20201112 12:42:00.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.029" endtime="20201112 12:42:00.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.041" endtime="20201112 12:42:00.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.043" endtime="20201112 12:42:00.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.026" endtime="20201112 12:42:00.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.025" endtime="20201112 12:42:00.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.052" endtime="20201112 12:42:00.339"></status>
</kw>
<msg timestamp="20201112 12:42:00.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.051" endtime="20201112 12:42:00.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018459681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.343" endtime="20201112 12:42:00.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.351" endtime="20201112 12:42:00.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.048" endtime="20201112 12:42:00.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.047" endtime="20201112 12:42:00.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.358" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:00.357" endtime="20201112 12:42:00.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.363" level="INFO">VALUE: [{'time': 0.018459681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018460875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1940000000029705e-06, 'source_diff': 1.1940000000029705e-06}, {'time': 0.018472083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1207999999998663e-05, 'source_diff': 1.1207999999998663e-05}, {'time': 0.018473139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018504042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.090299999999879e-05, 'source_diff': 3.090299999999879e-05}, {'time': 0.018505097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018521417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6319999999996754e-05, 'source_diff': 1.6319999999996754e-05}, {'time': 0.0185225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018548153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.018549208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018571528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2319999999999285e-05, 'source_diff': 2.2319999999999285e-05}, {'time': 0.018572514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018592264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.018593319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018621486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.816699999999908e-05, 'source_diff': 2.816699999999908e-05}, {'time': 0.018622597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018652278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9681000000000152e-05, 'source_diff': 2.9681000000000152e-05}, {'time': 0.018653319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018681486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.816699999999908e-05, 'source_diff': 2.816699999999908e-05}, {'time': 0.018682542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018696389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.018697431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018712514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.508299999999907e-05, 'source_diff': 1.508299999999907e-05}, {'time': 0.018713569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1306000000002184e-05, 'source_diff': 2.1306000000002184e-05}, {'time': 0.018735958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018750403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4444999999998348e-05, 'source_diff': 1.4444999999998348e-05}, {'time': 0.018751444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018777417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.597300000000205e-05, 'source_diff': 2.597300000000205e-05}, {'time': 0.018778486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018795736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.018796806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018823083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6277000000001632e-05, 'source_diff': 2.6277000000001632e-05}, {'time': 0.018824153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018850431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.0188515, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018863167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.018864222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018888319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.018889389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018914431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5041999999999426e-05, 'source_diff': 2.5041999999999426e-05}, {'time': 0.018915486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018929639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4153000000002858e-05, 'source_diff': 1.4153000000002858e-05}, {'time': 0.018930681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018944514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.383299999999782e-05, 'source_diff': 1.383299999999782e-05}, {'time': 0.018945639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018959722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.408299999999807e-05, 'source_diff': 1.408299999999807e-05}, {'time': 0.018960778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018979292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8513999999997255e-05, 'source_diff': 1.8513999999997255e-05}, {'time': 0.018980347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018999472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912499999999831e-05, 'source_diff': 1.912499999999831e-05}, {'time': 0.019000542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019016861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.019017903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019029181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.019030264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019057403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7138999999998942e-05, 'source_diff': 2.7138999999998942e-05}, {'time': 0.019058472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019071722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.019072736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019102153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.01910325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019130722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7472000000000607e-05, 'source_diff': 2.7472000000000607e-05}, {'time': 0.019131792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.097199999999717e-05, 'source_diff': 3.097199999999717e-05}, {'time': 0.019163806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019191653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.019192722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019222819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0096999999999763e-05, 'source_diff': 3.0096999999999763e-05}, {'time': 0.019223819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019237639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3820000000001192e-05, 'source_diff': 1.3820000000001192e-05}, {'time': 0.019238722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019251917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.019252972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019275819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.284699999999945e-05, 'source_diff': 2.284699999999945e-05}, {'time': 0.019276889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019290097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.019291153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019304042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2889000000002038e-05, 'source_diff': 1.2889000000002038e-05}, {'time': 0.019305111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019320514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.540300000000064e-05, 'source_diff': 1.540300000000064e-05}, {'time': 0.019321569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019342556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.098700000000009e-05, 'source_diff': 2.098700000000009e-05}, {'time': 0.019343611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019372097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8486000000001177e-05, 'source_diff': 2.8486000000001177e-05}, {'time': 0.019373153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019391958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880500000000021e-05, 'source_diff': 1.880500000000021e-05}, {'time': 0.019393028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019406889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3861000000000429e-05, 'source_diff': 1.3861000000000429e-05}, {'time': 0.019407931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019428625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0694000000001656e-05, 'source_diff': 2.0694000000001656e-05}, {'time': 0.019429681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019446917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7236000000000334e-05, 'source_diff': 1.7236000000000334e-05}, {'time': 0.019447986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019472111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.412499999999984e-05, 'source_diff': 2.412499999999984e-05}, {'time': 0.019473153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.01949475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.159700000000167e-05, 'source_diff': 2.159700000000167e-05}, {'time': 0.019495861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019513069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7208000000001195e-05, 'source_diff': 1.7208000000001195e-05}, {'time': 0.019514139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:00.359" endtime="20201112 12:42:00.364"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.355" endtime="20201112 12:42:00.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:00.388" level="INFO">${debug-compressed} = {'time': [0.018459681, 0.018460875, 0.018472083, 0.018473139, 0.018504042, 0.018505097, 0.018521417, 0.0185225, 0.018548153, 0.018549208, 0.018571528, 0.018572514, 0.018592264, 0.018593319, 0.01862148...</msg>
<status status="PASS" starttime="20201112 12:42:00.365" endtime="20201112 12:42:00.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.392" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:00.391" endtime="20201112 12:42:00.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.396" level="INFO">VALUE: {'time': [0.018459681, 0.018460875, 0.018472083, 0.018473139, 0.018504042, 0.018505097, 0.018521417, 0.0185225, 0.018548153, 0.018549208, 0.018571528, 0.018572514, 0.018592264, 0.018593319, 0.018621486, 0.018622597, 0.018652278, 0.018653319, 0.018681486, 0.018682542, 0.018696389, 0.018697431, 0.018712514, 0.018713569, 0.018734875, 0.018735958, 0.018750403, 0.018751444, 0.018777417, 0.018778486, 0.018795736, 0.018796806, 0.018823083, 0.018824153, 0.018850431, 0.0188515, 0.018863167, 0.018864222, 0.018888319, 0.018889389, 0.018914431, 0.018915486, 0.018929639, 0.018930681, 0.018944514, 0.018945639, 0.018959722, 0.018960778, 0.018979292, 0.018980347, 0.018999472, 0.019000542, 0.019016861, 0.019017903, 0.019029181, 0.019030264, 0.019057403, 0.019058472, 0.019071722, 0.019072736, 0.019102153, 0.01910325, 0.019130722, 0.019131792, 0.019162764, 0.019163806, 0.019191653, 0.019192722, 0.019222819, 0.019223819, 0.019237639, 0.019238722, 0.019251917, 0.019252972, 0.019275819, 0.019276889, 0.019290097, 0.019291153, 0.019304042, 0.019305111, 0.019320514, 0.019321569, 0.019342556, 0.019343611, 0.019372097, 0.019373153, 0.019391958, 0.019393028, 0.019406889, 0.019407931, 0.019428625, 0.019429681, 0.019446917, 0.019447986, 0.019472111, 0.019473153, 0.01949475, 0.019495861, 0.019513069, 0.019514139], 'source_diff': [0, 1.1940000000029705e-06, 1.1207999999998663e-05, 1.0559999999992797e-06, 3.090299999999879e-05, 1.0550000000032755e-06, 1.6319999999996754e-05, 1.0830000000024154e-06, 2.565300000000048e-05, 1.054999999999806e-06, 2.2319999999999285e-05, 9.859999999979607e-07, 1.9750000000002405e-05, 1.054999999999806e-06, 2.816699999999908e-05, 1.1110000000015552e-06, 2.9681000000000152e-05, 1.0410000000002362e-06, 2.816699999999908e-05, 1.0559999999992797e-06, 1.3847000000000859e-05, 1.0419999999997098e-06, 1.508299999999907e-05, 1.054999999999806e-06, 2.1306000000002184e-05, 1.082999999998946e-06, 1.4444999999998348e-05, 1.0410000000002362e-06, 2.597300000000205e-05, 1.068999999999376e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 2.6277000000001632e-05, 1.0699999999988496e-06, 2.6278000000001106e-05, 1.068999999999376e-06, 1.1666999999999927e-05, 1.054999999999806e-06, 2.40970000000007e-05, 1.0699999999988496e-06, 2.5041999999999426e-05, 1.054999999999806e-06, 1.4153000000002858e-05, 1.0419999999997098e-06, 1.383299999999782e-05, 1.125000000001125e-06, 1.408299999999807e-05, 1.0560000000027492e-06, 1.8513999999997255e-05, 1.0550000000032755e-06, 1.912499999999831e-05, 1.0699999999988496e-06, 1.631900000000075e-05, 1.0419999999997098e-06, 1.1277999999999982e-05, 1.0830000000024154e-06, 2.7138999999998942e-05, 1.068999999999376e-06, 1.3249999999999373e-05, 1.01400000000057e-06, 2.9417000000000332e-05, 1.0969999999985158e-06, 2.7472000000000607e-05, 1.070000000002319e-06, 3.097199999999717e-05, 1.0419999999997098e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 3.0096999999999763e-05, 1.000000000001e-06, 1.3820000000001192e-05, 1.082999999998946e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 2.284699999999945e-05, 1.0699999999988496e-06, 1.3208000000000664e-05, 1.0559999999992797e-06, 1.2889000000002038e-05, 1.068999999999376e-06, 1.540300000000064e-05, 1.054999999999806e-06, 2.098700000000009e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0559999999992797e-06, 1.880500000000021e-05, 1.0699999999988496e-06, 1.3861000000000429e-05, 1.0419999999997098e-06, 2.0694000000001656e-05, 1.0559999999992797e-06, 1.7236000000000334e-05, 1.068999999999376e-06, 2.412499999999984e-05, 1.0419999999997098e-06, 2.159700000000167e-05, 1.1109999999980857e-06, 1.7208000000001195e-05, 1.0699999999988496e-06], 'diff': [0, 1.1940000000029705e-06, 1.1207999999998663e-05, 1.0559999999992797e-06, 3.090299999999879e-05, 1.0550000000032755e-06, 1.6319999999996754e-05, 1.0830000000024154e-06, 2.565300000000048e-05, 1.054999999999806e-06, 2.2319999999999285e-05, 9.859999999979607e-07, 1.9750000000002405e-05, 1.054999999999806e-06, 2.816699999999908e-05, 1.1110000000015552e-06, 2.9681000000000152e-05, 1.0410000000002362e-06, 2.816699999999908e-05, 1.0559999999992797e-06, 1.3847000000000859e-05, 1.0419999999997098e-06, 1.508299999999907e-05, 1.054999999999806e-06, 2.1306000000002184e-05, 1.082999999998946e-06, 1.4444999999998348e-05, 1.0410000000002362e-06, 2.597300000000205e-05, 1.068999999999376e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 2.6277000000001632e-05, 1.0699999999988496e-06, 2.6278000000001106e-05, 1.068999999999376e-06, 1.1666999999999927e-05, 1.054999999999806e-06, 2.40970000000007e-05, 1.0699999999988496e-06, 2.5041999999999426e-05, 1.054999999999806e-06, 1.4153000000002858e-05, 1.0419999999997098e-06, 1.383299999999782e-05, 1.125000000001125e-06, 1.408299999999807e-05, 1.0560000000027492e-06, 1.8513999999997255e-05, 1.0550000000032755e-06, 1.912499999999831e-05, 1.0699999999988496e-06, 1.631900000000075e-05, 1.0419999999997098e-06, 1.1277999999999982e-05, 1.0830000000024154e-06, 2.7138999999998942e-05, 1.068999999999376e-06, 1.3249999999999373e-05, 1.01400000000057e-06, 2.9417000000000332e-05, 1.0969999999985158e-06, 2.7472000000000607e-05, 1.070000000002319e-06, 3.097199999999717e-05, 1.0419999999997098e-06, 2.7847000000000982e-05, 1.068999999999376e-06, 3.0096999999999763e-05, 1.000000000001e-06, 1.3820000000001192e-05, 1.082999999998946e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 2.284699999999945e-05, 1.0699999999988496e-06, 1.3208000000000664e-05, 1.0559999999992797e-06, 1.2889000000002038e-05, 1.068999999999376e-06, 1.540300000000064e-05, 1.054999999999806e-06, 2.098700000000009e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0559999999992797e-06, 1.880500000000021e-05, 1.0699999999988496e-06, 1.3861000000000429e-05, 1.0419999999997098e-06, 2.0694000000001656e-05, 1.0559999999992797e-06, 1.7236000000000334e-05, 1.068999999999376e-06, 2.412499999999984e-05, 1.0419999999997098e-06, 2.159700000000167e-05, 1.1109999999980857e-06, 1.7208000000001195e-05, 1.0699999999988496e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:00.393" endtime="20201112 12:42:00.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.389" endtime="20201112 12:42:00.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.402" level="INFO">${RESULT} = [{'time': 0.018460875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1940000000029705e-06, 'source_diff': 1.1940000000029705e-06}, {'time': 0.018473139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:00.398" endtime="20201112 12:42:00.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.415" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018460875, 0.018473139, 0.018505097, 0.0185225, 0.018549208, 0.018572514, 0.018593319, 0.018622597, 0.018653319, 0.018682542, 0.018697431, 0.018713569, 0.018735958, 0.018751444, 0.01877848...</msg>
<status status="PASS" starttime="20201112 12:42:00.402" endtime="20201112 12:42:00.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.419" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:00.418" endtime="20201112 12:42:00.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.421" level="INFO">VALUE: [1.1940000000029705e-06, 1.0559999999992797e-06, 1.0550000000032755e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 9.859999999979607e-07, 1.054999999999806e-06, 1.1110000000015552e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.125000000001125e-06, 1.0560000000027492e-06, 1.0550000000032755e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.068999999999376e-06, 1.01400000000057e-06, 1.0969999999985158e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.1109999999980857e-06, 1.0699999999988496e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.420" endtime="20201112 12:42:00.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.416" endtime="20201112 12:42:00.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.424" endtime="20201112 12:42:00.425"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.428" endtime="20201112 12:42:00.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.426" endtime="20201112 12:42:00.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.423" endtime="20201112 12:42:00.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.023" endtime="20201112 12:42:00.449"></status>
</kw>
<msg timestamp="20201112 12:42:00.450" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.457" endtime="20201112 12:42:00.466"></status>
</kw>
<msg timestamp="20201112 12:42:00.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.455" endtime="20201112 12:42:00.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.468" endtime="20201112 12:42:00.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.470" endtime="20201112 12:42:00.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.453" endtime="20201112 12:42:00.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.451" endtime="20201112 12:42:00.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.479" endtime="20201112 12:42:00.764"></status>
</kw>
<msg timestamp="20201112 12:42:00.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018411625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018412806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.477" endtime="20201112 12:42:00.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018411625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018412806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.768" endtime="20201112 12:42:00.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.777" endtime="20201112 12:42:00.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.475" endtime="20201112 12:42:00.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.473" endtime="20201112 12:42:00.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.783" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:00.782" endtime="20201112 12:42:00.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.788" level="INFO">VALUE: [{'time': 0.018411625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018412806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018426889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.408299999999807e-05, 'source_diff': 1.408299999999807e-05}, {'time': 0.018427931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.018447403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9471999999999545e-05, 'source_diff': 1.9471999999999545e-05}, {'time': 0.018448458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018466681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.822299999999777e-05, 'source_diff': 1.822299999999777e-05}, {'time': 0.018467694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.018487792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0097999999999644e-05, 'source_diff': 2.0097999999999644e-05}, {'time': 0.018488833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018502361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.018503417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018528472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5054999999999522e-05, 'source_diff': 2.5054999999999522e-05}, {'time': 0.0185295, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.01854675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.018547819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018569444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.0185705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018592736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.018593806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018624792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.098600000000021e-05, 'source_diff': 3.098600000000021e-05}, {'time': 0.018625847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018639097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3249999999999373e-05, 'source_diff': 1.3249999999999373e-05}, {'time': 0.018640097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018662667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2569999999999535e-05, 'source_diff': 2.2569999999999535e-05}, {'time': 0.018663722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018677222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.018678278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018699903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.018700972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018712236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.018713306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.0187305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7194000000001625e-05, 'source_diff': 1.7194000000001625e-05}, {'time': 0.018731556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018747264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5707999999999694e-05, 'source_diff': 1.5707999999999694e-05}, {'time': 0.018748319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018767472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915300000000092e-05, 'source_diff': 1.915300000000092e-05}, {'time': 0.018768528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.0187895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0972000000001045e-05, 'source_diff': 2.0972000000001045e-05}, {'time': 0.018790583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018816569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5985999999998677e-05, 'source_diff': 2.5985999999998677e-05}, {'time': 0.018817667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018846389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8722000000001857e-05, 'source_diff': 2.8722000000001857e-05}, {'time': 0.018847444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018860042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2597999999999082e-05, 'source_diff': 1.2597999999999082e-05}, {'time': 0.018861181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.018888625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7443999999997998e-05, 'source_diff': 2.7443999999997998e-05}, {'time': 0.018889708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018913181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.347299999999955e-05, 'source_diff': 2.347299999999955e-05}, {'time': 0.018914278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018941153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6874999999999122e-05, 'source_diff': 2.6874999999999122e-05}, {'time': 0.018942236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018956375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018957417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018973444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.602699999999832e-05, 'source_diff': 1.602699999999832e-05}, {'time': 0.0189745, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018989569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5069000000002969e-05, 'source_diff': 1.5069000000002969e-05}, {'time': 0.018990639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019002903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.019003972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019023417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944499999999988e-05, 'source_diff': 1.944499999999988e-05}, {'time': 0.019024472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019054181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.970899999999929e-05, 'source_diff': 2.970899999999929e-05}, {'time': 0.01905525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019071875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019072944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019088333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.53889999999976e-05, 'source_diff': 1.53889999999976e-05}, {'time': 0.019089403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019114444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5040999999999952e-05, 'source_diff': 2.5040999999999952e-05}, {'time': 0.0191155, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019142111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.019143181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019160111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6930000000001805e-05, 'source_diff': 1.6930000000001805e-05}, {'time': 0.019161167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019179361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.019180458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019197722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.019198764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019229083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0319000000000873e-05, 'source_diff': 3.0319000000000873e-05}, {'time': 0.019230153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019257694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7540999999998983e-05, 'source_diff': 2.7540999999998983e-05}, {'time': 0.01925875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019283181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443099999999837e-05, 'source_diff': 2.443099999999837e-05}, {'time': 0.019284236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019295528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291999999999552e-05, 'source_diff': 1.1291999999999552e-05}, {'time': 0.019296569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019307806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1237000000000746e-05, 'source_diff': 1.1237000000000746e-05}, {'time': 0.019308889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019333528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.463899999999991e-05, 'source_diff': 2.463899999999991e-05}, {'time': 0.019334583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019363069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8486000000001177e-05, 'source_diff': 2.8486000000001177e-05}, {'time': 0.019364125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019391986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7861000000000552e-05, 'source_diff': 2.7861000000000552e-05}, {'time': 0.019393042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019416847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.380500000000174e-05, 'source_diff': 2.380500000000174e-05}, {'time': 0.019417903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019433292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.019434361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019456611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2249999999997966e-05, 'source_diff': 2.2249999999997966e-05}, {'time': 0.019457722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:00.784" endtime="20201112 12:42:00.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.780" endtime="20201112 12:42:00.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:00.814" level="INFO">${debug-compressed} = {'time': [0.018411625, 0.018412806, 0.018426889, 0.018427931, 0.018447403, 0.018448458, 0.018466681, 0.018467694, 0.018487792, 0.018488833, 0.018502361, 0.018503417, 0.018528472, 0.0185295, 0.01854675...</msg>
<status status="PASS" starttime="20201112 12:42:00.791" endtime="20201112 12:42:00.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.818" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:00.817" endtime="20201112 12:42:00.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.822" level="INFO">VALUE: {'time': [0.018411625, 0.018412806, 0.018426889, 0.018427931, 0.018447403, 0.018448458, 0.018466681, 0.018467694, 0.018487792, 0.018488833, 0.018502361, 0.018503417, 0.018528472, 0.0185295, 0.01854675, 0.018547819, 0.018569444, 0.0185705, 0.018592736, 0.018593806, 0.018624792, 0.018625847, 0.018639097, 0.018640097, 0.018662667, 0.018663722, 0.018677222, 0.018678278, 0.018699903, 0.018700972, 0.018712236, 0.018713306, 0.0187305, 0.018731556, 0.018747264, 0.018748319, 0.018767472, 0.018768528, 0.0187895, 0.018790583, 0.018816569, 0.018817667, 0.018846389, 0.018847444, 0.018860042, 0.018861181, 0.018888625, 0.018889708, 0.018913181, 0.018914278, 0.018941153, 0.018942236, 0.018956375, 0.018957417, 0.018973444, 0.0189745, 0.018989569, 0.018990639, 0.019002903, 0.019003972, 0.019023417, 0.019024472, 0.019054181, 0.01905525, 0.019071875, 0.019072944, 0.019088333, 0.019089403, 0.019114444, 0.0191155, 0.019142111, 0.019143181, 0.019160111, 0.019161167, 0.019179361, 0.019180458, 0.019197722, 0.019198764, 0.019229083, 0.019230153, 0.019257694, 0.01925875, 0.019283181, 0.019284236, 0.019295528, 0.019296569, 0.019307806, 0.019308889, 0.019333528, 0.019334583, 0.019363069, 0.019364125, 0.019391986, 0.019393042, 0.019416847, 0.019417903, 0.019433292, 0.019434361, 0.019456611, 0.019457722], 'source_diff': [0, 1.1809999999994047e-06, 1.408299999999807e-05, 1.0420000000031793e-06, 1.9471999999999545e-05, 1.054999999999806e-06, 1.822299999999777e-05, 1.0130000000010964e-06, 2.0097999999999644e-05, 1.0410000000002362e-06, 1.3527999999998763e-05, 1.0560000000027492e-06, 2.5054999999999522e-05, 1.02800000000014e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 2.162500000000081e-05, 1.0559999999992797e-06, 2.2235999999998396e-05, 1.070000000002319e-06, 3.098600000000021e-05, 1.054999999999806e-06, 1.3249999999999373e-05, 1.000000000001e-06, 2.2569999999999535e-05, 1.054999999999806e-06, 1.3499999999999623e-05, 1.0559999999992797e-06, 2.162500000000081e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0699999999988496e-06, 1.7194000000001625e-05, 1.0559999999992797e-06, 1.5707999999999694e-05, 1.054999999999806e-06, 1.915300000000092e-05, 1.0559999999992797e-06, 2.0972000000001045e-05, 1.082999999998946e-06, 2.5985999999998677e-05, 1.098000000001459e-06, 2.8722000000001857e-05, 1.054999999999806e-06, 1.2597999999999082e-05, 1.139000000000695e-06, 2.7443999999997998e-05, 1.0830000000024154e-06, 2.347299999999955e-05, 1.0969999999985158e-06, 2.6874999999999122e-05, 1.0830000000024154e-06, 1.4138999999999818e-05, 1.0419999999997098e-06, 1.602699999999832e-05, 1.0559999999992797e-06, 1.5069000000002969e-05, 1.0699999999988496e-06, 1.2264000000001413e-05, 1.068999999999376e-06, 1.944499999999988e-05, 1.054999999999806e-06, 2.970899999999929e-05, 1.068999999999376e-06, 1.662499999999928e-05, 1.0690000000028455e-06, 1.53889999999976e-05, 1.070000000002319e-06, 2.5040999999999952e-05, 1.0559999999992797e-06, 2.6610999999999302e-05, 1.0699999999988496e-06, 1.6930000000001805e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0970000000019853e-06, 1.7263999999999474e-05, 1.0419999999997098e-06, 3.0319000000000873e-05, 1.0699999999988496e-06, 2.7540999999998983e-05, 1.0560000000027492e-06, 2.443099999999837e-05, 1.054999999999806e-06, 1.1291999999999552e-05, 1.0410000000002362e-06, 1.1237000000000746e-05, 1.082999999998946e-06, 2.463899999999991e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0559999999992797e-06, 2.7861000000000552e-05, 1.0559999999992797e-06, 2.380500000000174e-05, 1.0559999999992797e-06, 1.538900000000107e-05, 1.068999999999376e-06, 2.2249999999997966e-05, 1.1110000000015552e-06], 'diff': [0, 1.1809999999994047e-06, 1.408299999999807e-05, 1.0420000000031793e-06, 1.9471999999999545e-05, 1.054999999999806e-06, 1.822299999999777e-05, 1.0130000000010964e-06, 2.0097999999999644e-05, 1.0410000000002362e-06, 1.3527999999998763e-05, 1.0560000000027492e-06, 2.5054999999999522e-05, 1.02800000000014e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 2.162500000000081e-05, 1.0559999999992797e-06, 2.2235999999998396e-05, 1.070000000002319e-06, 3.098600000000021e-05, 1.054999999999806e-06, 1.3249999999999373e-05, 1.000000000001e-06, 2.2569999999999535e-05, 1.054999999999806e-06, 1.3499999999999623e-05, 1.0559999999992797e-06, 2.162500000000081e-05, 1.068999999999376e-06, 1.1264000000000413e-05, 1.0699999999988496e-06, 1.7194000000001625e-05, 1.0559999999992797e-06, 1.5707999999999694e-05, 1.054999999999806e-06, 1.915300000000092e-05, 1.0559999999992797e-06, 2.0972000000001045e-05, 1.082999999998946e-06, 2.5985999999998677e-05, 1.098000000001459e-06, 2.8722000000001857e-05, 1.054999999999806e-06, 1.2597999999999082e-05, 1.139000000000695e-06, 2.7443999999997998e-05, 1.0830000000024154e-06, 2.347299999999955e-05, 1.0969999999985158e-06, 2.6874999999999122e-05, 1.0830000000024154e-06, 1.4138999999999818e-05, 1.0419999999997098e-06, 1.602699999999832e-05, 1.0559999999992797e-06, 1.5069000000002969e-05, 1.0699999999988496e-06, 1.2264000000001413e-05, 1.068999999999376e-06, 1.944499999999988e-05, 1.054999999999806e-06, 2.970899999999929e-05, 1.068999999999376e-06, 1.662499999999928e-05, 1.0690000000028455e-06, 1.53889999999976e-05, 1.070000000002319e-06, 2.5040999999999952e-05, 1.0559999999992797e-06, 2.6610999999999302e-05, 1.0699999999988496e-06, 1.6930000000001805e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0970000000019853e-06, 1.7263999999999474e-05, 1.0419999999997098e-06, 3.0319000000000873e-05, 1.0699999999988496e-06, 2.7540999999998983e-05, 1.0560000000027492e-06, 2.443099999999837e-05, 1.054999999999806e-06, 1.1291999999999552e-05, 1.0410000000002362e-06, 1.1237000000000746e-05, 1.082999999998946e-06, 2.463899999999991e-05, 1.054999999999806e-06, 2.8486000000001177e-05, 1.0559999999992797e-06, 2.7861000000000552e-05, 1.0559999999992797e-06, 2.380500000000174e-05, 1.0559999999992797e-06, 1.538900000000107e-05, 1.068999999999376e-06, 2.2249999999997966e-05, 1.1110000000015552e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:00.819" endtime="20201112 12:42:00.823"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.815" endtime="20201112 12:42:00.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:00.827" level="INFO">${RESULT} = [{'time': 0.018412806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018427931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:00.824" endtime="20201112 12:42:00.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:00.840" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018412806, 0.018427931, 0.018448458, 0.018467694, 0.018488833, 0.018503417, 0.0185295, 0.018547819, 0.0185705, 0.018593806, 0.018625847, 0.018640097, 0.018663722, 0.018678278, 0.018700972,...</msg>
<status status="PASS" starttime="20201112 12:42:00.828" endtime="20201112 12:42:00.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.845" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:00.844" endtime="20201112 12:42:00.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.847" level="INFO">VALUE: [1.1809999999994047e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.0130000000010964e-06, 1.0410000000002362e-06, 1.0560000000027492e-06, 1.02800000000014e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.098000000001459e-06, 1.054999999999806e-06, 1.139000000000695e-06, 1.0830000000024154e-06, 1.0969999999985158e-06, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.1110000000015552e-06]</msg>
<status status="PASS" starttime="20201112 12:42:00.846" endtime="20201112 12:42:00.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.841" endtime="20201112 12:42:00.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.850" endtime="20201112 12:42:00.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:00.853" endtime="20201112 12:42:00.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.852" endtime="20201112 12:42:00.873"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.849" endtime="20201112 12:42:00.874"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.450" endtime="20201112 12:42:00.874"></status>
</kw>
<msg timestamp="20201112 12:42:00.874" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.882" endtime="20201112 12:42:00.891"></status>
</kw>
<msg timestamp="20201112 12:42:00.891" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.880" endtime="20201112 12:42:00.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:00.894" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:00.892" endtime="20201112 12:42:00.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.895" endtime="20201112 12:42:00.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.878" endtime="20201112 12:42:00.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.876" endtime="20201112 12:42:00.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:00.903" endtime="20201112 12:42:01.190"></status>
</kw>
<msg timestamp="20201112 12:42:01.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018295306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018296472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:00.902" endtime="20201112 12:42:01.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018295306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018296472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.194" endtime="20201112 12:42:01.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.203" endtime="20201112 12:42:01.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.899" endtime="20201112 12:42:01.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.898" endtime="20201112 12:42:01.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.209" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:01.208" endtime="20201112 12:42:01.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.214" level="INFO">VALUE: [{'time': 0.018295306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018296472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.018324611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.018325653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018349444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3790999999998702e-05, 'source_diff': 2.3790999999998702e-05}, {'time': 0.0183505, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018365569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5069000000002969e-05, 'source_diff': 1.5069000000002969e-05}, {'time': 0.018366639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018381097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4457999999998444e-05, 'source_diff': 1.4457999999998444e-05}, {'time': 0.018382222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018400653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.018401708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018419597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.018420667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018449153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8485999999997708e-05, 'source_diff': 2.8485999999997708e-05}, {'time': 0.018450194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018479, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8805999999999277e-05, 'source_diff': 2.8805999999999277e-05}, {'time': 0.018480042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018493861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3819000000001719e-05, 'source_diff': 1.3819000000001719e-05}, {'time': 0.018494931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.0185125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7569000000002e-05, 'source_diff': 1.7569000000002e-05}, {'time': 0.018513556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018535792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2235999999998396e-05, 'source_diff': 2.2235999999998396e-05}, {'time': 0.018536847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018556903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0056000000000934e-05, 'source_diff': 2.0056000000000934e-05}, {'time': 0.018557972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018575556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7584000000001043e-05, 'source_diff': 1.7584000000001043e-05}, {'time': 0.018576597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018588944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2346999999999358e-05, 'source_diff': 1.2346999999999358e-05}, {'time': 0.018589931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.870000000009038e-07, 'source_diff': 9.870000000009038e-07}, {'time': 0.01860375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.381899999999825e-05, 'source_diff': 1.381899999999825e-05}, {'time': 0.018604819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018622069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.018623139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018649125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5985999999998677e-05, 'source_diff': 2.5985999999998677e-05}, {'time': 0.018650167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018677403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.018678458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018705681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722299999999983e-05, 'source_diff': 2.722299999999983e-05}, {'time': 0.018706764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018721833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.50689999999995e-05, 'source_diff': 1.50689999999995e-05}, {'time': 0.018722889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018740153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.018741194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018755958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.018757069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018774681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7612000000000183e-05, 'source_diff': 1.7612000000000183e-05}, {'time': 0.018775681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018799167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3485999999999646e-05, 'source_diff': 2.3485999999999646e-05}, {'time': 0.018800194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.018819069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.887500000000153e-05, 'source_diff': 1.887500000000153e-05}, {'time': 0.018820069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018848542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847300000000108e-05, 'source_diff': 2.847300000000108e-05}, {'time': 0.018849611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018863125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3514000000002663e-05, 'source_diff': 1.3514000000002663e-05}, {'time': 0.018864222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018895153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.09310000000014e-05, 'source_diff': 3.09310000000014e-05}, {'time': 0.018896222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018924694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8471999999998138e-05, 'source_diff': 2.8471999999998138e-05}, {'time': 0.01892575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018944264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8513999999997255e-05, 'source_diff': 1.8513999999997255e-05}, {'time': 0.018945306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018964125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881899999999978e-05, 'source_diff': 1.881899999999978e-05}, {'time': 0.018965181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018992097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6915999999998358e-05, 'source_diff': 2.6915999999998358e-05}, {'time': 0.018993167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019004819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1652000000000884e-05, 'source_diff': 1.1652000000000884e-05}, {'time': 0.019005931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.019023444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.751300000000025e-05, 'source_diff': 1.751300000000025e-05}, {'time': 0.019024528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019043319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.879100000000064e-05, 'source_diff': 1.879100000000064e-05}, {'time': 0.019044389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019055653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1264000000000413e-05, 'source_diff': 1.1264000000000413e-05}, {'time': 0.019056708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019083569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.686100000000302e-05, 'source_diff': 2.686100000000302e-05}, {'time': 0.019084625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019109694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5068999999999092e-05, 'source_diff': 2.5068999999999092e-05}, {'time': 0.019110764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019124639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3874999999999998e-05, 'source_diff': 1.3874999999999998e-05}, {'time': 0.019125625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.019151931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6306000000000246e-05, 'source_diff': 2.6306000000000246e-05}, {'time': 0.019153042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019180528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7486000000000177e-05, 'source_diff': 2.7486000000000177e-05}, {'time': 0.019181583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019205431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3847999999999925e-05, 'source_diff': 2.3847999999999925e-05}, {'time': 0.019206472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019218722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2250000000001843e-05, 'source_diff': 1.2250000000001843e-05}, {'time': 0.019219819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019243583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3764000000002505e-05, 'source_diff': 2.3764000000002505e-05}, {'time': 0.019244653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019269083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4429999999998897e-05, 'source_diff': 2.4429999999998897e-05}, {'time': 0.019270125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019300167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0042000000000957e-05, 'source_diff': 3.0042000000000957e-05}, {'time': 0.019301222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019321292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0070000000000504e-05, 'source_diff': 2.0070000000000504e-05}, {'time': 0.019322361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019340861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8500000000001154e-05, 'source_diff': 1.8500000000001154e-05}, {'time': 0.019341917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019362292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037499999999956e-05, 'source_diff': 2.037499999999956e-05}, {'time': 0.019363347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:01.210" endtime="20201112 12:42:01.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.206" endtime="20201112 12:42:01.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:01.241" level="INFO">${debug-compressed} = {'time': [0.018295306, 0.018296472, 0.018324611, 0.018325653, 0.018349444, 0.0183505, 0.018365569, 0.018366639, 0.018381097, 0.018382222, 0.018400653, 0.018401708, 0.018419597, 0.018420667, 0.01844915...</msg>
<status status="PASS" starttime="20201112 12:42:01.217" endtime="20201112 12:42:01.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.244" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:01.244" endtime="20201112 12:42:01.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.249" level="INFO">VALUE: {'time': [0.018295306, 0.018296472, 0.018324611, 0.018325653, 0.018349444, 0.0183505, 0.018365569, 0.018366639, 0.018381097, 0.018382222, 0.018400653, 0.018401708, 0.018419597, 0.018420667, 0.018449153, 0.018450194, 0.018479, 0.018480042, 0.018493861, 0.018494931, 0.0185125, 0.018513556, 0.018535792, 0.018536847, 0.018556903, 0.018557972, 0.018575556, 0.018576597, 0.018588944, 0.018589931, 0.01860375, 0.018604819, 0.018622069, 0.018623139, 0.018649125, 0.018650167, 0.018677403, 0.018678458, 0.018705681, 0.018706764, 0.018721833, 0.018722889, 0.018740153, 0.018741194, 0.018755958, 0.018757069, 0.018774681, 0.018775681, 0.018799167, 0.018800194, 0.018819069, 0.018820069, 0.018848542, 0.018849611, 0.018863125, 0.018864222, 0.018895153, 0.018896222, 0.018924694, 0.01892575, 0.018944264, 0.018945306, 0.018964125, 0.018965181, 0.018992097, 0.018993167, 0.019004819, 0.019005931, 0.019023444, 0.019024528, 0.019043319, 0.019044389, 0.019055653, 0.019056708, 0.019083569, 0.019084625, 0.019109694, 0.019110764, 0.019124639, 0.019125625, 0.019151931, 0.019153042, 0.019180528, 0.019181583, 0.019205431, 0.019206472, 0.019218722, 0.019219819, 0.019243583, 0.019244653, 0.019269083, 0.019270125, 0.019300167, 0.019301222, 0.019321292, 0.019322361, 0.019340861, 0.019341917, 0.019362292, 0.019363347], 'source_diff': [0, 1.1660000000003612e-06, 2.8138999999999942e-05, 1.0419999999997098e-06, 2.3790999999998702e-05, 1.0559999999992797e-06, 1.5069000000002969e-05, 1.0699999999988496e-06, 1.4457999999998444e-05, 1.125000000001125e-06, 1.843099999999931e-05, 1.054999999999806e-06, 1.78890000000001e-05, 1.070000000002319e-06, 2.8485999999997708e-05, 1.0410000000002362e-06, 2.8805999999999277e-05, 1.0419999999997098e-06, 1.3819000000001719e-05, 1.0699999999988496e-06, 1.7569000000002e-05, 1.0559999999992797e-06, 2.2235999999998396e-05, 1.054999999999806e-06, 2.0056000000000934e-05, 1.068999999999376e-06, 1.7584000000001043e-05, 1.0410000000002362e-06, 1.2346999999999358e-05, 9.870000000009038e-07, 1.381899999999825e-05, 1.0690000000028455e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 2.5985999999998677e-05, 1.0419999999997098e-06, 2.7235999999999927e-05, 1.054999999999806e-06, 2.722299999999983e-05, 1.0830000000024154e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 1.7263999999999474e-05, 1.0410000000002362e-06, 1.4764000000000443e-05, 1.1110000000015552e-06, 1.7612000000000183e-05, 9.999999999975306e-07, 2.3485999999999646e-05, 1.0270000000006663e-06, 1.887500000000153e-05, 9.999999999975306e-07, 2.847300000000108e-05, 1.068999999999376e-06, 1.3514000000002663e-05, 1.0969999999985158e-06, 3.09310000000014e-05, 1.068999999999376e-06, 2.8471999999998138e-05, 1.0560000000027492e-06, 1.8513999999997255e-05, 1.0419999999997098e-06, 1.881899999999978e-05, 1.0560000000027492e-06, 2.6915999999998358e-05, 1.0699999999988496e-06, 1.1652000000000884e-05, 1.1120000000010288e-06, 1.751300000000025e-05, 1.0839999999984196e-06, 1.879100000000064e-05, 1.0699999999988496e-06, 1.1264000000000413e-05, 1.054999999999806e-06, 2.686100000000302e-05, 1.0559999999992797e-06, 2.5068999999999092e-05, 1.0699999999988496e-06, 1.3874999999999998e-05, 9.860000000014302e-07, 2.6306000000000246e-05, 1.1109999999980857e-06, 2.7486000000000177e-05, 1.054999999999806e-06, 2.3847999999999925e-05, 1.0410000000002362e-06, 1.2250000000001843e-05, 1.0969999999985158e-06, 2.3764000000002505e-05, 1.0699999999988496e-06, 2.4429999999998897e-05, 1.0419999999997098e-06, 3.0042000000000957e-05, 1.054999999999806e-06, 2.0070000000000504e-05, 1.068999999999376e-06, 1.8500000000001154e-05, 1.0559999999992797e-06, 2.037499999999956e-05, 1.054999999999806e-06], 'diff': [0, 1.1660000000003612e-06, 2.8138999999999942e-05, 1.0419999999997098e-06, 2.3790999999998702e-05, 1.0559999999992797e-06, 1.5069000000002969e-05, 1.0699999999988496e-06, 1.4457999999998444e-05, 1.125000000001125e-06, 1.843099999999931e-05, 1.054999999999806e-06, 1.78890000000001e-05, 1.070000000002319e-06, 2.8485999999997708e-05, 1.0410000000002362e-06, 2.8805999999999277e-05, 1.0419999999997098e-06, 1.3819000000001719e-05, 1.0699999999988496e-06, 1.7569000000002e-05, 1.0559999999992797e-06, 2.2235999999998396e-05, 1.054999999999806e-06, 2.0056000000000934e-05, 1.068999999999376e-06, 1.7584000000001043e-05, 1.0410000000002362e-06, 1.2346999999999358e-05, 9.870000000009038e-07, 1.381899999999825e-05, 1.0690000000028455e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 2.5985999999998677e-05, 1.0419999999997098e-06, 2.7235999999999927e-05, 1.054999999999806e-06, 2.722299999999983e-05, 1.0830000000024154e-06, 1.50689999999995e-05, 1.0559999999992797e-06, 1.7263999999999474e-05, 1.0410000000002362e-06, 1.4764000000000443e-05, 1.1110000000015552e-06, 1.7612000000000183e-05, 9.999999999975306e-07, 2.3485999999999646e-05, 1.0270000000006663e-06, 1.887500000000153e-05, 9.999999999975306e-07, 2.847300000000108e-05, 1.068999999999376e-06, 1.3514000000002663e-05, 1.0969999999985158e-06, 3.09310000000014e-05, 1.068999999999376e-06, 2.8471999999998138e-05, 1.0560000000027492e-06, 1.8513999999997255e-05, 1.0419999999997098e-06, 1.881899999999978e-05, 1.0560000000027492e-06, 2.6915999999998358e-05, 1.0699999999988496e-06, 1.1652000000000884e-05, 1.1120000000010288e-06, 1.751300000000025e-05, 1.0839999999984196e-06, 1.879100000000064e-05, 1.0699999999988496e-06, 1.1264000000000413e-05, 1.054999999999806e-06, 2.686100000000302e-05, 1.0559999999992797e-06, 2.5068999999999092e-05, 1.0699999999988496e-06, 1.3874999999999998e-05, 9.860000000014302e-07, 2.6306000000000246e-05, 1.1109999999980857e-06, 2.7486000000000177e-05, 1.054999999999806e-06, 2.3847999999999925e-05, 1.0410000000002362e-06, 1.2250000000001843e-05, 1.0969999999985158e-06, 2.3764000000002505e-05, 1.0699999999988496e-06, 2.4429999999998897e-05, 1.0419999999997098e-06, 3.0042000000000957e-05, 1.054999999999806e-06, 2.0070000000000504e-05, 1.068999999999376e-06, 1.8500000000001154e-05, 1.0559999999992797e-06, 2.037499999999956e-05, 1.054999999999806e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:01.246" endtime="20201112 12:42:01.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.242" endtime="20201112 12:42:01.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.254" level="INFO">${RESULT} = [{'time': 0.018296472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.018325653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:01.251" endtime="20201112 12:42:01.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.267" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018296472, 0.018325653, 0.0183505, 0.018366639, 0.018382222, 0.018401708, 0.018420667, 0.018450194, 0.018480042, 0.018494931, 0.018513556, 0.018536847, 0.018557972, 0.018576597, 0.01858993...</msg>
<status status="PASS" starttime="20201112 12:42:01.255" endtime="20201112 12:42:01.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.272" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:01.271" endtime="20201112 12:42:01.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.274" level="INFO">VALUE: [1.1660000000003612e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 9.870000000009038e-07, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 9.999999999975306e-07, 1.0270000000006663e-06, 9.999999999975306e-07, 1.068999999999376e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.1120000000010288e-06, 1.0839999999984196e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 9.860000000014302e-07, 1.1109999999980857e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0969999999985158e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:42:01.273" endtime="20201112 12:42:01.274"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.268" endtime="20201112 12:42:01.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.277" endtime="20201112 12:42:01.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.280" endtime="20201112 12:42:01.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.279" endtime="20201112 12:42:01.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.275" endtime="20201112 12:42:01.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:00.875" endtime="20201112 12:42:01.301"></status>
</kw>
<msg timestamp="20201112 12:42:01.301" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.310" endtime="20201112 12:42:01.319"></status>
</kw>
<msg timestamp="20201112 12:42:01.319" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.308" endtime="20201112 12:42:01.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.322" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.320" endtime="20201112 12:42:01.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.323" endtime="20201112 12:42:01.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.305" endtime="20201112 12:42:01.325"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.303" endtime="20201112 12:42:01.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.331" endtime="20201112 12:42:01.618"></status>
</kw>
<msg timestamp="20201112 12:42:01.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019118972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019120222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.330" endtime="20201112 12:42:01.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019118972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019120222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.623" endtime="20201112 12:42:01.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.633" endtime="20201112 12:42:01.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.327" endtime="20201112 12:42:01.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.326" endtime="20201112 12:42:01.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.641" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:01.640" endtime="20201112 12:42:01.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.647" level="INFO">VALUE: [{'time': 0.019118972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019120222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999977807e-06, 'source_diff': 1.2499999999977807e-06}, {'time': 0.019144528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4306000000001715e-05, 'source_diff': 2.4306000000001715e-05}, {'time': 0.019145597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019170319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4722000000001326e-05, 'source_diff': 2.4722000000001326e-05}, {'time': 0.019171375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019197375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5999999999998247e-05, 'source_diff': 2.5999999999998247e-05}, {'time': 0.019198417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019223778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.536100000000152e-05, 'source_diff': 2.536100000000152e-05}, {'time': 0.019224847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019242097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019243167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019274125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.019275181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019295861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0680000000002086e-05, 'source_diff': 2.0680000000002086e-05}, {'time': 0.019296931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019313875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6944000000001375e-05, 'source_diff': 1.6944000000001375e-05}, {'time': 0.019314931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019341208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6276999999998163e-05, 'source_diff': 2.6276999999998163e-05}, {'time': 0.019342278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019363292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1013999999999755e-05, 'source_diff': 2.1013999999999755e-05}, {'time': 0.019364333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019386583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2249999999997966e-05, 'source_diff': 2.2249999999997966e-05}, {'time': 0.019387653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019404292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.663899999999885e-05, 'source_diff': 1.663899999999885e-05}, {'time': 0.019405347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019435681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333999999999917e-05, 'source_diff': 3.0333999999999917e-05}, {'time': 0.019436736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019466528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9792000000000707e-05, 'source_diff': 2.9792000000000707e-05}, {'time': 0.019467528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019495083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7554999999998553e-05, 'source_diff': 2.7554999999998553e-05}, {'time': 0.019496125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019513389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7263999999999474e-05, 'source_diff': 1.7263999999999474e-05}, {'time': 0.019514431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019534542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.011099999999974e-05, 'source_diff': 2.011099999999974e-05}, {'time': 0.019535556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019548764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.019549847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019563347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3499999999999623e-05, 'source_diff': 1.3499999999999623e-05}, {'time': 0.019564403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019583556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.915299999999745e-05, 'source_diff': 1.915299999999745e-05}, {'time': 0.019584653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019614319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9666000000001108e-05, 'source_diff': 2.9666000000001108e-05}, {'time': 0.019615375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019629819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4443999999998874e-05, 'source_diff': 1.4443999999998874e-05}, {'time': 0.019630889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019654986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.019656069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019673319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019674389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019691028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.663899999999885e-05, 'source_diff': 1.663899999999885e-05}, {'time': 0.019692069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019714944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287500000000206e-05, 'source_diff': 2.287500000000206e-05}, {'time': 0.019716014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019740111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.019741167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019756875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5707999999999694e-05, 'source_diff': 1.5707999999999694e-05}, {'time': 0.019757931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019778306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037499999999956e-05, 'source_diff': 2.037499999999956e-05}, {'time': 0.019779361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019800097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0736000000000365e-05, 'source_diff': 2.0736000000000365e-05}, {'time': 0.019801111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019819917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8805999999999684e-05, 'source_diff': 1.8805999999999684e-05}, {'time': 0.019821, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019837625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662500000000275e-05, 'source_diff': 1.662500000000275e-05}, {'time': 0.019838681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019852528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3847000000000859e-05, 'source_diff': 1.3847000000000859e-05}, {'time': 0.019853569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019870528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.695899999999695e-05, 'source_diff': 1.695899999999695e-05}, {'time': 0.019871597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019896625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.019897694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019922431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.473700000000037e-05, 'source_diff': 2.473700000000037e-05}, {'time': 0.019923472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019945403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.193099999999934e-05, 'source_diff': 2.193099999999934e-05}, {'time': 0.019946472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019964667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.019965722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019994819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.019995931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.020016583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0651999999999476e-05, 'source_diff': 2.0651999999999476e-05}, {'time': 0.020017625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.020036431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8805999999999684e-05, 'source_diff': 1.8805999999999684e-05}, {'time': 0.0200375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020058528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1027999999999325e-05, 'source_diff': 2.1027999999999325e-05}, {'time': 0.020059569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.020076181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6611999999999183e-05, 'source_diff': 1.6611999999999183e-05}, {'time': 0.020077264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.020107903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063899999999897e-05, 'source_diff': 3.063899999999897e-05}, {'time': 0.020109014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.020139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0291999999997737e-05, 'source_diff': 3.0291999999997737e-05}, {'time': 0.020140361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.02015825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.020159306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020184042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4736000000000896e-05, 'source_diff': 2.4736000000000896e-05}, {'time': 0.020185111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.020196792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1681000000002967e-05, 'source_diff': 1.1681000000002967e-05}, {'time': 0.020197806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999971006e-06, 'source_diff': 1.0139999999971006e-06}, {'time': 0.020211944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138000000000345e-05, 'source_diff': 1.4138000000000345e-05}, {'time': 0.020213, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:01.642" endtime="20201112 12:42:01.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.637" endtime="20201112 12:42:01.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:01.672" level="INFO">${debug-compressed} = {'time': [0.019118972, 0.019120222, 0.019144528, 0.019145597, 0.019170319, 0.019171375, 0.019197375, 0.019198417, 0.019223778, 0.019224847, 0.019242097, 0.019243167, 0.019274125, 0.019275181, 0.019295...</msg>
<status status="PASS" starttime="20201112 12:42:01.649" endtime="20201112 12:42:01.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.676" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:01.675" endtime="20201112 12:42:01.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.680" level="INFO">VALUE: {'time': [0.019118972, 0.019120222, 0.019144528, 0.019145597, 0.019170319, 0.019171375, 0.019197375, 0.019198417, 0.019223778, 0.019224847, 0.019242097, 0.019243167, 0.019274125, 0.019275181, 0.019295861, 0.019296931, 0.019313875, 0.019314931, 0.019341208, 0.019342278, 0.019363292, 0.019364333, 0.019386583, 0.019387653, 0.019404292, 0.019405347, 0.019435681, 0.019436736, 0.019466528, 0.019467528, 0.019495083, 0.019496125, 0.019513389, 0.019514431, 0.019534542, 0.019535556, 0.019548764, 0.019549847, 0.019563347, 0.019564403, 0.019583556, 0.019584653, 0.019614319, 0.019615375, 0.019629819, 0.019630889, 0.019654986, 0.019656069, 0.019673319, 0.019674389, 0.019691028, 0.019692069, 0.019714944, 0.019716014, 0.019740111, 0.019741167, 0.019756875, 0.019757931, 0.019778306, 0.019779361, 0.019800097, 0.019801111, 0.019819917, 0.019821, 0.019837625, 0.019838681, 0.019852528, 0.019853569, 0.019870528, 0.019871597, 0.019896625, 0.019897694, 0.019922431, 0.019923472, 0.019945403, 0.019946472, 0.019964667, 0.019965722, 0.019994819, 0.019995931, 0.020016583, 0.020017625, 0.020036431, 0.0200375, 0.020058528, 0.020059569, 0.020076181, 0.020077264, 0.020107903, 0.020109014, 0.020139306, 0.020140361, 0.02015825, 0.020159306, 0.020184042, 0.020185111, 0.020196792, 0.020197806, 0.020211944, 0.020213], 'source_diff': [0, 1.2499999999977807e-06, 2.4306000000001715e-05, 1.068999999999376e-06, 2.4722000000001326e-05, 1.0559999999992797e-06, 2.5999999999998247e-05, 1.0419999999997098e-06, 2.536100000000152e-05, 1.068999999999376e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 3.095800000000107e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 1.6944000000001375e-05, 1.0559999999992797e-06, 2.6276999999998163e-05, 1.070000000002319e-06, 2.1013999999999755e-05, 1.0410000000002362e-06, 2.2249999999997966e-05, 1.070000000002319e-06, 1.663899999999885e-05, 1.054999999999806e-06, 3.0333999999999917e-05, 1.054999999999806e-06, 2.9792000000000707e-05, 1.000000000001e-06, 2.7554999999998553e-05, 1.0419999999997098e-06, 1.7263999999999474e-05, 1.0419999999997098e-06, 2.011099999999974e-05, 1.01400000000057e-06, 1.3208000000000664e-05, 1.082999999998946e-06, 1.3499999999999623e-05, 1.0560000000027492e-06, 1.915299999999745e-05, 1.0970000000019853e-06, 2.9666000000001108e-05, 1.0559999999992797e-06, 1.4443999999998874e-05, 1.0699999999988496e-06, 2.40970000000007e-05, 1.0830000000024154e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 1.663899999999885e-05, 1.0410000000002362e-06, 2.287500000000206e-05, 1.0699999999988496e-06, 2.40970000000007e-05, 1.0559999999992797e-06, 1.5707999999999694e-05, 1.0559999999992797e-06, 2.037499999999956e-05, 1.054999999999806e-06, 2.0736000000000365e-05, 1.01400000000057e-06, 1.8805999999999684e-05, 1.082999999998946e-06, 1.662500000000275e-05, 1.0559999999992797e-06, 1.3847000000000859e-05, 1.0410000000002362e-06, 1.695899999999695e-05, 1.0690000000028455e-06, 2.5027999999999856e-05, 1.068999999999376e-06, 2.473700000000037e-05, 1.0410000000002362e-06, 2.193099999999934e-05, 1.068999999999376e-06, 1.819499999999863e-05, 1.0550000000032755e-06, 2.9096999999998763e-05, 1.1120000000010288e-06, 2.0651999999999476e-05, 1.0419999999997098e-06, 1.8805999999999684e-05, 1.068999999999376e-06, 2.1027999999999325e-05, 1.0410000000002362e-06, 1.6611999999999183e-05, 1.0830000000024154e-06, 3.063899999999897e-05, 1.1110000000015552e-06, 3.0291999999997737e-05, 1.054999999999806e-06, 1.78890000000001e-05, 1.0559999999992797e-06, 2.4736000000000896e-05, 1.068999999999376e-06, 1.1681000000002967e-05, 1.0139999999971006e-06, 1.4138000000000345e-05, 1.0559999999992797e-06], 'diff': [0, 1.2499999999977807e-06, 2.4306000000001715e-05, 1.068999999999376e-06, 2.4722000000001326e-05, 1.0559999999992797e-06, 2.5999999999998247e-05, 1.0419999999997098e-06, 2.536100000000152e-05, 1.068999999999376e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 3.095800000000107e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 1.6944000000001375e-05, 1.0559999999992797e-06, 2.6276999999998163e-05, 1.070000000002319e-06, 2.1013999999999755e-05, 1.0410000000002362e-06, 2.2249999999997966e-05, 1.070000000002319e-06, 1.663899999999885e-05, 1.054999999999806e-06, 3.0333999999999917e-05, 1.054999999999806e-06, 2.9792000000000707e-05, 1.000000000001e-06, 2.7554999999998553e-05, 1.0419999999997098e-06, 1.7263999999999474e-05, 1.0419999999997098e-06, 2.011099999999974e-05, 1.01400000000057e-06, 1.3208000000000664e-05, 1.082999999998946e-06, 1.3499999999999623e-05, 1.0560000000027492e-06, 1.915299999999745e-05, 1.0970000000019853e-06, 2.9666000000001108e-05, 1.0559999999992797e-06, 1.4443999999998874e-05, 1.0699999999988496e-06, 2.40970000000007e-05, 1.0830000000024154e-06, 1.7249999999999904e-05, 1.0699999999988496e-06, 1.663899999999885e-05, 1.0410000000002362e-06, 2.287500000000206e-05, 1.0699999999988496e-06, 2.40970000000007e-05, 1.0559999999992797e-06, 1.5707999999999694e-05, 1.0559999999992797e-06, 2.037499999999956e-05, 1.054999999999806e-06, 2.0736000000000365e-05, 1.01400000000057e-06, 1.8805999999999684e-05, 1.082999999998946e-06, 1.662500000000275e-05, 1.0559999999992797e-06, 1.3847000000000859e-05, 1.0410000000002362e-06, 1.695899999999695e-05, 1.0690000000028455e-06, 2.5027999999999856e-05, 1.068999999999376e-06, 2.473700000000037e-05, 1.0410000000002362e-06, 2.193099999999934e-05, 1.068999999999376e-06, 1.819499999999863e-05, 1.0550000000032755e-06, 2.9096999999998763e-05, 1.1120000000010288e-06, 2.0651999999999476e-05, 1.0419999999997098e-06, 1.8805999999999684e-05, 1.068999999999376e-06, 2.1027999999999325e-05, 1.0410000000002362e-06, 1.6611999999999183e-05, 1.0830000000024154e-06, 3.063899999999897e-05, 1.1110000000015552e-06, 3.0291999999997737e-05, 1.054999999999806e-06, 1.78890000000001e-05, 1.0559999999992797e-06, 2.4736000000000896e-05, 1.068999999999376e-06, 1.1681000000002967e-05, 1.0139999999971006e-06, 1.4138000000000345e-05, 1.0559999999992797e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:01.677" endtime="20201112 12:42:01.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.673" endtime="20201112 12:42:01.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:01.686" level="INFO">${RESULT} = [{'time': 0.019120222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2499999999977807e-06, 'source_diff': 1.2499999999977807e-06}, {'time': 0.019145597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:01.683" endtime="20201112 12:42:01.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:01.700" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019120222, 0.019145597, 0.019171375, 0.019198417, 0.019224847, 0.019243167, 0.019275181, 0.019296931, 0.019314931, 0.019342278, 0.019364333, 0.019387653, 0.019405347, 0.019436736, 0.019467...</msg>
<status status="PASS" starttime="20201112 12:42:01.687" endtime="20201112 12:42:01.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.704" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:01.703" endtime="20201112 12:42:01.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.706" level="INFO">VALUE: [1.2499999999977807e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.070000000002319e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.01400000000057e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.0970000000019853e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0830000000024154e-06, 1.0699999999988496e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0550000000032755e-06, 1.1120000000010288e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0139999999971006e-06, 1.0559999999992797e-06]</msg>
<status status="PASS" starttime="20201112 12:42:01.705" endtime="20201112 12:42:01.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.700" endtime="20201112 12:42:01.707"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.709" endtime="20201112 12:42:01.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:01.713" endtime="20201112 12:42:01.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.711" endtime="20201112 12:42:01.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.708" endtime="20201112 12:42:01.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.302" endtime="20201112 12:42:01.733"></status>
</kw>
<msg timestamp="20201112 12:42:01.734" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.741" endtime="20201112 12:42:01.750"></status>
</kw>
<msg timestamp="20201112 12:42:01.751" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.740" endtime="20201112 12:42:01.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:01.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:01.752" endtime="20201112 12:42:01.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.754" endtime="20201112 12:42:01.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.737" endtime="20201112 12:42:01.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.735" endtime="20201112 12:42:01.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:01.763" endtime="20201112 12:42:02.047"></status>
</kw>
<msg timestamp="20201112 12:42:02.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018370986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018372181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:01.761" endtime="20201112 12:42:02.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018370986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018372181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.051" endtime="20201112 12:42:02.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.060" endtime="20201112 12:42:02.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.759" endtime="20201112 12:42:02.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.757" endtime="20201112 12:42:02.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.067" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:02.066" endtime="20201112 12:42:02.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.074" level="INFO">VALUE: [{'time': 0.018370986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018372181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018385611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3429999999998304e-05, 'source_diff': 1.3429999999998304e-05}, {'time': 0.018386667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018408375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1708000000002226e-05, 'source_diff': 2.1708000000002226e-05}, {'time': 0.018409333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.57999999998821e-07, 'source_diff': 9.57999999998821e-07}, {'time': 0.018423486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4152999999999388e-05, 'source_diff': 1.4152999999999388e-05}, {'time': 0.018424542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018446153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.018447222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018476931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.970899999999929e-05, 'source_diff': 2.970899999999929e-05}, {'time': 0.018477986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018496208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8222000000001765e-05, 'source_diff': 1.8222000000001765e-05}, {'time': 0.018497264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018510444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3180000000001524e-05, 'source_diff': 1.3180000000001524e-05}, {'time': 0.018511528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018525653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.018526722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018545833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.911100000000221e-05, 'source_diff': 1.911100000000221e-05}, {'time': 0.018546917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018569458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.254100000000092e-05, 'source_diff': 2.254100000000092e-05}, {'time': 0.018570542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018601153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.061099999999983e-05, 'source_diff': 3.061099999999983e-05}, {'time': 0.018602222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018624139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.191699999999977e-05, 'source_diff': 2.191699999999977e-05}, {'time': 0.018625236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018638431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.018639486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018663889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.440299999999923e-05, 'source_diff': 2.440299999999923e-05}, {'time': 0.018664972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.01869125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6278000000001106e-05, 'source_diff': 2.6278000000001106e-05}, {'time': 0.018692306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018713042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0736000000000365e-05, 'source_diff': 2.0736000000000365e-05}, {'time': 0.018714042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018743472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9430000000000428e-05, 'source_diff': 2.9430000000000428e-05}, {'time': 0.018744528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018769556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.018770611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018793819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3208000000000256e-05, 'source_diff': 2.3208000000000256e-05}, {'time': 0.018794875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018811792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.691700000000171e-05, 'source_diff': 1.691700000000171e-05}, {'time': 0.018812861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018833847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.018834917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018852792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.018853847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018876389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.018877458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018897819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.036099999999999e-05, 'source_diff': 2.036099999999999e-05}, {'time': 0.018898875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018910847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1972000000002453e-05, 'source_diff': 1.1972000000002453e-05}, {'time': 0.018911903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018934444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.254100000000092e-05, 'source_diff': 2.254100000000092e-05}, {'time': 0.018935556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1119999999975594e-06, 'source_diff': 1.1119999999975594e-06}, {'time': 0.018949958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4402000000000165e-05, 'source_diff': 1.4402000000000165e-05}, {'time': 0.018951028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018965819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.479099999999664e-05, 'source_diff': 1.479099999999664e-05}, {'time': 0.018966875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018986903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0027999999998325e-05, 'source_diff': 2.0027999999998325e-05}, {'time': 0.018987972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019002736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019003792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019027583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.379100000000217e-05, 'source_diff': 2.379100000000217e-05}, {'time': 0.019028667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019048722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.005500000000146e-05, 'source_diff': 2.005500000000146e-05}, {'time': 0.019049764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019066083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.019067153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019096861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9707999999999818e-05, 'source_diff': 2.9707999999999818e-05}, {'time': 0.019097931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019124833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6902000000002257e-05, 'source_diff': 2.6902000000002257e-05}, {'time': 0.019125917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019146264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.034700000000042e-05, 'source_diff': 2.034700000000042e-05}, {'time': 0.019147333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019176417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9084000000002136e-05, 'source_diff': 2.9084000000002136e-05}, {'time': 0.0191775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019199722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2221999999998826e-05, 'source_diff': 2.2221999999998826e-05}, {'time': 0.019200778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.01922675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5971999999999107e-05, 'source_diff': 2.5971999999999107e-05}, {'time': 0.019227819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019257222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.019258306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019276819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.851300000000125e-05, 'source_diff': 1.851300000000125e-05}, {'time': 0.019277847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019306944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.019308028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019322167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.019323208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019348264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5055999999998996e-05, 'source_diff': 2.5055999999998996e-05}, {'time': 0.019349306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019375917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.019377028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019390806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3777999999999013e-05, 'source_diff': 1.3777999999999013e-05}, {'time': 0.019391917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5290999999996733e-05, 'source_diff': 2.5290999999996733e-05}, {'time': 0.019418292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.019447375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9082999999999193e-05, 'source_diff': 2.9082999999999193e-05}, {'time': 0.019448431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019467236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880500000000021e-05, 'source_diff': 1.880500000000021e-05}, {'time': 0.019468306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:02.070" endtime="20201112 12:42:02.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.063" endtime="20201112 12:42:02.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:02.100" level="INFO">${debug-compressed} = {'time': [0.018370986, 0.018372181, 0.018385611, 0.018386667, 0.018408375, 0.018409333, 0.018423486, 0.018424542, 0.018446153, 0.018447222, 0.018476931, 0.018477986, 0.018496208, 0.018497264, 0.018510...</msg>
<status status="PASS" starttime="20201112 12:42:02.077" endtime="20201112 12:42:02.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.104" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:02.103" endtime="20201112 12:42:02.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.108" level="INFO">VALUE: {'time': [0.018370986, 0.018372181, 0.018385611, 0.018386667, 0.018408375, 0.018409333, 0.018423486, 0.018424542, 0.018446153, 0.018447222, 0.018476931, 0.018477986, 0.018496208, 0.018497264, 0.018510444, 0.018511528, 0.018525653, 0.018526722, 0.018545833, 0.018546917, 0.018569458, 0.018570542, 0.018601153, 0.018602222, 0.018624139, 0.018625236, 0.018638431, 0.018639486, 0.018663889, 0.018664972, 0.01869125, 0.018692306, 0.018713042, 0.018714042, 0.018743472, 0.018744528, 0.018769556, 0.018770611, 0.018793819, 0.018794875, 0.018811792, 0.018812861, 0.018833847, 0.018834917, 0.018852792, 0.018853847, 0.018876389, 0.018877458, 0.018897819, 0.018898875, 0.018910847, 0.018911903, 0.018934444, 0.018935556, 0.018949958, 0.018951028, 0.018965819, 0.018966875, 0.018986903, 0.018987972, 0.019002736, 0.019003792, 0.019027583, 0.019028667, 0.019048722, 0.019049764, 0.019066083, 0.019067153, 0.019096861, 0.019097931, 0.019124833, 0.019125917, 0.019146264, 0.019147333, 0.019176417, 0.0191775, 0.019199722, 0.019200778, 0.01922675, 0.019227819, 0.019257222, 0.019258306, 0.019276819, 0.019277847, 0.019306944, 0.019308028, 0.019322167, 0.019323208, 0.019348264, 0.019349306, 0.019375917, 0.019377028, 0.019390806, 0.019391917, 0.019417208, 0.019418292, 0.019447375, 0.019448431, 0.019467236, 0.019468306], 'source_diff': [0, 1.1950000000024441e-06, 1.3429999999998304e-05, 1.0559999999992797e-06, 2.1708000000002226e-05, 9.57999999998821e-07, 1.4152999999999388e-05, 1.0559999999992797e-06, 2.161100000000124e-05, 1.068999999999376e-06, 2.970899999999929e-05, 1.054999999999806e-06, 1.8222000000001765e-05, 1.0559999999992797e-06, 1.3180000000001524e-05, 1.0839999999984196e-06, 1.4125000000000248e-05, 1.068999999999376e-06, 1.911100000000221e-05, 1.0839999999984196e-06, 2.254100000000092e-05, 1.0839999999984196e-06, 3.061099999999983e-05, 1.0690000000028455e-06, 2.191699999999977e-05, 1.0969999999985158e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 2.440299999999923e-05, 1.082999999998946e-06, 2.6278000000001106e-05, 1.0559999999992797e-06, 2.0736000000000365e-05, 1.000000000001e-06, 2.9430000000000428e-05, 1.0559999999992797e-06, 2.5027999999999856e-05, 1.054999999999806e-06, 2.3208000000000256e-05, 1.0559999999992797e-06, 1.691700000000171e-05, 1.068999999999376e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 1.787500000000053e-05, 1.054999999999806e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 2.036099999999999e-05, 1.0559999999992797e-06, 1.1972000000002453e-05, 1.0559999999992797e-06, 2.254100000000092e-05, 1.1119999999975594e-06, 1.4402000000000165e-05, 1.070000000002319e-06, 1.479099999999664e-05, 1.0560000000027492e-06, 2.0027999999998325e-05, 1.068999999999376e-06, 1.4764000000000443e-05, 1.0559999999992797e-06, 2.379100000000217e-05, 1.0839999999984196e-06, 2.005500000000146e-05, 1.0419999999997098e-06, 1.631900000000075e-05, 1.0699999999988496e-06, 2.9707999999999818e-05, 1.0699999999988496e-06, 2.6902000000002257e-05, 1.0839999999984196e-06, 2.034700000000042e-05, 1.068999999999376e-06, 2.9084000000002136e-05, 1.082999999998946e-06, 2.2221999999998826e-05, 1.0560000000027492e-06, 2.5971999999999107e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.0839999999984196e-06, 1.851300000000125e-05, 1.02800000000014e-06, 2.9096999999998763e-05, 1.084000000001889e-06, 1.4138999999999818e-05, 1.0410000000002362e-06, 2.5055999999998996e-05, 1.0419999999997098e-06, 2.6610999999999302e-05, 1.1110000000015552e-06, 1.3777999999999013e-05, 1.1110000000015552e-06, 2.5290999999996733e-05, 1.084000000001889e-06, 2.9082999999999193e-05, 1.0559999999992797e-06, 1.880500000000021e-05, 1.070000000002319e-06], 'diff': [0, 1.1950000000024441e-06, 1.3429999999998304e-05, 1.0559999999992797e-06, 2.1708000000002226e-05, 9.57999999998821e-07, 1.4152999999999388e-05, 1.0559999999992797e-06, 2.161100000000124e-05, 1.068999999999376e-06, 2.970899999999929e-05, 1.054999999999806e-06, 1.8222000000001765e-05, 1.0559999999992797e-06, 1.3180000000001524e-05, 1.0839999999984196e-06, 1.4125000000000248e-05, 1.068999999999376e-06, 1.911100000000221e-05, 1.0839999999984196e-06, 2.254100000000092e-05, 1.0839999999984196e-06, 3.061099999999983e-05, 1.0690000000028455e-06, 2.191699999999977e-05, 1.0969999999985158e-06, 1.3195000000000567e-05, 1.054999999999806e-06, 2.440299999999923e-05, 1.082999999998946e-06, 2.6278000000001106e-05, 1.0559999999992797e-06, 2.0736000000000365e-05, 1.000000000001e-06, 2.9430000000000428e-05, 1.0559999999992797e-06, 2.5027999999999856e-05, 1.054999999999806e-06, 2.3208000000000256e-05, 1.0559999999992797e-06, 1.691700000000171e-05, 1.068999999999376e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 1.787500000000053e-05, 1.054999999999806e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 2.036099999999999e-05, 1.0559999999992797e-06, 1.1972000000002453e-05, 1.0559999999992797e-06, 2.254100000000092e-05, 1.1119999999975594e-06, 1.4402000000000165e-05, 1.070000000002319e-06, 1.479099999999664e-05, 1.0560000000027492e-06, 2.0027999999998325e-05, 1.068999999999376e-06, 1.4764000000000443e-05, 1.0559999999992797e-06, 2.379100000000217e-05, 1.0839999999984196e-06, 2.005500000000146e-05, 1.0419999999997098e-06, 1.631900000000075e-05, 1.0699999999988496e-06, 2.9707999999999818e-05, 1.0699999999988496e-06, 2.6902000000002257e-05, 1.0839999999984196e-06, 2.034700000000042e-05, 1.068999999999376e-06, 2.9084000000002136e-05, 1.082999999998946e-06, 2.2221999999998826e-05, 1.0560000000027492e-06, 2.5971999999999107e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.0839999999984196e-06, 1.851300000000125e-05, 1.02800000000014e-06, 2.9096999999998763e-05, 1.084000000001889e-06, 1.4138999999999818e-05, 1.0410000000002362e-06, 2.5055999999998996e-05, 1.0419999999997098e-06, 2.6610999999999302e-05, 1.1110000000015552e-06, 1.3777999999999013e-05, 1.1110000000015552e-06, 2.5290999999996733e-05, 1.084000000001889e-06, 2.9082999999999193e-05, 1.0559999999992797e-06, 1.880500000000021e-05, 1.070000000002319e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:02.105" endtime="20201112 12:42:02.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.101" endtime="20201112 12:42:02.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.114" level="INFO">${RESULT} = [{'time': 0.018372181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1950000000024441e-06, 'source_diff': 1.1950000000024441e-06}, {'time': 0.018386667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.110" endtime="20201112 12:42:02.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.127" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018372181, 0.018386667, 0.018409333, 0.018424542, 0.018447222, 0.018477986, 0.018497264, 0.018511528, 0.018526722, 0.018546917, 0.018570542, 0.018602222, 0.018625236, 0.018639486, 0.018664...</msg>
<status status="PASS" starttime="20201112 12:42:02.115" endtime="20201112 12:42:02.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.131" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:02.130" endtime="20201112 12:42:02.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.133" level="INFO">VALUE: [1.1950000000024441e-06, 1.0559999999992797e-06, 9.57999999998821e-07, 1.0559999999992797e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.0839999999984196e-06, 1.0690000000028455e-06, 1.0969999999985158e-06, 1.054999999999806e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.1119999999975594e-06, 1.070000000002319e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0839999999984196e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0560000000027492e-06, 1.068999999999376e-06, 1.0839999999984196e-06, 1.02800000000014e-06, 1.084000000001889e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.1110000000015552e-06, 1.1110000000015552e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.070000000002319e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.132" endtime="20201112 12:42:02.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.128" endtime="20201112 12:42:02.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.136" endtime="20201112 12:42:02.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.140" endtime="20201112 12:42:02.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.138" endtime="20201112 12:42:02.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.135" endtime="20201112 12:42:02.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:01.734" endtime="20201112 12:42:02.160"></status>
</kw>
<msg timestamp="20201112 12:42:02.161" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.169" endtime="20201112 12:42:02.178"></status>
</kw>
<msg timestamp="20201112 12:42:02.178" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.167" endtime="20201112 12:42:02.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.179" endtime="20201112 12:42:02.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.182" endtime="20201112 12:42:02.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.164" endtime="20201112 12:42:02.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.162" endtime="20201112 12:42:02.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.191" endtime="20201112 12:42:02.475"></status>
</kw>
<msg timestamp="20201112 12:42:02.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019136736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019137917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.189" endtime="20201112 12:42:02.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019136736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019137917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.479" endtime="20201112 12:42:02.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.488" endtime="20201112 12:42:02.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.187" endtime="20201112 12:42:02.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.185" endtime="20201112 12:42:02.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.494" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:02.493" endtime="20201112 12:42:02.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.499" level="INFO">VALUE: [{'time': 0.019136736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019137917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019164125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6207999999999787e-05, 'source_diff': 2.6207999999999787e-05}, {'time': 0.019165181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019184306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.019185375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019208292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29169999999973e-05, 'source_diff': 2.29169999999973e-05}, {'time': 0.019209292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019225625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.633300000000032e-05, 'source_diff': 1.633300000000032e-05}, {'time': 0.019226694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019257028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0333999999999917e-05, 'source_diff': 3.0333999999999917e-05}, {'time': 0.019258097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019282528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443100000000184e-05, 'source_diff': 2.443100000000184e-05}, {'time': 0.019283611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019309264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.019310361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019324806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4444999999998348e-05, 'source_diff': 1.4444999999998348e-05}, {'time': 0.019325806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019342444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6637999999999376e-05, 'source_diff': 1.6637999999999376e-05}, {'time': 0.0193435, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019370111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.019371167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019387806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.663899999999885e-05, 'source_diff': 1.663899999999885e-05}, {'time': 0.019388889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019400833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1943999999999844e-05, 'source_diff': 1.1943999999999844e-05}, {'time': 0.019401889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019431625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9736000000002427e-05, 'source_diff': 2.9736000000002427e-05}, {'time': 0.019432667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019448403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5735999999998834e-05, 'source_diff': 1.5735999999998834e-05}, {'time': 0.019449444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019480403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095900000000054e-05, 'source_diff': 3.095900000000054e-05}, {'time': 0.0194815, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019512431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.09310000000014e-05, 'source_diff': 3.09310000000014e-05}, {'time': 0.0195135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019538528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.019539583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019559681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0097999999999644e-05, 'source_diff': 2.0097999999999644e-05}, {'time': 0.019560722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019591361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063900000000244e-05, 'source_diff': 3.063900000000244e-05}, {'time': 0.019592431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019620903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8471999999998138e-05, 'source_diff': 2.8471999999998138e-05}, {'time': 0.019621958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019640472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8514000000000724e-05, 'source_diff': 1.8514000000000724e-05}, {'time': 0.019641528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4444000000002344e-05, 'source_diff': 1.4444000000002344e-05}, {'time': 0.019657042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019673667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.019674736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019686, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1263999999996943e-05, 'source_diff': 1.1263999999996943e-05}, {'time': 0.019687083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019705833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8749999999997935e-05, 'source_diff': 1.8749999999997935e-05}, {'time': 0.019706875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019718528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.019719597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019743389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.019744458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019767333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287500000000206e-05, 'source_diff': 2.287500000000206e-05}, {'time': 0.019768375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019792819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4443999999998467e-05, 'source_diff': 2.4443999999998467e-05}, {'time': 0.019793875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019822958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9083000000002662e-05, 'source_diff': 2.9083000000002662e-05}, {'time': 0.019824028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019845319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.129099999999967e-05, 'source_diff': 2.129099999999967e-05}, {'time': 0.019846389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019863639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019864708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019887931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.322300000000277e-05, 'source_diff': 2.322300000000277e-05}, {'time': 0.019888944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.012999999997627e-06, 'source_diff': 1.012999999997627e-06}, {'time': 0.019917736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8791999999999707e-05, 'source_diff': 2.8791999999999707e-05}, {'time': 0.019918792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019936986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.019938069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019963722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.565300000000048e-05, 'source_diff': 2.565300000000048e-05}, {'time': 0.019964778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019987972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3194000000000686e-05, 'source_diff': 2.3194000000000686e-05}, {'time': 0.019989014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.020015944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6930000000001397e-05, 'source_diff': 2.6930000000001397e-05}, {'time': 0.020017, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.020036431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.943100000000031e-05, 'source_diff': 1.943100000000031e-05}, {'time': 0.020037486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020061306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3820000000000785e-05, 'source_diff': 2.3820000000000785e-05}, {'time': 0.020062417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.020089889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7472000000000607e-05, 'source_diff': 2.7472000000000607e-05}, {'time': 0.020090944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020121611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.066700000000158e-05, 'source_diff': 3.066700000000158e-05}, {'time': 0.020122681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.020141792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.911099999999874e-05, 'source_diff': 1.911099999999874e-05}, {'time': 0.020142847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020161667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8820000000002723e-05, 'source_diff': 1.8820000000002723e-05}, {'time': 0.020162722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.020193389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.066699999999811e-05, 'source_diff': 3.066699999999811e-05}, {'time': 0.020194431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.020221653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.020222736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.020239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6319999999996754e-05, 'source_diff': 1.6319999999996754e-05}, {'time': 0.020240097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.020260472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.037500000000303e-05, 'source_diff': 2.037500000000303e-05}, {'time': 0.020261556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.020290014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8457999999998568e-05, 'source_diff': 2.8457999999998568e-05}, {'time': 0.020291097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:02.495" endtime="20201112 12:42:02.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.491" endtime="20201112 12:42:02.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:02.525" level="INFO">${debug-compressed} = {'time': [0.019136736, 0.019137917, 0.019164125, 0.019165181, 0.019184306, 0.019185375, 0.019208292, 0.019209292, 0.019225625, 0.019226694, 0.019257028, 0.019258097, 0.019282528, 0.019283611, 0.019309...</msg>
<status status="PASS" starttime="20201112 12:42:02.502" endtime="20201112 12:42:02.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.528" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:02.528" endtime="20201112 12:42:02.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.533" level="INFO">VALUE: {'time': [0.019136736, 0.019137917, 0.019164125, 0.019165181, 0.019184306, 0.019185375, 0.019208292, 0.019209292, 0.019225625, 0.019226694, 0.019257028, 0.019258097, 0.019282528, 0.019283611, 0.019309264, 0.019310361, 0.019324806, 0.019325806, 0.019342444, 0.0193435, 0.019370111, 0.019371167, 0.019387806, 0.019388889, 0.019400833, 0.019401889, 0.019431625, 0.019432667, 0.019448403, 0.019449444, 0.019480403, 0.0194815, 0.019512431, 0.0195135, 0.019538528, 0.019539583, 0.019559681, 0.019560722, 0.019591361, 0.019592431, 0.019620903, 0.019621958, 0.019640472, 0.019641528, 0.019655972, 0.019657042, 0.019673667, 0.019674736, 0.019686, 0.019687083, 0.019705833, 0.019706875, 0.019718528, 0.019719597, 0.019743389, 0.019744458, 0.019767333, 0.019768375, 0.019792819, 0.019793875, 0.019822958, 0.019824028, 0.019845319, 0.019846389, 0.019863639, 0.019864708, 0.019887931, 0.019888944, 0.019917736, 0.019918792, 0.019936986, 0.019938069, 0.019963722, 0.019964778, 0.019987972, 0.019989014, 0.020015944, 0.020017, 0.020036431, 0.020037486, 0.020061306, 0.020062417, 0.020089889, 0.020090944, 0.020121611, 0.020122681, 0.020141792, 0.020142847, 0.020161667, 0.020162722, 0.020193389, 0.020194431, 0.020221653, 0.020222736, 0.020239056, 0.020240097, 0.020260472, 0.020261556, 0.020290014, 0.020291097], 'source_diff': [0, 1.1809999999994047e-06, 2.6207999999999787e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.068999999999376e-06, 2.29169999999973e-05, 1.000000000001e-06, 1.633300000000032e-05, 1.068999999999376e-06, 3.0333999999999917e-05, 1.068999999999376e-06, 2.443100000000184e-05, 1.082999999998946e-06, 2.565300000000048e-05, 1.0970000000019853e-06, 1.4444999999998348e-05, 1.000000000001e-06, 1.6637999999999376e-05, 1.0559999999992797e-06, 2.6610999999999302e-05, 1.0560000000027492e-06, 1.663899999999885e-05, 1.082999999998946e-06, 1.1943999999999844e-05, 1.0559999999992797e-06, 2.9736000000002427e-05, 1.0419999999997098e-06, 1.5735999999998834e-05, 1.0410000000002362e-06, 3.095900000000054e-05, 1.0969999999985158e-06, 3.09310000000014e-05, 1.068999999999376e-06, 2.5027999999999856e-05, 1.054999999999806e-06, 2.0097999999999644e-05, 1.0410000000002362e-06, 3.063900000000244e-05, 1.0699999999988496e-06, 2.8471999999998138e-05, 1.054999999999806e-06, 1.8514000000000724e-05, 1.0559999999992797e-06, 1.4444000000002344e-05, 1.0699999999988496e-06, 1.662499999999928e-05, 1.0690000000028455e-06, 1.1263999999996943e-05, 1.0830000000024154e-06, 1.8749999999997935e-05, 1.0419999999997098e-06, 1.1653000000000358e-05, 1.068999999999376e-06, 2.3792000000001645e-05, 1.068999999999376e-06, 2.287500000000206e-05, 1.0419999999997098e-06, 2.4443999999998467e-05, 1.0559999999992797e-06, 2.9083000000002662e-05, 1.0699999999988496e-06, 2.129099999999967e-05, 1.0699999999988496e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 2.322300000000277e-05, 1.012999999997627e-06, 2.8791999999999707e-05, 1.0560000000027492e-06, 1.8193999999999155e-05, 1.082999999998946e-06, 2.565300000000048e-05, 1.0559999999992797e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 2.6930000000001397e-05, 1.0559999999992797e-06, 1.943100000000031e-05, 1.054999999999806e-06, 2.3820000000000785e-05, 1.1109999999980857e-06, 2.7472000000000607e-05, 1.054999999999806e-06, 3.066700000000158e-05, 1.0699999999988496e-06, 1.911099999999874e-05, 1.054999999999806e-06, 1.8820000000002723e-05, 1.054999999999806e-06, 3.066699999999811e-05, 1.0419999999997098e-06, 2.7222000000000357e-05, 1.0830000000024154e-06, 1.6319999999996754e-05, 1.0410000000002362e-06, 2.037500000000303e-05, 1.0839999999984196e-06, 2.8457999999998568e-05, 1.0830000000024154e-06], 'diff': [0, 1.1809999999994047e-06, 2.6207999999999787e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.068999999999376e-06, 2.29169999999973e-05, 1.000000000001e-06, 1.633300000000032e-05, 1.068999999999376e-06, 3.0333999999999917e-05, 1.068999999999376e-06, 2.443100000000184e-05, 1.082999999998946e-06, 2.565300000000048e-05, 1.0970000000019853e-06, 1.4444999999998348e-05, 1.000000000001e-06, 1.6637999999999376e-05, 1.0559999999992797e-06, 2.6610999999999302e-05, 1.0560000000027492e-06, 1.663899999999885e-05, 1.082999999998946e-06, 1.1943999999999844e-05, 1.0559999999992797e-06, 2.9736000000002427e-05, 1.0419999999997098e-06, 1.5735999999998834e-05, 1.0410000000002362e-06, 3.095900000000054e-05, 1.0969999999985158e-06, 3.09310000000014e-05, 1.068999999999376e-06, 2.5027999999999856e-05, 1.054999999999806e-06, 2.0097999999999644e-05, 1.0410000000002362e-06, 3.063900000000244e-05, 1.0699999999988496e-06, 2.8471999999998138e-05, 1.054999999999806e-06, 1.8514000000000724e-05, 1.0559999999992797e-06, 1.4444000000002344e-05, 1.0699999999988496e-06, 1.662499999999928e-05, 1.0690000000028455e-06, 1.1263999999996943e-05, 1.0830000000024154e-06, 1.8749999999997935e-05, 1.0419999999997098e-06, 1.1653000000000358e-05, 1.068999999999376e-06, 2.3792000000001645e-05, 1.068999999999376e-06, 2.287500000000206e-05, 1.0419999999997098e-06, 2.4443999999998467e-05, 1.0559999999992797e-06, 2.9083000000002662e-05, 1.0699999999988496e-06, 2.129099999999967e-05, 1.0699999999988496e-06, 1.7249999999999904e-05, 1.068999999999376e-06, 2.322300000000277e-05, 1.012999999997627e-06, 2.8791999999999707e-05, 1.0560000000027492e-06, 1.8193999999999155e-05, 1.082999999998946e-06, 2.565300000000048e-05, 1.0559999999992797e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 2.6930000000001397e-05, 1.0559999999992797e-06, 1.943100000000031e-05, 1.054999999999806e-06, 2.3820000000000785e-05, 1.1109999999980857e-06, 2.7472000000000607e-05, 1.054999999999806e-06, 3.066700000000158e-05, 1.0699999999988496e-06, 1.911099999999874e-05, 1.054999999999806e-06, 1.8820000000002723e-05, 1.054999999999806e-06, 3.066699999999811e-05, 1.0419999999997098e-06, 2.7222000000000357e-05, 1.0830000000024154e-06, 1.6319999999996754e-05, 1.0410000000002362e-06, 2.037500000000303e-05, 1.0839999999984196e-06, 2.8457999999998568e-05, 1.0830000000024154e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:02.530" endtime="20201112 12:42:02.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.526" endtime="20201112 12:42:02.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.538" level="INFO">${RESULT} = [{'time': 0.019137917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.019165181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:02.535" endtime="20201112 12:42:02.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.552" level="INFO">${GPIO_OVERHEAD} = {'time': [0.019137917, 0.019165181, 0.019185375, 0.019209292, 0.019226694, 0.019258097, 0.019283611, 0.019310361, 0.019325806, 0.0193435, 0.019371167, 0.019388889, 0.019401889, 0.019432667, 0.01944944...</msg>
<status status="PASS" starttime="20201112 12:42:02.539" endtime="20201112 12:42:02.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.556" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:02.555" endtime="20201112 12:42:02.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.559" level="INFO">VALUE: [1.1809999999994047e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0970000000019853e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0969999999985158e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0690000000028455e-06, 1.0830000000024154e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.012999999997627e-06, 1.0560000000027492e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.1109999999980857e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0419999999997098e-06, 1.0830000000024154e-06, 1.0410000000002362e-06, 1.0839999999984196e-06, 1.0830000000024154e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.557" endtime="20201112 12:42:02.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.553" endtime="20201112 12:42:02.560"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.562" endtime="20201112 12:42:02.563"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.565" endtime="20201112 12:42:02.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.563" endtime="20201112 12:42:02.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.560" endtime="20201112 12:42:02.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.161" endtime="20201112 12:42:02.586"></status>
</kw>
<msg timestamp="20201112 12:42:02.586" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.593" endtime="20201112 12:42:02.602"></status>
</kw>
<msg timestamp="20201112 12:42:02.603" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.592" endtime="20201112 12:42:02.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.605" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:02.604" endtime="20201112 12:42:02.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.606" endtime="20201112 12:42:02.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.589" endtime="20201112 12:42:02.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.588" endtime="20201112 12:42:02.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.615" endtime="20201112 12:42:02.899"></status>
</kw>
<msg timestamp="20201112 12:42:02.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.614" endtime="20201112 12:42:02.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018230056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:02.903" endtime="20201112 12:42:02.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.912" endtime="20201112 12:42:02.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.611" endtime="20201112 12:42:02.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.609" endtime="20201112 12:42:02.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.918" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:02.917" endtime="20201112 12:42:02.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.923" level="INFO">VALUE: [{'time': 0.018230056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018231264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.207999999999071e-06, 'source_diff': 1.207999999999071e-06}, {'time': 0.018247833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6569000000001e-05, 'source_diff': 1.6569000000001e-05}, {'time': 0.018248889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018272361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3472000000000076e-05, 'source_diff': 2.3472000000000076e-05}, {'time': 0.018273417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9152000000001446e-05, 'source_diff': 1.9152000000001446e-05}, {'time': 0.018293625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018307153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3527999999998763e-05, 'source_diff': 1.3527999999998763e-05}, {'time': 0.018308194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018322653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4459000000001387e-05, 'source_diff': 1.4459000000001387e-05}, {'time': 0.018323722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018341931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.82089999999982e-05, 'source_diff': 1.82089999999982e-05}, {'time': 0.018342944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.018364556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1612000000000714e-05, 'source_diff': 2.1612000000000714e-05}, {'time': 0.018365639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018396292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065300000000201e-05, 'source_diff': 3.065300000000201e-05}, {'time': 0.018397347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018412403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5055999999999403e-05, 'source_diff': 1.5055999999999403e-05}, {'time': 0.0184135, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018443806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0306000000000777e-05, 'source_diff': 3.0306000000000777e-05}, {'time': 0.018444889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018468042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.315300000000145e-05, 'source_diff': 2.315300000000145e-05}, {'time': 0.018469111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018491972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.286099999999902e-05, 'source_diff': 2.286099999999902e-05}, {'time': 0.018493028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018514958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1929999999999866e-05, 'source_diff': 2.1929999999999866e-05}, {'time': 0.018516014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018539208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3194000000000686e-05, 'source_diff': 2.3194000000000686e-05}, {'time': 0.01854025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.01856, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9749999999998935e-05, 'source_diff': 1.9749999999998935e-05}, {'time': 0.018561056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018582681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.01858375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018612222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8472000000001607e-05, 'source_diff': 2.8472000000001607e-05}, {'time': 0.018613278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018638639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5360999999998052e-05, 'source_diff': 2.5360999999998052e-05}, {'time': 0.018639708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018662861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.315299999999798e-05, 'source_diff': 2.315299999999798e-05}, {'time': 0.018663917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018693319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9402000000001288e-05, 'source_diff': 2.9402000000001288e-05}, {'time': 0.018694389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018713903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9514000000001724e-05, 'source_diff': 1.9514000000001724e-05}, {'time': 0.018714889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}, {'time': 0.018728111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3222000000000234e-05, 'source_diff': 1.3222000000000234e-05}, {'time': 0.018729153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018760111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.018761181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018774389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.018775444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018803917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847300000000108e-05, 'source_diff': 2.847300000000108e-05}, {'time': 0.018804972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018825972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.018827028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018840236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.018841306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018854889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3583000000001039e-05, 'source_diff': 1.3583000000001039e-05}, {'time': 0.018855875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018883417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7541999999998457e-05, 'source_diff': 2.7541999999998457e-05}, {'time': 0.018884472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018902347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.787500000000053e-05, 'source_diff': 1.787500000000053e-05}, {'time': 0.018903417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018928153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4736000000000896e-05, 'source_diff': 2.4736000000000896e-05}, {'time': 0.018929222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018957986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8764000000000567e-05, 'source_diff': 2.8764000000000567e-05}, {'time': 0.018959069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018989083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0014000000001817e-05, 'source_diff': 3.0014000000001817e-05}, {'time': 0.018990167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019018917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8750000000000997e-05, 'source_diff': 2.8750000000000997e-05}, {'time': 0.019019972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019031625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.019032722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019050569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.784700000000139e-05, 'source_diff': 1.784700000000139e-05}, {'time': 0.019051625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019075125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3499999999999216e-05, 'source_diff': 2.3499999999999216e-05}, {'time': 0.019076181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019094681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8499999999997685e-05, 'source_diff': 1.8499999999997685e-05}, {'time': 0.019095736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019118278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2542000000000395e-05, 'source_diff': 2.2542000000000395e-05}, {'time': 0.019119347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019146583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.019147639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019176722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9082999999999193e-05, 'source_diff': 2.9082999999999193e-05}, {'time': 0.019177778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019207819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0041000000001483e-05, 'source_diff': 3.0041000000001483e-05}, {'time': 0.019208875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019224875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5999999999998654e-05, 'source_diff': 1.5999999999998654e-05}, {'time': 0.019225972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019241639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.566700000000046e-05, 'source_diff': 1.566700000000046e-05}, {'time': 0.019242708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019265875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.316699999999755e-05, 'source_diff': 2.316699999999755e-05}, {'time': 0.019266944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019290736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3791999999998176e-05, 'source_diff': 2.3791999999998176e-05}, {'time': 0.019291792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019303806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2014000000001163e-05, 'source_diff': 1.2014000000001163e-05}, {'time': 0.019304819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.019326125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1305999999998715e-05, 'source_diff': 2.1305999999998715e-05}, {'time': 0.019327181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019353472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6291000000001202e-05, 'source_diff': 2.6291000000001202e-05}, {'time': 0.019354569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:02.919" endtime="20201112 12:42:02.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.915" endtime="20201112 12:42:02.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:02.949" level="INFO">${debug-compressed} = {'time': [0.018230056, 0.018231264, 0.018247833, 0.018248889, 0.018272361, 0.018273417, 0.018292569, 0.018293625, 0.018307153, 0.018308194, 0.018322653, 0.018323722, 0.018341931, 0.018342944, 0.018364...</msg>
<status status="PASS" starttime="20201112 12:42:02.926" endtime="20201112 12:42:02.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.953" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:02.952" endtime="20201112 12:42:02.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.957" level="INFO">VALUE: {'time': [0.018230056, 0.018231264, 0.018247833, 0.018248889, 0.018272361, 0.018273417, 0.018292569, 0.018293625, 0.018307153, 0.018308194, 0.018322653, 0.018323722, 0.018341931, 0.018342944, 0.018364556, 0.018365639, 0.018396292, 0.018397347, 0.018412403, 0.0184135, 0.018443806, 0.018444889, 0.018468042, 0.018469111, 0.018491972, 0.018493028, 0.018514958, 0.018516014, 0.018539208, 0.01854025, 0.01856, 0.018561056, 0.018582681, 0.01858375, 0.018612222, 0.018613278, 0.018638639, 0.018639708, 0.018662861, 0.018663917, 0.018693319, 0.018694389, 0.018713903, 0.018714889, 0.018728111, 0.018729153, 0.018760111, 0.018761181, 0.018774389, 0.018775444, 0.018803917, 0.018804972, 0.018825972, 0.018827028, 0.018840236, 0.018841306, 0.018854889, 0.018855875, 0.018883417, 0.018884472, 0.018902347, 0.018903417, 0.018928153, 0.018929222, 0.018957986, 0.018959069, 0.018989083, 0.018990167, 0.019018917, 0.019019972, 0.019031625, 0.019032722, 0.019050569, 0.019051625, 0.019075125, 0.019076181, 0.019094681, 0.019095736, 0.019118278, 0.019119347, 0.019146583, 0.019147639, 0.019176722, 0.019177778, 0.019207819, 0.019208875, 0.019224875, 0.019225972, 0.019241639, 0.019242708, 0.019265875, 0.019266944, 0.019290736, 0.019291792, 0.019303806, 0.019304819, 0.019326125, 0.019327181, 0.019353472, 0.019354569], 'source_diff': [0, 1.207999999999071e-06, 1.6569000000001e-05, 1.0559999999992797e-06, 2.3472000000000076e-05, 1.0559999999992797e-06, 1.9152000000001446e-05, 1.0559999999992797e-06, 1.3527999999998763e-05, 1.0410000000002362e-06, 1.4459000000001387e-05, 1.068999999999376e-06, 1.82089999999982e-05, 1.0130000000010964e-06, 2.1612000000000714e-05, 1.082999999998946e-06, 3.065300000000201e-05, 1.054999999999806e-06, 1.5055999999999403e-05, 1.0969999999985158e-06, 3.0306000000000777e-05, 1.082999999998946e-06, 2.315300000000145e-05, 1.068999999999376e-06, 2.286099999999902e-05, 1.0560000000027492e-06, 2.1929999999999866e-05, 1.0559999999992797e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 1.9749999999998935e-05, 1.0559999999992797e-06, 2.162500000000081e-05, 1.068999999999376e-06, 2.8472000000001607e-05, 1.0559999999992797e-06, 2.5360999999998052e-05, 1.0690000000028455e-06, 2.315299999999798e-05, 1.0559999999992797e-06, 2.9402000000001288e-05, 1.0699999999988496e-06, 1.9514000000001724e-05, 9.859999999979607e-07, 1.3222000000000234e-05, 1.0419999999997098e-06, 3.095800000000107e-05, 1.0699999999988496e-06, 1.3208000000000664e-05, 1.054999999999806e-06, 2.847300000000108e-05, 1.054999999999806e-06, 2.1000000000000185e-05, 1.0559999999992797e-06, 1.3208000000000664e-05, 1.0699999999988496e-06, 1.3583000000001039e-05, 9.860000000014302e-07, 2.7541999999998457e-05, 1.054999999999806e-06, 1.787500000000053e-05, 1.0699999999988496e-06, 2.4736000000000896e-05, 1.068999999999376e-06, 2.8764000000000567e-05, 1.082999999998946e-06, 3.0014000000001817e-05, 1.0839999999984196e-06, 2.8750000000000997e-05, 1.054999999999806e-06, 1.1653000000000358e-05, 1.0969999999985158e-06, 1.784700000000139e-05, 1.0559999999992797e-06, 2.3499999999999216e-05, 1.0560000000027492e-06, 1.8499999999997685e-05, 1.054999999999806e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 2.7235999999999927e-05, 1.0560000000027492e-06, 2.9082999999999193e-05, 1.0559999999992797e-06, 3.0041000000001483e-05, 1.0559999999992797e-06, 1.5999999999998654e-05, 1.0970000000019853e-06, 1.566700000000046e-05, 1.068999999999376e-06, 2.316699999999755e-05, 1.0690000000028455e-06, 2.3791999999998176e-05, 1.0559999999992797e-06, 1.2014000000001163e-05, 1.0130000000010964e-06, 2.1305999999998715e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.0969999999985158e-06], 'diff': [0, 1.207999999999071e-06, 1.6569000000001e-05, 1.0559999999992797e-06, 2.3472000000000076e-05, 1.0559999999992797e-06, 1.9152000000001446e-05, 1.0559999999992797e-06, 1.3527999999998763e-05, 1.0410000000002362e-06, 1.4459000000001387e-05, 1.068999999999376e-06, 1.82089999999982e-05, 1.0130000000010964e-06, 2.1612000000000714e-05, 1.082999999998946e-06, 3.065300000000201e-05, 1.054999999999806e-06, 1.5055999999999403e-05, 1.0969999999985158e-06, 3.0306000000000777e-05, 1.082999999998946e-06, 2.315300000000145e-05, 1.068999999999376e-06, 2.286099999999902e-05, 1.0560000000027492e-06, 2.1929999999999866e-05, 1.0559999999992797e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 1.9749999999998935e-05, 1.0559999999992797e-06, 2.162500000000081e-05, 1.068999999999376e-06, 2.8472000000001607e-05, 1.0559999999992797e-06, 2.5360999999998052e-05, 1.0690000000028455e-06, 2.315299999999798e-05, 1.0559999999992797e-06, 2.9402000000001288e-05, 1.0699999999988496e-06, 1.9514000000001724e-05, 9.859999999979607e-07, 1.3222000000000234e-05, 1.0419999999997098e-06, 3.095800000000107e-05, 1.0699999999988496e-06, 1.3208000000000664e-05, 1.054999999999806e-06, 2.847300000000108e-05, 1.054999999999806e-06, 2.1000000000000185e-05, 1.0559999999992797e-06, 1.3208000000000664e-05, 1.0699999999988496e-06, 1.3583000000001039e-05, 9.860000000014302e-07, 2.7541999999998457e-05, 1.054999999999806e-06, 1.787500000000053e-05, 1.0699999999988496e-06, 2.4736000000000896e-05, 1.068999999999376e-06, 2.8764000000000567e-05, 1.082999999998946e-06, 3.0014000000001817e-05, 1.0839999999984196e-06, 2.8750000000000997e-05, 1.054999999999806e-06, 1.1653000000000358e-05, 1.0969999999985158e-06, 1.784700000000139e-05, 1.0559999999992797e-06, 2.3499999999999216e-05, 1.0560000000027492e-06, 1.8499999999997685e-05, 1.054999999999806e-06, 2.2542000000000395e-05, 1.068999999999376e-06, 2.7235999999999927e-05, 1.0560000000027492e-06, 2.9082999999999193e-05, 1.0559999999992797e-06, 3.0041000000001483e-05, 1.0559999999992797e-06, 1.5999999999998654e-05, 1.0970000000019853e-06, 1.566700000000046e-05, 1.068999999999376e-06, 2.316699999999755e-05, 1.0690000000028455e-06, 2.3791999999998176e-05, 1.0559999999992797e-06, 1.2014000000001163e-05, 1.0130000000010964e-06, 2.1305999999998715e-05, 1.0559999999992797e-06, 2.6291000000001202e-05, 1.0969999999985158e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:02.954" endtime="20201112 12:42:02.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.950" endtime="20201112 12:42:02.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:02.962" level="INFO">${RESULT} = [{'time': 0.018231264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.207999999999071e-06, 'source_diff': 1.207999999999071e-06}, {'time': 0.018248889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:02.959" endtime="20201112 12:42:02.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:02.975" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018231264, 0.018248889, 0.018273417, 0.018293625, 0.018308194, 0.018323722, 0.018342944, 0.018365639, 0.018397347, 0.0184135, 0.018444889, 0.018469111, 0.018493028, 0.018516014, 0.01854025...</msg>
<status status="PASS" starttime="20201112 12:42:02.963" endtime="20201112 12:42:02.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:02.979" endtime="20201112 12:42:02.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:02.982" level="INFO">VALUE: [1.207999999999071e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0130000000010964e-06, 1.082999999998946e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 9.859999999979607e-07, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 9.860000000014302e-07, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.082999999998946e-06, 1.0839999999984196e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0560000000027492e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0970000000019853e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.0130000000010964e-06, 1.0559999999992797e-06, 1.0969999999985158e-06]</msg>
<status status="PASS" starttime="20201112 12:42:02.981" endtime="20201112 12:42:02.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.976" endtime="20201112 12:42:02.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:02.985" endtime="20201112 12:42:02.986"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:02.988" endtime="20201112 12:42:03.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.987" endtime="20201112 12:42:03.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.983" endtime="20201112 12:42:03.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:02.587" endtime="20201112 12:42:03.009"></status>
</kw>
<msg timestamp="20201112 12:42:03.009" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.017" endtime="20201112 12:42:03.026"></status>
</kw>
<msg timestamp="20201112 12:42:03.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.015" endtime="20201112 12:42:03.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.029" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.027" endtime="20201112 12:42:03.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.030" endtime="20201112 12:42:03.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.013" endtime="20201112 12:42:03.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.011" endtime="20201112 12:42:03.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.040" endtime="20201112 12:42:03.325"></status>
</kw>
<msg timestamp="20201112 12:42:03.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.038" endtime="20201112 12:42:03.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.330" endtime="20201112 12:42:03.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.338" endtime="20201112 12:42:03.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.036" endtime="20201112 12:42:03.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.034" endtime="20201112 12:42:03.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.344" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:03.343" endtime="20201112 12:42:03.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.349" level="INFO">VALUE: [{'time': 0.018456667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018457833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.018470361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.018471431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018493042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.018494097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018521667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7569999999997596e-05, 'source_diff': 2.7569999999997596e-05}, {'time': 0.018522681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018549278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.018550347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018570097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.018571153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018595597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4443999999998467e-05, 'source_diff': 2.4443999999998467e-05}, {'time': 0.018596625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018618236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.018619306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018643097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.379100000000217e-05, 'source_diff': 2.379100000000217e-05}, {'time': 0.018644153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018674181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0028000000001387e-05, 'source_diff': 3.0028000000001387e-05}, {'time': 0.018675264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018691583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.018692639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018714556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.191699999999977e-05, 'source_diff': 2.191699999999977e-05}, {'time': 0.018715611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018729444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3833000000001289e-05, 'source_diff': 1.3833000000001289e-05}, {'time': 0.0187305, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018746819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.631900000000075e-05, 'source_diff': 1.631900000000075e-05}, {'time': 0.018747875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018768556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068099999999809e-05, 'source_diff': 2.068099999999809e-05}, {'time': 0.018769639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018783778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018784833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018796472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1639000000000788e-05, 'source_diff': 1.1639000000000788e-05}, {'time': 0.018797583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018813847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6264000000001944e-05, 'source_diff': 1.6264000000001944e-05}, {'time': 0.018814958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018832514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7556000000001903e-05, 'source_diff': 1.7556000000001903e-05}, {'time': 0.018833542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018851722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8179999999999585e-05, 'source_diff': 1.8179999999999585e-05}, {'time': 0.018852792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018871597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880500000000021e-05, 'source_diff': 1.880500000000021e-05}, {'time': 0.018872708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018892722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0014000000002224e-05, 'source_diff': 2.0014000000002224e-05}, {'time': 0.018893778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018910431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.665299999999842e-05, 'source_diff': 1.665299999999842e-05}, {'time': 0.018911472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018942125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065300000000201e-05, 'source_diff': 3.065300000000201e-05}, {'time': 0.018943181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018954458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277000000000509e-05, 'source_diff': 1.1277000000000509e-05}, {'time': 0.018955528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018977708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2180000000000116e-05, 'source_diff': 2.2180000000000116e-05}, {'time': 0.018978819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019008167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9347999999998486e-05, 'source_diff': 2.9347999999998486e-05}, {'time': 0.019009222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019033042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3820000000000785e-05, 'source_diff': 2.3820000000000785e-05}, {'time': 0.019034097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019060694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.019061778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.0190815, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9721999999999795e-05, 'source_diff': 1.9721999999999795e-05}, {'time': 0.019082556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019099806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019100889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019114097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3208000000000664e-05, 'source_diff': 1.3208000000000664e-05}, {'time': 0.019115139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019144542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.019145597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019162542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6945000000000848e-05, 'source_diff': 1.6945000000000848e-05}, {'time': 0.019163639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019187431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.019188528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019210722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2193999999999686e-05, 'source_diff': 2.2193999999999686e-05}, {'time': 0.019211764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019232764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.019233833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019253264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.943100000000031e-05, 'source_diff': 1.943100000000031e-05}, {'time': 0.019254403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.139000000000695e-06, 'source_diff': 1.139000000000695e-06}, {'time': 0.019279667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5264000000000536e-05, 'source_diff': 2.5264000000000536e-05}, {'time': 0.019280722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019305458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4736000000000896e-05, 'source_diff': 2.4736000000000896e-05}, {'time': 0.019306569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.019325097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8528000000000294e-05, 'source_diff': 1.8528000000000294e-05}, {'time': 0.019326097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019344292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.019345333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019365083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9750000000002405e-05, 'source_diff': 1.9750000000002405e-05}, {'time': 0.019366139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019381222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.508299999999907e-05, 'source_diff': 1.508299999999907e-05}, {'time': 0.019382278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019412, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9721999999999388e-05, 'source_diff': 2.9721999999999388e-05}, {'time': 0.019413056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019437514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4457999999998037e-05, 'source_diff': 2.4457999999998037e-05}, {'time': 0.019438528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019467, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8472000000001607e-05, 'source_diff': 2.8472000000001607e-05}, {'time': 0.019468056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.0194875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9444000000000405e-05, 'source_diff': 1.9444000000000405e-05}, {'time': 0.019488556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019506458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7902000000000196e-05, 'source_diff': 1.7902000000000196e-05}, {'time': 0.019507514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019532542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.019533597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:03.345" endtime="20201112 12:42:03.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.341" endtime="20201112 12:42:03.351"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:03.375" level="INFO">${debug-compressed} = {'time': [0.018456667, 0.018457833, 0.018470361, 0.018471431, 0.018493042, 0.018494097, 0.018521667, 0.018522681, 0.018549278, 0.018550347, 0.018570097, 0.018571153, 0.018595597, 0.018596625, 0.018618...</msg>
<status status="PASS" starttime="20201112 12:42:03.352" endtime="20201112 12:42:03.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.379" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:03.378" endtime="20201112 12:42:03.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.383" level="INFO">VALUE: {'time': [0.018456667, 0.018457833, 0.018470361, 0.018471431, 0.018493042, 0.018494097, 0.018521667, 0.018522681, 0.018549278, 0.018550347, 0.018570097, 0.018571153, 0.018595597, 0.018596625, 0.018618236, 0.018619306, 0.018643097, 0.018644153, 0.018674181, 0.018675264, 0.018691583, 0.018692639, 0.018714556, 0.018715611, 0.018729444, 0.0187305, 0.018746819, 0.018747875, 0.018768556, 0.018769639, 0.018783778, 0.018784833, 0.018796472, 0.018797583, 0.018813847, 0.018814958, 0.018832514, 0.018833542, 0.018851722, 0.018852792, 0.018871597, 0.018872708, 0.018892722, 0.018893778, 0.018910431, 0.018911472, 0.018942125, 0.018943181, 0.018954458, 0.018955528, 0.018977708, 0.018978819, 0.019008167, 0.019009222, 0.019033042, 0.019034097, 0.019060694, 0.019061778, 0.0190815, 0.019082556, 0.019099806, 0.019100889, 0.019114097, 0.019115139, 0.019144542, 0.019145597, 0.019162542, 0.019163639, 0.019187431, 0.019188528, 0.019210722, 0.019211764, 0.019232764, 0.019233833, 0.019253264, 0.019254403, 0.019279667, 0.019280722, 0.019305458, 0.019306569, 0.019325097, 0.019326097, 0.019344292, 0.019345333, 0.019365083, 0.019366139, 0.019381222, 0.019382278, 0.019412, 0.019413056, 0.019437514, 0.019438528, 0.019467, 0.019468056, 0.0194875, 0.019488556, 0.019506458, 0.019507514, 0.019532542, 0.019533597], 'source_diff': [0, 1.1660000000003612e-06, 1.2528000000001233e-05, 1.0699999999988496e-06, 2.161100000000124e-05, 1.054999999999806e-06, 2.7569999999997596e-05, 1.01400000000057e-06, 2.6596999999999732e-05, 1.068999999999376e-06, 1.9750000000002405e-05, 1.0559999999992797e-06, 2.4443999999998467e-05, 1.02800000000014e-06, 2.161100000000124e-05, 1.0699999999988496e-06, 2.379100000000217e-05, 1.0559999999992797e-06, 3.0028000000001387e-05, 1.082999999998946e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.191699999999977e-05, 1.054999999999806e-06, 1.3833000000001289e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.068099999999809e-05, 1.0830000000024154e-06, 1.4138999999999818e-05, 1.054999999999806e-06, 1.1639000000000788e-05, 1.1109999999980857e-06, 1.6264000000001944e-05, 1.1109999999980857e-06, 1.7556000000001903e-05, 1.02800000000014e-06, 1.8179999999999585e-05, 1.0699999999988496e-06, 1.880500000000021e-05, 1.1109999999980857e-06, 2.0014000000002224e-05, 1.0559999999992797e-06, 1.665299999999842e-05, 1.0410000000002362e-06, 3.065300000000201e-05, 1.0559999999992797e-06, 1.1277000000000509e-05, 1.0699999999988496e-06, 2.2180000000000116e-05, 1.1110000000015552e-06, 2.9347999999998486e-05, 1.054999999999806e-06, 2.3820000000000785e-05, 1.054999999999806e-06, 2.6596999999999732e-05, 1.084000000001889e-06, 1.9721999999999795e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.082999999998946e-06, 1.3208000000000664e-05, 1.0419999999997098e-06, 2.9403000000000762e-05, 1.054999999999806e-06, 1.6945000000000848e-05, 1.0969999999985158e-06, 2.3792000000001645e-05, 1.0969999999985158e-06, 2.2193999999999686e-05, 1.0419999999997098e-06, 2.1000000000000185e-05, 1.068999999999376e-06, 1.943100000000031e-05, 1.139000000000695e-06, 2.5264000000000536e-05, 1.054999999999806e-06, 2.4736000000000896e-05, 1.1109999999980857e-06, 1.8528000000000294e-05, 1.000000000001e-06, 1.819499999999863e-05, 1.0410000000002362e-06, 1.9750000000002405e-05, 1.0559999999992797e-06, 1.508299999999907e-05, 1.0559999999992797e-06, 2.9721999999999388e-05, 1.0560000000027492e-06, 2.4457999999998037e-05, 1.01400000000057e-06, 2.8472000000001607e-05, 1.0559999999992797e-06, 1.9444000000000405e-05, 1.0559999999992797e-06, 1.7902000000000196e-05, 1.0559999999992797e-06, 2.5027999999999856e-05, 1.054999999999806e-06], 'diff': [0, 1.1660000000003612e-06, 1.2528000000001233e-05, 1.0699999999988496e-06, 2.161100000000124e-05, 1.054999999999806e-06, 2.7569999999997596e-05, 1.01400000000057e-06, 2.6596999999999732e-05, 1.068999999999376e-06, 1.9750000000002405e-05, 1.0559999999992797e-06, 2.4443999999998467e-05, 1.02800000000014e-06, 2.161100000000124e-05, 1.0699999999988496e-06, 2.379100000000217e-05, 1.0559999999992797e-06, 3.0028000000001387e-05, 1.082999999998946e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.191699999999977e-05, 1.054999999999806e-06, 1.3833000000001289e-05, 1.0559999999992797e-06, 1.631900000000075e-05, 1.0559999999992797e-06, 2.068099999999809e-05, 1.0830000000024154e-06, 1.4138999999999818e-05, 1.054999999999806e-06, 1.1639000000000788e-05, 1.1109999999980857e-06, 1.6264000000001944e-05, 1.1109999999980857e-06, 1.7556000000001903e-05, 1.02800000000014e-06, 1.8179999999999585e-05, 1.0699999999988496e-06, 1.880500000000021e-05, 1.1109999999980857e-06, 2.0014000000002224e-05, 1.0559999999992797e-06, 1.665299999999842e-05, 1.0410000000002362e-06, 3.065300000000201e-05, 1.0559999999992797e-06, 1.1277000000000509e-05, 1.0699999999988496e-06, 2.2180000000000116e-05, 1.1110000000015552e-06, 2.9347999999998486e-05, 1.054999999999806e-06, 2.3820000000000785e-05, 1.054999999999806e-06, 2.6596999999999732e-05, 1.084000000001889e-06, 1.9721999999999795e-05, 1.0559999999992797e-06, 1.7249999999999904e-05, 1.082999999998946e-06, 1.3208000000000664e-05, 1.0419999999997098e-06, 2.9403000000000762e-05, 1.054999999999806e-06, 1.6945000000000848e-05, 1.0969999999985158e-06, 2.3792000000001645e-05, 1.0969999999985158e-06, 2.2193999999999686e-05, 1.0419999999997098e-06, 2.1000000000000185e-05, 1.068999999999376e-06, 1.943100000000031e-05, 1.139000000000695e-06, 2.5264000000000536e-05, 1.054999999999806e-06, 2.4736000000000896e-05, 1.1109999999980857e-06, 1.8528000000000294e-05, 1.000000000001e-06, 1.819499999999863e-05, 1.0410000000002362e-06, 1.9750000000002405e-05, 1.0559999999992797e-06, 1.508299999999907e-05, 1.0559999999992797e-06, 2.9721999999999388e-05, 1.0560000000027492e-06, 2.4457999999998037e-05, 1.01400000000057e-06, 2.8472000000001607e-05, 1.0559999999992797e-06, 1.9444000000000405e-05, 1.0559999999992797e-06, 1.7902000000000196e-05, 1.0559999999992797e-06, 2.5027999999999856e-05, 1.054999999999806e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:03.380" endtime="20201112 12:42:03.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.376" endtime="20201112 12:42:03.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.389" level="INFO">${RESULT} = [{'time': 0.018457833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1660000000003612e-06, 'source_diff': 1.1660000000003612e-06}, {'time': 0.018471431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.385" endtime="20201112 12:42:03.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.402" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018457833, 0.018471431, 0.018494097, 0.018522681, 0.018550347, 0.018571153, 0.018596625, 0.018619306, 0.018644153, 0.018675264, 0.018692639, 0.018715611, 0.0187305, 0.018747875, 0.01876963...</msg>
<status status="PASS" starttime="20201112 12:42:03.390" endtime="20201112 12:42:03.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.406" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:03.405" endtime="20201112 12:42:03.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.409" level="INFO">VALUE: [1.1660000000003612e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.1109999999980857e-06, 1.1109999999980857e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.1109999999980857e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.1110000000015552e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.084000000001889e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.139000000000695e-06, 1.054999999999806e-06, 1.1109999999980857e-06, 1.000000000001e-06, 1.0410000000002362e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.01400000000057e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.054999999999806e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.407" endtime="20201112 12:42:03.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.403" endtime="20201112 12:42:03.410"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.412" endtime="20201112 12:42:03.413"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.415" endtime="20201112 12:42:03.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.414" endtime="20201112 12:42:03.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.410" endtime="20201112 12:42:03.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.010" endtime="20201112 12:42:03.436"></status>
</kw>
<msg timestamp="20201112 12:42:03.436" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.443" endtime="20201112 12:42:03.452"></status>
</kw>
<msg timestamp="20201112 12:42:03.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.442" endtime="20201112 12:42:03.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.454" endtime="20201112 12:42:03.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.456" endtime="20201112 12:42:03.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.439" endtime="20201112 12:42:03.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.438" endtime="20201112 12:42:03.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.465" endtime="20201112 12:42:03.750"></status>
</kw>
<msg timestamp="20201112 12:42:03.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:03.464" endtime="20201112 12:42:03.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207181, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:03.754" endtime="20201112 12:42:03.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.781" endtime="20201112 12:42:03.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.461" endtime="20201112 12:42:03.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.460" endtime="20201112 12:42:03.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.788" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:03.787" endtime="20201112 12:42:03.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.793" level="INFO">VALUE: [{'time': 0.018206, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018207181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018227153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9972000000000045e-05, 'source_diff': 1.9972000000000045e-05}, {'time': 0.018228236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.018258556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0320000000000347e-05, 'source_diff': 3.0320000000000347e-05}, {'time': 0.018259625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018280625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.018281694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018302042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0347999999999894e-05, 'source_diff': 2.0347999999999894e-05}, {'time': 0.018303111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018329403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6292000000000676e-05, 'source_diff': 2.6292000000000676e-05}, {'time': 0.018330458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018345222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.018346278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018371042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4764000000000036e-05, 'source_diff': 2.4764000000000036e-05}, {'time': 0.018372069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0270000000006663e-06, 'source_diff': 1.0270000000006663e-06}, {'time': 0.018390264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.018391333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018404514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3181000000000997e-05, 'source_diff': 1.3181000000000997e-05}, {'time': 0.018405583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018425014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.943100000000031e-05, 'source_diff': 1.943100000000031e-05}, {'time': 0.018426083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018453986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7902999999999262e-05, 'source_diff': 2.7902999999999262e-05}, {'time': 0.018454986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018478778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3792000000001645e-05, 'source_diff': 2.3792000000001645e-05}, {'time': 0.018479833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018499278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944499999999988e-05, 'source_diff': 1.944499999999988e-05}, {'time': 0.018500347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018519139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8792000000000114e-05, 'source_diff': 1.8792000000000114e-05}, {'time': 0.018520208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018539333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.018540403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018569792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.018570847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018590931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0084000000000074e-05, 'source_diff': 2.0084000000000074e-05}, {'time': 0.018591972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0409999999967667e-06, 'source_diff': 1.0409999999967667e-06}, {'time': 0.018622319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0347000000000013e-05, 'source_diff': 3.0347000000000013e-05}, {'time': 0.018623431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1120000000010288e-06, 'source_diff': 1.1120000000010288e-06}, {'time': 0.018645625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2193999999999686e-05, 'source_diff': 2.2193999999999686e-05}, {'time': 0.018646667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018671069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4401999999999757e-05, 'source_diff': 2.4401999999999757e-05}, {'time': 0.018672153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.084000000001889e-06, 'source_diff': 1.084000000001889e-06}, {'time': 0.018700611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8457999999998568e-05, 'source_diff': 2.8457999999998568e-05}, {'time': 0.018701667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018715806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4138999999999818e-05, 'source_diff': 1.4138999999999818e-05}, {'time': 0.018716861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018734778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.791699999999924e-05, 'source_diff': 1.791699999999924e-05}, {'time': 0.018735806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.018764903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9096999999998763e-05, 'source_diff': 2.9096999999998763e-05}, {'time': 0.018765958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018782583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.662499999999928e-05, 'source_diff': 1.662499999999928e-05}, {'time': 0.018783653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.018795611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.018796667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018820778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.018821833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018845944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.018847014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018868, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.018869069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018892222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.315300000000145e-05, 'source_diff': 2.315300000000145e-05}, {'time': 0.018893319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018910861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7542000000002334e-05, 'source_diff': 1.7542000000002334e-05}, {'time': 0.018911917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018937583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5666000000000577e-05, 'source_diff': 2.5666000000000577e-05}, {'time': 0.018938653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018955889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7236000000000334e-05, 'source_diff': 1.7236000000000334e-05}, {'time': 0.018956958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018969222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.018970278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018994708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4429999999998897e-05, 'source_diff': 2.4429999999998897e-05}, {'time': 0.018995764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019021431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.566700000000005e-05, 'source_diff': 2.566700000000005e-05}, {'time': 0.019022486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.019046917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.443099999999837e-05, 'source_diff': 2.443099999999837e-05}, {'time': 0.019048, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019070514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2514000000001255e-05, 'source_diff': 2.2514000000001255e-05}, {'time': 0.019071583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019090708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.019091764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019106528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.019107569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019119833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2263999999997943e-05, 'source_diff': 1.2263999999997943e-05}, {'time': 0.019120903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.0191475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6596999999999732e-05, 'source_diff': 2.6596999999999732e-05}, {'time': 0.019148556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019171431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.287499999999859e-05, 'source_diff': 2.287499999999859e-05}, {'time': 0.019172472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019188792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6320000000000223e-05, 'source_diff': 1.6320000000000223e-05}, {'time': 0.019189861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019207417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7556000000001903e-05, 'source_diff': 1.7556000000001903e-05}, {'time': 0.019208514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019222639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4125000000000248e-05, 'source_diff': 1.4125000000000248e-05}, {'time': 0.019223681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019253708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0027000000001913e-05, 'source_diff': 3.0027000000001913e-05}, {'time': 0.019254764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019280167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.540300000000023e-05, 'source_diff': 2.540300000000023e-05}, {'time': 0.019281181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019295639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4457999999998444e-05, 'source_diff': 1.4457999999998444e-05}, {'time': 0.019296764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:03.789" endtime="20201112 12:42:03.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.785" endtime="20201112 12:42:03.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:03.819" level="INFO">${debug-compressed} = {'time': [0.018206, 0.018207181, 0.018227153, 0.018228236, 0.018258556, 0.018259625, 0.018280625, 0.018281694, 0.018302042, 0.018303111, 0.018329403, 0.018330458, 0.018345222, 0.018346278, 0.018371042...</msg>
<status status="PASS" starttime="20201112 12:42:03.795" endtime="20201112 12:42:03.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.823" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:03.822" endtime="20201112 12:42:03.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.827" level="INFO">VALUE: {'time': [0.018206, 0.018207181, 0.018227153, 0.018228236, 0.018258556, 0.018259625, 0.018280625, 0.018281694, 0.018302042, 0.018303111, 0.018329403, 0.018330458, 0.018345222, 0.018346278, 0.018371042, 0.018372069, 0.018390264, 0.018391333, 0.018404514, 0.018405583, 0.018425014, 0.018426083, 0.018453986, 0.018454986, 0.018478778, 0.018479833, 0.018499278, 0.018500347, 0.018519139, 0.018520208, 0.018539333, 0.018540403, 0.018569792, 0.018570847, 0.018590931, 0.018591972, 0.018622319, 0.018623431, 0.018645625, 0.018646667, 0.018671069, 0.018672153, 0.018700611, 0.018701667, 0.018715806, 0.018716861, 0.018734778, 0.018735806, 0.018764903, 0.018765958, 0.018782583, 0.018783653, 0.018795611, 0.018796667, 0.018820778, 0.018821833, 0.018845944, 0.018847014, 0.018868, 0.018869069, 0.018892222, 0.018893319, 0.018910861, 0.018911917, 0.018937583, 0.018938653, 0.018955889, 0.018956958, 0.018969222, 0.018970278, 0.018994708, 0.018995764, 0.019021431, 0.019022486, 0.019046917, 0.019048, 0.019070514, 0.019071583, 0.019090708, 0.019091764, 0.019106528, 0.019107569, 0.019119833, 0.019120903, 0.0191475, 0.019148556, 0.019171431, 0.019172472, 0.019188792, 0.019189861, 0.019207417, 0.019208514, 0.019222639, 0.019223681, 0.019253708, 0.019254764, 0.019280167, 0.019281181, 0.019295639, 0.019296764], 'source_diff': [0, 1.1809999999994047e-06, 1.9972000000000045e-05, 1.082999999998946e-06, 3.0320000000000347e-05, 1.0690000000028455e-06, 2.1000000000000185e-05, 1.068999999999376e-06, 2.0347999999999894e-05, 1.068999999999376e-06, 2.6292000000000676e-05, 1.054999999999806e-06, 1.4764000000000443e-05, 1.0559999999992797e-06, 2.4764000000000036e-05, 1.0270000000006663e-06, 1.819499999999863e-05, 1.068999999999376e-06, 1.3181000000000997e-05, 1.068999999999376e-06, 1.943100000000031e-05, 1.068999999999376e-06, 2.7902999999999262e-05, 1.000000000001e-06, 2.3792000000001645e-05, 1.054999999999806e-06, 1.944499999999988e-05, 1.068999999999376e-06, 1.8792000000000114e-05, 1.068999999999376e-06, 1.912500000000178e-05, 1.0699999999988496e-06, 2.9389000000001192e-05, 1.054999999999806e-06, 2.0084000000000074e-05, 1.0409999999967667e-06, 3.0347000000000013e-05, 1.1120000000010288e-06, 2.2193999999999686e-05, 1.0419999999997098e-06, 2.4401999999999757e-05, 1.084000000001889e-06, 2.8457999999998568e-05, 1.0560000000027492e-06, 1.4138999999999818e-05, 1.054999999999806e-06, 1.791699999999924e-05, 1.02800000000014e-06, 2.9096999999998763e-05, 1.054999999999806e-06, 1.662499999999928e-05, 1.070000000002319e-06, 1.1957999999999414e-05, 1.0559999999992797e-06, 2.411100000000027e-05, 1.054999999999806e-06, 2.411100000000027e-05, 1.0699999999988496e-06, 2.0986000000000615e-05, 1.068999999999376e-06, 2.315300000000145e-05, 1.0969999999985158e-06, 1.7542000000002334e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0699999999988496e-06, 1.7236000000000334e-05, 1.068999999999376e-06, 1.2264000000001413e-05, 1.0559999999992797e-06, 2.4429999999998897e-05, 1.0559999999992797e-06, 2.566700000000005e-05, 1.0550000000032755e-06, 2.443099999999837e-05, 1.082999999998946e-06, 2.2514000000001255e-05, 1.068999999999376e-06, 1.912500000000178e-05, 1.0559999999992797e-06, 1.4764000000000443e-05, 1.0410000000002362e-06, 1.2263999999997943e-05, 1.070000000002319e-06, 2.6596999999999732e-05, 1.0559999999992797e-06, 2.287499999999859e-05, 1.0410000000002362e-06, 1.6320000000000223e-05, 1.068999999999376e-06, 1.7556000000001903e-05, 1.0969999999985158e-06, 1.4125000000000248e-05, 1.0419999999997098e-06, 3.0027000000001913e-05, 1.0559999999992797e-06, 2.540300000000023e-05, 1.01400000000057e-06, 1.4457999999998444e-05, 1.125000000001125e-06], 'diff': [0, 1.1809999999994047e-06, 1.9972000000000045e-05, 1.082999999998946e-06, 3.0320000000000347e-05, 1.0690000000028455e-06, 2.1000000000000185e-05, 1.068999999999376e-06, 2.0347999999999894e-05, 1.068999999999376e-06, 2.6292000000000676e-05, 1.054999999999806e-06, 1.4764000000000443e-05, 1.0559999999992797e-06, 2.4764000000000036e-05, 1.0270000000006663e-06, 1.819499999999863e-05, 1.068999999999376e-06, 1.3181000000000997e-05, 1.068999999999376e-06, 1.943100000000031e-05, 1.068999999999376e-06, 2.7902999999999262e-05, 1.000000000001e-06, 2.3792000000001645e-05, 1.054999999999806e-06, 1.944499999999988e-05, 1.068999999999376e-06, 1.8792000000000114e-05, 1.068999999999376e-06, 1.912500000000178e-05, 1.0699999999988496e-06, 2.9389000000001192e-05, 1.054999999999806e-06, 2.0084000000000074e-05, 1.0409999999967667e-06, 3.0347000000000013e-05, 1.1120000000010288e-06, 2.2193999999999686e-05, 1.0419999999997098e-06, 2.4401999999999757e-05, 1.084000000001889e-06, 2.8457999999998568e-05, 1.0560000000027492e-06, 1.4138999999999818e-05, 1.054999999999806e-06, 1.791699999999924e-05, 1.02800000000014e-06, 2.9096999999998763e-05, 1.054999999999806e-06, 1.662499999999928e-05, 1.070000000002319e-06, 1.1957999999999414e-05, 1.0559999999992797e-06, 2.411100000000027e-05, 1.054999999999806e-06, 2.411100000000027e-05, 1.0699999999988496e-06, 2.0986000000000615e-05, 1.068999999999376e-06, 2.315300000000145e-05, 1.0969999999985158e-06, 1.7542000000002334e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0699999999988496e-06, 1.7236000000000334e-05, 1.068999999999376e-06, 1.2264000000001413e-05, 1.0559999999992797e-06, 2.4429999999998897e-05, 1.0559999999992797e-06, 2.566700000000005e-05, 1.0550000000032755e-06, 2.443099999999837e-05, 1.082999999998946e-06, 2.2514000000001255e-05, 1.068999999999376e-06, 1.912500000000178e-05, 1.0559999999992797e-06, 1.4764000000000443e-05, 1.0410000000002362e-06, 1.2263999999997943e-05, 1.070000000002319e-06, 2.6596999999999732e-05, 1.0559999999992797e-06, 2.287499999999859e-05, 1.0410000000002362e-06, 1.6320000000000223e-05, 1.068999999999376e-06, 1.7556000000001903e-05, 1.0969999999985158e-06, 1.4125000000000248e-05, 1.0419999999997098e-06, 3.0027000000001913e-05, 1.0559999999992797e-06, 2.540300000000023e-05, 1.01400000000057e-06, 1.4457999999998444e-05, 1.125000000001125e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:03.824" endtime="20201112 12:42:03.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.820" endtime="20201112 12:42:03.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:03.832" level="INFO">${RESULT} = [{'time': 0.018207181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1809999999994047e-06, 'source_diff': 1.1809999999994047e-06}, {'time': 0.018228236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:03.829" endtime="20201112 12:42:03.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:03.845" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018207181, 0.018228236, 0.018259625, 0.018281694, 0.018303111, 0.018330458, 0.018346278, 0.018372069, 0.018391333, 0.018405583, 0.018426083, 0.018454986, 0.018479833, 0.018500347, 0.018520...</msg>
<status status="PASS" starttime="20201112 12:42:03.833" endtime="20201112 12:42:03.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.850" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:03.849" endtime="20201112 12:42:03.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.852" level="INFO">VALUE: [1.1809999999994047e-06, 1.082999999998946e-06, 1.0690000000028455e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0270000000006663e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0409999999967667e-06, 1.1120000000010288e-06, 1.0419999999997098e-06, 1.084000000001889e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.02800000000014e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0550000000032755e-06, 1.082999999998946e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.070000000002319e-06, 1.0559999999992797e-06, 1.0410000000002362e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.125000000001125e-06]</msg>
<status status="PASS" starttime="20201112 12:42:03.851" endtime="20201112 12:42:03.852"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.846" endtime="20201112 12:42:03.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.855" endtime="20201112 12:42:03.856"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:03.858" endtime="20201112 12:42:03.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.857" endtime="20201112 12:42:03.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.853" endtime="20201112 12:42:03.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.437" endtime="20201112 12:42:03.879"></status>
</kw>
<msg timestamp="20201112 12:42:03.879" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.887" endtime="20201112 12:42:03.896"></status>
</kw>
<msg timestamp="20201112 12:42:03.896" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.885" endtime="20201112 12:42:03.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:03.899" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:03.897" endtime="20201112 12:42:03.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.900" endtime="20201112 12:42:03.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.883" endtime="20201112 12:42:03.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.881" endtime="20201112 12:42:03.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:03.910" endtime="20201112 12:42:04.195"></status>
</kw>
<msg timestamp="20201112 12:42:04.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018268639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:03.908" endtime="20201112 12:42:04.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018268639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.199" endtime="20201112 12:42:04.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.208" endtime="20201112 12:42:04.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.906" endtime="20201112 12:42:04.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.904" endtime="20201112 12:42:04.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.214" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:04.213" endtime="20201112 12:42:04.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.219" level="INFO">VALUE: [{'time': 0.018268639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018269833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018288264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.843099999999931e-05, 'source_diff': 1.843099999999931e-05}, {'time': 0.018289319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.01831125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.193100000000281e-05, 'source_diff': 2.193100000000281e-05}, {'time': 0.018312319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018340167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7848000000000456e-05, 'source_diff': 2.7848000000000456e-05}, {'time': 0.018341208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018361292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0084000000000074e-05, 'source_diff': 2.0084000000000074e-05}, {'time': 0.018362347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018391736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9388999999997723e-05, 'source_diff': 2.9388999999997723e-05}, {'time': 0.018392792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018413875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.108299999999813e-05, 'source_diff': 2.108299999999813e-05}, {'time': 0.018414917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018436167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1250000000000435e-05, 'source_diff': 2.1250000000000435e-05}, {'time': 0.018437208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018451986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.018453097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.018473167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0069999999997035e-05, 'source_diff': 2.0069999999997035e-05}, {'time': 0.018474153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.860000000014302e-07, 'source_diff': 9.860000000014302e-07}, {'time': 0.018497958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3804999999998272e-05, 'source_diff': 2.3804999999998272e-05}, {'time': 0.018499014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018514708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.018515778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018536778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1000000000000185e-05, 'source_diff': 2.1000000000000185e-05}, {'time': 0.018537833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018559444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.161100000000124e-05, 'source_diff': 2.161100000000124e-05}, {'time': 0.0185605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018576528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6027999999997794e-05, 'source_diff': 1.6027999999997794e-05}, {'time': 0.018577583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0550000000032755e-06, 'source_diff': 1.0550000000032755e-06}, {'time': 0.018600764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.318099999999712e-05, 'source_diff': 2.318099999999712e-05}, {'time': 0.018601819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018614444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2625000000002218e-05, 'source_diff': 1.2625000000002218e-05}, {'time': 0.018615458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.018636153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.069499999999766e-05, 'source_diff': 2.069499999999766e-05}, {'time': 0.018637194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018664736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7542000000001926e-05, 'source_diff': 2.7542000000001926e-05}, {'time': 0.018665847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1109999999980857e-06, 'source_diff': 1.1109999999980857e-06}, {'time': 0.018692417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6570000000000066e-05, 'source_diff': 2.6570000000000066e-05}, {'time': 0.018693458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018718514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5055999999998996e-05, 'source_diff': 2.5055999999998996e-05}, {'time': 0.018719556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018740569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.101300000000028e-05, 'source_diff': 2.101300000000028e-05}, {'time': 0.018741611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018769792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.818100000000212e-05, 'source_diff': 2.818100000000212e-05}, {'time': 0.018770833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018791514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.068099999999809e-05, 'source_diff': 2.068099999999809e-05}, {'time': 0.018792583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018808903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6319999999996754e-05, 'source_diff': 1.6319999999996754e-05}, {'time': 0.018809972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018828167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.819499999999863e-05, 'source_diff': 1.819499999999863e-05}, {'time': 0.018829222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018845, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5778000000001013e-05, 'source_diff': 1.5778000000001013e-05}, {'time': 0.018846, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.018871333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5332999999998912e-05, 'source_diff': 2.5332999999998912e-05}, {'time': 0.018872389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018891208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.881899999999978e-05, 'source_diff': 1.881899999999978e-05}, {'time': 0.018892264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018907042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4778000000000013e-05, 'source_diff': 1.4778000000000013e-05}, {'time': 0.018908125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.018919736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1610999999998178e-05, 'source_diff': 1.1610999999998178e-05}, {'time': 0.018920792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018946458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5666000000000577e-05, 'source_diff': 2.5666000000000577e-05}, {'time': 0.018947556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.098000000001459e-06, 'source_diff': 1.098000000001459e-06}, {'time': 0.018968819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.126300000000053e-05, 'source_diff': 2.126300000000053e-05}, {'time': 0.018969875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018997472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7597000000000732e-05, 'source_diff': 2.7597000000000732e-05}, {'time': 0.018998472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.019024153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.568099999999962e-05, 'source_diff': 2.568099999999962e-05}, {'time': 0.019025194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.019046208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1013999999999755e-05, 'source_diff': 2.1013999999999755e-05}, {'time': 0.01904725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019059528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2277999999997513e-05, 'source_diff': 1.2277999999997513e-05}, {'time': 0.019060583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019080028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.944499999999988e-05, 'source_diff': 1.944499999999988e-05}, {'time': 0.019081083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019112042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095900000000054e-05, 'source_diff': 3.095900000000054e-05}, {'time': 0.019113125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019129431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6305999999997184e-05, 'source_diff': 1.6305999999997184e-05}, {'time': 0.019130486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019142764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.019143819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019155097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.019156167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.070000000002319e-06, 'source_diff': 1.070000000002319e-06}, {'time': 0.019175569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9401999999998226e-05, 'source_diff': 1.9401999999998226e-05}, {'time': 0.019176611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019201958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.534700000000195e-05, 'source_diff': 2.534700000000195e-05}, {'time': 0.019203014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019225264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2249999999997966e-05, 'source_diff': 2.2249999999997966e-05}, {'time': 0.019226333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.019237972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1638999999997318e-05, 'source_diff': 1.1638999999997318e-05}, {'time': 0.019239028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019251306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2278000000000983e-05, 'source_diff': 1.2278000000000983e-05}, {'time': 0.019252361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019279903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7542000000001926e-05, 'source_diff': 2.7542000000001926e-05}, {'time': 0.019281028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019295097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4069000000001969e-05, 'source_diff': 1.4069000000001969e-05}, {'time': 0.019296167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019322833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6666000000001577e-05, 'source_diff': 2.6666000000001577e-05}, {'time': 0.019323819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.859999999979607e-07, 'source_diff': 9.859999999979607e-07}]</msg>
<status status="PASS" starttime="20201112 12:42:04.215" endtime="20201112 12:42:04.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.211" endtime="20201112 12:42:04.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:04.245" level="INFO">${debug-compressed} = {'time': [0.018268639, 0.018269833, 0.018288264, 0.018289319, 0.01831125, 0.018312319, 0.018340167, 0.018341208, 0.018361292, 0.018362347, 0.018391736, 0.018392792, 0.018413875, 0.018414917, 0.0184361...</msg>
<status status="PASS" starttime="20201112 12:42:04.222" endtime="20201112 12:42:04.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.248" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:04.247" endtime="20201112 12:42:04.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.252" level="INFO">VALUE: {'time': [0.018268639, 0.018269833, 0.018288264, 0.018289319, 0.01831125, 0.018312319, 0.018340167, 0.018341208, 0.018361292, 0.018362347, 0.018391736, 0.018392792, 0.018413875, 0.018414917, 0.018436167, 0.018437208, 0.018451986, 0.018453097, 0.018473167, 0.018474153, 0.018497958, 0.018499014, 0.018514708, 0.018515778, 0.018536778, 0.018537833, 0.018559444, 0.0185605, 0.018576528, 0.018577583, 0.018600764, 0.018601819, 0.018614444, 0.018615458, 0.018636153, 0.018637194, 0.018664736, 0.018665847, 0.018692417, 0.018693458, 0.018718514, 0.018719556, 0.018740569, 0.018741611, 0.018769792, 0.018770833, 0.018791514, 0.018792583, 0.018808903, 0.018809972, 0.018828167, 0.018829222, 0.018845, 0.018846, 0.018871333, 0.018872389, 0.018891208, 0.018892264, 0.018907042, 0.018908125, 0.018919736, 0.018920792, 0.018946458, 0.018947556, 0.018968819, 0.018969875, 0.018997472, 0.018998472, 0.019024153, 0.019025194, 0.019046208, 0.01904725, 0.019059528, 0.019060583, 0.019080028, 0.019081083, 0.019112042, 0.019113125, 0.019129431, 0.019130486, 0.019142764, 0.019143819, 0.019155097, 0.019156167, 0.019175569, 0.019176611, 0.019201958, 0.019203014, 0.019225264, 0.019226333, 0.019237972, 0.019239028, 0.019251306, 0.019252361, 0.019279903, 0.019281028, 0.019295097, 0.019296167, 0.019322833, 0.019323819], 'source_diff': [0, 1.193999999999501e-06, 1.843099999999931e-05, 1.054999999999806e-06, 2.193100000000281e-05, 1.068999999999376e-06, 2.7848000000000456e-05, 1.0410000000002362e-06, 2.0084000000000074e-05, 1.054999999999806e-06, 2.9388999999997723e-05, 1.0560000000027492e-06, 2.108299999999813e-05, 1.0419999999997098e-06, 2.1250000000000435e-05, 1.0410000000002362e-06, 1.4778000000000013e-05, 1.1110000000015552e-06, 2.0069999999997035e-05, 9.860000000014302e-07, 2.3804999999998272e-05, 1.0560000000027492e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 2.1000000000000185e-05, 1.054999999999806e-06, 2.161100000000124e-05, 1.0559999999992797e-06, 1.6027999999997794e-05, 1.0550000000032755e-06, 2.318099999999712e-05, 1.054999999999806e-06, 1.2625000000002218e-05, 1.01400000000057e-06, 2.069499999999766e-05, 1.0410000000002362e-06, 2.7542000000001926e-05, 1.1109999999980857e-06, 2.6570000000000066e-05, 1.0410000000002362e-06, 2.5055999999998996e-05, 1.0419999999997098e-06, 2.101300000000028e-05, 1.0419999999997098e-06, 2.818100000000212e-05, 1.0410000000002362e-06, 2.068099999999809e-05, 1.0690000000028455e-06, 1.6319999999996754e-05, 1.0690000000028455e-06, 1.819499999999863e-05, 1.054999999999806e-06, 1.5778000000001013e-05, 1.000000000001e-06, 2.5332999999998912e-05, 1.0559999999992797e-06, 1.881899999999978e-05, 1.0559999999992797e-06, 1.4778000000000013e-05, 1.0830000000024154e-06, 1.1610999999998178e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.098000000001459e-06, 2.126300000000053e-05, 1.0559999999992797e-06, 2.7597000000000732e-05, 9.999999999975306e-07, 2.568099999999962e-05, 1.0410000000002362e-06, 2.1013999999999755e-05, 1.0420000000031793e-06, 1.2277999999997513e-05, 1.054999999999806e-06, 1.944499999999988e-05, 1.054999999999806e-06, 3.095900000000054e-05, 1.0830000000024154e-06, 1.6305999999997184e-05, 1.054999999999806e-06, 1.2278000000000983e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.070000000002319e-06, 1.9401999999998226e-05, 1.0419999999997098e-06, 2.534700000000195e-05, 1.0559999999992797e-06, 2.2249999999997966e-05, 1.0690000000028455e-06, 1.1638999999997318e-05, 1.0559999999992797e-06, 1.2278000000000983e-05, 1.054999999999806e-06, 2.7542000000001926e-05, 1.1249999999976557e-06, 1.4069000000001969e-05, 1.0699999999988496e-06, 2.6666000000001577e-05, 9.859999999979607e-07], 'diff': [0, 1.193999999999501e-06, 1.843099999999931e-05, 1.054999999999806e-06, 2.193100000000281e-05, 1.068999999999376e-06, 2.7848000000000456e-05, 1.0410000000002362e-06, 2.0084000000000074e-05, 1.054999999999806e-06, 2.9388999999997723e-05, 1.0560000000027492e-06, 2.108299999999813e-05, 1.0419999999997098e-06, 2.1250000000000435e-05, 1.0410000000002362e-06, 1.4778000000000013e-05, 1.1110000000015552e-06, 2.0069999999997035e-05, 9.860000000014302e-07, 2.3804999999998272e-05, 1.0560000000027492e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 2.1000000000000185e-05, 1.054999999999806e-06, 2.161100000000124e-05, 1.0559999999992797e-06, 1.6027999999997794e-05, 1.0550000000032755e-06, 2.318099999999712e-05, 1.054999999999806e-06, 1.2625000000002218e-05, 1.01400000000057e-06, 2.069499999999766e-05, 1.0410000000002362e-06, 2.7542000000001926e-05, 1.1109999999980857e-06, 2.6570000000000066e-05, 1.0410000000002362e-06, 2.5055999999998996e-05, 1.0419999999997098e-06, 2.101300000000028e-05, 1.0419999999997098e-06, 2.818100000000212e-05, 1.0410000000002362e-06, 2.068099999999809e-05, 1.0690000000028455e-06, 1.6319999999996754e-05, 1.0690000000028455e-06, 1.819499999999863e-05, 1.054999999999806e-06, 1.5778000000001013e-05, 1.000000000001e-06, 2.5332999999998912e-05, 1.0559999999992797e-06, 1.881899999999978e-05, 1.0559999999992797e-06, 1.4778000000000013e-05, 1.0830000000024154e-06, 1.1610999999998178e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.098000000001459e-06, 2.126300000000053e-05, 1.0559999999992797e-06, 2.7597000000000732e-05, 9.999999999975306e-07, 2.568099999999962e-05, 1.0410000000002362e-06, 2.1013999999999755e-05, 1.0420000000031793e-06, 1.2277999999997513e-05, 1.054999999999806e-06, 1.944499999999988e-05, 1.054999999999806e-06, 3.095900000000054e-05, 1.0830000000024154e-06, 1.6305999999997184e-05, 1.054999999999806e-06, 1.2278000000000983e-05, 1.054999999999806e-06, 1.1277999999999982e-05, 1.070000000002319e-06, 1.9401999999998226e-05, 1.0419999999997098e-06, 2.534700000000195e-05, 1.0559999999992797e-06, 2.2249999999997966e-05, 1.0690000000028455e-06, 1.1638999999997318e-05, 1.0559999999992797e-06, 1.2278000000000983e-05, 1.054999999999806e-06, 2.7542000000001926e-05, 1.1249999999976557e-06, 1.4069000000001969e-05, 1.0699999999988496e-06, 2.6666000000001577e-05, 9.859999999979607e-07], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:04.249" endtime="20201112 12:42:04.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.245" endtime="20201112 12:42:04.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.258" level="INFO">${RESULT} = [{'time': 0.018269833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018289319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:04.255" endtime="20201112 12:42:04.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.272" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018269833, 0.018289319, 0.018312319, 0.018341208, 0.018362347, 0.018392792, 0.018414917, 0.018437208, 0.018453097, 0.018474153, 0.018499014, 0.018515778, 0.018537833, 0.0185605, 0.01857758...</msg>
<status status="PASS" starttime="20201112 12:42:04.259" endtime="20201112 12:42:04.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.276" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:04.275" endtime="20201112 12:42:04.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.279" level="INFO">VALUE: [1.193999999999501e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0410000000002362e-06, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.1110000000015552e-06, 9.860000000014302e-07, 1.0560000000027492e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0550000000032755e-06, 1.054999999999806e-06, 1.01400000000057e-06, 1.0410000000002362e-06, 1.1109999999980857e-06, 1.0410000000002362e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.0410000000002362e-06, 1.0690000000028455e-06, 1.0690000000028455e-06, 1.054999999999806e-06, 1.000000000001e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0830000000024154e-06, 1.0559999999992797e-06, 1.098000000001459e-06, 1.0559999999992797e-06, 9.999999999975306e-07, 1.0410000000002362e-06, 1.0420000000031793e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0830000000024154e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.070000000002319e-06, 1.0419999999997098e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.1249999999976557e-06, 1.0699999999988496e-06, 9.859999999979607e-07]</msg>
<status status="PASS" starttime="20201112 12:42:04.277" endtime="20201112 12:42:04.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.273" endtime="20201112 12:42:04.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.282" endtime="20201112 12:42:04.283"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.285" endtime="20201112 12:42:04.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.284" endtime="20201112 12:42:04.305"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.280" endtime="20201112 12:42:04.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:03.880" endtime="20201112 12:42:04.306"></status>
</kw>
<msg timestamp="20201112 12:42:04.306" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.314" endtime="20201112 12:42:04.323"></status>
</kw>
<msg timestamp="20201112 12:42:04.323" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.312" endtime="20201112 12:42:04.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.326" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.324" endtime="20201112 12:42:04.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.327" endtime="20201112 12:42:04.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.309" endtime="20201112 12:42:04.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.308" endtime="20201112 12:42:04.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.335" endtime="20201112 12:42:04.621"></status>
</kw>
<msg timestamp="20201112 12:42:04.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018386111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.334" endtime="20201112 12:42:04.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018386111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:04.625" endtime="20201112 12:42:04.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.634" endtime="20201112 12:42:04.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.331" endtime="20201112 12:42:04.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.330" endtime="20201112 12:42:04.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.640" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:04.639" endtime="20201112 12:42:04.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.645" level="INFO">VALUE: [{'time': 0.018384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018386111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018416375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0263999999998598e-05, 'source_diff': 3.0263999999998598e-05}, {'time': 0.018417444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018442514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5069999999998566e-05, 'source_diff': 2.5069999999998566e-05}, {'time': 0.018443556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018474514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.095800000000107e-05, 'source_diff': 3.095800000000107e-05}, {'time': 0.018475569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.0184975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.193099999999934e-05, 'source_diff': 2.193099999999934e-05}, {'time': 0.018498556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018519236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0680000000002086e-05, 'source_diff': 2.0680000000002086e-05}, {'time': 0.018520306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018550958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065199999999907e-05, 'source_diff': 3.065199999999907e-05}, {'time': 0.018552014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018574264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2250000000001435e-05, 'source_diff': 2.2250000000001435e-05}, {'time': 0.018575319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018591333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6014000000001694e-05, 'source_diff': 1.6014000000001694e-05}, {'time': 0.018592389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018604347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1957999999999414e-05, 'source_diff': 1.1957999999999414e-05}, {'time': 0.018605403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018626083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0680000000002086e-05, 'source_diff': 2.0680000000002086e-05}, {'time': 0.018627153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018648458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.130499999999924e-05, 'source_diff': 2.130499999999924e-05}, {'time': 0.018649514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018664278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4764000000000443e-05, 'source_diff': 1.4764000000000443e-05}, {'time': 0.018665347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018689444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.40970000000007e-05, 'source_diff': 2.40970000000007e-05}, {'time': 0.018690514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018718042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7528000000002356e-05, 'source_diff': 2.7528000000002356e-05}, {'time': 0.018719111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018732306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.3195000000000567e-05, 'source_diff': 1.3195000000000567e-05}, {'time': 0.018733403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018757486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.408300000000113e-05, 'source_diff': 2.408300000000113e-05}, {'time': 0.018758542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018777667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.018778736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018807556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8819999999998847e-05, 'source_diff': 2.8819999999998847e-05}, {'time': 0.018808569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0130000000010964e-06, 'source_diff': 1.0130000000010964e-06}, {'time': 0.018839264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.069500000000072e-05, 'source_diff': 3.069500000000072e-05}, {'time': 0.018840361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.01887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.088899999999922e-05, 'source_diff': 3.088899999999922e-05}, {'time': 0.018872306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018902944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.063800000000297e-05, 'source_diff': 3.063800000000297e-05}, {'time': 0.018904014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018931556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7541999999998457e-05, 'source_diff': 2.7541999999998457e-05}, {'time': 0.018932681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.125000000001125e-06, 'source_diff': 1.125000000001125e-06}, {'time': 0.018952681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9999999999999185e-05, 'source_diff': 1.9999999999999185e-05}, {'time': 0.01895375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018973792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0042000000001364e-05, 'source_diff': 2.0042000000001364e-05}, {'time': 0.018974847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019003014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.816699999999908e-05, 'source_diff': 2.816699999999908e-05}, {'time': 0.019004111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0970000000019853e-06, 'source_diff': 1.0970000000019853e-06}, {'time': 0.019030667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6556000000000496e-05, 'source_diff': 2.6556000000000496e-05}, {'time': 0.019031722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019056778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5055999999998996e-05, 'source_diff': 2.5055999999998996e-05}, {'time': 0.019057847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019085986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8138999999999942e-05, 'source_diff': 2.8138999999999942e-05}, {'time': 0.019087069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019108681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1611999999997245e-05, 'source_diff': 2.1611999999997245e-05}, {'time': 0.019109792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1110000000015552e-06, 'source_diff': 1.1110000000015552e-06}, {'time': 0.019127917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.812500000000078e-05, 'source_diff': 1.812500000000078e-05}, {'time': 0.019129042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1249999999976557e-06, 'source_diff': 1.1249999999976557e-06}, {'time': 0.019146292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7249999999999904e-05, 'source_diff': 1.7249999999999904e-05}, {'time': 0.019147292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.000000000001e-06, 'source_diff': 1.000000000001e-06}, {'time': 0.019172028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4736000000000896e-05, 'source_diff': 2.4736000000000896e-05}, {'time': 0.019173083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019194069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0986000000000615e-05, 'source_diff': 2.0986000000000615e-05}, {'time': 0.019195139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019216764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.162500000000081e-05, 'source_diff': 2.162500000000081e-05}, {'time': 0.019217833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019229083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1250000000000843e-05, 'source_diff': 1.1250000000000843e-05}, {'time': 0.019230153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019242042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1889000000001038e-05, 'source_diff': 1.1889000000001038e-05}, {'time': 0.019243111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019255708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2596999999999609e-05, 'source_diff': 1.2596999999999609e-05}, {'time': 0.019256764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019271514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4750000000000874e-05, 'source_diff': 1.4750000000000874e-05}, {'time': 0.019272597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.019301986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9389000000001192e-05, 'source_diff': 2.9389000000001192e-05}, {'time': 0.019303042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019321236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.019322292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019333944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1651999999997414e-05, 'source_diff': 1.1651999999997414e-05}, {'time': 0.019335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019363208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8207999999998318e-05, 'source_diff': 2.8207999999998318e-05}, {'time': 0.019364236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019386792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2555999999999965e-05, 'source_diff': 2.2555999999999965e-05}, {'time': 0.019387889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.0193995, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1611000000001648e-05, 'source_diff': 1.1611000000001648e-05}, {'time': 0.019400542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019411833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1291000000000079e-05, 'source_diff': 1.1291000000000079e-05}, {'time': 0.019412903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019441917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9014000000000817e-05, 'source_diff': 2.9014000000000817e-05}, {'time': 0.019442972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019470819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7847000000000982e-05, 'source_diff': 2.7847000000000982e-05}, {'time': 0.019471903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019492875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0972000000001045e-05, 'source_diff': 2.0972000000001045e-05}, {'time': 0.019493958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.082999999998946e-06, 'source_diff': 1.082999999998946e-06}, {'time': 0.01951275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.8792000000000114e-05, 'source_diff': 1.8792000000000114e-05}, {'time': 0.019513819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:04.641" endtime="20201112 12:42:04.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.637" endtime="20201112 12:42:04.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:04.672" level="INFO">${debug-compressed} = {'time': [0.018384917, 0.018386111, 0.018416375, 0.018417444, 0.018442514, 0.018443556, 0.018474514, 0.018475569, 0.0184975, 0.018498556, 0.018519236, 0.018520306, 0.018550958, 0.018552014, 0.01857426...</msg>
<status status="PASS" starttime="20201112 12:42:04.648" endtime="20201112 12:42:04.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.676" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:04.675" endtime="20201112 12:42:04.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.680" level="INFO">VALUE: {'time': [0.018384917, 0.018386111, 0.018416375, 0.018417444, 0.018442514, 0.018443556, 0.018474514, 0.018475569, 0.0184975, 0.018498556, 0.018519236, 0.018520306, 0.018550958, 0.018552014, 0.018574264, 0.018575319, 0.018591333, 0.018592389, 0.018604347, 0.018605403, 0.018626083, 0.018627153, 0.018648458, 0.018649514, 0.018664278, 0.018665347, 0.018689444, 0.018690514, 0.018718042, 0.018719111, 0.018732306, 0.018733403, 0.018757486, 0.018758542, 0.018777667, 0.018778736, 0.018807556, 0.018808569, 0.018839264, 0.018840361, 0.01887125, 0.018872306, 0.018902944, 0.018904014, 0.018931556, 0.018932681, 0.018952681, 0.01895375, 0.018973792, 0.018974847, 0.019003014, 0.019004111, 0.019030667, 0.019031722, 0.019056778, 0.019057847, 0.019085986, 0.019087069, 0.019108681, 0.019109792, 0.019127917, 0.019129042, 0.019146292, 0.019147292, 0.019172028, 0.019173083, 0.019194069, 0.019195139, 0.019216764, 0.019217833, 0.019229083, 0.019230153, 0.019242042, 0.019243111, 0.019255708, 0.019256764, 0.019271514, 0.019272597, 0.019301986, 0.019303042, 0.019321236, 0.019322292, 0.019333944, 0.019335, 0.019363208, 0.019364236, 0.019386792, 0.019387889, 0.0193995, 0.019400542, 0.019411833, 0.019412903, 0.019441917, 0.019442972, 0.019470819, 0.019471903, 0.019492875, 0.019493958, 0.01951275, 0.019513819], 'source_diff': [0, 1.193999999999501e-06, 3.0263999999998598e-05, 1.0690000000028455e-06, 2.5069999999998566e-05, 1.0419999999997098e-06, 3.095800000000107e-05, 1.054999999999806e-06, 2.193099999999934e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 3.065199999999907e-05, 1.0559999999992797e-06, 2.2250000000001435e-05, 1.054999999999806e-06, 1.6014000000001694e-05, 1.0559999999992797e-06, 1.1957999999999414e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 2.130499999999924e-05, 1.0559999999992797e-06, 1.4764000000000443e-05, 1.068999999999376e-06, 2.40970000000007e-05, 1.0699999999988496e-06, 2.7528000000002356e-05, 1.068999999999376e-06, 1.3195000000000567e-05, 1.0969999999985158e-06, 2.408300000000113e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.068999999999376e-06, 2.8819999999998847e-05, 1.0130000000010964e-06, 3.069500000000072e-05, 1.0969999999985158e-06, 3.088899999999922e-05, 1.0559999999992797e-06, 3.063800000000297e-05, 1.0699999999988496e-06, 2.7541999999998457e-05, 1.125000000001125e-06, 1.9999999999999185e-05, 1.068999999999376e-06, 2.0042000000001364e-05, 1.054999999999806e-06, 2.816699999999908e-05, 1.0970000000019853e-06, 2.6556000000000496e-05, 1.054999999999806e-06, 2.5055999999998996e-05, 1.068999999999376e-06, 2.8138999999999942e-05, 1.0830000000024154e-06, 2.1611999999997245e-05, 1.1110000000015552e-06, 1.812500000000078e-05, 1.1249999999976557e-06, 1.7249999999999904e-05, 1.000000000001e-06, 2.4736000000000896e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 2.162500000000081e-05, 1.068999999999376e-06, 1.1250000000000843e-05, 1.0699999999988496e-06, 1.1889000000001038e-05, 1.068999999999376e-06, 1.2596999999999609e-05, 1.0559999999992797e-06, 1.4750000000000874e-05, 1.082999999998946e-06, 2.9389000000001192e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0560000000027492e-06, 1.1651999999997414e-05, 1.0560000000027492e-06, 2.8207999999998318e-05, 1.02800000000014e-06, 2.2555999999999965e-05, 1.0969999999985158e-06, 1.1611000000001648e-05, 1.0419999999997098e-06, 1.1291000000000079e-05, 1.0699999999988496e-06, 2.9014000000000817e-05, 1.054999999999806e-06, 2.7847000000000982e-05, 1.0839999999984196e-06, 2.0972000000001045e-05, 1.082999999998946e-06, 1.8792000000000114e-05, 1.0690000000028455e-06], 'diff': [0, 1.193999999999501e-06, 3.0263999999998598e-05, 1.0690000000028455e-06, 2.5069999999998566e-05, 1.0419999999997098e-06, 3.095800000000107e-05, 1.054999999999806e-06, 2.193099999999934e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 3.065199999999907e-05, 1.0559999999992797e-06, 2.2250000000001435e-05, 1.054999999999806e-06, 1.6014000000001694e-05, 1.0559999999992797e-06, 1.1957999999999414e-05, 1.0559999999992797e-06, 2.0680000000002086e-05, 1.0699999999988496e-06, 2.130499999999924e-05, 1.0559999999992797e-06, 1.4764000000000443e-05, 1.068999999999376e-06, 2.40970000000007e-05, 1.0699999999988496e-06, 2.7528000000002356e-05, 1.068999999999376e-06, 1.3195000000000567e-05, 1.0969999999985158e-06, 2.408300000000113e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.068999999999376e-06, 2.8819999999998847e-05, 1.0130000000010964e-06, 3.069500000000072e-05, 1.0969999999985158e-06, 3.088899999999922e-05, 1.0559999999992797e-06, 3.063800000000297e-05, 1.0699999999988496e-06, 2.7541999999998457e-05, 1.125000000001125e-06, 1.9999999999999185e-05, 1.068999999999376e-06, 2.0042000000001364e-05, 1.054999999999806e-06, 2.816699999999908e-05, 1.0970000000019853e-06, 2.6556000000000496e-05, 1.054999999999806e-06, 2.5055999999998996e-05, 1.068999999999376e-06, 2.8138999999999942e-05, 1.0830000000024154e-06, 2.1611999999997245e-05, 1.1110000000015552e-06, 1.812500000000078e-05, 1.1249999999976557e-06, 1.7249999999999904e-05, 1.000000000001e-06, 2.4736000000000896e-05, 1.054999999999806e-06, 2.0986000000000615e-05, 1.0699999999988496e-06, 2.162500000000081e-05, 1.068999999999376e-06, 1.1250000000000843e-05, 1.0699999999988496e-06, 1.1889000000001038e-05, 1.068999999999376e-06, 1.2596999999999609e-05, 1.0559999999992797e-06, 1.4750000000000874e-05, 1.082999999998946e-06, 2.9389000000001192e-05, 1.0559999999992797e-06, 1.8193999999999155e-05, 1.0560000000027492e-06, 1.1651999999997414e-05, 1.0560000000027492e-06, 2.8207999999998318e-05, 1.02800000000014e-06, 2.2555999999999965e-05, 1.0969999999985158e-06, 1.1611000000001648e-05, 1.0419999999997098e-06, 1.1291000000000079e-05, 1.0699999999988496e-06, 2.9014000000000817e-05, 1.054999999999806e-06, 2.7847000000000982e-05, 1.0839999999984196e-06, 2.0972000000001045e-05, 1.082999999998946e-06, 1.8792000000000114e-05, 1.0690000000028455e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:04.677" endtime="20201112 12:42:04.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.673" endtime="20201112 12:42:04.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:04.686" level="INFO">${RESULT} = [{'time': 0.018386111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.193999999999501e-06, 'source_diff': 1.193999999999501e-06}, {'time': 0.018417444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:04.682" endtime="20201112 12:42:04.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:04.699" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018386111, 0.018417444, 0.018443556, 0.018475569, 0.018498556, 0.018520306, 0.018552014, 0.018575319, 0.018592389, 0.018605403, 0.018627153, 0.018649514, 0.018665347, 0.018690514, 0.018719...</msg>
<status status="PASS" starttime="20201112 12:42:04.687" endtime="20201112 12:42:04.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.703" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:04.702" endtime="20201112 12:42:04.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.705" level="INFO">VALUE: [1.193999999999501e-06, 1.0690000000028455e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 1.0130000000010964e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.125000000001125e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0970000000019853e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0830000000024154e-06, 1.1110000000015552e-06, 1.1249999999976557e-06, 1.000000000001e-06, 1.054999999999806e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.082999999998946e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.0560000000027492e-06, 1.02800000000014e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.0699999999988496e-06, 1.054999999999806e-06, 1.0839999999984196e-06, 1.082999999998946e-06, 1.0690000000028455e-06]</msg>
<status status="PASS" starttime="20201112 12:42:04.704" endtime="20201112 12:42:04.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.700" endtime="20201112 12:42:04.706"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.709" endtime="20201112 12:42:04.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:04.712" endtime="20201112 12:42:04.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.711" endtime="20201112 12:42:04.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.707" endtime="20201112 12:42:04.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.307" endtime="20201112 12:42:04.733"></status>
</kw>
<msg timestamp="20201112 12:42:04.733" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.741" endtime="20201112 12:42:04.750"></status>
</kw>
<msg timestamp="20201112 12:42:04.750" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.739" endtime="20201112 12:42:04.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:04.753" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:04.751" endtime="20201112 12:42:04.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.754" endtime="20201112 12:42:04.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.737" endtime="20201112 12:42:04.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.735" endtime="20201112 12:42:04.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:04.763" endtime="20201112 12:42:05.049"></status>
</kw>
<msg timestamp="20201112 12:42:05.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01836175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018363014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:04.762" endtime="20201112 12:42:05.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01836175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018363014, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:05.053" endtime="20201112 12:42:05.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.062" endtime="20201112 12:42:05.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.759" endtime="20201112 12:42:05.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.758" endtime="20201112 12:42:05.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.068" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201112 12:42:05.067" endtime="20201112 12:42:05.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.073" level="INFO">VALUE: [{'time': 0.01836175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018363014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.26400000000082e-06, 'source_diff': 1.26400000000082e-06}, {'time': 0.018386667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.365299999999848e-05, 'source_diff': 2.365299999999848e-05}, {'time': 0.018387736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018416514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8778000000000137e-05, 'source_diff': 2.8778000000000137e-05}, {'time': 0.018417583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018442611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5027999999999856e-05, 'source_diff': 2.5027999999999856e-05}, {'time': 0.018443681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018464708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.102699999999985e-05, 'source_diff': 2.102699999999985e-05}, {'time': 0.01846575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018482042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6292000000001083e-05, 'source_diff': 1.6292000000001083e-05}, {'time': 0.018483111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018512514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9403000000000762e-05, 'source_diff': 2.9403000000000762e-05}, {'time': 0.018513569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018543931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0361999999999056e-05, 'source_diff': 3.0361999999999056e-05}, {'time': 0.018544972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0410000000002362e-06, 'source_diff': 1.0410000000002362e-06}, {'time': 0.018560361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.538900000000107e-05, 'source_diff': 1.538900000000107e-05}, {'time': 0.018561458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018573375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1917000000000177e-05, 'source_diff': 1.1917000000000177e-05}, {'time': 0.018574431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01858925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4819000000002719e-05, 'source_diff': 1.4819000000002719e-05}, {'time': 0.018590264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0139999999971006e-06, 'source_diff': 1.0139999999971006e-06}, {'time': 0.018619681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.018620736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018637667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.693100000000128e-05, 'source_diff': 1.693100000000128e-05}, {'time': 0.018638722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018665958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7235999999999927e-05, 'source_diff': 2.7235999999999927e-05}, {'time': 0.018667014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.01868675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.018687819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0690000000028455e-06, 'source_diff': 1.0690000000028455e-06}, {'time': 0.018703819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5999999999998654e-05, 'source_diff': 1.5999999999998654e-05}, {'time': 0.018704903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.018719625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.4722000000001734e-05, 'source_diff': 1.4722000000001734e-05}, {'time': 0.018720694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018732347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018733403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018752528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.912500000000178e-05, 'source_diff': 1.912500000000178e-05}, {'time': 0.018753597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.018774319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0722000000000795e-05, 'source_diff': 2.0722000000000795e-05}, {'time': 0.018775319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.999999999975306e-07, 'source_diff': 9.999999999975306e-07}, {'time': 0.018792889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.7570000000001473e-05, 'source_diff': 1.7570000000001473e-05}, {'time': 0.018793944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018824597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.065299999999854e-05, 'source_diff': 3.065299999999854e-05}, {'time': 0.018825653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.018836931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1277999999999982e-05, 'source_diff': 1.1277999999999982e-05}, {'time': 0.018838028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.018861736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3708000000000756e-05, 'source_diff': 2.3708000000000756e-05}, {'time': 0.018862778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.018874431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.1653000000000358e-05, 'source_diff': 1.1653000000000358e-05}, {'time': 0.018875486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018904278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8791999999999707e-05, 'source_diff': 2.8791999999999707e-05}, {'time': 0.018905333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.018918236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2903000000001608e-05, 'source_diff': 1.2903000000001608e-05}, {'time': 0.018919292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018944958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5666000000000577e-05, 'source_diff': 2.5666000000000577e-05}, {'time': 0.018946014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.018961708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.5694000000000125e-05, 'source_diff': 1.5694000000000125e-05}, {'time': 0.018962778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.018975042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2264000000001413e-05, 'source_diff': 1.2264000000001413e-05}, {'time': 0.018976111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019005528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9417000000000332e-05, 'source_diff': 2.9417000000000332e-05}, {'time': 0.019006556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.02800000000014e-06, 'source_diff': 1.02800000000014e-06}, {'time': 0.019019444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2887999999999095e-05, 'source_diff': 1.2887999999999095e-05}, {'time': 0.019020514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0699999999988496e-06, 'source_diff': 1.0699999999988496e-06}, {'time': 0.019041194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.0680000000002086e-05, 'source_diff': 2.0680000000002086e-05}, {'time': 0.01904225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019066361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.411100000000027e-05, 'source_diff': 2.411100000000027e-05}, {'time': 0.019067417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019080319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2901999999998665e-05, 'source_diff': 1.2901999999998665e-05}, {'time': 0.019081375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0560000000027492e-06, 'source_diff': 1.0560000000027492e-06}, {'time': 0.019094264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2888999999998568e-05, 'source_diff': 1.2888999999998568e-05}, {'time': 0.019095319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019122875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7556000000001496e-05, 'source_diff': 2.7556000000001496e-05}, {'time': 0.019123944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019136514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.2569999999999942e-05, 'source_diff': 1.2569999999999942e-05}, {'time': 0.019137556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.01916075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3194000000000686e-05, 'source_diff': 2.3194000000000686e-05}, {'time': 0.019161792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0419999999997098e-06, 'source_diff': 1.0419999999997098e-06}, {'time': 0.019190875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9082999999999193e-05, 'source_diff': 2.9082999999999193e-05}, {'time': 0.019191944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}, {'time': 0.019208583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.663900000000232e-05, 'source_diff': 1.663900000000232e-05}, {'time': 0.019209639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019231583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1943999999999436e-05, 'source_diff': 2.1943999999999436e-05}, {'time': 0.019232639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0559999999992797e-06, 'source_diff': 1.0559999999992797e-06}, {'time': 0.019253028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.038899999999913e-05, 'source_diff': 2.038899999999913e-05}, {'time': 0.019254042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019271931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.78890000000001e-05, 'source_diff': 1.78890000000001e-05}, {'time': 0.019272986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.054999999999806e-06, 'source_diff': 1.054999999999806e-06}, {'time': 0.019291167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.818100000000253e-05, 'source_diff': 1.818100000000253e-05}, {'time': 0.019292264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0969999999985158e-06, 'source_diff': 1.0969999999985158e-06}, {'time': 0.019312597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.033300000000085e-05, 'source_diff': 2.033300000000085e-05}, {'time': 0.019313681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0839999999984196e-06, 'source_diff': 1.0839999999984196e-06}, {'time': 0.019332514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.883299999999935e-05, 'source_diff': 1.883299999999935e-05}, {'time': 0.019333528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.01400000000057e-06, 'source_diff': 1.01400000000057e-06}, {'time': 0.019360139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6610999999999302e-05, 'source_diff': 2.6610999999999302e-05}, {'time': 0.019361181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0420000000031793e-06, 'source_diff': 1.0420000000031793e-06}, {'time': 0.019379986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.880499999999674e-05, 'source_diff': 1.880499999999674e-05}, {'time': 0.019381069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0830000000024154e-06, 'source_diff': 1.0830000000024154e-06}, {'time': 0.019397681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.6611999999999183e-05, 'source_diff': 1.6611999999999183e-05}, {'time': 0.01939875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.068999999999376e-06, 'source_diff': 1.068999999999376e-06}]</msg>
<status status="PASS" starttime="20201112 12:42:05.069" endtime="20201112 12:42:05.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.065" endtime="20201112 12:42:05.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201112 12:42:05.099" level="INFO">${debug-compressed} = {'time': [0.01836175, 0.018363014, 0.018386667, 0.018387736, 0.018416514, 0.018417583, 0.018442611, 0.018443681, 0.018464708, 0.01846575, 0.018482042, 0.018483111, 0.018512514, 0.018513569, 0.01854393...</msg>
<status status="PASS" starttime="20201112 12:42:05.076" endtime="20201112 12:42:05.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.103" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201112 12:42:05.102" endtime="20201112 12:42:05.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.107" level="INFO">VALUE: {'time': [0.01836175, 0.018363014, 0.018386667, 0.018387736, 0.018416514, 0.018417583, 0.018442611, 0.018443681, 0.018464708, 0.01846575, 0.018482042, 0.018483111, 0.018512514, 0.018513569, 0.018543931, 0.018544972, 0.018560361, 0.018561458, 0.018573375, 0.018574431, 0.01858925, 0.018590264, 0.018619681, 0.018620736, 0.018637667, 0.018638722, 0.018665958, 0.018667014, 0.01868675, 0.018687819, 0.018703819, 0.018704903, 0.018719625, 0.018720694, 0.018732347, 0.018733403, 0.018752528, 0.018753597, 0.018774319, 0.018775319, 0.018792889, 0.018793944, 0.018824597, 0.018825653, 0.018836931, 0.018838028, 0.018861736, 0.018862778, 0.018874431, 0.018875486, 0.018904278, 0.018905333, 0.018918236, 0.018919292, 0.018944958, 0.018946014, 0.018961708, 0.018962778, 0.018975042, 0.018976111, 0.019005528, 0.019006556, 0.019019444, 0.019020514, 0.019041194, 0.01904225, 0.019066361, 0.019067417, 0.019080319, 0.019081375, 0.019094264, 0.019095319, 0.019122875, 0.019123944, 0.019136514, 0.019137556, 0.01916075, 0.019161792, 0.019190875, 0.019191944, 0.019208583, 0.019209639, 0.019231583, 0.019232639, 0.019253028, 0.019254042, 0.019271931, 0.019272986, 0.019291167, 0.019292264, 0.019312597, 0.019313681, 0.019332514, 0.019333528, 0.019360139, 0.019361181, 0.019379986, 0.019381069, 0.019397681, 0.01939875], 'source_diff': [0, 1.26400000000082e-06, 2.365299999999848e-05, 1.068999999999376e-06, 2.8778000000000137e-05, 1.0690000000028455e-06, 2.5027999999999856e-05, 1.0699999999988496e-06, 2.102699999999985e-05, 1.0419999999997098e-06, 1.6292000000001083e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.054999999999806e-06, 3.0361999999999056e-05, 1.0410000000002362e-06, 1.538900000000107e-05, 1.0969999999985158e-06, 1.1917000000000177e-05, 1.0559999999992797e-06, 1.4819000000002719e-05, 1.0139999999971006e-06, 2.9417000000000332e-05, 1.054999999999806e-06, 1.693100000000128e-05, 1.054999999999806e-06, 2.7235999999999927e-05, 1.0559999999992797e-06, 1.9735999999999365e-05, 1.0690000000028455e-06, 1.5999999999998654e-05, 1.0839999999984196e-06, 1.4722000000001734e-05, 1.068999999999376e-06, 1.1653000000000358e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.068999999999376e-06, 2.0722000000000795e-05, 9.999999999975306e-07, 1.7570000000001473e-05, 1.054999999999806e-06, 3.065299999999854e-05, 1.0560000000027492e-06, 1.1277999999999982e-05, 1.0969999999985158e-06, 2.3708000000000756e-05, 1.0419999999997098e-06, 1.1653000000000358e-05, 1.054999999999806e-06, 2.8791999999999707e-05, 1.054999999999806e-06, 1.2903000000001608e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 1.2264000000001413e-05, 1.068999999999376e-06, 2.9417000000000332e-05, 1.02800000000014e-06, 1.2887999999999095e-05, 1.0699999999988496e-06, 2.0680000000002086e-05, 1.0559999999992797e-06, 2.411100000000027e-05, 1.0559999999992797e-06, 1.2901999999998665e-05, 1.0560000000027492e-06, 1.2888999999998568e-05, 1.054999999999806e-06, 2.7556000000001496e-05, 1.068999999999376e-06, 1.2569999999999942e-05, 1.0419999999997098e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 2.9082999999999193e-05, 1.068999999999376e-06, 1.663900000000232e-05, 1.0559999999992797e-06, 2.1943999999999436e-05, 1.0559999999992797e-06, 2.038899999999913e-05, 1.01400000000057e-06, 1.78890000000001e-05, 1.054999999999806e-06, 1.818100000000253e-05, 1.0969999999985158e-06, 2.033300000000085e-05, 1.0839999999984196e-06, 1.883299999999935e-05, 1.01400000000057e-06, 2.6610999999999302e-05, 1.0420000000031793e-06, 1.880499999999674e-05, 1.0830000000024154e-06, 1.6611999999999183e-05, 1.068999999999376e-06], 'diff': [0, 1.26400000000082e-06, 2.365299999999848e-05, 1.068999999999376e-06, 2.8778000000000137e-05, 1.0690000000028455e-06, 2.5027999999999856e-05, 1.0699999999988496e-06, 2.102699999999985e-05, 1.0419999999997098e-06, 1.6292000000001083e-05, 1.068999999999376e-06, 2.9403000000000762e-05, 1.054999999999806e-06, 3.0361999999999056e-05, 1.0410000000002362e-06, 1.538900000000107e-05, 1.0969999999985158e-06, 1.1917000000000177e-05, 1.0559999999992797e-06, 1.4819000000002719e-05, 1.0139999999971006e-06, 2.9417000000000332e-05, 1.054999999999806e-06, 1.693100000000128e-05, 1.054999999999806e-06, 2.7235999999999927e-05, 1.0559999999992797e-06, 1.9735999999999365e-05, 1.0690000000028455e-06, 1.5999999999998654e-05, 1.0839999999984196e-06, 1.4722000000001734e-05, 1.068999999999376e-06, 1.1653000000000358e-05, 1.0559999999992797e-06, 1.912500000000178e-05, 1.068999999999376e-06, 2.0722000000000795e-05, 9.999999999975306e-07, 1.7570000000001473e-05, 1.054999999999806e-06, 3.065299999999854e-05, 1.0560000000027492e-06, 1.1277999999999982e-05, 1.0969999999985158e-06, 2.3708000000000756e-05, 1.0419999999997098e-06, 1.1653000000000358e-05, 1.054999999999806e-06, 2.8791999999999707e-05, 1.054999999999806e-06, 1.2903000000001608e-05, 1.0559999999992797e-06, 2.5666000000000577e-05, 1.0559999999992797e-06, 1.5694000000000125e-05, 1.0699999999988496e-06, 1.2264000000001413e-05, 1.068999999999376e-06, 2.9417000000000332e-05, 1.02800000000014e-06, 1.2887999999999095e-05, 1.0699999999988496e-06, 2.0680000000002086e-05, 1.0559999999992797e-06, 2.411100000000027e-05, 1.0559999999992797e-06, 1.2901999999998665e-05, 1.0560000000027492e-06, 1.2888999999998568e-05, 1.054999999999806e-06, 2.7556000000001496e-05, 1.068999999999376e-06, 1.2569999999999942e-05, 1.0419999999997098e-06, 2.3194000000000686e-05, 1.0419999999997098e-06, 2.9082999999999193e-05, 1.068999999999376e-06, 1.663900000000232e-05, 1.0559999999992797e-06, 2.1943999999999436e-05, 1.0559999999992797e-06, 2.038899999999913e-05, 1.01400000000057e-06, 1.78890000000001e-05, 1.054999999999806e-06, 1.818100000000253e-05, 1.0969999999985158e-06, 2.033300000000085e-05, 1.0839999999984196e-06, 1.883299999999935e-05, 1.01400000000057e-06, 2.6610999999999302e-05, 1.0420000000031793e-06, 1.880499999999674e-05, 1.0830000000024154e-06, 1.6611999999999183e-05, 1.068999999999376e-06], 'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING']}</msg>
<status status="PASS" starttime="20201112 12:42:05.104" endtime="20201112 12:42:05.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.100" endtime="20201112 12:42:05.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.112" level="INFO">${RESULT} = [{'time': 0.018363014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.26400000000082e-06, 'source_diff': 1.26400000000082e-06}, {'time': 0.018387736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:05.109" endtime="20201112 12:42:05.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.126" level="INFO">${GPIO_OVERHEAD} = {'time': [0.018363014, 0.018387736, 0.018417583, 0.018443681, 0.01846575, 0.018483111, 0.018513569, 0.018544972, 0.018561458, 0.018574431, 0.018590264, 0.018620736, 0.018638722, 0.018667014, 0.0186878...</msg>
<status status="PASS" starttime="20201112 12:42:05.113" endtime="20201112 12:42:05.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.130" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201112 12:42:05.129" endtime="20201112 12:42:05.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.132" level="INFO">VALUE: [1.26400000000082e-06, 1.068999999999376e-06, 1.0690000000028455e-06, 1.0699999999988496e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.054999999999806e-06, 1.0410000000002362e-06, 1.0969999999985158e-06, 1.0559999999992797e-06, 1.0139999999971006e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0690000000028455e-06, 1.0839999999984196e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.068999999999376e-06, 9.999999999975306e-07, 1.054999999999806e-06, 1.0560000000027492e-06, 1.0969999999985158e-06, 1.0419999999997098e-06, 1.054999999999806e-06, 1.054999999999806e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0699999999988496e-06, 1.068999999999376e-06, 1.02800000000014e-06, 1.0699999999988496e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.0560000000027492e-06, 1.054999999999806e-06, 1.068999999999376e-06, 1.0419999999997098e-06, 1.0419999999997098e-06, 1.068999999999376e-06, 1.0559999999992797e-06, 1.0559999999992797e-06, 1.01400000000057e-06, 1.054999999999806e-06, 1.0969999999985158e-06, 1.0839999999984196e-06, 1.01400000000057e-06, 1.0420000000031793e-06, 1.0830000000024154e-06, 1.068999999999376e-06]</msg>
<status status="PASS" starttime="20201112 12:42:05.131" endtime="20201112 12:42:05.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.127" endtime="20201112 12:42:05.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.135" endtime="20201112 12:42:05.137"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.139" endtime="20201112 12:42:05.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.137" endtime="20201112 12:42:05.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.134" endtime="20201112 12:42:05.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:04.734" endtime="20201112 12:42:05.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:41:56.614" endtime="20201112 12:42:05.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.164" endtime="20201112 12:42:05.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.163" endtime="20201112 12:42:05.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.161" endtime="20201112 12:42:05.185"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:41:56.545" endtime="20201112 12:42:05.185" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.194" endtime="20201112 12:42:05.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.192" endtime="20201112 12:42:05.214"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.226" endtime="20201112 12:42:05.239"></status>
</kw>
<msg timestamp="20201112 12:42:05.239" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.225" endtime="20201112 12:42:05.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.242" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.240" endtime="20201112 12:42:05.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.245" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:05.243" endtime="20201112 12:42:05.245"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.222" endtime="20201112 12:42:05.246"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:05.220" endtime="20201112 12:42:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.219" endtime="20201112 12:42:05.247"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:05.251" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:05.251" endtime="20201112 12:42:05.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.248" endtime="20201112 12:42:05.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.218" endtime="20201112 12:42:05.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.217" endtime="20201112 12:42:05.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.253" endtime="20201112 12:42:05.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.216" endtime="20201112 12:42:05.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.214" endtime="20201112 12:42:05.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.190" endtime="20201112 12:42:05.256"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201112 12:42:05.258" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.266" endtime="20201112 12:42:05.277"></status>
</kw>
<msg timestamp="20201112 12:42:05.277" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.264" endtime="20201112 12:42:05.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.280" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.278" endtime="20201112 12:42:05.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.281" endtime="20201112 12:42:05.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.262" endtime="20201112 12:42:05.283"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.260" endtime="20201112 12:42:05.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.290" endtime="20201112 12:42:05.575"></status>
</kw>
<msg timestamp="20201112 12:42:05.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062628444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062640917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.289" endtime="20201112 12:42:05.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.062628444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.062640917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.579" endtime="20201112 12:42:05.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.587" endtime="20201112 12:42:05.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.286" endtime="20201112 12:42:05.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.284" endtime="20201112 12:42:05.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.594" level="INFO">${RESULT} = [{'time': 0.062640917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2472999999998957e-05, 'source_diff': 1.2472999999998957e-05}, {'time': 0.062665889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:05.590" endtime="20201112 12:42:05.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.608" level="INFO">${OVERHEAD} = {'time': [0.062640917, 0.062665889, 0.06269225, 0.062723653, 0.062749764, 0.062783958, 0.062808889, 0.062850181, 0.062887569, 0.062930111, 0.062965556, 0.062996375, 0.063036153, 0.063065361, 0.0630945...</msg>
<status status="PASS" starttime="20201112 12:42:05.595" endtime="20201112 12:42:05.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.612" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:05.611" endtime="20201112 12:42:05.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.615" level="INFO">VALUE: [1.2472999999998957e-05, 1.1903000000007546e-05, 1.1778000000003952e-05, 1.1778000000003952e-05, 1.1778000000003952e-05, 1.1777000000004478e-05, 1.1833000000002758e-05, 1.1708999999998637e-05, 1.1847000000009267e-05, 1.1777999999990074e-05, 1.1750000000004812e-05, 1.181899999999625e-05, 1.1791999999996583e-05, 1.1778000000003952e-05, 1.17769999999906e-05, 1.18200000000096e-05, 1.1778000000003952e-05, 1.1791999999996583e-05, 1.1763999999997443e-05, 1.1735999999998303e-05, 1.1778000000003952e-05, 1.1777000000004478e-05, 1.1777999999990074e-05, 1.1791999999996583e-05, 1.1763999999997443e-05, 1.1791999999996583e-05, 1.1778000000003952e-05, 1.1763999999997443e-05, 1.1778000000003952e-05, 1.1806000000003092e-05, 1.179099999999711e-05, 1.1778000000003952e-05, 1.1778000000003952e-05, 1.1833000000002758e-05, 1.1791999999996583e-05, 1.1833000000002758e-05, 1.1778000000003952e-05, 1.1778000000003952e-05, 1.1764000000011321e-05, 1.1777000000004478e-05, 1.1778000000003952e-05, 1.1819000000010127e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1777999999990074e-05, 1.1763999999997443e-05, 1.1846999999995389e-05, 1.17769999999906e-05, 1.1763999999997443e-05, 1.1721999999991795e-05]</msg>
<status status="PASS" starttime="20201112 12:42:05.613" endtime="20201112 12:42:05.615"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.609" endtime="20201112 12:42:05.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.618" endtime="20201112 12:42:05.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:05.622" endtime="20201112 12:42:05.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.620" endtime="20201112 12:42:05.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.616" endtime="20201112 12:42:05.642"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.259" endtime="20201112 12:42:05.643"></status>
</kw>
<msg timestamp="20201112 12:42:05.643" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.650" endtime="20201112 12:42:05.661"></status>
</kw>
<msg timestamp="20201112 12:42:05.661" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.649" endtime="20201112 12:42:05.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:05.662" endtime="20201112 12:42:05.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.665" endtime="20201112 12:42:05.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.646" endtime="20201112 12:42:05.667"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.645" endtime="20201112 12:42:05.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.674" endtime="20201112 12:42:05.958"></status>
</kw>
<msg timestamp="20201112 12:42:05.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019039778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.672" endtime="20201112 12:42:05.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019027306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019039778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:05.962" endtime="20201112 12:42:05.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:05.971" endtime="20201112 12:42:05.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.670" endtime="20201112 12:42:05.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.668" endtime="20201112 12:42:05.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:05.977" level="INFO">${RESULT} = [{'time': 0.019039778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.019078403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:05.974" endtime="20201112 12:42:05.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:05.991" level="INFO">${OVERHEAD} = {'time': [0.019039778, 0.019078403, 0.019103875, 0.019127792, 0.019166042, 0.019203056, 0.019241611, 0.019279556, 0.019303792, 0.019327694, 0.019370639, 0.019402944, 0.019438708, 0.019474486, 0.019504...</msg>
<status status="PASS" starttime="20201112 12:42:05.979" endtime="20201112 12:42:05.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.995" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:05.994" endtime="20201112 12:42:05.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:05.998" level="INFO">VALUE: [1.2471999999999483e-05, 1.1861000000001898e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.176299999999797e-05, 1.1763999999997443e-05, 1.1749999999997873e-05, 1.1763999999997443e-05, 1.1792000000000052e-05, 1.1763000000001439e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1707999999999164e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1722000000002203e-05, 1.1791000000000579e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1722000000002203e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1777000000001009e-05, 1.177699999999754e-05, 1.177699999999754e-05, 1.1764000000000913e-05, 1.1749999999997873e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1833999999998762e-05]</msg>
<status status="PASS" starttime="20201112 12:42:05.996" endtime="20201112 12:42:05.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.992" endtime="20201112 12:42:05.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.001" endtime="20201112 12:42:06.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.005" endtime="20201112 12:42:06.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.003" endtime="20201112 12:42:06.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.999" endtime="20201112 12:42:06.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.643" endtime="20201112 12:42:06.026"></status>
</kw>
<msg timestamp="20201112 12:42:06.026" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.033" endtime="20201112 12:42:06.044"></status>
</kw>
<msg timestamp="20201112 12:42:06.045" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.032" endtime="20201112 12:42:06.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.046" endtime="20201112 12:42:06.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.048" endtime="20201112 12:42:06.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.029" endtime="20201112 12:42:06.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.028" endtime="20201112 12:42:06.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.057" endtime="20201112 12:42:06.342"></status>
</kw>
<msg timestamp="20201112 12:42:06.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019177486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:06.055" endtime="20201112 12:42:06.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019165, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019177486, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:06.346" endtime="20201112 12:42:06.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.354" endtime="20201112 12:42:06.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.053" endtime="20201112 12:42:06.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.051" endtime="20201112 12:42:06.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.361" level="INFO">${RESULT} = [{'time': 0.019177486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.019220139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:06.358" endtime="20201112 12:42:06.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.375" level="INFO">${OVERHEAD} = {'time': [0.019177486, 0.019220139, 0.019262514, 0.019294472, 0.019319625, 0.019346361, 0.019384319, 0.019425111, 0.019462986, 0.019487542, 0.019521403, 0.019548458, 0.019578931, 0.019615306, 0.019648...</msg>
<status status="PASS" starttime="20201112 12:42:06.362" endtime="20201112 12:42:06.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.379" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:06.378" endtime="20201112 12:42:06.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.381" level="INFO">VALUE: [1.2485999999999053e-05, 1.1832999999999289e-05, 1.1847000000002328e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1791000000000579e-05, 1.1832999999999289e-05, 1.1778000000000483e-05, 1.1805999999999622e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1736999999997777e-05, 1.1778000000000483e-05, 1.1708999999998637e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1736000000001773e-05, 1.1763999999997443e-05, 1.1777000000001009e-05, 1.177699999999754e-05, 1.1777999999997013e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1707999999999164e-05, 1.1777000000001009e-05, 1.1707999999999164e-05, 1.1778000000000483e-05, 1.1737000000001246e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1791000000000579e-05]</msg>
<status status="PASS" starttime="20201112 12:42:06.380" endtime="20201112 12:42:06.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.375" endtime="20201112 12:42:06.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.384" endtime="20201112 12:42:06.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.388" endtime="20201112 12:42:06.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.386" endtime="20201112 12:42:06.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.383" endtime="20201112 12:42:06.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.026" endtime="20201112 12:42:06.409"></status>
</kw>
<msg timestamp="20201112 12:42:06.409" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.417" endtime="20201112 12:42:06.428"></status>
</kw>
<msg timestamp="20201112 12:42:06.428" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.415" endtime="20201112 12:42:06.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.429" endtime="20201112 12:42:06.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.431" endtime="20201112 12:42:06.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.413" endtime="20201112 12:42:06.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.411" endtime="20201112 12:42:06.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.440" endtime="20201112 12:42:06.726"></status>
</kw>
<msg timestamp="20201112 12:42:06.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019090042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.439" endtime="20201112 12:42:06.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019077583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019090042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.730" endtime="20201112 12:42:06.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.738" endtime="20201112 12:42:06.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.436" endtime="20201112 12:42:06.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.434" endtime="20201112 12:42:06.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:06.745" level="INFO">${RESULT} = [{'time': 0.019090042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2459000000002857e-05, 'source_diff': 1.2459000000002857e-05}, {'time': 0.019114097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:06.742" endtime="20201112 12:42:06.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:06.758" level="INFO">${OVERHEAD} = {'time': [0.019090042, 0.019114097, 0.019137944, 0.019174333, 0.019206681, 0.019243375, 0.019269458, 0.019309569, 0.019342528, 0.019382333, 0.019420917, 0.019454167, 0.019489931, 0.019515403, 0.019557...</msg>
<status status="PASS" starttime="20201112 12:42:06.746" endtime="20201112 12:42:06.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.762" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:06.761" endtime="20201112 12:42:06.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.765" level="INFO">VALUE: [1.2459000000002857e-05, 1.1903000000000608e-05, 1.1763000000001439e-05, 1.177699999999754e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.176299999999797e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1832999999999289e-05, 1.1777000000001009e-05, 1.176299999999797e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1819999999999192e-05, 1.1778000000000483e-05, 1.1847000000002328e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.177699999999754e-05, 1.1763000000001439e-05, 1.1778000000000483e-05, 1.1763000000001439e-05, 1.1792000000000052e-05, 1.1778000000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:42:06.763" endtime="20201112 12:42:06.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.759" endtime="20201112 12:42:06.766"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.768" endtime="20201112 12:42:06.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:06.772" endtime="20201112 12:42:06.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.770" endtime="20201112 12:42:06.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.766" endtime="20201112 12:42:06.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.410" endtime="20201112 12:42:06.793"></status>
</kw>
<msg timestamp="20201112 12:42:06.793" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.800" endtime="20201112 12:42:06.811"></status>
</kw>
<msg timestamp="20201112 12:42:06.812" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.799" endtime="20201112 12:42:06.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:06.814" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:06.813" endtime="20201112 12:42:06.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.815" endtime="20201112 12:42:06.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.796" endtime="20201112 12:42:06.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.795" endtime="20201112 12:42:06.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:06.824" endtime="20201112 12:42:07.110"></status>
</kw>
<msg timestamp="20201112 12:42:07.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019019583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019032111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:06.822" endtime="20201112 12:42:07.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019019583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019032111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.114" endtime="20201112 12:42:07.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.122" endtime="20201112 12:42:07.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.820" endtime="20201112 12:42:07.124"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.818" endtime="20201112 12:42:07.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.129" level="INFO">${RESULT} = [{'time': 0.019032111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2528000000001233e-05, 'source_diff': 1.2528000000001233e-05}, {'time': 0.019062569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:07.125" endtime="20201112 12:42:07.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.143" level="INFO">${OVERHEAD} = {'time': [0.019032111, 0.019062569, 0.019104875, 0.019143444, 0.019186389, 0.019228347, 0.0192585, 0.019282431, 0.019322569, 0.019362694, 0.019399375, 0.019442597, 0.019479278, 0.019511944, 0.01953958...</msg>
<status status="PASS" starttime="20201112 12:42:07.130" endtime="20201112 12:42:07.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.147" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:07.146" endtime="20201112 12:42:07.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.149" level="INFO">VALUE: [1.2528000000001233e-05, 1.1833000000002758e-05, 1.1778000000000483e-05, 1.176299999999797e-05, 1.1806000000003092e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1805000000000149e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1749999999997873e-05, 1.1707999999999164e-05, 1.177699999999754e-05, 1.1805000000000149e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1834000000002232e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1749999999997873e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1707999999999164e-05, 1.177699999999754e-05, 1.1721999999998733e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1805999999999622e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1737000000001246e-05, 1.179099999999711e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1709000000002107e-05, 1.1805999999999622e-05, 1.1778000000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.148" endtime="20201112 12:42:07.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.144" endtime="20201112 12:42:07.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.152" endtime="20201112 12:42:07.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.156" endtime="20201112 12:42:07.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.154" endtime="20201112 12:42:07.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.151" endtime="20201112 12:42:07.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:06.793" endtime="20201112 12:42:07.177"></status>
</kw>
<msg timestamp="20201112 12:42:07.177" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.185" endtime="20201112 12:42:07.196"></status>
</kw>
<msg timestamp="20201112 12:42:07.196" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.183" endtime="20201112 12:42:07.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.198" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.197" endtime="20201112 12:42:07.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.199" endtime="20201112 12:42:07.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.181" endtime="20201112 12:42:07.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.179" endtime="20201112 12:42:07.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.209" endtime="20201112 12:42:07.494"></status>
</kw>
<msg timestamp="20201112 12:42:07.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018945472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018957931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.207" endtime="20201112 12:42:07.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018945472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018957931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.498" endtime="20201112 12:42:07.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.506" endtime="20201112 12:42:07.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.205" endtime="20201112 12:42:07.508"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.203" endtime="20201112 12:42:07.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.513" level="INFO">${RESULT} = [{'time': 0.018957931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2458999999999387e-05, 'source_diff': 1.2458999999999387e-05}, {'time': 0.018997514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:07.509" endtime="20201112 12:42:07.513"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.526" level="INFO">${OVERHEAD} = {'time': [0.018957931, 0.018997514, 0.019038292, 0.019072125, 0.019099486, 0.019133361, 0.019170389, 0.019213014, 0.019247181, 0.019286069, 0.019320903, 0.019358222, 0.019398958, 0.019430986, 0.019454...</msg>
<status status="PASS" starttime="20201112 12:42:07.514" endtime="20201112 12:42:07.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.530" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:07.529" endtime="20201112 12:42:07.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.533" level="INFO">VALUE: [1.2458999999999387e-05, 1.1860999999998428e-05, 1.1833999999998762e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1749999999997873e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1791000000000579e-05, 1.1722000000002203e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1819999999999192e-05, 1.1792000000000052e-05, 1.1777999999997013e-05, 1.1736000000001773e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1805000000000149e-05, 1.1764000000000913e-05, 1.1763000000001439e-05, 1.1791000000000579e-05, 1.1846999999998858e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1750000000001343e-05, 1.1805999999999622e-05, 1.177699999999754e-05, 1.1764000000000913e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.531" endtime="20201112 12:42:07.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.527" endtime="20201112 12:42:07.533"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.536" endtime="20201112 12:42:07.537"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.540" endtime="20201112 12:42:07.559"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.538" endtime="20201112 12:42:07.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.534" endtime="20201112 12:42:07.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.178" endtime="20201112 12:42:07.560"></status>
</kw>
<msg timestamp="20201112 12:42:07.561" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.568" endtime="20201112 12:42:07.579"></status>
</kw>
<msg timestamp="20201112 12:42:07.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.567" endtime="20201112 12:42:07.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.580" endtime="20201112 12:42:07.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.583" endtime="20201112 12:42:07.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.564" endtime="20201112 12:42:07.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.562" endtime="20201112 12:42:07.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.592" endtime="20201112 12:42:07.877"></status>
</kw>
<msg timestamp="20201112 12:42:07.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019031958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019044472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.591" endtime="20201112 12:42:07.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019031958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019044472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.881" endtime="20201112 12:42:07.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.889" endtime="20201112 12:42:07.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.588" endtime="20201112 12:42:07.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.586" endtime="20201112 12:42:07.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:07.895" level="INFO">${RESULT} = [{'time': 0.019044472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2513999999998193e-05, 'source_diff': 1.2513999999998193e-05}, {'time': 0.019068722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:07.892" endtime="20201112 12:42:07.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:07.909" level="INFO">${OVERHEAD} = {'time': [0.019044472, 0.019068722, 0.019111681, 0.019147403, 0.019172875, 0.019203028, 0.019243458, 0.019271111, 0.019296903, 0.019338583, 0.01938125, 0.019416028, 0.019450847, 0.019475722, 0.0194996...</msg>
<status status="PASS" starttime="20201112 12:42:07.896" endtime="20201112 12:42:07.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.913" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:07.912" endtime="20201112 12:42:07.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.915" level="INFO">VALUE: [1.2513999999998193e-05, 1.1818999999999719e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1805999999999622e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1805999999999622e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1777000000001009e-05, 1.1736000000001773e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1721999999998733e-05, 1.1848000000001802e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1791000000000579e-05]</msg>
<status status="PASS" starttime="20201112 12:42:07.914" endtime="20201112 12:42:07.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.910" endtime="20201112 12:42:07.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.918" endtime="20201112 12:42:07.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:07.922" endtime="20201112 12:42:07.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.920" endtime="20201112 12:42:07.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.917" endtime="20201112 12:42:07.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.561" endtime="20201112 12:42:07.943"></status>
</kw>
<msg timestamp="20201112 12:42:07.943" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.951" endtime="20201112 12:42:07.962"></status>
</kw>
<msg timestamp="20201112 12:42:07.963" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.949" endtime="20201112 12:42:07.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:07.965" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:07.964" endtime="20201112 12:42:07.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.966" endtime="20201112 12:42:07.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.947" endtime="20201112 12:42:07.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.945" endtime="20201112 12:42:07.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:07.975" endtime="20201112 12:42:08.261"></status>
</kw>
<msg timestamp="20201112 12:42:08.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:07.973" endtime="20201112 12:42:08.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.265" endtime="20201112 12:42:08.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.273" endtime="20201112 12:42:08.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.971" endtime="20201112 12:42:08.275"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.969" endtime="20201112 12:42:08.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.280" level="INFO">${RESULT} = [{'time': 0.019457306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2472999999998957e-05, 'source_diff': 1.2472999999998957e-05}, {'time': 0.019482514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:08.276" endtime="20201112 12:42:08.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:08.293" level="INFO">${OVERHEAD} = {'time': [0.019457306, 0.019482514, 0.019516417, 0.019554361, 0.019597292, 0.019632417, 0.019666625, 0.019694306, 0.019727264, 0.019754597, 0.019783514, 0.019812736, 0.019838833, 0.019878028, 0.019902...</msg>
<status status="PASS" starttime="20201112 12:42:08.281" endtime="20201112 12:42:08.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.297" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:08.296" endtime="20201112 12:42:08.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.300" level="INFO">VALUE: [1.2472999999998957e-05, 1.1832999999999289e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1806000000003092e-05, 1.177699999999754e-05, 1.1707999999999164e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1736000000001773e-05, 1.1749999999997873e-05, 1.1778000000000483e-05, 1.1723000000001677e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.177699999999754e-05, 1.180499999999668e-05, 1.1736000000001773e-05, 1.1792000000000052e-05, 1.1749999999997873e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1818999999999719e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1707999999999164e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1777000000001009e-05]</msg>
<status status="PASS" starttime="20201112 12:42:08.298" endtime="20201112 12:42:08.300"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.294" endtime="20201112 12:42:08.300"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.303" endtime="20201112 12:42:08.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.307" endtime="20201112 12:42:08.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.304" endtime="20201112 12:42:08.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.301" endtime="20201112 12:42:08.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:07.944" endtime="20201112 12:42:08.328"></status>
</kw>
<msg timestamp="20201112 12:42:08.328" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.336" endtime="20201112 12:42:08.347"></status>
</kw>
<msg timestamp="20201112 12:42:08.347" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.335" endtime="20201112 12:42:08.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.350" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.348" endtime="20201112 12:42:08.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.351" endtime="20201112 12:42:08.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.332" endtime="20201112 12:42:08.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.330" endtime="20201112 12:42:08.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.360" endtime="20201112 12:42:08.644"></status>
</kw>
<msg timestamp="20201112 12:42:08.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.358" endtime="20201112 12:42:08.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020086764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.649" endtime="20201112 12:42:08.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.657" endtime="20201112 12:42:08.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.355" endtime="20201112 12:42:08.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.354" endtime="20201112 12:42:08.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:08.663" level="INFO">${RESULT} = [{'time': 0.020099236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.020128514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:08.660" endtime="20201112 12:42:08.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:08.677" level="INFO">${OVERHEAD} = {'time': [0.020099236, 0.020128514, 0.020159583, 0.02019075, 0.020221139, 0.020247583, 0.020281431, 0.020315014, 0.020348653, 0.020380931, 0.020416694, 0.020453389, 0.020477639, 0.020504361, 0.0205392...</msg>
<status status="PASS" starttime="20201112 12:42:08.664" endtime="20201112 12:42:08.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.681" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:08.680" endtime="20201112 12:42:08.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.684" level="INFO">VALUE: [1.2471999999999483e-05, 1.1860999999998428e-05, 1.177699999999754e-05, 1.1846999999998858e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1834000000002232e-05, 1.1778000000000483e-05, 1.177699999999754e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1763000000001439e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.177699999999754e-05, 1.1721999999998733e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1847000000002328e-05, 1.1792000000000052e-05, 1.179099999999711e-05, 1.1721999999998733e-05, 1.1736000000001773e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1832999999999289e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.177699999999754e-05, 1.1818999999999719e-05, 1.1792000000000052e-05]</msg>
<status status="PASS" starttime="20201112 12:42:08.682" endtime="20201112 12:42:08.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.678" endtime="20201112 12:42:08.685"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.687" endtime="20201112 12:42:08.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:08.691" endtime="20201112 12:42:08.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.689" endtime="20201112 12:42:08.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.685" endtime="20201112 12:42:08.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.328" endtime="20201112 12:42:08.712"></status>
</kw>
<msg timestamp="20201112 12:42:08.712" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.720" endtime="20201112 12:42:08.731"></status>
</kw>
<msg timestamp="20201112 12:42:08.731" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.718" endtime="20201112 12:42:08.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:08.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:08.732" endtime="20201112 12:42:08.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.734" endtime="20201112 12:42:08.736"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.716" endtime="20201112 12:42:08.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.714" endtime="20201112 12:42:08.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:08.743" endtime="20201112 12:42:09.028"></status>
</kw>
<msg timestamp="20201112 12:42:09.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019095306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019107792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:08.742" endtime="20201112 12:42:09.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019095306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019107792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.032" endtime="20201112 12:42:09.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.040" endtime="20201112 12:42:09.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.739" endtime="20201112 12:42:09.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.738" endtime="20201112 12:42:09.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.047" level="INFO">${RESULT} = [{'time': 0.019107792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2485999999999053e-05, 'source_diff': 1.2485999999999053e-05}, {'time': 0.019133944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:09.044" endtime="20201112 12:42:09.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:09.060" level="INFO">${OVERHEAD} = {'time': [0.019107792, 0.019133944, 0.019169722, 0.019202681, 0.019229403, 0.019269847, 0.019308417, 0.019336083, 0.019361569, 0.019396708, 0.019437458, 0.019473528, 0.019511806, 0.019549736, 0.019589...</msg>
<status status="PASS" starttime="20201112 12:42:09.048" endtime="20201112 12:42:09.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.065" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:09.064" endtime="20201112 12:42:09.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.067" level="INFO">VALUE: [1.2485999999999053e-05, 1.1832999999999289e-05, 1.1791000000000579e-05, 1.1722999999998207e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1721999999998733e-05, 1.177699999999754e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1722000000002203e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.179099999999711e-05, 1.1778000000000483e-05, 1.1820000000002662e-05, 1.1778000000000483e-05, 1.1749999999997873e-05, 1.1805000000000149e-05, 1.1791000000000579e-05, 1.1848000000001802e-05, 1.1791000000000579e-05, 1.1722000000002203e-05, 1.1777000000001009e-05, 1.1791000000000579e-05, 1.1693999999999594e-05, 1.1722000000002203e-05, 1.177699999999754e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1722000000002203e-05, 1.1708999999998637e-05, 1.1778000000000483e-05, 1.1819999999999192e-05, 1.1819999999999192e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1721999999998733e-05]</msg>
<status status="PASS" starttime="20201112 12:42:09.066" endtime="20201112 12:42:09.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.061" endtime="20201112 12:42:09.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.070" endtime="20201112 12:42:09.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.075" endtime="20201112 12:42:09.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.072" endtime="20201112 12:42:09.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.069" endtime="20201112 12:42:09.095"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:08.713" endtime="20201112 12:42:09.095"></status>
</kw>
<msg timestamp="20201112 12:42:09.095" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.103" endtime="20201112 12:42:09.114"></status>
</kw>
<msg timestamp="20201112 12:42:09.114" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.101" endtime="20201112 12:42:09.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.117" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.115" endtime="20201112 12:42:09.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.118" endtime="20201112 12:42:09.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.099" endtime="20201112 12:42:09.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.097" endtime="20201112 12:42:09.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.127" endtime="20201112 12:42:09.412"></status>
</kw>
<msg timestamp="20201112 12:42:09.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.125" endtime="20201112 12:42:09.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018940431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018952889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.416" endtime="20201112 12:42:09.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.424" endtime="20201112 12:42:09.425"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.122" endtime="20201112 12:42:09.426"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.121" endtime="20201112 12:42:09.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.430" level="INFO">${RESULT} = [{'time': 0.018952889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2457999999999914e-05, 'source_diff': 1.2457999999999914e-05}, {'time': 0.018983431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:09.427" endtime="20201112 12:42:09.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:09.444" level="INFO">${OVERHEAD} = {'time': [0.018952889, 0.018983431, 0.019024792, 0.019065222, 0.019099111, 0.019123028, 0.019155361, 0.019192083, 0.019229389, 0.019268875, 0.019294694, 0.019332931, 0.019370861, 0.019413167, 0.019446...</msg>
<status status="PASS" starttime="20201112 12:42:09.431" endtime="20201112 12:42:09.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.448" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:09.447" endtime="20201112 12:42:09.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.450" level="INFO">VALUE: [1.2457999999999914e-05, 1.1777999999997013e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1764000000000913e-05, 1.1735999999998303e-05, 1.179099999999711e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1750000000001343e-05, 1.1695000000002537e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1791000000000579e-05, 1.1763999999997443e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1735999999998303e-05, 1.1805000000000149e-05, 1.1777000000001009e-05, 1.1846999999998858e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1846999999998858e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1763000000001439e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1777000000001009e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1750000000001343e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1805999999999622e-05, 1.1764000000000913e-05, 1.1818999999999719e-05, 1.1791000000000579e-05, 1.1721999999998733e-05, 1.1764000000000913e-05, 1.1791000000000579e-05, 1.1763999999997443e-05]</msg>
<status status="PASS" starttime="20201112 12:42:09.449" endtime="20201112 12:42:09.451"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.445" endtime="20201112 12:42:09.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.454" endtime="20201112 12:42:09.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.458" endtime="20201112 12:42:09.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.456" endtime="20201112 12:42:09.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.452" endtime="20201112 12:42:09.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.096" endtime="20201112 12:42:09.479"></status>
</kw>
<msg timestamp="20201112 12:42:09.479" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.486" endtime="20201112 12:42:09.497"></status>
</kw>
<msg timestamp="20201112 12:42:09.498" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.485" endtime="20201112 12:42:09.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.500" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.499" endtime="20201112 12:42:09.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.501" endtime="20201112 12:42:09.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.482" endtime="20201112 12:42:09.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.481" endtime="20201112 12:42:09.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.510" endtime="20201112 12:42:09.795"></status>
</kw>
<msg timestamp="20201112 12:42:09.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019062903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019075361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.508" endtime="20201112 12:42:09.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019062903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019075361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.799" endtime="20201112 12:42:09.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.807" endtime="20201112 12:42:09.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.506" endtime="20201112 12:42:09.809"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.504" endtime="20201112 12:42:09.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:09.813" level="INFO">${RESULT} = [{'time': 0.019075361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2457999999999914e-05, 'source_diff': 1.2457999999999914e-05}, {'time': 0.019113375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:09.810" endtime="20201112 12:42:09.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:09.826" level="INFO">${OVERHEAD} = {'time': [0.019075361, 0.019113375, 0.019150056, 0.019181764, 0.019220931, 0.019247333, 0.019288069, 0.019320417, 0.019359292, 0.019386931, 0.019427667, 0.019455056, 0.019493889, 0.019524667, 0.019560...</msg>
<status status="PASS" starttime="20201112 12:42:09.814" endtime="20201112 12:42:09.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:09.830" endtime="20201112 12:42:09.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.833" level="INFO">VALUE: [1.2457999999999914e-05, 1.1792000000000052e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1723000000001677e-05, 1.1763999999997443e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1819999999999192e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1749999999997873e-05, 1.1792000000000052e-05, 1.1736000000001773e-05, 1.1777000000001009e-05, 1.1750000000001343e-05, 1.1805000000000149e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1736000000001773e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1749999999997873e-05, 1.1820000000002662e-05, 1.1777000000001009e-05, 1.180499999999668e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1819999999999192e-05, 1.1777999999997013e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1750000000001343e-05, 1.1818999999999719e-05, 1.1749999999997873e-05, 1.1791000000000579e-05, 1.1693999999999594e-05, 1.1778000000000483e-05, 1.1818999999999719e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1750000000001343e-05]</msg>
<status status="PASS" starttime="20201112 12:42:09.832" endtime="20201112 12:42:09.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.827" endtime="20201112 12:42:09.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.837" endtime="20201112 12:42:09.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:09.841" endtime="20201112 12:42:09.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.839" endtime="20201112 12:42:09.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.835" endtime="20201112 12:42:09.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.479" endtime="20201112 12:42:09.862"></status>
</kw>
<msg timestamp="20201112 12:42:09.862" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.870" endtime="20201112 12:42:09.881"></status>
</kw>
<msg timestamp="20201112 12:42:09.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.868" endtime="20201112 12:42:09.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:09.883" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:09.882" endtime="20201112 12:42:09.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.884" endtime="20201112 12:42:09.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.866" endtime="20201112 12:42:09.887"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.864" endtime="20201112 12:42:09.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:09.893" endtime="20201112 12:42:10.179"></status>
</kw>
<msg timestamp="20201112 12:42:10.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019326278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:09.892" endtime="20201112 12:42:10.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019326278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.183" endtime="20201112 12:42:10.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.191" endtime="20201112 12:42:10.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.889" endtime="20201112 12:42:10.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.888" endtime="20201112 12:42:10.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.198" level="INFO">${RESULT} = [{'time': 0.019326278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2458999999999387e-05, 'source_diff': 1.2458999999999387e-05}, {'time': 0.019353069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:10.194" endtime="20201112 12:42:10.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:10.212" level="INFO">${OVERHEAD} = {'time': [0.019326278, 0.019353069, 0.019384778, 0.019418667, 0.019444153, 0.019468389, 0.019503208, 0.019537722, 0.019579458, 0.0196055, 0.019641264, 0.019677333, 0.019718056, 0.019760986, 0.01979455...</msg>
<status status="PASS" starttime="20201112 12:42:10.199" endtime="20201112 12:42:10.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.216" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:10.215" endtime="20201112 12:42:10.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.218" level="INFO">VALUE: [1.2458999999999387e-05, 1.1832999999999289e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1749999999997873e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1847000000002328e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1736000000001773e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1805999999999622e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1819999999999192e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1777000000001009e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1707999999999164e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1777999999997013e-05, 1.1833000000002758e-05, 1.1819999999999192e-05, 1.1735999999998303e-05, 1.1805999999999622e-05, 1.176299999999797e-05, 1.1846999999998858e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1708999999998637e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1777999999997013e-05]</msg>
<status status="PASS" starttime="20201112 12:42:10.217" endtime="20201112 12:42:10.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.213" endtime="20201112 12:42:10.220"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.222" endtime="20201112 12:42:10.223"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.226" endtime="20201112 12:42:10.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.224" endtime="20201112 12:42:10.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.220" endtime="20201112 12:42:10.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:09.863" endtime="20201112 12:42:10.247"></status>
</kw>
<msg timestamp="20201112 12:42:10.247" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.254" endtime="20201112 12:42:10.265"></status>
</kw>
<msg timestamp="20201112 12:42:10.266" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.253" endtime="20201112 12:42:10.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.268" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.267" endtime="20201112 12:42:10.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.269" endtime="20201112 12:42:10.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.250" endtime="20201112 12:42:10.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.249" endtime="20201112 12:42:10.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.278" endtime="20201112 12:42:10.563"></status>
</kw>
<msg timestamp="20201112 12:42:10.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018984069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018996528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.276" endtime="20201112 12:42:10.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018984069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018996528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.567" endtime="20201112 12:42:10.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.575" endtime="20201112 12:42:10.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.274" endtime="20201112 12:42:10.577"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.272" endtime="20201112 12:42:10.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.582" level="INFO">${RESULT} = [{'time': 0.018996528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2458999999999387e-05, 'source_diff': 1.2458999999999387e-05}, {'time': 0.0190205, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:10.578" endtime="20201112 12:42:10.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:10.595" level="INFO">${OVERHEAD} = {'time': [0.018996528, 0.0190205, 0.019048778, 0.019089208, 0.019130278, 0.019163222, 0.019195847, 0.019220431, 0.019251847, 0.019278833, 0.019305569, 0.019342556, 0.019381764, 0.019420958, 0.01944547...</msg>
<status status="PASS" starttime="20201112 12:42:10.583" endtime="20201112 12:42:10.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.599" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:10.598" endtime="20201112 12:42:10.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.601" level="INFO">VALUE: [1.2458999999999387e-05, 1.1818999999999719e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1763999999997443e-05, 1.1819999999999192e-05, 1.1832999999999289e-05, 1.1763999999997443e-05, 1.1791000000000579e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.179099999999711e-05, 1.1735999999998303e-05, 1.1778000000000483e-05, 1.1847000000002328e-05, 1.1736000000001773e-05, 1.177699999999754e-05, 1.1806000000003092e-05, 1.1791000000000579e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1737000000001246e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.176299999999797e-05, 1.1778000000000483e-05, 1.1721999999998733e-05, 1.177699999999754e-05, 1.1847999999998332e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1736000000001773e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1805000000000149e-05, 1.1777000000001009e-05, 1.179099999999711e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1764000000000913e-05]</msg>
<status status="PASS" starttime="20201112 12:42:10.600" endtime="20201112 12:42:10.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.596" endtime="20201112 12:42:10.603"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.605" endtime="20201112 12:42:10.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.609" endtime="20201112 12:42:10.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.607" endtime="20201112 12:42:10.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.603" endtime="20201112 12:42:10.629"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.248" endtime="20201112 12:42:10.630"></status>
</kw>
<msg timestamp="20201112 12:42:10.630" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.637" endtime="20201112 12:42:10.648"></status>
</kw>
<msg timestamp="20201112 12:42:10.649" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.636" endtime="20201112 12:42:10.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.651" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:10.650" endtime="20201112 12:42:10.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.652" endtime="20201112 12:42:10.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.633" endtime="20201112 12:42:10.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.632" endtime="20201112 12:42:10.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.661" endtime="20201112 12:42:10.946"></status>
</kw>
<msg timestamp="20201112 12:42:10.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019040667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.659" endtime="20201112 12:42:10.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019028194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019040667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:10.950" endtime="20201112 12:42:10.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.958" endtime="20201112 12:42:10.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.657" endtime="20201112 12:42:10.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.655" endtime="20201112 12:42:10.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:10.964" level="INFO">${RESULT} = [{'time': 0.019040667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2473000000002427e-05, 'source_diff': 1.2473000000002427e-05}, {'time': 0.019078958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:10.961" endtime="20201112 12:42:10.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:10.978" level="INFO">${OVERHEAD} = {'time': [0.019040667, 0.019078958, 0.019107236, 0.019141181, 0.019181264, 0.019210486, 0.019248403, 0.019280431, 0.019323111, 0.019363181, 0.019401097, 0.019429069, 0.019467639, 0.019506514, 0.019545...</msg>
<status status="PASS" starttime="20201112 12:42:10.965" endtime="20201112 12:42:10.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.982" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:10.981" endtime="20201112 12:42:10.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:10.984" level="INFO">VALUE: [1.2473000000002427e-05, 1.1832999999999289e-05, 1.1750000000001343e-05, 1.1833999999998762e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1832999999999289e-05, 1.1778000000000483e-05, 1.1749999999997873e-05, 1.1763000000001439e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.1834000000002232e-05, 1.1735999999998303e-05, 1.1763999999997443e-05, 1.1818999999999719e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1708999999998637e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1750000000001343e-05, 1.1818999999999719e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1777000000001009e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1818999999999719e-05, 1.1777999999997013e-05, 1.1721999999998733e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1847000000002328e-05, 1.1792000000000052e-05, 1.1819000000003188e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1778000000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:42:10.983" endtime="20201112 12:42:10.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.979" endtime="20201112 12:42:10.985"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:10.988" endtime="20201112 12:42:10.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:10.992" endtime="20201112 12:42:11.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.990" endtime="20201112 12:42:11.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.986" endtime="20201112 12:42:11.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:10.630" endtime="20201112 12:42:11.013"></status>
</kw>
<msg timestamp="20201112 12:42:11.013" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.020" endtime="20201112 12:42:11.031"></status>
</kw>
<msg timestamp="20201112 12:42:11.031" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.019" endtime="20201112 12:42:11.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.034" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.033" endtime="20201112 12:42:11.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.035" endtime="20201112 12:42:11.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.016" endtime="20201112 12:42:11.037"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.015" endtime="20201112 12:42:11.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.044" endtime="20201112 12:42:11.328"></status>
</kw>
<msg timestamp="20201112 12:42:11.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019126472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.042" endtime="20201112 12:42:11.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019126472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019138931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.332" endtime="20201112 12:42:11.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.340" endtime="20201112 12:42:11.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.040" endtime="20201112 12:42:11.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.038" endtime="20201112 12:42:11.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.347" level="INFO">${RESULT} = [{'time': 0.019138931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2459000000002857e-05, 'source_diff': 1.2459000000002857e-05}, {'time': 0.019170694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:11.344" endtime="20201112 12:42:11.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:11.360" level="INFO">${OVERHEAD} = {'time': [0.019138931, 0.019170694, 0.019206458, 0.019231944, 0.019256153, 0.019288819, 0.019330167, 0.019370278, 0.019404194, 0.019428431, 0.019456694, 0.019484667, 0.019523222, 0.019551194, 0.019576...</msg>
<status status="PASS" starttime="20201112 12:42:11.348" endtime="20201112 12:42:11.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.365" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:11.364" endtime="20201112 12:42:11.365"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.368" level="INFO">VALUE: [1.2459000000002857e-05, 1.1832999999999289e-05, 1.1791000000000579e-05, 1.1791000000000579e-05, 1.1764000000000913e-05, 1.179099999999711e-05, 1.1722999999998207e-05, 1.1709000000002107e-05, 1.1791000000000579e-05, 1.1792000000000052e-05, 1.1763000000001439e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1763000000001439e-05, 1.1708999999998637e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1805999999999622e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1777999999997013e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1693999999999594e-05, 1.1778000000000483e-05, 1.1791000000000579e-05, 1.177699999999754e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1778000000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:42:11.366" endtime="20201112 12:42:11.368"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.361" endtime="20201112 12:42:11.369"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.371" endtime="20201112 12:42:11.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.376" endtime="20201112 12:42:11.395"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.373" endtime="20201112 12:42:11.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.370" endtime="20201112 12:42:11.396"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.013" endtime="20201112 12:42:11.397"></status>
</kw>
<msg timestamp="20201112 12:42:11.397" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.404" endtime="20201112 12:42:11.415"></status>
</kw>
<msg timestamp="20201112 12:42:11.416" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.403" endtime="20201112 12:42:11.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.418" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.417" endtime="20201112 12:42:11.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.419" endtime="20201112 12:42:11.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.400" endtime="20201112 12:42:11.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.399" endtime="20201112 12:42:11.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.428" endtime="20201112 12:42:11.714"></status>
</kw>
<msg timestamp="20201112 12:42:11.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018961125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018973583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.426" endtime="20201112 12:42:11.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018961125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018973583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:11.718" endtime="20201112 12:42:11.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.726" endtime="20201112 12:42:11.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.424" endtime="20201112 12:42:11.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.422" endtime="20201112 12:42:11.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:11.732" level="INFO">${RESULT} = [{'time': 0.018973583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2457999999999914e-05, 'source_diff': 1.2457999999999914e-05}, {'time': 0.019000375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:11.729" endtime="20201112 12:42:11.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:11.747" level="INFO">${OVERHEAD} = {'time': [0.018973583, 0.019000375, 0.019027694, 0.019053181, 0.019091736, 0.019131014, 0.019167, 0.019201514, 0.019233528, 0.019275514, 0.019314389, 0.019353264, 0.019384042, 0.019421361, 0.019449653...</msg>
<status status="PASS" starttime="20201112 12:42:11.733" endtime="20201112 12:42:11.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.751" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:11.750" endtime="20201112 12:42:11.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.753" level="INFO">VALUE: [1.2457999999999914e-05, 1.1860999999998428e-05, 1.1750000000001343e-05, 1.1749999999997873e-05, 1.1778000000000483e-05, 1.1846999999998858e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1736000000001773e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1819000000003188e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1791000000000579e-05, 1.1818999999999719e-05, 1.1763000000001439e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1750000000001343e-05, 1.1805000000000149e-05, 1.1764000000000913e-05, 1.1833999999998762e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.176299999999797e-05, 1.1764000000000913e-05, 1.1721999999998733e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1750000000001343e-05, 1.1778000000000483e-05, 1.1763999999997443e-05]</msg>
<status status="PASS" starttime="20201112 12:42:11.752" endtime="20201112 12:42:11.754"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.748" endtime="20201112 12:42:11.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.757" endtime="20201112 12:42:11.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:11.761" endtime="20201112 12:42:11.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.759" endtime="20201112 12:42:11.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.755" endtime="20201112 12:42:11.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.398" endtime="20201112 12:42:11.782"></status>
</kw>
<msg timestamp="20201112 12:42:11.782" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.789" endtime="20201112 12:42:11.800"></status>
</kw>
<msg timestamp="20201112 12:42:11.801" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.788" endtime="20201112 12:42:11.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:11.803" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:11.802" endtime="20201112 12:42:11.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.804" endtime="20201112 12:42:11.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.785" endtime="20201112 12:42:11.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.783" endtime="20201112 12:42:11.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:11.813" endtime="20201112 12:42:12.097"></status>
</kw>
<msg timestamp="20201112 12:42:12.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01901375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019026222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:11.811" endtime="20201112 12:42:12.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01901375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019026222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:12.102" endtime="20201112 12:42:12.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.110" endtime="20201112 12:42:12.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.809" endtime="20201112 12:42:12.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.807" endtime="20201112 12:42:12.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.116" level="INFO">${RESULT} = [{'time': 0.019026222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2471999999999483e-05, 'source_diff': 1.2471999999999483e-05}, {'time': 0.019057667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:12.113" endtime="20201112 12:42:12.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:12.130" level="INFO">${OVERHEAD} = {'time': [0.019026222, 0.019057667, 0.019093444, 0.019133875, 0.019163417, 0.019205431, 0.019241472, 0.019281292, 0.019307694, 0.019350972, 0.019377347, 0.019415917, 0.019446722, 0.019488681, 0.019514...</msg>
<status status="PASS" starttime="20201112 12:42:12.117" endtime="20201112 12:42:12.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.134" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:12.133" endtime="20201112 12:42:12.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.136" level="INFO">VALUE: [1.2471999999999483e-05, 1.1833999999998762e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1763999999997443e-05, 1.1763000000001439e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1805000000000149e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1791999999996583e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1764000000000913e-05, 1.1791000000000579e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1791000000000579e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1763999999997443e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1694999999999067e-05, 1.1792000000000052e-05, 1.1764000000000913e-05, 1.1693999999999594e-05, 1.1818999999999719e-05, 1.1764000000000913e-05, 1.1805999999999622e-05, 1.1749999999997873e-05, 1.177699999999754e-05, 1.1708999999998637e-05, 1.1763999999997443e-05, 1.1777999999997013e-05, 1.1764000000000913e-05]</msg>
<status status="PASS" starttime="20201112 12:42:12.135" endtime="20201112 12:42:12.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.130" endtime="20201112 12:42:12.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.140" endtime="20201112 12:42:12.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.144" endtime="20201112 12:42:12.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.141" endtime="20201112 12:42:12.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.138" endtime="20201112 12:42:12.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:11.782" endtime="20201112 12:42:12.164"></status>
</kw>
<msg timestamp="20201112 12:42:12.165" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.172" endtime="20201112 12:42:12.183"></status>
</kw>
<msg timestamp="20201112 12:42:12.183" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.171" endtime="20201112 12:42:12.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.184" endtime="20201112 12:42:12.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.187" endtime="20201112 12:42:12.188"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.168" endtime="20201112 12:42:12.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.166" endtime="20201112 12:42:12.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.195" endtime="20201112 12:42:12.482"></status>
</kw>
<msg timestamp="20201112 12:42:12.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018955556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018968097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.194" endtime="20201112 12:42:12.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018955556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018968097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.486" endtime="20201112 12:42:12.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.494" endtime="20201112 12:42:12.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.192" endtime="20201112 12:42:12.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.190" endtime="20201112 12:42:12.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.500" level="INFO">${RESULT} = [{'time': 0.018968097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2541000000001329e-05, 'source_diff': 1.2541000000001329e-05}, {'time': 0.019000736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:12.497" endtime="20201112 12:42:12.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:12.514" level="INFO">${OVERHEAD} = {'time': [0.018968097, 0.019000736, 0.019027444, 0.019059792, 0.019096167, 0.019127264, 0.0191705, 0.019212181, 0.019247347, 0.019277472, 0.019306069, 0.019338444, 0.019371389, 0.019408389, 0.01943606...</msg>
<status status="PASS" starttime="20201112 12:42:12.501" endtime="20201112 12:42:12.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.518" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:12.517" endtime="20201112 12:42:12.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.520" level="INFO">VALUE: [1.2541000000001329e-05, 1.1847000000002328e-05, 1.1750000000001343e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1777999999997013e-05, 1.1791000000000579e-05, 1.1764000000000913e-05, 1.176299999999797e-05, 1.1805000000000149e-05, 1.1749999999997873e-05, 1.1792000000000052e-05, 1.1805000000000149e-05, 1.1791000000000579e-05, 1.1847000000002328e-05, 1.1778000000000483e-05, 1.1723000000001677e-05, 1.1764000000000913e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1777999999997013e-05, 1.1722000000002203e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1750000000001343e-05, 1.1777000000001009e-05, 1.1832999999999289e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1792000000000052e-05, 1.1791000000000579e-05, 1.1722000000002203e-05, 1.1763999999997443e-05, 1.1791000000000579e-05, 1.1777999999997013e-05, 1.1708999999998637e-05, 1.1792000000000052e-05, 1.1791000000000579e-05, 1.1750000000001343e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1708999999998637e-05, 1.1777000000001009e-05, 1.1708999999998637e-05]</msg>
<status status="PASS" starttime="20201112 12:42:12.519" endtime="20201112 12:42:12.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.514" endtime="20201112 12:42:12.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.524" endtime="20201112 12:42:12.525"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.528" endtime="20201112 12:42:12.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.525" endtime="20201112 12:42:12.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.522" endtime="20201112 12:42:12.548"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.165" endtime="20201112 12:42:12.548"></status>
</kw>
<msg timestamp="20201112 12:42:12.549" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.556" endtime="20201112 12:42:12.567"></status>
</kw>
<msg timestamp="20201112 12:42:12.568" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.554" endtime="20201112 12:42:12.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.570" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.569" endtime="20201112 12:42:12.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.571" endtime="20201112 12:42:12.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.552" endtime="20201112 12:42:12.573"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.550" endtime="20201112 12:42:12.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.580" endtime="20201112 12:42:12.865"></status>
</kw>
<msg timestamp="20201112 12:42:12.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019134708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019147167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.578" endtime="20201112 12:42:12.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019134708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019147167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:12.869" endtime="20201112 12:42:12.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.877" endtime="20201112 12:42:12.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.576" endtime="20201112 12:42:12.879"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.574" endtime="20201112 12:42:12.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:12.883" level="INFO">${RESULT} = [{'time': 0.019147167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2458999999999387e-05, 'source_diff': 1.2458999999999387e-05}, {'time': 0.019182361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:12.880" endtime="20201112 12:42:12.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:12.897" level="INFO">${OVERHEAD} = {'time': [0.019147167, 0.019182361, 0.019211292, 0.019239569, 0.019278458, 0.019311708, 0.019353083, 0.019379819, 0.019406597, 0.019437014, 0.019465917, 0.019491403, 0.019534333, 0.019575097, 0.019603...</msg>
<status status="PASS" starttime="20201112 12:42:12.884" endtime="20201112 12:42:12.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.901" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201112 12:42:12.900" endtime="20201112 12:42:12.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:12.903" level="INFO">VALUE: [1.2458999999999387e-05, 1.1763999999997443e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1749999999997873e-05, 1.1721999999998733e-05, 1.1777000000001009e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1735999999998303e-05, 1.1777000000001009e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1805000000000149e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1833000000002758e-05, 1.1764000000000913e-05, 1.1818999999999719e-05, 1.1818999999999719e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.1777000000001009e-05, 1.1763999999997443e-05, 1.1778000000000483e-05, 1.1777000000001009e-05, 1.1792000000000052e-05, 1.177699999999754e-05, 1.1764000000000913e-05, 1.1763000000001439e-05, 1.1764000000000913e-05, 1.1777000000001009e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05]</msg>
<status status="PASS" starttime="20201112 12:42:12.902" endtime="20201112 12:42:12.904"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.898" endtime="20201112 12:42:12.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.907" endtime="20201112 12:42:12.908"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.911" endtime="20201112 12:42:12.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.908" endtime="20201112 12:42:12.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.905" endtime="20201112 12:42:12.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.549" endtime="20201112 12:42:12.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:05.257" endtime="20201112 12:42:12.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.936" endtime="20201112 12:42:12.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.935" endtime="20201112 12:42:12.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.933" endtime="20201112 12:42:12.957"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:05.188" endtime="20201112 12:42:12.957" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:12.965" endtime="20201112 12:42:12.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.963" endtime="20201112 12:42:12.985"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:12.997" endtime="20201112 12:42:13.009"></status>
</kw>
<msg timestamp="20201112 12:42:13.010" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:12.996" endtime="20201112 12:42:13.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.012" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.011" endtime="20201112 12:42:13.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.015" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:13.013" endtime="20201112 12:42:13.016"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:12.993" endtime="20201112 12:42:13.016"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:12.991" endtime="20201112 12:42:13.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.990" endtime="20201112 12:42:13.017"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:13.021" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:13.020" endtime="20201112 12:42:13.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.018" endtime="20201112 12:42:13.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.989" endtime="20201112 12:42:13.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.988" endtime="20201112 12:42:13.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.022" endtime="20201112 12:42:13.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.987" endtime="20201112 12:42:13.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.985" endtime="20201112 12:42:13.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:12.962" endtime="20201112 12:42:13.025"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.036" endtime="20201112 12:42:13.056"></status>
</kw>
<msg timestamp="20201112 12:42:13.056" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.034" endtime="20201112 12:42:13.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.059" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.057" endtime="20201112 12:42:13.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.060" endtime="20201112 12:42:13.061"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.032" endtime="20201112 12:42:13.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.028" endtime="20201112 12:42:13.062"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.064" endtime="20201112 12:42:13.066"></status>
</kw>
<msg timestamp="20201112 12:42:13.066" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:13.063" endtime="20201112 12:42:13.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.070" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:13.069" endtime="20201112 12:42:13.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.072" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:13.071" endtime="20201112 12:42:13.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.067" endtime="20201112 12:42:13.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.077" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:13.076" endtime="20201112 12:42:13.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.079" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:13.078" endtime="20201112 12:42:13.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.074" endtime="20201112 12:42:13.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.086" endtime="20201112 12:42:13.370"></status>
</kw>
<msg timestamp="20201112 12:42:13.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064296181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.085" endtime="20201112 12:42:13.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064267056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064296181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.374" endtime="20201112 12:42:13.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.382" endtime="20201112 12:42:13.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.082" endtime="20201112 12:42:13.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.080" endtime="20201112 12:42:13.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:13.388" level="INFO">${RESULT} = [{'time': 0.064296181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9124999999990964e-05, 'source_diff': 2.9124999999990964e-05}, {'time': 0.064354736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:13.385" endtime="20201112 12:42:13.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:13.402" level="INFO">${OVERHEAD} = {'time': [0.064296181, 0.064354736, 0.064405861, 0.064449139, 0.064505597, 0.064565347, 0.064612694, 0.064656639, 0.064717069, 0.064778125, 0.064825486, 0.064885625, 0.064927306, 0.064977792, 0.065027...</msg>
<status status="PASS" starttime="20201112 12:42:13.390" endtime="20201112 12:42:13.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.408" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:13.407" endtime="20201112 12:42:13.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.411" level="INFO">VALUE: [2.9124999999990964e-05, 2.8666999999996112e-05, 2.867999999998927e-05, 2.8666999999996112e-05, 2.8736000000001427e-05, 2.8652999999989603e-05, 2.866599999999664e-05, 2.862500000000434e-05, 2.866599999999664e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8666999999996112e-05, 2.866700000000999e-05, 2.868100000000262e-05, 2.8680999999988743e-05, 2.865300000000348e-05, 2.8652000000004008e-05, 2.8638999999996972e-05, 2.8666000000010516e-05, 2.8666999999996112e-05, 2.8624999999990464e-05, 2.865300000000348e-05, 2.8666000000010516e-05, 2.867999999998927e-05, 2.8666999999996112e-05, 2.8582999999998693e-05, 2.8638999999996972e-05, 2.865300000000348e-05, 2.8666999999996112e-05, 2.866700000000999e-05, 2.8666999999996112e-05, 2.867999999998927e-05, 2.865300000000348e-05, 2.8666999999996112e-05, 2.8666000000010516e-05, 2.8721999999994918e-05, 2.865199999999013e-05, 2.8666999999996112e-05, 2.8652000000004008e-05, 2.8666999999996112e-05, 2.86379999999975e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.865300000000348e-05, 2.8610999999997833e-05, 2.865199999999013e-05, 2.8666999999996112e-05, 2.866599999999664e-05, 2.8652000000004008e-05, 2.865300000000348e-05]</msg>
<status status="PASS" starttime="20201112 12:42:13.409" endtime="20201112 12:42:13.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.403" endtime="20201112 12:42:13.411"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.414" endtime="20201112 12:42:13.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.417" endtime="20201112 12:42:13.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.415" endtime="20201112 12:42:13.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.412" endtime="20201112 12:42:13.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.026" endtime="20201112 12:42:13.438"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:12.959" endtime="20201112 12:42:13.438" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:13.446" endtime="20201112 12:42:13.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.445" endtime="20201112 12:42:13.466"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.479" endtime="20201112 12:42:13.491"></status>
</kw>
<msg timestamp="20201112 12:42:13.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.477" endtime="20201112 12:42:13.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.494" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.492" endtime="20201112 12:42:13.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.497" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:13.495" endtime="20201112 12:42:13.497"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:13.474" endtime="20201112 12:42:13.498"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:13.472" endtime="20201112 12:42:13.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.471" endtime="20201112 12:42:13.498"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:13.502" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:13.501" endtime="20201112 12:42:13.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.499" endtime="20201112 12:42:13.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.470" endtime="20201112 12:42:13.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.470" endtime="20201112 12:42:13.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.504" endtime="20201112 12:42:13.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.468" endtime="20201112 12:42:13.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.467" endtime="20201112 12:42:13.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.443" endtime="20201112 12:42:13.506"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.517" endtime="20201112 12:42:13.729"></status>
</kw>
<msg timestamp="20201112 12:42:13.729" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.515" endtime="20201112 12:42:13.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.732" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:13.730" endtime="20201112 12:42:13.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.733" endtime="20201112 12:42:13.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.513" endtime="20201112 12:42:13.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.509" endtime="20201112 12:42:13.736"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.739" endtime="20201112 12:42:13.741"></status>
</kw>
<msg timestamp="20201112 12:42:13.742" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:13.737" endtime="20201112 12:42:13.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.746" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:13.745" endtime="20201112 12:42:13.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.749" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:13.748" endtime="20201112 12:42:13.749"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.743" endtime="20201112 12:42:13.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.754" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:13.753" endtime="20201112 12:42:13.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:13.756" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:13.755" endtime="20201112 12:42:13.757"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.750" endtime="20201112 12:42:13.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:13.764" endtime="20201112 12:42:14.056"></status>
</kw>
<msg timestamp="20201112 12:42:14.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066943875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:13.763" endtime="20201112 12:42:14.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.066943875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067072903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:14.060" endtime="20201112 12:42:14.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.068" endtime="20201112 12:42:14.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.760" endtime="20201112 12:42:14.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.758" endtime="20201112 12:42:14.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:14.074" level="INFO">${RESULT} = [{'time': 0.067072903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012902800000000325, 'source_diff': 0.00012902800000000325}, {'time': 0.070980583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:14.071" endtime="20201112 12:42:14.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:14.103" level="INFO">${OVERHEAD} = {'time': [0.067072903, 0.070980583, 0.074877556, 0.07876975, 0.082671069, 0.086578986, 0.090473167, 0.094380236, 0.098290958, 0.102192069, 0.106096097, 0.109995389, 0.113899069, 0.117805111, 0.1217031...</msg>
<status status="PASS" starttime="20201112 12:42:14.075" endtime="20201112 12:42:14.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.128" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:14.126" endtime="20201112 12:42:14.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.133" level="INFO">VALUE: [0.00012902800000000325, 0.00012755500000000142, 0.00012754199999999438, 0.00012754199999999438, 0.00012751299999999577, 0.00012755500000000142, 0.00012751399999999524, 0.00012754200000000826, 0.0001275409999999949, 0.00012756899999999405, 0.0001275409999999949, 0.0001275560000000009, 0.00012752700000000228, 0.00012755500000000142, 0.00012751399999999524, 0.00012754200000000826, 0.00012762500000002008, 0.00012754099999998103, 0.0001275969999999793, 0.00012754200000000826, 0.00012752800000001563, 0.0001275560000000009, 0.00012754200000000826, 0.00012751399999999524, 0.00012752799999998787, 0.00012751399999999524, 0.00012752800000001563, 0.00012752800000001563, 0.0001275419999999805, 0.0001275969999999793, 0.0001275269999999884, 0.00012754100000000879, 0.0001275269999999884, 0.00012751399999999524, 0.00012754200000000826, 0.0001275000000000026, 0.00012752800000001563, 0.00012754200000000826, 0.00012754100000000879, 0.00012754099999998103, 0.00012752799999998787, 0.00012752700000001616, 0.00012752799999998787, 0.00012754200000000826, 0.0001275560000000009, 0.00012752799999998787, 0.00012748599999998222, 0.00012759800000000654, 0.00012755500000000142, 0.00012752700000001616]</msg>
<status status="PASS" starttime="20201112 12:42:14.130" endtime="20201112 12:42:14.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.120" endtime="20201112 12:42:14.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.139" endtime="20201112 12:42:14.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.146" endtime="20201112 12:42:14.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.143" endtime="20201112 12:42:14.169"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.136" endtime="20201112 12:42:14.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:13.507" endtime="20201112 12:42:14.171"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:13.440" endtime="20201112 12:42:14.172" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:14.182" endtime="20201112 12:42:14.202"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.181" endtime="20201112 12:42:14.202"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.215" endtime="20201112 12:42:14.227"></status>
</kw>
<msg timestamp="20201112 12:42:14.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.213" endtime="20201112 12:42:14.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.229" endtime="20201112 12:42:14.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.233" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:14.231" endtime="20201112 12:42:14.233"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:14.211" endtime="20201112 12:42:14.234"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:14.209" endtime="20201112 12:42:14.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.207" endtime="20201112 12:42:14.235"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:14.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:14.238" endtime="20201112 12:42:14.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.235" endtime="20201112 12:42:14.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.207" endtime="20201112 12:42:14.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.206" endtime="20201112 12:42:14.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.241" endtime="20201112 12:42:14.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.205" endtime="20201112 12:42:14.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.203" endtime="20201112 12:42:14.244"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.179" endtime="20201112 12:42:14.244"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.253" endtime="20201112 12:42:14.982"></status>
</kw>
<msg timestamp="20201112 12:42:14.983" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.252" endtime="20201112 12:42:14.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:14.988" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:14.985" endtime="20201112 12:42:14.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:14.990" endtime="20201112 12:42:14.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.249" endtime="20201112 12:42:14.994"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.247" endtime="20201112 12:42:14.995"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.000" endtime="20201112 12:42:15.003"></status>
</kw>
<msg timestamp="20201112 12:42:15.004" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:14.997" endtime="20201112 12:42:15.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.012" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:15.010" endtime="20201112 12:42:15.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.016" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:15.014" endtime="20201112 12:42:15.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.005" endtime="20201112 12:42:15.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.026" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:15.024" endtime="20201112 12:42:15.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.030" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:15.028" endtime="20201112 12:42:15.031"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.019" endtime="20201112 12:42:15.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.045" endtime="20201112 12:42:15.342"></status>
</kw>
<msg timestamp="20201112 12:42:15.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075717792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075958958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.042" endtime="20201112 12:42:15.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.075717792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.075958958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.345" endtime="20201112 12:42:15.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.353" endtime="20201112 12:42:15.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.037" endtime="20201112 12:42:15.355"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.033" endtime="20201112 12:42:15.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.359" level="INFO">${RESULT} = [{'time': 0.075958958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0002411659999999871, 'source_diff': 0.0002411659999999871}, {'time': 0.090124792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:15.356" endtime="20201112 12:42:15.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:15.373" level="INFO">${OVERHEAD} = {'time': [0.075958958, 0.090124792, 0.104331333, 0.118538583, 0.132753542, 0.146965542, 0.161180111, 0.175402556, 0.189608986, 0.203829, 0.218036722, 0.232246486, 0.246455667, 0.260662111, 0.274866264...</msg>
<status status="PASS" starttime="20201112 12:42:15.361" endtime="20201112 12:42:15.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.378" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:15.377" endtime="20201112 12:42:15.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.380" level="INFO">VALUE: [0.0002411659999999871, 0.00023472299999999224, 0.00023469399999999363, 0.0002346940000000075, 0.0002347089999999996, 0.00023473600000001316, 0.00023472199999999277, 0.00023469499999997923, 0.00023476399999999842, 0.0002346940000000075, 0.00023467999999998712, 0.0002346940000000075, 0.00023463899999998095, 0.00023469399999997975, 0.00023476400000005393, 0.00023469400000003526, 0.0002347089999999996, 0.00023466700000002172, 0.00023472200000002053, 0.00023473599999995765, 0.00023469399999997975, 0.00023470799999997238, 0.00023469400000003526, 0.0002347089999999996, 0.00023472200000002053, 0.00023467999999998712, 0.00023468000000004263, 0.0002347500000000058, 0.00023466700000002172, 0.00023472200000002053, 0.00023463899999998095, 0.0002346530000000291, 0.00023469499999995147, 0.00023463899999998095, 0.0002347089999999996, 0.0002346669999999662, 0.00023468100000001435, 0.00023468100000001435, 0.0002346669999999662, 0.00023468000000004263, 0.0002347500000000613, 0.0002346950000000625, 0.00023470799999991687, 0.00023472199999996501, 0.00023469399999997975, 0.00023463899999998095, 0.0002347089999999996, 0.0002346669999999662, 0.0002347089999999996, 0.00023476399999999842]</msg>
<status status="PASS" starttime="20201112 12:42:15.379" endtime="20201112 12:42:15.381"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.374" endtime="20201112 12:42:15.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.383" endtime="20201112 12:42:15.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.387" endtime="20201112 12:42:15.406"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.385" endtime="20201112 12:42:15.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.382" endtime="20201112 12:42:15.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:14.245" endtime="20201112 12:42:15.407"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:14.176" endtime="20201112 12:42:15.408" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.416" endtime="20201112 12:42:15.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.414" endtime="20201112 12:42:15.436"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.449" endtime="20201112 12:42:15.461"></status>
</kw>
<msg timestamp="20201112 12:42:15.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.447" endtime="20201112 12:42:15.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.464" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.462" endtime="20201112 12:42:15.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.468" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:15.465" endtime="20201112 12:42:15.469"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:15.444" endtime="20201112 12:42:15.469"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:15.442" endtime="20201112 12:42:15.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.441" endtime="20201112 12:42:15.470"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:15.474" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:15.473" endtime="20201112 12:42:15.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.471" endtime="20201112 12:42:15.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.440" endtime="20201112 12:42:15.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.440" endtime="20201112 12:42:15.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.476" endtime="20201112 12:42:15.477"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.438" endtime="20201112 12:42:15.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.437" endtime="20201112 12:42:15.478"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.413" endtime="20201112 12:42:15.479"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.487" endtime="20201112 12:42:15.508"></status>
</kw>
<msg timestamp="20201112 12:42:15.508" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.486" endtime="20201112 12:42:15.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.511" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.509" endtime="20201112 12:42:15.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.512" endtime="20201112 12:42:15.513"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.483" endtime="20201112 12:42:15.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.481" endtime="20201112 12:42:15.514"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.516" endtime="20201112 12:42:15.518"></status>
</kw>
<msg timestamp="20201112 12:42:15.518" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:15.515" endtime="20201112 12:42:15.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.522" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:15.521" endtime="20201112 12:42:15.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.524" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:15.523" endtime="20201112 12:42:15.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.519" endtime="20201112 12:42:15.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.529" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:15.528" endtime="20201112 12:42:15.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.531" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:15.530" endtime="20201112 12:42:15.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.526" endtime="20201112 12:42:15.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.538" endtime="20201112 12:42:15.824"></status>
</kw>
<msg timestamp="20201112 12:42:15.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064488278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.537" endtime="20201112 12:42:15.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064484097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064488278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:15.829" endtime="20201112 12:42:15.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.837" endtime="20201112 12:42:15.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.534" endtime="20201112 12:42:15.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.532" endtime="20201112 12:42:15.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:15.844" level="INFO">${RESULT} = [{'time': 0.064488278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.180999999991997e-06, 'source_diff': 4.180999999991997e-06}, {'time': 0.064537736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:15.840" endtime="20201112 12:42:15.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:15.857" level="INFO">${OVERHEAD} = {'time': [0.064488278, 0.064537736, 0.064591569, 0.064638569, 0.064694542, 0.064748056, 0.0648075, 0.064861944, 0.064914222, 0.064971778, 0.065026236, 0.065089097, 0.065133903, 0.065196153, 0.06524469...</msg>
<status status="PASS" starttime="20201112 12:42:15.845" endtime="20201112 12:42:15.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.861" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201112 12:42:15.860" endtime="20201112 12:42:15.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.864" level="INFO">VALUE: [4.180999999991997e-06, 4.02800000000314e-06, 4.055000000002806e-06, 4.083000000001946e-06, 4.027999999989262e-06, 4.041999999995771e-06, 4.05600000000228e-06, 4.041000000010175e-06, 4.0549999999889286e-06, 4.027999999989262e-06, 4.041999999995771e-06, 4.0409999999962976e-06, 4.02800000000314e-06, 4.05600000000228e-06, 4.069000000009315e-06, 4.02800000000314e-06, 4.05600000000228e-06, 4.125000000007595e-06, 4.055000000002806e-06, 4.041999999995771e-06, 4.041999999995771e-06, 4.111000000001086e-06, 4.02800000000314e-06, 4.041000000010175e-06, 4.070000000008789e-06, 4.055000000002806e-06, 4.041000000010175e-06, 4.05600000000228e-06, 4.0549999999889286e-06, 4.05600000000228e-06, 4.069999999994911e-06, 4.124999999993717e-06, 4.08400000000142e-06, 4.055000000002806e-06, 4.042000000009649e-06, 4.0270000000036665e-06, 4.08400000000142e-06, 4.05600000000228e-06, 4.0549999999889286e-06, 4.041999999995771e-06, 4.041999999995771e-06, 4.05600000000228e-06, 4.041999999995771e-06, 4.055000000002806e-06, 4.055000000002806e-06, 4.05600000000228e-06, 4.05600000000228e-06, 4.068999999995437e-06, 4.055000000002806e-06, 4.05600000000228e-06]</msg>
<status status="PASS" starttime="20201112 12:42:15.862" endtime="20201112 12:42:15.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.858" endtime="20201112 12:42:15.865"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.867" endtime="20201112 12:42:15.868"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.870" endtime="20201112 12:42:15.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.869" endtime="20201112 12:42:15.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.865" endtime="20201112 12:42:15.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.479" endtime="20201112 12:42:15.891"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:15.410" endtime="20201112 12:42:15.891" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:15.899" endtime="20201112 12:42:15.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.898" endtime="20201112 12:42:15.919"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.932" endtime="20201112 12:42:15.945"></status>
</kw>
<msg timestamp="20201112 12:42:15.945" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.930" endtime="20201112 12:42:15.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.948" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.946" endtime="20201112 12:42:15.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:15.950" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:15.949" endtime="20201112 12:42:15.951"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:15.928" endtime="20201112 12:42:15.951"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:15.925" endtime="20201112 12:42:15.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.924" endtime="20201112 12:42:15.952"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:15.956" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:15.956" endtime="20201112 12:42:15.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.953" endtime="20201112 12:42:15.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.923" endtime="20201112 12:42:15.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.923" endtime="20201112 12:42:15.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.958" endtime="20201112 12:42:15.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.921" endtime="20201112 12:42:15.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.920" endtime="20201112 12:42:15.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.896" endtime="20201112 12:42:15.961"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:15.970" endtime="20201112 12:42:16.184"></status>
</kw>
<msg timestamp="20201112 12:42:16.184" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:15.968" endtime="20201112 12:42:16.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.187" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.185" endtime="20201112 12:42:16.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.188" endtime="20201112 12:42:16.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.965" endtime="20201112 12:42:16.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.963" endtime="20201112 12:42:16.190"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.192" endtime="20201112 12:42:16.194"></status>
</kw>
<msg timestamp="20201112 12:42:16.194" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:16.191" endtime="20201112 12:42:16.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.198" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:16.197" endtime="20201112 12:42:16.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.200" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:16.199" endtime="20201112 12:42:16.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.195" endtime="20201112 12:42:16.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.205" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:16.204" endtime="20201112 12:42:16.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.207" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:16.206" endtime="20201112 12:42:16.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.202" endtime="20201112 12:42:16.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.214" endtime="20201112 12:42:16.511"></status>
</kw>
<msg timestamp="20201112 12:42:16.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067210917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067245597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.212" endtime="20201112 12:42:16.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.067210917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.067245597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:16.519" endtime="20201112 12:42:16.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.538" endtime="20201112 12:42:16.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.210" endtime="20201112 12:42:16.542"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.208" endtime="20201112 12:42:16.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:16.552" level="INFO">${RESULT} = [{'time': 0.067245597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.468000000000915e-05, 'source_diff': 3.468000000000915e-05}, {'time': 0.071161833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:16.544" endtime="20201112 12:42:16.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:16.581" level="INFO">${OVERHEAD} = {'time': [0.067245597, 0.071161833, 0.075094264, 0.079009611, 0.082930944, 0.086860028, 0.090777083, 0.094702431, 0.098623014, 0.102555264, 0.106471333, 0.110404556, 0.114332056, 0.118260403, 0.122193...</msg>
<status status="PASS" starttime="20201112 12:42:16.554" endtime="20201112 12:42:16.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.590" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201112 12:42:16.588" endtime="20201112 12:42:16.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.595" level="INFO">VALUE: [3.468000000000915e-05, 3.451399999999938e-05, 3.448600000000024e-05, 3.451399999999938e-05, 3.448600000000024e-05, 3.445900000000057e-05, 3.451399999999938e-05, 3.451399999999938e-05, 3.443100000000143e-05, 3.451399999999938e-05, 3.451399999999938e-05, 3.452800000000589e-05, 3.451399999999938e-05, 3.450000000000675e-05, 3.451399999999938e-05, 3.45139999999855e-05, 3.447200000000761e-05, 3.4527000000006414e-05, 3.452800000000589e-05, 3.4514000000013256e-05, 3.4556000000018905e-05, 3.451300000001378e-05, 3.445800000001498e-05, 3.454199999999852e-05, 3.45139999999855e-05, 3.447300000000708e-05, 3.4540999999999045e-05, 3.452800000000589e-05, 3.451300000001378e-05, 3.451300000001378e-05, 3.448600000000024e-05, 3.448699999999971e-05, 3.452699999997866e-05, 3.4514000000013256e-05, 3.452800000000589e-05, 3.45139999999855e-05, 3.445900000001445e-05, 3.4514000000013256e-05, 3.4500000000020625e-05, 3.45139999999855e-05, 3.448600000000024e-05, 3.4514000000013256e-05, 3.4527000000006414e-05, 3.45139999999855e-05, 3.4500000000020625e-05, 3.4500000000020625e-05, 3.452800000000589e-05, 3.452799999997813e-05, 3.4527000000006414e-05, 3.45139999999855e-05]</msg>
<status status="PASS" starttime="20201112 12:42:16.592" endtime="20201112 12:42:16.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.583" endtime="20201112 12:42:16.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.600" endtime="20201112 12:42:16.601"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.603" endtime="20201112 12:42:16.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.602" endtime="20201112 12:42:16.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.598" endtime="20201112 12:42:16.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:15.961" endtime="20201112 12:42:16.624"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:15.893" endtime="20201112 12:42:16.624" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:16.632" endtime="20201112 12:42:16.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.631" endtime="20201112 12:42:16.652"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.665" endtime="20201112 12:42:16.678"></status>
</kw>
<msg timestamp="20201112 12:42:16.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.664" endtime="20201112 12:42:16.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.681" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.679" endtime="20201112 12:42:16.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:16.684" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:16.682" endtime="20201112 12:42:16.684"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:16.660" endtime="20201112 12:42:16.685"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:16.658" endtime="20201112 12:42:16.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.657" endtime="20201112 12:42:16.686"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:16.689" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:16.689" endtime="20201112 12:42:16.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.687" endtime="20201112 12:42:16.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.656" endtime="20201112 12:42:16.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.656" endtime="20201112 12:42:16.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.691" endtime="20201112 12:42:16.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.654" endtime="20201112 12:42:16.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.653" endtime="20201112 12:42:16.693"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.629" endtime="20201112 12:42:16.694"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:16.702" endtime="20201112 12:42:17.434"></status>
</kw>
<msg timestamp="20201112 12:42:17.435" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:16.701" endtime="20201112 12:42:17.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.440" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:17.437" endtime="20201112 12:42:17.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.442" endtime="20201112 12:42:17.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.698" endtime="20201112 12:42:17.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.696" endtime="20201112 12:42:17.447"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.452" endtime="20201112 12:42:17.456"></status>
</kw>
<msg timestamp="20201112 12:42:17.457" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201112 12:42:17.449" endtime="20201112 12:42:17.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.465" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201112 12:42:17.463" endtime="20201112 12:42:17.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.470" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201112 12:42:17.467" endtime="20201112 12:42:17.470"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.458" endtime="20201112 12:42:17.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.480" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201112 12:42:17.478" endtime="20201112 12:42:17.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.484" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201112 12:42:17.482" endtime="20201112 12:42:17.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.473" endtime="20201112 12:42:17.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.501" endtime="20201112 12:42:17.796"></status>
</kw>
<msg timestamp="20201112 12:42:17.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076115417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.496" endtime="20201112 12:42:17.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.076115417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076181222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:17.800" endtime="20201112 12:42:17.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.808" endtime="20201112 12:42:17.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.491" endtime="20201112 12:42:17.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.487" endtime="20201112 12:42:17.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:17.814" level="INFO">${RESULT} = [{'time': 0.076181222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.580500000000211e-05, 'source_diff': 6.580500000000211e-05}, {'time': 0.090395694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:17.811" endtime="20201112 12:42:17.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201112 12:42:17.827" level="INFO">${OVERHEAD} = {'time': [0.076181222, 0.090395694, 0.104649292, 0.118903792, 0.133157556, 0.147405542, 0.161667694, 0.1759215, 0.190171125, 0.204429681, 0.218686639, 0.232937083, 0.247183986, 0.261446167, 0.27571065...</msg>
<status status="PASS" starttime="20201112 12:42:17.815" endtime="20201112 12:42:17.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.832" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201112 12:42:17.831" endtime="20201112 12:42:17.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.835" level="INFO">VALUE: [6.580500000000211e-05, 6.562499999999971e-05, 6.566700000000536e-05, 6.568099999999799e-05, 6.56950000000045e-05, 6.570899999999713e-05, 6.565199999999938e-05, 6.565299999999885e-05, 6.565299999999885e-05, 6.563900000000622e-05, 6.568099999998411e-05, 6.565199999999938e-05, 6.566699999999148e-05, 6.568099999998411e-05, 6.57220000000458e-05, 6.56800000000124e-05, 6.566699999999148e-05, 6.562500000001359e-05, 6.573599999998292e-05, 6.563900000000622e-05, 6.568099999998411e-05, 6.569400000000503e-05, 6.566699999999148e-05, 6.563900000000622e-05, 6.566699999999148e-05, 6.567999999995688e-05, 6.566600000001976e-05, 6.566600000001976e-05, 6.566699999999148e-05, 6.566699999999148e-05, 6.56809999999286e-05, 6.566699999999148e-05, 6.570900000002489e-05, 6.562499999995808e-05, 6.566600000001976e-05, 6.570800000005317e-05, 6.572199999999029e-05, 6.565200000008264e-05, 6.569499999997674e-05, 6.568100000003962e-05, 6.569400000000503e-05, 6.563900000000622e-05, 6.561100000002096e-05, 6.566699999999148e-05, 6.563900000000622e-05, 6.570900000002489e-05, 6.572199999999029e-05, 6.563900000000622e-05, 6.565299999994334e-05, 6.56250000000691e-05]</msg>
<status status="PASS" starttime="20201112 12:42:17.833" endtime="20201112 12:42:17.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.828" endtime="20201112 12:42:17.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:17.838" endtime="20201112 12:42:17.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:17.841" endtime="20201112 12:42:17.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.840" endtime="20201112 12:42:17.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.836" endtime="20201112 12:42:17.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:16.694" endtime="20201112 12:42:17.862"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:16.626" endtime="20201112 12:42:17.863" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:41:54.996" endtime="20201112 12:42:17.871"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:42:17.941" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:42:17.949" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:42:19.287" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:42:17.940" endtime="20201112 12:42:19.288"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.291" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:42:19.289" endtime="20201112 12:42:19.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.938" endtime="20201112 12:42:19.292"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.294" endtime="20201112 12:42:19.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.292" endtime="20201112 12:42:19.476"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.489" endtime="20201112 12:42:19.502"></status>
</kw>
<msg timestamp="20201112 12:42:19.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.487" endtime="20201112 12:42:19.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.505" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.504" endtime="20201112 12:42:19.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.509" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:19.506" endtime="20201112 12:42:19.509"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:19.485" endtime="20201112 12:42:19.510"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:19.482" endtime="20201112 12:42:19.510"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.481" endtime="20201112 12:42:19.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:19.515" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:19.514" endtime="20201112 12:42:19.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.512" endtime="20201112 12:42:19.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.480" endtime="20201112 12:42:19.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.479" endtime="20201112 12:42:19.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.516" endtime="20201112 12:42:19.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.478" endtime="20201112 12:42:19.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.519" endtime="20201112 12:42:19.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.476" endtime="20201112 12:42:19.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:17.937" endtime="20201112 12:42:19.521"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.527" endtime="20201112 12:42:19.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.526" endtime="20201112 12:42:19.548"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.560" endtime="20201112 12:42:19.572"></status>
</kw>
<msg timestamp="20201112 12:42:19.573" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.559" endtime="20201112 12:42:19.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.575" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.574" endtime="20201112 12:42:19.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.578" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:19.576" endtime="20201112 12:42:19.579"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:19.556" endtime="20201112 12:42:19.579"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:19.554" endtime="20201112 12:42:19.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.553" endtime="20201112 12:42:19.580"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:19.585" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:19.583" endtime="20201112 12:42:19.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.581" endtime="20201112 12:42:19.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.552" endtime="20201112 12:42:19.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.551" endtime="20201112 12:42:19.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.587" endtime="20201112 12:42:19.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.550" endtime="20201112 12:42:19.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.548" endtime="20201112 12:42:19.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.524" endtime="20201112 12:42:19.590"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.600" endtime="20201112 12:42:19.613"></status>
</kw>
<msg timestamp="20201112 12:42:19.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.598" endtime="20201112 12:42:19.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.614" endtime="20201112 12:42:19.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.617" endtime="20201112 12:42:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.595" endtime="20201112 12:42:19.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.593" endtime="20201112 12:42:19.619"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.626" endtime="20201112 12:42:19.916"></status>
</kw>
<msg timestamp="20201112 12:42:19.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064019986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064037056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.624" endtime="20201112 12:42:19.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064019986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064037056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:19.920" endtime="20201112 12:42:19.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.929" endtime="20201112 12:42:19.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.622" endtime="20201112 12:42:19.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.620" endtime="20201112 12:42:19.931"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:19.935" level="INFO">${RESULT} = [{'time': 0.064037056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7069999999994034e-05, 'source_diff': 1.7069999999994034e-05}, {'time': 0.064082167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:19.932" endtime="20201112 12:42:19.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:19.949" level="INFO">${ACCURACY} = {'time': [0.064037056, 0.064082167, 0.064119889, 0.064157847, 0.064193375, 0.064227, 0.064274667, 0.064318583, 0.064348486, 0.064397389, 0.064438819, 0.064481806, 0.064529194, 0.064562792, 0.064599875...</msg>
<status status="PASS" starttime="20201112 12:42:19.936" endtime="20201112 12:42:19.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.953" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:19.952" endtime="20201112 12:42:19.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:19.956" level="INFO">VALUE: [1.7069999999994034e-05, 1.619499999999663e-05, 1.6181000000003998e-05, 1.613899999999835e-05, 1.615299999999098e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.6137999999998875e-05, 1.6083999999999543e-05, 1.6180000000004524e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6125000000005718e-05, 1.6152000000005384e-05, 1.612499999999184e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.6125000000005718e-05, 1.616699999999749e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.612499999999184e-05, 1.615299999999098e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6153000000004858e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.612499999999184e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.6153000000004858e-05, 1.6152000000005384e-05, 1.6151999999991506e-05, 1.6139000000012227e-05, 1.616699999999749e-05, 1.6125000000005718e-05, 1.613899999999835e-05, 1.615299999999098e-05, 1.6165999999998015e-05, 1.612499999999184e-05, 1.6153000000004858e-05]</msg>
<status status="PASS" starttime="20201112 12:42:19.954" endtime="20201112 12:42:19.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.950" endtime="20201112 12:42:19.957"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.959" endtime="20201112 12:42:19.961"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:19.963" endtime="20201112 12:42:19.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.962" endtime="20201112 12:42:19.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.958" endtime="20201112 12:42:19.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.592" endtime="20201112 12:42:19.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.591" endtime="20201112 12:42:19.984"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:19.992" endtime="20201112 12:42:20.006"></status>
</kw>
<msg timestamp="20201112 12:42:20.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:19.991" endtime="20201112 12:42:20.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.007" endtime="20201112 12:42:20.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.010" endtime="20201112 12:42:20.011"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.988" endtime="20201112 12:42:20.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.986" endtime="20201112 12:42:20.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.019" endtime="20201112 12:42:20.304"></status>
</kw>
<msg timestamp="20201112 12:42:20.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021178, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:20.017" endtime="20201112 12:42:20.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021160875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021178, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:20.308" endtime="20201112 12:42:20.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.316" endtime="20201112 12:42:20.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.015" endtime="20201112 12:42:20.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.013" endtime="20201112 12:42:20.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.323" level="INFO">${RESULT} = [{'time': 0.021178, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.712499999999978e-05, 'source_diff': 1.712499999999978e-05}, {'time': 0.021222222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:20.320" endtime="20201112 12:42:20.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.336" level="INFO">${ACCURACY} = {'time': [0.021178, 0.021222222, 0.021268917, 0.021299153, 0.021344333, 0.021377958, 0.021407861, 0.021445889, 0.021477028, 0.021513167, 0.021561778, 0.021594806, 0.021635611, 0.021679847, 0.021726944...</msg>
<status status="PASS" starttime="20201112 12:42:20.324" endtime="20201112 12:42:20.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.341" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.340" endtime="20201112 12:42:20.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.343" level="INFO">VALUE: [1.712499999999978e-05, 1.6249999999998904e-05, 1.6069999999999973e-05, 1.615300000000139e-05, 1.613899999999835e-05, 1.6151999999998445e-05, 1.611099999999921e-05, 1.615299999999792e-05, 1.611099999999921e-05, 1.612499999999878e-05, 1.613900000000182e-05, 1.615300000000139e-05, 1.615299999999792e-05, 1.611099999999921e-05, 1.6166000000001485e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.6152000000001915e-05, 1.616699999999749e-05, 1.612500000000225e-05, 1.613900000000182e-05, 1.6208999999999668e-05, 1.6152000000001915e-05, 1.612500000000225e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.615300000000139e-05, 1.6097999999999113e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.6165999999998015e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.615300000000139e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.342" endtime="20201112 12:42:20.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.337" endtime="20201112 12:42:20.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.347" endtime="20201112 12:42:20.349"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.351" endtime="20201112 12:42:20.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.349" endtime="20201112 12:42:20.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.345" endtime="20201112 12:42:20.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.985" endtime="20201112 12:42:20.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.984" endtime="20201112 12:42:20.372"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.380" endtime="20201112 12:42:20.393"></status>
</kw>
<msg timestamp="20201112 12:42:20.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.378" endtime="20201112 12:42:20.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.395" endtime="20201112 12:42:20.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.397" endtime="20201112 12:42:20.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.376" endtime="20201112 12:42:20.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.374" endtime="20201112 12:42:20.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.406" endtime="20201112 12:42:20.691"></status>
</kw>
<msg timestamp="20201112 12:42:20.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021060417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021077542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.404" endtime="20201112 12:42:20.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021060417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021077542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.695" endtime="20201112 12:42:20.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.703" endtime="20201112 12:42:20.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.402" endtime="20201112 12:42:20.706"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.400" endtime="20201112 12:42:20.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:20.710" level="INFO">${RESULT} = [{'time': 0.021077542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.712499999999978e-05, 'source_diff': 1.712499999999978e-05}, {'time': 0.021120778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:20.707" endtime="20201112 12:42:20.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:20.723" level="INFO">${ACCURACY} = {'time': [0.021077542, 0.021120778, 0.021158792, 0.021198042, 0.021239472, 0.021284653, 0.021319861, 0.021364708, 0.021394236, 0.021443139, 0.021476486, 0.021514472, 0.021561208, 0.021599833, 0.021633...</msg>
<status status="PASS" starttime="20201112 12:42:20.711" endtime="20201112 12:42:20.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.728" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201112 12:42:20.727" endtime="20201112 12:42:20.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.730" level="INFO">VALUE: [1.712499999999978e-05, 1.6195000000000098e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.612499999999878e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.615299999999792e-05, 1.613899999999835e-05, 1.6151999999998445e-05, 1.609699999999964e-05, 1.613899999999835e-05, 1.615299999999792e-05, 1.615300000000139e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.605500000000093e-05, 1.609699999999964e-05, 1.6137999999998875e-05, 1.613900000000182e-05, 1.615299999999792e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.613900000000182e-05, 1.612500000000225e-05, 1.613899999999835e-05, 1.616700000000096e-05, 1.612499999999878e-05, 1.616700000000096e-05, 1.613900000000182e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.608300000000007e-05, 1.6195000000000098e-05]</msg>
<status status="PASS" starttime="20201112 12:42:20.729" endtime="20201112 12:42:20.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.724" endtime="20201112 12:42:20.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.734" endtime="20201112 12:42:20.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:20.739" endtime="20201112 12:42:20.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.738" endtime="20201112 12:42:20.759"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.732" endtime="20201112 12:42:20.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.372" endtime="20201112 12:42:20.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.372" endtime="20201112 12:42:20.760"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.768" endtime="20201112 12:42:20.782"></status>
</kw>
<msg timestamp="20201112 12:42:20.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.767" endtime="20201112 12:42:20.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:20.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:20.783" endtime="20201112 12:42:20.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.786" endtime="20201112 12:42:20.787"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.764" endtime="20201112 12:42:20.788"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.762" endtime="20201112 12:42:20.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:20.795" endtime="20201112 12:42:21.079"></status>
</kw>
<msg timestamp="20201112 12:42:21.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:20.793" endtime="20201112 12:42:21.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021092819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021109958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.083" endtime="20201112 12:42:21.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.092" endtime="20201112 12:42:21.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.791" endtime="20201112 12:42:21.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.789" endtime="20201112 12:42:21.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.098" level="INFO">${RESULT} = [{'time': 0.021109958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.713900000000282e-05, 'source_diff': 1.713900000000282e-05}, {'time': 0.021149764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.095" endtime="20201112 12:42:21.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.111" level="INFO">${ACCURACY} = {'time': [0.021109958, 0.021149764, 0.021183722, 0.021232319, 0.021267528, 0.021313, 0.021360667, 0.021399931, 0.021448847, 0.021482778, 0.021522653, 0.021554444, 0.021603667, 0.021645111, 0.021677181...</msg>
<status status="PASS" starttime="20201112 12:42:21.099" endtime="20201112 12:42:21.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.116" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.115" endtime="20201112 12:42:21.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.118" level="INFO">VALUE: [1.713900000000282e-05, 1.6195000000000098e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.609699999999964e-05, 1.612499999999878e-05, 1.6097999999999113e-05, 1.613900000000182e-05, 1.615300000000139e-05, 1.611100000000268e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.613899999999835e-05, 1.608300000000007e-05, 1.613900000000182e-05, 1.6166000000001485e-05, 1.6137999999998875e-05, 1.616699999999749e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.612500000000225e-05, 1.6151999999998445e-05, 1.613899999999835e-05, 1.616700000000096e-05, 1.613899999999835e-05, 1.6111999999998683e-05, 1.612500000000225e-05, 1.615300000000139e-05, 1.613899999999835e-05, 1.612500000000225e-05, 1.6152000000001915e-05, 1.618099999999706e-05, 1.613900000000182e-05, 1.612500000000225e-05, 1.615299999999792e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613900000000182e-05, 1.612499999999878e-05, 1.615300000000139e-05, 1.613899999999835e-05, 1.615300000000139e-05, 1.613899999999835e-05, 1.6137999999998875e-05, 1.6208999999999668e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.613899999999835e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.117" endtime="20201112 12:42:21.119"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.112" endtime="20201112 12:42:21.120"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.122" endtime="20201112 12:42:21.123"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.126" endtime="20201112 12:42:21.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.124" endtime="20201112 12:42:21.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.120" endtime="20201112 12:42:21.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.761" endtime="20201112 12:42:21.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:20.760" endtime="20201112 12:42:21.147"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.155" endtime="20201112 12:42:21.169"></status>
</kw>
<msg timestamp="20201112 12:42:21.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.154" endtime="20201112 12:42:21.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.170" endtime="20201112 12:42:21.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.173" endtime="20201112 12:42:21.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.151" endtime="20201112 12:42:21.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.149" endtime="20201112 12:42:21.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.181" endtime="20201112 12:42:21.467"></status>
</kw>
<msg timestamp="20201112 12:42:21.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021137153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.180" endtime="20201112 12:42:21.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021137153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.471" endtime="20201112 12:42:21.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.479" endtime="20201112 12:42:21.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.177" endtime="20201112 12:42:21.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.176" endtime="20201112 12:42:21.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.485" level="INFO">${RESULT} = [{'time': 0.021154292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.713900000000282e-05, 'source_diff': 1.713900000000282e-05}, {'time': 0.021189125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.482" endtime="20201112 12:42:21.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.499" level="INFO">${ACCURACY} = {'time': [0.021154292, 0.021189125, 0.021227153, 0.021269833, 0.021308153, 0.021360861, 0.021402931, 0.021435958, 0.021465847, 0.021511014, 0.021542472, 0.021587347, 0.021630375, 0.021674875, 0.021711...</msg>
<status status="PASS" starttime="20201112 12:42:21.486" endtime="20201112 12:42:21.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.503" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.502" endtime="20201112 12:42:21.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.505" level="INFO">VALUE: [1.713900000000282e-05, 1.6208000000000194e-05, 1.616699999999749e-05, 1.6151999999998445e-05, 1.615300000000139e-05, 2.1179999999999116e-05, 1.613899999999835e-05, 1.6152000000001915e-05, 1.609699999999964e-05, 1.609699999999964e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.616700000000096e-05, 1.613899999999835e-05, 1.611099999999921e-05, 1.612500000000225e-05, 1.612499999999878e-05, 1.615299999999792e-05, 2.119500000000163e-05, 1.608300000000007e-05, 1.613899999999835e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.616699999999749e-05, 1.612499999999878e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.615300000000139e-05, 1.612499999999878e-05, 1.611099999999921e-05, 1.612500000000225e-05, 1.6180000000001055e-05, 1.6111999999998683e-05, 1.616699999999749e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.613899999999835e-05, 1.615299999999792e-05, 1.612499999999878e-05, 1.613899999999835e-05, 1.615300000000139e-05, 1.6138000000002345e-05, 1.612500000000225e-05, 2.1193999999998686e-05, 1.6166000000001485e-05, 1.6069999999999973e-05, 1.6138000000002345e-05, 1.6152000000001915e-05, 1.6166000000001485e-05, 1.613900000000182e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.504" endtime="20201112 12:42:21.506"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.500" endtime="20201112 12:42:21.507"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.509" endtime="20201112 12:42:21.511"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.513" endtime="20201112 12:42:21.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.512" endtime="20201112 12:42:21.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.507" endtime="20201112 12:42:21.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.148" endtime="20201112 12:42:21.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.147" endtime="20201112 12:42:21.534"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.544" endtime="20201112 12:42:21.557"></status>
</kw>
<msg timestamp="20201112 12:42:21.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.542" endtime="20201112 12:42:21.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.559" endtime="20201112 12:42:21.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.561" endtime="20201112 12:42:21.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.539" endtime="20201112 12:42:21.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.537" endtime="20201112 12:42:21.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.570" endtime="20201112 12:42:21.856"></status>
</kw>
<msg timestamp="20201112 12:42:21.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.568" endtime="20201112 12:42:21.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022311472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022333667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.860" endtime="20201112 12:42:21.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.868" endtime="20201112 12:42:21.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.566" endtime="20201112 12:42:21.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.564" endtime="20201112 12:42:21.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:21.875" level="INFO">${RESULT} = [{'time': 0.022333667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.219500000000263e-05, 'source_diff': 2.219500000000263e-05}, {'time': 0.022371056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:21.871" endtime="20201112 12:42:21.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:21.888" level="INFO">${ACCURACY} = {'time': [0.022333667, 0.022371056, 0.022411319, 0.022457514, 0.022494347, 0.022541111, 0.022578903, 0.022614472, 0.022651931, 0.022696236, 0.022743681, 0.022779611, 0.022823264, 0.022871611, 0.022919...</msg>
<status status="PASS" starttime="20201112 12:42:21.876" endtime="20201112 12:42:21.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.892" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201112 12:42:21.891" endtime="20201112 12:42:21.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.895" level="INFO">VALUE: [2.219500000000263e-05, 2.123700000000034e-05, 2.1207999999998256e-05, 2.1208000000001725e-05, 2.1208000000001725e-05, 2.1179999999999116e-05, 2.119500000000163e-05, 2.1193999999998686e-05, 2.119500000000163e-05, 2.1194000000002156e-05, 2.119500000000163e-05, 2.1250000000000435e-05, 2.113899999999988e-05, 2.113899999999988e-05, 2.1222000000001295e-05, 2.118099999999859e-05, 2.1264000000000005e-05, 2.1151999999999976e-05, 2.12090000000012e-05, 2.118099999999859e-05, 2.1250000000000435e-05, 2.119499999999816e-05, 2.1179999999999116e-05, 2.1207999999998256e-05, 2.118100000000206e-05, 2.1165999999999546e-05, 2.1179999999999116e-05, 2.1179999999999116e-05, 2.1194000000002156e-05, 2.1194000000002156e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.1207999999998256e-05, 2.119500000000163e-05, 2.119499999999816e-05, 2.116699999999902e-05, 2.1193999999998686e-05, 2.112500000000031e-05, 2.1207999999998256e-05, 2.118100000000206e-05, 2.1179999999999116e-05, 2.1194000000002156e-05, 2.119500000000163e-05, 2.1194000000002156e-05, 2.118100000000206e-05, 2.1207999999998256e-05, 2.1180000000002586e-05, 2.1165999999999546e-05, 2.1179999999999116e-05, 2.1250000000000435e-05]</msg>
<status status="PASS" starttime="20201112 12:42:21.893" endtime="20201112 12:42:21.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.889" endtime="20201112 12:42:21.896"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.898" endtime="20201112 12:42:21.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:21.902" endtime="20201112 12:42:21.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.901" endtime="20201112 12:42:21.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.897" endtime="20201112 12:42:21.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.535" endtime="20201112 12:42:21.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.535" endtime="20201112 12:42:21.923"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.932" endtime="20201112 12:42:21.945"></status>
</kw>
<msg timestamp="20201112 12:42:21.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.930" endtime="20201112 12:42:21.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:21.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:21.947" endtime="20201112 12:42:21.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.949" endtime="20201112 12:42:21.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.928" endtime="20201112 12:42:21.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.926" endtime="20201112 12:42:21.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:21.958" endtime="20201112 12:42:22.244"></status>
</kw>
<msg timestamp="20201112 12:42:22.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:21.956" endtime="20201112 12:42:22.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021129236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.249" endtime="20201112 12:42:22.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.257" endtime="20201112 12:42:22.258"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.954" endtime="20201112 12:42:22.259"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.952" endtime="20201112 12:42:22.259"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.263" level="INFO">${RESULT} = [{'time': 0.021129236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2193999999999686e-05, 'source_diff': 2.2193999999999686e-05}, {'time': 0.02118375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:22.260" endtime="20201112 12:42:22.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.276" level="INFO">${ACCURACY} = {'time': [0.021129236, 0.02118375, 0.021226792, 0.021267361, 0.021316042, 0.021351292, 0.02140025, 0.021445792, 0.021494139, 0.021539972, 0.021580542, 0.021615806, 0.021654486, 0.021696292, 0.02174058...</msg>
<status status="PASS" starttime="20201112 12:42:22.264" endtime="20201112 12:42:22.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.281" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.280" endtime="20201112 12:42:22.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.283" level="INFO">VALUE: [2.2193999999999686e-05, 2.1236000000000865e-05, 2.116700000000249e-05, 2.115299999999945e-05, 2.12090000000012e-05, 2.12090000000012e-05, 2.1193999999998686e-05, 2.118100000000206e-05, 2.113899999999988e-05, 2.113899999999988e-05, 2.119500000000163e-05, 2.116700000000249e-05, 2.116699999999902e-05, 2.119499999999816e-05, 2.1165999999999546e-05, 2.118099999999859e-05, 2.1179999999999116e-05, 2.1264000000000005e-05, 2.1180000000002586e-05, 2.119500000000163e-05, 2.1194000000002156e-05, 2.1179999999999116e-05, 2.116699999999902e-05, 2.1208000000001725e-05, 2.1193999999998686e-05, 2.119499999999816e-05, 2.1208000000001725e-05, 2.1166000000003016e-05, 2.1235999999997396e-05, 2.119500000000163e-05, 2.115299999999945e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.118099999999859e-05, 2.1165999999999546e-05, 2.1180000000002586e-05, 2.1179999999999116e-05, 2.116699999999902e-05, 2.1221999999997826e-05, 2.119500000000163e-05, 2.115299999999945e-05, 2.118099999999859e-05, 2.119500000000163e-05, 2.115299999999945e-05, 2.116700000000249e-05, 2.1179999999999116e-05, 2.1236000000000865e-05, 2.1179999999999116e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.282" endtime="20201112 12:42:22.284"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.277" endtime="20201112 12:42:22.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.287" endtime="20201112 12:42:22.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.292" endtime="20201112 12:42:22.311"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.290" endtime="20201112 12:42:22.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.285" endtime="20201112 12:42:22.312"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.924" endtime="20201112 12:42:22.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:21.924" endtime="20201112 12:42:22.313"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.321" endtime="20201112 12:42:22.335"></status>
</kw>
<msg timestamp="20201112 12:42:22.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.320" endtime="20201112 12:42:22.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.336" endtime="20201112 12:42:22.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.339" endtime="20201112 12:42:22.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.317" endtime="20201112 12:42:22.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.315" endtime="20201112 12:42:22.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.348" endtime="20201112 12:42:22.632"></status>
</kw>
<msg timestamp="20201112 12:42:22.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021176708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.346" endtime="20201112 12:42:22.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021154542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021176708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.636" endtime="20201112 12:42:22.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.644" endtime="20201112 12:42:22.646"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.343" endtime="20201112 12:42:22.647"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.342" endtime="20201112 12:42:22.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:22.651" level="INFO">${RESULT} = [{'time': 0.021176708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2166000000000546e-05, 'source_diff': 2.2166000000000546e-05}, {'time': 0.021219069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:22.648" endtime="20201112 12:42:22.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:22.664" level="INFO">${ACCURACY} = {'time': [0.021176708, 0.021219069, 0.021263083, 0.021317319, 0.021359125, 0.021401208, 0.021436778, 0.021483611, 0.02153725, 0.021585528, 0.021629514, 0.021678486, 0.021719333, 0.021773278, 0.0218116...</msg>
<status status="PASS" starttime="20201112 12:42:22.652" endtime="20201112 12:42:22.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.669" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201112 12:42:22.668" endtime="20201112 12:42:22.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.671" level="INFO">VALUE: [2.2166000000000546e-05, 2.1222000000001295e-05, 2.1207999999998256e-05, 2.1180000000002586e-05, 2.1207999999998256e-05, 2.1180000000002586e-05, 2.118099999999859e-05, 2.1236000000000865e-05, 2.1236000000000865e-05, 2.118099999999859e-05, 2.116699999999902e-05, 2.1193999999998686e-05, 2.1179999999999116e-05, 2.116699999999902e-05, 2.118099999999859e-05, 2.116699999999902e-05, 2.116700000000249e-05, 2.1193999999998686e-05, 2.119499999999816e-05, 2.1207999999998256e-05, 2.119499999999816e-05, 2.1179999999999116e-05, 2.118100000000206e-05, 2.119499999999816e-05, 2.111100000000074e-05, 2.118100000000206e-05, 2.119499999999816e-05, 2.1179999999999116e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.1179999999999116e-05, 2.120899999999773e-05, 2.115299999999945e-05, 2.1207999999998256e-05, 2.1179999999999116e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.1165999999999546e-05, 2.122300000000077e-05, 2.1179999999999116e-05, 2.118099999999859e-05, 2.1179999999999116e-05, 2.1179999999999116e-05, 2.1194000000002156e-05, 2.115299999999945e-05, 2.116699999999902e-05, 2.119499999999816e-05, 2.1207999999998256e-05, 2.1179999999999116e-05, 2.1165999999999546e-05]</msg>
<status status="PASS" starttime="20201112 12:42:22.670" endtime="20201112 12:42:22.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.665" endtime="20201112 12:42:22.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.675" endtime="20201112 12:42:22.676"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:22.679" endtime="20201112 12:42:22.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.677" endtime="20201112 12:42:22.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.673" endtime="20201112 12:42:22.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.314" endtime="20201112 12:42:22.699"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.313" endtime="20201112 12:42:22.700"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.708" endtime="20201112 12:42:22.722"></status>
</kw>
<msg timestamp="20201112 12:42:22.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.707" endtime="20201112 12:42:22.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:22.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:22.723" endtime="20201112 12:42:22.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.725" endtime="20201112 12:42:22.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.704" endtime="20201112 12:42:22.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.702" endtime="20201112 12:42:22.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:22.734" endtime="20201112 12:42:23.020"></status>
</kw>
<msg timestamp="20201112 12:42:23.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:22.733" endtime="20201112 12:42:23.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.024" endtime="20201112 12:42:23.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.032" endtime="20201112 12:42:23.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.730" endtime="20201112 12:42:23.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.729" endtime="20201112 12:42:23.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.039" level="INFO">${RESULT} = [{'time': 0.021082139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.218099999999959e-05, 'source_diff': 2.218099999999959e-05}, {'time': 0.021116958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:23.035" endtime="20201112 12:42:23.039"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.052" level="INFO">${ACCURACY} = {'time': [0.021082139, 0.021116958, 0.02117125, 0.021210903, 0.021259819, 0.021305361, 0.021348417, 0.021399875, 0.021452917, 0.021504361, 0.0215415, 0.021579861, 0.021624472, 0.021662236, 0.021711514...</msg>
<status status="PASS" starttime="20201112 12:42:23.040" endtime="20201112 12:42:23.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.057" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.055" endtime="20201112 12:42:23.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.059" level="INFO">VALUE: [2.218099999999959e-05, 2.1222000000001295e-05, 2.1207999999998256e-05, 2.1236000000000865e-05, 2.1179999999999116e-05, 2.1179999999999116e-05, 2.115300000000292e-05, 2.116699999999902e-05, 2.120899999999773e-05, 2.116699999999902e-05, 2.1194000000002156e-05, 2.1179999999999116e-05, 2.1179999999999116e-05, 2.1194000000002156e-05, 2.118100000000206e-05, 2.1138000000000406e-05, 2.118099999999859e-05, 2.119499999999816e-05, 2.1193999999998686e-05, 2.12090000000012e-05, 2.1193999999998686e-05, 2.118099999999859e-05, 2.116700000000249e-05, 2.115299999999945e-05, 2.118100000000206e-05, 2.1208000000001725e-05, 2.1179999999999116e-05, 2.1193999999998686e-05, 2.1193999999998686e-05, 2.1193999999998686e-05, 2.111100000000074e-05, 2.119499999999816e-05, 2.118099999999859e-05, 2.1165999999999546e-05, 2.118099999999859e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.1249999999996966e-05, 2.1194000000002156e-05, 2.118100000000206e-05, 2.1193999999998686e-05, 2.112500000000031e-05, 2.119499999999816e-05, 2.116700000000249e-05, 2.119499999999816e-05, 2.1222000000001295e-05, 2.1179999999999116e-05, 2.118100000000206e-05, 2.119499999999816e-05, 2.1179999999999116e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.058" endtime="20201112 12:42:23.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.053" endtime="20201112 12:42:23.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.062" endtime="20201112 12:42:23.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.067" endtime="20201112 12:42:23.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.065" endtime="20201112 12:42:23.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.061" endtime="20201112 12:42:23.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.700" endtime="20201112 12:42:23.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:22.700" endtime="20201112 12:42:23.087"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.096" endtime="20201112 12:42:23.110"></status>
</kw>
<msg timestamp="20201112 12:42:23.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.094" endtime="20201112 12:42:23.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.111" endtime="20201112 12:42:23.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.114" endtime="20201112 12:42:23.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.092" endtime="20201112 12:42:23.116"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.090" endtime="20201112 12:42:23.116"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.122" endtime="20201112 12:42:23.408"></status>
</kw>
<msg timestamp="20201112 12:42:23.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021225167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021247333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.121" endtime="20201112 12:42:23.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021225167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021247333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.412" endtime="20201112 12:42:23.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.420" endtime="20201112 12:42:23.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.118" endtime="20201112 12:42:23.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.117" endtime="20201112 12:42:23.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.427" level="INFO">${RESULT} = [{'time': 0.021247333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2166000000000546e-05, 'source_diff': 2.2166000000000546e-05}, {'time': 0.021285028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:23.423" endtime="20201112 12:42:23.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.440" level="INFO">${ACCURACY} = {'time': [0.021247333, 0.021285028, 0.021327778, 0.021369306, 0.021412639, 0.021449444, 0.021497778, 0.021538333, 0.021583306, 0.021628792, 0.021683069, 0.021719569, 0.021765431, 0.021802222, 0.021847...</msg>
<status status="PASS" starttime="20201112 12:42:23.428" endtime="20201112 12:42:23.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.444" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.443" endtime="20201112 12:42:23.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.447" level="INFO">VALUE: [2.2166000000000546e-05, 2.119500000000163e-05, 2.119499999999816e-05, 2.122300000000077e-05, 2.119500000000163e-05, 2.1180000000002586e-05, 2.118099999999859e-05, 2.1165999999999546e-05, 2.123700000000034e-05, 2.118100000000206e-05, 2.1193999999998686e-05, 2.1180000000002586e-05, 2.120899999999773e-05, 2.1179999999999116e-05, 2.119500000000163e-05, 2.116699999999902e-05, 2.113899999999988e-05, 2.118099999999859e-05, 2.112500000000031e-05, 2.116700000000249e-05, 2.116700000000249e-05, 2.1207999999998256e-05, 2.116699999999902e-05, 2.1165999999999546e-05, 2.111100000000074e-05, 2.1264000000000005e-05, 2.119500000000163e-05, 2.1165999999999546e-05, 2.1193999999998686e-05, 2.1236000000000865e-05, 2.112500000000031e-05, 2.116699999999902e-05, 2.118100000000206e-05, 2.113899999999988e-05, 2.1221999999997826e-05, 2.118100000000206e-05, 2.118099999999859e-05, 2.112500000000031e-05, 2.1180000000002586e-05, 2.1179999999999116e-05, 2.118099999999859e-05, 2.112499999999684e-05, 2.1235999999997396e-05, 2.118100000000206e-05, 2.1179999999999116e-05, 2.113899999999988e-05, 2.1208000000001725e-05, 2.1193999999998686e-05, 2.1194000000002156e-05, 2.1179999999999116e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.445" endtime="20201112 12:42:23.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.441" endtime="20201112 12:42:23.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.450" endtime="20201112 12:42:23.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.454" endtime="20201112 12:42:23.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.453" endtime="20201112 12:42:23.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.449" endtime="20201112 12:42:23.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.088" endtime="20201112 12:42:23.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.088" endtime="20201112 12:42:23.475"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.484" endtime="20201112 12:42:23.498"></status>
</kw>
<msg timestamp="20201112 12:42:23.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.482" endtime="20201112 12:42:23.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.499" endtime="20201112 12:42:23.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.501" endtime="20201112 12:42:23.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.480" endtime="20201112 12:42:23.504"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.478" endtime="20201112 12:42:23.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.510" endtime="20201112 12:42:23.796"></status>
</kw>
<msg timestamp="20201112 12:42:23.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021261292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021283472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.509" endtime="20201112 12:42:23.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021261292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021283472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.800" endtime="20201112 12:42:23.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.809" endtime="20201112 12:42:23.810"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.506" endtime="20201112 12:42:23.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.505" endtime="20201112 12:42:23.811"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:23.815" level="INFO">${RESULT} = [{'time': 0.021283472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2180000000000116e-05, 'source_diff': 2.2180000000000116e-05}, {'time': 0.021340236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:23.812" endtime="20201112 12:42:23.815"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:23.828" level="INFO">${ACCURACY} = {'time': [0.021283472, 0.021340236, 0.021392361, 0.021435778, 0.021478583, 0.021525431, 0.021571653, 0.021628486, 0.021685611, 0.021727792, 0.021773694, 0.021824306, 0.021872694, 0.021918639, 0.021959...</msg>
<status status="PASS" starttime="20201112 12:42:23.816" endtime="20201112 12:42:23.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.833" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201112 12:42:23.832" endtime="20201112 12:42:23.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.835" level="INFO">VALUE: [2.2180000000000116e-05, 2.6304999999997303e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.623700000000187e-05, 2.619499999999969e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6250000000001966e-05, 2.6222000000002826e-05, 2.6249999999998497e-05, 2.6207999999999787e-05, 2.6278000000001106e-05, 2.619499999999969e-05, 2.6221999999999357e-05, 2.623700000000187e-05, 2.6207999999999787e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.6207999999999787e-05, 2.6292000000000676e-05, 2.6235999999998927e-05, 2.6222000000002826e-05, 2.6221999999999357e-05, 2.6250000000001966e-05, 2.6235999999998927e-05, 2.620899999999926e-05, 2.6222000000002826e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.618100000000012e-05, 2.62230000000023e-05, 2.62230000000023e-05, 2.6250000000001966e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.613899999999794e-05, 2.6222000000002826e-05, 2.6249999999998497e-05, 2.6236000000002396e-05]</msg>
<status status="PASS" starttime="20201112 12:42:23.834" endtime="20201112 12:42:23.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.829" endtime="20201112 12:42:23.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.839" endtime="20201112 12:42:23.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:23.844" endtime="20201112 12:42:23.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.843" endtime="20201112 12:42:23.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.837" endtime="20201112 12:42:23.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.476" endtime="20201112 12:42:23.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.475" endtime="20201112 12:42:23.865"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.873" endtime="20201112 12:42:23.887"></status>
</kw>
<msg timestamp="20201112 12:42:23.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.872" endtime="20201112 12:42:23.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:23.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:23.889" endtime="20201112 12:42:23.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.891" endtime="20201112 12:42:23.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.869" endtime="20201112 12:42:23.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.867" endtime="20201112 12:42:23.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:23.900" endtime="20201112 12:42:24.186"></status>
</kw>
<msg timestamp="20201112 12:42:24.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021210375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:23.898" endtime="20201112 12:42:24.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021210375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.190" endtime="20201112 12:42:24.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.198" endtime="20201112 12:42:24.200"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.896" endtime="20201112 12:42:24.201"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.894" endtime="20201112 12:42:24.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.205" level="INFO">${RESULT} = [{'time': 0.021210375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.716700000000155e-05, 'source_diff': 2.716700000000155e-05}, {'time': 0.021263403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:24.202" endtime="20201112 12:42:24.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.218" level="INFO">${ACCURACY} = {'time': [0.021210375, 0.021263403, 0.0213165, 0.021370833, 0.021424528, 0.021470139, 0.021529458, 0.0215785, 0.021623819, 0.021678444, 0.021727792, 0.021778375, 0.021823375, 0.021882042, 0.021940111,...</msg>
<status status="PASS" starttime="20201112 12:42:24.206" endtime="20201112 12:42:24.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.223" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.222" endtime="20201112 12:42:24.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.225" level="INFO">VALUE: [2.716700000000155e-05, 2.6306000000000246e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6222000000002826e-05, 2.6207999999999787e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6262999999998593e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.62230000000023e-05, 2.6236000000002396e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6236000000002396e-05, 2.6277999999997637e-05, 2.6249999999998497e-05, 2.622299999999883e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6250000000001966e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6278000000001106e-05, 2.620899999999926e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6249999999998497e-05, 2.6250000000001966e-05, 2.6264000000001536e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6180000000000647e-05, 2.6236000000002396e-05, 2.619499999999969e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6236000000002396e-05, 2.620899999999926e-05, 2.6276999999998163e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6235999999998927e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.224" endtime="20201112 12:42:24.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.219" endtime="20201112 12:42:24.227"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.229" endtime="20201112 12:42:24.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.233" endtime="20201112 12:42:24.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.231" endtime="20201112 12:42:24.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.227" endtime="20201112 12:42:24.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.866" endtime="20201112 12:42:24.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:23.865" endtime="20201112 12:42:24.254"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.262" endtime="20201112 12:42:24.276"></status>
</kw>
<msg timestamp="20201112 12:42:24.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.261" endtime="20201112 12:42:24.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.278" endtime="20201112 12:42:24.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.280" endtime="20201112 12:42:24.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.258" endtime="20201112 12:42:24.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.256" endtime="20201112 12:42:24.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.289" endtime="20201112 12:42:24.574"></status>
</kw>
<msg timestamp="20201112 12:42:24.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02125725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:24.287" endtime="20201112 12:42:24.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02125725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:24.579" endtime="20201112 12:42:24.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.587" endtime="20201112 12:42:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.285" endtime="20201112 12:42:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.283" endtime="20201112 12:42:24.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:24.594" level="INFO">${RESULT} = [{'time': 0.02125725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7207999999997318e-05, 'source_diff': 2.7207999999997318e-05}, {'time': 0.021299361, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:24.591" endtime="20201112 12:42:24.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:24.607" level="INFO">${ACCURACY} = {'time': [0.02125725, 0.021299361, 0.021349319, 0.021391806, 0.021441792, 0.021499847, 0.021546389, 0.021587958, 0.021630431, 0.021677958, 0.021728861, 0.021787819, 0.021838167, 0.021879653, 0.0219324...</msg>
<status status="PASS" starttime="20201112 12:42:24.595" endtime="20201112 12:42:24.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.611" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201112 12:42:24.611" endtime="20201112 12:42:24.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.614" level="INFO">VALUE: [2.7207999999997318e-05, 2.6277999999997637e-05, 2.6235999999998927e-05, 2.622299999999883e-05, 2.6236000000002396e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.62369999999984e-05, 2.6291000000001202e-05, 2.6291999999997206e-05, 2.6249999999998497e-05, 2.6319999999999816e-05, 2.6249999999998497e-05, 2.620899999999926e-05, 2.620899999999926e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6250000000001966e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6222000000002826e-05, 2.6250000000001966e-05, 2.622299999999883e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6250000000001966e-05, 2.6250000000001966e-05, 2.623700000000187e-05, 2.6151999999998038e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6236000000002396e-05, 2.62230000000023e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6137999999998468e-05, 2.6264000000001536e-05, 2.6194000000000217e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.6207999999999787e-05, 2.6235999999998927e-05, 2.622299999999883e-05]</msg>
<status status="PASS" starttime="20201112 12:42:24.613" endtime="20201112 12:42:24.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.608" endtime="20201112 12:42:24.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.728" endtime="20201112 12:42:24.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:24.732" endtime="20201112 12:42:24.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.731" endtime="20201112 12:42:24.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.726" endtime="20201112 12:42:24.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.254" endtime="20201112 12:42:24.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.254" endtime="20201112 12:42:24.753"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.761" endtime="20201112 12:42:24.776"></status>
</kw>
<msg timestamp="20201112 12:42:24.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.760" endtime="20201112 12:42:24.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:24.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:24.777" endtime="20201112 12:42:24.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.779" endtime="20201112 12:42:24.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.758" endtime="20201112 12:42:24.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.755" endtime="20201112 12:42:24.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:24.788" endtime="20201112 12:42:25.089"></status>
</kw>
<msg timestamp="20201112 12:42:25.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021301472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:24.787" endtime="20201112 12:42:25.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021301472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.094" endtime="20201112 12:42:25.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.102" endtime="20201112 12:42:25.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.784" endtime="20201112 12:42:25.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.783" endtime="20201112 12:42:25.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.108" level="INFO">${RESULT} = [{'time': 0.021301472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7249999999999497e-05, 'source_diff': 2.7249999999999497e-05}, {'time': 0.021356347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:25.105" endtime="20201112 12:42:25.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.122" level="INFO">${ACCURACY} = {'time': [0.021301472, 0.021356347, 0.021403847, 0.021455042, 0.021499736, 0.021558431, 0.021611222, 0.021665208, 0.021708014, 0.021753, 0.021807944, 0.021852931, 0.02189325, 0.021951306, 0.021995347,...</msg>
<status status="PASS" starttime="20201112 12:42:25.109" endtime="20201112 12:42:25.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.126" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.125" endtime="20201112 12:42:25.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.129" level="INFO">VALUE: [2.7249999999999497e-05, 2.6291000000001202e-05, 2.6249999999998497e-05, 2.615300000000098e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.619499999999969e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.622299999999883e-05, 2.6207999999999787e-05, 2.623700000000187e-05, 2.6193999999996748e-05, 2.6276999999998163e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6194000000000217e-05, 2.6236000000002396e-05, 2.6221999999999357e-05, 2.6207999999999787e-05, 2.6221999999999357e-05, 2.620899999999926e-05, 2.6236000000002396e-05, 2.623700000000187e-05, 2.6236000000002396e-05, 2.62230000000023e-05, 2.6207999999999787e-05, 2.6222000000002826e-05, 2.6221999999999357e-05, 2.6250000000001966e-05, 2.6221999999999357e-05, 2.62369999999984e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6236000000002396e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6236000000002396e-05, 2.6264000000001536e-05, 2.6207999999999787e-05, 2.622299999999883e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.127" endtime="20201112 12:42:25.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.123" endtime="20201112 12:42:25.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.132" endtime="20201112 12:42:25.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.136" endtime="20201112 12:42:25.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.135" endtime="20201112 12:42:25.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.130" endtime="20201112 12:42:25.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.754" endtime="20201112 12:42:25.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:24.753" endtime="20201112 12:42:25.157"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.165" endtime="20201112 12:42:25.179"></status>
</kw>
<msg timestamp="20201112 12:42:25.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.164" endtime="20201112 12:42:25.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.181" endtime="20201112 12:42:25.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.183" endtime="20201112 12:42:25.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.161" endtime="20201112 12:42:25.185"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.159" endtime="20201112 12:42:25.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.192" endtime="20201112 12:42:25.478"></status>
</kw>
<msg timestamp="20201112 12:42:25.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.191" endtime="20201112 12:42:25.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.482" endtime="20201112 12:42:25.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.490" endtime="20201112 12:42:25.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.188" endtime="20201112 12:42:25.492"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.187" endtime="20201112 12:42:25.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.497" level="INFO">${RESULT} = [{'time': 0.021264167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.720900000000026e-05, 'source_diff': 2.720900000000026e-05}, {'time': 0.021309389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:25.494" endtime="20201112 12:42:25.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.510" level="INFO">${ACCURACY} = {'time': [0.021264167, 0.021309389, 0.021361208, 0.021408694, 0.021450556, 0.021493361, 0.021539986, 0.021589861, 0.021648875, 0.021692292, 0.021750986, 0.0218025, 0.021853708, 0.021903986, 0.0219555,...</msg>
<status status="PASS" starttime="20201112 12:42:25.498" endtime="20201112 12:42:25.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.515" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.514" endtime="20201112 12:42:25.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.517" level="INFO">VALUE: [2.720900000000026e-05, 2.6292000000000676e-05, 2.6235999999998927e-05, 2.6235999999998927e-05, 2.62369999999984e-05, 2.6221999999999357e-05, 2.6319000000000342e-05, 2.615299999999751e-05, 2.6236000000002396e-05, 2.618100000000012e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6221999999999357e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6278000000001106e-05, 2.619499999999969e-05, 2.618100000000012e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6236000000002396e-05, 2.6221999999999357e-05, 2.6180000000000647e-05, 2.6235999999998927e-05, 2.622299999999883e-05, 2.6250000000001966e-05, 2.6235999999998927e-05, 2.6236000000002396e-05, 2.6221999999999357e-05, 2.620899999999926e-05, 2.6250000000001966e-05, 2.6180000000000647e-05, 2.6236000000002396e-05, 2.6236000000002396e-05, 2.6235999999998927e-05, 2.6249999999998497e-05, 2.6221999999999357e-05, 2.6249999999998497e-05, 2.6207999999999787e-05, 2.620899999999926e-05, 2.6222000000002826e-05, 2.623700000000187e-05, 2.62230000000023e-05, 2.62230000000023e-05, 2.6236000000002396e-05, 2.6249999999998497e-05, 2.6249999999998497e-05, 2.6235999999998927e-05, 2.6221999999999357e-05, 2.6221999999999357e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.516" endtime="20201112 12:42:25.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.511" endtime="20201112 12:42:25.519"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.521" endtime="20201112 12:42:25.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.526" endtime="20201112 12:42:25.545"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.524" endtime="20201112 12:42:25.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.519" endtime="20201112 12:42:25.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.158" endtime="20201112 12:42:25.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.157" endtime="20201112 12:42:25.547"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.555" endtime="20201112 12:42:25.570"></status>
</kw>
<msg timestamp="20201112 12:42:25.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.554" endtime="20201112 12:42:25.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.571" endtime="20201112 12:42:25.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.574" endtime="20201112 12:42:25.575"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.551" endtime="20201112 12:42:25.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.549" endtime="20201112 12:42:25.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.582" endtime="20201112 12:42:25.868"></status>
</kw>
<msg timestamp="20201112 12:42:25.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021295472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02132775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:25.581" endtime="20201112 12:42:25.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021295472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02132775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:25.872" endtime="20201112 12:42:25.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.880" endtime="20201112 12:42:25.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.578" endtime="20201112 12:42:25.882"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.577" endtime="20201112 12:42:25.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:25.887" level="INFO">${RESULT} = [{'time': 0.02132775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.227800000000017e-05, 'source_diff': 3.227800000000017e-05}, {'time': 0.021373972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:25.884" endtime="20201112 12:42:25.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:25.900" level="INFO">${ACCURACY} = {'time': [0.02132775, 0.021373972, 0.021428986, 0.021489917, 0.021549917, 0.021603056, 0.021660889, 0.021715875, 0.021773069, 0.021836514, 0.021881167, 0.021936514, 0.021983722, 0.022033514, 0.0220875...</msg>
<status status="PASS" starttime="20201112 12:42:25.888" endtime="20201112 12:42:25.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.905" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201112 12:42:25.904" endtime="20201112 12:42:25.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.907" level="INFO">VALUE: [3.227800000000017e-05, 3.133300000000144e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.125000000000003e-05, 3.127799999999917e-05, 3.122199999999742e-05, 3.12639999999996e-05, 3.1276999999999694e-05, 3.129200000000221e-05, 2.622299999999883e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.134700000000101e-05, 3.129200000000221e-05, 3.12639999999996e-05, 3.120799999999785e-05, 3.1276999999999694e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.122200000000089e-05, 3.127799999999917e-05, 3.1276999999999694e-05, 2.622299999999883e-05, 3.127800000000264e-05, 3.129199999999874e-05, 3.129199999999874e-05, 3.130599999999831e-05, 3.127799999999917e-05, 3.127800000000264e-05, 3.12639999999996e-05, 2.6151999999998038e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.1290999999999264e-05, 3.1276999999999694e-05, 3.129199999999874e-05, 3.12639999999996e-05, 3.129200000000221e-05, 3.1290999999999264e-05, 3.126400000000307e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.133399999999745e-05, 3.1360999999997113e-05, 3.1263000000000124e-05, 3.12639999999996e-05, 2.6207999999999787e-05, 3.129100000000273e-05]</msg>
<status status="PASS" starttime="20201112 12:42:25.906" endtime="20201112 12:42:25.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.901" endtime="20201112 12:42:25.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.911" endtime="20201112 12:42:25.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:25.915" endtime="20201112 12:42:25.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.913" endtime="20201112 12:42:25.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.909" endtime="20201112 12:42:25.935"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.548" endtime="20201112 12:42:25.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.547" endtime="20201112 12:42:25.936"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.944" endtime="20201112 12:42:25.958"></status>
</kw>
<msg timestamp="20201112 12:42:25.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.943" endtime="20201112 12:42:25.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:25.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:25.960" endtime="20201112 12:42:25.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.962" endtime="20201112 12:42:25.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.940" endtime="20201112 12:42:25.964"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.938" endtime="20201112 12:42:25.965"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:25.971" endtime="20201112 12:42:26.256"></status>
</kw>
<msg timestamp="20201112 12:42:26.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:25.970" endtime="20201112 12:42:26.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021173667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021205944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.260" endtime="20201112 12:42:26.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.268" endtime="20201112 12:42:26.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.967" endtime="20201112 12:42:26.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.965" endtime="20201112 12:42:26.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.274" level="INFO">${RESULT} = [{'time': 0.021205944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2277000000000694e-05, 'source_diff': 3.2277000000000694e-05}, {'time': 0.021259653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:26.271" endtime="20201112 12:42:26.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.288" level="INFO">${ACCURACY} = {'time': [0.021205944, 0.021259653, 0.021323403, 0.021377778, 0.021431542, 0.02149125, 0.021539389, 0.021597514, 0.021649111, 0.021695708, 0.021748556, 0.021809778, 0.021867014, 0.021919806, 0.0219720...</msg>
<status status="PASS" starttime="20201112 12:42:26.275" endtime="20201112 12:42:26.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.292" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.291" endtime="20201112 12:42:26.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.294" level="INFO">VALUE: [3.2277000000000694e-05, 3.133400000000092e-05, 3.130600000000178e-05, 3.129199999999874e-05, 3.127800000000264e-05, 3.130599999999831e-05, 3.127799999999917e-05, 3.126400000000307e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.129199999999874e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.127800000000264e-05, 3.127800000000264e-05, 3.1276999999999694e-05, 3.125000000000003e-05, 3.127800000000264e-05, 3.127800000000264e-05, 3.120799999999785e-05, 3.13050000000023e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.130600000000178e-05, 3.127799999999917e-05, 3.1304999999998834e-05, 3.127800000000264e-05, 3.127799999999917e-05, 3.127800000000264e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.127800000000264e-05, 3.129199999999874e-05, 3.123600000000046e-05, 3.12639999999996e-05, 3.1276999999999694e-05, 3.129199999999874e-05, 3.130599999999831e-05, 3.12639999999996e-05, 3.1276999999999694e-05, 3.129100000000273e-05, 3.12639999999996e-05, 3.125000000000003e-05, 3.127800000000264e-05, 3.12639999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.293" endtime="20201112 12:42:26.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.288" endtime="20201112 12:42:26.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.298" endtime="20201112 12:42:26.300"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.302" endtime="20201112 12:42:26.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.300" endtime="20201112 12:42:26.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.296" endtime="20201112 12:42:26.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.937" endtime="20201112 12:42:26.323"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:25.936" endtime="20201112 12:42:26.323"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.331" endtime="20201112 12:42:26.346"></status>
</kw>
<msg timestamp="20201112 12:42:26.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.330" endtime="20201112 12:42:26.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.347" endtime="20201112 12:42:26.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.349" endtime="20201112 12:42:26.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.327" endtime="20201112 12:42:26.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.325" endtime="20201112 12:42:26.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.358" endtime="20201112 12:42:26.644"></status>
</kw>
<msg timestamp="20201112 12:42:26.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021314639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.357" endtime="20201112 12:42:26.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021314639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:26.649" endtime="20201112 12:42:26.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.657" endtime="20201112 12:42:26.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.354" endtime="20201112 12:42:26.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.353" endtime="20201112 12:42:26.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:26.663" level="INFO">${RESULT} = [{'time': 0.021314639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.223600000000146e-05, 'source_diff': 3.223600000000146e-05}, {'time': 0.021366778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:26.660" endtime="20201112 12:42:26.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:26.676" level="INFO">${ACCURACY} = {'time': [0.021314639, 0.021366778, 0.021422097, 0.021483333, 0.021536833, 0.021599556, 0.021653917, 0.021708611, 0.021756764, 0.021810208, 0.021867403, 0.021916528, 0.021970875, 0.022025889, 0.022075...</msg>
<status status="PASS" starttime="20201112 12:42:26.664" endtime="20201112 12:42:26.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.681" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201112 12:42:26.680" endtime="20201112 12:42:26.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.683" level="INFO">VALUE: [3.223600000000146e-05, 3.133400000000092e-05, 3.127800000000264e-05, 3.1276999999999694e-05, 3.1332999999997974e-05, 3.12639999999996e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.126400000000307e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.130600000000178e-05, 3.125000000000003e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.125000000000003e-05, 3.12639999999996e-05, 3.123600000000046e-05, 3.119499999999775e-05, 3.120900000000079e-05, 3.12639999999996e-05, 3.129199999999874e-05, 3.127800000000264e-05, 3.1276999999999694e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.120800000000132e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.131900000000187e-05, 3.127800000000264e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.119399999999828e-05, 3.12639999999996e-05, 3.1290999999999264e-05, 3.127799999999917e-05, 3.131999999999788e-05, 3.1290999999999264e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.126400000000307e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.127799999999917e-05]</msg>
<status status="PASS" starttime="20201112 12:42:26.682" endtime="20201112 12:42:26.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.677" endtime="20201112 12:42:26.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.687" endtime="20201112 12:42:26.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:26.691" endtime="20201112 12:42:26.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.689" endtime="20201112 12:42:26.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.685" endtime="20201112 12:42:26.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.324" endtime="20201112 12:42:26.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.323" endtime="20201112 12:42:26.712"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.720" endtime="20201112 12:42:26.734"></status>
</kw>
<msg timestamp="20201112 12:42:26.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.719" endtime="20201112 12:42:26.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:26.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:26.736" endtime="20201112 12:42:26.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.738" endtime="20201112 12:42:26.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.716" endtime="20201112 12:42:26.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.714" endtime="20201112 12:42:26.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:26.747" endtime="20201112 12:42:27.033"></status>
</kw>
<msg timestamp="20201112 12:42:27.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021313708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021346, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:26.746" endtime="20201112 12:42:27.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021313708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021346, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:27.037" endtime="20201112 12:42:27.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.045" endtime="20201112 12:42:27.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.743" endtime="20201112 12:42:27.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.741" endtime="20201112 12:42:27.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.052" level="INFO">${RESULT} = [{'time': 0.021346, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.229199999999974e-05, 'source_diff': 3.229199999999974e-05}, {'time': 0.021409972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:27.049" endtime="20201112 12:42:27.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.065" level="INFO">${ACCURACY} = {'time': [0.021346, 0.021409972, 0.021468417, 0.021532778, 0.021588111, 0.021642208, 0.021706222, 0.021761875, 0.021811319, 0.021856708, 0.021910708, 0.021965417, 0.022013639, 0.022071083, 0.022132028...</msg>
<status status="PASS" starttime="20201112 12:42:27.053" endtime="20201112 12:42:27.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.069" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.068" endtime="20201112 12:42:27.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.072" level="INFO">VALUE: [3.229199999999974e-05, 3.1332999999997974e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.1304999999998834e-05, 3.125000000000003e-05, 3.129199999999874e-05, 3.1304999999998834e-05, 3.136100000000058e-05, 3.123600000000046e-05, 3.122300000000036e-05, 3.133300000000144e-05, 3.1276999999999694e-05, 3.129200000000221e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.123600000000046e-05, 3.123600000000046e-05, 3.1332999999997974e-05, 3.125000000000003e-05, 3.129199999999874e-05, 3.125000000000003e-05, 3.120900000000079e-05, 3.127799999999917e-05, 3.1332999999997974e-05, 3.127800000000264e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.1348000000000487e-05, 3.126400000000307e-05, 3.12639999999996e-05, 3.12639999999996e-05, 3.127800000000264e-05, 3.12639999999996e-05, 3.1276999999999694e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.13050000000023e-05, 3.1290999999999264e-05, 3.129200000000221e-05, 3.122200000000089e-05, 3.130600000000178e-05, 3.130600000000178e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.12639999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.071" endtime="20201112 12:42:27.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.066" endtime="20201112 12:42:27.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.075" endtime="20201112 12:42:27.078"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.081" endtime="20201112 12:42:27.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.079" endtime="20201112 12:42:27.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.074" endtime="20201112 12:42:27.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.713" endtime="20201112 12:42:27.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:26.712" endtime="20201112 12:42:27.101"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.110" endtime="20201112 12:42:27.124"></status>
</kw>
<msg timestamp="20201112 12:42:27.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.108" endtime="20201112 12:42:27.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.126" endtime="20201112 12:42:27.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.128" endtime="20201112 12:42:27.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.106" endtime="20201112 12:42:27.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.104" endtime="20201112 12:42:27.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.137" endtime="20201112 12:42:27.422"></status>
</kw>
<msg timestamp="20201112 12:42:27.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021332917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.135" endtime="20201112 12:42:27.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021332917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.426" endtime="20201112 12:42:27.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.434" endtime="20201112 12:42:27.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.133" endtime="20201112 12:42:27.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.131" endtime="20201112 12:42:27.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.441" level="INFO">${RESULT} = [{'time': 0.021332917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.22640000000006e-05, 'source_diff': 3.22640000000006e-05}, {'time': 0.021390361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:27.438" endtime="20201112 12:42:27.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.454" level="INFO">${ACCURACY} = {'time': [0.021332917, 0.021390361, 0.021452556, 0.021511014, 0.021565361, 0.021615069, 0.021677875, 0.021741611, 0.021790389, 0.02183575, 0.021883903, 0.021946694, 0.021997042, 0.022057653, 0.0221107...</msg>
<status status="PASS" starttime="20201112 12:42:27.442" endtime="20201112 12:42:27.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.458" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.457" endtime="20201112 12:42:27.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.461" level="INFO">VALUE: [3.22640000000006e-05, 3.133300000000144e-05, 3.127800000000264e-05, 3.130599999999831e-05, 3.127800000000264e-05, 3.1263000000000124e-05, 3.125000000000003e-05, 3.129200000000221e-05, 3.127799999999917e-05, 3.127800000000264e-05, 3.127799999999917e-05, 3.1276999999999694e-05, 3.127800000000264e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.1290999999999264e-05, 3.12639999999996e-05, 3.127800000000264e-05, 3.127800000000264e-05, 3.12639999999996e-05, 3.127700000000316e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.133300000000144e-05, 3.127800000000264e-05, 3.122199999999742e-05, 3.122200000000089e-05, 3.127799999999917e-05, 3.129200000000221e-05, 3.127799999999917e-05, 3.12639999999996e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.1263000000000124e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.127799999999917e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.119399999999828e-05, 3.127799999999917e-05, 3.1318999999998404e-05, 3.122200000000089e-05, 3.1318999999998404e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.129199999999874e-05, 3.127799999999917e-05, 3.12639999999996e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.459" endtime="20201112 12:42:27.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.455" endtime="20201112 12:42:27.462"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.464" endtime="20201112 12:42:27.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.468" endtime="20201112 12:42:27.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.466" endtime="20201112 12:42:27.488"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.463" endtime="20201112 12:42:27.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.102" endtime="20201112 12:42:27.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.102" endtime="20201112 12:42:27.489"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.498" endtime="20201112 12:42:27.512"></status>
</kw>
<msg timestamp="20201112 12:42:27.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.496" endtime="20201112 12:42:27.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.514" endtime="20201112 12:42:27.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.516" endtime="20201112 12:42:27.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.494" endtime="20201112 12:42:27.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.492" endtime="20201112 12:42:27.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.525" endtime="20201112 12:42:27.811"></status>
</kw>
<msg timestamp="20201112 12:42:27.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021286236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.523" endtime="20201112 12:42:27.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021286236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.815" endtime="20201112 12:42:27.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.823" endtime="20201112 12:42:27.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.521" endtime="20201112 12:42:27.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.519" endtime="20201112 12:42:27.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:27.829" level="INFO">${RESULT} = [{'time': 0.021286236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7319000000000935e-05, 'source_diff': 3.7319000000000935e-05}, {'time': 0.021332458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:27.826" endtime="20201112 12:42:27.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:27.843" level="INFO">${ACCURACY} = {'time': [0.021286236, 0.021332458, 0.021385042, 0.021442611, 0.021494889, 0.02155525, 0.021606292, 0.021673806, 0.021737292, 0.021806069, 0.021867681, 0.021919597, 0.021985542, 0.022040917, 0.0220963...</msg>
<status status="PASS" starttime="20201112 12:42:27.830" endtime="20201112 12:42:27.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.847" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201112 12:42:27.846" endtime="20201112 12:42:27.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.849" level="INFO">VALUE: [3.7319000000000935e-05, 3.1332999999997974e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.630599999999984e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.1304999999998834e-05, 3.631999999999941e-05, 3.626400000000113e-05, 3.630599999999984e-05, 3.636200000000159e-05, 3.12639999999996e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.127800000000264e-05, 3.62780000000007e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.127799999999917e-05, 3.6318999999999935e-05, 3.626400000000113e-05, 3.6360999999998644e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.626399999999766e-05, 3.632000000000288e-05, 3.630599999999984e-05, 3.125000000000003e-05, 3.634799999999855e-05, 3.633399999999898e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.630600000000331e-05, 3.127799999999917e-05, 3.127700000000316e-05, 3.630599999999984e-05, 3.6318999999999935e-05]</msg>
<status status="PASS" starttime="20201112 12:42:27.848" endtime="20201112 12:42:27.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.843" endtime="20201112 12:42:27.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.853" endtime="20201112 12:42:27.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:27.857" endtime="20201112 12:42:27.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.856" endtime="20201112 12:42:27.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.851" endtime="20201112 12:42:27.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.490" endtime="20201112 12:42:27.878"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.490" endtime="20201112 12:42:27.878"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.886" endtime="20201112 12:42:27.901"></status>
</kw>
<msg timestamp="20201112 12:42:27.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.885" endtime="20201112 12:42:27.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:27.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:27.902" endtime="20201112 12:42:27.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.905" endtime="20201112 12:42:27.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.882" endtime="20201112 12:42:27.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.880" endtime="20201112 12:42:27.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:27.914" endtime="20201112 12:42:28.199"></status>
</kw>
<msg timestamp="20201112 12:42:28.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:27.912" endtime="20201112 12:42:28.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021266944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021304264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.203" endtime="20201112 12:42:28.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.212" endtime="20201112 12:42:28.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.910" endtime="20201112 12:42:28.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.908" endtime="20201112 12:42:28.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.218" level="INFO">${RESULT} = [{'time': 0.021304264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.732000000000041e-05, 'source_diff': 3.732000000000041e-05}, {'time': 0.021369236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.215" endtime="20201112 12:42:28.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.231" level="INFO">${ACCURACY} = {'time': [0.021304264, 0.021369236, 0.021420875, 0.021470972, 0.021535389, 0.021598569, 0.021663347, 0.021727403, 0.021777792, 0.021827889, 0.021896986, 0.021955472, 0.022017431, 0.022079333, 0.022135...</msg>
<status status="PASS" starttime="20201112 12:42:28.219" endtime="20201112 12:42:28.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.236" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.235" endtime="20201112 12:42:28.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.238" level="INFO">VALUE: [3.732000000000041e-05, 3.6374999999998214e-05, 3.6332999999999505e-05, 3.6333000000002974e-05, 3.6332999999999505e-05, 3.6333000000002974e-05, 3.6374999999998214e-05, 3.633399999999898e-05, 3.629200000000027e-05, 3.631999999999941e-05, 3.6332999999999505e-05, 3.6305000000000365e-05, 3.634800000000202e-05, 3.6305000000000365e-05, 3.6305000000000365e-05, 3.6347000000002544e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.632000000000288e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.6318999999999935e-05, 3.6361000000002114e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.633400000000245e-05, 3.6332999999999505e-05, 3.6291000000000795e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.6346999999999074e-05, 3.625000000000156e-05, 3.6305000000000365e-05, 3.632000000000288e-05, 3.6333000000002974e-05, 3.6332999999999505e-05, 3.6360999999998644e-05, 3.6276999999997755e-05, 3.6305000000000365e-05, 3.633400000000245e-05, 3.631999999999941e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.634799999999855e-05, 3.6332999999999505e-05, 3.6332999999999505e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.237" endtime="20201112 12:42:28.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.232" endtime="20201112 12:42:28.240"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.242" endtime="20201112 12:42:28.244"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.246" endtime="20201112 12:42:28.265"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.244" endtime="20201112 12:42:28.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.240" endtime="20201112 12:42:28.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.879" endtime="20201112 12:42:28.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:27.878" endtime="20201112 12:42:28.267"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.275" endtime="20201112 12:42:28.290"></status>
</kw>
<msg timestamp="20201112 12:42:28.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.274" endtime="20201112 12:42:28.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.291" endtime="20201112 12:42:28.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.294" endtime="20201112 12:42:28.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.271" endtime="20201112 12:42:28.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.269" endtime="20201112 12:42:28.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.302" endtime="20201112 12:42:28.588"></status>
</kw>
<msg timestamp="20201112 12:42:28.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021227458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.301" endtime="20201112 12:42:28.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021227458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021264778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.593" endtime="20201112 12:42:28.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.601" endtime="20201112 12:42:28.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.298" endtime="20201112 12:42:28.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.297" endtime="20201112 12:42:28.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.607" level="INFO">${RESULT} = [{'time': 0.021264778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.732000000000041e-05, 'source_diff': 3.732000000000041e-05}, {'time': 0.021333819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.604" endtime="20201112 12:42:28.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:28.620" level="INFO">${ACCURACY} = {'time': [0.021264778, 0.021333819, 0.021402278, 0.021460472, 0.021511806, 0.02156475, 0.021628792, 0.021695694, 0.021759792, 0.0218105, 0.021870556, 0.02192375, 0.021980389, 0.022042917, 0.022102028,...</msg>
<status status="PASS" starttime="20201112 12:42:28.608" endtime="20201112 12:42:28.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.625" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201112 12:42:28.624" endtime="20201112 12:42:28.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.627" level="INFO">VALUE: [3.732000000000041e-05, 3.6375000000001684e-05, 3.625000000000156e-05, 3.6333000000002974e-05, 3.633400000000245e-05, 3.6375000000001684e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.633399999999898e-05, 3.631999999999941e-05, 3.626400000000113e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.62780000000007e-05, 3.6346999999999074e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.6403000000000824e-05, 3.6305000000000365e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6389000000001254e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.6347000000002544e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.631999999999941e-05, 3.6305000000000365e-05, 3.624999999999809e-05, 3.6318999999999935e-05, 3.630599999999984e-05]</msg>
<status status="PASS" starttime="20201112 12:42:28.626" endtime="20201112 12:42:28.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.621" endtime="20201112 12:42:28.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.631" endtime="20201112 12:42:28.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:28.637" endtime="20201112 12:42:28.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.635" endtime="20201112 12:42:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.629" endtime="20201112 12:42:28.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.268" endtime="20201112 12:42:28.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.267" endtime="20201112 12:42:28.658"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.666" endtime="20201112 12:42:28.681"></status>
</kw>
<msg timestamp="20201112 12:42:28.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.665" endtime="20201112 12:42:28.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:28.682" endtime="20201112 12:42:28.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.685" endtime="20201112 12:42:28.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.662" endtime="20201112 12:42:28.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.660" endtime="20201112 12:42:28.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.694" endtime="20201112 12:42:28.978"></status>
</kw>
<msg timestamp="20201112 12:42:28.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021517556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.692" endtime="20201112 12:42:28.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:28.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021480236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021517556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:28.982" endtime="20201112 12:42:28.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:28.990" endtime="20201112 12:42:28.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.690" endtime="20201112 12:42:28.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.688" endtime="20201112 12:42:28.993"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:28.997" level="INFO">${RESULT} = [{'time': 0.021517556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.732000000000041e-05, 'source_diff': 3.732000000000041e-05}, {'time': 0.021567889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:28.994" endtime="20201112 12:42:28.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.010" level="INFO">${ACCURACY} = {'time': [0.021517556, 0.021567889, 0.021617972, 0.021680528, 0.021739042, 0.021801889, 0.021854153, 0.021920431, 0.021979611, 0.022045542, 0.022110264, 0.022169694, 0.022231611, 0.022283264, 0.022351...</msg>
<status status="PASS" starttime="20201112 12:42:28.998" endtime="20201112 12:42:29.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.015" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.014" endtime="20201112 12:42:29.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.017" level="INFO">VALUE: [3.732000000000041e-05, 3.6389000000001254e-05, 3.626399999999766e-05, 3.631999999999941e-05, 3.631999999999941e-05, 3.632000000000288e-05, 3.632000000000288e-05, 3.631999999999941e-05, 3.6374999999998214e-05, 3.632000000000288e-05, 3.631999999999941e-05, 3.6291000000000795e-05, 3.627799999999723e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.6332999999999505e-05, 3.6388999999997784e-05, 3.633400000000245e-05, 3.625000000000156e-05, 3.6332999999999505e-05, 3.6346999999999074e-05, 3.6333000000002974e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.6374999999998214e-05, 3.632000000000288e-05, 3.6346999999999074e-05, 3.627799999999723e-05, 3.631999999999941e-05, 3.6347000000002544e-05, 3.6332999999999505e-05, 3.624999999999809e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6360999999998644e-05, 3.6305000000000365e-05, 3.6346999999999074e-05, 3.632000000000288e-05, 3.630599999999984e-05, 3.6375000000001684e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.626399999999766e-05, 3.6318999999999935e-05, 3.62780000000007e-05, 3.6318999999999935e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.016" endtime="20201112 12:42:29.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.011" endtime="20201112 12:42:29.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.021" endtime="20201112 12:42:29.022"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.025" endtime="20201112 12:42:29.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.023" endtime="20201112 12:42:29.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.019" endtime="20201112 12:42:29.045"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.659" endtime="20201112 12:42:29.046"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:28.658" endtime="20201112 12:42:29.046"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.054" endtime="20201112 12:42:29.069"></status>
</kw>
<msg timestamp="20201112 12:42:29.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.053" endtime="20201112 12:42:29.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.070" endtime="20201112 12:42:29.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.072" endtime="20201112 12:42:29.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.050" endtime="20201112 12:42:29.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.048" endtime="20201112 12:42:29.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.081" endtime="20201112 12:42:29.366"></status>
</kw>
<msg timestamp="20201112 12:42:29.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:29.080" endtime="20201112 12:42:29.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0212855, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:29.370" endtime="20201112 12:42:29.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.378" endtime="20201112 12:42:29.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.077" endtime="20201112 12:42:29.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.076" endtime="20201112 12:42:29.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.384" level="INFO">${RESULT} = [{'time': 0.0212855, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.730599999999737e-05, 'source_diff': 3.730599999999737e-05}, {'time': 0.021342417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:29.381" endtime="20201112 12:42:29.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.398" level="INFO">${ACCURACY} = {'time': [0.0212855, 0.021342417, 0.021410861, 0.021475611, 0.021544694, 0.021612861, 0.021669194, 0.021719278, 0.021785569, 0.021851861, 0.021914722, 0.021984139, 0.022047, 0.022105792, 0.022159625, ...</msg>
<status status="PASS" starttime="20201112 12:42:29.385" endtime="20201112 12:42:29.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.402" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.401" endtime="20201112 12:42:29.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.405" level="INFO">VALUE: [3.730599999999737e-05, 3.6388999999997784e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.633400000000245e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.6332999999999505e-05, 3.630599999999984e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.6318999999999935e-05, 3.6347000000002544e-05, 3.625000000000156e-05, 3.6346999999999074e-05, 3.6318999999999935e-05, 3.633399999999898e-05, 3.631999999999941e-05, 3.626399999999766e-05, 3.6318999999999935e-05, 3.630599999999984e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.629200000000027e-05, 3.6318999999999935e-05, 3.6318999999999935e-05, 3.6332999999999505e-05, 3.6318999999999935e-05, 3.6305000000000365e-05, 3.631999999999941e-05, 3.6319000000003404e-05, 3.630599999999984e-05, 3.631999999999941e-05, 3.633399999999898e-05, 3.6318999999999935e-05, 3.631999999999941e-05, 3.6332999999999505e-05, 3.6333000000002974e-05, 3.630599999999984e-05, 3.6346999999999074e-05, 3.6318999999999935e-05, 3.633400000000245e-05, 3.6291000000000795e-05, 3.626400000000113e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.403" endtime="20201112 12:42:29.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.399" endtime="20201112 12:42:29.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.408" endtime="20201112 12:42:29.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.412" endtime="20201112 12:42:29.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.411" endtime="20201112 12:42:29.432"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.407" endtime="20201112 12:42:29.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.047" endtime="20201112 12:42:29.433"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.046" endtime="20201112 12:42:29.433"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.442" endtime="20201112 12:42:29.456"></status>
</kw>
<msg timestamp="20201112 12:42:29.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.440" endtime="20201112 12:42:29.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.458" endtime="20201112 12:42:29.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.460" endtime="20201112 12:42:29.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.438" endtime="20201112 12:42:29.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.435" endtime="20201112 12:42:29.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.469" endtime="20201112 12:42:29.754"></status>
</kw>
<msg timestamp="20201112 12:42:29.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021279486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.468" endtime="20201112 12:42:29.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021279486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.759" endtime="20201112 12:42:29.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.767" endtime="20201112 12:42:29.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.465" endtime="20201112 12:42:29.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.463" endtime="20201112 12:42:29.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:29.773" level="INFO">${RESULT} = [{'time': 0.021279486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2361000000001175e-05, 'source_diff': 4.2361000000001175e-05}, {'time': 0.021350444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:29.770" endtime="20201112 12:42:29.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:29.787" level="INFO">${ACCURACY} = {'time': [0.021279486, 0.021350444, 0.021422403, 0.0214875, 0.021546069, 0.021611181, 0.021679403, 0.021753236, 0.021813569, 0.021883653, 0.021949694, 0.022018222, 0.022090181, 0.022153403, 0.02220852...</msg>
<status status="PASS" starttime="20201112 12:42:29.774" endtime="20201112 12:42:29.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.791" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201112 12:42:29.790" endtime="20201112 12:42:29.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.793" level="INFO">VALUE: [4.2361000000001175e-05, 4.141599999999898e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.134800000000008e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 3.6305000000000365e-05, 4.1361000000000175e-05, 4.1346999999997136e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1360999999996706e-05, 3.631999999999941e-05, 4.138799999999984e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1333000000001036e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 3.630599999999984e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 3.631999999999941e-05, 4.1388999999999315e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1389000000002785e-05, 4.138799999999984e-05, 3.6332999999999505e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1375000000003215e-05, 4.1346999999997136e-05, 3.6318999999999935e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.138799999999984e-05, 3.6347000000002544e-05, 4.1374999999999745e-05, 4.1332999999997566e-05, 4.1374999999999745e-05, 4.1402999999998885e-05, 4.1374999999999745e-05]</msg>
<status status="PASS" starttime="20201112 12:42:29.792" endtime="20201112 12:42:29.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.788" endtime="20201112 12:42:29.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.804" endtime="20201112 12:42:29.806"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:29.808" endtime="20201112 12:42:29.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.807" endtime="20201112 12:42:29.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.802" endtime="20201112 12:42:29.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.434" endtime="20201112 12:42:29.829"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.433" endtime="20201112 12:42:29.829"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.837" endtime="20201112 12:42:29.852"></status>
</kw>
<msg timestamp="20201112 12:42:29.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.836" endtime="20201112 12:42:29.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:29.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:29.854" endtime="20201112 12:42:29.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.856" endtime="20201112 12:42:29.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.833" endtime="20201112 12:42:29.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.831" endtime="20201112 12:42:29.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:29.865" endtime="20201112 12:42:30.151"></status>
</kw>
<msg timestamp="20201112 12:42:30.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021280972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:29.863" endtime="20201112 12:42:30.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021280972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.155" endtime="20201112 12:42:30.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.163" endtime="20201112 12:42:30.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.861" endtime="20201112 12:42:30.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.859" endtime="20201112 12:42:30.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.170" level="INFO">${RESULT} = [{'time': 0.021323319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2347000000001606e-05, 'source_diff': 4.2347000000001606e-05}, {'time': 0.021379028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.166" endtime="20201112 12:42:30.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.183" level="INFO">${ACCURACY} = {'time': [0.021323319, 0.021379028, 0.021453153, 0.021520139, 0.021576833, 0.021638194, 0.021709833, 0.021768694, 0.021825722, 0.021898611, 0.021972417, 0.022038472, 0.0221045, 0.022160556, 0.02221568...</msg>
<status status="PASS" starttime="20201112 12:42:30.171" endtime="20201112 12:42:30.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.187" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.186" endtime="20201112 12:42:30.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.190" level="INFO">VALUE: [4.2347000000001606e-05, 4.1417000000001924e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1374999999999745e-05, 4.136199999999965e-05, 4.1361000000000175e-05, 4.133400000000051e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1389000000002785e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.136200000000312e-05, 4.1332999999997566e-05, 4.1375000000003215e-05, 4.1389000000002785e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.144399999999812e-05, 4.1403000000002355e-05, 4.1361000000000175e-05, 4.1416999999998455e-05, 4.1388999999999315e-05, 4.1402999999998885e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1319000000001466e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.1347000000000605e-05, 4.1375000000003215e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1374999999999745e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.188" endtime="20201112 12:42:30.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.184" endtime="20201112 12:42:30.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.193" endtime="20201112 12:42:30.196"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.198" endtime="20201112 12:42:30.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.197" endtime="20201112 12:42:30.218"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.192" endtime="20201112 12:42:30.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.830" endtime="20201112 12:42:30.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:29.829" endtime="20201112 12:42:30.219"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.228" endtime="20201112 12:42:30.243"></status>
</kw>
<msg timestamp="20201112 12:42:30.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.226" endtime="20201112 12:42:30.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.244" endtime="20201112 12:42:30.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.246" endtime="20201112 12:42:30.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.224" endtime="20201112 12:42:30.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.222" endtime="20201112 12:42:30.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.255" endtime="20201112 12:42:30.540"></status>
</kw>
<msg timestamp="20201112 12:42:30.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021271083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.254" endtime="20201112 12:42:30.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021228722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021271083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.545" endtime="20201112 12:42:30.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.553" endtime="20201112 12:42:30.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.251" endtime="20201112 12:42:30.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.250" endtime="20201112 12:42:30.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.559" level="INFO">${RESULT} = [{'time': 0.021271083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2361000000001175e-05, 'source_diff': 4.2361000000001175e-05}, {'time': 0.021327708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:30.556" endtime="20201112 12:42:30.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.573" level="INFO">${ACCURACY} = {'time': [0.021271083, 0.021327708, 0.021392792, 0.021461944, 0.021536083, 0.021602458, 0.021667847, 0.021726722, 0.021790875, 0.021849431, 0.021909556, 0.021969986, 0.022027292, 0.022097681, 0.022153...</msg>
<status status="PASS" starttime="20201112 12:42:30.560" endtime="20201112 12:42:30.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.577" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.576" endtime="20201112 12:42:30.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.579" level="INFO">VALUE: [4.2361000000001175e-05, 4.143000000000202e-05, 4.132000000000094e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.140200000000288e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.136199999999965e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.136199999999965e-05, 4.1416999999998455e-05, 4.1374999999999745e-05, 4.1375000000003215e-05, 4.1388999999999315e-05, 4.1431000000001494e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.136199999999965e-05, 4.1375000000003215e-05, 4.1403000000002355e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1333000000001036e-05, 4.1389000000002785e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.133400000000051e-05, 4.1360999999996706e-05, 4.1319000000001466e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.138799999999984e-05, 4.134800000000008e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.578" endtime="20201112 12:42:30.580"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.573" endtime="20201112 12:42:30.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.583" endtime="20201112 12:42:30.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.587" endtime="20201112 12:42:30.606"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.585" endtime="20201112 12:42:30.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.581" endtime="20201112 12:42:30.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.220" endtime="20201112 12:42:30.608"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.220" endtime="20201112 12:42:30.608"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.616" endtime="20201112 12:42:30.631"></status>
</kw>
<msg timestamp="20201112 12:42:30.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.615" endtime="20201112 12:42:30.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:30.633" endtime="20201112 12:42:30.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.635" endtime="20201112 12:42:30.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.612" endtime="20201112 12:42:30.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.610" endtime="20201112 12:42:30.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.644" endtime="20201112 12:42:30.930"></status>
</kw>
<msg timestamp="20201112 12:42:30.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021338889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021381319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.642" endtime="20201112 12:42:30.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021338889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021381319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:30.934" endtime="20201112 12:42:30.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.942" endtime="20201112 12:42:30.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.640" endtime="20201112 12:42:30.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.638" endtime="20201112 12:42:30.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:30.949" level="INFO">${RESULT} = [{'time': 0.021381319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.242999999999955e-05, 'source_diff': 4.242999999999955e-05}, {'time': 0.021441944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:30.945" endtime="20201112 12:42:30.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:30.962" level="INFO">${ACCURACY} = {'time': [0.021381319, 0.021441944, 0.02150425, 0.021566556, 0.02162825, 0.021685889, 0.021750972, 0.021815778, 0.021880569, 0.021944208, 0.022011111, 0.022079028, 0.022134486, 0.022192431, 0.02225847...</msg>
<status status="PASS" starttime="20201112 12:42:30.950" endtime="20201112 12:42:30.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.966" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201112 12:42:30.965" endtime="20201112 12:42:30.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:30.969" level="INFO">VALUE: [4.242999999999955e-05, 4.141600000000245e-05, 4.1374999999999745e-05, 4.136199999999965e-05, 4.1347000000000605e-05, 4.1388999999999315e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.145800000000116e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.136199999999965e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.138799999999984e-05, 4.136199999999965e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1347000000000605e-05, 4.138799999999984e-05, 4.1361000000000175e-05, 4.1319000000001466e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1375000000003215e-05, 4.1388999999999315e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.136199999999965e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1347000000000605e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.134800000000008e-05, 4.136200000000312e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.1374999999999745e-05, 4.1361000000000175e-05]</msg>
<status status="PASS" starttime="20201112 12:42:30.968" endtime="20201112 12:42:30.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.963" endtime="20201112 12:42:30.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:30.972" endtime="20201112 12:42:30.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:30.977" endtime="20201112 12:42:30.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.975" endtime="20201112 12:42:30.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.971" endtime="20201112 12:42:30.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.609" endtime="20201112 12:42:30.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.608" endtime="20201112 12:42:30.997"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.006" endtime="20201112 12:42:31.021"></status>
</kw>
<msg timestamp="20201112 12:42:31.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.004" endtime="20201112 12:42:31.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.022" endtime="20201112 12:42:31.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.025" endtime="20201112 12:42:31.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.002" endtime="20201112 12:42:31.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.000" endtime="20201112 12:42:31.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.034" endtime="20201112 12:42:31.319"></status>
</kw>
<msg timestamp="20201112 12:42:31.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021517042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.032" endtime="20201112 12:42:31.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021474681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021517042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.323" endtime="20201112 12:42:31.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.331" endtime="20201112 12:42:31.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.029" endtime="20201112 12:42:31.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.028" endtime="20201112 12:42:31.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.338" level="INFO">${RESULT} = [{'time': 0.021517042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2361000000001175e-05, 'source_diff': 4.2361000000001175e-05}, {'time': 0.021574597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.334" endtime="20201112 12:42:31.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.351" level="INFO">${ACCURACY} = {'time': [0.021517042, 0.021574597, 0.021641569, 0.021705722, 0.021763681, 0.021835333, 0.021905111, 0.021963931, 0.022020667, 0.022086972, 0.022158917, 0.022226208, 0.022295667, 0.022364819, 0.022436...</msg>
<status status="PASS" starttime="20201112 12:42:31.339" endtime="20201112 12:42:31.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.355" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.354" endtime="20201112 12:42:31.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.358" level="INFO">VALUE: [4.2361000000001175e-05, 4.1403000000002355e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1388999999999315e-05, 4.1388999999999315e-05, 4.1417000000001924e-05, 4.136199999999965e-05, 4.1403000000002355e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.1347000000000605e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.134800000000008e-05, 4.1374999999999745e-05, 4.133400000000051e-05, 4.1388999999999315e-05, 4.1374999999999745e-05, 4.134800000000008e-05, 4.1347000000000605e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1332999999997566e-05, 4.1374999999999745e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1333000000001036e-05, 4.138799999999984e-05, 4.1361000000000175e-05, 4.1361000000000175e-05, 4.1374999999999745e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.1318999999997996e-05, 4.1361000000000175e-05, 4.1389000000002785e-05, 4.1374999999999745e-05, 4.1388999999999315e-05, 4.1375000000003215e-05, 4.134800000000008e-05, 4.144399999999812e-05]</msg>
<status status="PASS" starttime="20201112 12:42:31.356" endtime="20201112 12:42:31.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.352" endtime="20201112 12:42:31.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.361" endtime="20201112 12:42:31.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.365" endtime="20201112 12:42:31.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.364" endtime="20201112 12:42:31.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.360" endtime="20201112 12:42:31.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.998" endtime="20201112 12:42:31.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:30.998" endtime="20201112 12:42:31.386"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.395" endtime="20201112 12:42:31.410"></status>
</kw>
<msg timestamp="20201112 12:42:31.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.393" endtime="20201112 12:42:31.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.411" endtime="20201112 12:42:31.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.414" endtime="20201112 12:42:31.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.391" endtime="20201112 12:42:31.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.389" endtime="20201112 12:42:31.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.422" endtime="20201112 12:42:31.708"></status>
</kw>
<msg timestamp="20201112 12:42:31.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02121675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:31.421" endtime="20201112 12:42:31.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02121675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021259125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:31.712" endtime="20201112 12:42:31.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.720" endtime="20201112 12:42:31.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.418" endtime="20201112 12:42:31.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.417" endtime="20201112 12:42:31.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:31.727" level="INFO">${RESULT} = [{'time': 0.021259125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2375000000000745e-05, 'source_diff': 4.2375000000000745e-05}, {'time': 0.021326097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:31.723" endtime="20201112 12:42:31.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:31.740" level="INFO">${ACCURACY} = {'time': [0.021259125, 0.021326097, 0.021403792, 0.021475403, 0.021545528, 0.021605722, 0.021674306, 0.021747292, 0.021820847, 0.021896625, 0.021958667, 0.022033167, 0.022102333, 0.022180889, 0.022250...</msg>
<status status="PASS" starttime="20201112 12:42:31.728" endtime="20201112 12:42:31.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.744" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201112 12:42:31.743" endtime="20201112 12:42:31.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.747" level="INFO">VALUE: [4.2375000000000745e-05, 4.648599999999836e-05, 4.6445000000002595e-05, 4.1388999999999315e-05, 4.6403000000000416e-05, 4.643000000000008e-05, 4.6403000000000416e-05, 4.6445000000002595e-05, 4.641600000000051e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.1374999999999745e-05, 4.636099999999824e-05, 4.6403000000000416e-05, 4.6416999999999986e-05, 4.6361000000001706e-05, 4.6416999999999986e-05, 4.65000000000014e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.647199999999879e-05, 4.6458999999998696e-05, 4.641600000000051e-05, 4.1388999999999315e-05, 4.6430999999999556e-05, 4.6389000000000846e-05, 4.1374999999999745e-05, 4.6389000000000846e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.640200000000094e-05, 4.6416999999999986e-05, 4.643000000000008e-05, 4.1318999999997996e-05, 4.643000000000008e-05, 4.1388999999999315e-05, 4.1361000000000175e-05, 4.6416999999999986e-05, 4.1388999999999315e-05, 4.6375000000001276e-05, 4.648600000000183e-05, 4.6403000000000416e-05, 4.1333000000001036e-05, 4.6403000000000416e-05, 4.1346999999997136e-05, 4.1374999999999745e-05, 4.641600000000051e-05, 4.6430999999999556e-05]</msg>
<status status="PASS" starttime="20201112 12:42:31.745" endtime="20201112 12:42:31.748"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.741" endtime="20201112 12:42:31.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.750" endtime="20201112 12:42:31.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:31.756" endtime="20201112 12:42:31.775"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.754" endtime="20201112 12:42:31.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.749" endtime="20201112 12:42:31.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.387" endtime="20201112 12:42:31.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.387" endtime="20201112 12:42:31.777"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.785" endtime="20201112 12:42:31.800"></status>
</kw>
<msg timestamp="20201112 12:42:31.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.783" endtime="20201112 12:42:31.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:31.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:31.801" endtime="20201112 12:42:31.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.804" endtime="20201112 12:42:31.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.781" endtime="20201112 12:42:31.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.779" endtime="20201112 12:42:31.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:31.813" endtime="20201112 12:42:32.099"></status>
</kw>
<msg timestamp="20201112 12:42:32.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021339972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:31.811" endtime="20201112 12:42:32.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021292569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021339972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.103" endtime="20201112 12:42:32.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.111" endtime="20201112 12:42:32.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.809" endtime="20201112 12:42:32.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.807" endtime="20201112 12:42:32.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.118" level="INFO">${RESULT} = [{'time': 0.021339972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.740299999999795e-05, 'source_diff': 4.740299999999795e-05}, {'time': 0.021414431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.114" endtime="20201112 12:42:32.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.131" level="INFO">${ACCURACY} = {'time': [0.021339972, 0.021414431, 0.021487375, 0.021555347, 0.021630792, 0.021693514, 0.021770444, 0.021839083, 0.021914153, 0.021978097, 0.022055083, 0.022118708, 0.022193819, 0.022260861, 0.022333...</msg>
<status status="PASS" starttime="20201112 12:42:32.119" endtime="20201112 12:42:32.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.135" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.134" endtime="20201112 12:42:32.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.138" level="INFO">VALUE: [4.740299999999795e-05, 4.6459000000002165e-05, 4.6403000000000416e-05, 4.638899999999738e-05, 4.6403000000000416e-05, 4.648600000000183e-05, 4.641600000000051e-05, 4.647199999999879e-05, 4.6403000000000416e-05, 4.641599999999704e-05, 4.641600000000051e-05, 4.641600000000051e-05, 4.640200000000094e-05, 4.6403000000000416e-05, 4.643000000000008e-05, 4.636099999999824e-05, 4.6403000000000416e-05, 4.641599999999704e-05, 4.6416999999999986e-05, 4.638899999999738e-05, 4.643000000000008e-05, 4.638899999999738e-05, 4.6430999999999556e-05, 4.6416999999999986e-05, 4.6444999999999126e-05, 4.6403000000000416e-05, 4.6389000000000846e-05, 4.641600000000051e-05, 4.6416999999999986e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.643000000000008e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.6416999999999986e-05, 4.644399999999965e-05, 4.6403000000000416e-05, 4.6389000000000846e-05, 4.6416999999999986e-05, 4.643000000000008e-05, 4.63329999999991e-05, 4.636099999999824e-05, 4.6389000000000846e-05, 4.641600000000051e-05, 4.6416999999999986e-05, 4.6403000000000416e-05, 4.637499999999781e-05, 4.643000000000008e-05, 4.6389000000000846e-05, 4.6389000000000846e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.136" endtime="20201112 12:42:32.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.132" endtime="20201112 12:42:32.139"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.141" endtime="20201112 12:42:32.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.145" endtime="20201112 12:42:32.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.143" endtime="20201112 12:42:32.165"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.140" endtime="20201112 12:42:32.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.777" endtime="20201112 12:42:32.166"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:31.777" endtime="20201112 12:42:32.166"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.175" endtime="20201112 12:42:32.190"></status>
</kw>
<msg timestamp="20201112 12:42:32.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.173" endtime="20201112 12:42:32.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.191" endtime="20201112 12:42:32.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.194" endtime="20201112 12:42:32.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.171" endtime="20201112 12:42:32.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.169" endtime="20201112 12:42:32.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.202" endtime="20201112 12:42:32.488"></status>
</kw>
<msg timestamp="20201112 12:42:32.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021306875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.201" endtime="20201112 12:42:32.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021306875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.492" endtime="20201112 12:42:32.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.500" endtime="20201112 12:42:32.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.198" endtime="20201112 12:42:32.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.197" endtime="20201112 12:42:32.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.507" level="INFO">${RESULT} = [{'time': 0.021306875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7417000000000986e-05, 'source_diff': 4.7417000000000986e-05}, {'time': 0.021370111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:32.503" endtime="20201112 12:42:32.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.520" level="INFO">${ACCURACY} = {'time': [0.021306875, 0.021370111, 0.021438083, 0.021508208, 0.021569958, 0.021630444, 0.021701528, 0.021772292, 0.021850292, 0.021912583, 0.021984611, 0.022056944, 0.022133986, 0.022213125, 0.022282...</msg>
<status status="PASS" starttime="20201112 12:42:32.508" endtime="20201112 12:42:32.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.524" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.523" endtime="20201112 12:42:32.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.527" level="INFO">VALUE: [4.7417000000000986e-05, 4.648600000000183e-05, 4.641600000000051e-05, 4.6389000000000846e-05, 4.640200000000094e-05, 4.641599999999704e-05, 4.6416999999999986e-05, 4.640299999999695e-05, 4.6473000000001735e-05, 4.640200000000094e-05, 4.6416999999999986e-05, 4.641599999999704e-05, 4.645800000000269e-05, 4.6403000000000416e-05, 4.640199999999747e-05, 4.6416999999999986e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.638899999999738e-05, 4.643000000000008e-05, 4.641600000000051e-05, 4.6389000000000846e-05, 4.643000000000008e-05, 4.641600000000051e-05, 4.644399999999965e-05, 4.6416999999999986e-05, 4.640299999999695e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.643000000000008e-05, 4.6416999999999986e-05, 4.633400000000204e-05, 4.636099999999824e-05, 4.6403000000000416e-05, 4.647199999999879e-05, 4.6403000000000416e-05, 4.641600000000051e-05, 4.6403000000000416e-05, 4.6430999999999556e-05, 4.640200000000094e-05, 4.644400000000312e-05, 4.644399999999965e-05, 4.6403000000000416e-05, 4.640199999999747e-05, 4.645799999999922e-05, 4.6403000000000416e-05, 4.6403000000000416e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.525" endtime="20201112 12:42:32.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.521" endtime="20201112 12:42:32.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.530" endtime="20201112 12:42:32.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.534" endtime="20201112 12:42:32.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.533" endtime="20201112 12:42:32.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.529" endtime="20201112 12:42:32.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.167" endtime="20201112 12:42:32.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.167" endtime="20201112 12:42:32.555"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.563" endtime="20201112 12:42:32.578"></status>
</kw>
<msg timestamp="20201112 12:42:32.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.562" endtime="20201112 12:42:32.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.580" endtime="20201112 12:42:32.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.582" endtime="20201112 12:42:32.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.559" endtime="20201112 12:42:32.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.557" endtime="20201112 12:42:32.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.591" endtime="20201112 12:42:32.876"></status>
</kw>
<msg timestamp="20201112 12:42:32.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021193125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021240486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.590" endtime="20201112 12:42:32.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021193125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021240486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.880" endtime="20201112 12:42:32.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.888" endtime="20201112 12:42:32.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.587" endtime="20201112 12:42:32.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.585" endtime="20201112 12:42:32.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:32.895" level="INFO">${RESULT} = [{'time': 0.021240486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736099999999924e-05, 'source_diff': 4.736099999999924e-05}, {'time': 0.021300944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:32.891" endtime="20201112 12:42:32.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:32.908" level="INFO">${ACCURACY} = {'time': [0.021240486, 0.021300944, 0.021365472, 0.021442181, 0.021519486, 0.021588722, 0.021657639, 0.021718458, 0.021786111, 0.021849389, 0.021912375, 0.021985653, 0.022061111, 0.022136542, 0.022197...</msg>
<status status="PASS" starttime="20201112 12:42:32.896" endtime="20201112 12:42:32.908"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.913" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201112 12:42:32.912" endtime="20201112 12:42:32.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.915" level="INFO">VALUE: [4.736099999999924e-05, 4.649999999999793e-05, 4.641600000000051e-05, 4.6430999999999556e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.6430999999999556e-05, 4.644399999999965e-05, 4.644399999999965e-05, 4.6416999999999986e-05, 4.6403000000000416e-05, 4.6375000000001276e-05, 4.6375000000001276e-05, 4.6416999999999986e-05, 4.6431000000003025e-05, 4.643000000000008e-05, 4.643000000000008e-05, 4.643000000000008e-05, 4.6403000000000416e-05, 4.641599999999704e-05, 4.633400000000204e-05, 4.640200000000094e-05, 4.6487000000001305e-05, 4.6416999999999986e-05, 4.6403000000000416e-05, 4.643000000000008e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.641600000000051e-05, 4.6430999999999556e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.6389000000000846e-05, 4.6472999999998266e-05, 4.6416999999999986e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.6416999999999986e-05, 4.643000000000008e-05, 4.6444999999999126e-05, 4.641599999999704e-05, 4.648599999999836e-05, 4.6416999999999986e-05, 4.642999999999661e-05, 4.644399999999965e-05, 4.6430999999999556e-05, 4.6389000000000846e-05, 4.6444999999999126e-05, 4.641599999999704e-05, 4.6403000000000416e-05]</msg>
<status status="PASS" starttime="20201112 12:42:32.914" endtime="20201112 12:42:32.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.909" endtime="20201112 12:42:32.916"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.919" endtime="20201112 12:42:32.920"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:32.923" endtime="20201112 12:42:32.942"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.921" endtime="20201112 12:42:32.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.917" endtime="20201112 12:42:32.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.556" endtime="20201112 12:42:32.943"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.555" endtime="20201112 12:42:32.943"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.952" endtime="20201112 12:42:32.967"></status>
</kw>
<msg timestamp="20201112 12:42:32.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.950" endtime="20201112 12:42:32.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:32.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:32.968" endtime="20201112 12:42:32.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.971" endtime="20201112 12:42:32.972"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.948" endtime="20201112 12:42:32.973"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.946" endtime="20201112 12:42:32.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:32.980" endtime="20201112 12:42:33.264"></status>
</kw>
<msg timestamp="20201112 12:42:33.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021330056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:32.978" endtime="20201112 12:42:33.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021330056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:33.269" endtime="20201112 12:42:33.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.277" endtime="20201112 12:42:33.278"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.975" endtime="20201112 12:42:33.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.974" endtime="20201112 12:42:33.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.283" level="INFO">${RESULT} = [{'time': 0.021330056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7445000000000126e-05, 'source_diff': 4.7445000000000126e-05}, {'time': 0.021404792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:33.280" endtime="20201112 12:42:33.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.296" level="INFO">${ACCURACY} = {'time': [0.021330056, 0.021404792, 0.021469347, 0.021539486, 0.021615847, 0.021681319, 0.021755542, 0.021823792, 0.021902736, 0.021979069, 0.022053264, 0.022117486, 0.022192306, 0.022267444, 0.022342...</msg>
<status status="PASS" starttime="20201112 12:42:33.284" endtime="20201112 12:42:33.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.301" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.300" endtime="20201112 12:42:33.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.303" level="INFO">VALUE: [4.7445000000000126e-05, 4.6472999999998266e-05, 4.641600000000051e-05, 4.6416999999999986e-05, 4.6389000000000846e-05, 4.640200000000094e-05, 4.6444999999999126e-05, 4.6403000000000416e-05, 4.648599999999836e-05, 4.644399999999965e-05, 4.6403000000000416e-05, 4.637499999999781e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.6403000000000416e-05, 4.6403000000000416e-05, 4.638800000000137e-05, 4.6403000000000416e-05, 4.643000000000008e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.6430999999999556e-05, 4.6416999999999986e-05, 4.644399999999965e-05, 4.6416999999999986e-05, 4.641600000000051e-05, 4.6430999999999556e-05, 4.6347000000002136e-05, 4.640200000000094e-05, 4.647199999999879e-05, 4.6403000000000416e-05, 4.6389000000000846e-05, 4.643000000000008e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.643000000000008e-05, 4.644399999999965e-05, 4.641600000000051e-05, 4.641600000000051e-05, 4.643000000000008e-05, 4.638800000000137e-05, 4.638899999999738e-05, 4.6416999999999986e-05, 4.6416999999999986e-05, 4.643000000000008e-05, 4.6375000000001276e-05, 4.648599999999836e-05]</msg>
<status status="PASS" starttime="20201112 12:42:33.302" endtime="20201112 12:42:33.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.297" endtime="20201112 12:42:33.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.307" endtime="20201112 12:42:33.310"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.312" endtime="20201112 12:42:33.331"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.311" endtime="20201112 12:42:33.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.305" endtime="20201112 12:42:33.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.944" endtime="20201112 12:42:33.333"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:32.944" endtime="20201112 12:42:33.333"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.341" endtime="20201112 12:42:33.357"></status>
</kw>
<msg timestamp="20201112 12:42:33.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.340" endtime="20201112 12:42:33.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.358" endtime="20201112 12:42:33.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.360" endtime="20201112 12:42:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.337" endtime="20201112 12:42:33.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.335" endtime="20201112 12:42:33.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.369" endtime="20201112 12:42:33.654"></status>
</kw>
<msg timestamp="20201112 12:42:33.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02122275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:33.368" endtime="20201112 12:42:33.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02122275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275194, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:33.659" endtime="20201112 12:42:33.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.667" endtime="20201112 12:42:33.668"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.365" endtime="20201112 12:42:33.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.363" endtime="20201112 12:42:33.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:33.673" level="INFO">${RESULT} = [{'time': 0.021275194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.244400000000218e-05, 'source_diff': 5.244400000000218e-05}, {'time': 0.021348458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:33.670" endtime="20201112 12:42:33.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:33.686" level="INFO">${ACCURACY} = {'time': [0.021275194, 0.021348458, 0.021425542, 0.021492333, 0.021557889, 0.021631847, 0.021714514, 0.021795972, 0.021871153, 0.021936708, 0.022006292, 0.022070528, 0.022145361, 0.022214639, 0.022281...</msg>
<status status="PASS" starttime="20201112 12:42:33.674" endtime="20201112 12:42:33.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.691" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201112 12:42:33.690" endtime="20201112 12:42:33.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.693" level="INFO">VALUE: [5.244400000000218e-05, 5.152699999999913e-05, 5.14729999999998e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.148599999999989e-05, 5.143100000000109e-05, 5.149999999999946e-05, 5.141700000000152e-05, 5.148599999999989e-05, 5.145900000000023e-05, 4.6416999999999986e-05, 4.6403000000000416e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.148599999999989e-05, 4.647199999999879e-05, 5.147200000000032e-05, 4.6430999999999556e-05, 4.644399999999965e-05, 4.6417000000003455e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.1457999999997284e-05, 5.149999999999946e-05, 4.6416999999999986e-05, 5.1443999999997714e-05, 5.148599999999989e-05, 5.147200000000032e-05, 5.145800000000075e-05, 5.145900000000023e-05, 5.14729999999998e-05, 5.147200000000032e-05, 5.147200000000032e-05, 4.644399999999965e-05, 5.148599999999989e-05, 5.1457999999997284e-05, 5.149999999999946e-05, 4.643000000000008e-05, 4.643000000000008e-05, 5.145900000000023e-05, 5.145800000000075e-05, 5.145900000000023e-05, 4.6430999999999556e-05, 5.145800000000075e-05, 4.6403000000000416e-05, 5.147200000000032e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201112 12:42:33.692" endtime="20201112 12:42:33.694"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.687" endtime="20201112 12:42:33.694"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.697" endtime="20201112 12:42:33.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:33.701" endtime="20201112 12:42:33.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.699" endtime="20201112 12:42:33.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.695" endtime="20201112 12:42:33.721"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.334" endtime="20201112 12:42:33.722"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.333" endtime="20201112 12:42:33.722"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.730" endtime="20201112 12:42:33.746"></status>
</kw>
<msg timestamp="20201112 12:42:33.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.729" endtime="20201112 12:42:33.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:33.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:33.747" endtime="20201112 12:42:33.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.750" endtime="20201112 12:42:33.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.726" endtime="20201112 12:42:33.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.724" endtime="20201112 12:42:33.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:33.759" endtime="20201112 12:42:34.044"></status>
</kw>
<msg timestamp="20201112 12:42:34.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021469778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02152225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:33.757" endtime="20201112 12:42:34.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021469778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02152225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:34.049" endtime="20201112 12:42:34.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.057" endtime="20201112 12:42:34.058"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.754" endtime="20201112 12:42:34.059"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.753" endtime="20201112 12:42:34.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.063" level="INFO">${RESULT} = [{'time': 0.02152225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.247200000000132e-05, 'source_diff': 5.247200000000132e-05}, {'time': 0.021590514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:34.060" endtime="20201112 12:42:34.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.076" level="INFO">${ACCURACY} = {'time': [0.02152225, 0.021590514, 0.021659181, 0.021725944, 0.021805806, 0.021886292, 0.021963667, 0.0220395, 0.022112847, 0.022196097, 0.022276264, 0.022356444, 0.022428514, 0.022507167, 0.022576764...</msg>
<status status="PASS" starttime="20201112 12:42:34.064" endtime="20201112 12:42:34.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.081" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.080" endtime="20201112 12:42:34.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.083" level="INFO">VALUE: [5.247200000000132e-05, 5.152800000000207e-05, 5.14729999999998e-05, 5.145800000000075e-05, 5.141700000000152e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.147200000000032e-05, 5.150000000000293e-05, 5.145800000000075e-05, 5.144500000000066e-05, 5.145800000000075e-05, 5.144500000000066e-05, 5.148599999999989e-05, 5.149999999999946e-05, 5.148599999999989e-05, 5.145800000000075e-05, 5.1416000000002043e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.143000000000161e-05, 5.145900000000023e-05, 5.149999999999946e-05, 5.14729999999998e-05, 5.1429999999998144e-05, 5.143000000000161e-05, 5.147200000000032e-05, 5.1415999999998574e-05, 5.144500000000066e-05, 5.151399999999903e-05, 5.145800000000075e-05, 5.149999999999946e-05, 5.143000000000161e-05, 5.145800000000075e-05, 5.144400000000118e-05, 5.147200000000032e-05, 5.1471999999996854e-05, 5.144500000000066e-05, 5.144400000000118e-05, 5.1487000000002836e-05, 5.147200000000032e-05, 5.145900000000023e-05, 5.1457999999997284e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.145900000000023e-05, 5.144500000000066e-05, 5.149999999999946e-05, 5.149999999999946e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.082" endtime="20201112 12:42:34.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.077" endtime="20201112 12:42:34.084"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.087" endtime="20201112 12:42:34.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.091" endtime="20201112 12:42:34.110"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.089" endtime="20201112 12:42:34.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.085" endtime="20201112 12:42:34.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.723" endtime="20201112 12:42:34.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:33.722" endtime="20201112 12:42:34.112"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.120" endtime="20201112 12:42:34.136"></status>
</kw>
<msg timestamp="20201112 12:42:34.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.119" endtime="20201112 12:42:34.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.137" endtime="20201112 12:42:34.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.140" endtime="20201112 12:42:34.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.116" endtime="20201112 12:42:34.142"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.114" endtime="20201112 12:42:34.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.148" endtime="20201112 12:42:34.434"></status>
</kw>
<msg timestamp="20201112 12:42:34.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.147" endtime="20201112 12:42:34.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.438" endtime="20201112 12:42:34.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.446" endtime="20201112 12:42:34.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.144" endtime="20201112 12:42:34.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.143" endtime="20201112 12:42:34.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.452" level="INFO">${RESULT} = [{'time': 0.021620833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.250000000000046e-05, 'source_diff': 5.250000000000046e-05}, {'time': 0.021693764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:34.449" endtime="20201112 12:42:34.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.466" level="INFO">${ACCURACY} = {'time': [0.021620833, 0.021693764, 0.021770819, 0.021852569, 0.021923403, 0.022006694, 0.022084083, 0.022165181, 0.022232931, 0.022317486, 0.022385167, 0.022465042, 0.022537125, 0.022620431, 0.022687...</msg>
<status status="PASS" starttime="20201112 12:42:34.453" endtime="20201112 12:42:34.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.470" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.469" endtime="20201112 12:42:34.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.472" level="INFO">VALUE: [5.250000000000046e-05, 5.152800000000207e-05, 5.143000000000161e-05, 5.1457999999997284e-05, 5.145900000000023e-05, 5.144400000000118e-05, 5.143000000000161e-05, 5.145900000000023e-05, 5.1486999999999367e-05, 5.149999999999946e-05, 5.14729999999998e-05, 5.141700000000152e-05, 5.147200000000032e-05, 5.14729999999998e-05, 5.138899999999891e-05, 5.148599999999989e-05, 5.1457999999997284e-05, 5.1457999999997284e-05, 5.145800000000075e-05, 5.1457999999997284e-05, 5.1486999999999367e-05, 5.147200000000032e-05, 5.147200000000032e-05, 5.1415999999998574e-05, 5.148599999999989e-05, 5.151399999999903e-05, 5.1415999999998574e-05, 5.147200000000032e-05, 5.144400000000118e-05, 5.145899999999676e-05, 5.145800000000075e-05, 5.1443999999997714e-05, 5.148599999999989e-05, 5.148599999999989e-05, 5.145800000000075e-05, 5.138900000000238e-05, 5.145900000000023e-05, 5.145800000000075e-05, 5.145800000000075e-05, 5.143100000000109e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.145900000000023e-05, 5.145900000000023e-05, 5.144500000000066e-05, 5.145900000000023e-05, 5.1387999999999434e-05, 5.147200000000032e-05, 5.14729999999998e-05, 5.145800000000075e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.471" endtime="20201112 12:42:34.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.467" endtime="20201112 12:42:34.474"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.476" endtime="20201112 12:42:34.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.480" endtime="20201112 12:42:34.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.479" endtime="20201112 12:42:34.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.474" endtime="20201112 12:42:34.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.112" endtime="20201112 12:42:34.501"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.112" endtime="20201112 12:42:34.501"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.510" endtime="20201112 12:42:34.525"></status>
</kw>
<msg timestamp="20201112 12:42:34.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.508" endtime="20201112 12:42:34.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.526" endtime="20201112 12:42:34.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.529" endtime="20201112 12:42:34.530"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.505" endtime="20201112 12:42:34.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.503" endtime="20201112 12:42:34.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.538" endtime="20201112 12:42:34.822"></status>
</kw>
<msg timestamp="20201112 12:42:34.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.536" endtime="20201112 12:42:34.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.826" endtime="20201112 12:42:34.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.835" endtime="20201112 12:42:34.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.534" endtime="20201112 12:42:34.837"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.532" endtime="20201112 12:42:34.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:34.841" level="INFO">${RESULT} = [{'time': 0.021327375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2443999999998714e-05, 'source_diff': 5.2443999999998714e-05}, {'time': 0.021401583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:34.838" endtime="20201112 12:42:34.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:34.854" level="INFO">${ACCURACY} = {'time': [0.021327375, 0.021401583, 0.021469625, 0.021543236, 0.021620972, 0.021693319, 0.021777861, 0.021860847, 0.021937278, 0.022008736, 0.022078694, 0.022152292, 0.022226542, 0.022304861, 0.022373...</msg>
<status status="PASS" starttime="20201112 12:42:34.842" endtime="20201112 12:42:34.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.859" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201112 12:42:34.858" endtime="20201112 12:42:34.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.861" level="INFO">VALUE: [5.2443999999998714e-05, 5.152699999999913e-05, 5.147200000000032e-05, 5.144400000000118e-05, 5.148599999999989e-05, 5.1401999999999004e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.145900000000023e-05, 5.145800000000075e-05, 5.149999999999946e-05, 5.14729999999998e-05, 5.144499999999719e-05, 5.147200000000032e-05, 5.138899999999891e-05, 5.145900000000023e-05, 5.144500000000066e-05, 5.147200000000032e-05, 5.144500000000066e-05, 5.145800000000075e-05, 5.143100000000109e-05, 5.150000000000293e-05, 5.1471999999996854e-05, 5.143000000000161e-05, 5.144500000000066e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.1487000000002836e-05, 5.1429999999998144e-05, 5.1457999999997284e-05, 5.147200000000032e-05, 5.1443999999997714e-05, 5.150000000000293e-05, 5.145899999999676e-05, 5.144499999999719e-05, 5.145800000000075e-05, 5.144500000000066e-05, 5.143100000000109e-05, 5.145800000000075e-05, 5.154200000000164e-05, 5.144499999999719e-05, 5.14729999999998e-05, 5.149999999999946e-05, 5.144500000000066e-05, 5.145800000000075e-05, 5.137499999999934e-05, 5.145800000000075e-05, 5.147200000000032e-05, 5.1443999999997714e-05, 5.1415999999998574e-05]</msg>
<status status="PASS" starttime="20201112 12:42:34.860" endtime="20201112 12:42:34.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.855" endtime="20201112 12:42:34.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.871" endtime="20201112 12:42:34.874"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:34.877" endtime="20201112 12:42:34.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.875" endtime="20201112 12:42:34.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.870" endtime="20201112 12:42:34.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.502" endtime="20201112 12:42:34.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.501" endtime="20201112 12:42:34.897"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.906" endtime="20201112 12:42:34.923"></status>
</kw>
<msg timestamp="20201112 12:42:34.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.904" endtime="20201112 12:42:34.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:34.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:34.925" endtime="20201112 12:42:34.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.927" endtime="20201112 12:42:34.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.902" endtime="20201112 12:42:34.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.900" endtime="20201112 12:42:34.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:34.936" endtime="20201112 12:42:35.221"></status>
</kw>
<msg timestamp="20201112 12:42:35.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021238736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:34.934" endtime="20201112 12:42:35.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021238736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021310514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.225" endtime="20201112 12:42:35.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.233" endtime="20201112 12:42:35.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.932" endtime="20201112 12:42:35.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.930" endtime="20201112 12:42:35.236"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.240" level="INFO">${RESULT} = [{'time': 0.021310514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.177799999999804e-05, 'source_diff': 7.177799999999804e-05}, {'time': 0.021428653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:35.236" endtime="20201112 12:42:35.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.253" level="INFO">${ACCURACY} = {'time': [0.021310514, 0.021428653, 0.021540264, 0.021650903, 0.0217715, 0.021887125, 0.022010792, 0.022119417, 0.022228014, 0.022340667, 0.022451292, 0.022558931, 0.022684528, 0.022807111, 0.02291781...</msg>
<status status="PASS" starttime="20201112 12:42:35.241" endtime="20201112 12:42:35.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.257" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.256" endtime="20201112 12:42:35.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.260" level="INFO">VALUE: [7.177799999999804e-05, 7.152799999999779e-05, 7.163899999999834e-05, 7.143100000000027e-05, 7.083299999999931e-05, 7.145799999999994e-05, 7.138900000000156e-05, 7.106999999999947e-05, 7.101400000000119e-05, 7.126400000000144e-05, 7.070900000000213e-05, 7.126400000000144e-05, 7.165299999999791e-05, 7.09300000000003e-05, 7.138799999999862e-05, 7.163899999999834e-05, 7.084699999999888e-05, 7.104200000000033e-05, 7.112500000000174e-05, 7.070799999999919e-05, 7.108299999999956e-05, 7.14439999999969e-05, 7.163899999999834e-05, 7.138900000000156e-05, 7.083299999999931e-05, 7.070799999999919e-05, 7.140199999999819e-05, 7.165199999999844e-05, 7.132000000000319e-05, 7.080599999999965e-05, 7.095799999999944e-05, 7.07910000000006e-05, 7.140300000000113e-05, 7.145799999999994e-05, 7.138900000000156e-05, 7.143100000000027e-05, 7.108299999999956e-05, 7.158300000000006e-05, 7.152800000000126e-05, 7.163899999999834e-05, 7.127800000000101e-05, 7.163900000000181e-05, 7.070800000000266e-05, 7.145799999999994e-05, 7.145799999999994e-05, 7.162499999999877e-05, 7.158300000000006e-05, 7.101400000000119e-05, 7.090300000000063e-05, 7.154099999999788e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.258" endtime="20201112 12:42:35.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.254" endtime="20201112 12:42:35.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.263" endtime="20201112 12:42:35.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.267" endtime="20201112 12:42:35.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.265" endtime="20201112 12:42:35.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.262" endtime="20201112 12:42:35.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.898" endtime="20201112 12:42:35.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:34.898" endtime="20201112 12:42:35.288"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.297" endtime="20201112 12:42:35.314"></status>
</kw>
<msg timestamp="20201112 12:42:35.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.295" endtime="20201112 12:42:35.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.316" endtime="20201112 12:42:35.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.318" endtime="20201112 12:42:35.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.293" endtime="20201112 12:42:35.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.291" endtime="20201112 12:42:35.321"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.327" endtime="20201112 12:42:35.612"></status>
</kw>
<msg timestamp="20201112 12:42:35.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021375722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.325" endtime="20201112 12:42:35.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021302944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021375722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:35.616" endtime="20201112 12:42:35.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.624" endtime="20201112 12:42:35.625"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.323" endtime="20201112 12:42:35.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.321" endtime="20201112 12:42:35.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:35.630" level="INFO">${RESULT} = [{'time': 0.021375722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.277799999999904e-05, 'source_diff': 7.277799999999904e-05}, {'time': 0.021499833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:35.627" endtime="20201112 12:42:35.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:35.644" level="INFO">${ACCURACY} = {'time': [0.021375722, 0.021499833, 0.021616458, 0.021725111, 0.021846722, 0.021971333, 0.022083986, 0.022192639, 0.022318222, 0.022443819, 0.022556472, 0.022682083, 0.02278875, 0.022904375, 0.0230190...</msg>
<status status="PASS" starttime="20201112 12:42:35.631" endtime="20201112 12:42:35.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.648" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201112 12:42:35.647" endtime="20201112 12:42:35.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.651" level="INFO">VALUE: [7.277799999999904e-05, 7.252699999999931e-05, 7.265200000000291e-05, 7.25829999999976e-05, 7.245799999999747e-05, 7.18049999999977e-05, 7.234700000000038e-05, 7.197200000000001e-05, 7.238899999999909e-05, 7.17499999999989e-05, 7.252800000000226e-05, 7.25829999999976e-05, 7.223599999999983e-05, 7.227800000000201e-05, 7.257000000000097e-05, 7.258400000000054e-05, 7.173599999999933e-05, 7.21109999999997e-05, 7.175000000000237e-05, 7.183399999999979e-05, 7.166700000000095e-05, 7.232000000000072e-05, 7.213899999999884e-05, 7.190300000000163e-05, 7.240199999999919e-05, 7.258300000000106e-05, 7.232000000000072e-05, 7.190299999999816e-05, 7.208300000000056e-05, 7.258300000000106e-05, 7.212500000000274e-05, 7.201400000000219e-05, 7.194400000000087e-05, 7.258400000000054e-05, 7.238899999999909e-05, 7.219500000000059e-05, 7.212499999999927e-05, 7.213900000000231e-05, 7.220800000000069e-05, 7.237499999999952e-05, 7.170800000000019e-05, 7.238900000000256e-05, 7.222299999999973e-05, 7.177699999999856e-05, 7.187500000000249e-05, 7.216699999999798e-05, 7.238899999999909e-05, 7.227800000000201e-05, 7.2069000000001e-05, 7.26110000000002e-05]</msg>
<status status="PASS" starttime="20201112 12:42:35.649" endtime="20201112 12:42:35.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.644" endtime="20201112 12:42:35.652"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.654" endtime="20201112 12:42:35.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:35.659" endtime="20201112 12:42:35.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.657" endtime="20201112 12:42:35.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.653" endtime="20201112 12:42:35.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.289" endtime="20201112 12:42:35.679"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.289" endtime="20201112 12:42:35.679"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.688" endtime="20201112 12:42:35.705"></status>
</kw>
<msg timestamp="20201112 12:42:35.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.686" endtime="20201112 12:42:35.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:35.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:35.707" endtime="20201112 12:42:35.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.709" endtime="20201112 12:42:35.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.684" endtime="20201112 12:42:35.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.682" endtime="20201112 12:42:35.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:35.718" endtime="20201112 12:42:36.004"></status>
</kw>
<msg timestamp="20201112 12:42:36.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:35.717" endtime="20201112 12:42:36.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0213755, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021449694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:36.008" endtime="20201112 12:42:36.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.016" endtime="20201112 12:42:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.714" endtime="20201112 12:42:36.018"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.712" endtime="20201112 12:42:36.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.023" level="INFO">${RESULT} = [{'time': 0.021449694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.419399999999965e-05, 'source_diff': 7.419399999999965e-05}, {'time': 0.021573792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.019" endtime="20201112 12:42:36.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.036" level="INFO">${ACCURACY} = {'time': [0.021449694, 0.021573792, 0.021687431, 0.021796083, 0.021913681, 0.022038292, 0.022148944, 0.022272542, 0.022399139, 0.02251675, 0.022637347, 0.022752972, 0.022873611, 0.022996167, 0.0231107...</msg>
<status status="PASS" starttime="20201112 12:42:36.024" endtime="20201112 12:42:36.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.041" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.040" endtime="20201112 12:42:36.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.043" level="INFO">VALUE: [7.419399999999965e-05, 7.300000000000015e-05, 7.351400000000022e-05, 7.352700000000031e-05, 7.312500000000027e-05, 7.345900000000141e-05, 7.320800000000169e-05, 7.352799999999979e-05, 7.276399999999947e-05, 7.326399999999997e-05, 7.324999999999693e-05, 7.331899999999877e-05, 7.365299999999991e-05, 7.344500000000184e-05, 7.345900000000141e-05, 7.327799999999954e-05, 7.336100000000095e-05, 7.295799999999797e-05, 7.355599999999893e-05, 7.347200000000151e-05, 7.269399999999815e-05, 7.318000000000255e-05, 7.281899999999827e-05, 7.301399999999972e-05, 7.320799999999822e-05, 7.313899999999984e-05, 7.313899999999984e-05, 7.295800000000144e-05, 7.35829999999986e-05, 7.317999999999908e-05, 7.363900000000034e-05, 7.338900000000009e-05, 7.288800000000012e-05, 7.270900000000066e-05, 7.33049999999992e-05, 7.288899999999959e-05, 7.282000000000122e-05, 7.347200000000151e-05, 7.340299999999966e-05, 7.365199999999697e-05, 7.36249999999973e-05, 7.362500000000077e-05, 7.358300000000206e-05, 7.308400000000104e-05, 7.355599999999893e-05, 7.284800000000036e-05, 7.280600000000165e-05, 7.359699999999816e-05, 7.302799999999929e-05, 7.284700000000088e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.042" endtime="20201112 12:42:36.044"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.037" endtime="20201112 12:42:36.044"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.046" endtime="20201112 12:42:36.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.051" endtime="20201112 12:42:36.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.049" endtime="20201112 12:42:36.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.045" endtime="20201112 12:42:36.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.680" endtime="20201112 12:42:36.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:35.680" endtime="20201112 12:42:36.071"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.080" endtime="20201112 12:42:36.097"></status>
</kw>
<msg timestamp="20201112 12:42:36.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.078" endtime="20201112 12:42:36.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.099" endtime="20201112 12:42:36.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.101" endtime="20201112 12:42:36.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.076" endtime="20201112 12:42:36.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.074" endtime="20201112 12:42:36.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.110" endtime="20201112 12:42:36.395"></status>
</kw>
<msg timestamp="20201112 12:42:36.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.108" endtime="20201112 12:42:36.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.399" endtime="20201112 12:42:36.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.407" endtime="20201112 12:42:36.408"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.106" endtime="20201112 12:42:36.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.104" endtime="20201112 12:42:36.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.413" level="INFO">${RESULT} = [{'time': 0.021406431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.552800000000179e-05, 'source_diff': 7.552800000000179e-05}, {'time': 0.021516556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:36.410" endtime="20201112 12:42:36.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.426" level="INFO">${ACCURACY} = {'time': [0.021406431, 0.021516556, 0.021630208, 0.021742861, 0.021863444, 0.021980097, 0.022100681, 0.022228236, 0.022338958, 0.0224645, 0.022577139, 0.022692792, 0.022807403, 0.022919042, 0.02302869...</msg>
<status status="PASS" starttime="20201112 12:42:36.414" endtime="20201112 12:42:36.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.431" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.430" endtime="20201112 12:42:36.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.433" level="INFO">VALUE: [7.552800000000179e-05, 7.368099999999905e-05, 7.394400000000287e-05, 7.38049999999997e-05, 7.445799999999947e-05, 7.37500000000009e-05, 7.440300000000066e-05, 7.39439999999994e-05, 7.402699999999734e-05, 7.427799999999707e-05, 7.40829999999991e-05, 7.416699999999998e-05, 7.420899999999869e-05, 7.39309999999993e-05, 7.370799999999872e-05, 7.404099999999691e-05, 7.39309999999993e-05, 7.390300000000016e-05, 7.463900000000134e-05, 7.440300000000066e-05, 7.419499999999912e-05, 7.42639999999975e-05, 7.413900000000084e-05, 7.401399999999725e-05, 7.422200000000226e-05, 7.420799999999922e-05, 7.46249999999983e-05, 7.388800000000112e-05, 7.46379999999984e-05, 7.388900000000059e-05, 7.436099999999848e-05, 7.463899999999787e-05, 7.438900000000109e-05, 7.395799999999897e-05, 7.46249999999983e-05, 7.399999999999768e-05, 7.40829999999991e-05, 7.390300000000016e-05, 7.388899999999712e-05, 7.418000000000008e-05, 7.376400000000047e-05, 7.41249999999978e-05, 7.394499999999887e-05, 7.426400000000097e-05, 7.438900000000109e-05, 7.412500000000127e-05, 7.418100000000302e-05, 7.420900000000216e-05, 7.423600000000183e-05, 7.408399999999857e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.432" endtime="20201112 12:42:36.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.427" endtime="20201112 12:42:36.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.437" endtime="20201112 12:42:36.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.442" endtime="20201112 12:42:36.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.440" endtime="20201112 12:42:36.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.435" endtime="20201112 12:42:36.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.072" endtime="20201112 12:42:36.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.072" endtime="20201112 12:42:36.463"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.471" endtime="20201112 12:42:36.489"></status>
</kw>
<msg timestamp="20201112 12:42:36.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.470" endtime="20201112 12:42:36.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.490" endtime="20201112 12:42:36.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.493" endtime="20201112 12:42:36.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.467" endtime="20201112 12:42:36.495"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.465" endtime="20201112 12:42:36.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.502" endtime="20201112 12:42:36.787"></status>
</kw>
<msg timestamp="20201112 12:42:36.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021294264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.500" endtime="20201112 12:42:36.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021294264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.791" endtime="20201112 12:42:36.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.799" endtime="20201112 12:42:36.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.498" endtime="20201112 12:42:36.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.496" endtime="20201112 12:42:36.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:36.806" level="INFO">${RESULT} = [{'time': 0.021370528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.62639999999995e-05, 'source_diff': 7.62639999999995e-05}, {'time': 0.021485653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:36.802" endtime="20201112 12:42:36.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:36.819" level="INFO">${ACCURACY} = {'time': [0.021370528, 0.021485653, 0.02160425, 0.021716875, 0.0218385, 0.021957125, 0.022081694, 0.022201361, 0.022318931, 0.022441611, 0.022561167, 0.022688736, 0.022798361, 0.022925944, 0.023039583...</msg>
<status status="PASS" starttime="20201112 12:42:36.807" endtime="20201112 12:42:36.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.823" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201112 12:42:36.822" endtime="20201112 12:42:36.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.826" level="INFO">VALUE: [7.62639999999995e-05, 7.544500000000037e-05, 7.4763999999998e-05, 7.56249999999993e-05, 7.54440000000009e-05, 7.506900000000052e-05, 7.51249999999988e-05, 7.517999999999761e-05, 7.532000000000025e-05, 7.495799999999997e-05, 7.513899999999837e-05, 7.468000000000058e-05, 7.466700000000048e-05, 7.518000000000108e-05, 7.50830000000001e-05, 7.483399999999932e-05, 7.505500000000095e-05, 7.520800000000022e-05, 7.488899999999812e-05, 7.469400000000015e-05, 7.55830000000006e-05, 7.54310000000008e-05, 7.505599999999696e-05, 7.530499999999773e-05, 7.487499999999855e-05, 7.500000000000215e-05, 7.541599999999829e-05, 7.505500000000095e-05, 7.53890000000021e-05, 7.537499999999905e-05, 7.544500000000037e-05, 7.507e-05, 7.501399999999825e-05, 7.497199999999954e-05, 7.473599999999886e-05, 7.533399999999982e-05, 7.488900000000159e-05, 7.504200000000086e-05, 7.518099999999708e-05, 7.551399999999875e-05, 7.538899999999862e-05, 7.544399999999743e-05, 7.520800000000022e-05, 7.519400000000065e-05, 7.53189999999973e-05, 7.562500000000277e-05, 7.55700000000005e-05, 7.498599999999911e-05, 7.488900000000159e-05, 7.502799999999782e-05]</msg>
<status status="PASS" starttime="20201112 12:42:36.824" endtime="20201112 12:42:36.826"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.820" endtime="20201112 12:42:36.827"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.829" endtime="20201112 12:42:36.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:36.833" endtime="20201112 12:42:36.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.831" endtime="20201112 12:42:36.853"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.828" endtime="20201112 12:42:36.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.464" endtime="20201112 12:42:36.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.463" endtime="20201112 12:42:36.854"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.863" endtime="20201112 12:42:36.880"></status>
</kw>
<msg timestamp="20201112 12:42:36.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.861" endtime="20201112 12:42:36.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:36.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:36.882" endtime="20201112 12:42:36.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.884" endtime="20201112 12:42:36.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.859" endtime="20201112 12:42:36.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.857" endtime="20201112 12:42:36.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:36.893" endtime="20201112 12:42:37.181"></status>
</kw>
<msg timestamp="20201112 12:42:37.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021245097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:36.891" endtime="20201112 12:42:37.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021245097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.186" endtime="20201112 12:42:37.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.194" endtime="20201112 12:42:37.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.889" endtime="20201112 12:42:37.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.887" endtime="20201112 12:42:37.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.200" level="INFO">${RESULT} = [{'time': 0.021321667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.656999999999803e-05, 'source_diff': 7.656999999999803e-05}, {'time': 0.021435792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.197" endtime="20201112 12:42:37.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.213" level="INFO">${ACCURACY} = {'time': [0.021321667, 0.021435792, 0.021565375, 0.021678028, 0.021796625, 0.021923222, 0.022037847, 0.022160458, 0.022279153, 0.022409694, 0.022523375, 0.022653986, 0.022778528, 0.022904125, 0.023034...</msg>
<status status="PASS" starttime="20201112 12:42:37.201" endtime="20201112 12:42:37.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.218" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.217" endtime="20201112 12:42:37.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.220" level="INFO">VALUE: [7.656999999999803e-05, 7.631999999999778e-05, 7.576400000000247e-05, 7.597199999999707e-05, 7.587499999999955e-05, 7.601399999999925e-05, 7.636100000000048e-05, 7.59440000000014e-05, 7.655599999999846e-05, 7.656900000000202e-05, 7.587500000000302e-05, 7.633300000000134e-05, 7.594500000000087e-05, 7.599999999999968e-05, 7.648600000000061e-05, 7.633300000000134e-05, 7.65700000000015e-05, 7.659700000000116e-05, 7.588899999999912e-05, 7.617999999999861e-05, 7.627799999999907e-05, 7.577799999999857e-05, 7.63189999999983e-05, 7.573599999999986e-05, 7.663799999999693e-05, 7.647200000000104e-05, 7.605600000000143e-05, 7.574999999999943e-05, 7.663899999999987e-05, 7.60830000000011e-05, 7.583299999999737e-05, 7.616600000000251e-05, 7.60830000000011e-05, 7.595800000000097e-05, 7.59440000000014e-05, 7.619499999999765e-05, 7.655600000000193e-05, 7.661100000000073e-05, 7.626400000000297e-05, 7.569500000000062e-05, 7.651399999999975e-05, 7.61249999999998e-05, 7.648600000000061e-05, 7.574999999999943e-05, 7.580599999999771e-05, 7.652799999999932e-05, 7.597200000000054e-05, 7.655499999999898e-05, 7.629100000000263e-05, 7.595900000000044e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.219" endtime="20201112 12:42:37.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.214" endtime="20201112 12:42:37.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.224" endtime="20201112 12:42:37.226"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.228" endtime="20201112 12:42:37.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.226" endtime="20201112 12:42:37.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.222" endtime="20201112 12:42:37.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.855" endtime="20201112 12:42:37.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:36.854" endtime="20201112 12:42:37.249"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.257" endtime="20201112 12:42:37.275"></status>
</kw>
<msg timestamp="20201112 12:42:37.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.256" endtime="20201112 12:42:37.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.277" endtime="20201112 12:42:37.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.279" endtime="20201112 12:42:37.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.253" endtime="20201112 12:42:37.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.251" endtime="20201112 12:42:37.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.288" endtime="20201112 12:42:37.573"></status>
</kw>
<msg timestamp="20201112 12:42:37.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.286" endtime="20201112 12:42:37.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.577" endtime="20201112 12:42:37.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.585" endtime="20201112 12:42:37.587"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.284" endtime="20201112 12:42:37.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.282" endtime="20201112 12:42:37.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.592" level="INFO">${RESULT} = [{'time': 0.021378528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.823600000000236e-05, 'source_diff': 7.823600000000236e-05}, {'time': 0.021496583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.589" endtime="20201112 12:42:37.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.605" level="INFO">${ACCURACY} = {'time': [0.021378528, 0.021496583, 0.021618167, 0.021738778, 0.021859375, 0.021973972, 0.022102542, 0.022222181, 0.022337764, 0.022462375, 0.022583958, 0.022699583, 0.022813194, 0.022941778, 0.023072...</msg>
<status status="PASS" starttime="20201112 12:42:37.593" endtime="20201112 12:42:37.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.609" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201112 12:42:37.608" endtime="20201112 12:42:37.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.612" level="INFO">VALUE: [7.823600000000236e-05, 7.75969999999987e-05, 7.736100000000148e-05, 7.719499999999865e-05, 7.693099999999883e-05, 7.761100000000173e-05, 7.754199999999989e-05, 7.697300000000101e-05, 7.673600000000086e-05, 7.733299999999887e-05, 7.68050000000027e-05, 7.687500000000055e-05, 7.711099999999776e-05, 7.6764e-05, 7.733300000000234e-05, 7.71250000000008e-05, 7.6764e-05, 7.68189999999988e-05, 7.748600000000161e-05, 7.679099999999967e-05, 7.761099999999826e-05, 7.702799999999982e-05, 7.69029999999997e-05, 7.737499999999758e-05, 7.693000000000283e-05, 7.698600000000111e-05, 7.669399999999868e-05, 7.73189999999993e-05, 7.683300000000184e-05, 7.729199999999964e-05, 7.705599999999896e-05, 7.697299999999754e-05, 7.72640000000005e-05, 7.73189999999993e-05, 7.76250000000013e-05, 7.763900000000087e-05, 7.755599999999946e-05, 7.700000000000068e-05, 7.693099999999883e-05, 7.686100000000098e-05, 7.75830000000026e-05, 7.701400000000025e-05, 7.695800000000197e-05, 7.686200000000046e-05, 7.74449999999989e-05, 7.693000000000283e-05, 7.669399999999868e-05, 7.709700000000166e-05, 7.749999999999771e-05, 7.683299999999837e-05]</msg>
<status status="PASS" starttime="20201112 12:42:37.611" endtime="20201112 12:42:37.613"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.606" endtime="20201112 12:42:37.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.615" endtime="20201112 12:42:37.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:37.619" endtime="20201112 12:42:37.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.618" endtime="20201112 12:42:37.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.614" endtime="20201112 12:42:37.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.250" endtime="20201112 12:42:37.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.249" endtime="20201112 12:42:37.640"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.649" endtime="20201112 12:42:37.667"></status>
</kw>
<msg timestamp="20201112 12:42:37.667" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.647" endtime="20201112 12:42:37.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:37.668" endtime="20201112 12:42:37.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.670" endtime="20201112 12:42:37.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.645" endtime="20201112 12:42:37.672"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.643" endtime="20201112 12:42:37.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.679" endtime="20201112 12:42:37.965"></status>
</kw>
<msg timestamp="20201112 12:42:37.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.678" endtime="20201112 12:42:37.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:37.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021330722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021410236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:37.969" endtime="20201112 12:42:37.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:37.977" endtime="20201112 12:42:37.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.675" endtime="20201112 12:42:37.979"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.673" endtime="20201112 12:42:37.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:37.984" level="INFO">${RESULT} = [{'time': 0.021410236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.951399999999928e-05, 'source_diff': 7.951399999999928e-05}, {'time': 0.021533347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:37.981" endtime="20201112 12:42:37.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:37.997" level="INFO">${ACCURACY} = {'time': [0.021410236, 0.021533347, 0.021645972, 0.021763611, 0.021881222, 0.022009792, 0.022124444, 0.022255986, 0.022371597, 0.022497194, 0.022626764, 0.022743389, 0.022857014, 0.022979681, 0.023103...</msg>
<status status="PASS" starttime="20201112 12:42:37.985" endtime="20201112 12:42:37.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.002" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.001" endtime="20201112 12:42:38.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.004" level="INFO">VALUE: [7.951399999999928e-05, 7.858300000000012e-05, 7.819400000000018e-05, 7.783299999999937e-05, 7.830499999999727e-05, 7.786099999999851e-05, 7.855500000000099e-05, 7.804199999999692e-05, 7.780500000000024e-05, 7.850000000000218e-05, 7.855600000000046e-05, 7.837499999999858e-05, 7.769499999999915e-05, 7.849999999999871e-05, 7.804200000000039e-05, 7.830600000000021e-05, 7.827800000000107e-05, 7.820799999999975e-05, 7.816600000000104e-05, 7.852800000000132e-05, 7.818100000000008e-05, 7.768000000000011e-05, 7.779200000000014e-05, 7.768000000000011e-05, 7.780599999999971e-05, 7.802800000000082e-05, 7.861099999999926e-05, 7.806900000000006e-05, 7.838799999999868e-05, 7.861100000000273e-05, 7.786099999999851e-05, 7.834699999999944e-05, 7.815300000000094e-05, 7.823599999999889e-05, 7.831999999999978e-05, 7.811099999999876e-05, 7.825000000000193e-05, 7.829200000000064e-05, 7.816600000000104e-05, 7.833399999999935e-05, 7.812499999999833e-05, 7.861099999999926e-05, 7.812499999999833e-05, 7.776399999999753e-05, 7.822200000000279e-05, 7.779100000000067e-05, 7.859799999999917e-05, 7.816700000000051e-05, 7.804100000000092e-05, 7.82229999999988e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.003" endtime="20201112 12:42:38.005"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.998" endtime="20201112 12:42:38.005"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.008" endtime="20201112 12:42:38.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.013" endtime="20201112 12:42:38.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.011" endtime="20201112 12:42:38.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.006" endtime="20201112 12:42:38.033"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.641" endtime="20201112 12:42:38.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:37.641" endtime="20201112 12:42:38.034"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.042" endtime="20201112 12:42:38.060"></status>
</kw>
<msg timestamp="20201112 12:42:38.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.041" endtime="20201112 12:42:38.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.061" endtime="20201112 12:42:38.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.064" endtime="20201112 12:42:38.065"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.038" endtime="20201112 12:42:38.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.036" endtime="20201112 12:42:38.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.072" endtime="20201112 12:42:38.357"></status>
</kw>
<msg timestamp="20201112 12:42:38.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021304722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021385208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.071" endtime="20201112 12:42:38.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021304722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021385208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.362" endtime="20201112 12:42:38.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.370" endtime="20201112 12:42:38.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.069" endtime="20201112 12:42:38.372"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.067" endtime="20201112 12:42:38.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.376" level="INFO">${RESULT} = [{'time': 0.021385208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.048599999999767e-05, 'source_diff': 8.048599999999767e-05}, {'time': 0.021515306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.373" endtime="20201112 12:42:38.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.389" level="INFO">${ACCURACY} = {'time': [0.021385208, 0.021515306, 0.021644875, 0.021769458, 0.021889056, 0.022018625, 0.022147181, 0.022263792, 0.022386417, 0.022505, 0.022632583, 0.022763153, 0.022892708, 0.023008319, 0.023132917...</msg>
<status status="PASS" starttime="20201112 12:42:38.377" endtime="20201112 12:42:38.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.394" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.393" endtime="20201112 12:42:38.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.396" level="INFO">VALUE: [8.048599999999767e-05, 7.961199999999974e-05, 7.899999999999921e-05, 7.96109999999968e-05, 7.929200000000164e-05, 7.897200000000007e-05, 7.954199999999842e-05, 7.929200000000164e-05, 7.919499999999718e-05, 7.912499999999933e-05, 7.873600000000286e-05, 7.943100000000133e-05, 7.948600000000014e-05, 7.891599999999832e-05, 7.887499999999908e-05, 7.874999999999896e-05, 7.893100000000083e-05, 7.937499999999958e-05, 7.927800000000207e-05, 7.923599999999989e-05, 7.90970000000002e-05, 7.900000000000268e-05, 7.906900000000106e-05, 7.8764000000002e-05, 7.942999999999839e-05, 7.95970000000007e-05, 7.879100000000167e-05, 7.969500000000115e-05, 7.949999999999971e-05, 7.887499999999908e-05, 7.943000000000186e-05, 7.872199999999982e-05, 7.874999999999896e-05, 7.924999999999946e-05, 7.962499999999983e-05, 7.891599999999832e-05, 7.941700000000176e-05, 7.88190000000008e-05, 7.948600000000014e-05, 7.919500000000065e-05, 7.897200000000007e-05, 7.956899999999809e-05, 7.893000000000136e-05, 7.961199999999974e-05, 7.874999999999896e-05, 7.887500000000255e-05, 7.88190000000008e-05, 7.93190000000013e-05, 7.925000000000293e-05, 7.918099999999761e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.395" endtime="20201112 12:42:38.397"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.390" endtime="20201112 12:42:38.397"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.400" endtime="20201112 12:42:38.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.404" endtime="20201112 12:42:38.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.402" endtime="20201112 12:42:38.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.398" endtime="20201112 12:42:38.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.035" endtime="20201112 12:42:38.424"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.034" endtime="20201112 12:42:38.425"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.433" endtime="20201112 12:42:38.451"></status>
</kw>
<msg timestamp="20201112 12:42:38.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.432" endtime="20201112 12:42:38.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.452" endtime="20201112 12:42:38.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.455" endtime="20201112 12:42:38.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.429" endtime="20201112 12:42:38.457"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.427" endtime="20201112 12:42:38.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.464" endtime="20201112 12:42:38.749"></status>
</kw>
<msg timestamp="20201112 12:42:38.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.462" endtime="20201112 12:42:38.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.753" endtime="20201112 12:42:38.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.761" endtime="20201112 12:42:38.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.460" endtime="20201112 12:42:38.763"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.458" endtime="20201112 12:42:38.764"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:38.768" level="INFO">${RESULT} = [{'time': 0.021344194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.143000000000039e-05, 'source_diff': 8.143000000000039e-05}, {'time': 0.021471292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:38.764" endtime="20201112 12:42:38.768"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:38.781" level="INFO">${ACCURACY} = {'time': [0.021344194, 0.021471292, 0.021586903, 0.0217105, 0.021838069, 0.021962681, 0.022089278, 0.022212861, 0.022331528, 0.022457083, 0.022573708, 0.022693319, 0.022826875, 0.022951486, 0.02307308...</msg>
<status status="PASS" starttime="20201112 12:42:38.769" endtime="20201112 12:42:38.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.786" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201112 12:42:38.784" endtime="20201112 12:42:38.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.788" level="INFO">VALUE: [8.143000000000039e-05, 8.004199999999892e-05, 8.01389999999999e-05, 7.974999999999996e-05, 7.998600000000064e-05, 8.000000000000021e-05, 8.045900000000147e-05, 7.973600000000039e-05, 8.011100000000076e-05, 7.981899999999834e-05, 8.054099999999995e-05, 8.023600000000089e-05, 7.983300000000138e-05, 8.044399999999896e-05, 7.994400000000193e-05, 8.023600000000089e-05, 7.969400000000168e-05, 7.974999999999996e-05, 7.973600000000039e-05, 8.040299999999972e-05, 8.040199999999678e-05, 7.970800000000125e-05, 8.061100000000126e-05, 8.047200000000157e-05, 7.990299999999922e-05, 7.990299999999922e-05, 7.97779999999991e-05, 8.055499999999952e-05, 7.997200000000107e-05, 8.00970000000012e-05, 7.969399999999821e-05, 8.030599999999874e-05, 8.000000000000021e-05, 8.02909999999997e-05, 8.059800000000117e-05, 7.998600000000064e-05, 8.030599999999874e-05, 8.015300000000294e-05, 8.005499999999902e-05, 8.029199999999917e-05, 7.994499999999793e-05, 7.990299999999922e-05, 7.997200000000107e-05, 7.986100000000051e-05, 7.984700000000094e-05, 8.002800000000282e-05, 8.048599999999767e-05, 7.990299999999922e-05, 8.048600000000114e-05, 8.031899999999884e-05]</msg>
<status status="PASS" starttime="20201112 12:42:38.787" endtime="20201112 12:42:38.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.782" endtime="20201112 12:42:38.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.792" endtime="20201112 12:42:38.794"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:38.796" endtime="20201112 12:42:38.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.795" endtime="20201112 12:42:38.816"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.790" endtime="20201112 12:42:38.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.426" endtime="20201112 12:42:38.817"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.425" endtime="20201112 12:42:38.817"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.826" endtime="20201112 12:42:38.844"></status>
</kw>
<msg timestamp="20201112 12:42:38.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.824" endtime="20201112 12:42:38.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:38.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:38.845" endtime="20201112 12:42:38.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.848" endtime="20201112 12:42:38.849"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.822" endtime="20201112 12:42:38.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.820" endtime="20201112 12:42:38.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:38.856" endtime="20201112 12:42:39.141"></status>
</kw>
<msg timestamp="20201112 12:42:39.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021304972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021387083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:38.855" endtime="20201112 12:42:39.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021304972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021387083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.145" endtime="20201112 12:42:39.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.153" endtime="20201112 12:42:39.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.852" endtime="20201112 12:42:39.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.851" endtime="20201112 12:42:39.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.159" level="INFO">${RESULT} = [{'time': 0.021387083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.211100000000277e-05, 'source_diff': 8.211100000000277e-05}, {'time': 0.021521139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:39.156" endtime="20201112 12:42:39.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.173" level="INFO">${ACCURACY} = {'time': [0.021387083, 0.021521139, 0.021647778, 0.021766292, 0.021890889, 0.022014458, 0.022137042, 0.022255708, 0.022386208, 0.022503778, 0.022623389, 0.022756903, 0.022885486, 0.023018028, 0.023143...</msg>
<status status="PASS" starttime="20201112 12:42:39.160" endtime="20201112 12:42:39.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.177" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.176" endtime="20201112 12:42:39.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.179" level="INFO">VALUE: [8.211100000000277e-05, 8.152800000000085e-05, 8.11109999999983e-05, 8.15979999999987e-05, 8.104199999999992e-05, 8.066600000000007e-05, 8.122299999999832e-05, 8.123599999999842e-05, 8.094399999999946e-05, 8.109699999999873e-05, 8.104199999999992e-05, 8.062499999999737e-05, 8.098600000000164e-05, 8.120899999999875e-05, 8.068000000000311e-05, 8.143099999999986e-05, 8.12910000000007e-05, 8.150000000000171e-05, 8.074999999999749e-05, 8.116600000000057e-05, 8.095799999999903e-05, 8.07780000000001e-05, 8.092999999999989e-05, 8.125000000000146e-05, 8.108399999999863e-05, 8.140300000000072e-05, 8.143099999999986e-05, 8.133399999999888e-05, 8.152800000000085e-05, 8.11109999999983e-05, 8.147200000000257e-05, 8.116600000000057e-05, 8.086100000000151e-05, 8.072199999999835e-05, 8.081999999999881e-05, 8.12780000000006e-05, 8.084699999999848e-05, 8.152800000000085e-05, 8.080599999999924e-05, 8.147299999999857e-05, 8.093099999999936e-05, 8.073600000000139e-05, 8.086200000000099e-05, 8.130599999999974e-05, 8.07780000000001e-05, 8.097200000000207e-05, 8.066600000000007e-05, 8.136100000000202e-05, 8.090300000000022e-05, 8.076400000000053e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.178" endtime="20201112 12:42:39.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.173" endtime="20201112 12:42:39.181"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.183" endtime="20201112 12:42:39.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.187" endtime="20201112 12:42:39.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.185" endtime="20201112 12:42:39.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.181" endtime="20201112 12:42:39.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.818" endtime="20201112 12:42:39.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:38.818" endtime="20201112 12:42:39.208"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.216" endtime="20201112 12:42:39.234"></status>
</kw>
<msg timestamp="20201112 12:42:39.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.215" endtime="20201112 12:42:39.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.236" endtime="20201112 12:42:39.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.238" endtime="20201112 12:42:39.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.212" endtime="20201112 12:42:39.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.210" endtime="20201112 12:42:39.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.247" endtime="20201112 12:42:39.532"></status>
</kw>
<msg timestamp="20201112 12:42:39.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021271444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.245" endtime="20201112 12:42:39.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021271444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.537" endtime="20201112 12:42:39.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.545" endtime="20201112 12:42:39.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.243" endtime="20201112 12:42:39.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.241" endtime="20201112 12:42:39.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.551" level="INFO">${RESULT} = [{'time': 0.021353986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.254199999999795e-05, 'source_diff': 8.254199999999795e-05}, {'time': 0.021489042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:39.548" endtime="20201112 12:42:39.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.564" level="INFO">${ACCURACY} = {'time': [0.021353986, 0.021489042, 0.021617681, 0.021747236, 0.021880819, 0.022004444, 0.022139042, 0.022261667, 0.022394278, 0.022521875, 0.022649472, 0.022769097, 0.022892736, 0.023012347, 0.023147...</msg>
<status status="PASS" starttime="20201112 12:42:39.552" endtime="20201112 12:42:39.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.569" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.568" endtime="20201112 12:42:39.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.571" level="INFO">VALUE: [8.254199999999795e-05, 8.205600000000049e-05, 8.240299999999826e-05, 8.26109999999998e-05, 8.220800000000028e-05, 8.226300000000256e-05, 8.201400000000178e-05, 8.219500000000018e-05, 8.207000000000006e-05, 8.248599999999967e-05, 8.236099999999955e-05, 8.258299999999719e-05, 8.195800000000003e-05, 8.23049999999978e-05, 8.240300000000172e-05, 8.186100000000252e-05, 8.259700000000023e-05, 8.205600000000049e-05, 8.236099999999955e-05, 8.248599999999967e-05, 8.243100000000086e-05, 8.259700000000023e-05, 8.26109999999998e-05, 8.199999999999874e-05, 8.179200000000067e-05, 8.223599999999942e-05, 8.236099999999955e-05, 8.166699999999708e-05, 8.199999999999874e-05, 8.195800000000003e-05, 8.223599999999942e-05, 8.259700000000023e-05, 8.236099999999955e-05, 8.244499999999697e-05, 8.224999999999899e-05, 8.2152000000002e-05, 8.261100000000327e-05, 8.236099999999955e-05, 8.206899999999712e-05, 8.207000000000006e-05, 8.249999999999924e-05, 8.204199999999745e-05, 8.169499999999968e-05, 8.218000000000114e-05, 8.190299999999776e-05, 8.208300000000016e-05, 8.223599999999942e-05, 8.212499999999887e-05, 8.226400000000203e-05, 8.205500000000102e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.570" endtime="20201112 12:42:39.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.565" endtime="20201112 12:42:39.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.575" endtime="20201112 12:42:39.578"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.580" endtime="20201112 12:42:39.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.578" endtime="20201112 12:42:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.573" endtime="20201112 12:42:39.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.209" endtime="20201112 12:42:39.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.208" endtime="20201112 12:42:39.601"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.609" endtime="20201112 12:42:39.627"></status>
</kw>
<msg timestamp="20201112 12:42:39.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.608" endtime="20201112 12:42:39.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:39.629" endtime="20201112 12:42:39.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.631" endtime="20201112 12:42:39.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.605" endtime="20201112 12:42:39.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.603" endtime="20201112 12:42:39.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.640" endtime="20201112 12:42:39.925"></status>
</kw>
<msg timestamp="20201112 12:42:39.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021352236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.638" endtime="20201112 12:42:39.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021352236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021436722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:39.929" endtime="20201112 12:42:39.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.937" endtime="20201112 12:42:39.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.636" endtime="20201112 12:42:39.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.634" endtime="20201112 12:42:39.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:39.943" level="INFO">${RESULT} = [{'time': 0.021436722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.44859999999982e-05, 'source_diff': 8.44859999999982e-05}, {'time': 0.02157375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:42:39.940" endtime="20201112 12:42:39.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:39.957" level="INFO">${ACCURACY} = {'time': [0.021436722, 0.02157375, 0.021700319, 0.021835875, 0.021955472, 0.022087, 0.022212597, 0.022336222, 0.022470764, 0.022608306, 0.022735931, 0.022866514, 0.022988069, 0.023125611, 0.023250194,...</msg>
<status status="PASS" starttime="20201112 12:42:39.944" endtime="20201112 12:42:39.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.961" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201112 12:42:39.960" endtime="20201112 12:42:39.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:39.963" level="INFO">VALUE: [8.44859999999982e-05, 8.347199999999763e-05, 8.302699999999941e-05, 8.309700000000073e-05, 8.309700000000073e-05, 8.290299999999876e-05, 8.268000000000164e-05, 8.351399999999981e-05, 8.293100000000136e-05, 8.34170000000023e-05, 8.301399999999931e-05, 8.302800000000235e-05, 8.270800000000078e-05, 8.322200000000085e-05, 8.352699999999991e-05, 8.284799999999995e-05, 8.316699999999858e-05, 8.306999999999759e-05, 8.275000000000296e-05, 8.290199999999928e-05, 8.272200000000035e-05, 8.320799999999781e-05, 8.31659999999991e-05, 8.357000000000156e-05, 8.341600000000282e-05, 8.330599999999827e-05, 8.32910000000027e-05, 8.35980000000007e-05, 8.281900000000134e-05, 8.302700000000288e-05, 8.288900000000265e-05, 8.298600000000017e-05, 8.348600000000067e-05, 8.27780000000021e-05, 8.273599999999992e-05, 8.336100000000055e-05, 8.352699999999991e-05, 8.26390000000024e-05, 8.348600000000067e-05, 8.277700000000263e-05, 8.277699999999916e-05, 8.300000000000321e-05, 8.302699999999941e-05, 8.356999999999809e-05, 8.334700000000098e-05, 8.354200000000242e-05, 8.347199999999763e-05, 8.273599999999992e-05, 8.320900000000075e-05, 8.359700000000123e-05]</msg>
<status status="PASS" starttime="20201112 12:42:39.962" endtime="20201112 12:42:39.970"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.957" endtime="20201112 12:42:39.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:39.973" endtime="20201112 12:42:39.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:39.977" endtime="20201112 12:42:39.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.975" endtime="20201112 12:42:39.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.971" endtime="20201112 12:42:39.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.602" endtime="20201112 12:42:39.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.601" endtime="20201112 12:42:39.998"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.006" endtime="20201112 12:42:40.024"></status>
</kw>
<msg timestamp="20201112 12:42:40.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.005" endtime="20201112 12:42:40.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.026" endtime="20201112 12:42:40.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.028" endtime="20201112 12:42:40.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.002" endtime="20201112 12:42:40.030"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.000" endtime="20201112 12:42:40.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.037" endtime="20201112 12:42:40.323"></status>
</kw>
<msg timestamp="20201112 12:42:40.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.036" endtime="20201112 12:42:40.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021448181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021533653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:40.327" endtime="20201112 12:42:40.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.335" endtime="20201112 12:42:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.033" endtime="20201112 12:42:40.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.031" endtime="20201112 12:42:40.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.342" level="INFO">${RESULT} = [{'time': 0.021533653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.547199999999963e-05, 'source_diff': 8.547199999999963e-05}, {'time': 0.021654778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:40.339" endtime="20201112 12:42:40.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.355" level="INFO">${ACCURACY} = {'time': [0.021533653, 0.021654778, 0.021787375, 0.021918931, 0.0220545, 0.022187069, 0.022311667, 0.022443292, 0.022561861, 0.022686472, 0.022817042, 0.022940653, 0.023072208, 0.023207792, 0.02332937...</msg>
<status status="PASS" starttime="20201112 12:42:40.343" endtime="20201112 12:42:40.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.359" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.358" endtime="20201112 12:42:40.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.362" level="INFO">VALUE: [8.547199999999963e-05, 8.405599999999902e-05, 8.456899999999962e-05, 8.46119999999978e-05, 8.436100000000155e-05, 8.391599999999985e-05, 8.384800000000095e-05, 8.434800000000145e-05, 8.395799999999856e-05, 8.397199999999813e-05, 8.372300000000082e-05, 8.399999999999727e-05, 8.441600000000035e-05, 8.425000000000099e-05, 8.459699999999876e-05, 8.398600000000117e-05, 8.404199999999945e-05, 8.451299999999787e-05, 8.422200000000185e-05, 8.430599999999927e-05, 8.406899999999912e-05, 8.366699999999908e-05, 8.459699999999876e-05, 8.393000000000289e-05, 8.398600000000117e-05, 8.46110000000018e-05, 8.404199999999945e-05, 8.381999999999834e-05, 8.386099999999758e-05, 8.391599999999985e-05, 8.373600000000092e-05, 8.3846999999998e-05, 8.398600000000117e-05, 8.404099999999998e-05, 8.398600000000117e-05, 8.404199999999945e-05, 8.422199999999838e-05, 8.436100000000155e-05, 8.461099999999833e-05, 8.404199999999945e-05, 8.445799999999906e-05, 8.390299999999976e-05, 8.36529999999995e-05, 8.425000000000099e-05, 8.43469999999985e-05, 8.404200000000292e-05, 8.438899999999722e-05, 8.390299999999976e-05, 8.384700000000148e-05, 8.434700000000198e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.360" endtime="20201112 12:42:40.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.356" endtime="20201112 12:42:40.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.365" endtime="20201112 12:42:40.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.369" endtime="20201112 12:42:40.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.368" endtime="20201112 12:42:40.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.364" endtime="20201112 12:42:40.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.999" endtime="20201112 12:42:40.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:39.998" endtime="20201112 12:42:40.390"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.399" endtime="20201112 12:42:40.417"></status>
</kw>
<msg timestamp="20201112 12:42:40.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.397" endtime="20201112 12:42:40.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.418" endtime="20201112 12:42:40.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.421" endtime="20201112 12:42:40.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.395" endtime="20201112 12:42:40.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.393" endtime="20201112 12:42:40.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.430" endtime="20201112 12:42:40.714"></status>
</kw>
<msg timestamp="20201112 12:42:40.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021355208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:40.428" endtime="20201112 12:42:40.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212695, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021355208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:42:40.718" endtime="20201112 12:42:40.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.726" endtime="20201112 12:42:40.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.425" endtime="20201112 12:42:40.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.424" endtime="20201112 12:42:40.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:40.732" level="INFO">${RESULT} = [{'time': 0.021355208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.570800000000031e-05, 'source_diff': 8.570800000000031e-05}, {'time': 0.02148725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:42:40.729" endtime="20201112 12:42:40.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:40.746" level="INFO">${ACCURACY} = {'time': [0.021355208, 0.02148725, 0.021625792, 0.021763333, 0.021883944, 0.0220135, 0.022151042, 0.022278639, 0.022401264, 0.022533792, 0.022670319, 0.022806889, 0.022929472, 0.023060056, 0.023182639...</msg>
<status status="PASS" starttime="20201112 12:42:40.733" endtime="20201112 12:42:40.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.750" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201112 12:42:40.749" endtime="20201112 12:42:40.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.752" level="INFO">VALUE: [8.570800000000031e-05, 8.501399999999784e-05, 8.472300000000182e-05, 8.526399999999809e-05, 8.497199999999913e-05, 8.477799999999716e-05, 8.463900000000094e-05, 8.483299999999944e-05, 8.501400000000131e-05, 8.516700000000058e-05, 8.519400000000024e-05, 8.505600000000002e-05, 8.497199999999913e-05, 8.536199999999855e-05, 8.523600000000242e-05, 8.538899999999822e-05, 8.495799999999956e-05, 8.468000000000017e-05, 8.469499999999922e-05, 8.508399999999916e-05, 8.554200000000095e-05, 8.46660000000006e-05, 8.520799999999981e-05, 8.479100000000073e-05, 8.502800000000088e-05, 8.51660000000011e-05, 8.4846999999999e-05, 8.472299999999836e-05, 8.531999999999984e-05, 8.49720000000026e-05, 8.47920000000002e-05, 8.543000000000092e-05, 8.470799999999931e-05, 8.527699999999819e-05, 8.506999999999959e-05, 8.472199999999888e-05, 8.46530000000005e-05, 8.5153000000001e-05, 8.463900000000094e-05, 8.559699999999976e-05, 8.544499999999997e-05, 8.522199999999938e-05, 8.5153000000001e-05, 8.491700000000033e-05, 8.533399999999941e-05, 8.501400000000131e-05, 8.538799999999874e-05, 8.523600000000242e-05, 8.499999999999827e-05, 8.54310000000004e-05]</msg>
<status status="PASS" starttime="20201112 12:42:40.751" endtime="20201112 12:42:40.753"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.747" endtime="20201112 12:42:40.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.756" endtime="20201112 12:42:40.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:40.760" endtime="20201112 12:42:40.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.759" endtime="20201112 12:42:40.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.754" endtime="20201112 12:42:40.780"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.391" endtime="20201112 12:42:40.781"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.391" endtime="20201112 12:42:40.781"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.789" endtime="20201112 12:42:40.807"></status>
</kw>
<msg timestamp="20201112 12:42:40.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.788" endtime="20201112 12:42:40.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:40.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:40.809" endtime="20201112 12:42:40.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.812" endtime="20201112 12:42:40.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.785" endtime="20201112 12:42:40.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.783" endtime="20201112 12:42:40.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:40.822" endtime="20201112 12:42:41.107"></status>
</kw>
<msg timestamp="20201112 12:42:41.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:40.820" endtime="20201112 12:42:41.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322958, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:41.111" endtime="20201112 12:42:41.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.119" endtime="20201112 12:42:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.817" endtime="20201112 12:42:41.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.815" endtime="20201112 12:42:41.122"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.126" level="INFO">${RESULT} = [{'time': 0.021322958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.695799999999809e-05, 'source_diff': 8.695799999999809e-05}, {'time': 0.021458042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.122" endtime="20201112 12:42:41.126"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.139" level="INFO">${ACCURACY} = {'time': [0.021322958, 0.021458042, 0.021586611, 0.021712208, 0.021835778, 0.021975319, 0.022102917, 0.022234472, 0.022371042, 0.022501611, 0.022637208, 0.02276075, 0.022890333, 0.023010958, 0.0231345...</msg>
<status status="PASS" starttime="20201112 12:42:41.127" endtime="20201112 12:42:41.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.143" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.142" endtime="20201112 12:42:41.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.146" level="INFO">VALUE: [8.695799999999809e-05, 8.64860000000002e-05, 8.634699999999704e-05, 8.640199999999931e-05, 8.627799999999866e-05, 8.63470000000005e-05, 8.591700000000133e-05, 8.636100000000008e-05, 8.618100000000115e-05, 8.590300000000176e-05, 8.633299999999747e-05, 8.658300000000119e-05, 8.63470000000005e-05, 8.61660000000021e-05, 8.609799999999973e-05, 8.615299999999854e-05, 8.576400000000206e-05, 8.630600000000127e-05, 8.587500000000262e-05, 8.576400000000206e-05, 8.634699999999704e-05, 8.645900000000054e-05, 8.587499999999915e-05, 8.636100000000008e-05, 8.652699999999944e-05, 8.604200000000145e-05, 8.651399999999934e-05, 8.618000000000167e-05, 8.57920000000012e-05, 8.573599999999945e-05, 8.59729999999996e-05, 8.566700000000108e-05, 8.602699999999894e-05, 8.576399999999859e-05, 8.597200000000013e-05, 8.620900000000029e-05, 8.645799999999759e-05, 8.61249999999994e-05, 8.661100000000033e-05, 8.640300000000226e-05, 8.659800000000023e-05, 8.636100000000008e-05, 8.616700000000158e-05, 8.637499999999965e-05, 8.598600000000317e-05, 8.61249999999994e-05, 8.570800000000031e-05, 8.623599999999995e-05, 8.563900000000194e-05, 8.579100000000173e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.144" endtime="20201112 12:42:41.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.140" endtime="20201112 12:42:41.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.149" endtime="20201112 12:42:41.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.154" endtime="20201112 12:42:41.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.153" endtime="20201112 12:42:41.174"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.148" endtime="20201112 12:42:41.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.782" endtime="20201112 12:42:41.175"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:40.781" endtime="20201112 12:42:41.175"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.184" endtime="20201112 12:42:41.202"></status>
</kw>
<msg timestamp="20201112 12:42:41.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.182" endtime="20201112 12:42:41.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.203" endtime="20201112 12:42:41.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.206" endtime="20201112 12:42:41.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.180" endtime="20201112 12:42:41.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.178" endtime="20201112 12:42:41.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.215" endtime="20201112 12:42:41.500"></status>
</kw>
<msg timestamp="20201112 12:42:41.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.213" endtime="20201112 12:42:41.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021353472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.504" endtime="20201112 12:42:41.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.513" endtime="20201112 12:42:41.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.211" endtime="20201112 12:42:41.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.209" endtime="20201112 12:42:41.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.519" level="INFO">${RESULT} = [{'time': 0.021353472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.769399999999927e-05, 'source_diff': 8.769399999999927e-05}, {'time': 0.021486542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.516" endtime="20201112 12:42:41.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.532" level="INFO">${ACCURACY} = {'time': [0.021353472, 0.021486542, 0.021622153, 0.021757694, 0.021880319, 0.022009958, 0.022141514, 0.022267153, 0.022398736, 0.022531319, 0.022669889, 0.0227955, 0.022933069, 0.023071625, 0.02319425...</msg>
<status status="PASS" starttime="20201112 12:42:41.520" endtime="20201112 12:42:41.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.537" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.536" endtime="20201112 12:42:41.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.539" level="INFO">VALUE: [8.769399999999927e-05, 8.729199999999923e-05, 8.738900000000022e-05, 8.673600000000045e-05, 8.679099999999926e-05, 8.752700000000044e-05, 8.66530000000025e-05, 8.675000000000002e-05, 8.711099999999736e-05, 8.758300000000219e-05, 8.690299999999929e-05, 8.704199999999898e-05, 8.74860000000012e-05, 8.677799999999916e-05, 8.759699999999829e-05, 8.740299999999979e-05, 8.680499999999883e-05, 8.745900000000154e-05, 8.691699999999886e-05, 8.684699999999754e-05, 8.741599999999988e-05, 8.73059999999988e-05, 8.702799999999941e-05, 8.727799999999966e-05, 8.695800000000156e-05, 8.715299999999954e-05, 8.694500000000147e-05, 8.757000000000209e-05, 8.677800000000263e-05, 8.747200000000163e-05, 8.722200000000138e-05, 8.74860000000012e-05, 8.733300000000194e-05, 8.750000000000077e-05, 8.677799999999916e-05, 8.687500000000015e-05, 8.759799999999776e-05, 8.722199999999791e-05, 8.742999999999945e-05, 8.73059999999988e-05, 8.669399999999827e-05, 8.690199999999981e-05, 8.700000000000027e-05, 8.71669999999991e-05, 8.665200000000303e-05, 8.716599999999963e-05, 8.669500000000122e-05, 8.704199999999898e-05, 8.738900000000022e-05, 8.725000000000052e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.538" endtime="20201112 12:42:41.540"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.533" endtime="20201112 12:42:41.541"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.543" endtime="20201112 12:42:41.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.547" endtime="20201112 12:42:41.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.545" endtime="20201112 12:42:41.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.541" endtime="20201112 12:42:41.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.176" endtime="20201112 12:42:41.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.176" endtime="20201112 12:42:41.568"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.576" endtime="20201112 12:42:41.595"></status>
</kw>
<msg timestamp="20201112 12:42:41.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.575" endtime="20201112 12:42:41.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.596" endtime="20201112 12:42:41.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.599" endtime="20201112 12:42:41.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.572" endtime="20201112 12:42:41.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.570" endtime="20201112 12:42:41.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.607" endtime="20201112 12:42:41.893"></status>
</kw>
<msg timestamp="20201112 12:42:41.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.606" endtime="20201112 12:42:41.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.897" endtime="20201112 12:42:41.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.905" endtime="20201112 12:42:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.603" endtime="20201112 12:42:41.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.602" endtime="20201112 12:42:41.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:41.911" level="INFO">${RESULT} = [{'time': 0.021374306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.852799999999744e-05, 'source_diff': 8.852799999999744e-05}, {'time': 0.021516361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:41.908" endtime="20201112 12:42:41.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:41.925" level="INFO">${ACCURACY} = {'time': [0.021374306, 0.021516361, 0.021644958, 0.021772569, 0.021911125, 0.022047681, 0.022174278, 0.022316806, 0.022458347, 0.022582972, 0.022710611, 0.022851097, 0.02298275, 0.023111264, 0.0232458...</msg>
<status status="PASS" starttime="20201112 12:42:41.912" endtime="20201112 12:42:41.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.929" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201112 12:42:41.928" endtime="20201112 12:42:41.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.932" level="INFO">VALUE: [8.852799999999744e-05, 8.81670000000001e-05, 8.848599999999873e-05, 8.842999999999698e-05, 8.834699999999904e-05, 8.784799999999801e-05, 8.772199999999841e-05, 8.822300000000186e-05, 8.770799999999884e-05, 8.833299999999947e-05, 8.858299999999972e-05, 8.826400000000109e-05, 8.811099999999836e-05, 8.858299999999972e-05, 8.854100000000101e-05, 8.79860000000017e-05, 8.851399999999787e-05, 8.790300000000029e-05, 8.777700000000069e-05, 8.838899999999775e-05, 8.859800000000223e-05, 8.795899999999857e-05, 8.861099999999886e-05, 8.786099999999811e-05, 8.844500000000297e-05, 8.83189999999999e-05, 8.809699999999879e-05, 8.801400000000084e-05, 8.858299999999972e-05, 8.776400000000059e-05, 8.859699999999929e-05, 8.824999999999805e-05, 8.840299999999732e-05, 8.783399999999844e-05, 8.820799999999934e-05, 8.840300000000079e-05, 8.851300000000187e-05, 8.81670000000001e-05, 8.776400000000059e-05, 8.815200000000106e-05, 8.765300000000004e-05, 8.822299999999839e-05, 8.809699999999879e-05, 8.79999999999978e-05, 8.844400000000002e-05, 8.827799999999719e-05, 8.81670000000001e-05, 8.815300000000054e-05, 8.843099999999993e-05, 8.780600000000277e-05]</msg>
<status status="PASS" starttime="20201112 12:42:41.930" endtime="20201112 12:42:41.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.926" endtime="20201112 12:42:41.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.935" endtime="20201112 12:42:41.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:41.939" endtime="20201112 12:42:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.938" endtime="20201112 12:42:41.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.933" endtime="20201112 12:42:41.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.569" endtime="20201112 12:42:41.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.568" endtime="20201112 12:42:41.960"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.969" endtime="20201112 12:42:41.987"></status>
</kw>
<msg timestamp="20201112 12:42:41.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.967" endtime="20201112 12:42:41.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:41.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:41.988" endtime="20201112 12:42:41.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.991" endtime="20201112 12:42:41.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.965" endtime="20201112 12:42:41.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.963" endtime="20201112 12:42:41.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:41.999" endtime="20201112 12:42:42.285"></status>
</kw>
<msg timestamp="20201112 12:42:42.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:41.998" endtime="20201112 12:42:42.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021393528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.289" endtime="20201112 12:42:42.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.297" endtime="20201112 12:42:42.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.995" endtime="20201112 12:42:42.299"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.994" endtime="20201112 12:42:42.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.303" level="INFO">${RESULT} = [{'time': 0.021393528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.015299999999907e-05, 'source_diff': 9.015299999999907e-05}, {'time': 0.021532583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:42.300" endtime="20201112 12:42:42.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.317" level="INFO">${ACCURACY} = {'time': [0.021393528, 0.021532583, 0.021658181, 0.02179275, 0.021925333, 0.022060903, 0.022197472, 0.022322056, 0.022447667, 0.022589208, 0.022720792, 0.022847417, 0.022985972, 0.023129514, 0.0232630...</msg>
<status status="PASS" starttime="20201112 12:42:42.304" endtime="20201112 12:42:42.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.321" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.320" endtime="20201112 12:42:42.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.323" level="INFO">VALUE: [9.015299999999907e-05, 8.952700000000244e-05, 8.952799999999844e-05, 8.884699999999954e-05, 8.904100000000151e-05, 8.911099999999936e-05, 8.866599999999766e-05, 8.958400000000019e-05, 8.904200000000098e-05, 8.91389999999985e-05, 8.959799999999976e-05, 8.880599999999683e-05, 8.909699999999979e-05, 8.938899999999875e-05, 8.879100000000126e-05, 8.909699999999979e-05, 8.879200000000073e-05, 8.913900000000197e-05, 8.912499999999893e-05, 8.920800000000034e-05, 8.934700000000004e-05, 8.8945e-05, 8.938899999999875e-05, 8.895800000000009e-05, 8.865200000000156e-05, 8.89999999999988e-05, 8.933300000000047e-05, 8.883299999999997e-05, 8.883399999999944e-05, 8.89999999999988e-05, 8.938900000000222e-05, 8.863900000000147e-05, 8.877800000000116e-05, 8.874999999999855e-05, 8.909699999999979e-05, 8.888899999999825e-05, 8.918099999999721e-05, 8.916599999999816e-05, 8.869499999999975e-05, 8.908300000000022e-05, 8.870799999999984e-05, 8.924999999999905e-05, 8.947299999999964e-05, 8.922199999999991e-05, 8.911100000000283e-05, 8.901399999999837e-05, 8.947200000000016e-05, 8.877799999999769e-05, 8.870799999999984e-05, 8.865299999999757e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.322" endtime="20201112 12:42:42.324"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.317" endtime="20201112 12:42:42.325"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.327" endtime="20201112 12:42:42.329"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.331" endtime="20201112 12:42:42.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.329" endtime="20201112 12:42:42.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.325" endtime="20201112 12:42:42.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.961" endtime="20201112 12:42:42.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:41.961" endtime="20201112 12:42:42.352"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.360" endtime="20201112 12:42:42.379"></status>
</kw>
<msg timestamp="20201112 12:42:42.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.359" endtime="20201112 12:42:42.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.380" endtime="20201112 12:42:42.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.383" endtime="20201112 12:42:42.384"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.356" endtime="20201112 12:42:42.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.354" endtime="20201112 12:42:42.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.391" endtime="20201112 12:42:42.692"></status>
</kw>
<msg timestamp="20201112 12:42:42.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.390" endtime="20201112 12:42:42.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021298431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021389583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.701" endtime="20201112 12:42:42.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.716" endtime="20201112 12:42:42.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.387" endtime="20201112 12:42:42.718"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.386" endtime="20201112 12:42:42.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:42.722" level="INFO">${RESULT} = [{'time': 0.021389583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.11520000000006e-05, 'source_diff': 9.11520000000006e-05}, {'time': 0.021520625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:42.719" endtime="20201112 12:42:42.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:42.736" level="INFO">${ACCURACY} = {'time': [0.021389583, 0.021520625, 0.021661139, 0.021798708, 0.021940208, 0.022074792, 0.022199375, 0.022324958, 0.022459528, 0.022586125, 0.022728639, 0.02285425, 0.022986764, 0.023131292, 0.0232658...</msg>
<status status="PASS" starttime="20201112 12:42:42.723" endtime="20201112 12:42:42.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.740" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201112 12:42:42.739" endtime="20201112 12:42:42.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.742" level="INFO">VALUE: [9.11520000000006e-05, 9.008300000000122e-05, 9.012499999999993e-05, 9.061100000000086e-05, 9.006899999999818e-05, 8.979199999999826e-05, 9.015299999999907e-05, 8.981899999999793e-05, 9.008400000000069e-05, 9.020799999999787e-05, 9.008299999999775e-05, 9.048600000000073e-05, 8.9638999999999e-05, 9.057000000000162e-05, 9.055499999999911e-05, 8.972299999999989e-05, 8.979199999999826e-05, 8.981899999999793e-05, 8.973599999999998e-05, 9.041700000000236e-05, 8.967999999999823e-05, 9.006999999999765e-05, 9.047199999999769e-05, 9.030499999999886e-05, 9.059800000000076e-05, 8.969500000000075e-05, 8.9638999999999e-05, 8.959800000000323e-05, 8.969400000000127e-05, 8.983300000000097e-05, 8.995900000000057e-05, 9.033300000000147e-05, 8.96250000000029e-05, 8.968100000000118e-05, 9.038899999999975e-05, 9.047200000000116e-05, 8.990299999999882e-05, 8.988899999999925e-05, 9.038899999999975e-05, 9.015300000000254e-05, 9.045800000000159e-05, 9.013900000000297e-05, 9.008400000000069e-05, 8.966599999999866e-05, 8.995800000000109e-05, 8.98190000000014e-05, 9.005500000000208e-05, 9.04589999999976e-05, 8.997200000000066e-05, 8.969400000000127e-05]</msg>
<status status="PASS" starttime="20201112 12:42:42.741" endtime="20201112 12:42:42.743"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.737" endtime="20201112 12:42:42.744"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.746" endtime="20201112 12:42:42.749"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:42.751" endtime="20201112 12:42:42.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.750" endtime="20201112 12:42:42.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.744" endtime="20201112 12:42:42.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.353" endtime="20201112 12:42:42.772"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.352" endtime="20201112 12:42:42.772"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.780" endtime="20201112 12:42:42.799"></status>
</kw>
<msg timestamp="20201112 12:42:42.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.779" endtime="20201112 12:42:42.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:42.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:42.800" endtime="20201112 12:42:42.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.803" endtime="20201112 12:42:42.804"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.776" endtime="20201112 12:42:42.805"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.774" endtime="20201112 12:42:42.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:42.811" endtime="20201112 12:42:43.097"></status>
</kw>
<msg timestamp="20201112 12:42:43.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:42.810" endtime="20201112 12:42:43.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021374056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.101" endtime="20201112 12:42:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.109" endtime="20201112 12:42:43.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.807" endtime="20201112 12:42:43.111"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.806" endtime="20201112 12:42:43.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.116" level="INFO">${RESULT} = [{'time': 0.021374056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.154200000000001e-05, 'source_diff': 9.154200000000001e-05}, {'time': 0.021504111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.112" endtime="20201112 12:42:43.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.129" level="INFO">${ACCURACY} = {'time': [0.021374056, 0.021504111, 0.021647653, 0.021778236, 0.021920778, 0.022050361, 0.022192903, 0.022334472, 0.022460056, 0.022587653, 0.022728181, 0.022853778, 0.022983347, 0.023116917, 0.023253...</msg>
<status status="PASS" starttime="20201112 12:42:43.117" endtime="20201112 12:42:43.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.133" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.132" endtime="20201112 12:42:43.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.136" level="INFO">VALUE: [9.154200000000001e-05, 9.1332999999999e-05, 9.065299999999957e-05, 9.134699999999857e-05, 9.149999999999783e-05, 9.15000000000013e-05, 9.077799999999969e-05, 9.148600000000173e-05, 9.097299999999767e-05, 9.088900000000025e-05, 9.0639e-05, 9.115300000000007e-05, 9.080500000000283e-05, 9.105599999999908e-05, 9.115300000000007e-05, 9.152700000000097e-05, 9.127700000000072e-05, 9.151400000000087e-05, 9.093099999999896e-05, 9.149999999999783e-05, 9.077799999999969e-05, 9.095800000000209e-05, 9.084799999999754e-05, 9.145799999999912e-05, 9.129199999999976e-05, 9.158400000000219e-05, 9.131899999999943e-05, 9.120899999999835e-05, 9.1332999999999e-05, 9.079199999999926e-05, 9.1332999999999e-05, 9.15139999999974e-05, 9.120800000000234e-05, 9.090299999999982e-05, 9.062500000000043e-05, 9.155500000000011e-05, 9.15139999999974e-05, 9.062500000000043e-05, 9.06939999999988e-05, 9.126400000000062e-05, 9.073600000000098e-05, 9.072199999999794e-05, 9.134800000000151e-05, 9.1026999999997e-05, 9.145800000000259e-05, 9.109699999999832e-05, 9.126400000000062e-05, 9.065299999999957e-05, 9.091699999999939e-05, 9.108299999999875e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.134" endtime="20201112 12:42:43.137"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.130" endtime="20201112 12:42:43.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.139" endtime="20201112 12:42:43.141"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.143" endtime="20201112 12:42:43.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.141" endtime="20201112 12:42:43.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.138" endtime="20201112 12:42:43.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.773" endtime="20201112 12:42:43.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:42.772" endtime="20201112 12:42:43.164"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.173" endtime="20201112 12:42:43.191"></status>
</kw>
<msg timestamp="20201112 12:42:43.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.171" endtime="20201112 12:42:43.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.193" endtime="20201112 12:42:43.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.195" endtime="20201112 12:42:43.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.169" endtime="20201112 12:42:43.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.167" endtime="20201112 12:42:43.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.204" endtime="20201112 12:42:43.488"></status>
</kw>
<msg timestamp="20201112 12:42:43.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.202" endtime="20201112 12:42:43.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021205208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.493" endtime="20201112 12:42:43.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.501" endtime="20201112 12:42:43.502"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.200" endtime="20201112 12:42:43.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.198" endtime="20201112 12:42:43.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.507" level="INFO">${RESULT} = [{'time': 0.021297708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.249999999999883e-05, 'source_diff': 9.249999999999883e-05}, {'time': 0.021426792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:43.504" endtime="20201112 12:42:43.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.520" level="INFO">${ACCURACY} = {'time': [0.021297708, 0.021426792, 0.021561319, 0.021697847, 0.021842389, 0.021970986, 0.022105528, 0.022240083, 0.022386597, 0.022518153, 0.022660681, 0.022804194, 0.022939736, 0.02308325, 0.0232297...</msg>
<status status="PASS" starttime="20201112 12:42:43.508" endtime="20201112 12:42:43.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.525" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.524" endtime="20201112 12:42:43.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.527" level="INFO">VALUE: [9.249999999999883e-05, 9.233399999999947e-05, 9.162499999999796e-05, 9.204099999999757e-05, 9.177800000000069e-05, 9.2333e-05, 9.162499999999796e-05, 9.223600000000248e-05, 9.237500000000218e-05, 9.249999999999883e-05, 9.244500000000003e-05, 9.236099999999914e-05, 9.212499999999846e-05, 9.173599999999851e-05, 9.220899999999935e-05, 9.20000000000018e-05, 9.226400000000162e-05, 9.170799999999937e-05, 9.234699999999957e-05, 9.18199999999994e-05, 9.206900000000018e-05, 9.25139999999984e-05, 9.240300000000132e-05, 9.236099999999914e-05, 9.168099999999971e-05, 9.169499999999928e-05, 9.231900000000043e-05, 9.257000000000015e-05, 9.21940000000003e-05, 9.237500000000218e-05, 9.219500000000325e-05, 9.216699999999717e-05, 9.159699999999882e-05, 9.220799999999987e-05, 9.244400000000055e-05, 9.1639000000001e-05, 9.249999999999883e-05, 9.226400000000162e-05, 9.188900000000125e-05, 9.21390000000015e-05, 9.258300000000025e-05, 9.223599999999901e-05, 9.184699999999907e-05, 9.234699999999957e-05, 9.258399999999972e-05, 9.202800000000094e-05, 9.244500000000003e-05, 9.2333e-05, 9.175000000000155e-05, 9.218000000000073e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.526" endtime="20201112 12:42:43.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.521" endtime="20201112 12:42:43.528"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.531" endtime="20201112 12:42:43.533"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.535" endtime="20201112 12:42:43.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.533" endtime="20201112 12:42:43.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.529" endtime="20201112 12:42:43.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.165" endtime="20201112 12:42:43.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.165" endtime="20201112 12:42:43.556"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.564" endtime="20201112 12:42:43.582"></status>
</kw>
<msg timestamp="20201112 12:42:43.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.562" endtime="20201112 12:42:43.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.584" endtime="20201112 12:42:43.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.586" endtime="20201112 12:42:43.588"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.560" endtime="20201112 12:42:43.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.558" endtime="20201112 12:42:43.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.595" endtime="20201112 12:42:43.882"></status>
</kw>
<msg timestamp="20201112 12:42:43.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021214069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.594" endtime="20201112 12:42:43.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021214069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.886" endtime="20201112 12:42:43.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.894" endtime="20201112 12:42:43.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.591" endtime="20201112 12:42:43.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.590" endtime="20201112 12:42:43.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:43.901" level="INFO">${RESULT} = [{'time': 0.021308389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.43200000000019e-05, 'source_diff': 9.43200000000019e-05}, {'time': 0.0214395, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201112 12:42:43.898" endtime="20201112 12:42:43.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:43.914" level="INFO">${ACCURACY} = {'time': [0.021308389, 0.0214395, 0.021581056, 0.021725611, 0.021866181, 0.022008736, 0.022155292, 0.022290861, 0.022433417, 0.022565, 0.022698597, 0.022826181, 0.02297075, 0.023116278, 0.023250875, 0...</msg>
<status status="PASS" starttime="20201112 12:42:43.902" endtime="20201112 12:42:43.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.919" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201112 12:42:43.918" endtime="20201112 12:42:43.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.921" level="INFO">VALUE: [9.43200000000019e-05, 9.361100000000039e-05, 9.272300000000289e-05, 9.334700000000057e-05, 9.276399999999865e-05, 9.358300000000125e-05, 9.334800000000004e-05, 9.308299999999728e-05, 9.358400000000072e-05, 9.302800000000194e-05, 9.29720000000002e-05, 9.31390000000025e-05, 9.352800000000244e-05, 9.326399999999915e-05, 9.291700000000139e-05, 9.29590000000001e-05, 9.294400000000105e-05, 9.327799999999872e-05, 9.301299999999943e-05, 9.294400000000105e-05, 9.326399999999915e-05, 9.286099999999964e-05, 9.288900000000225e-05, 9.338899999999928e-05, 9.31940000000013e-05, 9.333400000000047e-05, 9.267999999999776e-05, 9.318100000000121e-05, 9.351299999999993e-05, 9.356999999999768e-05, 9.320900000000035e-05, 9.359699999999735e-05, 9.323600000000001e-05, 9.261099999999939e-05, 9.277800000000169e-05, 9.327699999999925e-05, 9.277799999999822e-05, 9.270800000000037e-05, 9.308400000000022e-05, 9.356899999999821e-05, 9.276399999999865e-05, 9.323600000000001e-05, 9.270899999999985e-05, 9.279199999999779e-05, 9.277800000000169e-05, 9.3333000000001e-05, 9.356899999999821e-05, 9.276399999999865e-05, 9.3333000000001e-05, 9.3333000000001e-05]</msg>
<status status="PASS" starttime="20201112 12:42:43.920" endtime="20201112 12:42:43.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.915" endtime="20201112 12:42:43.922"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.924" endtime="20201112 12:42:43.926"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:43.929" endtime="20201112 12:42:43.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.927" endtime="20201112 12:42:43.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.923" endtime="20201112 12:42:43.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.557" endtime="20201112 12:42:43.949"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.556" endtime="20201112 12:42:43.949"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.958" endtime="20201112 12:42:43.976"></status>
</kw>
<msg timestamp="20201112 12:42:43.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.956" endtime="20201112 12:42:43.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:43.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:43.978" endtime="20201112 12:42:43.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.980" endtime="20201112 12:42:43.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.954" endtime="20201112 12:42:43.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.952" endtime="20201112 12:42:43.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:43.989" endtime="20201112 12:42:44.275"></status>
</kw>
<msg timestamp="20201112 12:42:44.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021247014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:43.987" endtime="20201112 12:42:44.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021247014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021342306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.279" endtime="20201112 12:42:44.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.287" endtime="20201112 12:42:44.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.985" endtime="20201112 12:42:44.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.983" endtime="20201112 12:42:44.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.293" level="INFO">${RESULT} = [{'time': 0.021342306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.529199999999682e-05, 'source_diff': 9.529199999999682e-05}, {'time': 0.021472389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.290" endtime="20201112 12:42:44.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.306" level="INFO">${ACCURACY} = {'time': [0.021342306, 0.021472389, 0.021605972, 0.021753486, 0.021884083, 0.022022625, 0.022164181, 0.022307736, 0.022443292, 0.022585833, 0.022728361, 0.022875875, 0.023009458, 0.023139097, 0.023283...</msg>
<status status="PASS" starttime="20201112 12:42:44.294" endtime="20201112 12:42:44.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.311" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.310" endtime="20201112 12:42:44.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.313" level="INFO">VALUE: [9.529199999999682e-05, 9.426400000000015e-05, 9.45140000000004e-05, 9.37079999999979e-05, 9.44019999999969e-05, 9.434700000000157e-05, 9.425000000000058e-05, 9.41940000000023e-05, 9.388899999999978e-05, 9.40139999999999e-05, 9.419399999999883e-05, 9.400000000000033e-05, 9.426400000000015e-05, 9.40139999999999e-05, 9.454199999999954e-05, 9.381900000000193e-05, 9.425000000000058e-05, 9.387500000000021e-05, 9.454199999999954e-05, 9.381999999999793e-05, 9.390300000000282e-05, 9.387500000000021e-05, 9.376399999999965e-05, 9.425000000000058e-05, 9.393099999999849e-05, 9.413800000000055e-05, 9.404200000000251e-05, 9.438899999999681e-05, 9.363899999999953e-05, 9.437500000000071e-05, 9.437500000000071e-05, 9.376399999999965e-05, 9.431999999999843e-05, 9.406899999999871e-05, 9.437500000000071e-05, 9.413900000000003e-05, 9.456900000000268e-05, 9.427799999999972e-05, 9.363800000000005e-05, 9.362499999999996e-05, 9.441599999999994e-05, 9.387500000000021e-05, 9.400000000000033e-05, 9.405499999999914e-05, 9.412500000000046e-05, 9.388899999999978e-05, 9.450000000000083e-05, 9.375000000000008e-05, 9.444400000000255e-05, 9.434700000000157e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.312" endtime="20201112 12:42:44.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.307" endtime="20201112 12:42:44.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.317" endtime="20201112 12:42:44.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.322" endtime="20201112 12:42:44.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.321" endtime="20201112 12:42:44.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.315" endtime="20201112 12:42:44.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.950" endtime="20201112 12:42:44.343"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:43.950" endtime="20201112 12:42:44.343"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.351" endtime="20201112 12:42:44.370"></status>
</kw>
<msg timestamp="20201112 12:42:44.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.350" endtime="20201112 12:42:44.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.371" endtime="20201112 12:42:44.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.374" endtime="20201112 12:42:44.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.347" endtime="20201112 12:42:44.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.345" endtime="20201112 12:42:44.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.383" endtime="20201112 12:42:44.668"></status>
</kw>
<msg timestamp="20201112 12:42:44.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021260847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.381" endtime="20201112 12:42:44.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021260847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:44.672" endtime="20201112 12:42:44.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.680" endtime="20201112 12:42:44.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.379" endtime="20201112 12:42:44.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.377" endtime="20201112 12:42:44.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:44.687" level="INFO">${RESULT} = [{'time': 0.021356528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.568100000000024e-05, 'source_diff': 9.568100000000024e-05}, {'time': 0.021489583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:44.683" endtime="20201112 12:42:44.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:44.700" level="INFO">${ACCURACY} = {'time': [0.021356528, 0.021489583, 0.021632139, 0.021778667, 0.021917236, 0.022050819, 0.022181361, 0.022314917, 0.022457458, 0.022596958, 0.022730542, 0.022880014, 0.023016556, 0.023163056, 0.023299...</msg>
<status status="PASS" starttime="20201112 12:42:44.688" endtime="20201112 12:42:44.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.704" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201112 12:42:44.703" endtime="20201112 12:42:44.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.707" level="INFO">VALUE: [9.568100000000024e-05, 9.504100000000057e-05, 9.463900000000053e-05, 9.538900000000128e-05, 9.53469999999991e-05, 9.472199999999847e-05, 9.512500000000146e-05, 9.469499999999881e-05, 9.558299999999978e-05, 9.493000000000001e-05, 9.516700000000017e-05, 9.547199999999922e-05, 9.498700000000124e-05, 9.54590000000026e-05, 9.526399999999768e-05, 9.473600000000151e-05, 9.461100000000139e-05, 9.474999999999761e-05, 9.541700000000042e-05, 9.487500000000121e-05, 9.531899999999996e-05, 9.487500000000121e-05, 9.554200000000054e-05, 9.498600000000176e-05, 9.473599999999804e-05, 9.530500000000039e-05, 9.529200000000029e-05, 9.498600000000176e-05, 9.526400000000115e-05, 9.46660000000002e-05, 9.469399999999933e-05, 9.475000000000108e-05, 9.555600000000011e-05, 9.46530000000001e-05, 9.556900000000021e-05, 9.466699999999967e-05, 9.537499999999824e-05, 9.533299999999953e-05, 9.555500000000064e-05, 9.518099999999974e-05, 9.470899999999838e-05, 9.544400000000008e-05, 9.550000000000183e-05, 9.480599999999936e-05, 9.481900000000293e-05, 9.494499999999906e-05, 9.488900000000078e-05, 9.506899999999971e-05, 9.487500000000121e-05, 9.556900000000021e-05]</msg>
<status status="PASS" starttime="20201112 12:42:44.705" endtime="20201112 12:42:44.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.701" endtime="20201112 12:42:44.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.710" endtime="20201112 12:42:44.712"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:44.714" endtime="20201112 12:42:44.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.712" endtime="20201112 12:42:44.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.709" endtime="20201112 12:42:44.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.344" endtime="20201112 12:42:44.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.343" endtime="20201112 12:42:44.735"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.744" endtime="20201112 12:42:44.762"></status>
</kw>
<msg timestamp="20201112 12:42:44.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.742" endtime="20201112 12:42:44.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:44.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:44.764" endtime="20201112 12:42:44.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.766" endtime="20201112 12:42:44.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.740" endtime="20201112 12:42:44.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.738" endtime="20201112 12:42:44.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:44.775" endtime="20201112 12:42:45.060"></status>
</kw>
<msg timestamp="20201112 12:42:45.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02121025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021306931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:44.773" endtime="20201112 12:42:45.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02121025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021306931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:42:45.064" endtime="20201112 12:42:45.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.073" endtime="20201112 12:42:45.074"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.771" endtime="20201112 12:42:45.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.769" endtime="20201112 12:42:45.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.079" level="INFO">${RESULT} = [{'time': 0.021306931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.668100000000124e-05, 'source_diff': 9.668100000000124e-05}, {'time': 0.021447889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.076" endtime="20201112 12:42:45.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.092" level="INFO">${ACCURACY} = {'time': [0.021306931, 0.021447889, 0.021580528, 0.021718986, 0.021863486, 0.022000042, 0.022142556, 0.022291069, 0.022427625, 0.022560153, 0.022695681, 0.022829222, 0.022965792, 0.023104306, 0.023244...</msg>
<status status="PASS" starttime="20201112 12:42:45.080" endtime="20201112 12:42:45.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.097" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.096" endtime="20201112 12:42:45.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.099" level="INFO">VALUE: [9.668100000000124e-05, 9.587500000000221e-05, 9.612500000000246e-05, 9.62080000000004e-05, 9.566700000000067e-05, 9.580600000000036e-05, 9.62920000000013e-05, 9.594400000000058e-05, 9.615299999999813e-05, 9.568100000000024e-05, 9.636199999999914e-05, 9.591599999999798e-05, 9.58339999999995e-05, 9.636200000000261e-05, 9.63470000000001e-05, 9.561099999999892e-05, 9.588900000000178e-05, 9.580600000000036e-05, 9.569400000000033e-05, 9.586199999999864e-05, 9.559699999999935e-05, 9.593100000000049e-05, 9.658299999999731e-05, 9.643100000000099e-05, 9.586099999999917e-05, 9.655500000000164e-05, 9.63470000000001e-05, 9.580500000000089e-05, 9.634699999999663e-05, 9.631900000000096e-05, 9.607000000000018e-05, 9.598600000000276e-05, 9.581900000000046e-05, 9.61799999999978e-05, 9.64859999999998e-05, 9.56669999999972e-05, 9.6334e-05, 9.611099999999942e-05, 9.655599999999764e-05, 9.604199999999757e-05, 9.642999999999805e-05, 9.651399999999893e-05, 9.632000000000043e-05, 9.64859999999998e-05, 9.576400000000165e-05, 9.62080000000004e-05, 9.636099999999967e-05, 9.644399999999761e-05, 9.647200000000022e-05, 9.607000000000018e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.098" endtime="20201112 12:42:45.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.093" endtime="20201112 12:42:45.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.109" endtime="20201112 12:42:45.111"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.113" endtime="20201112 12:42:45.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.112" endtime="20201112 12:42:45.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.107" endtime="20201112 12:42:45.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.736" endtime="20201112 12:42:45.134"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:44.736" endtime="20201112 12:42:45.134"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.143" endtime="20201112 12:42:45.161"></status>
</kw>
<msg timestamp="20201112 12:42:45.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.141" endtime="20201112 12:42:45.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.163" endtime="20201112 12:42:45.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.165" endtime="20201112 12:42:45.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.139" endtime="20201112 12:42:45.167"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.137" endtime="20201112 12:42:45.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.174" endtime="20201112 12:42:45.460"></status>
</kw>
<msg timestamp="20201112 12:42:45.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021381347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021479097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.172" endtime="20201112 12:42:45.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021381347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021479097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.464" endtime="20201112 12:42:45.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.472" endtime="20201112 12:42:45.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.170" endtime="20201112 12:42:45.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.168" endtime="20201112 12:42:45.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.479" level="INFO">${RESULT} = [{'time': 0.021479097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.775000000000061e-05, 'source_diff': 9.775000000000061e-05}, {'time': 0.021614139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:45.475" endtime="20201112 12:42:45.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.492" level="INFO">${ACCURACY} = {'time': [0.021479097, 0.021614139, 0.021764694, 0.021904181, 0.022039708, 0.022184222, 0.022334736, 0.02247325, 0.022612792, 0.022752319, 0.022893861, 0.023030403, 0.023173931, 0.023315458, 0.0234539...</msg>
<status status="PASS" starttime="20201112 12:42:45.480" endtime="20201112 12:42:45.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.496" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.495" endtime="20201112 12:42:45.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.499" level="INFO">VALUE: [9.775000000000061e-05, 9.662499999999949e-05, 9.736100000000067e-05, 9.755600000000211e-05, 9.69860000000003e-05, 9.659700000000035e-05, 9.669400000000133e-05, 9.740299999999938e-05, 9.693099999999802e-05, 9.725000000000011e-05, 9.733300000000153e-05, 9.750000000000036e-05, 9.688899999999931e-05, 9.674999999999961e-05, 9.669399999999786e-05, 9.722300000000045e-05, 9.676399999999918e-05, 9.681900000000146e-05, 9.67920000000018e-05, 9.719500000000131e-05, 9.723599999999707e-05, 9.699999999999986e-05, 9.69860000000003e-05, 9.704199999999857e-05, 9.690299999999888e-05, 9.719499999999784e-05, 9.709700000000085e-05, 9.727799999999925e-05, 9.75409999999996e-05, 9.661099999999992e-05, 9.683299999999756e-05, 9.723600000000054e-05, 9.744500000000156e-05, 9.741599999999948e-05, 9.71669999999987e-05, 9.67920000000018e-05, 9.74860000000008e-05, 9.744400000000208e-05, 9.747199999999775e-05, 9.68059999999979e-05, 9.69860000000003e-05, 9.704200000000204e-05, 9.674999999999961e-05, 9.66799999999983e-05, 9.713899999999956e-05, 9.727799999999925e-05, 9.679199999999832e-05, 9.681900000000146e-05, 9.718099999999827e-05, 9.668100000000124e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.497" endtime="20201112 12:42:45.500"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.493" endtime="20201112 12:42:45.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.502" endtime="20201112 12:42:45.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.506" endtime="20201112 12:42:45.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.505" endtime="20201112 12:42:45.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.501" endtime="20201112 12:42:45.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.135" endtime="20201112 12:42:45.527"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.134" endtime="20201112 12:42:45.527"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.536" endtime="20201112 12:42:45.555"></status>
</kw>
<msg timestamp="20201112 12:42:45.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.534" endtime="20201112 12:42:45.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.556" endtime="20201112 12:42:45.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.559" endtime="20201112 12:42:45.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.532" endtime="20201112 12:42:45.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.530" endtime="20201112 12:42:45.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.567" endtime="20201112 12:42:45.852"></status>
</kw>
<msg timestamp="20201112 12:42:45.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.566" endtime="20201112 12:42:45.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021417736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021516542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.857" endtime="20201112 12:42:45.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.865" endtime="20201112 12:42:45.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.563" endtime="20201112 12:42:45.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.562" endtime="20201112 12:42:45.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:45.871" level="INFO">${RESULT} = [{'time': 0.021516542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.88059999999999e-05, 'source_diff': 9.88059999999999e-05}, {'time': 0.021667556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:45.868" endtime="20201112 12:42:45.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:45.884" level="INFO">${ACCURACY} = {'time': [0.021516542, 0.021667556, 0.021809083, 0.021954597, 0.022101167, 0.022245639, 0.022394139, 0.022529694, 0.022674208, 0.022821708, 0.022954278, 0.023091806, 0.023229347, 0.023372875, 0.023522...</msg>
<status status="PASS" starttime="20201112 12:42:45.872" endtime="20201112 12:42:45.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.889" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201112 12:42:45.888" endtime="20201112 12:42:45.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.892" level="INFO">VALUE: [9.88059999999999e-05, 9.807000000000218e-05, 9.786100000000117e-05, 9.851400000000093e-05, 9.773600000000104e-05, 9.800000000000086e-05, 9.822200000000197e-05, 9.762500000000049e-05, 9.78470000000016e-05, 9.801400000000043e-05, 9.762500000000049e-05, 9.804199999999957e-05, 9.761100000000092e-05, 9.780600000000236e-05, 9.848599999999832e-05, 9.762500000000049e-05, 9.811099999999795e-05, 9.845800000000265e-05, 9.827800000000025e-05, 9.827699999999731e-05, 9.759800000000082e-05, 9.788900000000031e-05, 9.806899999999924e-05, 9.819399999999937e-05, 9.818099999999927e-05, 9.786100000000117e-05, 9.85280000000005e-05, 9.815300000000013e-05, 9.811200000000089e-05, 9.800000000000086e-05, 9.791699999999945e-05, 9.78609999999977e-05, 9.848599999999832e-05, 9.786100000000117e-05, 9.791699999999945e-05, 9.855599999999964e-05, 9.831899999999949e-05, 9.830499999999992e-05, 9.762499999999702e-05, 9.78059999999989e-05, 9.76669999999992e-05, 9.804199999999957e-05, 9.762500000000049e-05, 9.818000000000326e-05, 9.829100000000035e-05, 9.843100000000299e-05, 9.84999999999979e-05, 9.837499999999777e-05, 9.85410000000006e-05, 9.836100000000167e-05]</msg>
<status status="PASS" starttime="20201112 12:42:45.891" endtime="20201112 12:42:45.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.885" endtime="20201112 12:42:45.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.896" endtime="20201112 12:42:45.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:45.901" endtime="20201112 12:42:45.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.900" endtime="20201112 12:42:45.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.894" endtime="20201112 12:42:45.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.528" endtime="20201112 12:42:45.922"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.528" endtime="20201112 12:42:45.922"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.931" endtime="20201112 12:42:45.949"></status>
</kw>
<msg timestamp="20201112 12:42:45.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.929" endtime="20201112 12:42:45.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:45.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:45.951" endtime="20201112 12:42:45.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.953" endtime="20201112 12:42:45.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.927" endtime="20201112 12:42:45.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.924" endtime="20201112 12:42:45.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:45.962" endtime="20201112 12:42:46.247"></status>
</kw>
<msg timestamp="20201112 12:42:46.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021414792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:45.960" endtime="20201112 12:42:46.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021414792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.251" endtime="20201112 12:42:46.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.259" endtime="20201112 12:42:46.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.958" endtime="20201112 12:42:46.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.956" endtime="20201112 12:42:46.261"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.265" level="INFO">${RESULT} = [{'time': 0.021414792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.980599999999742e-05, 'source_diff': 9.980599999999742e-05}, {'time': 0.021565806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.262" endtime="20201112 12:42:46.265"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.325" level="INFO">${ACCURACY} = {'time': [0.021414792, 0.021565806, 0.021700347, 0.021838931, 0.021975431, 0.022119958, 0.022262486, 0.022402028, 0.022535583, 0.022677111, 0.022812653, 0.022949208, 0.02309075, 0.023239264, 0.0233887...</msg>
<status status="PASS" starttime="20201112 12:42:46.266" endtime="20201112 12:42:46.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.329" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.328" endtime="20201112 12:42:46.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.331" level="INFO">VALUE: [9.980599999999742e-05, 9.931999999999996e-05, 9.866599999999726e-05, 9.958399999999978e-05, 9.873700000000152e-05, 9.909699999999938e-05, 9.929200000000082e-05, 9.929200000000082e-05, 9.861100000000192e-05, 9.8721999999999e-05, 9.883399999999903e-05, 9.89159999999975e-05, 9.875000000000161e-05, 9.874999999999814e-05, 9.88059999999999e-05, 9.886100000000217e-05, 9.92219999999995e-05, 9.862500000000149e-05, 9.93609999999992e-05, 9.862500000000149e-05, 9.88059999999999e-05, 9.897199999999926e-05, 9.891700000000045e-05, 9.922300000000245e-05, 9.884800000000207e-05, 9.923699999999855e-05, 9.948599999999932e-05, 9.913899999999809e-05, 9.91800000000008e-05, 9.88609999999987e-05, 9.86670000000002e-05, 9.908299999999981e-05, 9.927800000000125e-05, 9.926399999999821e-05, 9.926399999999821e-05, 9.897299999999873e-05, 9.913900000000156e-05, 9.891700000000045e-05, 9.865300000000063e-05, 9.94999999999989e-05, 9.938899999999834e-05, 9.8721999999999e-05, 9.873599999999857e-05, 9.859799999999835e-05, 9.901400000000143e-05, 9.859699999999888e-05, 9.88609999999987e-05, 9.887500000000174e-05, 9.898599999999882e-05, 9.940300000000138e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.330" endtime="20201112 12:42:46.332"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.325" endtime="20201112 12:42:46.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.335" endtime="20201112 12:42:46.336"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.338" endtime="20201112 12:42:46.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.337" endtime="20201112 12:42:46.358"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.333" endtime="20201112 12:42:46.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.923" endtime="20201112 12:42:46.359"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:45.922" endtime="20201112 12:42:46.359"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.368" endtime="20201112 12:42:46.386"></status>
</kw>
<msg timestamp="20201112 12:42:46.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.366" endtime="20201112 12:42:46.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.388" endtime="20201112 12:42:46.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.390" endtime="20201112 12:42:46.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.364" endtime="20201112 12:42:46.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.362" endtime="20201112 12:42:46.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.400" endtime="20201112 12:42:46.686"></status>
</kw>
<msg timestamp="20201112 12:42:46.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.398" endtime="20201112 12:42:46.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021392667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.690" endtime="20201112 12:42:46.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.698" endtime="20201112 12:42:46.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.395" endtime="20201112 12:42:46.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.393" endtime="20201112 12:42:46.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:46.705" level="INFO">${RESULT} = [{'time': 0.021392667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001008610000000007, 'source_diff': 0.0001008610000000007}, {'time': 0.021540667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:46.702" endtime="20201112 12:42:46.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:46.718" level="INFO">${ACCURACY} = {'time': [0.021392667, 0.021540667, 0.021685181, 0.021825764, 0.021972236, 0.022125694, 0.022267222, 0.02240875, 0.022562264, 0.022701792, 0.022841347, 0.022993847, 0.023145375, 0.023288889, 0.0234254...</msg>
<status status="PASS" starttime="20201112 12:42:46.706" endtime="20201112 12:42:46.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.722" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201112 12:42:46.721" endtime="20201112 12:42:46.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.724" level="INFO">VALUE: [0.0001008610000000007, 9.991699999999798e-05, 0.00010022299999999998, 9.9722e-05, 0.00010048600000000033, 0.00010037499999999977, 9.984700000000013e-05, 9.96670000000012e-05, 9.99999999999994e-05, 0.0001000419999999981, 0.0001003610000000002, 9.994400000000112e-05, 9.969400000000087e-05, 0.00010029200000000182, 9.988899999999884e-05, 0.00010009700000000038, 0.00010043099999999805, 0.00010009799999999985, 9.961199999999892e-05, 0.00010051299999999999, 9.974999999999914e-05, 9.979200000000132e-05, 0.00010001399999999896, 9.973700000000252e-05, 0.00010001399999999896, 9.961099999999945e-05, 0.00010012499999999952, 0.00010023600000000008, 0.00010008400000000028, 0.00010040300000000238, 0.00010016699999999823, 9.973599999999957e-05, 0.00010023600000000008, 0.00010056899999999827, 0.00010037499999999977, 0.00010037499999999977, 0.00010048600000000033, 9.96939999999974e-05, 0.00010011099999999995, 0.0001004869999999998, 9.98609999999997e-05, 9.979100000000185e-05, 9.991700000000145e-05, 0.00010034700000000063, 9.974999999999914e-05, 0.0001002220000000005, 0.00010034700000000063, 0.00010029099999999888, 9.991600000000198e-05, 9.972199999999654e-05]</msg>
<status status="PASS" starttime="20201112 12:42:46.723" endtime="20201112 12:42:46.725"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.719" endtime="20201112 12:42:46.726"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.728" endtime="20201112 12:42:46.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:46.731" endtime="20201112 12:42:46.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.730" endtime="20201112 12:42:46.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.726" endtime="20201112 12:42:46.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.360" endtime="20201112 12:42:46.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.360" endtime="20201112 12:42:46.752"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.760" endtime="20201112 12:42:46.779"></status>
</kw>
<msg timestamp="20201112 12:42:46.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.759" endtime="20201112 12:42:46.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:46.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:46.781" endtime="20201112 12:42:46.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.783" endtime="20201112 12:42:46.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.757" endtime="20201112 12:42:46.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.754" endtime="20201112 12:42:46.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:46.793" endtime="20201112 12:42:47.079"></status>
</kw>
<msg timestamp="20201112 12:42:47.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021171792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:46.791" endtime="20201112 12:42:47.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021171792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021273667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.083" endtime="20201112 12:42:47.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.090" endtime="20201112 12:42:47.092"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.788" endtime="20201112 12:42:47.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.786" endtime="20201112 12:42:47.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.097" level="INFO">${RESULT} = [{'time': 0.021273667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010187500000000127, 'source_diff': 0.00010187500000000127}, {'time': 0.021418694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:47.094" endtime="20201112 12:42:47.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.110" level="INFO">${ACCURACY} = {'time': [0.021273667, 0.021418694, 0.021568153, 0.021708667, 0.021854153, 0.021990708, 0.022132208, 0.022277694, 0.022417222, 0.022566694, 0.022704264, 0.022843736, 0.022982236, 0.023137694, 0.023284...</msg>
<status status="PASS" starttime="20201112 12:42:47.098" endtime="20201112 12:42:47.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.114" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.113" endtime="20201112 12:42:47.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.117" level="INFO">VALUE: [0.00010187500000000127, 0.00010079099999999938, 0.00010108400000000128, 0.00010144500000000209, 0.00010058400000000078, 0.00010138900000000034, 0.00010154100000000013, 0.00010127700000000031, 0.00010097200000000126, 0.00010095800000000169, 0.0001011809999999988, 0.00010116699999999923, 0.00010108299999999834, 0.00010147200000000176, 0.00010095800000000169, 0.00010083400000000103, 0.00010073600000000058, 0.00010076400000000318, 0.00010116599999999976, 0.00010095800000000169, 0.00010097200000000126, 0.0001009159999999995, 0.00010115200000000019, 0.00010127700000000031, 0.0001009159999999995, 0.000100722000000001, 0.00010120799999999847, 0.00010109699999999791, 0.00010088899999999984, 0.00010077799999999928, 0.00010126299999999727, 0.0001010000000000004, 0.00010140299999999991, 0.00010140299999999991, 0.00010111099999999748, 0.00010059700000000088, 0.00010091699999999898, 0.00010141699999999948, 0.00010081899999999852, 0.0001006670000000022, 0.00010120899999999794, 0.00010070899999999744, 0.00010127799999999978, 0.00010147200000000176, 0.00010104200000000257, 0.00010083300000000156, 0.00010148600000000133, 0.00010063899999999959, 0.00010134700000000163, 0.00010127799999999978]</msg>
<status status="PASS" starttime="20201112 12:42:47.115" endtime="20201112 12:42:47.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.111" endtime="20201112 12:42:47.118"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.120" endtime="20201112 12:42:47.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.123" endtime="20201112 12:42:47.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.122" endtime="20201112 12:42:47.143"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.118" endtime="20201112 12:42:47.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.753" endtime="20201112 12:42:47.144"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:46.752" endtime="20201112 12:42:47.144"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.153" endtime="20201112 12:42:47.171"></status>
</kw>
<msg timestamp="20201112 12:42:47.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.151" endtime="20201112 12:42:47.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.173" endtime="20201112 12:42:47.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.175" endtime="20201112 12:42:47.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.149" endtime="20201112 12:42:47.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.147" endtime="20201112 12:42:47.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.185" endtime="20201112 12:42:47.470"></status>
</kw>
<msg timestamp="20201112 12:42:47.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.183" endtime="20201112 12:42:47.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021253958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.474" endtime="20201112 12:42:47.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.482" endtime="20201112 12:42:47.484"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.180" endtime="20201112 12:42:47.485"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.178" endtime="20201112 12:42:47.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.489" level="INFO">${RESULT} = [{'time': 0.021356833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001028749999999988, 'source_diff': 0.0001028749999999988}, {'time': 0.021499875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:47.486" endtime="20201112 12:42:47.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.502" level="INFO">${ACCURACY} = {'time': [0.021356833, 0.021499875, 0.021653319, 0.021804819, 0.021943361, 0.022080889, 0.022220431, 0.022372931, 0.022513458, 0.022664931, 0.022803472, 0.022953986, 0.023104458, 0.023257958, 0.023408...</msg>
<status status="PASS" starttime="20201112 12:42:47.490" endtime="20201112 12:42:47.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.506" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.505" endtime="20201112 12:42:47.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.508" level="INFO">VALUE: [0.0001028749999999988, 0.00010193100000000302, 0.00010209700000000238, 0.00010204100000000063, 0.00010223600000000208, 0.00010240300000000091, 0.00010241700000000048, 0.00010226399999999775, 0.00010197199999999879, 0.00010172299999999801, 0.00010195800000000269, 0.00010198599999999836, 0.00010197200000000226, 0.00010248599999999886, 0.00010170799999999897, 0.0001023610000000022, 0.00010159700000000188, 0.00010227800000000078, 0.00010215300000000066, 0.00010247200000000276, 0.00010225000000000165, 0.00010177800000000028, 0.00010211099999999848, 0.00010233299999999959, 0.00010159799999999788, 0.00010198599999999836, 0.00010255600000000017, 0.00010201400000000097, 0.00010234799999999863, 0.00010252800000000103, 0.00010243000000000058, 0.00010248599999999886, 0.00010172199999999854, 0.00010241700000000048, 0.00010186099999999823, 0.0001020139999999975, 0.00010238899999999787, 0.00010161100000000145, 0.00010190299999999694, 0.00010245799999999972, 0.00010248599999999886, 0.00010198599999999836, 0.00010186099999999823, 0.00010229200000000035, 0.00010186099999999823, 0.0001020420000000001, 0.00010167999999999983, 0.00010190200000000094, 0.0001022220000000025, 0.00010170799999999897]</msg>
<status status="PASS" starttime="20201112 12:42:47.507" endtime="20201112 12:42:47.509"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.503" endtime="20201112 12:42:47.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.512" endtime="20201112 12:42:47.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.515" endtime="20201112 12:42:47.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.514" endtime="20201112 12:42:47.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.510" endtime="20201112 12:42:47.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.145" endtime="20201112 12:42:47.536"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.144" endtime="20201112 12:42:47.536"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.545" endtime="20201112 12:42:47.564"></status>
</kw>
<msg timestamp="20201112 12:42:47.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.543" endtime="20201112 12:42:47.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.565" endtime="20201112 12:42:47.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.568" endtime="20201112 12:42:47.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.541" endtime="20201112 12:42:47.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.539" endtime="20201112 12:42:47.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.578" endtime="20201112 12:42:47.863"></status>
</kw>
<msg timestamp="20201112 12:42:47.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.575" endtime="20201112 12:42:47.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021373361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.867" endtime="20201112 12:42:47.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.875" endtime="20201112 12:42:47.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.572" endtime="20201112 12:42:47.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.571" endtime="20201112 12:42:47.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:47.881" level="INFO">${RESULT} = [{'time': 0.021373361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010433300000000159, 'source_diff': 0.00010433300000000159}, {'time': 0.021527375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:47.878" endtime="20201112 12:42:47.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:47.894" level="INFO">${ACCURACY} = {'time': [0.021373361, 0.021527375, 0.021675806, 0.021828292, 0.021976778, 0.022126306, 0.022275764, 0.02242825, 0.022570764, 0.022710278, 0.022853792, 0.022995292, 0.023143792, 0.023295292, 0.0234378...</msg>
<status status="PASS" starttime="20201112 12:42:47.882" endtime="20201112 12:42:47.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.898" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201112 12:42:47.898" endtime="20201112 12:42:47.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.901" level="INFO">VALUE: [0.00010433300000000159, 0.0001035420000000016, 0.00010274999999999868, 0.00010302799999999807, 0.00010297199999999979, 0.00010295899999999969, 0.00010295800000000022, 0.00010347200000000029, 0.00010302800000000154, 0.00010272199999999954, 0.00010263900000000159, 0.00010276400000000172, 0.00010277800000000128, 0.00010326399999999875, 0.00010320800000000047, 0.00010341599999999854, 0.00010313899999999862, 0.00010327800000000179, 0.00010302799999999807, 0.00010324999999999918, 0.00010333300000000059, 0.00010352799999999857, 0.00010320800000000047, 0.00010320899999999994, 0.00010262500000000202, 0.00010326399999999875, 0.00010313899999999862, 0.00010277800000000128, 0.00010344399999999768, 0.00010313899999999862, 0.00010347200000000029, 0.00010345800000000072, 0.00010270799999999997, 0.00010277800000000128, 0.00010322200000000004, 0.00010295800000000022, 0.00010304100000000163, 0.00010265200000000169, 0.00010258300000000331, 0.00010259799999999888, 0.00010320899999999994, 0.00010315300000000166, 0.00010280600000000042, 0.00010295800000000022, 0.00010259699999999941, 0.0001030139999999985, 0.00010320899999999994, 0.00010299999999999893, 0.00010312499999999905, 0.00010262500000000202]</msg>
<status status="PASS" starttime="20201112 12:42:47.900" endtime="20201112 12:42:47.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.895" endtime="20201112 12:42:47.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.904" endtime="20201112 12:42:47.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:47.908" endtime="20201112 12:42:47.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.906" endtime="20201112 12:42:47.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.903" endtime="20201112 12:42:47.928"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.537" endtime="20201112 12:42:47.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.537" endtime="20201112 12:42:47.929"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.937" endtime="20201112 12:42:47.956"></status>
</kw>
<msg timestamp="20201112 12:42:47.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.936" endtime="20201112 12:42:47.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:47.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:47.958" endtime="20201112 12:42:47.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.960" endtime="20201112 12:42:47.961"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.933" endtime="20201112 12:42:47.962"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.931" endtime="20201112 12:42:47.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:47.969" endtime="20201112 12:42:48.255"></status>
</kw>
<msg timestamp="20201112 12:42:48.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:47.967" endtime="20201112 12:42:48.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021434847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021540222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.259" endtime="20201112 12:42:48.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.267" endtime="20201112 12:42:48.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.965" endtime="20201112 12:42:48.269"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.963" endtime="20201112 12:42:48.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.274" level="INFO">${RESULT} = [{'time': 0.021540222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001053750000000013, 'source_diff': 0.0001053750000000013}, {'time': 0.021685319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:48.270" endtime="20201112 12:42:48.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.286" level="INFO">${ACCURACY} = {'time': [0.021540222, 0.021685319, 0.021829764, 0.021972264, 0.022123764, 0.022280222, 0.022426722, 0.022576236, 0.022731694, 0.022880194, 0.023022722, 0.023175194, 0.023324694, 0.023473181, 0.023625...</msg>
<status status="PASS" starttime="20201112 12:42:48.274" endtime="20201112 12:42:48.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.291" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.290" endtime="20201112 12:42:48.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.293" level="INFO">VALUE: [0.0001053750000000013, 0.00010427699999999984, 0.00010390300000000241, 0.00010408299999999787, 0.00010452799999999957, 0.0001037079999999975, 0.00010390299999999894, 0.00010452799999999957, 0.00010365199999999922, 0.00010442999999999911, 0.00010408299999999787, 0.00010426300000000027, 0.00010366599999999879, 0.00010452799999999957, 0.00010379199999999839, 0.0001043750000000003, 0.00010380600000000142, 0.00010390199999999947, 0.00010362499999999955, 0.000104207999999998, 0.00010381900000000152, 0.00010413899999999962, 0.00010397200000000079, 0.00010390199999999947, 0.00010438899999999987, 0.00010395799999999775, 0.00010452700000000009, 0.00010440299999999944, 0.00010422200000000104, 0.00010411100000000048, 0.00010372300000000001, 0.0001040420000000021, 0.00010383299999999762, 0.00010361099999999998, 0.00010388899999999937, 0.0001035689999999978, 0.00010383299999999762, 0.00010390199999999947, 0.00010370800000000097, 0.0001041949999999979, 0.00010413899999999962, 0.0001036949999999974, 0.00010359700000000041, 0.00010390300000000241, 0.00010426399999999975, 0.00010366600000000226, 0.00010413800000000015, 0.00010454199999999914, 0.00010420800000000147, 0.0001038749999999998]</msg>
<status status="PASS" starttime="20201112 12:42:48.292" endtime="20201112 12:42:48.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.287" endtime="20201112 12:42:48.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.296" endtime="20201112 12:42:48.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.300" endtime="20201112 12:42:48.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.298" endtime="20201112 12:42:48.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.295" endtime="20201112 12:42:48.320"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.930" endtime="20201112 12:42:48.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:47.929" endtime="20201112 12:42:48.321"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.329" endtime="20201112 12:42:48.348"></status>
</kw>
<msg timestamp="20201112 12:42:48.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.328" endtime="20201112 12:42:48.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.350" endtime="20201112 12:42:48.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.352" endtime="20201112 12:42:48.353"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.325" endtime="20201112 12:42:48.354"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.323" endtime="20201112 12:42:48.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.361" endtime="20201112 12:42:48.648"></status>
</kw>
<msg timestamp="20201112 12:42:48.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.359" endtime="20201112 12:42:48.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021242125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.652" endtime="20201112 12:42:48.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.660" endtime="20201112 12:42:48.661"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.357" endtime="20201112 12:42:48.662"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.355" endtime="20201112 12:42:48.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:48.666" level="INFO">${RESULT} = [{'time': 0.021348222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010609699999999944, 'source_diff': 0.00010609699999999944}, {'time': 0.021507194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:48.663" endtime="20201112 12:42:48.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:48.679" level="INFO">${ACCURACY} = {'time': [0.021348222, 0.021507194, 0.021649708, 0.021804194, 0.021948722, 0.02208925, 0.022247736, 0.022399222, 0.022556736, 0.022696264, 0.022852736, 0.023005222, 0.023152736, 0.023294222, 0.0234357...</msg>
<status status="PASS" starttime="20201112 12:42:48.667" endtime="20201112 12:42:48.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.683" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201112 12:42:48.682" endtime="20201112 12:42:48.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.685" level="INFO">VALUE: [0.00010609699999999944, 0.00010497200000000179, 0.00010490200000000047, 0.00010552699999999762, 0.00010554100000000066, 0.00010526400000000075, 0.00010498600000000136, 0.00010513900000000062, 0.0001053750000000013, 0.00010509700000000191, 0.00010477799999999982, 0.00010534699999999869, 0.00010459700000000141, 0.0001047079999999985, 0.00010547200000000229, 0.00010463899999999665, 0.00010498599999999789, 0.00010540300000000044, 0.00010483299999999862, 0.00010508300000000234, 0.00010522199999999857, 0.00010497200000000179, 0.00010530599999999946, 0.00010502800000000007, 0.00010499999999999746, 0.00010509700000000191, 0.00010554200000000014, 0.00010497200000000179, 0.00010547199999999882, 0.00010508300000000234, 0.00010511100000000148, 0.0001046810000000023, 0.00010459699999999794, 0.00010463900000000012, 0.00010484699999999819, 0.00010549999999999796, 0.00010488900000000037, 0.00010494399999999918, 0.00010523599999999814, 0.00010459699999999794, 0.00010483299999999862, 0.00010540200000000097, 0.0001052360000000016, 0.00010475000000000068, 0.00010534699999999869, 0.00010515300000000019, 0.00010479099999999991, 0.00010554200000000014, 0.00010552800000000057, 0.00010540200000000097]</msg>
<status status="PASS" starttime="20201112 12:42:48.684" endtime="20201112 12:42:48.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.680" endtime="20201112 12:42:48.687"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.689" endtime="20201112 12:42:48.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:48.692" endtime="20201112 12:42:48.712"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.691" endtime="20201112 12:42:48.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.687" endtime="20201112 12:42:48.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.322" endtime="20201112 12:42:48.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.321" endtime="20201112 12:42:48.714"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.722" endtime="20201112 12:42:48.741"></status>
</kw>
<msg timestamp="20201112 12:42:48.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.721" endtime="20201112 12:42:48.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:48.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:48.743" endtime="20201112 12:42:48.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.745" endtime="20201112 12:42:48.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.718" endtime="20201112 12:42:48.747"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.716" endtime="20201112 12:42:48.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:48.754" endtime="20201112 12:42:49.040"></status>
</kw>
<msg timestamp="20201112 12:42:49.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:48.753" endtime="20201112 12:42:49.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021971208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022077792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.045" endtime="20201112 12:42:49.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.052" endtime="20201112 12:42:49.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.750" endtime="20201112 12:42:49.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.748" endtime="20201112 12:42:49.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.059" level="INFO">${RESULT} = [{'time': 0.022077792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010658399999999985, 'source_diff': 0.00010658399999999985}, {'time': 0.02222375, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:49.056" endtime="20201112 12:42:49.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.072" level="INFO">${ACCURACY} = {'time': [0.022077792, 0.02222375, 0.02237425, 0.02251975, 0.022668222, 0.022810736, 0.022968153, 0.023109681, 0.023266181, 0.023418597, 0.023568111, 0.023721569, 0.023865069, 0.024012556, 0.024166042...</msg>
<status status="PASS" starttime="20201112 12:42:49.060" endtime="20201112 12:42:49.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.076" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.075" endtime="20201112 12:42:49.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.078" level="INFO">VALUE: [0.00010658399999999985, 0.00010609699999999944, 0.00010587499999999833, 0.00010600000000000193, 0.00010584699999999919, 0.00010645800000000025, 0.00010600000000000193, 0.00010608399999999935, 0.00010623700000000208, 0.00010640299999999797, 0.00010579200000000039, 0.00010640200000000197, 0.0001057079999999995, 0.00010644500000000015, 0.00010579200000000039, 0.00010559700000000241, 0.00010634699999999969, 0.00010581900000000005, 0.00010595800000000322, 0.00010594499999999965, 0.00010595799999999975, 0.00010588900000000137, 0.0001063750000000023, 0.00010640300000000144, 0.00010586100000000223, 0.00010627699999999837, 0.0001056949999999994, 0.00010626399999999828, 0.00010581900000000005, 0.00010593100000000008, 0.00010619500000000337, 0.00010562500000000155, 0.00010600000000000193, 0.00010649999999999896, 0.00010631900000000055, 0.00010608399999999935, 0.00010594500000000312, 0.0001057499999999982, 0.0001063750000000023, 0.00010599999999999846, 0.00010620899999999947, 0.00010580500000000048, 0.00010631900000000055, 0.0001058750000000018, 0.00010581900000000005, 0.00010597199999999932, 0.00010595799999999975, 0.00010599999999999846, 0.00010651399999999853, 0.00010632000000000003]</msg>
<status status="PASS" starttime="20201112 12:42:49.077" endtime="20201112 12:42:49.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.072" endtime="20201112 12:42:49.080"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.082" endtime="20201112 12:42:49.083"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.085" endtime="20201112 12:42:49.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.084" endtime="20201112 12:42:49.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.080" endtime="20201112 12:42:49.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.715" endtime="20201112 12:42:49.106"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:48.714" endtime="20201112 12:42:49.106"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.115" endtime="20201112 12:42:49.134"></status>
</kw>
<msg timestamp="20201112 12:42:49.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.113" endtime="20201112 12:42:49.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.135" endtime="20201112 12:42:49.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.138" endtime="20201112 12:42:49.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.111" endtime="20201112 12:42:49.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.109" endtime="20201112 12:42:49.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.147" endtime="20201112 12:42:49.433"></status>
</kw>
<msg timestamp="20201112 12:42:49.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021371139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021478764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.145" endtime="20201112 12:42:49.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021371139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021478764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.438" endtime="20201112 12:42:49.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.445" endtime="20201112 12:42:49.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.143" endtime="20201112 12:42:49.448"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.141" endtime="20201112 12:42:49.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.452" level="INFO">${RESULT} = [{'time': 0.021478764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010762500000000008, 'source_diff': 0.00010762500000000008}, {'time': 0.021625764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:49.449" endtime="20201112 12:42:49.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.464" level="INFO">${ACCURACY} = {'time': [0.021478764, 0.021625764, 0.021778236, 0.021936694, 0.022095208, 0.022244611, 0.022390111, 0.022539583, 0.022698014, 0.022857472, 0.023003958, 0.023149486, 0.023301931, 0.023451403, 0.023606...</msg>
<status status="PASS" starttime="20201112 12:42:49.453" endtime="20201112 12:42:49.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.469" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.468" endtime="20201112 12:42:49.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.471" level="INFO">VALUE: [0.00010762500000000008, 0.0001072499999999997, 0.00010676399999999878, 0.0001067080000000005, 0.00010669400000000093, 0.00010687499999999933, 0.0001072499999999997, 0.00010751399999999953, 0.00010682000000000053, 0.00010658300000000037, 0.00010730500000000198, 0.00010679200000000139, 0.00010663900000000212, 0.00010749999999999996, 0.00010662499999999908, 0.00010722200000000057, 0.00010749999999999996, 0.0001070690000000013, 0.00010712499999999958, 0.00010686100000000323, 0.00010676400000000225, 0.000107514000000003, 0.00010669400000000093, 0.0001067499999999992, 0.0001070699999999973, 0.00010668100000000083, 0.0001072499999999997, 0.00010688900000000237, 0.00010677699999999887, 0.0001067499999999992, 0.00010751300000000005, 0.0001067499999999992, 0.00010744500000000115, 0.0001068340000000001, 0.00010699999999999946, 0.00010726399999999928, 0.00010751300000000005, 0.00010676400000000225, 0.00010747200000000082, 0.00010712499999999958, 0.00010727800000000232, 0.00010697299999999979, 0.00010736100000000026, 0.00010677799999999835, 0.00010749999999999996, 0.00010741700000000201, 0.00010655500000000123, 0.00010711100000000001, 0.0001068889999999989, 0.00010683300000000062]</msg>
<status status="PASS" starttime="20201112 12:42:49.470" endtime="20201112 12:42:49.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.465" endtime="20201112 12:42:49.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.475" endtime="20201112 12:42:49.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.478" endtime="20201112 12:42:49.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.477" endtime="20201112 12:42:49.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.473" endtime="20201112 12:42:49.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.107" endtime="20201112 12:42:49.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.107" endtime="20201112 12:42:49.499"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.507" endtime="20201112 12:42:49.527"></status>
</kw>
<msg timestamp="20201112 12:42:49.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.506" endtime="20201112 12:42:49.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.528" endtime="20201112 12:42:49.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.530" endtime="20201112 12:42:49.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.503" endtime="20201112 12:42:49.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.501" endtime="20201112 12:42:49.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.539" endtime="20201112 12:42:49.824"></status>
</kw>
<msg timestamp="20201112 12:42:49.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021249694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.538" endtime="20201112 12:42:49.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021249694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021358222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.829" endtime="20201112 12:42:49.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.837" endtime="20201112 12:42:49.838"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.535" endtime="20201112 12:42:49.839"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.534" endtime="20201112 12:42:49.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:49.843" level="INFO">${RESULT} = [{'time': 0.021358222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001085280000000001, 'source_diff': 0.0001085280000000001}, {'time': 0.021510194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:49.840" endtime="20201112 12:42:49.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:49.856" level="INFO">${ACCURACY} = {'time': [0.021358222, 0.021510194, 0.021657722, 0.021805208, 0.021950736, 0.022107181, 0.022265639, 0.022420125, 0.022580597, 0.022741083, 0.022899528, 0.023054069, 0.0232115, 0.023361042, 0.02352248...</msg>
<status status="PASS" starttime="20201112 12:42:49.844" endtime="20201112 12:42:49.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.860" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201112 12:42:49.859" endtime="20201112 12:42:49.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.862" level="INFO">VALUE: [0.0001085280000000001, 0.00010806899999999883, 0.00010797200000000132, 0.0001078889999999999, 0.0001085280000000001, 0.00010826400000000028, 0.0001081950000000019, 0.00010813900000000015, 0.00010819400000000243, 0.00010756899999999833, 0.00010804199999999917, 0.00010816599999999982, 0.00010801400000000003, 0.0001077500000000002, 0.00010780499999999901, 0.00010830599999999899, 0.0001083479999999977, 0.00010831999999999856, 0.00010763899999999965, 0.00010809799999999745, 0.00010795799999999828, 0.00010791699999999904, 0.00010844500000000215, 0.00010841600000000007, 0.00010827799999999985, 0.00010851400000000053, 0.00010786099999999729, 0.0001083890000000004, 0.00010809700000000144, 0.0001084020000000005, 0.00010850000000000096, 0.00010776399999999978, 0.00010801400000000003, 0.00010766699999999879, 0.0001080829999999984, 0.00010813900000000015, 0.00010819499999999843, 0.00010797200000000132, 0.00010840299999999997, 0.00010772300000000054, 0.00010834699999999822, 0.00010819400000000243, 0.0001077219999999976, 0.00010795799999999828, 0.0001077500000000002, 0.00010790299999999947, 0.00010815299999999972, 0.00010801400000000003, 0.00010854199999999967, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201112 12:42:49.861" endtime="20201112 12:42:49.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.857" endtime="20201112 12:42:49.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.866" endtime="20201112 12:42:49.867"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:49.869" endtime="20201112 12:42:49.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.868" endtime="20201112 12:42:49.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.864" endtime="20201112 12:42:49.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.500" endtime="20201112 12:42:49.890"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.499" endtime="20201112 12:42:49.890"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.899" endtime="20201112 12:42:49.918"></status>
</kw>
<msg timestamp="20201112 12:42:49.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.897" endtime="20201112 12:42:49.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:49.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:49.919" endtime="20201112 12:42:49.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.922" endtime="20201112 12:42:49.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.894" endtime="20201112 12:42:49.924"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.892" endtime="20201112 12:42:49.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:49.931" endtime="20201112 12:42:50.217"></status>
</kw>
<msg timestamp="20201112 12:42:50.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021244917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:49.929" endtime="20201112 12:42:50.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021244917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.221" endtime="20201112 12:42:50.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.229" endtime="20201112 12:42:50.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.927" endtime="20201112 12:42:50.231"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.925" endtime="20201112 12:42:50.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.236" level="INFO">${RESULT} = [{'time': 0.021354667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010975000000000221, 'source_diff': 0.00010975000000000221}, {'time': 0.021511639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:50.232" endtime="20201112 12:42:50.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.248" level="INFO">${ACCURACY} = {'time': [0.021354667, 0.021511639, 0.021659139, 0.021820611, 0.021975097, 0.022135542, 0.022294014, 0.0224575, 0.022613931, 0.022772417, 0.022926889, 0.023088347, 0.023242819, 0.023397292, 0.02355077...</msg>
<status status="PASS" starttime="20201112 12:42:50.237" endtime="20201112 12:42:50.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.253" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.252" endtime="20201112 12:42:50.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.255" level="INFO">VALUE: [0.00010975000000000221, 0.00010930599999999999, 0.00010923600000000214, 0.00010875000000000121, 0.00010937499999999836, 0.00010912500000000158, 0.00010901400000000103, 0.00010930599999999999, 0.0001085699999999988, 0.0001088479999999982, 0.00010874999999999774, 0.00010951399999999806, 0.00010887500000000133, 0.00010919499999999943, 0.00010912500000000158, 0.00010906899999999983, 0.00010931900000000008, 0.0001093890000000014, 0.00010893000000000014, 0.00010943100000000011, 0.00010951399999999806, 0.00010877800000000035, 0.00010876400000000078, 0.00010873600000000164, 0.00010913900000000115, 0.00010923699999999814, 0.00010937500000000183, 0.00010895899999999875, 0.00010913900000000115, 0.0001086950000000024, 0.00010933299999999965, 0.00010944400000000021, 0.00010895900000000222, 0.00010863900000000065, 0.00010920799999999953, 0.00010931900000000008, 0.000108902000000001, 0.00010854199999999967, 0.00010912500000000158, 0.00010931900000000008, 0.00010869399999999946, 0.00010920799999999953, 0.00010940300000000097, 0.00010876400000000078, 0.00010900000000000146, 0.00010933299999999965, 0.00010915299999999725, 0.00010904200000000017, 0.00010931900000000008, 0.00010876400000000078]</msg>
<status status="PASS" starttime="20201112 12:42:50.254" endtime="20201112 12:42:50.266"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.249" endtime="20201112 12:42:50.266"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.269" endtime="20201112 12:42:50.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.272" endtime="20201112 12:42:50.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.270" endtime="20201112 12:42:50.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.267" endtime="20201112 12:42:50.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.891" endtime="20201112 12:42:50.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:49.890" endtime="20201112 12:42:50.293"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.301" endtime="20201112 12:42:50.321"></status>
</kw>
<msg timestamp="20201112 12:42:50.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.300" endtime="20201112 12:42:50.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.322" endtime="20201112 12:42:50.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.324" endtime="20201112 12:42:50.326"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.297" endtime="20201112 12:42:50.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.295" endtime="20201112 12:42:50.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.333" endtime="20201112 12:42:50.621"></status>
</kw>
<msg timestamp="20201112 12:42:50.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.332" endtime="20201112 12:42:50.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021357611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021468583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.625" endtime="20201112 12:42:50.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.633" endtime="20201112 12:42:50.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.329" endtime="20201112 12:42:50.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.328" endtime="20201112 12:42:50.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:50.639" level="INFO">${RESULT} = [{'time': 0.021468583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011097200000000085, 'source_diff': 0.00011097200000000085}, {'time': 0.021618569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:50.636" endtime="20201112 12:42:50.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:50.652" level="INFO">${ACCURACY} = {'time': [0.021468583, 0.021618569, 0.021770083, 0.021925583, 0.022088042, 0.022234569, 0.022382097, 0.022535611, 0.022693083, 0.022841597, 0.022996111, 0.023145639, 0.023296167, 0.023444708, 0.023595...</msg>
<status status="PASS" starttime="20201112 12:42:50.640" endtime="20201112 12:42:50.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.656" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201112 12:42:50.655" endtime="20201112 12:42:50.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.659" level="INFO">VALUE: [0.00011097200000000085, 0.00010981900000000058, 0.0001102769999999989, 0.0001097769999999984, 0.00010988899999999843, 0.00010970800000000003, 0.00011020800000000053, 0.00011044400000000121, 0.00011001399999999856, 0.00011026400000000228, 0.00011031900000000108, 0.00011032000000000056, 0.00011038899999999893, 0.00010966600000000132, 0.00010973599999999917, 0.00010963899999999818, 0.00010988899999999843, 0.00011009699999999997, 0.00011015300000000172, 0.00010984699999999972, 0.00011029200000000142, 0.00011051400000000253, 0.00011034700000000022, 0.00010961100000000251, 0.00011012500000000258, 0.00010970800000000003, 0.00011036099999999979, 0.00011041699999999807, 0.0001103890000000024, 0.00010965300000000122, 0.00011027799999999838, 0.00011002799999999813, 0.0001098890000000019, 0.00010969499999999993, 0.00011015199999999878, 0.00011006900000000083, 0.00010977799999999788, 0.000109902999999998, 0.00011015300000000172, 0.0001104029999999985, 0.00010959700000000294, 0.00010970800000000003, 0.00011036099999999979, 0.00010952700000000162, 0.00010977800000000135, 0.00010968100000000036, 0.00011032000000000056, 0.0001100830000000004, 0.00010998599999999942, 0.00011023599999999967]</msg>
<status status="PASS" starttime="20201112 12:42:50.657" endtime="20201112 12:42:50.659"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.653" endtime="20201112 12:42:50.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.662" endtime="20201112 12:42:50.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:50.665" endtime="20201112 12:42:50.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.664" endtime="20201112 12:42:50.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.661" endtime="20201112 12:42:50.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.294" endtime="20201112 12:42:50.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.293" endtime="20201112 12:42:50.686"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.695" endtime="20201112 12:42:50.714"></status>
</kw>
<msg timestamp="20201112 12:42:50.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.693" endtime="20201112 12:42:50.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:50.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:50.716" endtime="20201112 12:42:50.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.718" endtime="20201112 12:42:50.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.691" endtime="20201112 12:42:50.720"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.689" endtime="20201112 12:42:50.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:50.727" endtime="20201112 12:42:51.015"></status>
</kw>
<msg timestamp="20201112 12:42:51.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021381986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:50.725" endtime="20201112 12:42:51.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021269792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021381986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.019" endtime="20201112 12:42:51.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.027" endtime="20201112 12:42:51.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.723" endtime="20201112 12:42:51.029"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.721" endtime="20201112 12:42:51.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.033" level="INFO">${RESULT} = [{'time': 0.021381986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011219399999999949, 'source_diff': 0.00011219399999999949}, {'time': 0.021540986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:51.030" endtime="20201112 12:42:51.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.046" level="INFO">${ACCURACY} = {'time': [0.021381986, 0.021540986, 0.021689528, 0.021839042, 0.021987597, 0.022149056, 0.022299653, 0.022457083, 0.022603597, 0.022754125, 0.022909681, 0.023059181, 0.023218625, 0.023378111, 0.023537...</msg>
<status status="PASS" starttime="20201112 12:42:51.034" endtime="20201112 12:42:51.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.051" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.050" endtime="20201112 12:42:51.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.053" level="INFO">VALUE: [0.00011219399999999949, 0.0001107220000000006, 0.00011059700000000047, 0.00011095900000000075, 0.00011152799999999963, 0.00011077799999999888, 0.000110902999999999, 0.00011104099999999922, 0.00011138899999999993, 0.00011113899999999968, 0.00011158400000000138, 0.00011099999999999999, 0.00011127799999999938, 0.00011129199999999895, 0.00011120800000000153, 0.00011076399999999931, 0.00011106899999999836, 0.00011098600000000042, 0.0001109159999999991, 0.00011091600000000257, 0.0001112769999999999, 0.00011119399999999849, 0.00011126399999999981, 0.00011099999999999999, 0.00011095900000000075, 0.00011090300000000247, 0.00011082000000000106, 0.00011073600000000017, 0.00011147200000000135, 0.00011087499999999986, 0.00011156899999999886, 0.00011109700000000097, 0.00011127799999999938, 0.0001114029999999995, 0.00011095900000000075, 0.00011101399999999956, 0.00011059700000000047, 0.00011113899999999968, 0.00011076299999999983, 0.00011131900000000208, 0.00011095800000000128, 0.00011067999999999842, 0.00011061100000000004, 0.00011088899999999943, 0.00011151400000000006, 0.00011113899999999968, 0.00011076400000000278, 0.00011151400000000006, 0.00011079199999999845, 0.00011126400000000328]</msg>
<status status="PASS" starttime="20201112 12:42:51.052" endtime="20201112 12:42:51.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.047" endtime="20201112 12:42:51.054"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.056" endtime="20201112 12:42:51.058"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.060" endtime="20201112 12:42:51.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.058" endtime="20201112 12:42:51.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.055" endtime="20201112 12:42:51.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.687" endtime="20201112 12:42:51.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:50.687" endtime="20201112 12:42:51.081"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.089" endtime="20201112 12:42:51.108"></status>
</kw>
<msg timestamp="20201112 12:42:51.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.088" endtime="20201112 12:42:51.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.110" endtime="20201112 12:42:51.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.112" endtime="20201112 12:42:51.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.085" endtime="20201112 12:42:51.114"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.083" endtime="20201112 12:42:51.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.121" endtime="20201112 12:42:51.408"></status>
</kw>
<msg timestamp="20201112 12:42:51.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021235764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.120" endtime="20201112 12:42:51.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021235764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021348514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.412" endtime="20201112 12:42:51.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.420" endtime="20201112 12:42:51.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.117" endtime="20201112 12:42:51.422"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.115" endtime="20201112 12:42:51.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.426" level="INFO">${RESULT} = [{'time': 0.021348514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011274999999999827, 'source_diff': 0.00011274999999999827}, {'time': 0.021504514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:51.423" endtime="20201112 12:42:51.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.439" level="INFO">${ACCURACY} = {'time': [0.021348514, 0.021504514, 0.021654028, 0.021814486, 0.021962, 0.022112556, 0.022265028, 0.022426444, 0.022585931, 0.022740417, 0.022903875, 0.023058375, 0.023209889, 0.023376347, 0.023538819...</msg>
<status status="PASS" starttime="20201112 12:42:51.427" endtime="20201112 12:42:51.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.443" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.442" endtime="20201112 12:42:51.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.446" level="INFO">VALUE: [0.00011274999999999827, 0.00011208299999999893, 0.0001117359999999977, 0.00011181900000000258, 0.0001123749999999979, 0.00011218099999999939, 0.00011211099999999807, 0.00011156899999999886, 0.00011219499999999896, 0.00011248599999999845, 0.00011180599999999902, 0.00011188900000000043, 0.00011200000000000099, 0.00011244399999999974, 0.00011236099999999832, 0.00011224999999999777, 0.00011187500000000086, 0.00011165299999999975, 0.00011213900000000068, 0.00011233299999999918, 0.00011233299999999918, 0.0001119160000000001, 0.00011165300000000322, 0.00011233400000000213, 0.00011156999999999834, 0.00011236100000000179, 0.00011225000000000124, 0.00011194400000000271, 0.00011244499999999921, 0.00011170799999999856, 0.00011176399999999684, 0.00011165299999999975, 0.00011155599999999877, 0.00011181899999999911, 0.00011233299999999918, 0.00011244399999999974, 0.00011177799999999988, 0.00011158299999999843, 0.00011213900000000068, 0.00011218099999999939, 0.00011219500000000243, 0.0001123749999999979, 0.00011177799999999988, 0.00011241700000000007, 0.00011217999999999992, 0.00011245799999999931, 0.00011216600000000035, 0.0001120830000000024, 0.000111596999999998, 0.00011252700000000115]</msg>
<status status="PASS" starttime="20201112 12:42:51.444" endtime="20201112 12:42:51.446"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.440" endtime="20201112 12:42:51.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.449" endtime="20201112 12:42:51.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.453" endtime="20201112 12:42:51.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.451" endtime="20201112 12:42:51.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.448" endtime="20201112 12:42:51.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.081" endtime="20201112 12:42:51.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.081" endtime="20201112 12:42:51.473"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.482" endtime="20201112 12:42:51.501"></status>
</kw>
<msg timestamp="20201112 12:42:51.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.480" endtime="20201112 12:42:51.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.503" endtime="20201112 12:42:51.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.505" endtime="20201112 12:42:51.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.478" endtime="20201112 12:42:51.507"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.476" endtime="20201112 12:42:51.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.514" endtime="20201112 12:42:51.801"></status>
</kw>
<msg timestamp="20201112 12:42:51.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.513" endtime="20201112 12:42:51.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021236111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021350125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.805" endtime="20201112 12:42:51.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.813" endtime="20201112 12:42:51.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.510" endtime="20201112 12:42:51.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.508" endtime="20201112 12:42:51.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:51.819" level="INFO">${RESULT} = [{'time': 0.021350125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011401400000000256, 'source_diff': 0.00011401400000000256}, {'time': 0.021513083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:51.816" endtime="20201112 12:42:51.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:51.832" level="INFO">${ACCURACY} = {'time': [0.021350125, 0.021513083, 0.021669556, 0.021818083, 0.021973583, 0.022124069, 0.022285542, 0.022452014, 0.022612472, 0.022770931, 0.022928389, 0.023089875, 0.023255306, 0.023421736, 0.023571...</msg>
<status status="PASS" starttime="20201112 12:42:51.820" endtime="20201112 12:42:51.832"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.836" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201112 12:42:51.835" endtime="20201112 12:42:51.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.839" level="INFO">VALUE: [0.00011401400000000256, 0.0001134299999999977, 0.00011324999999999877, 0.00011319399999999702, 0.00011351400000000206, 0.00011351299999999911, 0.00011263899999999771, 0.00011279200000000045, 0.00011351400000000206, 0.0001133480000000027, 0.00011269499999999946, 0.00011281900000000011, 0.00011318100000000039, 0.00011261099999999857, 0.00011324999999999877, 0.0001132359999999992, 0.00011333300000000018, 0.00011287500000000186, 0.00011306900000000036, 0.00011262499999999814, 0.00011286100000000229, 0.00011309700000000297, 0.00011323600000000267, 0.00011312499999999864, 0.00011258299999999943, 0.0001128749999999984, 0.00011336099999999932, 0.00011312500000000211, 0.00011324999999999877, 0.00011261100000000204, 0.00011302799999999766, 0.00011291700000000057, 0.00011337500000000236, 0.00011263899999999771, 0.00011301300000000208, 0.00011293100000000014, 0.00011276400000000131, 0.00011330600000000052, 0.00011350000000000249, 0.00011297199999999938, 0.00011252800000000063, 0.00011351399999999859, 0.00011340200000000203, 0.00011344400000000074, 0.00011261099999999857, 0.00011319499999999996, 0.00011306999999999984, 0.00011351399999999859, 0.00011279200000000045, 0.00011275000000000174]</msg>
<status status="PASS" starttime="20201112 12:42:51.838" endtime="20201112 12:42:51.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.833" endtime="20201112 12:42:51.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.842" endtime="20201112 12:42:51.844"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:51.846" endtime="20201112 12:42:51.865"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.844" endtime="20201112 12:42:51.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.841" endtime="20201112 12:42:51.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.474" endtime="20201112 12:42:51.866"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.474" endtime="20201112 12:42:51.867"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.875" endtime="20201112 12:42:51.894"></status>
</kw>
<msg timestamp="20201112 12:42:51.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.873" endtime="20201112 12:42:51.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:51.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:51.896" endtime="20201112 12:42:51.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.898" endtime="20201112 12:42:51.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.871" endtime="20201112 12:42:51.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.869" endtime="20201112 12:42:51.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:51.907" endtime="20201112 12:42:52.195"></status>
</kw>
<msg timestamp="20201112 12:42:52.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021261042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021376417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:51.906" endtime="20201112 12:42:52.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021261042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021376417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.199" endtime="20201112 12:42:52.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.208" endtime="20201112 12:42:52.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.903" endtime="20201112 12:42:52.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.902" endtime="20201112 12:42:52.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.214" level="INFO">${RESULT} = [{'time': 0.021376417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001153750000000009, 'source_diff': 0.0001153750000000009}, {'time': 0.021535389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:52.211" endtime="20201112 12:42:52.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.227" level="INFO">${ACCURACY} = {'time': [0.021376417, 0.021535389, 0.021691875, 0.021851361, 0.022017847, 0.022185264, 0.022351722, 0.022506222, 0.022654736, 0.02280625, 0.022961722, 0.023118236, 0.023274708, 0.02342425, 0.02358572...</msg>
<status status="PASS" starttime="20201112 12:42:52.215" endtime="20201112 12:42:52.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.231" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.230" endtime="20201112 12:42:52.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.233" level="INFO">VALUE: [0.0001153750000000009, 0.00011381999999999712, 0.00011450000000000002, 0.00011386099999999982, 0.00011372200000000013, 0.00011361099999999957, 0.00011370800000000056, 0.00011405499999999832, 0.00011366700000000132, 0.00011356900000000086, 0.00011424999999999977, 0.00011440299999999903, 0.0001135550000000013, 0.00011452799999999916, 0.00011370800000000056, 0.00011416699999999835, 0.00011384700000000025, 0.00011430500000000204, 0.00011420799999999759, 0.00011402800000000213, 0.00011394500000000071, 0.00011359799999999948, 0.00011443099999999817, 0.00011433299999999771, 0.00011386099999999982, 0.00011424999999999977, 0.00011443099999999817, 0.00011362499999999914, 0.000113597, 0.00011386099999999982, 0.0001140559999999978, 0.0001143749999999999, 0.0001137359999999997, 0.00011393099999999767, 0.00011362500000000261, 0.00011369400000000099, 0.0001137909999999985, 0.00011393099999999767, 0.0001142360000000002, 0.00011419400000000149, 0.00011388900000000243, 0.00011395800000000081, 0.00011448600000000045, 0.00011399999999999952, 0.00011413900000000268, 0.00011368100000000089, 0.00011398599999999995, 0.0001138749999999994, 0.00011376399999999884, 0.00011430600000000152]</msg>
<status status="PASS" starttime="20201112 12:42:52.232" endtime="20201112 12:42:52.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.227" endtime="20201112 12:42:52.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.237" endtime="20201112 12:42:52.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.240" endtime="20201112 12:42:52.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.239" endtime="20201112 12:42:52.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.235" endtime="20201112 12:42:52.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.868" endtime="20201112 12:42:52.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:51.867" endtime="20201112 12:42:52.261"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.270" endtime="20201112 12:42:52.289"></status>
</kw>
<msg timestamp="20201112 12:42:52.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.268" endtime="20201112 12:42:52.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.291" endtime="20201112 12:42:52.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.293" endtime="20201112 12:42:52.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.265" endtime="20201112 12:42:52.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.263" endtime="20201112 12:42:52.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.302" endtime="20201112 12:42:52.589"></status>
</kw>
<msg timestamp="20201112 12:42:52.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.300" endtime="20201112 12:42:52.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021300917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021417028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.593" endtime="20201112 12:42:52.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.601" endtime="20201112 12:42:52.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.298" endtime="20201112 12:42:52.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.296" endtime="20201112 12:42:52.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:52.608" level="INFO">${RESULT} = [{'time': 0.021417028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011611100000000207, 'source_diff': 0.00011611100000000207}, {'time': 0.021584972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:52.605" endtime="20201112 12:42:52.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:52.620" level="INFO">${ACCURACY} = {'time': [0.021417028, 0.021584972, 0.021753389, 0.021912819, 0.02207325, 0.022238694, 0.022392194, 0.022560597, 0.022714056, 0.022878486, 0.023034944, 0.023200375, 0.023357861, 0.023518306, 0.0236797...</msg>
<status status="PASS" starttime="20201112 12:42:52.609" endtime="20201112 12:42:52.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.625" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201112 12:42:52.624" endtime="20201112 12:42:52.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.627" level="INFO">VALUE: [0.00011611100000000207, 0.00011547200000000188, 0.00011482000000000159, 0.00011511100000000107, 0.00011483299999999821, 0.000114597000000001, 0.00011526300000000086, 0.00011525000000000077, 0.0001152230000000011, 0.00011466699999999885, 0.00011541600000000013, 0.00011547199999999841, 0.00011475000000000027, 0.00011504199999999923, 0.00011481999999999812, 0.00011529199999999948, 0.0001147909999999995, 0.00011538900000000046, 0.0001153750000000009, 0.0001152360000000012, 0.0001153750000000009, 0.00011512500000000064, 0.00011488899999999996, 0.0001154169999999996, 0.00011480599999999855, 0.00011462500000000014, 0.00011451399999999959, 0.00011533300000000218, 0.00011498600000000095, 0.00011461100000000057, 0.00011541600000000013, 0.00011509799999999751, 0.00011511100000000107, 0.0001147360000000007, 0.00011472200000000113, 0.00011518099999999892, 0.00011536100000000132, 0.0001153620000000008, 0.00011505600000000227, 0.00011547200000000188, 0.00011458299999999796, 0.00011469500000000146, 0.00011531899999999914, 0.00011502799999999966, 0.00011516699999999935, 0.00011479199999999898, 0.00011502799999999966, 0.00011479199999999898, 0.00011482000000000159, 0.00011468100000000189]</msg>
<status status="PASS" starttime="20201112 12:42:52.626" endtime="20201112 12:42:52.628"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.621" endtime="20201112 12:42:52.629"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.631" endtime="20201112 12:42:52.632"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:52.634" endtime="20201112 12:42:52.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.633" endtime="20201112 12:42:52.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.629" endtime="20201112 12:42:52.654"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.262" endtime="20201112 12:42:52.655"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.261" endtime="20201112 12:42:52.655"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.663" endtime="20201112 12:42:52.683"></status>
</kw>
<msg timestamp="20201112 12:42:52.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.662" endtime="20201112 12:42:52.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:52.684" endtime="20201112 12:42:52.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.687" endtime="20201112 12:42:52.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.659" endtime="20201112 12:42:52.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.657" endtime="20201112 12:42:52.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.695" endtime="20201112 12:42:52.981"></status>
</kw>
<msg timestamp="20201112 12:42:52.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.694" endtime="20201112 12:42:52.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:52.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021298111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:52.985" endtime="20201112 12:42:52.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:52.994" endtime="20201112 12:42:52.995"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.692" endtime="20201112 12:42:52.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.690" endtime="20201112 12:42:52.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.001" level="INFO">${RESULT} = [{'time': 0.021298111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011680500000000107, 'source_diff': 0.00011680500000000107}, {'time': 0.021465083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:52.997" endtime="20201112 12:42:53.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.014" level="INFO">${ACCURACY} = {'time': [0.021298111, 0.021465083, 0.021628542, 0.021783042, 0.021941528, 0.022103028, 0.022264486, 0.022427958, 0.022596403, 0.022762861, 0.022914431, 0.023075861, 0.023234347, 0.023402819, 0.023567...</msg>
<status status="PASS" starttime="20201112 12:42:53.002" endtime="20201112 12:42:53.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.018" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.017" endtime="20201112 12:42:53.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.020" level="INFO">VALUE: [0.00011680500000000107, 0.0001155689999999994, 0.0001158750000000014, 0.00011594499999999924, 0.00011584699999999878, 0.00011609699999999903, 0.00011590300000000053, 0.00011558300000000243, 0.00011619499999999949, 0.00011636099999999885, 0.00011562499999999767, 0.00011573599999999823, 0.00011569399999999952, 0.00011619400000000002, 0.00011630500000000057, 0.00011586100000000182, 0.00011645800000000331, 0.00011636199999999833, 0.0001160689999999999, 0.00011593099999999967, 0.00011555499999999982, 0.00011599999999999805, 0.0001157230000000016, 0.00011613900000000121, 0.00011561100000000157, 0.00011613899999999774, 0.00011637499999999842, 0.00011608399999999894, 0.00011649999999999855, 0.00011567999999999995, 0.00011649999999999855, 0.0001163049999999971, 0.00011651300000000211, 0.00011604100000000075, 0.0001162499999999983, 0.00011580599999999955, 0.00011580599999999955, 0.00011569499999999899, 0.00011583399999999869, 0.00011569500000000246, 0.00011583300000000268, 0.00011594399999999977, 0.00011622200000000263, 0.00011622199999999916, 0.00011570899999999856, 0.00011580600000000302, 0.00011598599999999848, 0.00011588900000000096, 0.00011608299999999946, 0.00011618000000000045]</msg>
<status status="PASS" starttime="20201112 12:42:53.019" endtime="20201112 12:42:53.021"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.015" endtime="20201112 12:42:53.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.024" endtime="20201112 12:42:53.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.027" endtime="20201112 12:42:53.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.026" endtime="20201112 12:42:53.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.022" endtime="20201112 12:42:53.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.656" endtime="20201112 12:42:53.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:52.655" endtime="20201112 12:42:53.048"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.057" endtime="20201112 12:42:53.076"></status>
</kw>
<msg timestamp="20201112 12:42:53.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.055" endtime="20201112 12:42:53.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.078" endtime="20201112 12:42:53.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.080" endtime="20201112 12:42:53.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.053" endtime="20201112 12:42:53.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.051" endtime="20201112 12:42:53.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.089" endtime="20201112 12:42:53.375"></status>
</kw>
<msg timestamp="20201112 12:42:53.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.087" endtime="20201112 12:42:53.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021367917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.379" endtime="20201112 12:42:53.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.387" endtime="20201112 12:42:53.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.085" endtime="20201112 12:42:53.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.083" endtime="20201112 12:42:53.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.394" level="INFO">${RESULT} = [{'time': 0.021486139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011822200000000116, 'source_diff': 0.00011822200000000116}, {'time': 0.021650083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.390" endtime="20201112 12:42:53.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.406" level="INFO">${ACCURACY} = {'time': [0.021486139, 0.021650083, 0.021808542, 0.021964014, 0.022128472, 0.022281944, 0.022441431, 0.022598889, 0.022750389, 0.022919806, 0.023089222, 0.023256639, 0.023420083, 0.023586528, 0.023741...</msg>
<status status="PASS" starttime="20201112 12:42:53.394" endtime="20201112 12:42:53.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.411" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.410" endtime="20201112 12:42:53.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.413" level="INFO">VALUE: [0.00011822200000000116, 0.00011736099999999985, 0.00011727800000000191, 0.00011733300000000071, 0.00011736099999999985, 0.00011666600000000138, 0.00011669499999999999, 0.00011748599999999998, 0.0001170560000000008, 0.00011736199999999933, 0.00011704099999999829, 0.00011659699999999953, 0.0001167910000000015, 0.00011665299999999781, 0.00011700000000000252, 0.00011687499999999892, 0.00011738900000000246, 0.00011705500000000132, 0.0001167230000000026, 0.0001165560000000003, 0.00011722200000000016, 0.00011742999999999823, 0.00011673599999999923, 0.00011730599999999758, 0.00011657000000000334, 0.00011695800000000034, 0.0001173049999999981, 0.00011743100000000117, 0.0001171109999999996, 0.00011677799999999794, 0.00011697199999999991, 0.00011702800000000166, 0.00011715300000000178, 0.00011720800000000059, 0.00011749999999999955, 0.00011681900000000064, 0.00011677799999999794, 0.00011656999999999987, 0.00011726399999999887, 0.00011662500000000214, 0.00011747299999999988, 0.00011666600000000138, 0.00011672200000000313, 0.00011665300000000128, 0.00011722200000000016, 0.00011732000000000062, 0.000117291000000002, 0.00011665300000000128, 0.00011697199999999991, 0.00011690300000000153]</msg>
<status status="PASS" starttime="20201112 12:42:53.412" endtime="20201112 12:42:53.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.407" endtime="20201112 12:42:53.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.417" endtime="20201112 12:42:53.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.420" endtime="20201112 12:42:53.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.418" endtime="20201112 12:42:53.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.415" endtime="20201112 12:42:53.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.049" endtime="20201112 12:42:53.441"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.049" endtime="20201112 12:42:53.441"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.449" endtime="20201112 12:42:53.469"></status>
</kw>
<msg timestamp="20201112 12:42:53.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.448" endtime="20201112 12:42:53.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.470" endtime="20201112 12:42:53.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.473" endtime="20201112 12:42:53.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.445" endtime="20201112 12:42:53.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.443" endtime="20201112 12:42:53.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.481" endtime="20201112 12:42:53.768"></status>
</kw>
<msg timestamp="20201112 12:42:53.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021302972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.480" endtime="20201112 12:42:53.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021302972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.772" endtime="20201112 12:42:53.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.780" endtime="20201112 12:42:53.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.478" endtime="20201112 12:42:53.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.476" endtime="20201112 12:42:53.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:53.787" level="INFO">${RESULT} = [{'time': 0.021302972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011933299999999925, 'source_diff': 0.00011933299999999925}, {'time': 0.021459931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:53.784" endtime="20201112 12:42:53.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:53.800" level="INFO">${ACCURACY} = {'time': [0.021302972, 0.021459931, 0.021618389, 0.021785847, 0.021957236, 0.022127667, 0.022289097, 0.022449556, 0.022613056, 0.022770458, 0.022934903, 0.023100347, 0.023262806, 0.023417306, 0.023572...</msg>
<status status="PASS" starttime="20201112 12:42:53.788" endtime="20201112 12:42:53.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.804" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201112 12:42:53.803" endtime="20201112 12:42:53.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.807" level="INFO">VALUE: [0.00011933299999999925, 0.00011802800000000266, 0.00011772199999999719, 0.0001183049999999991, 0.00011840300000000303, 0.00011815299999999931, 0.00011820800000000159, 0.00011765299999999881, 0.00011797300000000038, 0.00011840200000000009, 0.0001181110000000006, 0.00011816599999999941, 0.00011766700000000185, 0.00011826399999999987, 0.00011768100000000142, 0.00011840200000000009, 0.00011768100000000142, 0.00011816700000000235, 0.00011798600000000048, 0.00011782000000000112, 0.00011777799999999894, 0.00011831899999999868, 0.00011773600000000023, 0.00011759800000000001, 0.00011765300000000228, 0.00011759800000000001, 0.00011836100000000085, 0.00011752700000000268, 0.00011772300000000013, 0.00011816599999999941, 0.00011758300000000096, 0.0001182089999999976, 0.00011840299999999956, 0.00011779199999999851, 0.00011791699999999863, 0.00011827699999999997, 0.00011755599999999783, 0.00011811099999999713, 0.00011837500000000042, 0.00011779199999999851, 0.00011773600000000023, 0.00011834700000000128, 0.00011823599999999726, 0.00011808300000000146, 0.00011791699999999863, 0.00011823600000000073, 0.00011795799999999787, 0.00011831899999999868, 0.00011834799999999729, 0.00011766599999999891]</msg>
<status status="PASS" starttime="20201112 12:42:53.805" endtime="20201112 12:42:53.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.801" endtime="20201112 12:42:53.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.810" endtime="20201112 12:42:53.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:53.813" endtime="20201112 12:42:53.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.812" endtime="20201112 12:42:53.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.809" endtime="20201112 12:42:53.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.442" endtime="20201112 12:42:53.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.441" endtime="20201112 12:42:53.834"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.843" endtime="20201112 12:42:53.863"></status>
</kw>
<msg timestamp="20201112 12:42:53.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.842" endtime="20201112 12:42:53.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:53.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:53.865" endtime="20201112 12:42:53.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.867" endtime="20201112 12:42:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.839" endtime="20201112 12:42:53.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.837" endtime="20201112 12:42:53.870"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:53.876" endtime="20201112 12:42:54.165"></status>
</kw>
<msg timestamp="20201112 12:42:54.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:53.874" endtime="20201112 12:42:54.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022022431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022142042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.169" endtime="20201112 12:42:54.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.177" endtime="20201112 12:42:54.178"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.872" endtime="20201112 12:42:54.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.870" endtime="20201112 12:42:54.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.183" level="INFO">${RESULT} = [{'time': 0.022142042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001196110000000021, 'source_diff': 0.0001196110000000021}, {'time': 0.022297028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:54.180" endtime="20201112 12:42:54.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.196" level="INFO">${ACCURACY} = {'time': [0.022142042, 0.022297028, 0.0224565, 0.022619958, 0.022787472, 0.022956861, 0.023120278, 0.023290694, 0.023445194, 0.023600653, 0.023756153, 0.023927583, 0.024097014, 0.024266444, 0.02442090...</msg>
<status status="PASS" starttime="20201112 12:42:54.184" endtime="20201112 12:42:54.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.200" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.199" endtime="20201112 12:42:54.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.202" level="INFO">VALUE: [0.0001196110000000021, 0.00011886100000000135, 0.00011886100000000135, 0.0001188049999999996, 0.00011900000000000105, 0.00011892999999999973, 0.00011852799999999969, 0.00011890200000000059, 0.00011852700000000022, 0.00011927800000000044, 0.00011880599999999908, 0.00011916600000000041, 0.00011855599999999883, 0.00011855500000000282, 0.00011883400000000169, 0.00011866700000000285, 0.0001187500000000008, 0.00011854199999999926, 0.00011934699999999882, 0.00011866699999999938, 0.00011886100000000135, 0.00011852799999999969, 0.0001185829999999985, 0.00011872199999999819, 0.00011920800000000259, 0.00011897200000000191, 0.00011901399999999715, 0.00011868099999999895, 0.00011916699999999988, 0.00011886200000000083, 0.00011852799999999969, 0.00011883299999999875, 0.00011913899999999727, 0.00011927800000000044, 0.00011886200000000083, 0.0001187500000000008, 0.000119082999999999, 0.00011893100000000267, 0.00011886100000000135, 0.00011948599999999851, 0.00011902699999999725, 0.00011927799999999697, 0.00011868100000000242, 0.00011929200000000001, 0.00011927800000000044, 0.00011886099999999789, 0.00011858399999999797, 0.00011855499999999936, 0.00011945899999999884, 0.00011916600000000041]</msg>
<status status="PASS" starttime="20201112 12:42:54.201" endtime="20201112 12:42:54.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.197" endtime="20201112 12:42:54.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.206" endtime="20201112 12:42:54.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.210" endtime="20201112 12:42:54.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.208" endtime="20201112 12:42:54.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.204" endtime="20201112 12:42:54.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.835" endtime="20201112 12:42:54.230"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:53.835" endtime="20201112 12:42:54.230"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.239" endtime="20201112 12:42:54.259"></status>
</kw>
<msg timestamp="20201112 12:42:54.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.237" endtime="20201112 12:42:54.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.260" endtime="20201112 12:42:54.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.262" endtime="20201112 12:42:54.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.235" endtime="20201112 12:42:54.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.233" endtime="20201112 12:42:54.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.271" endtime="20201112 12:42:54.558"></status>
</kw>
<msg timestamp="20201112 12:42:54.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.270" endtime="20201112 12:42:54.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021258264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.562" endtime="20201112 12:42:54.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.570" endtime="20201112 12:42:54.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.267" endtime="20201112 12:42:54.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.265" endtime="20201112 12:42:54.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.576" level="INFO">${RESULT} = [{'time': 0.021378792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012052800000000169, 'source_diff': 0.00012052800000000169}, {'time': 0.02154075, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201112 12:42:54.573" endtime="20201112 12:42:54.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.589" level="INFO">${ACCURACY} = {'time': [0.021378792, 0.02154075, 0.021709167, 0.021864639, 0.022037042, 0.0221935, 0.022361931, 0.022517375, 0.022677819, 0.022837278, 0.023000694, 0.023166139, 0.023321597, 0.023486028, 0.023658431...</msg>
<status status="PASS" starttime="20201112 12:42:54.577" endtime="20201112 12:42:54.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.593" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.592" endtime="20201112 12:42:54.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.596" level="INFO">VALUE: [0.00012052800000000169, 0.00012022199999999969, 0.00011991700000000063, 0.00012002800000000119, 0.00011983399999999922, 0.00012027800000000144, 0.00012020900000000306, 0.00011970799999999962, 0.00011970799999999962, 0.00011997199999999944, 0.00011986099999999889, 0.00012004199999999729, 0.00011972199999999919, 0.00011994499999999977, 0.00012044500000000027, 0.00011957000000000287, 0.00012026400000000187, 0.00011959699999999907, 0.00012019500000000002, 0.00012001399999999815, 0.00011979099999999757, 0.00012041699999999766, 0.0001202089999999996, 0.00011969400000000005, 0.00011970900000000256, 0.00012041600000000166, 0.00011963900000000124, 0.00012022299999999916, 0.00011984699999999932, 0.00012022199999999969, 0.00011983299999999975, 0.00012022199999999969, 0.0001204440000000008, 0.00011977800000000094, 0.00012029100000000154, 0.00012020800000000012, 0.00011959800000000201, 0.00011969499999999952, 0.00011999999999999858, 0.00012036199999999886, 0.00012048599999999951, 0.00012023600000000273, 0.0001197500000000018, 0.00012011099999999914, 0.0001201110000000026, 0.00012018100000000045, 0.0001204310000000007, 0.0001202089999999996, 0.0001204310000000007, 0.00012045800000000037]</msg>
<status status="PASS" starttime="20201112 12:42:54.594" endtime="20201112 12:42:54.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.590" endtime="20201112 12:42:54.597"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.599" endtime="20201112 12:42:54.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.603" endtime="20201112 12:42:54.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.601" endtime="20201112 12:42:54.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.597" endtime="20201112 12:42:54.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.231" endtime="20201112 12:42:54.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.231" endtime="20201112 12:42:54.624"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.632" endtime="20201112 12:42:54.652"></status>
</kw>
<msg timestamp="20201112 12:42:54.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.630" endtime="20201112 12:42:54.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:54.653" endtime="20201112 12:42:54.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.656" endtime="20201112 12:42:54.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.628" endtime="20201112 12:42:54.658"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.626" endtime="20201112 12:42:54.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.664" endtime="20201112 12:42:54.951"></status>
</kw>
<msg timestamp="20201112 12:42:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021209375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021330931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.663" endtime="20201112 12:42:54.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021209375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021330931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:54.955" endtime="20201112 12:42:54.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.963" endtime="20201112 12:42:54.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.660" endtime="20201112 12:42:54.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.659" endtime="20201112 12:42:54.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:54.969" level="INFO">${RESULT} = [{'time': 0.021330931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012155600000000183, 'source_diff': 0.00012155600000000183}, {'time': 0.021495889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:54.966" endtime="20201112 12:42:54.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:54.982" level="INFO">${ACCURACY} = {'time': [0.021330931, 0.021495889, 0.021654347, 0.021815847, 0.021990236, 0.022147653, 0.022310111, 0.022468583, 0.022635, 0.022799472, 0.022969847, 0.023143278, 0.023310694, 0.023486083, 0.023643556...</msg>
<status status="PASS" starttime="20201112 12:42:54.970" endtime="20201112 12:42:54.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.987" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201112 12:42:54.985" endtime="20201112 12:42:54.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:54.989" level="INFO">VALUE: [0.00012155600000000183, 0.00012105600000000133, 0.00012127800000000244, 0.000121083000000001, 0.0001213189999999982, 0.0001212090000000006, 0.00012077800000000194, 0.00012104099999999882, 0.00012052799999999822, 0.00012124999999999983, 0.00012127800000000244, 0.00012147200000000094, 0.00012076299999999943, 0.00012113900000000274, 0.0001207639999999989, 0.00012061099999999964, 0.00012076400000000237, 0.00012138899999999953, 0.00012087499999999946, 0.00012099999999999958, 0.00012115299999999884, 0.0001205830000000005, 0.00012072299999999966, 0.00012054200000000126, 0.00012112500000000317, 0.00012052699999999875, 0.00012073699999999923, 0.00012101299999999968, 0.00012130600000000158, 0.0001212639999999994, 0.00012072200000000019, 0.0001207090000000001, 0.00012070800000000062, 0.00012105499999999839, 0.00012122200000000069, 0.00012072200000000019, 0.00012144399999999833, 0.00012063900000000224, 0.0001214029999999991, 0.00012059700000000007, 0.00012079199999999804, 0.00012073699999999923, 0.00012054200000000126, 0.00012083300000000075, 0.0001205830000000005, 0.00012118100000000145, 0.00012077799999999847, 0.00012051399999999865, 0.00012099999999999958, 0.00012052800000000169]</msg>
<status status="PASS" starttime="20201112 12:42:54.988" endtime="20201112 12:42:54.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.983" endtime="20201112 12:42:54.990"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:54.992" endtime="20201112 12:42:54.994"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:54.996" endtime="20201112 12:42:55.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.994" endtime="20201112 12:42:55.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.991" endtime="20201112 12:42:55.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.624" endtime="20201112 12:42:55.017"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:54.624" endtime="20201112 12:42:55.017"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.026" endtime="20201112 12:42:55.046"></status>
</kw>
<msg timestamp="20201112 12:42:55.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.025" endtime="20201112 12:42:55.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.048" endtime="20201112 12:42:55.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.050" endtime="20201112 12:42:55.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.022" endtime="20201112 12:42:55.052"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.020" endtime="20201112 12:42:55.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.059" endtime="20201112 12:42:55.346"></status>
</kw>
<msg timestamp="20201112 12:42:55.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.058" endtime="20201112 12:42:55.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022786986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022910333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.350" endtime="20201112 12:42:55.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.358" endtime="20201112 12:42:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.055" endtime="20201112 12:42:55.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.053" endtime="20201112 12:42:55.361"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.364" level="INFO">${RESULT} = [{'time': 0.022910333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012334700000000282, 'source_diff': 0.00012334700000000282}, {'time': 0.023075292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:55.361" endtime="20201112 12:42:55.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.377" level="INFO">${ACCURACY} = {'time': [0.022910333, 0.023075292, 0.023232792, 0.023394236, 0.023556681, 0.023723139, 0.023888583, 0.024063, 0.024231431, 0.024404847, 0.024575278, 0.024737736, 0.024895181, 0.025069611, 0.025236042...</msg>
<status status="PASS" starttime="20201112 12:42:55.365" endtime="20201112 12:42:55.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.381" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.381" endtime="20201112 12:42:55.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.384" level="INFO">VALUE: [0.00012334700000000282, 0.00012223600000000126, 0.00012218099999999898, 0.00012227799999999997, 0.00012213900000000028, 0.00012166700000000238, 0.00012202700000000025, 0.00012234700000000182, 0.00012195900000000134, 0.00012220799999999865, 0.0001219029999999996, 0.00012172200000000119, 0.00012219499999999855, 0.00012148599999999704, 0.00012227799999999997, 0.00012175000000000033, 0.00012188900000000003, 0.00012245800000000237, 0.00012201400000000015, 0.00012230499999999964, 0.00012209700000000157, 0.0001217639999999999, 0.00012172200000000119, 0.0001224860000000015, 0.00012236099999999792, 0.00012165199999999987, 0.00012188900000000003, 0.000122083000000002, 0.00012219399999999908, 0.00012177799999999947, 0.00012225000000000083, 0.00012152799999999922, 0.00012233400000000172, 0.00012161100000000064, 0.00012169399999999858, 0.00012213900000000028, 0.00012223600000000126, 0.00012179100000000304, 0.00012183299999999828, 0.00012188900000000003, 0.00012152800000000269, 0.000122083000000002, 0.00012152799999999922, 0.0001222220000000017, 0.00012198599999999754, 0.00012208299999999853, 0.00012168099999999848, 0.00012227799999999997, 0.00012151399999999965, 0.00012181999999999818]</msg>
<status status="PASS" starttime="20201112 12:42:55.383" endtime="20201112 12:42:55.391"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.378" endtime="20201112 12:42:55.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.394" endtime="20201112 12:42:55.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.398" endtime="20201112 12:42:55.417"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.396" endtime="20201112 12:42:55.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.393" endtime="20201112 12:42:55.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.018" endtime="20201112 12:42:55.418"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.017" endtime="20201112 12:42:55.419"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.427" endtime="20201112 12:42:55.447"></status>
</kw>
<msg timestamp="20201112 12:42:55.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.426" endtime="20201112 12:42:55.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.449" endtime="20201112 12:42:55.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.451" endtime="20201112 12:42:55.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.423" endtime="20201112 12:42:55.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.421" endtime="20201112 12:42:55.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.460" endtime="20201112 12:42:55.747"></status>
</kw>
<msg timestamp="20201112 12:42:55.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021390167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.458" endtime="20201112 12:42:55.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021390167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:55.751" endtime="20201112 12:42:55.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.759" endtime="20201112 12:42:55.760"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.456" endtime="20201112 12:42:55.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.454" endtime="20201112 12:42:55.761"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:55.765" level="INFO">${RESULT} = [{'time': 0.021390167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012433400000000025, 'source_diff': 0.00012433400000000025}, {'time': 0.021559097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:55.762" endtime="20201112 12:42:55.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:55.778" level="INFO">${ACCURACY} = {'time': [0.021390167, 0.021559097, 0.0217315, 0.021898931, 0.022073347, 0.022244778, 0.022417181, 0.022574625, 0.022740056, 0.022903514, 0.023065986, 0.023240403, 0.023404833, 0.023578222, 0.02374563...</msg>
<status status="PASS" starttime="20201112 12:42:55.766" endtime="20201112 12:42:55.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.782" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201112 12:42:55.781" endtime="20201112 12:42:55.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.784" level="INFO">VALUE: [0.00012433400000000025, 0.00012284699999999885, 0.00012325000000000183, 0.00012252800000000022, 0.00012308299999999953, 0.0001229030000000006, 0.00012277800000000047, 0.00012302800000000072, 0.00012252800000000022, 0.0001230420000000003, 0.00012330500000000064, 0.00012266699999999991, 0.00012263900000000078, 0.00012319400000000008, 0.00012306999999999943, 0.00012268, 0.0001232640000000014, 0.00012263900000000078, 0.00012315300000000085, 0.0001227640000000009, 0.00012265299999999688, 0.0001232909999999976, 0.0001231250000000017, 0.0001228189999999997, 0.0001231389999999978, 0.0001225830000000025, 0.00012256899999999946, 0.00012252799999999675, 0.00012251400000000065, 0.00012311099999999867, 0.00012308400000000247, 0.0001227090000000021, 0.00012287500000000146, 0.00012313900000000128, 0.00012325000000000183, 0.00012301400000000115, 0.00012258400000000197, 0.00012344399999999686, 0.00012256899999999946, 0.00012347199999999947, 0.00012319400000000008, 0.00012334699999999935, 0.00012315300000000085, 0.00012256999999999893, 0.00012265300000000035, 0.00012277800000000047, 0.0001229030000000006, 0.0001232229999999987, 0.0001233060000000001, 0.00012287500000000146]</msg>
<status status="PASS" starttime="20201112 12:42:55.783" endtime="20201112 12:42:55.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.779" endtime="20201112 12:42:55.786"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.788" endtime="20201112 12:42:55.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:55.791" endtime="20201112 12:42:55.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.790" endtime="20201112 12:42:55.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.786" endtime="20201112 12:42:55.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.420" endtime="20201112 12:42:55.812"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.419" endtime="20201112 12:42:55.812"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.821" endtime="20201112 12:42:55.840"></status>
</kw>
<msg timestamp="20201112 12:42:55.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.819" endtime="20201112 12:42:55.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:55.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:55.842" endtime="20201112 12:42:55.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.844" endtime="20201112 12:42:55.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.817" endtime="20201112 12:42:55.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.814" endtime="20201112 12:42:55.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:55.853" endtime="20201112 12:42:56.140"></status>
</kw>
<msg timestamp="20201112 12:42:56.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:55.852" endtime="20201112 12:42:56.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021423639, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:42:56.144" endtime="20201112 12:42:56.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.152" endtime="20201112 12:42:56.153"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.849" endtime="20201112 12:42:56.154"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.847" endtime="20201112 12:42:56.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.158" level="INFO">${RESULT} = [{'time': 0.021423639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012463900000000278, 'source_diff': 0.00012463900000000278}, {'time': 0.021598528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:56.155" endtime="20201112 12:42:56.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.171" level="INFO">${ACCURACY} = {'time': [0.021423639, 0.021598528, 0.021765986, 0.021931444, 0.022092931, 0.022253389, 0.022426806, 0.022587292, 0.022757722, 0.022928167, 0.023089653, 0.023264083, 0.023424556, 0.023599986, 0.023771...</msg>
<status status="PASS" starttime="20201112 12:42:56.159" endtime="20201112 12:42:56.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.175" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.174" endtime="20201112 12:42:56.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.178" level="INFO">VALUE: [0.00012463900000000278, 0.00012351399999999818, 0.0001240420000000013, 0.00012411099999999967, 0.00012419500000000055, 0.0001235969999999996, 0.00012384799999999932, 0.00012361099999999917, 0.00012398599999999954, 0.0001244169999999982, 0.00012447200000000047, 0.00012350000000000208, 0.00012359799999999907, 0.00012366700000000092, 0.00012416699999999795, 0.0001244030000000021, 0.00012422200000000022, 0.000123777999999998, 0.00012441599999999872, 0.00012352799999999775, 0.0001239580000000004, 0.0001239030000000016, 0.00012375000000000233, 0.0001242779999999985, 0.0001243619999999994, 0.00012422200000000022, 0.00012366700000000092, 0.0001244160000000022, 0.00012429100000000207, 0.0001238190000000007, 0.00012413900000000228, 0.0001235969999999996, 0.00012432000000000068, 0.00012422199999999675, 0.00012405499999999792, 0.00012352800000000122, 0.00012365300000000135, 0.00012352699999999828, 0.00012365300000000135, 0.00012406900000000096, 0.0001239169999999977, 0.00012354099999999785, 0.00012376399999999843, 0.00012405500000000139, 0.00012409799999999957, 0.00012436099999999992, 0.0001244580000000009, 0.00012447200000000047, 0.00012419500000000055, 0.00012420800000000065]</msg>
<status status="PASS" starttime="20201112 12:42:56.177" endtime="20201112 12:42:56.179"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.172" endtime="20201112 12:42:56.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.181" endtime="20201112 12:42:56.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.185" endtime="20201112 12:42:56.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.183" endtime="20201112 12:42:56.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.180" endtime="20201112 12:42:56.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.813" endtime="20201112 12:42:56.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:55.812" endtime="20201112 12:42:56.205"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.214" endtime="20201112 12:42:56.234"></status>
</kw>
<msg timestamp="20201112 12:42:56.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.212" endtime="20201112 12:42:56.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.235" endtime="20201112 12:42:56.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.238" endtime="20201112 12:42:56.239"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.210" endtime="20201112 12:42:56.240"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.208" endtime="20201112 12:42:56.240"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.247" endtime="20201112 12:42:56.533"></status>
</kw>
<msg timestamp="20201112 12:42:56.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021171361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.245" endtime="20201112 12:42:56.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021171361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021297708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.537" endtime="20201112 12:42:56.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.545" endtime="20201112 12:42:56.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.243" endtime="20201112 12:42:56.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.241" endtime="20201112 12:42:56.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.551" level="INFO">${RESULT} = [{'time': 0.021297708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012634699999999888, 'source_diff': 0.00012634699999999888}, {'time': 0.021465639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:56.548" endtime="20201112 12:42:56.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.564" level="INFO">${ACCURACY} = {'time': [0.021297708, 0.021465639, 0.021645014, 0.021813458, 0.021985903, 0.022164292, 0.022324792, 0.022486264, 0.022661694, 0.022837139, 0.023002625, 0.023179069, 0.023351514, 0.023512986, 0.023676...</msg>
<status status="PASS" starttime="20201112 12:42:56.552" endtime="20201112 12:42:56.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.569" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.568" endtime="20201112 12:42:56.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.571" level="INFO">VALUE: [0.00012634699999999888, 0.00012538900000000006, 0.00012536100000000092, 0.00012469400000000158, 0.00012547200000000147, 0.00012538900000000006, 0.00012547300000000094, 0.0001249719999999975, 0.00012472200000000072, 0.00012534699999999788, 0.00012502799999999925, 0.00012512500000000024, 0.00012466700000000192, 0.00012476399999999943, 0.00012505499999999892, 0.0001249580000000014, 0.00012517999999999904, 0.00012483400000000075, 0.00012484699999999738, 0.00012502800000000272, 0.0001253060000000021, 0.00012454199999999832, 0.00012495799999999793, 0.0001249030000000026, 0.00012484700000000085, 0.00012518099999999852, 0.00012452800000000222, 0.00012459699999999713, 0.00012479199999999857, 0.0001255000000000006, 0.00012530499999999917, 0.00012538800000000058, 0.00012493099999999827, 0.00012454099999999885, 0.00012461100000000017, 0.00012515299999999938, 0.0001245970000000006, 0.00012455600000000136, 0.00012454099999999885, 0.0001252499999999969, 0.00012472200000000072, 0.0001250000000000001, 0.00012477800000000247, 0.00012474999999999986, 0.00012537500000000049, 0.00012508399999999753, 0.00012468100000000149, 0.0001252640000000034, 0.00012502799999999925, 0.0001250970000000011]</msg>
<status status="PASS" starttime="20201112 12:42:56.570" endtime="20201112 12:42:56.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.565" endtime="20201112 12:42:56.572"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.574" endtime="20201112 12:42:56.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.578" endtime="20201112 12:42:56.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.576" endtime="20201112 12:42:56.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.573" endtime="20201112 12:42:56.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.206" endtime="20201112 12:42:56.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.206" endtime="20201112 12:42:56.599"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.607" endtime="20201112 12:42:56.627"></status>
</kw>
<msg timestamp="20201112 12:42:56.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.605" endtime="20201112 12:42:56.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.629" endtime="20201112 12:42:56.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.631" endtime="20201112 12:42:56.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.603" endtime="20201112 12:42:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.601" endtime="20201112 12:42:56.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.640" endtime="20201112 12:42:56.926"></status>
</kw>
<msg timestamp="20201112 12:42:56.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021251583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.638" endtime="20201112 12:42:56.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021251583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021378597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:56.930" endtime="20201112 12:42:56.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.938" endtime="20201112 12:42:56.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.636" endtime="20201112 12:42:56.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.634" endtime="20201112 12:42:56.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:56.945" level="INFO">${RESULT} = [{'time': 0.021378597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001270139999999982, 'source_diff': 0.0001270139999999982}, {'time': 0.0215535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:42:56.942" endtime="20201112 12:42:56.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:56.957" level="INFO">${ACCURACY} = {'time': [0.021378597, 0.0215535, 0.021726931, 0.021887417, 0.022057861, 0.022221333, 0.022385792, 0.022559236, 0.022733681, 0.022897139, 0.023057611, 0.023224069, 0.023396486, 0.023559944, 0.02372241...</msg>
<status status="PASS" starttime="20201112 12:42:56.946" endtime="20201112 12:42:56.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.962" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201112 12:42:56.961" endtime="20201112 12:42:56.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:56.964" level="INFO">VALUE: [0.0001270139999999982, 0.00012618099999999952, 0.0001261390000000008, 0.00012602800000000025, 0.00012638900000000106, 0.00012595799999999893, 0.00012602800000000025, 0.00012629200000000007, 0.0001259169999999997, 0.00012645799999999943, 0.00012566699999999945, 0.0001262910000000006, 0.00012622200000000222, 0.00012645799999999943, 0.00012576400000000043, 0.00012620800000000265, 0.0001258329999999988, 0.00012552799999999975, 0.00012598599999999807, 0.0001261390000000008, 0.0001261529999999969, 0.00012577700000000053, 0.00012579199999999957, 0.00012601400000000068, 0.0001259450000000023, 0.0001260559999999994, 0.00012586099999999795, 0.00012597300000000144, 0.00012648600000000204, 0.00012588900000000056, 0.0001261529999999969, 0.00012570800000000215, 0.00012637500000000149, 0.00012604199999999982, 0.00012595799999999893, 0.00012626300000000146, 0.00012572200000000172, 0.00012597300000000144, 0.0001256939999999991, 0.000126165999999997, 0.00012562500000000074, 0.00012586099999999795, 0.00012618100000000299, 0.00012566699999999945, 0.0001255559999999989, 0.00012604100000000035, 0.000126471999999999, 0.0001256390000000003, 0.00012630500000000017, 0.0001260559999999994]</msg>
<status status="PASS" starttime="20201112 12:42:56.963" endtime="20201112 12:42:56.965"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.958" endtime="20201112 12:42:56.965"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:56.968" endtime="20201112 12:42:56.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:56.971" endtime="20201112 12:42:56.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.970" endtime="20201112 12:42:56.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.966" endtime="20201112 12:42:56.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.599" endtime="20201112 12:42:56.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.599" endtime="20201112 12:42:56.992"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.000" endtime="20201112 12:42:57.021"></status>
</kw>
<msg timestamp="20201112 12:42:57.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:56.999" endtime="20201112 12:42:57.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.022" endtime="20201112 12:42:57.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.025" endtime="20201112 12:42:57.026"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.996" endtime="20201112 12:42:57.027"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.994" endtime="20201112 12:42:57.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.033" endtime="20201112 12:42:57.321"></status>
</kw>
<msg timestamp="20201112 12:42:57.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021418708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021546889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.032" endtime="20201112 12:42:57.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021418708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021546889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.325" endtime="20201112 12:42:57.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.333" endtime="20201112 12:42:57.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.029" endtime="20201112 12:42:57.335"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.028" endtime="20201112 12:42:57.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.340" level="INFO">${RESULT} = [{'time': 0.021546889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012818099999999805, 'source_diff': 0.00012818099999999805}, {'time': 0.021708819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:57.336" endtime="20201112 12:42:57.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.352" level="INFO">${ACCURACY} = {'time': [0.021546889, 0.021708819, 0.021885278, 0.022064653, 0.022239069, 0.0224055, 0.022575944, 0.022737403, 0.022902847, 0.023075292, 0.023244722, 0.023418153, 0.023598569, 0.023770028, 0.02394945...</msg>
<status status="PASS" starttime="20201112 12:42:57.341" endtime="20201112 12:42:57.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.357" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.356" endtime="20201112 12:42:57.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.359" level="INFO">VALUE: [0.00012818099999999805, 0.00012745800000000043, 0.0001273200000000002, 0.0001269589999999994, 0.00012727699999999856, 0.0001273889999999986, 0.00012690200000000165, 0.00012665300000000088, 0.0001270000000000021, 0.00012722299999999923, 0.00012713899999999834, 0.00012738900000000206, 0.00012718000000000104, 0.00012698599999999907, 0.00012668000000000054, 0.00012670900000000263, 0.00012738900000000206, 0.0001273889999999986, 0.0001268199999999997, 0.0001274170000000012, 0.00012733399999999978, 0.00012737500000000249, 0.00012715300000000138, 0.00012659699999999913, 0.00012694499999999984, 0.00012740199999999868, 0.00012719500000000009, 0.00012745800000000043, 0.00012665300000000088, 0.00012684699999999938, 0.0001265139999999977, 0.00012658299999999956, 0.0001265840000000025, 0.0001271940000000006, 0.00012687499999999852, 0.00012658299999999956, 0.000127472, 0.000127084000000003, 0.00012713899999999834, 0.00012655500000000042, 0.00012676300000000196, 0.00012705500000000092, 0.00012738900000000206, 0.0001272780000000015, 0.00012711199999999867, 0.00012658299999999956, 0.00012704200000000082, 0.00012672200000000272, 0.00012716699999999748, 0.0001267230000000022]</msg>
<status status="PASS" starttime="20201112 12:42:57.358" endtime="20201112 12:42:57.360"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.353" endtime="20201112 12:42:57.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.363" endtime="20201112 12:42:57.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.366" endtime="20201112 12:42:57.385"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.364" endtime="20201112 12:42:57.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.361" endtime="20201112 12:42:57.386"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.993" endtime="20201112 12:42:57.387"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:56.992" endtime="20201112 12:42:57.387"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.395" endtime="20201112 12:42:57.415"></status>
</kw>
<msg timestamp="20201112 12:42:57.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.394" endtime="20201112 12:42:57.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.417" endtime="20201112 12:42:57.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.419" endtime="20201112 12:42:57.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.391" endtime="20201112 12:42:57.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.389" endtime="20201112 12:42:57.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.428" endtime="20201112 12:42:57.714"></status>
</kw>
<msg timestamp="20201112 12:42:57.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021396875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.427" endtime="20201112 12:42:57.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021267889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021396875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.718" endtime="20201112 12:42:57.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.726" endtime="20201112 12:42:57.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.424" endtime="20201112 12:42:57.728"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.422" endtime="20201112 12:42:57.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:57.732" level="INFO">${RESULT} = [{'time': 0.021396875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001289859999999976, 'source_diff': 0.0001289859999999976}, {'time': 0.021574778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:42:57.729" endtime="20201112 12:42:57.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:57.745" level="INFO">${ACCURACY} = {'time': [0.021396875, 0.021574778, 0.021745236, 0.021913681, 0.022081139, 0.022244625, 0.022418014, 0.022587458, 0.022750917, 0.022925347, 0.023094819, 0.023265264, 0.023436681, 0.023606125, 0.023772...</msg>
<status status="PASS" starttime="20201112 12:42:57.733" endtime="20201112 12:42:57.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.749" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201112 12:42:57.748" endtime="20201112 12:42:57.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.751" level="INFO">VALUE: [0.0001289859999999976, 0.00012841699999999873, 0.0001275000000000026, 0.00012770900000000016, 0.0001276109999999997, 0.0001282499999999999, 0.00012749999999999914, 0.00012777700000000253, 0.00012770900000000016, 0.00012837500000000002, 0.00012806899999999802, 0.00012816700000000195, 0.00012757000000000046, 0.0001275829999999971, 0.00012837500000000002, 0.00012765199999999893, 0.0001278889999999991, 0.0001277499999999994, 0.0001276529999999984, 0.000127778000000002, 0.0001279170000000017, 0.0001279590000000004, 0.00012834800000000035, 0.00012834700000000088, 0.0001278200000000007, 0.00012795800000000093, 0.00012804200000000182, 0.00012840199999999968, 0.00012827799999999903, 0.00012822300000000023, 0.00012845799999999796, 0.0001280829999999976, 0.0001280139999999992, 0.00012834700000000088, 0.00012833400000000078, 0.00012765300000000188, 0.00012844400000000186, 0.00012756899999999752, 0.00012766699999999798, 0.00012847300000000048, 0.00012826399999999946, 0.00012844400000000186, 0.00012763899999999884, 0.000128165999999999, 0.00012755599999999742, 0.00012831899999999827, 0.0001283889999999996, 0.00012808300000000106, 0.00012794500000000084, 0.00012840300000000263]</msg>
<status status="PASS" starttime="20201112 12:42:57.750" endtime="20201112 12:42:57.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.746" endtime="20201112 12:42:57.753"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.755" endtime="20201112 12:42:57.756"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:57.758" endtime="20201112 12:42:57.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.757" endtime="20201112 12:42:57.778"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.753" endtime="20201112 12:42:57.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.388" endtime="20201112 12:42:57.779"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.387" endtime="20201112 12:42:57.779"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.788" endtime="20201112 12:42:57.808"></status>
</kw>
<msg timestamp="20201112 12:42:57.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.786" endtime="20201112 12:42:57.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:57.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:57.809" endtime="20201112 12:42:57.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.812" endtime="20201112 12:42:57.813"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.783" endtime="20201112 12:42:57.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.781" endtime="20201112 12:42:57.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:57.821" endtime="20201112 12:42:58.106"></status>
</kw>
<msg timestamp="20201112 12:42:58.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021283764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:57.819" endtime="20201112 12:42:58.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021283764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.110" endtime="20201112 12:42:58.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.118" endtime="20201112 12:42:58.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.817" endtime="20201112 12:42:58.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.815" endtime="20201112 12:42:58.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.125" level="INFO">${RESULT} = [{'time': 0.021413625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012986099999999848, 'source_diff': 0.00012986099999999848}, {'time': 0.021594528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:58.122" endtime="20201112 12:42:58.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.138" level="INFO">${ACCURACY} = {'time': [0.021413625, 0.021594528, 0.021770944, 0.021937389, 0.022101833, 0.022284208, 0.022462611, 0.022636, 0.022807417, 0.022983819, 0.023158236, 0.023340611, 0.023521042, 0.023697444, 0.023880833...</msg>
<status status="PASS" starttime="20201112 12:42:58.126" endtime="20201112 12:42:58.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.142" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.141" endtime="20201112 12:42:58.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.144" level="INFO">VALUE: [0.00012986099999999848, 0.00012919500000000209, 0.00012870800000000168, 0.00012851400000000318, 0.0001288330000000018, 0.0001290140000000002, 0.0001289439999999989, 0.0001289309999999988, 0.00012850000000000014, 0.00012862500000000027, 0.0001290140000000002, 0.000128569000000002, 0.0001292919999999996, 0.000129472000000002, 0.00012940200000000068, 0.00012913900000000034, 0.00012863899999999984, 0.0001287500000000004, 0.00012852800000000275, 0.00012905599999999892, 0.00012913899999999687, 0.00012937500000000102, 0.0001293880000000011, 0.00012911099999999773, 0.00012858400000000103, 0.00012850000000000014, 0.00012940200000000068, 0.00012866699999999898, 0.00012918100000000252, 0.0001288890000000001, 0.00012872300000000073, 0.00012900000000000064, 0.00012851300000000024, 0.00012912500000000077, 0.00012945899999999844, 0.00012912500000000077, 0.00012908399999999806, 0.0001289439999999989, 0.00012945800000000243, 0.00012923600000000132, 0.00012940300000000016, 0.0001285269999999998, 0.0001286529999999994, 0.00012879200000000257, 0.00012886100000000095, 0.00012852799999999928, 0.00012863800000000036, 0.00012876399999999996, 0.00012863899999999984, 0.00012924999999999742]</msg>
<status status="PASS" starttime="20201112 12:42:58.143" endtime="20201112 12:42:58.145"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.139" endtime="20201112 12:42:58.146"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.148" endtime="20201112 12:42:58.149"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.151" endtime="20201112 12:42:58.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.150" endtime="20201112 12:42:58.171"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.146" endtime="20201112 12:42:58.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.780" endtime="20201112 12:42:58.172"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:57.779" endtime="20201112 12:42:58.172"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.181" endtime="20201112 12:42:58.201"></status>
</kw>
<msg timestamp="20201112 12:42:58.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.179" endtime="20201112 12:42:58.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.202" endtime="20201112 12:42:58.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.205" endtime="20201112 12:42:58.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.177" endtime="20201112 12:42:58.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.175" endtime="20201112 12:42:58.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.214" endtime="20201112 12:42:58.500"></status>
</kw>
<msg timestamp="20201112 12:42:58.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.212" endtime="20201112 12:42:58.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021282764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021413139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.504" endtime="20201112 12:42:58.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.512" endtime="20201112 12:42:58.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.210" endtime="20201112 12:42:58.514"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.208" endtime="20201112 12:42:58.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.519" level="INFO">${RESULT} = [{'time': 0.021413139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013037500000000202, 'source_diff': 0.00013037500000000202}, {'time': 0.021593069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:58.515" endtime="20201112 12:42:58.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.531" level="INFO">${ACCURACY} = {'time': [0.021413139, 0.021593069, 0.0217685, 0.021935931, 0.022117347, 0.022289819, 0.02246425, 0.022643653, 0.022827056, 0.023010472, 0.023179889, 0.023359319, 0.023534736, 0.023701194, 0.023871653...</msg>
<status status="PASS" starttime="20201112 12:42:58.520" endtime="20201112 12:42:58.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.536" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.535" endtime="20201112 12:42:58.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.538" level="INFO">VALUE: [0.00013037500000000202, 0.00012988799999999814, 0.0001303469999999994, 0.00013044499999999987, 0.00012995799999999946, 0.00012983299999999934, 0.00012980600000000314, 0.00012980599999999967, 0.00013036199999999845, 0.00013004100000000088, 0.00013024999999999842, 0.00012965200000000093, 0.00012968000000000007, 0.00013038799999999864, 0.00012952800000000028, 0.00013023600000000232, 0.00013013899999999787, 0.00012951399999999724, 0.0001301799999999971, 0.00012963900000000084, 0.00013024999999999842, 0.0001304590000000029, 0.0001296249999999978, 0.00012968000000000007, 0.00012954100000000038, 0.00012981899999999977, 0.00013001399999999774, 0.00013013900000000134, 0.00013037499999999855, 0.00012949999999999767, 0.00012945800000000243, 0.00012977700000000106, 0.0001298890000000011, 0.00013045799999999996, 0.0001302500000000019, 0.00012956899999999952, 0.00013024999999999842, 0.00012963900000000084, 0.00013045899999999944, 0.00012987500000000152, 0.00013013900000000134, 0.00012980599999999967, 0.0001298890000000011, 0.00013000000000000164, 0.00013004100000000088, 0.0001304029999999977, 0.0001300140000000012, 0.0001300699999999995, 0.0001303050000000007, 0.0001300699999999995]</msg>
<status status="PASS" starttime="20201112 12:42:58.537" endtime="20201112 12:42:58.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.532" endtime="20201112 12:42:58.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.542" endtime="20201112 12:42:58.543"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.545" endtime="20201112 12:42:58.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.543" endtime="20201112 12:42:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.540" endtime="20201112 12:42:58.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.173" endtime="20201112 12:42:58.566"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.173" endtime="20201112 12:42:58.566"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.574" endtime="20201112 12:42:58.595"></status>
</kw>
<msg timestamp="20201112 12:42:58.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.573" endtime="20201112 12:42:58.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:58.596" endtime="20201112 12:42:58.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.599" endtime="20201112 12:42:58.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.570" endtime="20201112 12:42:58.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.568" endtime="20201112 12:42:58.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.607" endtime="20201112 12:42:58.894"></status>
</kw>
<msg timestamp="20201112 12:42:58.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.606" endtime="20201112 12:42:58.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021353833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021485417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:58.898" endtime="20201112 12:42:58.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.906" endtime="20201112 12:42:58.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.603" endtime="20201112 12:42:58.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.602" endtime="20201112 12:42:58.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:58.913" level="INFO">${RESULT} = [{'time': 0.021485417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013158400000000056, 'source_diff': 0.00013158400000000056}, {'time': 0.021670236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:58.910" endtime="20201112 12:42:58.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:58.926" level="INFO">${ACCURACY} = {'time': [0.021485417, 0.021670236, 0.021846639, 0.022017069, 0.022185514, 0.022352958, 0.022537361, 0.022705764, 0.022885167, 0.023062583, 0.023238014, 0.023403472, 0.023574931, 0.023743319, 0.023908...</msg>
<status status="PASS" starttime="20201112 12:42:58.914" endtime="20201112 12:42:58.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.930" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201112 12:42:58.929" endtime="20201112 12:42:58.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:58.932" level="INFO">VALUE: [0.00013158400000000056, 0.0001309859999999996, 0.0001314310000000013, 0.00013124999999999942, 0.00013047199999999953, 0.0001310830000000006, 0.0001314029999999987, 0.00013130600000000117, 0.00013098600000000307, 0.00013055500000000095, 0.00013095800000000046, 0.0001310140000000022, 0.000131473, 0.0001304440000000004, 0.0001306249999999988, 0.00013094500000000037, 0.0001306249999999988, 0.00013132000000000074, 0.00013056900000000052, 0.00013088899999999862, 0.00013082000000000024, 0.00013137499999999955, 0.00013055500000000095, 0.00013059699999999966, 0.0001314440000000014, 0.00013136099999999998, 0.00013058399999999956, 0.0001309859999999996, 0.00013144399999999792, 0.00013052800000000128, 0.00013113900000000234, 0.0001308890000000021, 0.000131263999999999, 0.000131263999999999, 0.0001306249999999988, 0.0001312090000000002, 0.00013101399999999874, 0.00013087499999999905, 0.00013126299999999952, 0.00013095800000000046, 0.00013102800000000178, 0.00013082000000000024, 0.00013105499999999798, 0.00013049999999999867, 0.00013113899999999887, 0.00013101399999999874, 0.00013145900000000044, 0.00013056900000000052, 0.0001310270000000023, 0.00013138899999999912]</msg>
<status status="PASS" starttime="20201112 12:42:58.931" endtime="20201112 12:42:58.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.926" endtime="20201112 12:42:58.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:58.936" endtime="20201112 12:42:58.937"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.939" endtime="20201112 12:42:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.938" endtime="20201112 12:42:58.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.934" endtime="20201112 12:42:58.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.567" endtime="20201112 12:42:58.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.566" endtime="20201112 12:42:58.960"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:19.590" endtime="20201112 12:42:58.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.965" endtime="20201112 12:42:58.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.963" endtime="20201112 12:42:58.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.962" endtime="20201112 12:42:58.985"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:19.522" endtime="20201112 12:42:58.986" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:58.993" endtime="20201112 12:42:59.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.992" endtime="20201112 12:42:59.014"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.027" endtime="20201112 12:42:59.039"></status>
</kw>
<msg timestamp="20201112 12:42:59.040" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.025" endtime="20201112 12:42:59.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.042" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.041" endtime="20201112 12:42:59.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.045" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:42:59.043" endtime="20201112 12:42:59.045"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:59.022" endtime="20201112 12:42:59.046"></status>
</kw>
<status status="FAIL" starttime="20201112 12:42:59.020" endtime="20201112 12:42:59.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.019" endtime="20201112 12:42:59.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:42:59.050" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:42:59.050" endtime="20201112 12:42:59.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.048" endtime="20201112 12:42:59.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.018" endtime="20201112 12:42:59.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.017" endtime="20201112 12:42:59.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.052" endtime="20201112 12:42:59.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.016" endtime="20201112 12:42:59.054"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.014" endtime="20201112 12:42:59.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:58.991" endtime="20201112 12:42:59.055"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.065" endtime="20201112 12:42:59.080"></status>
</kw>
<msg timestamp="20201112 12:42:59.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.063" endtime="20201112 12:42:59.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.081" endtime="20201112 12:42:59.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.084" endtime="20201112 12:42:59.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.061" endtime="20201112 12:42:59.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.059" endtime="20201112 12:42:59.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.093" endtime="20201112 12:42:59.379"></status>
</kw>
<msg timestamp="20201112 12:42:59.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064008194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064038458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.091" endtime="20201112 12:42:59.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064008194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.064038458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.383" endtime="20201112 12:42:59.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.391" endtime="20201112 12:42:59.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.089" endtime="20201112 12:42:59.394"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.087" endtime="20201112 12:42:59.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.399" level="INFO">${RESULT} = [{'time': 0.064038458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0264000000002067e-05, 'source_diff': 3.0264000000002067e-05}, {'time': 0.064092125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:59.395" endtime="20201112 12:42:59.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.411" level="INFO">${ACCURACY} = {'time': [0.064038458, 0.064092125, 0.064150583, 0.064196944, 0.064257597, 0.064315806, 0.064366181, 0.064418125, 0.064462278, 0.064509875, 0.064557528, 0.064614708, 0.064671028, 0.064723917, 0.064770...</msg>
<status status="PASS" starttime="20201112 12:42:59.399" endtime="20201112 12:42:59.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.416" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.415" endtime="20201112 12:42:59.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.418" level="INFO">VALUE: [3.0264000000002067e-05, 2.9749999999995058e-05, 2.9624999999991464e-05, 2.9666000000011516e-05, 2.965300000000448e-05, 2.9666999999997112e-05, 2.9652999999990604e-05, 2.965300000000448e-05, 2.9638999999997973e-05, 2.9652999999990604e-05, 2.9722000000009796e-05, 2.9652000000005008e-05, 2.9610999999998833e-05, 2.966700000001099e-05, 2.965300000000448e-05, 2.9638999999997973e-05, 2.9652999999990604e-05, 2.965199999999113e-05, 2.965300000000448e-05, 2.9568999999993184e-05, 2.967999999999027e-05, 2.9638999999997973e-05, 2.9652000000005008e-05, 2.965199999999113e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 2.9652999999990604e-05, 2.9708000000003287e-05, 2.9652999999990604e-05, 2.9652999999990604e-05, 2.9666999999997112e-05, 2.9652999999990604e-05, 2.9666999999997112e-05, 2.9652999999990604e-05, 2.965300000000448e-05, 2.9666000000011516e-05, 2.9652000000005008e-05, 2.965300000000448e-05, 2.9652999999990604e-05, 2.9694999999996252e-05, 2.9638999999997973e-05, 2.965300000000448e-05, 2.9610999999998833e-05, 2.9652999999990604e-05, 2.965199999999113e-05, 2.966700000001099e-05, 2.970900000000276e-05, 2.9652999999990604e-05, 2.965300000000448e-05, 2.9666000000011516e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.417" endtime="20201112 12:42:59.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.412" endtime="20201112 12:42:59.419"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.421" endtime="20201112 12:42:59.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.425" endtime="20201112 12:42:59.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.423" endtime="20201112 12:42:59.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.420" endtime="20201112 12:42:59.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.057" endtime="20201112 12:42:59.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.056" endtime="20201112 12:42:59.446"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.454" endtime="20201112 12:42:59.469"></status>
</kw>
<msg timestamp="20201112 12:42:59.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.453" endtime="20201112 12:42:59.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.470" endtime="20201112 12:42:59.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.472" endtime="20201112 12:42:59.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.450" endtime="20201112 12:42:59.475"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.448" endtime="20201112 12:42:59.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.481" endtime="20201112 12:42:59.768"></status>
</kw>
<msg timestamp="20201112 12:42:59.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.480" endtime="20201112 12:42:59.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021863528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021893819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.772" endtime="20201112 12:42:59.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.780" endtime="20201112 12:42:59.782"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.477" endtime="20201112 12:42:59.783"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.476" endtime="20201112 12:42:59.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:42:59.787" level="INFO">${RESULT} = [{'time': 0.021893819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0290999999998264e-05, 'source_diff': 3.0290999999998264e-05}, {'time': 0.021945889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:42:59.784" endtime="20201112 12:42:59.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:42:59.800" level="INFO">${ACCURACY} = {'time': [0.021893819, 0.021945889, 0.022004722, 0.022047625, 0.022105542, 0.022148125, 0.022196667, 0.022239292, 0.022285625, 0.022328542, 0.022371167, 0.022413778, 0.022468236, 0.02251675, 0.0225606...</msg>
<status status="PASS" starttime="20201112 12:42:59.788" endtime="20201112 12:42:59.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.804" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201112 12:42:59.803" endtime="20201112 12:42:59.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.807" level="INFO">VALUE: [3.0290999999998264e-05, 2.9721999999999388e-05, 2.9680000000000678e-05, 2.9653000000001012e-05, 2.969499999999972e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.9583999999999167e-05, 2.9653000000001012e-05, 2.9666999999997112e-05, 2.9667000000000582e-05, 2.9638999999997973e-05, 2.9597000000002732e-05, 2.966599999999764e-05, 2.9666000000001108e-05, 2.9653000000001012e-05, 2.9666999999997112e-05, 2.9652000000001538e-05, 2.9652000000001538e-05, 2.969500000000319e-05, 2.9639000000001442e-05, 2.9680000000000678e-05, 2.9707999999999818e-05, 2.9667000000000582e-05, 2.9652999999997542e-05, 2.9666000000001108e-05, 2.96379999999985e-05, 2.965199999999807e-05, 2.9666000000001108e-05, 2.9625000000001872e-05, 2.9639000000001442e-05, 2.9694000000000248e-05, 2.9667000000000582e-05, 2.9667000000000582e-05, 2.9667000000000582e-05, 2.9680000000000678e-05, 2.966599999999764e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9652000000001538e-05, 2.9666000000001108e-05, 2.9653000000001012e-05, 2.9666999999997112e-05, 2.970899999999929e-05, 2.966599999999764e-05, 2.9667000000000582e-05, 2.969499999999972e-05]</msg>
<status status="PASS" starttime="20201112 12:42:59.805" endtime="20201112 12:42:59.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.801" endtime="20201112 12:42:59.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.810" endtime="20201112 12:42:59.812"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:42:59.814" endtime="20201112 12:42:59.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.812" endtime="20201112 12:42:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.808" endtime="20201112 12:42:59.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.447" endtime="20201112 12:42:59.835"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.446" endtime="20201112 12:42:59.835"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.843" endtime="20201112 12:42:59.857"></status>
</kw>
<msg timestamp="20201112 12:42:59.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.842" endtime="20201112 12:42:59.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:42:59.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:42:59.859" endtime="20201112 12:42:59.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.861" endtime="20201112 12:42:59.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.839" endtime="20201112 12:42:59.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.837" endtime="20201112 12:42:59.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:42:59.870" endtime="20201112 12:43:00.156"></status>
</kw>
<msg timestamp="20201112 12:43:00.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021349208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:42:59.869" endtime="20201112 12:43:00.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021349208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021379486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.160" endtime="20201112 12:43:00.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.168" endtime="20201112 12:43:00.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.866" endtime="20201112 12:43:00.170"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.864" endtime="20201112 12:43:00.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.175" level="INFO">${RESULT} = [{'time': 0.021379486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0277999999998167e-05, 'source_diff': 3.0277999999998167e-05}, {'time': 0.021428153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.172" endtime="20201112 12:43:00.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.190" level="INFO">${ACCURACY} = {'time': [0.021379486, 0.021428153, 0.021482292, 0.021533639, 0.021594931, 0.021650625, 0.021711639, 0.021767958, 0.021816486, 0.021877806, 0.021931611, 0.021990125, 0.022051431, 0.022093056, 0.022154...</msg>
<status status="PASS" starttime="20201112 12:43:00.176" endtime="20201112 12:43:00.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.194" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.193" endtime="20201112 12:43:00.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.197" level="INFO">VALUE: [3.0277999999998167e-05, 2.970899999999929e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9680000000000678e-05, 2.9667000000000582e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.9596999999999263e-05, 2.9667000000000582e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9638999999997973e-05, 2.9653000000001012e-05, 2.9638999999997973e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9667000000000582e-05, 2.9624999999998403e-05, 2.9625000000001872e-05, 2.9667000000000582e-05, 2.96379999999985e-05, 2.9639000000001442e-05, 2.9694000000000248e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9624999999998403e-05, 2.9666000000001108e-05, 2.9681000000000152e-05, 2.969499999999972e-05, 2.9652999999997542e-05, 2.9596999999999263e-05, 2.9707999999999818e-05, 2.9666000000001108e-05, 2.9667000000000582e-05, 2.9666999999997112e-05, 2.9667000000000582e-05, 2.9680000000000678e-05, 2.9638999999997973e-05, 2.9638999999997973e-05, 2.9639000000001442e-05, 2.9707999999999818e-05, 2.9681000000000152e-05, 2.9666000000001108e-05, 2.9707999999999818e-05, 2.9610999999998833e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.195" endtime="20201112 12:43:00.197"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.191" endtime="20201112 12:43:00.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.200" endtime="20201112 12:43:00.201"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.203" endtime="20201112 12:43:00.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.202" endtime="20201112 12:43:00.223"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.199" endtime="20201112 12:43:00.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.836" endtime="20201112 12:43:00.224"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.835" endtime="20201112 12:43:00.224"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.233" endtime="20201112 12:43:00.247"></status>
</kw>
<msg timestamp="20201112 12:43:00.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.231" endtime="20201112 12:43:00.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.248" endtime="20201112 12:43:00.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.251" endtime="20201112 12:43:00.252"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.229" endtime="20201112 12:43:00.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.227" endtime="20201112 12:43:00.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.259" endtime="20201112 12:43:00.546"></status>
</kw>
<msg timestamp="20201112 12:43:00.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021361625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.258" endtime="20201112 12:43:00.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021361625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.551" endtime="20201112 12:43:00.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.559" endtime="20201112 12:43:00.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.255" endtime="20201112 12:43:00.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.254" endtime="20201112 12:43:00.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.565" level="INFO">${RESULT} = [{'time': 0.021391917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0292000000001207e-05, 'source_diff': 3.0292000000001207e-05}, {'time': 0.021437458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.562" endtime="20201112 12:43:00.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.579" level="INFO">${ACCURACY} = {'time': [0.021391917, 0.021437458, 0.021490986, 0.021536694, 0.021579, 0.021627889, 0.021674819, 0.021725236, 0.021767847, 0.021810472, 0.021865236, 0.021910028, 0.021961056, 0.022013639, 0.022066847...</msg>
<status status="PASS" starttime="20201112 12:43:00.566" endtime="20201112 12:43:00.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.583" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.582" endtime="20201112 12:43:00.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.585" level="INFO">VALUE: [3.0292000000001207e-05, 2.9721999999999388e-05, 2.9639000000001442e-05, 2.965199999999807e-05, 2.9639000000001442e-05, 2.969499999999972e-05, 2.963800000000197e-05, 2.9666999999997112e-05, 2.9666000000001108e-05, 2.9666000000001108e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9610999999998833e-05, 2.9653000000001012e-05, 2.9694000000000248e-05, 2.9666999999997112e-05, 2.9652000000001538e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9666000000001108e-05, 2.9666000000001108e-05, 2.9596999999999263e-05, 2.9624999999998403e-05, 2.965199999999807e-05, 2.9653000000001012e-05, 2.9694000000000248e-05, 2.9666999999997112e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.96379999999985e-05, 2.9639000000001442e-05, 2.9681000000000152e-05, 2.9569000000000123e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9667000000000582e-05, 2.9652999999997542e-05, 2.9584000000002636e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9666000000001108e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9681000000000152e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.584" endtime="20201112 12:43:00.595"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.579" endtime="20201112 12:43:00.596"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.598" endtime="20201112 12:43:00.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.602" endtime="20201112 12:43:00.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.600" endtime="20201112 12:43:00.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.597" endtime="20201112 12:43:00.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.225" endtime="20201112 12:43:00.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.225" endtime="20201112 12:43:00.622"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.631" endtime="20201112 12:43:00.645"></status>
</kw>
<msg timestamp="20201112 12:43:00.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.629" endtime="20201112 12:43:00.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:00.647" endtime="20201112 12:43:00.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.649" endtime="20201112 12:43:00.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.627" endtime="20201112 12:43:00.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.625" endtime="20201112 12:43:00.651"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.658" endtime="20201112 12:43:00.944"></status>
</kw>
<msg timestamp="20201112 12:43:00.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021361444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.656" endtime="20201112 12:43:00.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021331153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021361444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:00.948" endtime="20201112 12:43:00.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.956" endtime="20201112 12:43:00.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.654" endtime="20201112 12:43:00.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.652" endtime="20201112 12:43:00.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:00.963" level="INFO">${RESULT} = [{'time': 0.021361444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0291000000001733e-05, 'source_diff': 3.0291000000001733e-05}, {'time': 0.021407319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:00.960" endtime="20201112 12:43:00.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:00.976" level="INFO">${ACCURACY} = {'time': [0.021361444, 0.021407319, 0.021452069, 0.021509083, 0.02155475, 0.021596736, 0.021653361, 0.02170875, 0.021757903, 0.021812681, 0.021865556, 0.021911597, 0.021962917, 0.022008958, 0.02205593...</msg>
<status status="PASS" starttime="20201112 12:43:00.964" endtime="20201112 12:43:00.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.980" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201112 12:43:00.979" endtime="20201112 12:43:00.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:00.983" level="INFO">VALUE: [3.0291000000001733e-05, 2.9750000000001997e-05, 2.963800000000197e-05, 2.9707999999999818e-05, 2.9667000000000582e-05, 2.9652999999997542e-05, 2.9638999999997973e-05, 2.9667000000000582e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.9612000000001776e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9610999999998833e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9721999999999388e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9639000000001442e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9652999999997542e-05, 2.9652999999997542e-05, 2.9653000000001012e-05, 2.965199999999807e-05, 2.9667000000000582e-05, 2.9653000000001012e-05, 2.9610999999998833e-05, 2.9653000000001012e-05, 2.9639000000001442e-05, 2.9624999999998403e-05, 2.9624999999998403e-05, 2.9653000000001012e-05, 2.9582999999999693e-05, 2.9638999999997973e-05, 2.96379999999985e-05, 2.9653000000001012e-05, 2.9653000000001012e-05, 2.9667000000000582e-05, 2.9583999999999167e-05, 2.9639000000001442e-05, 2.9652000000001538e-05, 2.9667000000000582e-05, 2.9639000000001442e-05, 2.9652999999997542e-05, 2.9667000000000582e-05, 2.9652000000001538e-05, 2.9625000000001872e-05]</msg>
<status status="PASS" starttime="20201112 12:43:00.981" endtime="20201112 12:43:00.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.977" endtime="20201112 12:43:00.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:00.986" endtime="20201112 12:43:00.988"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:00.990" endtime="20201112 12:43:01.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.988" endtime="20201112 12:43:01.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.985" endtime="20201112 12:43:01.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.623" endtime="20201112 12:43:01.010"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:00.623" endtime="20201112 12:43:01.011"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.019" endtime="20201112 12:43:01.033"></status>
</kw>
<msg timestamp="20201112 12:43:01.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.018" endtime="20201112 12:43:01.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.035" endtime="20201112 12:43:01.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.037" endtime="20201112 12:43:01.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.015" endtime="20201112 12:43:01.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.013" endtime="20201112 12:43:01.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.046" endtime="20201112 12:43:01.333"></status>
</kw>
<msg timestamp="20201112 12:43:01.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021520875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021556194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.045" endtime="20201112 12:43:01.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021520875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021556194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.337" endtime="20201112 12:43:01.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.346" endtime="20201112 12:43:01.347"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.042" endtime="20201112 12:43:01.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.040" endtime="20201112 12:43:01.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.352" level="INFO">${RESULT} = [{'time': 0.021556194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5319000000002404e-05, 'source_diff': 3.5319000000002404e-05}, {'time': 0.021609014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:01.349" endtime="20201112 12:43:01.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.365" level="INFO">${ACCURACY} = {'time': [0.021556194, 0.021609014, 0.021672833, 0.021729833, 0.021777167, 0.0218295, 0.021887125, 0.021941042, 0.021992417, 0.022040986, 0.022095833, 0.022147847, 0.022199542, 0.022259667, 0.02231790...</msg>
<status status="PASS" starttime="20201112 12:43:01.353" endtime="20201112 12:43:01.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.370" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.369" endtime="20201112 12:43:01.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.372" level="INFO">VALUE: [3.5319000000002404e-05, 3.480599999999834e-05, 3.467999999999874e-05, 3.469400000000178e-05, 3.468100000000168e-05, 3.470800000000135e-05, 3.4652999999999073e-05, 3.473600000000049e-05, 3.468100000000168e-05, 3.467999999999874e-05, 3.472199999999745e-05, 3.466599999999917e-05, 3.470900000000082e-05, 3.469500000000125e-05, 3.469500000000125e-05, 3.468100000000168e-05, 3.469499999999778e-05, 3.472200000000092e-05, 3.468100000000168e-05, 3.472200000000092e-05, 3.467999999999874e-05, 3.469499999999778e-05, 3.467999999999874e-05, 3.473600000000049e-05, 3.469499999999778e-05, 3.468100000000168e-05, 3.472200000000092e-05, 3.468100000000168e-05, 3.468100000000168e-05, 3.469400000000178e-05, 3.469500000000125e-05, 3.473699999999996e-05, 3.468100000000168e-05, 3.466600000000264e-05, 3.468000000000221e-05, 3.472200000000092e-05, 3.472300000000039e-05, 2.9653000000001012e-05, 3.470799999999788e-05, 3.470799999999788e-05, 3.469500000000125e-05, 3.470800000000135e-05, 2.966599999999764e-05, 3.468099999999821e-05, 2.9721999999999388e-05, 3.470899999999735e-05, 2.9666000000001108e-05, 3.465300000000254e-05, 2.9653000000001012e-05, 2.9707999999999818e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.371" endtime="20201112 12:43:01.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.366" endtime="20201112 12:43:01.373"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.376" endtime="20201112 12:43:01.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.379" endtime="20201112 12:43:01.398"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.378" endtime="20201112 12:43:01.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.374" endtime="20201112 12:43:01.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.011" endtime="20201112 12:43:01.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.011" endtime="20201112 12:43:01.400"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.408" endtime="20201112 12:43:01.423"></status>
</kw>
<msg timestamp="20201112 12:43:01.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.407" endtime="20201112 12:43:01.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.424" endtime="20201112 12:43:01.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.427" endtime="20201112 12:43:01.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.404" endtime="20201112 12:43:01.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.402" endtime="20201112 12:43:01.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.435" endtime="20201112 12:43:01.724"></status>
</kw>
<msg timestamp="20201112 12:43:01.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.434" endtime="20201112 12:43:01.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021319583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021354917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.728" endtime="20201112 12:43:01.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.736" endtime="20201112 12:43:01.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.431" endtime="20201112 12:43:01.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.430" endtime="20201112 12:43:01.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:01.743" level="INFO">${RESULT} = [{'time': 0.021354917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.533400000000145e-05, 'source_diff': 3.533400000000145e-05}, {'time': 0.021414208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:01.739" endtime="20201112 12:43:01.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:01.757" level="INFO">${ACCURACY} = {'time': [0.021354917, 0.021414208, 0.021463111, 0.021524181, 0.021571208, 0.021623847, 0.021690194, 0.021747528, 0.021794542, 0.021857181, 0.021914486, 0.0219805, 0.022044347, 0.022104792, 0.02215679...</msg>
<status status="PASS" starttime="20201112 12:43:01.743" endtime="20201112 12:43:01.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.761" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201112 12:43:01.760" endtime="20201112 12:43:01.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.764" level="INFO">VALUE: [3.533400000000145e-05, 3.476399999999963e-05, 3.467999999999874e-05, 3.470900000000082e-05, 3.469400000000178e-05, 3.469400000000178e-05, 3.469399999999831e-05, 3.468099999999821e-05, 3.469500000000125e-05, 3.470900000000082e-05, 3.470800000000135e-05, 3.468100000000168e-05, 3.469399999999831e-05, 3.470900000000082e-05, 3.468100000000168e-05, 3.4652999999999073e-05, 3.469499999999778e-05, 3.469400000000178e-05, 3.469500000000125e-05, 3.472300000000039e-05, 3.469500000000125e-05, 3.469499999999778e-05, 3.470900000000082e-05, 3.470900000000082e-05, 3.472200000000092e-05, 3.4638999999999504e-05, 3.475000000000006e-05, 3.469399999999831e-05, 3.468000000000221e-05, 3.4624999999999934e-05, 3.473600000000049e-05, 3.469399999999831e-05, 3.469499999999778e-05, 3.469500000000125e-05, 3.469499999999778e-05, 3.470799999999788e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.472300000000039e-05, 3.469499999999778e-05, 3.468099999999821e-05, 3.472300000000039e-05, 3.469399999999831e-05, 3.469400000000178e-05, 3.476399999999963e-05, 3.472300000000039e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.469399999999831e-05, 3.4638999999999504e-05]</msg>
<status status="PASS" starttime="20201112 12:43:01.762" endtime="20201112 12:43:01.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.758" endtime="20201112 12:43:01.765"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.767" endtime="20201112 12:43:01.769"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:01.771" endtime="20201112 12:43:01.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.769" endtime="20201112 12:43:01.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.766" endtime="20201112 12:43:01.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.401" endtime="20201112 12:43:01.791"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.400" endtime="20201112 12:43:01.791"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.800" endtime="20201112 12:43:01.814"></status>
</kw>
<msg timestamp="20201112 12:43:01.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.798" endtime="20201112 12:43:01.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:01.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:01.816" endtime="20201112 12:43:01.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.818" endtime="20201112 12:43:01.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.796" endtime="20201112 12:43:01.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.794" endtime="20201112 12:43:01.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:01.827" endtime="20201112 12:43:02.114"></status>
</kw>
<msg timestamp="20201112 12:43:02.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021410472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:01.826" endtime="20201112 12:43:02.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021410472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021445764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.119" endtime="20201112 12:43:02.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.127" endtime="20201112 12:43:02.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.823" endtime="20201112 12:43:02.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.821" endtime="20201112 12:43:02.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.134" level="INFO">${RESULT} = [{'time': 0.021445764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.529199999999927e-05, 'source_diff': 3.529199999999927e-05}, {'time': 0.021506944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.131" endtime="20201112 12:43:02.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.147" level="INFO">${ACCURACY} = {'time': [0.021445764, 0.021506944, 0.021567097, 0.021628444, 0.021677972, 0.021733097, 0.021797556, 0.021853944, 0.021909708, 0.021960792, 0.022011875, 0.022063597, 0.022126819, 0.022191931, 0.022257...</msg>
<status status="PASS" starttime="20201112 12:43:02.135" endtime="20201112 12:43:02.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.152" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.151" endtime="20201112 12:43:02.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.154" level="INFO">VALUE: [3.529199999999927e-05, 3.4763000000000155e-05, 3.473600000000049e-05, 3.472200000000092e-05, 3.4638999999999504e-05, 3.470800000000135e-05, 3.469499999999778e-05, 3.466599999999917e-05, 3.469399999999831e-05, 3.4638999999999504e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.470799999999788e-05, 3.472300000000039e-05, 3.469400000000178e-05, 3.468000000000221e-05, 3.469399999999831e-05, 3.467999999999874e-05, 3.470800000000135e-05, 3.470899999999735e-05, 3.472200000000092e-05, 3.470800000000135e-05, 3.472199999999745e-05, 3.472199999999745e-05, 3.476399999999963e-05, 3.470900000000082e-05, 3.470799999999788e-05, 3.472199999999745e-05, 3.4652999999999073e-05, 3.466699999999864e-05, 3.470799999999788e-05, 3.469500000000125e-05, 3.475000000000006e-05, 3.468099999999821e-05, 3.4652999999999073e-05, 3.476399999999963e-05, 3.467999999999874e-05, 3.472300000000039e-05, 3.469400000000178e-05, 3.470900000000082e-05, 3.467999999999874e-05, 3.469400000000178e-05, 3.469400000000178e-05, 3.468099999999821e-05, 3.470800000000135e-05, 3.4776999999999725e-05, 3.469400000000178e-05, 3.469399999999831e-05, 3.475000000000006e-05, 3.469400000000178e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.153" endtime="20201112 12:43:02.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.148" endtime="20201112 12:43:02.155"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.157" endtime="20201112 12:43:02.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.161" endtime="20201112 12:43:02.180"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.159" endtime="20201112 12:43:02.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.156" endtime="20201112 12:43:02.181"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.792" endtime="20201112 12:43:02.182"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:01.792" endtime="20201112 12:43:02.182"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.190" endtime="20201112 12:43:02.204"></status>
</kw>
<msg timestamp="20201112 12:43:02.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.189" endtime="20201112 12:43:02.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.206" endtime="20201112 12:43:02.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.208" endtime="20201112 12:43:02.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.186" endtime="20201112 12:43:02.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.184" endtime="20201112 12:43:02.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.217" endtime="20201112 12:43:02.503"></status>
</kw>
<msg timestamp="20201112 12:43:02.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021385319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.216" endtime="20201112 12:43:02.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021385319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021420653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.507" endtime="20201112 12:43:02.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.516" endtime="20201112 12:43:02.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.213" endtime="20201112 12:43:02.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.211" endtime="20201112 12:43:02.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.522" level="INFO">${RESULT} = [{'time': 0.021420653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.533400000000145e-05, 'source_diff': 3.533400000000145e-05}, {'time': 0.021469347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:02.519" endtime="20201112 12:43:02.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.535" level="INFO">${ACCURACY} = {'time': [0.021420653, 0.021469347, 0.021527917, 0.021582486, 0.021635028, 0.021696694, 0.021753389, 0.021812889, 0.021872347, 0.021923736, 0.021972014, 0.022030875, 0.022082292, 0.022136153, 0.022201...</msg>
<status status="PASS" starttime="20201112 12:43:02.523" endtime="20201112 12:43:02.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.540" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.539" endtime="20201112 12:43:02.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.542" level="INFO">VALUE: [3.533400000000145e-05, 3.475000000000006e-05, 3.470900000000082e-05, 3.47640000000031e-05, 3.4652999999999073e-05, 3.46519999999996e-05, 3.470800000000135e-05, 3.469499999999778e-05, 3.469400000000178e-05, 3.469399999999831e-05, 3.468100000000168e-05, 3.469399999999831e-05, 3.470900000000082e-05, 3.470899999999735e-05, 3.469399999999831e-05, 3.469500000000125e-05, 3.470900000000082e-05, 3.468100000000168e-05, 3.469399999999831e-05, 3.470900000000082e-05, 3.468000000000221e-05, 3.4624999999999934e-05, 3.475000000000006e-05, 3.472200000000092e-05, 3.473599999999702e-05, 3.469500000000125e-05, 3.466599999999917e-05, 3.470900000000082e-05, 3.475000000000006e-05, 3.469499999999778e-05, 3.475000000000006e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.469399999999831e-05, 3.469399999999831e-05, 3.469500000000125e-05, 3.472200000000092e-05, 3.4638999999999504e-05, 3.468000000000221e-05, 3.470800000000135e-05, 3.469399999999831e-05, 3.469500000000125e-05, 3.469400000000178e-05, 3.469400000000178e-05, 3.470800000000135e-05, 3.473599999999702e-05, 3.465300000000254e-05, 3.470799999999788e-05, 3.469400000000178e-05, 3.466699999999864e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.541" endtime="20201112 12:43:02.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.536" endtime="20201112 12:43:02.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.546" endtime="20201112 12:43:02.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.549" endtime="20201112 12:43:02.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.548" endtime="20201112 12:43:02.569"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.544" endtime="20201112 12:43:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.183" endtime="20201112 12:43:02.570"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.182" endtime="20201112 12:43:02.570"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.578" endtime="20201112 12:43:02.593"></status>
</kw>
<msg timestamp="20201112 12:43:02.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.577" endtime="20201112 12:43:02.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.594" endtime="20201112 12:43:02.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.597" endtime="20201112 12:43:02.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.574" endtime="20201112 12:43:02.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.572" endtime="20201112 12:43:02.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.606" endtime="20201112 12:43:02.892"></status>
</kw>
<msg timestamp="20201112 12:43:02.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.604" endtime="20201112 12:43:02.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021550708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.896" endtime="20201112 12:43:02.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.904" endtime="20201112 12:43:02.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.602" endtime="20201112 12:43:02.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.600" endtime="20201112 12:43:02.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:02.911" level="INFO">${RESULT} = [{'time': 0.021550708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5360999999997644e-05, 'source_diff': 3.5360999999997644e-05}, {'time': 0.021608403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:02.908" endtime="20201112 12:43:02.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:02.924" level="INFO">${ACCURACY} = {'time': [0.021550708, 0.021608403, 0.021671639, 0.021723042, 0.021781917, 0.021843875, 0.021908042, 0.021956333, 0.022004903, 0.022059417, 0.022123889, 0.022187111, 0.022239458, 0.022292722, 0.022344...</msg>
<status status="PASS" starttime="20201112 12:43:02.912" endtime="20201112 12:43:02.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.929" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201112 12:43:02.928" endtime="20201112 12:43:02.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.931" level="INFO">VALUE: [3.5360999999997644e-05, 3.47640000000031e-05, 3.470799999999788e-05, 3.470900000000082e-05, 3.472300000000039e-05, 3.469399999999831e-05, 3.470900000000082e-05, 3.472200000000092e-05, 3.4638999999999504e-05, 3.469500000000125e-05, 3.470800000000135e-05, 3.469399999999831e-05, 3.470800000000135e-05, 3.4638999999999504e-05, 3.470800000000135e-05, 3.4638999999999504e-05, 3.470800000000135e-05, 3.467999999999874e-05, 3.469500000000125e-05, 3.470900000000082e-05, 3.47779999999992e-05, 3.470799999999788e-05, 3.469500000000125e-05, 3.469499999999778e-05, 3.467999999999874e-05, 3.4638999999999504e-05, 3.470799999999788e-05, 3.470899999999735e-05, 3.469499999999778e-05, 3.469500000000125e-05, 3.470800000000135e-05, 3.466599999999917e-05, 3.470800000000135e-05, 3.472200000000092e-05, 3.468100000000168e-05, 3.472200000000092e-05, 3.470800000000135e-05, 3.469499999999778e-05, 3.469500000000125e-05, 3.470800000000135e-05, 3.4624999999999934e-05, 3.47779999999992e-05, 3.470799999999788e-05, 3.468000000000221e-05, 3.470800000000135e-05, 3.470799999999788e-05, 3.470800000000135e-05, 3.467999999999874e-05, 3.469499999999778e-05, 3.472199999999745e-05]</msg>
<status status="PASS" starttime="20201112 12:43:02.930" endtime="20201112 12:43:02.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.925" endtime="20201112 12:43:02.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.934" endtime="20201112 12:43:02.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:02.938" endtime="20201112 12:43:02.957"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.936" endtime="20201112 12:43:02.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.933" endtime="20201112 12:43:02.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.571" endtime="20201112 12:43:02.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.570" endtime="20201112 12:43:02.959"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.967" endtime="20201112 12:43:02.982"></status>
</kw>
<msg timestamp="20201112 12:43:02.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.966" endtime="20201112 12:43:02.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:02.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:02.983" endtime="20201112 12:43:02.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.986" endtime="20201112 12:43:02.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.963" endtime="20201112 12:43:02.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.961" endtime="20201112 12:43:02.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:02.995" endtime="20201112 12:43:03.281"></status>
</kw>
<msg timestamp="20201112 12:43:03.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:02.993" endtime="20201112 12:43:03.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021549181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.285" endtime="20201112 12:43:03.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.294" endtime="20201112 12:43:03.295"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.991" endtime="20201112 12:43:03.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.989" endtime="20201112 12:43:03.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.300" level="INFO">${RESULT} = [{'time': 0.021584431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.525000000000056e-05, 'source_diff': 3.525000000000056e-05}, {'time': 0.021638806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.297" endtime="20201112 12:43:03.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.315" level="INFO">${ACCURACY} = {'time': [0.021584431, 0.021638806, 0.021699917, 0.021768486, 0.021822431, 0.021881681, 0.021937472, 0.022006375, 0.022062167, 0.022119542, 0.022184319, 0.022238583, 0.022296569, 0.022357361, 0.022415...</msg>
<status status="PASS" starttime="20201112 12:43:03.301" endtime="20201112 12:43:03.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.319" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.318" endtime="20201112 12:43:03.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.322" level="INFO">VALUE: [3.525000000000056e-05, 3.980599999999987e-05, 3.973599999999855e-05, 3.972199999999898e-05, 3.973700000000149e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.973600000000202e-05, 3.974999999999812e-05, 3.469400000000178e-05, 3.974999999999812e-05, 3.972199999999898e-05, 3.973599999999855e-05, 3.975000000000159e-05, 3.970799999999941e-05, 3.976400000000116e-05, 3.975000000000159e-05, 3.974999999999812e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.469500000000125e-05, 3.975000000000159e-05, 3.47779999999992e-05, 3.973700000000149e-05, 3.975000000000159e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.472300000000039e-05, 3.973599999999855e-05, 3.972199999999898e-05, 3.977800000000073e-05, 3.975000000000159e-05, 3.470900000000082e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.973600000000202e-05, 3.468099999999821e-05, 3.976399999999769e-05, 3.977800000000073e-05, 3.469500000000125e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.974999999999812e-05, 3.467999999999874e-05, 3.974999999999812e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.470900000000082e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.320" endtime="20201112 12:43:03.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.315" endtime="20201112 12:43:03.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.325" endtime="20201112 12:43:03.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.328" endtime="20201112 12:43:03.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.327" endtime="20201112 12:43:03.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.323" endtime="20201112 12:43:03.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.960" endtime="20201112 12:43:03.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:02.959" endtime="20201112 12:43:03.349"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.358" endtime="20201112 12:43:03.373"></status>
</kw>
<msg timestamp="20201112 12:43:03.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.356" endtime="20201112 12:43:03.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.374" endtime="20201112 12:43:03.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.377" endtime="20201112 12:43:03.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.354" endtime="20201112 12:43:03.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.352" endtime="20201112 12:43:03.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.385" endtime="20201112 12:43:03.672"></status>
</kw>
<msg timestamp="20201112 12:43:03.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.384" endtime="20201112 12:43:03.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021633431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021673819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.676" endtime="20201112 12:43:03.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.684" endtime="20201112 12:43:03.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.382" endtime="20201112 12:43:03.686"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.380" endtime="20201112 12:43:03.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:03.691" level="INFO">${RESULT} = [{'time': 0.021673819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.038799999999884e-05, 'source_diff': 4.038799999999884e-05}, {'time': 0.021736875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:03.687" endtime="20201112 12:43:03.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:03.704" level="INFO">${ACCURACY} = {'time': [0.021673819, 0.021736875, 0.021805194, 0.021859389, 0.021920792, 0.021983764, 0.022038014, 0.022096625, 0.022149014, 0.022206722, 0.022269653, 0.022323278, 0.022387486, 0.022448028, 0.022509...</msg>
<status status="PASS" starttime="20201112 12:43:03.692" endtime="20201112 12:43:03.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.708" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201112 12:43:03.707" endtime="20201112 12:43:03.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.711" level="INFO">VALUE: [4.038799999999884e-05, 3.97920000000003e-05, 3.9777000000001256e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.972200000000245e-05, 3.9681000000003214e-05, 3.977800000000073e-05, 3.973600000000202e-05, 3.972199999999898e-05, 3.973600000000202e-05, 3.980599999999987e-05, 3.973700000000149e-05, 3.973600000000202e-05, 3.9736999999998024e-05, 3.973700000000149e-05, 3.973599999999855e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.976399999999769e-05, 3.973599999999855e-05, 3.973700000000149e-05, 3.9694999999999314e-05, 3.975000000000159e-05, 3.9777000000001256e-05, 3.9723000000001923e-05, 3.973599999999855e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.973599999999855e-05, 3.9804999999996926e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.972200000000245e-05, 3.972200000000245e-05, 3.976400000000116e-05, 3.973599999999855e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.973599999999855e-05, 3.976399999999769e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.9790999999997356e-05, 3.972200000000245e-05, 3.974999999999812e-05]</msg>
<status status="PASS" starttime="20201112 12:43:03.709" endtime="20201112 12:43:03.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.705" endtime="20201112 12:43:03.712"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.714" endtime="20201112 12:43:03.715"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:03.718" endtime="20201112 12:43:03.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.716" endtime="20201112 12:43:03.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.713" endtime="20201112 12:43:03.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.350" endtime="20201112 12:43:03.738"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.350" endtime="20201112 12:43:03.738"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.747" endtime="20201112 12:43:03.762"></status>
</kw>
<msg timestamp="20201112 12:43:03.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.745" endtime="20201112 12:43:03.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:03.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:03.763" endtime="20201112 12:43:03.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.766" endtime="20201112 12:43:03.767"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.743" endtime="20201112 12:43:03.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.741" endtime="20201112 12:43:03.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:03.774" endtime="20201112 12:43:04.061"></status>
</kw>
<msg timestamp="20201112 12:43:04.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021488694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:03.773" endtime="20201112 12:43:04.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021488694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021529042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.065" endtime="20201112 12:43:04.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.073" endtime="20201112 12:43:04.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.770" endtime="20201112 12:43:04.075"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.769" endtime="20201112 12:43:04.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.080" level="INFO">${RESULT} = [{'time': 0.021529042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.034800000000255e-05, 'source_diff': 4.034800000000255e-05}, {'time': 0.021600556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:04.076" endtime="20201112 12:43:04.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.093" level="INFO">${ACCURACY} = {'time': [0.021529042, 0.021600556, 0.021671972, 0.021743042, 0.021798556, 0.021855611, 0.021917972, 0.021987181, 0.022051403, 0.022119681, 0.022175819, 0.022233528, 0.022303083, 0.022364444, 0.022420...</msg>
<status status="PASS" starttime="20201112 12:43:04.081" endtime="20201112 12:43:04.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.097" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.096" endtime="20201112 12:43:04.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.100" level="INFO">VALUE: [4.034800000000255e-05, 3.980599999999987e-05, 3.977800000000073e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.9709000000002354e-05, 3.975000000000159e-05, 3.9736999999998024e-05, 3.973599999999855e-05, 3.976399999999769e-05, 3.9818999999999966e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.972199999999898e-05, 3.980599999999987e-05, 3.972200000000245e-05, 3.974999999999812e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.974999999999812e-05, 3.974999999999812e-05, 3.976400000000116e-05, 3.973599999999855e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.974999999999812e-05, 3.974999999999812e-05, 3.973600000000202e-05, 3.97920000000003e-05, 3.969399999999984e-05, 3.973600000000202e-05, 3.977800000000073e-05, 3.974999999999812e-05, 3.975000000000159e-05, 3.973600000000202e-05, 3.9736999999998024e-05, 3.980599999999987e-05, 3.96660000000007e-05, 3.975000000000159e-05, 3.976399999999769e-05, 3.974999999999812e-05, 3.9736999999998024e-05, 3.974999999999812e-05, 3.975000000000159e-05, 3.977800000000073e-05, 3.974999999999812e-05, 3.975000000000159e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.098" endtime="20201112 12:43:04.100"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.094" endtime="20201112 12:43:04.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.103" endtime="20201112 12:43:04.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.107" endtime="20201112 12:43:04.126"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.105" endtime="20201112 12:43:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.102" endtime="20201112 12:43:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.739" endtime="20201112 12:43:04.127"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:03.739" endtime="20201112 12:43:04.127"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.136" endtime="20201112 12:43:04.151"></status>
</kw>
<msg timestamp="20201112 12:43:04.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.134" endtime="20201112 12:43:04.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.152" endtime="20201112 12:43:04.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.155" endtime="20201112 12:43:04.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.132" endtime="20201112 12:43:04.158"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.130" endtime="20201112 12:43:04.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.165" endtime="20201112 12:43:04.450"></status>
</kw>
<msg timestamp="20201112 12:43:04.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.163" endtime="20201112 12:43:04.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021562792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021603125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.455" endtime="20201112 12:43:04.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.463" endtime="20201112 12:43:04.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.160" endtime="20201112 12:43:04.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.159" endtime="20201112 12:43:04.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.469" level="INFO">${RESULT} = [{'time': 0.021603125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0333000000000035e-05, 'source_diff': 4.0333000000000035e-05}, {'time': 0.021665611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.466" endtime="20201112 12:43:04.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.482" level="INFO">${ACCURACY} = {'time': [0.021603125, 0.021665611, 0.021725181, 0.021789708, 0.021854597, 0.021909181, 0.021976792, 0.022034153, 0.022099625, 0.022161347, 0.022229931, 0.022293917, 0.022345556, 0.022401431, 0.022465...</msg>
<status status="PASS" starttime="20201112 12:43:04.470" endtime="20201112 12:43:04.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.487" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.486" endtime="20201112 12:43:04.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.489" level="INFO">VALUE: [4.0333000000000035e-05, 3.9805000000000396e-05, 3.976400000000116e-05, 3.969399999999984e-05, 3.977800000000073e-05, 3.97920000000003e-05, 3.976399999999769e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.981999999999944e-05, 3.974999999999812e-05, 3.980599999999987e-05, 3.9709000000002354e-05, 3.976399999999769e-05, 3.975000000000159e-05, 3.980599999999987e-05, 3.977800000000073e-05, 3.968000000000027e-05, 3.976400000000116e-05, 3.974999999999812e-05, 3.977799999999726e-05, 3.977800000000073e-05, 3.976400000000116e-05, 3.9763000000001686e-05, 3.977800000000073e-05, 3.9763000000001686e-05, 3.973600000000202e-05, 3.9694999999999314e-05, 3.9694999999999314e-05, 3.973700000000149e-05, 3.974999999999812e-05, 3.976400000000116e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.976399999999769e-05, 3.976399999999769e-05, 3.976399999999769e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.976399999999769e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.9805000000000396e-05, 3.974999999999812e-05, 3.976399999999769e-05, 3.976400000000116e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.488" endtime="20201112 12:43:04.490"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.483" endtime="20201112 12:43:04.491"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.493" endtime="20201112 12:43:04.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.496" endtime="20201112 12:43:04.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.495" endtime="20201112 12:43:04.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.491" endtime="20201112 12:43:04.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.128" endtime="20201112 12:43:04.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.128" endtime="20201112 12:43:04.517"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.526" endtime="20201112 12:43:04.541"></status>
</kw>
<msg timestamp="20201112 12:43:04.541" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.524" endtime="20201112 12:43:04.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.542" endtime="20201112 12:43:04.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.544" endtime="20201112 12:43:04.546"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.522" endtime="20201112 12:43:04.547"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.520" endtime="20201112 12:43:04.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.553" endtime="20201112 12:43:04.840"></status>
</kw>
<msg timestamp="20201112 12:43:04.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.552" endtime="20201112 12:43:04.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021607153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021647486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.844" endtime="20201112 12:43:04.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.852" endtime="20201112 12:43:04.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.549" endtime="20201112 12:43:04.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.548" endtime="20201112 12:43:04.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:04.859" level="INFO">${RESULT} = [{'time': 0.021647486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0333000000000035e-05, 'source_diff': 4.0333000000000035e-05}, {'time': 0.021701236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:04.856" endtime="20201112 12:43:04.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:04.873" level="INFO">${ACCURACY} = {'time': [0.021647486, 0.021701236, 0.021764264, 0.021818819, 0.021883986, 0.021941069, 0.021999069, 0.022050792, 0.022115958, 0.022186417, 0.022250972, 0.022313347, 0.022383819, 0.022441514, 0.022502...</msg>
<status status="PASS" starttime="20201112 12:43:04.860" endtime="20201112 12:43:04.874"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.878" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201112 12:43:04.877" endtime="20201112 12:43:04.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.880" level="INFO">VALUE: [4.0333000000000035e-05, 3.976399999999769e-05, 3.977799999999726e-05, 3.974999999999812e-05, 3.969399999999984e-05, 3.9763000000001686e-05, 3.9762999999998216e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.974999999999812e-05, 3.976399999999769e-05, 3.975000000000159e-05, 3.9708999999998884e-05, 3.9736999999998024e-05, 3.974999999999812e-05, 3.974999999999812e-05, 3.973599999999855e-05, 3.973599999999855e-05, 3.975000000000159e-05, 3.970799999999941e-05, 3.9805000000000396e-05, 3.973599999999855e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.9763000000001686e-05, 3.974999999999812e-05, 3.975000000000159e-05, 3.974999999999812e-05, 3.975000000000159e-05, 3.974999999999812e-05, 3.973600000000202e-05, 3.972199999999898e-05, 3.976400000000116e-05, 3.973599999999855e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.97920000000003e-05, 3.974999999999812e-05, 3.976400000000116e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.9791000000000826e-05, 3.973600000000202e-05, 3.975000000000159e-05]</msg>
<status status="PASS" starttime="20201112 12:43:04.879" endtime="20201112 12:43:04.881"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.874" endtime="20201112 12:43:04.882"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.884" endtime="20201112 12:43:04.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:04.887" endtime="20201112 12:43:04.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.886" endtime="20201112 12:43:04.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.882" endtime="20201112 12:43:04.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.518" endtime="20201112 12:43:04.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.518" endtime="20201112 12:43:04.908"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.917" endtime="20201112 12:43:04.932"></status>
</kw>
<msg timestamp="20201112 12:43:04.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.915" endtime="20201112 12:43:04.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:04.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:04.933" endtime="20201112 12:43:04.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.936" endtime="20201112 12:43:04.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.912" endtime="20201112 12:43:04.938"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.910" endtime="20201112 12:43:04.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:04.944" endtime="20201112 12:43:05.231"></status>
</kw>
<msg timestamp="20201112 12:43:05.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:04.943" endtime="20201112 12:43:05.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021632139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.235" endtime="20201112 12:43:05.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.244" endtime="20201112 12:43:05.245"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.940" endtime="20201112 12:43:05.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.939" endtime="20201112 12:43:05.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.250" level="INFO">${RESULT} = [{'time': 0.021677542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5402999999999416e-05, 'source_diff': 4.5402999999999416e-05}, {'time': 0.021750361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:05.247" endtime="20201112 12:43:05.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.263" level="INFO">${ACCURACY} = {'time': [0.021677542, 0.021750361, 0.021812167, 0.021873333, 0.021930167, 0.021990028, 0.022053403, 0.022118, 0.022187542, 0.022253694, 0.022322056, 0.022383556, 0.022441861, 0.022506556, 0.022578903...</msg>
<status status="PASS" starttime="20201112 12:43:05.251" endtime="20201112 12:43:05.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.268" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.267" endtime="20201112 12:43:05.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.270" level="INFO">VALUE: [4.5402999999999416e-05, 4.48329999999976e-05, 4.477799999999879e-05, 4.473599999999661e-05, 4.4861000000000206e-05, 4.472199999999704e-05, 4.480599999999793e-05, 4.479199999999836e-05, 3.9709000000002354e-05, 4.479100000000236e-05, 4.479199999999836e-05, 4.480599999999793e-05, 3.975000000000159e-05, 4.4874999999999776e-05, 4.482000000000097e-05, 4.480499999999846e-05, 4.477699999999932e-05, 3.976400000000116e-05, 3.977799999999726e-05, 3.975000000000159e-05, 4.482000000000097e-05, 3.970800000000288e-05, 4.479199999999836e-05, 4.480599999999793e-05, 4.479200000000183e-05, 3.973600000000202e-05, 4.477700000000279e-05, 4.480599999999793e-05, 4.4847000000000636e-05, 4.479099999999889e-05, 4.479099999999889e-05, 4.486199999999968e-05, 4.48329999999976e-05, 4.48060000000014e-05, 4.480499999999846e-05, 3.976400000000116e-05, 4.481899999999803e-05, 4.475000000000312e-05, 4.476400000000269e-05, 3.97920000000003e-05, 3.97920000000003e-05, 4.480599999999793e-05, 4.476400000000269e-05, 4.480499999999846e-05, 4.4819000000001497e-05, 4.477800000000226e-05, 4.479199999999836e-05, 4.48060000000014e-05, 4.479200000000183e-05, 4.48060000000014e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.269" endtime="20201112 12:43:05.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.264" endtime="20201112 12:43:05.271"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.274" endtime="20201112 12:43:05.275"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.277" endtime="20201112 12:43:05.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.276" endtime="20201112 12:43:05.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.272" endtime="20201112 12:43:05.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.909" endtime="20201112 12:43:05.298"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:04.908" endtime="20201112 12:43:05.298"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.307" endtime="20201112 12:43:05.322"></status>
</kw>
<msg timestamp="20201112 12:43:05.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.305" endtime="20201112 12:43:05.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.323" endtime="20201112 12:43:05.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.326" endtime="20201112 12:43:05.327"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.303" endtime="20201112 12:43:05.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.301" endtime="20201112 12:43:05.328"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.334" endtime="20201112 12:43:05.620"></status>
</kw>
<msg timestamp="20201112 12:43:05.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.333" endtime="20201112 12:43:05.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021591569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.624" endtime="20201112 12:43:05.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.633" endtime="20201112 12:43:05.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.330" endtime="20201112 12:43:05.635"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.329" endtime="20201112 12:43:05.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:05.639" level="INFO">${RESULT} = [{'time': 0.021591569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.540199999999994e-05, 'source_diff': 4.540199999999994e-05}, {'time': 0.021657569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:05.636" endtime="20201112 12:43:05.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:05.652" level="INFO">${ACCURACY} = {'time': [0.021591569, 0.021657569, 0.021723083, 0.021781139, 0.021854458, 0.021917194, 0.021986764, 0.022052319, 0.022114431, 0.022181181, 0.022247014, 0.022304764, 0.022378375, 0.022442333, 0.022510...</msg>
<status status="PASS" starttime="20201112 12:43:05.640" endtime="20201112 12:43:05.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.657" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201112 12:43:05.656" endtime="20201112 12:43:05.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.659" level="INFO">VALUE: [4.540199999999994e-05, 4.4875000000003246e-05, 4.477699999999932e-05, 4.479200000000183e-05, 4.477699999999932e-05, 4.479100000000236e-05, 4.476399999999922e-05, 4.479100000000236e-05, 4.48060000000014e-05, 4.477800000000226e-05, 4.479199999999836e-05, 4.48060000000014e-05, 4.479199999999836e-05, 4.477699999999932e-05, 4.4833000000001066e-05, 4.479099999999889e-05, 4.480499999999846e-05, 4.479199999999836e-05, 4.477699999999932e-05, 4.479200000000183e-05, 4.4736999999999555e-05, 4.477799999999879e-05, 4.484699999999717e-05, 4.477800000000226e-05, 4.476399999999922e-05, 4.477799999999879e-05, 4.479200000000183e-05, 4.476400000000269e-05, 4.479099999999889e-05, 4.476400000000269e-05, 4.476399999999922e-05, 4.477800000000226e-05, 4.480499999999846e-05, 4.479100000000236e-05, 4.479200000000183e-05, 4.482000000000097e-05, 4.483400000000054e-05, 4.472200000000051e-05, 4.4819000000001497e-05, 4.477800000000226e-05, 4.477799999999879e-05, 4.4819000000001497e-05, 4.477699999999932e-05, 4.479200000000183e-05, 4.474999999999965e-05, 4.480599999999793e-05, 4.479100000000236e-05, 4.479199999999836e-05, 4.477699999999932e-05, 4.477800000000226e-05]</msg>
<status status="PASS" starttime="20201112 12:43:05.658" endtime="20201112 12:43:05.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.653" endtime="20201112 12:43:05.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.678" endtime="20201112 12:43:05.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:05.681" endtime="20201112 12:43:05.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.680" endtime="20201112 12:43:05.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.676" endtime="20201112 12:43:05.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.299" endtime="20201112 12:43:05.702"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.299" endtime="20201112 12:43:05.702"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.711" endtime="20201112 12:43:05.726"></status>
</kw>
<msg timestamp="20201112 12:43:05.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.709" endtime="20201112 12:43:05.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:05.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:05.727" endtime="20201112 12:43:05.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.730" endtime="20201112 12:43:05.731"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.707" endtime="20201112 12:43:05.732"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.705" endtime="20201112 12:43:05.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:05.739" endtime="20201112 12:43:06.025"></status>
</kw>
<msg timestamp="20201112 12:43:06.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021645819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:05.737" endtime="20201112 12:43:06.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021600403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021645819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.029" endtime="20201112 12:43:06.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.037" endtime="20201112 12:43:06.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.735" endtime="20201112 12:43:06.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.733" endtime="20201112 12:43:06.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.044" level="INFO">${RESULT} = [{'time': 0.021645819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541599999999951e-05, 'source_diff': 4.541599999999951e-05}, {'time': 0.021711472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:06.041" endtime="20201112 12:43:06.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.057" level="INFO">${ACCURACY} = {'time': [0.021645819, 0.021711472, 0.021787569, 0.021846556, 0.021919569, 0.021984181, 0.022058083, 0.02212425, 0.022200361, 0.022266889, 0.022342042, 0.022406639, 0.022463375, 0.022522361, 0.0225978...</msg>
<status status="PASS" starttime="20201112 12:43:06.045" endtime="20201112 12:43:06.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.061" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.060" endtime="20201112 12:43:06.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.064" level="INFO">VALUE: [4.541599999999951e-05, 4.4847000000000636e-05, 4.476299999999975e-05, 4.476399999999922e-05, 4.477699999999932e-05, 4.48199999999975e-05, 4.479099999999889e-05, 4.48060000000014e-05, 4.474999999999965e-05, 4.477800000000226e-05, 4.482000000000097e-05, 4.480599999999793e-05, 4.476399999999922e-05, 4.479200000000183e-05, 4.477800000000226e-05, 4.479199999999836e-05, 4.48060000000014e-05, 4.479100000000236e-05, 4.477799999999879e-05, 4.479099999999889e-05, 4.479199999999836e-05, 4.479099999999889e-05, 4.4819000000001497e-05, 4.477699999999932e-05, 4.474999999999965e-05, 4.479200000000183e-05, 4.477699999999932e-05, 4.480599999999793e-05, 4.479200000000183e-05, 4.4833000000001066e-05, 4.477799999999879e-05, 4.477699999999932e-05, 4.477799999999879e-05, 4.480599999999793e-05, 4.479099999999889e-05, 4.477699999999932e-05, 4.477799999999879e-05, 4.476399999999922e-05, 4.477799999999879e-05, 4.477799999999879e-05, 4.479100000000236e-05, 4.477800000000226e-05, 4.479199999999836e-05, 4.479199999999836e-05, 4.4833000000001066e-05, 4.476399999999922e-05, 4.476299999999975e-05, 4.4875000000003246e-05, 4.481899999999803e-05, 4.479099999999889e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.062" endtime="20201112 12:43:06.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.058" endtime="20201112 12:43:06.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.067" endtime="20201112 12:43:06.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.071" endtime="20201112 12:43:06.090"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.069" endtime="20201112 12:43:06.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.066" endtime="20201112 12:43:06.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.703" endtime="20201112 12:43:06.091"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:05.703" endtime="20201112 12:43:06.091"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.100" endtime="20201112 12:43:06.115"></status>
</kw>
<msg timestamp="20201112 12:43:06.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.098" endtime="20201112 12:43:06.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.117" endtime="20201112 12:43:06.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.119" endtime="20201112 12:43:06.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.096" endtime="20201112 12:43:06.121"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.094" endtime="20201112 12:43:06.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.128" endtime="20201112 12:43:06.414"></status>
</kw>
<msg timestamp="20201112 12:43:06.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.126" endtime="20201112 12:43:06.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021581653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.418" endtime="20201112 12:43:06.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.426" endtime="20201112 12:43:06.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.124" endtime="20201112 12:43:06.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.122" endtime="20201112 12:43:06.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.433" level="INFO">${RESULT} = [{'time': 0.021627056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5402999999999416e-05, 'source_diff': 4.5402999999999416e-05}, {'time': 0.021702069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.429" endtime="20201112 12:43:06.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.447" level="INFO">${ACCURACY} = {'time': [0.021627056, 0.021702069, 0.021760125, 0.021824722, 0.021896486, 0.021967944, 0.022030069, 0.022105889, 0.022165569, 0.022239486, 0.022310278, 0.022381736, 0.022449764, 0.022524722, 0.022596...</msg>
<status status="PASS" starttime="20201112 12:43:06.434" endtime="20201112 12:43:06.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.452" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.451" endtime="20201112 12:43:06.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.454" level="INFO">VALUE: [4.5402999999999416e-05, 4.4847000000000636e-05, 4.479200000000183e-05, 4.479100000000236e-05, 4.477799999999879e-05, 4.479099999999889e-05, 4.474999999999965e-05, 4.48060000000014e-05, 4.4861000000000206e-05, 4.481899999999803e-05, 4.474999999999965e-05, 4.477799999999879e-05, 4.479200000000183e-05, 4.4847000000000636e-05, 4.482000000000097e-05, 4.480499999999846e-05, 4.479099999999889e-05, 4.48060000000014e-05, 4.480599999999793e-05, 4.477799999999879e-05, 4.4819000000001497e-05, 4.479200000000183e-05, 4.476399999999922e-05, 4.479100000000236e-05, 4.479199999999836e-05, 4.477799999999879e-05, 4.479199999999836e-05, 4.480500000000193e-05, 4.4861000000000206e-05, 4.479100000000236e-05, 4.4833000000001066e-05, 4.477799999999879e-05, 4.479100000000236e-05, 4.476399999999922e-05, 4.477800000000226e-05, 4.477699999999932e-05, 4.479100000000236e-05, 4.479099999999889e-05, 4.479199999999836e-05, 4.477799999999879e-05, 4.477799999999879e-05, 4.473600000000008e-05, 4.477799999999879e-05, 4.479199999999836e-05, 4.479099999999889e-05, 4.477799999999879e-05, 4.479199999999836e-05, 4.476399999999922e-05, 4.476300000000322e-05, 4.477799999999879e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.453" endtime="20201112 12:43:06.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.448" endtime="20201112 12:43:06.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.458" endtime="20201112 12:43:06.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.461" endtime="20201112 12:43:06.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.459" endtime="20201112 12:43:06.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.456" endtime="20201112 12:43:06.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.092" endtime="20201112 12:43:06.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.092" endtime="20201112 12:43:06.482"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.490" endtime="20201112 12:43:06.505"></status>
</kw>
<msg timestamp="20201112 12:43:06.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.489" endtime="20201112 12:43:06.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.507" endtime="20201112 12:43:06.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.509" endtime="20201112 12:43:06.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.486" endtime="20201112 12:43:06.511"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.484" endtime="20201112 12:43:06.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.518" endtime="20201112 12:43:06.804"></status>
</kw>
<msg timestamp="20201112 12:43:06.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021606847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.517" endtime="20201112 12:43:06.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021606847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.808" endtime="20201112 12:43:06.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.817" endtime="20201112 12:43:06.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.514" endtime="20201112 12:43:06.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.512" endtime="20201112 12:43:06.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:06.823" level="INFO">${RESULT} = [{'time': 0.021606847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5402999999999416e-05, 'source_diff': 4.5402999999999416e-05}, {'time': 0.021664722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:06.820" endtime="20201112 12:43:06.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:06.836" level="INFO">${ACCURACY} = {'time': [0.021606847, 0.021664722, 0.021724653, 0.021788, 0.021851069, 0.021918431, 0.021991431, 0.022048625, 0.022114708, 0.022185222, 0.02225575, 0.022320944, 0.022383667, 0.022454194, 0.022519444,...</msg>
<status status="PASS" starttime="20201112 12:43:06.824" endtime="20201112 12:43:06.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.841" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201112 12:43:06.840" endtime="20201112 12:43:06.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.843" level="INFO">VALUE: [4.5402999999999416e-05, 4.4847000000000636e-05, 4.477799999999879e-05, 4.470799999999747e-05, 4.4819000000001497e-05, 4.4722999999999985e-05, 4.477799999999879e-05, 4.4861000000000206e-05, 4.479099999999889e-05, 4.477800000000226e-05, 4.479200000000183e-05, 4.476299999999975e-05, 4.477799999999879e-05, 4.480500000000193e-05, 4.481899999999803e-05, 4.480499999999846e-05, 4.479099999999889e-05, 4.48329999999976e-05, 4.480599999999793e-05, 4.479200000000183e-05, 4.48329999999976e-05, 4.479199999999836e-05, 4.479200000000183e-05, 4.476399999999922e-05, 4.484699999999717e-05, 4.480599999999793e-05, 4.477699999999932e-05, 4.480599999999793e-05, 4.479200000000183e-05, 4.479099999999889e-05, 4.477799999999879e-05, 4.477799999999879e-05, 4.48060000000014e-05, 4.481899999999803e-05, 4.479199999999836e-05, 4.4833000000001066e-05, 4.477800000000226e-05, 4.479100000000236e-05, 4.4819000000001497e-05, 4.479200000000183e-05, 4.480599999999793e-05, 4.4861000000000206e-05, 4.483400000000054e-05, 4.479199999999836e-05, 4.477799999999879e-05, 4.476399999999922e-05, 4.480500000000193e-05, 4.4861000000000206e-05, 4.480500000000193e-05, 4.479200000000183e-05]</msg>
<status status="PASS" starttime="20201112 12:43:06.842" endtime="20201112 12:43:06.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.837" endtime="20201112 12:43:06.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.847" endtime="20201112 12:43:06.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:06.850" endtime="20201112 12:43:06.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.849" endtime="20201112 12:43:06.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.845" endtime="20201112 12:43:06.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.483" endtime="20201112 12:43:06.871"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.482" endtime="20201112 12:43:06.871"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.879" endtime="20201112 12:43:06.895"></status>
</kw>
<msg timestamp="20201112 12:43:06.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.878" endtime="20201112 12:43:06.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:06.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:06.896" endtime="20201112 12:43:06.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.899" endtime="20201112 12:43:06.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.875" endtime="20201112 12:43:06.901"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.873" endtime="20201112 12:43:06.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:06.907" endtime="20201112 12:43:07.194"></status>
</kw>
<msg timestamp="20201112 12:43:07.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:06.906" endtime="20201112 12:43:07.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021538833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021589292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.198" endtime="20201112 12:43:07.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.207" endtime="20201112 12:43:07.208"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.903" endtime="20201112 12:43:07.209"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.902" endtime="20201112 12:43:07.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.213" level="INFO">${RESULT} = [{'time': 0.021589292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045899999999923e-05, 'source_diff': 5.045899999999923e-05}, {'time': 0.021660542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:07.210" endtime="20201112 12:43:07.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.226" level="INFO">${ACCURACY} = {'time': [0.021589292, 0.021660542, 0.021720472, 0.021794486, 0.021865681, 0.021928486, 0.021992444, 0.022063028, 0.022142306, 0.022204722, 0.022267833, 0.022335222, 0.022403639, 0.022475708, 0.022538...</msg>
<status status="PASS" starttime="20201112 12:43:07.214" endtime="20201112 12:43:07.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.231" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.230" endtime="20201112 12:43:07.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.233" level="INFO">VALUE: [5.045899999999923e-05, 4.483400000000054e-05, 4.477800000000226e-05, 4.98469999999987e-05, 4.98200000000025e-05, 4.984700000000217e-05, 4.479099999999889e-05, 4.98469999999987e-05, 4.979199999999989e-05, 4.479099999999889e-05, 4.984700000000217e-05, 4.477799999999879e-05, 4.98469999999987e-05, 4.479099999999889e-05, 4.983299999999913e-05, 4.479199999999836e-05, 4.476399999999922e-05, 4.98469999999987e-05, 4.476299999999975e-05, 4.981999999999903e-05, 4.983400000000207e-05, 4.987500000000131e-05, 4.98469999999987e-05, 4.48060000000014e-05, 4.987499999999784e-05, 4.983299999999913e-05, 4.479100000000236e-05, 4.981999999999903e-05, 4.991700000000002e-05, 4.477700000000279e-05, 4.983299999999913e-05, 4.98330000000026e-05, 4.991700000000002e-05, 4.977800000000032e-05, 4.983400000000207e-05, 4.98339999999986e-05, 4.477800000000226e-05, 4.983400000000207e-05, 4.983400000000207e-05, 4.482000000000097e-05, 4.980499999999999e-05, 4.983299999999913e-05, 4.98339999999986e-05, 4.983299999999913e-05, 4.981999999999903e-05, 4.983400000000207e-05, 4.479199999999836e-05, 4.479200000000183e-05, 4.983299999999913e-05, 4.984700000000217e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.232" endtime="20201112 12:43:07.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.227" endtime="20201112 12:43:07.235"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.237" endtime="20201112 12:43:07.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.240" endtime="20201112 12:43:07.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.239" endtime="20201112 12:43:07.260"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.235" endtime="20201112 12:43:07.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.872" endtime="20201112 12:43:07.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:06.871" endtime="20201112 12:43:07.261"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.270" endtime="20201112 12:43:07.285"></status>
</kw>
<msg timestamp="20201112 12:43:07.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.268" endtime="20201112 12:43:07.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.286" endtime="20201112 12:43:07.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.289" endtime="20201112 12:43:07.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.265" endtime="20201112 12:43:07.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.263" endtime="20201112 12:43:07.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.298" endtime="20201112 12:43:07.584"></status>
</kw>
<msg timestamp="20201112 12:43:07.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.296" endtime="20201112 12:43:07.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021612417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021662861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.588" endtime="20201112 12:43:07.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.597" endtime="20201112 12:43:07.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.294" endtime="20201112 12:43:07.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.292" endtime="20201112 12:43:07.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.603" level="INFO">${RESULT} = [{'time': 0.021662861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.044400000000018e-05, 'source_diff': 5.044400000000018e-05}, {'time': 0.02173075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:07.600" endtime="20201112 12:43:07.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:07.616" level="INFO">${ACCURACY} = {'time': [0.021662861, 0.02173075, 0.021801681, 0.021871583, 0.021940931, 0.022006194, 0.022086111, 0.022159819, 0.022224778, 0.022305028, 0.022372181, 0.022439944, 0.022508319, 0.022580139, 0.0226504...</msg>
<status status="PASS" starttime="20201112 12:43:07.604" endtime="20201112 12:43:07.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.621" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201112 12:43:07.620" endtime="20201112 12:43:07.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.623" level="INFO">VALUE: [5.044400000000018e-05, 4.988900000000088e-05, 4.987500000000131e-05, 4.981899999999956e-05, 4.984800000000164e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.984700000000217e-05, 4.984700000000217e-05, 4.986100000000174e-05, 4.986200000000121e-05, 4.981899999999956e-05, 4.979100000000042e-05, 4.983299999999913e-05, 4.98339999999986e-05, 4.987500000000131e-05, 4.983299999999913e-05, 4.990300000000045e-05, 4.983400000000207e-05, 4.983299999999913e-05, 4.981999999999903e-05, 4.98200000000025e-05, 4.98469999999987e-05, 4.983299999999913e-05, 4.987499999999784e-05, 4.988900000000088e-05, 4.981899999999956e-05, 4.976400000000075e-05, 4.984700000000217e-05, 4.981899999999956e-05, 4.984700000000217e-05, 4.98330000000026e-05, 4.981899999999956e-05, 4.990200000000097e-05, 4.984700000000217e-05, 4.98339999999986e-05, 4.980599999999946e-05, 4.981899999999956e-05, 4.979100000000042e-05, 4.984799999999817e-05, 4.986200000000121e-05, 4.983400000000207e-05, 4.981999999999903e-05, 4.983299999999913e-05, 4.979199999999989e-05, 4.983299999999913e-05, 4.98330000000026e-05, 4.981899999999956e-05, 4.990300000000045e-05, 4.983299999999913e-05]</msg>
<status status="PASS" starttime="20201112 12:43:07.622" endtime="20201112 12:43:07.624"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.617" endtime="20201112 12:43:07.624"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.627" endtime="20201112 12:43:07.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:07.630" endtime="20201112 12:43:07.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.628" endtime="20201112 12:43:07.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.625" endtime="20201112 12:43:07.650"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.262" endtime="20201112 12:43:07.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.261" endtime="20201112 12:43:07.651"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.659" endtime="20201112 12:43:07.675"></status>
</kw>
<msg timestamp="20201112 12:43:07.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.658" endtime="20201112 12:43:07.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:07.676" endtime="20201112 12:43:07.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.679" endtime="20201112 12:43:07.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.655" endtime="20201112 12:43:07.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.653" endtime="20201112 12:43:07.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.688" endtime="20201112 12:43:07.973"></status>
</kw>
<msg timestamp="20201112 12:43:07.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.686" endtime="20201112 12:43:07.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:07.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021507083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021557528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:07.977" endtime="20201112 12:43:07.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:07.986" endtime="20201112 12:43:07.987"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.683" endtime="20201112 12:43:07.988"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.682" endtime="20201112 12:43:07.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:07.992" level="INFO">${RESULT} = [{'time': 0.021557528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.044499999999966e-05, 'source_diff': 5.044499999999966e-05}, {'time': 0.021622, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:07.989" endtime="20201112 12:43:07.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.007" level="INFO">${ACCURACY} = {'time': [0.021557528, 0.021622, 0.021702222, 0.021782764, 0.021847083, 0.021909569, 0.021977014, 0.022051736, 0.02213, 0.022208972, 0.022274569, 0.022351056, 0.022426028, 0.022506833, 0.022572403, 0....</msg>
<status status="PASS" starttime="20201112 12:43:07.993" endtime="20201112 12:43:08.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.011" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.010" endtime="20201112 12:43:08.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.013" level="INFO">VALUE: [5.044499999999966e-05, 4.986099999999827e-05, 4.979100000000042e-05, 4.98469999999987e-05, 4.980499999999999e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.991700000000002e-05, 4.981899999999956e-05, 4.981899999999956e-05, 4.981899999999956e-05, 4.983400000000207e-05, 4.986100000000174e-05, 4.980499999999999e-05, 4.98200000000025e-05, 4.981899999999956e-05, 4.987500000000131e-05, 4.987499999999784e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.990200000000097e-05, 4.983400000000207e-05, 4.981899999999956e-05, 4.983299999999913e-05, 4.983400000000207e-05, 4.98339999999986e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.98330000000026e-05, 4.987499999999784e-05, 4.98469999999987e-05, 4.983299999999913e-05, 4.980499999999999e-05, 4.98200000000025e-05, 4.990300000000045e-05, 4.987500000000131e-05, 4.981899999999956e-05, 4.987499999999784e-05, 4.981899999999956e-05, 4.980600000000293e-05, 4.981999999999903e-05, 4.984799999999817e-05, 4.979100000000042e-05, 4.98469999999987e-05, 4.983299999999913e-05, 4.98200000000025e-05, 4.984800000000164e-05, 4.98200000000025e-05, 4.981999999999903e-05, 4.98200000000025e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.012" endtime="20201112 12:43:08.014"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.008" endtime="20201112 12:43:08.015"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.017" endtime="20201112 12:43:08.018"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.020" endtime="20201112 12:43:08.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.019" endtime="20201112 12:43:08.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.015" endtime="20201112 12:43:08.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.652" endtime="20201112 12:43:08.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:07.651" endtime="20201112 12:43:08.041"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.050" endtime="20201112 12:43:08.065"></status>
</kw>
<msg timestamp="20201112 12:43:08.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.048" endtime="20201112 12:43:08.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.067" endtime="20201112 12:43:08.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.069" endtime="20201112 12:43:08.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.046" endtime="20201112 12:43:08.071"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.044" endtime="20201112 12:43:08.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.078" endtime="20201112 12:43:08.365"></status>
</kw>
<msg timestamp="20201112 12:43:08.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.076" endtime="20201112 12:43:08.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021532903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.369" endtime="20201112 12:43:08.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.377" endtime="20201112 12:43:08.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.074" endtime="20201112 12:43:08.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.072" endtime="20201112 12:43:08.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.384" level="INFO">${RESULT} = [{'time': 0.021583361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045799999999975e-05, 'source_diff': 5.045799999999975e-05}, {'time': 0.021647833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.381" endtime="20201112 12:43:08.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.397" level="INFO">${ACCURACY} = {'time': [0.021583361, 0.021647833, 0.021724028, 0.021797111, 0.021867389, 0.021931736, 0.021998917, 0.022071111, 0.022146625, 0.02222125, 0.022296819, 0.022374583, 0.022447986, 0.022510778, 0.0225763...</msg>
<status status="PASS" starttime="20201112 12:43:08.385" endtime="20201112 12:43:08.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.401" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.400" endtime="20201112 12:43:08.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.404" level="INFO">VALUE: [5.045799999999975e-05, 4.9901999999997504e-05, 4.98469999999987e-05, 4.98330000000026e-05, 4.984700000000217e-05, 4.976400000000075e-05, 4.986099999999827e-05, 4.988900000000088e-05, 4.98469999999987e-05, 4.98330000000026e-05, 4.983299999999913e-05, 4.979100000000042e-05, 4.986099999999827e-05, 4.986099999999827e-05, 4.98469999999987e-05, 4.984700000000217e-05, 4.987499999999784e-05, 4.983299999999913e-05, 4.980499999999999e-05, 4.987500000000131e-05, 4.98339999999986e-05, 4.984700000000217e-05, 4.990299999999698e-05, 4.984700000000217e-05, 4.980599999999946e-05, 4.983400000000207e-05, 4.986099999999827e-05, 4.984800000000164e-05, 4.977700000000085e-05, 4.98469999999987e-05, 4.979199999999989e-05, 4.986100000000174e-05, 4.986099999999827e-05, 4.98339999999986e-05, 4.984700000000217e-05, 4.981899999999956e-05, 4.984700000000217e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.980599999999946e-05, 4.979199999999989e-05, 4.983299999999913e-05, 4.984700000000217e-05, 4.986100000000174e-05, 4.98330000000026e-05, 4.987500000000131e-05, 4.984700000000217e-05, 4.983400000000207e-05, 4.98339999999986e-05, 4.984800000000164e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.402" endtime="20201112 12:43:08.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.398" endtime="20201112 12:43:08.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.407" endtime="20201112 12:43:08.409"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.411" endtime="20201112 12:43:08.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.409" endtime="20201112 12:43:08.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.406" endtime="20201112 12:43:08.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.042" endtime="20201112 12:43:08.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.042" endtime="20201112 12:43:08.431"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.440" endtime="20201112 12:43:08.455"></status>
</kw>
<msg timestamp="20201112 12:43:08.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.438" endtime="20201112 12:43:08.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.457" endtime="20201112 12:43:08.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.459" endtime="20201112 12:43:08.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.436" endtime="20201112 12:43:08.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.434" endtime="20201112 12:43:08.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.468" endtime="20201112 12:43:08.754"></status>
</kw>
<msg timestamp="20201112 12:43:08.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.466" endtime="20201112 12:43:08.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021617292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.758" endtime="20201112 12:43:08.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.767" endtime="20201112 12:43:08.768"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.464" endtime="20201112 12:43:08.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.462" endtime="20201112 12:43:08.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:08.773" level="INFO">${RESULT} = [{'time': 0.021617292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.044499999999966e-05, 'source_diff': 5.044499999999966e-05}, {'time': 0.021698889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:08.770" endtime="20201112 12:43:08.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:08.786" level="INFO">${ACCURACY} = {'time': [0.021617292, 0.021698889, 0.021767292, 0.021833222, 0.021904792, 0.021966597, 0.022041486, 0.022118306, 0.022198889, 0.022261361, 0.022338236, 0.022414375, 0.022480611, 0.022547472, 0.022613...</msg>
<status status="PASS" starttime="20201112 12:43:08.774" endtime="20201112 12:43:08.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.791" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201112 12:43:08.790" endtime="20201112 12:43:08.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.793" level="INFO">VALUE: [5.044499999999966e-05, 4.990300000000045e-05, 4.983400000000207e-05, 4.986099999999827e-05, 4.990300000000045e-05, 4.988900000000088e-05, 4.983299999999913e-05, 4.983400000000207e-05, 4.986099999999827e-05, 4.98469999999987e-05, 4.988900000000088e-05, 4.98469999999987e-05, 4.98330000000026e-05, 4.983299999999913e-05, 4.986100000000174e-05, 4.983299999999913e-05, 4.981899999999956e-05, 4.98469999999987e-05, 4.988900000000088e-05, 4.98339999999986e-05, 4.98330000000026e-05, 4.98469999999987e-05, 4.984700000000217e-05, 4.98469999999987e-05, 4.98469999999987e-05, 4.986100000000174e-05, 4.988900000000088e-05, 4.986200000000121e-05, 4.987500000000131e-05, 4.98469999999987e-05, 4.98339999999986e-05, 4.984700000000217e-05, 4.983400000000207e-05, 4.98330000000026e-05, 4.987500000000131e-05, 4.98330000000026e-05, 4.984700000000217e-05, 4.984800000000164e-05, 4.988900000000088e-05, 4.986100000000174e-05, 4.983299999999913e-05, 4.984800000000164e-05, 4.983299999999913e-05, 4.988900000000088e-05, 4.98339999999986e-05, 4.986100000000174e-05, 4.986100000000174e-05, 4.986099999999827e-05, 4.98469999999987e-05, 4.986099999999827e-05]</msg>
<status status="PASS" starttime="20201112 12:43:08.792" endtime="20201112 12:43:08.794"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.787" endtime="20201112 12:43:08.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.796" endtime="20201112 12:43:08.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:08.800" endtime="20201112 12:43:08.819"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.798" endtime="20201112 12:43:08.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.795" endtime="20201112 12:43:08.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.432" endtime="20201112 12:43:08.820"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.432" endtime="20201112 12:43:08.821"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.829" endtime="20201112 12:43:08.845"></status>
</kw>
<msg timestamp="20201112 12:43:08.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.828" endtime="20201112 12:43:08.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:08.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:08.846" endtime="20201112 12:43:08.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.849" endtime="20201112 12:43:08.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.825" endtime="20201112 12:43:08.851"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.823" endtime="20201112 12:43:08.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:08.857" endtime="20201112 12:43:09.144"></status>
</kw>
<msg timestamp="20201112 12:43:09.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:08.856" endtime="20201112 12:43:09.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021630569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.149" endtime="20201112 12:43:09.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.157" endtime="20201112 12:43:09.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.853" endtime="20201112 12:43:09.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.852" endtime="20201112 12:43:09.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.163" level="INFO">${RESULT} = [{'time': 0.021630569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.045799999999975e-05, 'source_diff': 5.045799999999975e-05}, {'time': 0.021710972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:09.160" endtime="20201112 12:43:09.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.176" level="INFO">${ACCURACY} = {'time': [0.021630569, 0.021710972, 0.021796264, 0.021881222, 0.021965569, 0.022032792, 0.022100889, 0.022163694, 0.022226486, 0.022288278, 0.022366417, 0.022433889, 0.022502611, 0.022574167, 0.022635...</msg>
<status status="PASS" starttime="20201112 12:43:09.164" endtime="20201112 12:43:09.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.181" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.180" endtime="20201112 12:43:09.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.183" level="INFO">VALUE: [5.045799999999975e-05, 4.9915999999997074e-05, 5.490299999999851e-05, 5.488899999999894e-05, 5.4887999999999465e-05, 5.487499999999937e-05, 4.98469999999987e-05, 4.98330000000026e-05, 4.98469999999987e-05, 4.983400000000207e-05, 5.490299999999851e-05, 4.98469999999987e-05, 4.983299999999913e-05, 5.488899999999894e-05, 4.983299999999913e-05, 4.988899999999741e-05, 4.981999999999903e-05, 4.980599999999946e-05, 5.488899999999894e-05, 4.98469999999987e-05, 4.986100000000174e-05, 5.487500000000284e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.488900000000241e-05, 5.484700000000023e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.48479999999997e-05, 5.487499999999937e-05, 4.983299999999913e-05, 5.487499999999937e-05, 4.98469999999987e-05, 5.48609999999998e-05, 5.487499999999937e-05, 4.981900000000303e-05, 5.4902000000002504e-05, 5.48609999999998e-05, 5.488899999999894e-05, 5.4958000000000784e-05, 5.487499999999937e-05, 5.490299999999851e-05, 5.487499999999937e-05, 4.980499999999999e-05, 5.487499999999937e-05, 5.4944000000001214e-05, 4.983299999999913e-05, 4.984700000000217e-05, 5.493100000000112e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.182" endtime="20201112 12:43:09.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.177" endtime="20201112 12:43:09.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.187" endtime="20201112 12:43:09.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.190" endtime="20201112 12:43:09.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.189" endtime="20201112 12:43:09.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.185" endtime="20201112 12:43:09.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.822" endtime="20201112 12:43:09.211"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:08.821" endtime="20201112 12:43:09.211"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.220" endtime="20201112 12:43:09.236"></status>
</kw>
<msg timestamp="20201112 12:43:09.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.218" endtime="20201112 12:43:09.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.237" endtime="20201112 12:43:09.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.240" endtime="20201112 12:43:09.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.215" endtime="20201112 12:43:09.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.213" endtime="20201112 12:43:09.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.249" endtime="20201112 12:43:09.535"></status>
</kw>
<msg timestamp="20201112 12:43:09.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.247" endtime="20201112 12:43:09.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021914903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.539" endtime="20201112 12:43:09.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.547" endtime="20201112 12:43:09.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.245" endtime="20201112 12:43:09.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.243" endtime="20201112 12:43:09.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.554" level="INFO">${RESULT} = [{'time': 0.021914903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5527999999999134e-05, 'source_diff': 5.5527999999999134e-05}, {'time': 0.021995347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.550" endtime="20201112 12:43:09.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.568" level="INFO">${ACCURACY} = {'time': [0.021914903, 0.021995347, 0.022069722, 0.022150056, 0.022235028, 0.022307861, 0.022391931, 0.022473153, 0.022552514, 0.022638444, 0.022722194, 0.022803403, 0.022888125, 0.022963694, 0.023039...</msg>
<status status="PASS" starttime="20201112 12:43:09.555" endtime="20201112 12:43:09.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.572" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.572" endtime="20201112 12:43:09.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.575" level="INFO">VALUE: [5.5527999999999134e-05, 5.4957999999997315e-05, 5.490299999999851e-05, 5.490300000000198e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.4887999999999465e-05, 5.4916000000002074e-05, 5.488899999999894e-05, 5.4943999999997745e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.4901999999999035e-05, 5.488900000000241e-05, 5.494500000000069e-05, 5.4902000000002504e-05, 5.488899999999894e-05, 5.490300000000198e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.4901999999999035e-05, 5.484700000000023e-05, 5.488899999999894e-05, 5.488900000000241e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.490300000000198e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.490300000000198e-05, 5.4915999999998605e-05, 5.490299999999851e-05, 5.491699999999808e-05, 5.4972000000000354e-05, 5.488900000000241e-05, 5.488899999999894e-05, 5.488900000000241e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.487500000000284e-05, 5.482000000000056e-05, 5.487499999999937e-05, 5.490299999999851e-05, 5.488900000000241e-05, 5.488899999999894e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.574" endtime="20201112 12:43:09.576"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.569" endtime="20201112 12:43:09.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.578" endtime="20201112 12:43:09.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.582" endtime="20201112 12:43:09.601"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.580" endtime="20201112 12:43:09.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.577" endtime="20201112 12:43:09.602"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.212" endtime="20201112 12:43:09.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.211" endtime="20201112 12:43:09.603"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.611" endtime="20201112 12:43:09.627"></status>
</kw>
<msg timestamp="20201112 12:43:09.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.610" endtime="20201112 12:43:09.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:09.628" endtime="20201112 12:43:09.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.631" endtime="20201112 12:43:09.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.607" endtime="20201112 12:43:09.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.605" endtime="20201112 12:43:09.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.640" endtime="20201112 12:43:09.926"></status>
</kw>
<msg timestamp="20201112 12:43:09.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.638" endtime="20201112 12:43:09.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021529653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021585153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:09.930" endtime="20201112 12:43:09.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.939" endtime="20201112 12:43:09.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.635" endtime="20201112 12:43:09.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.634" endtime="20201112 12:43:09.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:09.945" level="INFO">${RESULT} = [{'time': 0.021585153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5499999999999994e-05, 'source_diff': 5.5499999999999994e-05}, {'time': 0.021663458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:09.942" endtime="20201112 12:43:09.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:09.958" level="INFO">${ACCURACY} = {'time': [0.021585153, 0.021663458, 0.021741819, 0.021819944, 0.021895264, 0.021979597, 0.022063333, 0.022146125, 0.022232042, 0.02229925, 0.022376458, 0.022450528, 0.022521486, 0.022593681, 0.0226658...</msg>
<status status="PASS" starttime="20201112 12:43:09.946" endtime="20201112 12:43:09.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.963" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201112 12:43:09.962" endtime="20201112 12:43:09.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:09.965" level="INFO">VALUE: [5.5499999999999994e-05, 5.4999999999999494e-05, 5.4887999999999465e-05, 5.487499999999937e-05, 5.488900000000241e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.490300000000198e-05, 5.481900000000109e-05, 5.4901999999999035e-05, 5.490300000000198e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.488900000000241e-05, 5.4887999999999465e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.494500000000069e-05, 5.488899999999894e-05, 5.490299999999851e-05, 5.488899999999894e-05, 5.480600000000099e-05, 5.494499999999722e-05, 5.4887999999999465e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.487500000000284e-05, 5.487500000000284e-05, 5.4944000000001214e-05, 5.484700000000023e-05, 5.491699999999808e-05, 5.487499999999937e-05, 5.48609999999998e-05, 5.4915999999998605e-05, 5.48609999999998e-05, 5.488900000000241e-05, 5.490299999999851e-05, 5.4902000000002504e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.4958000000000784e-05, 5.483400000000013e-05, 5.483400000000013e-05, 5.4887999999999465e-05, 5.487500000000284e-05, 5.488899999999894e-05]</msg>
<status status="PASS" starttime="20201112 12:43:09.964" endtime="20201112 12:43:09.966"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.959" endtime="20201112 12:43:09.967"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:09.969" endtime="20201112 12:43:09.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:09.972" endtime="20201112 12:43:09.991"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.971" endtime="20201112 12:43:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.967" endtime="20201112 12:43:09.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.604" endtime="20201112 12:43:09.993"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.603" endtime="20201112 12:43:09.993"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.002" endtime="20201112 12:43:10.017"></status>
</kw>
<msg timestamp="20201112 12:43:10.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.000" endtime="20201112 12:43:10.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.019" endtime="20201112 12:43:10.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.021" endtime="20201112 12:43:10.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.997" endtime="20201112 12:43:10.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.995" endtime="20201112 12:43:10.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.030" endtime="20201112 12:43:10.322"></status>
</kw>
<msg timestamp="20201112 12:43:10.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.028" endtime="20201112 12:43:10.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021743472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.327" endtime="20201112 12:43:10.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.335" endtime="20201112 12:43:10.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.026" endtime="20201112 12:43:10.337"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.024" endtime="20201112 12:43:10.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.342" level="INFO">${RESULT} = [{'time': 0.021798972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5499999999999994e-05, 'source_diff': 5.5499999999999994e-05}, {'time': 0.021869444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:10.338" endtime="20201112 12:43:10.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.355" level="INFO">${ACCURACY} = {'time': [0.021798972, 0.021869444, 0.021940403, 0.022013847, 0.022098222, 0.022179111, 0.022248514, 0.022322583, 0.022394486, 0.022474153, 0.022557264, 0.022642861, 0.022710722, 0.022794444, 0.022873...</msg>
<status status="PASS" starttime="20201112 12:43:10.343" endtime="20201112 12:43:10.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.359" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.358" endtime="20201112 12:43:10.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.362" level="INFO">VALUE: [5.5499999999999994e-05, 5.4957999999997315e-05, 5.488900000000241e-05, 5.488899999999894e-05, 5.488900000000241e-05, 5.487500000000284e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.488900000000241e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.490299999999851e-05, 5.4887999999999465e-05, 5.4901999999999035e-05, 5.48479999999997e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.490300000000198e-05, 5.487500000000284e-05, 5.4887999999999465e-05, 5.4915999999998605e-05, 5.490299999999851e-05, 5.487500000000284e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.491700000000155e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.4901999999999035e-05, 5.4902000000002504e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.4902000000002504e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.490300000000198e-05, 5.4888000000002934e-05, 5.4887999999999465e-05, 5.488899999999894e-05, 5.4902000000002504e-05, 5.488900000000241e-05, 5.487500000000284e-05, 5.484700000000023e-05, 5.488899999999894e-05, 5.481900000000109e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.360" endtime="20201112 12:43:10.362"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.356" endtime="20201112 12:43:10.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.365" endtime="20201112 12:43:10.366"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.369" endtime="20201112 12:43:10.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.367" endtime="20201112 12:43:10.388"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.363" endtime="20201112 12:43:10.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.994" endtime="20201112 12:43:10.389"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:09.993" endtime="20201112 12:43:10.389"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.398" endtime="20201112 12:43:10.413"></status>
</kw>
<msg timestamp="20201112 12:43:10.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.396" endtime="20201112 12:43:10.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.415" endtime="20201112 12:43:10.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.417" endtime="20201112 12:43:10.419"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.394" endtime="20201112 12:43:10.420"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.392" endtime="20201112 12:43:10.420"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.426" endtime="20201112 12:43:10.713"></status>
</kw>
<msg timestamp="20201112 12:43:10.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.425" endtime="20201112 12:43:10.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021552903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.717" endtime="20201112 12:43:10.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.725" endtime="20201112 12:43:10.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.422" endtime="20201112 12:43:10.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.421" endtime="20201112 12:43:10.728"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:10.732" level="INFO">${RESULT} = [{'time': 0.021552903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.555600000000174e-05, 'source_diff': 5.555600000000174e-05}, {'time': 0.021633917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:10.729" endtime="20201112 12:43:10.732"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:10.745" level="INFO">${ACCURACY} = {'time': [0.021552903, 0.021633917, 0.021709236, 0.021790486, 0.021874819, 0.021949903, 0.02203575, 0.022102986, 0.022177972, 0.022258278, 0.022330792, 0.022411708, 0.022479556, 0.022564833, 0.0226460...</msg>
<status status="PASS" starttime="20201112 12:43:10.733" endtime="20201112 12:43:10.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.749" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201112 12:43:10.748" endtime="20201112 12:43:10.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.752" level="INFO">VALUE: [5.555600000000174e-05, 5.497299999999983e-05, 5.490299999999851e-05, 5.490300000000198e-05, 5.4887999999999465e-05, 5.494500000000069e-05, 5.488899999999894e-05, 5.487500000000284e-05, 5.48609999999998e-05, 5.488899999999894e-05, 5.488899999999894e-05, 5.487499999999937e-05, 5.488900000000241e-05, 5.48609999999998e-05, 5.4902000000002504e-05, 5.491700000000155e-05, 5.487499999999937e-05, 5.490299999999851e-05, 5.4901999999999035e-05, 5.488899999999894e-05, 5.494500000000069e-05, 5.48609999999998e-05, 5.490299999999851e-05, 5.488899999999894e-05, 5.490299999999851e-05, 5.488899999999894e-05, 5.484700000000023e-05, 5.487499999999937e-05, 5.488900000000241e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.490300000000198e-05, 5.48609999999998e-05, 5.484700000000023e-05, 5.488899999999894e-05, 5.490300000000198e-05, 5.491700000000155e-05, 5.488899999999894e-05, 5.490299999999851e-05, 5.490300000000198e-05, 5.4901999999999035e-05, 5.484700000000023e-05, 5.487500000000284e-05, 5.487499999999937e-05, 5.490300000000198e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.491699999999808e-05]</msg>
<status status="PASS" starttime="20201112 12:43:10.751" endtime="20201112 12:43:10.758"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.746" endtime="20201112 12:43:10.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.761" endtime="20201112 12:43:10.762"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:10.764" endtime="20201112 12:43:10.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.763" endtime="20201112 12:43:10.784"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.759" endtime="20201112 12:43:10.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.390" endtime="20201112 12:43:10.785"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.390" endtime="20201112 12:43:10.785"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.794" endtime="20201112 12:43:10.809"></status>
</kw>
<msg timestamp="20201112 12:43:10.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.792" endtime="20201112 12:43:10.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:10.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:10.811" endtime="20201112 12:43:10.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.813" endtime="20201112 12:43:10.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.790" endtime="20201112 12:43:10.815"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.788" endtime="20201112 12:43:10.816"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:10.822" endtime="20201112 12:43:11.109"></status>
</kw>
<msg timestamp="20201112 12:43:11.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:10.821" endtime="20201112 12:43:11.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021471681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021532236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.113" endtime="20201112 12:43:11.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.121" endtime="20201112 12:43:11.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.818" endtime="20201112 12:43:11.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.816" endtime="20201112 12:43:11.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.128" level="INFO">${RESULT} = [{'time': 0.021532236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.055500000000033e-05, 'source_diff': 6.055500000000033e-05}, {'time': 0.021617389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:11.124" endtime="20201112 12:43:11.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.142" level="INFO">${ACCURACY} = {'time': [0.021532236, 0.021617389, 0.021691764, 0.021770889, 0.021840292, 0.021914986, 0.021991875, 0.022079403, 0.022149431, 0.022237903, 0.022318569, 0.022390778, 0.022468944, 0.022542486, 0.022613...</msg>
<status status="PASS" starttime="20201112 12:43:11.129" endtime="20201112 12:43:11.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.147" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.146" endtime="20201112 12:43:11.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.149" level="INFO">VALUE: [6.055500000000033e-05, 5.993099999999918e-05, 5.487499999999937e-05, 5.993100000000265e-05, 5.488900000000241e-05, 5.488900000000241e-05, 5.487499999999937e-05, 5.991699999999961e-05, 5.488900000000241e-05, 5.993099999999918e-05, 5.9943999999999276e-05, 5.490299999999851e-05, 5.984700000000176e-05, 5.9957999999998846e-05, 5.491700000000155e-05, 5.488899999999894e-05, 5.488900000000241e-05, 5.9929999999999706e-05, 5.991699999999961e-05, 5.9957999999998846e-05, 5.9902000000000566e-05, 5.986100000000133e-05, 5.993100000000265e-05, 5.990300000000004e-05, 5.9957999999998846e-05, 5.9958000000002315e-05, 5.4972000000000354e-05, 5.491700000000155e-05, 5.488900000000241e-05, 5.9929999999999706e-05, 5.988900000000047e-05, 5.9943999999999276e-05, 5.993099999999918e-05, 5.991699999999961e-05, 6.0014000000000595e-05, 5.9929999999999706e-05, 5.483300000000066e-05, 5.993099999999918e-05, 5.988900000000047e-05, 5.994500000000222e-05, 5.487499999999937e-05, 5.9943999999999276e-05, 5.993100000000265e-05, 5.991699999999961e-05, 5.9943999999999276e-05, 5.993099999999918e-05, 5.487500000000284e-05, 5.490299999999851e-05, 5.993099999999918e-05, 5.9929999999999706e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.148" endtime="20201112 12:43:11.150"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.143" endtime="20201112 12:43:11.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.153" endtime="20201112 12:43:11.154"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.156" endtime="20201112 12:43:11.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.155" endtime="20201112 12:43:11.176"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.151" endtime="20201112 12:43:11.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.786" endtime="20201112 12:43:11.177"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:10.786" endtime="20201112 12:43:11.177"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.185" endtime="20201112 12:43:11.201"></status>
</kw>
<msg timestamp="20201112 12:43:11.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.184" endtime="20201112 12:43:11.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.203" endtime="20201112 12:43:11.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.205" endtime="20201112 12:43:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.181" endtime="20201112 12:43:11.207"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.179" endtime="20201112 12:43:11.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.214" endtime="20201112 12:43:11.501"></status>
</kw>
<msg timestamp="20201112 12:43:11.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.213" endtime="20201112 12:43:11.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021566611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021627153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.505" endtime="20201112 12:43:11.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.514" endtime="20201112 12:43:11.515"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.210" endtime="20201112 12:43:11.516"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.208" endtime="20201112 12:43:11.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.520" level="INFO">${RESULT} = [{'time': 0.021627153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0542000000000235e-05, 'source_diff': 6.0542000000000235e-05}, {'time': 0.021705806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:11.517" endtime="20201112 12:43:11.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.533" level="INFO">${ACCURACY} = {'time': [0.021627153, 0.021705806, 0.021794819, 0.021873014, 0.021945875, 0.022022181, 0.022106278, 0.022194403, 0.022275083, 0.022366639, 0.022447306, 0.022535472, 0.022620181, 0.022705528, 0.022782...</msg>
<status status="PASS" starttime="20201112 12:43:11.521" endtime="20201112 12:43:11.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.538" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.537" endtime="20201112 12:43:11.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.540" level="INFO">VALUE: [6.0542000000000235e-05, 6.0028000000000165e-05, 5.9902000000000566e-05, 5.993099999999918e-05, 5.991699999999961e-05, 5.993099999999918e-05, 5.994499999999875e-05, 5.990300000000004e-05, 5.9916000000000136e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.9929999999999706e-05, 5.991699999999961e-05, 5.993099999999918e-05, 5.994499999999875e-05, 5.991699999999961e-05, 5.991699999999961e-05, 5.991699999999961e-05, 5.9929999999999706e-05, 5.997300000000136e-05, 5.9971999999998415e-05, 5.993099999999918e-05, 5.993100000000265e-05, 5.9972000000001885e-05, 5.9902000000000566e-05, 5.9930000000003175e-05, 5.991699999999961e-05, 5.9929999999999706e-05, 5.9929999999999706e-05, 5.9930000000003175e-05, 5.991699999999961e-05, 5.9930000000003175e-05, 5.991699999999961e-05, 5.990300000000004e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 5.994499999999875e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 5.994500000000222e-05, 5.993100000000265e-05, 5.9929999999999706e-05, 5.988900000000047e-05, 5.986100000000133e-05, 5.9916000000000136e-05, 5.993099999999918e-05, 5.990300000000004e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 5.988900000000047e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.539" endtime="20201112 12:43:11.541"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.534" endtime="20201112 12:43:11.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.544" endtime="20201112 12:43:11.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.547" endtime="20201112 12:43:11.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.546" endtime="20201112 12:43:11.567"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.542" endtime="20201112 12:43:11.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.178" endtime="20201112 12:43:11.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.177" endtime="20201112 12:43:11.568"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.577" endtime="20201112 12:43:11.592"></status>
</kw>
<msg timestamp="20201112 12:43:11.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.575" endtime="20201112 12:43:11.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.594" endtime="20201112 12:43:11.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.596" endtime="20201112 12:43:11.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.572" endtime="20201112 12:43:11.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.570" endtime="20201112 12:43:11.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.605" endtime="20201112 12:43:11.892"></status>
</kw>
<msg timestamp="20201112 12:43:11.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02153575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021596292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:11.604" endtime="20201112 12:43:11.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02153575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021596292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:11.897" endtime="20201112 12:43:11.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.905" endtime="20201112 12:43:11.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.601" endtime="20201112 12:43:11.907"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.599" endtime="20201112 12:43:11.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:11.911" level="INFO">${RESULT} = [{'time': 0.021596292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0542000000000235e-05, 'source_diff': 6.0542000000000235e-05}, {'time': 0.021668694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:11.908" endtime="20201112 12:43:11.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:11.925" level="INFO">${ACCURACY} = {'time': [0.021596292, 0.021668694, 0.021744389, 0.021821333, 0.021901069, 0.021974569, 0.022059611, 0.022136611, 0.022209431, 0.022291042, 0.022374528, 0.022464861, 0.022552403, 0.022628403, 0.022714...</msg>
<status status="PASS" starttime="20201112 12:43:11.912" endtime="20201112 12:43:11.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.929" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201112 12:43:11.928" endtime="20201112 12:43:11.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.931" level="INFO">VALUE: [6.0542000000000235e-05, 5.9999999999997555e-05, 5.994499999999875e-05, 5.9943999999999276e-05, 5.9929999999999706e-05, 5.984699999999829e-05, 5.990300000000004e-05, 5.9972000000001885e-05, 5.993100000000265e-05, 5.993099999999918e-05, 5.994500000000222e-05, 5.991699999999961e-05, 5.994499999999875e-05, 5.993099999999918e-05, 5.9971999999998415e-05, 5.993100000000265e-05, 5.994500000000222e-05, 5.991699999999961e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 5.9971999999998415e-05, 5.993099999999918e-05, 5.994499999999875e-05, 5.993100000000265e-05, 5.993099999999918e-05, 5.9929999999999706e-05, 5.994499999999875e-05, 5.993099999999918e-05, 5.998700000000093e-05, 5.993099999999918e-05, 5.990300000000004e-05, 5.9943999999999276e-05, 5.9916000000000136e-05, 5.991699999999961e-05, 5.991699999999961e-05, 5.9916000000000136e-05, 5.9943999999999276e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.9971999999998415e-05, 5.9929999999999706e-05, 5.993099999999918e-05, 5.991699999999961e-05, 5.997299999999789e-05, 5.9929999999999706e-05, 5.9916000000000136e-05, 5.9916000000000136e-05, 5.9916000000000136e-05, 5.993099999999918e-05, 5.994500000000222e-05]</msg>
<status status="PASS" starttime="20201112 12:43:11.930" endtime="20201112 12:43:11.932"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.925" endtime="20201112 12:43:11.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.935" endtime="20201112 12:43:11.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:11.938" endtime="20201112 12:43:11.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.937" endtime="20201112 12:43:11.958"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.933" endtime="20201112 12:43:11.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.569" endtime="20201112 12:43:11.959"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.568" endtime="20201112 12:43:11.959"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.968" endtime="20201112 12:43:11.984"></status>
</kw>
<msg timestamp="20201112 12:43:11.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.966" endtime="20201112 12:43:11.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:11.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:11.985" endtime="20201112 12:43:11.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.988" endtime="20201112 12:43:11.989"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.964" endtime="20201112 12:43:11.990"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.962" endtime="20201112 12:43:11.990"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:11.996" endtime="20201112 12:43:12.282"></status>
</kw>
<msg timestamp="20201112 12:43:12.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:11.995" endtime="20201112 12:43:12.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021561792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021622333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.287" endtime="20201112 12:43:12.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.295" endtime="20201112 12:43:12.296"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.992" endtime="20201112 12:43:12.297"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.991" endtime="20201112 12:43:12.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.301" level="INFO">${RESULT} = [{'time': 0.021622333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.054100000000076e-05, 'source_diff': 6.054100000000076e-05}, {'time': 0.021699111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:12.298" endtime="20201112 12:43:12.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.315" level="INFO">${ACCURACY} = {'time': [0.021622333, 0.021699111, 0.021770972, 0.021851653, 0.021927347, 0.022002153, 0.022075014, 0.022162542, 0.022246319, 0.022329194, 0.022410167, 0.02248275, 0.022573986, 0.022645889, 0.0227271...</msg>
<status status="PASS" starttime="20201112 12:43:12.302" endtime="20201112 12:43:12.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.319" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.318" endtime="20201112 12:43:12.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.321" level="INFO">VALUE: [6.054100000000076e-05, 6.0014000000000595e-05, 5.98750000000009e-05, 5.993099999999918e-05, 5.9929999999999706e-05, 5.9971999999998415e-05, 5.994499999999875e-05, 5.993099999999918e-05, 5.9929999999999706e-05, 5.9888000000000996e-05, 5.994500000000222e-05, 5.991699999999961e-05, 5.986100000000133e-05, 5.994499999999875e-05, 5.993099999999918e-05, 5.9916000000000136e-05, 5.9944000000002745e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.991699999999961e-05, 5.9943999999999276e-05, 5.9916000000000136e-05, 5.988900000000047e-05, 5.994499999999875e-05, 5.9929999999999706e-05, 5.993099999999918e-05, 5.9972000000001885e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.9958000000002315e-05, 5.993100000000265e-05, 5.9943999999999276e-05, 5.9888999999997e-05, 5.9929999999999706e-05, 5.9916000000000136e-05, 5.990300000000004e-05, 5.9929999999999706e-05, 5.9943999999999276e-05, 5.994499999999875e-05, 5.9943999999999276e-05, 5.9929999999999706e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 6.0014000000000595e-05, 5.9929999999999706e-05, 5.9957999999998846e-05, 5.9943999999999276e-05, 5.9943999999999276e-05, 5.993099999999918e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.320" endtime="20201112 12:43:12.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.315" endtime="20201112 12:43:12.323"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.325" endtime="20201112 12:43:12.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.328" endtime="20201112 12:43:12.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.327" endtime="20201112 12:43:12.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.323" endtime="20201112 12:43:12.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.960" endtime="20201112 12:43:12.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:11.960" endtime="20201112 12:43:12.349"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.358" endtime="20201112 12:43:12.374"></status>
</kw>
<msg timestamp="20201112 12:43:12.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.356" endtime="20201112 12:43:12.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.375" endtime="20201112 12:43:12.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.378" endtime="20201112 12:43:12.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.354" endtime="20201112 12:43:12.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.352" endtime="20201112 12:43:12.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.386" endtime="20201112 12:43:12.672"></status>
</kw>
<msg timestamp="20201112 12:43:12.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.385" endtime="20201112 12:43:12.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021559514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021620042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.677" endtime="20201112 12:43:12.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.685" endtime="20201112 12:43:12.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.382" endtime="20201112 12:43:12.687"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.381" endtime="20201112 12:43:12.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:12.692" level="INFO">${RESULT} = [{'time': 0.021620042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0528000000000665e-05, 'source_diff': 6.0528000000000665e-05}, {'time': 0.021695236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:12.688" endtime="20201112 12:43:12.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:12.706" level="INFO">${ACCURACY} = {'time': [0.021620042, 0.021695236, 0.021782764, 0.021867181, 0.021948819, 0.0220385, 0.022115431, 0.022201708, 0.022286431, 0.022373042, 0.022451514, 0.022538792, 0.022616625, 0.022699764, 0.02278013...</msg>
<status status="PASS" starttime="20201112 12:43:12.693" endtime="20201112 12:43:12.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.711" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201112 12:43:12.710" endtime="20201112 12:43:12.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.713" level="INFO">VALUE: [6.0528000000000665e-05, 6.0000000000001025e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.9958000000002315e-05, 5.990300000000004e-05, 5.991700000000308e-05, 5.9929999999999706e-05, 5.993099999999918e-05, 5.994499999999875e-05, 5.991699999999961e-05, 5.997299999999789e-05, 5.9958000000002315e-05, 5.991699999999961e-05, 5.993100000000265e-05, 5.993099999999918e-05, 5.991699999999961e-05, 5.993099999999918e-05, 5.990300000000004e-05, 6.0000000000001025e-05, 5.991700000000308e-05, 6.0000000000001025e-05, 6.0000000000001025e-05, 5.995899999999832e-05, 5.9929999999999706e-05, 5.9943999999999276e-05, 5.986100000000133e-05, 5.994500000000222e-05, 5.993099999999918e-05, 5.9916000000000136e-05, 5.9943999999999276e-05, 5.9929999999999706e-05, 5.9902000000000566e-05, 5.9929999999999706e-05, 5.9888999999997e-05, 5.9957999999998846e-05, 5.9929999999999706e-05, 5.993099999999918e-05, 5.993099999999918e-05, 5.9943999999999276e-05, 5.994500000000222e-05, 5.993099999999918e-05, 5.993100000000265e-05, 5.9957999999998846e-05, 5.9958000000002315e-05, 5.9958000000002315e-05, 5.994500000000222e-05, 5.993099999999918e-05, 5.9944000000002745e-05, 5.9929999999999706e-05]</msg>
<status status="PASS" starttime="20201112 12:43:12.712" endtime="20201112 12:43:12.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.707" endtime="20201112 12:43:12.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.717" endtime="20201112 12:43:12.718"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:12.720" endtime="20201112 12:43:12.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.719" endtime="20201112 12:43:12.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.715" endtime="20201112 12:43:12.740"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.350" endtime="20201112 12:43:12.741"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.350" endtime="20201112 12:43:12.741"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.749" endtime="20201112 12:43:12.765"></status>
</kw>
<msg timestamp="20201112 12:43:12.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.748" endtime="20201112 12:43:12.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:12.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:12.767" endtime="20201112 12:43:12.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.769" endtime="20201112 12:43:12.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.745" endtime="20201112 12:43:12.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.743" endtime="20201112 12:43:12.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:12.778" endtime="20201112 12:43:13.064"></status>
</kw>
<msg timestamp="20201112 12:43:13.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:12.777" endtime="20201112 12:43:13.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021547792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021613375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.069" endtime="20201112 12:43:13.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.077" endtime="20201112 12:43:13.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.774" endtime="20201112 12:43:13.079"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.772" endtime="20201112 12:43:13.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.083" level="INFO">${RESULT} = [{'time': 0.021613375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5583000000001e-05, 'source_diff': 6.5583000000001e-05}, {'time': 0.021703208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201112 12:43:13.080" endtime="20201112 12:43:13.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.097" level="INFO">${ACCURACY} = {'time': [0.021613375, 0.021703208, 0.02178175, 0.021869, 0.021955278, 0.022038778, 0.022130028, 0.022209444, 0.022295403, 0.022390458, 0.022471528, 0.022560333, 0.022639139, 0.022711986, 0.022803556,...</msg>
<status status="PASS" starttime="20201112 12:43:13.084" endtime="20201112 12:43:13.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.101" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.100" endtime="20201112 12:43:13.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.103" level="INFO">VALUE: [6.5583000000001e-05, 6.0000000000001025e-05, 6.495800000000038e-05, 5.9971999999998415e-05, 5.995900000000179e-05, 6.498599999999952e-05, 5.993099999999918e-05, 5.9929999999999706e-05, 5.991699999999961e-05, 6.497199999999995e-05, 6.497199999999995e-05, 5.9971999999998415e-05, 5.9971999999998415e-05, 5.9929999999999706e-05, 5.993099999999918e-05, 5.9916000000000136e-05, 5.993099999999918e-05, 5.98750000000009e-05, 6.498600000000299e-05, 6.495800000000038e-05, 6.497299999999942e-05, 5.993100000000265e-05, 5.9929999999999706e-05, 5.9929999999999706e-05, 6.493000000000124e-05, 6.497199999999995e-05, 6.497199999999995e-05, 6.495800000000038e-05, 6.498599999999952e-05, 5.991699999999961e-05, 6.498599999999952e-05, 6.501399999999866e-05, 5.990300000000004e-05, 5.997300000000136e-05, 6.498599999999952e-05, 5.991699999999961e-05, 6.494500000000028e-05, 6.495800000000038e-05, 6.495800000000038e-05, 5.9929999999999706e-05, 6.498599999999952e-05, 6.497300000000289e-05, 6.498599999999952e-05, 5.993099999999918e-05, 5.9901999999997096e-05, 6.497199999999995e-05, 6.502700000000222e-05, 6.498599999999952e-05, 5.9929999999999706e-05, 6.495899999999985e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.102" endtime="20201112 12:43:13.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.097" endtime="20201112 12:43:13.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.107" endtime="20201112 12:43:13.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.110" endtime="20201112 12:43:13.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.109" endtime="20201112 12:43:13.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.105" endtime="20201112 12:43:13.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.742" endtime="20201112 12:43:13.131"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:12.741" endtime="20201112 12:43:13.131"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.140" endtime="20201112 12:43:13.156"></status>
</kw>
<msg timestamp="20201112 12:43:13.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.138" endtime="20201112 12:43:13.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.157" endtime="20201112 12:43:13.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.160" endtime="20201112 12:43:13.161"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.136" endtime="20201112 12:43:13.162"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.134" endtime="20201112 12:43:13.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.169" endtime="20201112 12:43:13.454"></status>
</kw>
<msg timestamp="20201112 12:43:13.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.167" endtime="20201112 12:43:13.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021614361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021679986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.459" endtime="20201112 12:43:13.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.467" endtime="20201112 12:43:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.164" endtime="20201112 12:43:13.469"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.163" endtime="20201112 12:43:13.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.474" level="INFO">${RESULT} = [{'time': 0.021679986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.562499999999971e-05, 'source_diff': 6.562499999999971e-05}, {'time': 0.021762417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:13.470" endtime="20201112 12:43:13.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.487" level="INFO">${ACCURACY} = {'time': [0.021679986, 0.021762417, 0.021844389, 0.021925778, 0.022007444, 0.022088181, 0.022179222, 0.022259653, 0.0223435, 0.022422694, 0.022514333, 0.022607528, 0.022702, 0.022790208, 0.022870958, ...</msg>
<status status="PASS" starttime="20201112 12:43:13.475" endtime="20201112 12:43:13.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.491" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.490" endtime="20201112 12:43:13.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.493" level="INFO">VALUE: [6.562499999999971e-05, 6.505600000000084e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.49440000000008e-05, 6.498699999999899e-05, 6.499999999999909e-05, 6.499999999999909e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.497200000000342e-05, 6.499999999999909e-05, 6.49440000000008e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.505600000000084e-05, 6.502699999999875e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.497199999999995e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.500000000000256e-05, 6.499999999999909e-05, 6.50280000000017e-05, 6.495800000000038e-05, 6.499999999999909e-05, 6.505500000000136e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.50280000000017e-05, 6.498699999999899e-05, 6.498599999999952e-05, 6.499999999999909e-05, 6.502799999999823e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.499999999999909e-05, 6.502700000000222e-05, 6.498700000000246e-05, 6.497299999999942e-05, 6.498599999999952e-05, 6.504200000000127e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.492" endtime="20201112 12:43:13.494"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.488" endtime="20201112 12:43:13.495"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.497" endtime="20201112 12:43:13.498"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.500" endtime="20201112 12:43:13.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.499" endtime="20201112 12:43:13.520"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.495" endtime="20201112 12:43:13.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.132" endtime="20201112 12:43:13.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.131" endtime="20201112 12:43:13.521"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.530" endtime="20201112 12:43:13.546"></status>
</kw>
<msg timestamp="20201112 12:43:13.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.528" endtime="20201112 12:43:13.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.548" endtime="20201112 12:43:13.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.550" endtime="20201112 12:43:13.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.526" endtime="20201112 12:43:13.552"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.524" endtime="20201112 12:43:13.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.559" endtime="20201112 12:43:13.846"></status>
</kw>
<msg timestamp="20201112 12:43:13.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.558" endtime="20201112 12:43:13.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021517819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021583444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.850" endtime="20201112 12:43:13.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.859" endtime="20201112 12:43:13.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.555" endtime="20201112 12:43:13.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.553" endtime="20201112 12:43:13.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:13.865" level="INFO">${RESULT} = [{'time': 0.021583444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.562499999999971e-05, 'source_diff': 6.562499999999971e-05}, {'time': 0.021660889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:13.862" endtime="20201112 12:43:13.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:13.878" level="INFO">${ACCURACY} = {'time': [0.021583444, 0.021660889, 0.021748458, 0.021836681, 0.021919611, 0.022010042, 0.02210325, 0.022184375, 0.022276264, 0.02235825, 0.022438694, 0.022518167, 0.022606708, 0.022695597, 0.02277694...</msg>
<status status="PASS" starttime="20201112 12:43:13.866" endtime="20201112 12:43:13.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.883" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201112 12:43:13.882" endtime="20201112 12:43:13.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.885" level="INFO">VALUE: [6.562499999999971e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498699999999899e-05, 6.494399999999734e-05, 6.501400000000213e-05, 6.500000000000256e-05, 6.505600000000084e-05, 6.498599999999952e-05, 6.493100000000071e-05, 6.499999999999909e-05, 6.497299999999942e-05, 6.498599999999952e-05, 6.50280000000017e-05, 6.501299999999918e-05, 6.498599999999952e-05, 6.498699999999899e-05, 6.499999999999909e-05, 6.495899999999985e-05, 6.497299999999942e-05, 6.499999999999909e-05, 6.498600000000299e-05, 6.498600000000299e-05, 6.498600000000299e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.492999999999777e-05, 6.498600000000299e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.497200000000342e-05, 6.498700000000246e-05, 6.498599999999952e-05, 6.497299999999942e-05, 6.499999999999909e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.497299999999942e-05, 6.491600000000167e-05, 6.495899999999985e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201112 12:43:13.884" endtime="20201112 12:43:13.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.879" endtime="20201112 12:43:13.887"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.889" endtime="20201112 12:43:13.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:13.892" endtime="20201112 12:43:13.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.891" endtime="20201112 12:43:13.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.887" endtime="20201112 12:43:13.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.522" endtime="20201112 12:43:13.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.522" endtime="20201112 12:43:13.914"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.922" endtime="20201112 12:43:13.938"></status>
</kw>
<msg timestamp="20201112 12:43:13.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.921" endtime="20201112 12:43:13.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:13.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:13.940" endtime="20201112 12:43:13.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.942" endtime="20201112 12:43:13.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.918" endtime="20201112 12:43:13.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.916" endtime="20201112 12:43:13.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:13.951" endtime="20201112 12:43:14.239"></status>
</kw>
<msg timestamp="20201112 12:43:14.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:13.950" endtime="20201112 12:43:14.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022237514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022303056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.243" endtime="20201112 12:43:14.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.252" endtime="20201112 12:43:14.253"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.947" endtime="20201112 12:43:14.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.945" endtime="20201112 12:43:14.254"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.258" level="INFO">${RESULT} = [{'time': 0.022303056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.554200000000177e-05, 'source_diff': 6.554200000000177e-05}, {'time': 0.022397306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.255" endtime="20201112 12:43:14.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.273" level="INFO">${ACCURACY} = {'time': [0.022303056, 0.022397306, 0.022485208, 0.022573458, 0.022662903, 0.022740486, 0.022825569, 0.022917889, 0.023006347, 0.023090514, 0.023183736, 0.023262889, 0.023357931, 0.0234365, 0.02351847...</msg>
<status status="PASS" starttime="20201112 12:43:14.259" endtime="20201112 12:43:14.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.277" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.276" endtime="20201112 12:43:14.278"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.280" level="INFO">VALUE: [6.554200000000177e-05, 6.502799999999823e-05, 6.493000000000124e-05, 6.498599999999952e-05, 6.498600000000299e-05, 6.495800000000038e-05, 6.495800000000038e-05, 6.501399999999866e-05, 6.497199999999995e-05, 6.495800000000038e-05, 6.499999999999909e-05, 6.495799999999691e-05, 6.497299999999942e-05, 6.493100000000071e-05, 6.497199999999995e-05, 6.495800000000038e-05, 6.500000000000256e-05, 6.493100000000071e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.499999999999909e-05, 6.501300000000265e-05, 6.495899999999985e-05, 6.495899999999985e-05, 6.497199999999995e-05, 6.497199999999995e-05, 6.497199999999995e-05, 6.49440000000008e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.497199999999995e-05, 6.501400000000213e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.497199999999995e-05, 6.499999999999909e-05, 6.497199999999995e-05, 6.498599999999952e-05, 6.493000000000124e-05, 6.497199999999995e-05, 6.50280000000017e-05, 6.495800000000038e-05, 6.498599999999952e-05, 6.495899999999985e-05, 6.495800000000038e-05]</msg>
<status status="PASS" starttime="20201112 12:43:14.278" endtime="20201112 12:43:14.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.274" endtime="20201112 12:43:14.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.283" endtime="20201112 12:43:14.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.287" endtime="20201112 12:43:14.306"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.285" endtime="20201112 12:43:14.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.282" endtime="20201112 12:43:14.307"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.915" endtime="20201112 12:43:14.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:13.914" endtime="20201112 12:43:14.308"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.316" endtime="20201112 12:43:14.335"></status>
</kw>
<msg timestamp="20201112 12:43:14.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.315" endtime="20201112 12:43:14.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.337" endtime="20201112 12:43:14.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.339" endtime="20201112 12:43:14.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.312" endtime="20201112 12:43:14.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.310" endtime="20201112 12:43:14.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.348" endtime="20201112 12:43:14.635"></status>
</kw>
<msg timestamp="20201112 12:43:14.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.347" endtime="20201112 12:43:14.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022051944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022172569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.639" endtime="20201112 12:43:14.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.647" endtime="20201112 12:43:14.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.344" endtime="20201112 12:43:14.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.342" endtime="20201112 12:43:14.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:14.654" level="INFO">${RESULT} = [{'time': 0.022172569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001206249999999992, 'source_diff': 0.0001206249999999992}, {'time': 0.022322917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:14.651" endtime="20201112 12:43:14.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:14.667" level="INFO">${ACCURACY} = {'time': [0.022172569, 0.022322917, 0.022458361, 0.022594903, 0.022731597, 0.022874056, 0.023007583, 0.023149111, 0.02329375, 0.023427347, 0.023561819, 0.023699292, 0.023834847, 0.023969403, 0.0241060...</msg>
<status status="PASS" starttime="20201112 12:43:14.655" endtime="20201112 12:43:14.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.671" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201112 12:43:14.670" endtime="20201112 12:43:14.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.673" level="INFO">VALUE: [0.0001206249999999992, 0.000119389000000001, 0.00011979200000000051, 0.00011927800000000044, 0.00011943000000000023, 0.00011930599999999958, 0.0001193050000000001, 0.0001199440000000003, 0.00012023599999999926, 0.000120083, 0.0001197500000000018, 0.00011959800000000201, 0.00011923599999999826, 0.00011980600000000008, 0.0001197500000000018, 0.00011955599999999983, 0.00011936100000000185, 0.00011981900000000018, 0.00011998599999999901, 0.00011979200000000051, 0.00011980600000000008, 0.00011991600000000116, 0.00011979200000000051, 0.00011947200000000241, 0.00011972200000000266, 0.00011947199999999894, 0.00011977800000000094, 0.00011913899999999727, 0.0001198050000000006, 0.00011940300000000056, 0.00011966700000000038, 0.00011997299999999891, 0.00011998599999999901, 0.00011984799999999879, 0.00011936100000000185, 0.00011972299999999866, 0.00011933300000000271, 0.00011970799999999962, 0.00011955599999999983, 0.00011973599999999876, 0.0001197500000000018, 0.00011959700000000253, 0.00011937500000000142, 0.00011937499999999795, 0.00011990300000000106, 0.00011966700000000038, 0.00011963900000000124, 0.00011993000000000073, 0.00011936099999999839, 0.00012024999999999883]</msg>
<status status="PASS" starttime="20201112 12:43:14.672" endtime="20201112 12:43:14.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.668" endtime="20201112 12:43:14.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.677" endtime="20201112 12:43:14.678"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:14.680" endtime="20201112 12:43:14.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.679" endtime="20201112 12:43:14.700"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.675" endtime="20201112 12:43:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.309" endtime="20201112 12:43:14.701"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.308" endtime="20201112 12:43:14.701"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.710" endtime="20201112 12:43:14.729"></status>
</kw>
<msg timestamp="20201112 12:43:14.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.708" endtime="20201112 12:43:14.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:14.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:14.730" endtime="20201112 12:43:14.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.732" endtime="20201112 12:43:14.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.706" endtime="20201112 12:43:14.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.704" endtime="20201112 12:43:14.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:14.741" endtime="20201112 12:43:15.028"></status>
</kw>
<msg timestamp="20201112 12:43:15.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:14.740" endtime="20201112 12:43:15.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021560264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021681181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.033" endtime="20201112 12:43:15.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.041" endtime="20201112 12:43:15.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.737" endtime="20201112 12:43:15.043"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.736" endtime="20201112 12:43:15.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.047" level="INFO">${RESULT} = [{'time': 0.021681181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012091700000000163, 'source_diff': 0.00012091700000000163}, {'time': 0.021832333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:15.044" endtime="20201112 12:43:15.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.060" level="INFO">${ACCURACY} = {'time': [0.021681181, 0.021832333, 0.021978, 0.022120472, 0.022264958, 0.022403514, 0.022556097, 0.022691625, 0.022835153, 0.022975792, 0.023117278, 0.023260736, 0.023411347, 0.023546833, 0.023682333...</msg>
<status status="PASS" starttime="20201112 12:43:15.048" endtime="20201112 12:43:15.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.065" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.064" endtime="20201112 12:43:15.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.067" level="INFO">VALUE: [0.00012091700000000163, 0.00012049999999999908, 0.00012030600000000058, 0.00012023599999999926, 0.00012069400000000105, 0.00012066699999999791, 0.000120389000000002, 0.00012079200000000151, 0.00012101399999999915, 0.00012029199999999754, 0.00012079200000000151, 0.00012029200000000101, 0.00012029099999999807, 0.00012041599999999819, 0.00012101399999999915, 0.00012073599999999976, 0.00012079100000000204, 0.00012081900000000118, 0.00012082000000000065, 0.00012066599999999844, 0.00012036099999999939, 0.00012105500000000186, 0.00012055500000000136, 0.00012029200000000101, 0.00012116699999999841, 0.00012016700000000088, 0.0001204440000000008, 0.00012095900000000034, 0.00012047199999999994, 0.00012022199999999969, 0.00012122200000000069, 0.0001207500000000028, 0.00012048599999999951, 0.00012100000000000305, 0.00012033300000000025, 0.00012073599999999976, 0.00012047199999999994, 0.00012036099999999939, 0.00012102799999999872, 0.00012052800000000169, 0.00012036099999999939, 0.00012104200000000176, 0.00012069499999999705, 0.00012106899999999796, 0.00012051399999999865, 0.0001210700000000009, 0.00012068099999999748, 0.00012083399999999675, 0.00012068100000000095, 0.00012048599999999951]</msg>
<status status="PASS" starttime="20201112 12:43:15.066" endtime="20201112 12:43:15.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.061" endtime="20201112 12:43:15.068"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.070" endtime="20201112 12:43:15.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.074" endtime="20201112 12:43:15.093"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.072" endtime="20201112 12:43:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.069" endtime="20201112 12:43:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.702" endtime="20201112 12:43:15.094"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:14.701" endtime="20201112 12:43:15.095"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.103" endtime="20201112 12:43:15.122"></status>
</kw>
<msg timestamp="20201112 12:43:15.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.102" endtime="20201112 12:43:15.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.124" endtime="20201112 12:43:15.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.126" endtime="20201112 12:43:15.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.099" endtime="20201112 12:43:15.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.097" endtime="20201112 12:43:15.129"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.135" endtime="20201112 12:43:15.421"></status>
</kw>
<msg timestamp="20201112 12:43:15.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021656528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.133" endtime="20201112 12:43:15.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021534597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021656528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.425" endtime="20201112 12:43:15.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.433" endtime="20201112 12:43:15.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.131" endtime="20201112 12:43:15.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.129" endtime="20201112 12:43:15.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.440" level="INFO">${RESULT} = [{'time': 0.021656528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001219310000000022, 'source_diff': 0.0001219310000000022}, {'time': 0.021796806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:15.437" endtime="20201112 12:43:15.440"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.453" level="INFO">${ACCURACY} = {'time': [0.021656528, 0.021796806, 0.021935486, 0.022087875, 0.022230417, 0.022381, 0.022518486, 0.022655083, 0.022796611, 0.022946208, 0.023093722, 0.023232264, 0.023366861, 0.023519444, 0.023659958...</msg>
<status status="PASS" starttime="20201112 12:43:15.441" endtime="20201112 12:43:15.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.457" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.456" endtime="20201112 12:43:15.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.460" level="INFO">VALUE: [0.0001219310000000022, 0.00012209799999999757, 0.00012141700000000213, 0.00012175000000000033, 0.00012154199999999879, 0.00012148600000000051, 0.00012115300000000231, 0.00012151399999999965, 0.00012151399999999965, 0.00012175000000000033, 0.00012215299999999985, 0.00012193099999999873, 0.00012138899999999953, 0.0001213050000000021, 0.00012137499999999996, 0.00012193099999999873, 0.0001216250000000002, 0.00012154199999999879, 0.00012191699999999916, 0.00012180599999999861, 0.00012184699999999785, 0.00012205600000000233, 0.00012197299999999744, 0.00012168099999999848, 0.00012118099999999798, 0.00012191699999999916, 0.00012197200000000144, 0.00012158299999999803, 0.00012136100000000039, 0.0001215700000000014, 0.00012202799999999972, 0.00012215299999999985, 0.00012124999999999983, 0.00012180499999999914, 0.00012168000000000248, 0.00012205600000000233, 0.00012150000000000008, 0.0001212769999999995, 0.00012130499999999864, 0.00012175000000000033, 0.00012130599999999811, 0.00012142999999999876, 0.00012183400000000122, 0.00012177799999999947, 0.0001221250000000007, 0.00012129199999999854, 0.00012170800000000162, 0.00012137499999999996, 0.0001212639999999994, 0.00012159700000000107]</msg>
<status status="PASS" starttime="20201112 12:43:15.458" endtime="20201112 12:43:15.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.454" endtime="20201112 12:43:15.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.463" endtime="20201112 12:43:15.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.467" endtime="20201112 12:43:15.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.465" endtime="20201112 12:43:15.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.462" endtime="20201112 12:43:15.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.096" endtime="20201112 12:43:15.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.095" endtime="20201112 12:43:15.487"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.496" endtime="20201112 12:43:15.515"></status>
</kw>
<msg timestamp="20201112 12:43:15.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.494" endtime="20201112 12:43:15.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.517" endtime="20201112 12:43:15.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.519" endtime="20201112 12:43:15.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.492" endtime="20201112 12:43:15.521"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.490" endtime="20201112 12:43:15.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.528" endtime="20201112 12:43:15.814"></status>
</kw>
<msg timestamp="20201112 12:43:15.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.526" endtime="20201112 12:43:15.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021659569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021783194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.818" endtime="20201112 12:43:15.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.826" endtime="20201112 12:43:15.827"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.524" endtime="20201112 12:43:15.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.522" endtime="20201112 12:43:15.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:15.832" level="INFO">${RESULT} = [{'time': 0.021783194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012362499999999874, 'source_diff': 0.00012362499999999874}, {'time': 0.021919458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:15.829" endtime="20201112 12:43:15.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:15.847" level="INFO">${ACCURACY} = {'time': [0.021783194, 0.021919458, 0.022067125, 0.022203611, 0.022348069, 0.022495625, 0.022642181, 0.022787639, 0.022932181, 0.023075833, 0.023222292, 0.023363819, 0.023510389, 0.023663806, 0.023818...</msg>
<status status="PASS" starttime="20201112 12:43:15.833" endtime="20201112 12:43:15.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.851" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201112 12:43:15.850" endtime="20201112 12:43:15.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.853" level="INFO">VALUE: [0.00012362499999999874, 0.00012305500000000039, 0.0001226250000000012, 0.00012261100000000164, 0.00012223600000000126, 0.00012313900000000128, 0.0001231120000000016, 0.0001229169999999967, 0.00012255599999999936, 0.00012266600000000044, 0.00012297299999999844, 0.0001224860000000015, 0.00012312499999999824, 0.00012302800000000072, 0.00012272199999999872, 0.0001229579999999994, 0.0001229449999999993, 0.00012231999999999868, 0.0001227229999999982, 0.00012236200000000086, 0.00012275000000000133, 0.00012293000000000026, 0.00012236100000000139, 0.00012215299999999985, 0.00012222199999999822, 0.00012222300000000116, 0.00012245900000000184, 0.0001230420000000003, 0.00012309800000000204, 0.00012270899999999862, 0.00012234699999999835, 0.00012309799999999857, 0.00012308299999999953, 0.00012227799999999997, 0.00012265300000000035, 0.0001230420000000003, 0.00012311099999999867, 0.00012308299999999953, 0.00012295800000000287, 0.00012250000000000108, 0.0001229579999999994, 0.00012311100000000214, 0.00012236100000000139, 0.00012255600000000283, 0.00012309700000000257, 0.00012240200000000062, 0.00012286200000000136, 0.00012312499999999824, 0.00012245899999999837, 0.0001225969999999986]</msg>
<status status="PASS" starttime="20201112 12:43:15.852" endtime="20201112 12:43:15.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.848" endtime="20201112 12:43:15.860"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.862" endtime="20201112 12:43:15.863"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:15.865" endtime="20201112 12:43:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.864" endtime="20201112 12:43:15.885"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.860" endtime="20201112 12:43:15.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.488" endtime="20201112 12:43:15.886"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.488" endtime="20201112 12:43:15.886"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.895" endtime="20201112 12:43:15.914"></status>
</kw>
<msg timestamp="20201112 12:43:15.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.893" endtime="20201112 12:43:15.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:15.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:15.915" endtime="20201112 12:43:15.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.918" endtime="20201112 12:43:15.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.891" endtime="20201112 12:43:15.920"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.889" endtime="20201112 12:43:15.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:15.927" endtime="20201112 12:43:16.215"></status>
</kw>
<msg timestamp="20201112 12:43:16.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:15.925" endtime="20201112 12:43:16.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021597792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.219" endtime="20201112 12:43:16.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.227" endtime="20201112 12:43:16.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.923" endtime="20201112 12:43:16.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.921" endtime="20201112 12:43:16.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.233" level="INFO">${RESULT} = [{'time': 0.021721583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001237909999999981, 'source_diff': 0.0001237909999999981}, {'time': 0.021864, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201112 12:43:16.230" endtime="20201112 12:43:16.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.246" level="INFO">${ACCURACY} = {'time': [0.021721583, 0.021864, 0.022010403, 0.022159931, 0.022313486, 0.022458931, 0.022601472, 0.022744167, 0.022896514, 0.023044056, 0.023196625, 0.023348083, 0.023500681, 0.023652111, 0.023804778...</msg>
<status status="PASS" starttime="20201112 12:43:16.234" endtime="20201112 12:43:16.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.251" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.250" endtime="20201112 12:43:16.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.253" level="INFO">VALUE: [0.0001237909999999981, 0.0001232640000000014, 0.00012384699999999985, 0.00012386200000000236, 0.00012322199999999922, 0.00012382000000000018, 0.0001234160000000012, 0.00012419500000000055, 0.00012383300000000028, 0.00012373699999999876, 0.00012348599999999904, 0.000123568999999997, 0.00012382000000000018, 0.0001235969999999996, 0.00012355600000000036, 0.00012323600000000226, 0.00012312499999999824, 0.00012352800000000122, 0.00012337499999999849, 0.00012365300000000135, 0.00012352800000000122, 0.00012372199999999972, 0.00012365300000000135, 0.00012354099999999785, 0.00012343100000000023, 0.00012361099999999917, 0.00012372199999999972, 0.00012404199999999782, 0.00012316599999999747, 0.00012316699999999695, 0.00012334799999999882, 0.00012397199999999997, 0.00012329200000000054, 0.0001239450000000003, 0.00012316700000000042, 0.0001232229999999987, 0.00012373600000000276, 0.00012366599999999797, 0.00012377800000000147, 0.00012333299999999978, 0.00012388799999999908, 0.0001231800000000005, 0.00012398699999999901, 0.0001237220000000032, 0.00012416699999999795, 0.0001233619999999984, 0.00012416599999999847, 0.00012384699999999985, 0.00012318099999999998, 0.0001232770000000015]</msg>
<status status="PASS" starttime="20201112 12:43:16.252" endtime="20201112 12:43:16.254"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.247" endtime="20201112 12:43:16.254"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.256" endtime="20201112 12:43:16.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.260" endtime="20201112 12:43:16.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.258" endtime="20201112 12:43:16.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.255" endtime="20201112 12:43:16.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.887" endtime="20201112 12:43:16.280"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:15.887" endtime="20201112 12:43:16.281"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.289" endtime="20201112 12:43:16.308"></status>
</kw>
<msg timestamp="20201112 12:43:16.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.288" endtime="20201112 12:43:16.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.310" endtime="20201112 12:43:16.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.312" endtime="20201112 12:43:16.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.285" endtime="20201112 12:43:16.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.283" endtime="20201112 12:43:16.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.321" endtime="20201112 12:43:16.609"></status>
</kw>
<msg timestamp="20201112 12:43:16.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.320" endtime="20201112 12:43:16.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021623208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.613" endtime="20201112 12:43:16.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.621" endtime="20201112 12:43:16.622"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.317" endtime="20201112 12:43:16.623"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.315" endtime="20201112 12:43:16.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:16.627" level="INFO">${RESULT} = [{'time': 0.021623208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012529100000000307, 'source_diff': 0.00012529100000000307}, {'time': 0.021776417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:16.624" endtime="20201112 12:43:16.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:16.640" level="INFO">${ACCURACY} = {'time': [0.021623208, 0.021776417, 0.021920111, 0.022067569, 0.022211125, 0.022356792, 0.022513167, 0.02266075, 0.022811181, 0.022960639, 0.023116208, 0.023268694, 0.023412306, 0.02355975, 0.02371026...</msg>
<status status="PASS" starttime="20201112 12:43:16.628" endtime="20201112 12:43:16.640"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.644" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201112 12:43:16.643" endtime="20201112 12:43:16.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.647" level="INFO">VALUE: [0.00012529100000000307, 0.00012437499999999949, 0.00012424999999999936, 0.00012430499999999817, 0.00012505600000000186, 0.00012461100000000017, 0.00012416700000000142, 0.00012470800000000115, 0.00012443100000000124, 0.00012411100000000314, 0.0001249299999999988, 0.00012434700000000035, 0.00012511200000000014, 0.00012429200000000154, 0.0001245420000000018, 0.00012484700000000085, 0.00012511100000000067, 0.00012433400000000025, 0.00012447200000000047, 0.00012419500000000055, 0.00012472200000000072, 0.00012473699999999976, 0.00012490299999999913, 0.0001242779999999985, 0.00012504199999999882, 0.00012507000000000143, 0.0001242779999999985, 0.00012495900000000087, 0.0001242359999999998, 0.00012459800000000007, 0.00012441700000000167, 0.0001242359999999998, 0.00012441700000000167, 0.00012456900000000146, 0.00012459699999999713, 0.00012516699999999895, 0.00012494499999999784, 0.00012466700000000192, 0.00012458399999999703, 0.00012484700000000085, 0.00012479199999999857, 0.00012486100000000042, 0.00012462499999999974, 0.00012434699999999688, 0.0001243329999999973, 0.0001244169999999982, 0.00012487499999999999, 0.0001247230000000002, 0.0001245970000000006, 0.00012458299999999756]</msg>
<status status="PASS" starttime="20201112 12:43:16.646" endtime="20201112 12:43:16.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.641" endtime="20201112 12:43:16.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.650" endtime="20201112 12:43:16.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:16.654" endtime="20201112 12:43:16.673"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.652" endtime="20201112 12:43:16.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.649" endtime="20201112 12:43:16.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.282" endtime="20201112 12:43:16.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.281" endtime="20201112 12:43:16.675"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.683" endtime="20201112 12:43:16.702"></status>
</kw>
<msg timestamp="20201112 12:43:16.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.682" endtime="20201112 12:43:16.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:16.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:16.704" endtime="20201112 12:43:16.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.706" endtime="20201112 12:43:16.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.679" endtime="20201112 12:43:16.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.677" endtime="20201112 12:43:16.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:16.715" endtime="20201112 12:43:17.002"></status>
</kw>
<msg timestamp="20201112 12:43:17.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:16.714" endtime="20201112 12:43:17.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021485597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021611833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.006" endtime="20201112 12:43:17.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.014" endtime="20201112 12:43:17.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.711" endtime="20201112 12:43:17.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.709" endtime="20201112 12:43:17.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.020" level="INFO">${RESULT} = [{'time': 0.021611833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001262360000000018, 'source_diff': 0.0001262360000000018}, {'time': 0.021763097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:17.017" endtime="20201112 12:43:17.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.033" level="INFO">${ACCURACY} = {'time': [0.021611833, 0.021763097, 0.021908708, 0.022048208, 0.022186764, 0.022328306, 0.022474986, 0.022628361, 0.022778958, 0.022930389, 0.023079903, 0.023224528, 0.02337, 0.023526583, 0.023675042,...</msg>
<status status="PASS" starttime="20201112 12:43:17.021" endtime="20201112 12:43:17.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.038" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.037" endtime="20201112 12:43:17.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.040" level="INFO">VALUE: [0.0001262360000000018, 0.00012522199999999775, 0.00012615199999999743, 0.00012566599999999997, 0.00012536100000000092, 0.00012584799999999785, 0.00012598599999999807, 0.00012529199999999907, 0.00012523599999999732, 0.00012548599999999757, 0.00012570899999999816, 0.00012611100000000167, 0.0001260559999999994, 0.00012561100000000117, 0.00012530599999999864, 0.0001251389999999998, 0.00012522199999999775, 0.00012593099999999927, 0.00012608299999999906, 0.00012548599999999757, 0.00012527700000000003, 0.0001256390000000003, 0.00012586100000000142, 0.00012559699999999813, 0.00012604199999999982, 0.00012616699999999995, 0.0001259169999999997, 0.00012554199999999932, 0.00012511200000000014, 0.0001259169999999997, 0.00012572200000000172, 0.00012593099999999927, 0.00012616699999999995, 0.00012558300000000203, 0.000126165999999997, 0.00012590300000000013, 0.0001257230000000012, 0.00012555600000000236, 0.00012604199999999982, 0.0001253329999999983, 0.0001259719999999985, 0.00012583400000000175, 0.00012517999999999904, 0.00012580499999999967, 0.00012534699999999788, 0.00012536099999999745, 0.00012566599999999997, 0.00012543099999999877, 0.00012534700000000135, 0.00012573700000000076]</msg>
<status status="PASS" starttime="20201112 12:43:17.039" endtime="20201112 12:43:17.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.034" endtime="20201112 12:43:17.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.044" endtime="20201112 12:43:17.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.047" endtime="20201112 12:43:17.066"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.046" endtime="20201112 12:43:17.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.042" endtime="20201112 12:43:17.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.675" endtime="20201112 12:43:17.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:16.675" endtime="20201112 12:43:17.068"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.076" endtime="20201112 12:43:17.096"></status>
</kw>
<msg timestamp="20201112 12:43:17.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.075" endtime="20201112 12:43:17.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.097" endtime="20201112 12:43:17.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.100" endtime="20201112 12:43:17.101"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.072" endtime="20201112 12:43:17.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.070" endtime="20201112 12:43:17.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.108" endtime="20201112 12:43:17.395"></status>
</kw>
<msg timestamp="20201112 12:43:17.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021691264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.107" endtime="20201112 12:43:17.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021563917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021691264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.400" endtime="20201112 12:43:17.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.408" endtime="20201112 12:43:17.409"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.104" endtime="20201112 12:43:17.410"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.103" endtime="20201112 12:43:17.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.414" level="INFO">${RESULT} = [{'time': 0.021691264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012734699999999988, 'source_diff': 0.00012734699999999988}, {'time': 0.021850597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:17.411" endtime="20201112 12:43:17.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.428" level="INFO">${ACCURACY} = {'time': [0.021691264, 0.021850597, 0.022001042, 0.022143597, 0.022297194, 0.022440653, 0.022595139, 0.022739736, 0.022892181, 0.02303275, 0.023176361, 0.023318889, 0.023466361, 0.023612944, 0.0237614...</msg>
<status status="PASS" starttime="20201112 12:43:17.415" endtime="20201112 12:43:17.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.433" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.432" endtime="20201112 12:43:17.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.435" level="INFO">VALUE: [0.00012734699999999988, 0.0001271109999999992, 0.00012634799999999835, 0.00012622200000000222, 0.00012630500000000017, 0.00012684700000000285, 0.00012695799999999993, 0.00012672199999999925, 0.00012615300000000038, 0.00012702800000000125, 0.0001269719999999995, 0.0001268199999999997, 0.00012648600000000204, 0.00012684699999999938, 0.00012622199999999875, 0.00012672199999999925, 0.00012676400000000143, 0.00012627699999999756, 0.00012704199999999735, 0.00012691600000000122, 0.00012615300000000038, 0.0001262780000000005, 0.00012654100000000085, 0.0001263329999999993, 0.00012662500000000174, 0.000126471999999999, 0.00012704100000000135, 0.00012645900000000238, 0.00012640299999999716, 0.00012695799999999993, 0.00012680600000000014, 0.00012686099999999895, 0.00012647200000000247, 0.00012666700000000045, 0.00012683399999999928, 0.0001269170000000007, 0.00012709699999999963, 0.00012704200000000082, 0.00012615300000000038, 0.0001268329999999998, 0.00012672199999999925, 0.0001268329999999998, 0.00012623599999999832, 0.00012659699999999913, 0.00012709699999999963, 0.00012634799999999835, 0.00012648600000000204, 0.00012659699999999913, 0.00012634800000000182, 0.000127165999999998]</msg>
<status status="PASS" starttime="20201112 12:43:17.434" endtime="20201112 12:43:17.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.429" endtime="20201112 12:43:17.436"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.439" endtime="20201112 12:43:17.440"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.442" endtime="20201112 12:43:17.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.441" endtime="20201112 12:43:17.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.437" endtime="20201112 12:43:17.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.069" endtime="20201112 12:43:17.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.068" endtime="20201112 12:43:17.463"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.471" endtime="20201112 12:43:17.491"></status>
</kw>
<msg timestamp="20201112 12:43:17.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.470" endtime="20201112 12:43:17.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.492" endtime="20201112 12:43:17.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.495" endtime="20201112 12:43:17.496"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.467" endtime="20201112 12:43:17.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.465" endtime="20201112 12:43:17.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.503" endtime="20201112 12:43:17.789"></status>
</kw>
<msg timestamp="20201112 12:43:17.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.502" endtime="20201112 12:43:17.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021685181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.793" endtime="20201112 12:43:17.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.801" endtime="20201112 12:43:17.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.499" endtime="20201112 12:43:17.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.498" endtime="20201112 12:43:17.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:17.808" level="INFO">${RESULT} = [{'time': 0.021685181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012876399999999996, 'source_diff': 0.00012876399999999996}, {'time': 0.021844319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:17.805" endtime="20201112 12:43:17.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:17.821" level="INFO">${ACCURACY} = {'time': [0.021685181, 0.021844319, 0.021997875, 0.022146306, 0.022287861, 0.022445417, 0.022599833, 0.022754417, 0.022912889, 0.023068403, 0.023221861, 0.023376417, 0.023525903, 0.023667431, 0.023819...</msg>
<status status="PASS" starttime="20201112 12:43:17.809" endtime="20201112 12:43:17.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.825" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201112 12:43:17.824" endtime="20201112 12:43:17.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.827" level="INFO">VALUE: [0.00012876399999999996, 0.00012725000000000236, 0.00012729200000000107, 0.0001274589999999999, 0.00012802799999999878, 0.00012816699999999848, 0.00012745800000000043, 0.00012766699999999798, 0.00012720800000000018, 0.00012738900000000206, 0.00012716700000000095, 0.00012797299999999998, 0.00012752800000000175, 0.00012772299999999973, 0.00012776399999999896, 0.00012777699999999906, 0.0001271940000000006, 0.00012777700000000253, 0.00012745799999999696, 0.00012741699999999773, 0.00012786099999999995, 0.00012801400000000268, 0.0001277079999999972, 0.00012718000000000104, 0.00012763899999999884, 0.00012751400000000218, 0.00012716700000000095, 0.00012726400000000193, 0.00012791600000000222, 0.0001279720000000005, 0.0001281110000000002, 0.0001280560000000014, 0.00012790299999999866, 0.00012784799999999985, 0.00012763899999999884, 0.00012772200000000025, 0.0001281390000000028, 0.00012736099999999945, 0.00012777699999999906, 0.00012752800000000175, 0.000127472, 0.00012773599999999982, 0.00012794500000000084, 0.00012816699999999848, 0.00012770800000000068, 0.00012787500000000299, 0.00012748699999999905, 0.00012808300000000106, 0.00012734800000000282, 0.00012765300000000188]</msg>
<status status="PASS" starttime="20201112 12:43:17.826" endtime="20201112 12:43:17.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.821" endtime="20201112 12:43:17.829"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.831" endtime="20201112 12:43:17.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:17.834" endtime="20201112 12:43:17.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.833" endtime="20201112 12:43:17.854"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.829" endtime="20201112 12:43:17.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.464" endtime="20201112 12:43:17.855"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.463" endtime="20201112 12:43:17.855"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.863" endtime="20201112 12:43:17.883"></status>
</kw>
<msg timestamp="20201112 12:43:17.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.862" endtime="20201112 12:43:17.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:17.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:17.884" endtime="20201112 12:43:17.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.887" endtime="20201112 12:43:17.888"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.859" endtime="20201112 12:43:17.889"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.857" endtime="20201112 12:43:17.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:17.895" endtime="20201112 12:43:18.182"></status>
</kw>
<msg timestamp="20201112 12:43:18.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021466792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021596083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:17.894" endtime="20201112 12:43:18.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021466792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021596083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.186" endtime="20201112 12:43:18.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.194" endtime="20201112 12:43:18.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.891" endtime="20201112 12:43:18.196"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.890" endtime="20201112 12:43:18.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.201" level="INFO">${RESULT} = [{'time': 0.021596083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012929100000000013, 'source_diff': 0.00012929100000000013}, {'time': 0.021751403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:18.198" endtime="20201112 12:43:18.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.213" level="INFO">${ACCURACY} = {'time': [0.021596083, 0.021751403, 0.021894917, 0.022043472, 0.022188097, 0.022334556, 0.022478125, 0.022629722, 0.022777194, 0.022929708, 0.023079319, 0.023221819, 0.023369306, 0.023523875, 0.023673...</msg>
<status status="PASS" starttime="20201112 12:43:18.202" endtime="20201112 12:43:18.214"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.218" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.217" endtime="20201112 12:43:18.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.220" level="INFO">VALUE: [0.00012929100000000013, 0.00012902799999999978, 0.0001290140000000002, 0.00012850000000000014, 0.00012892999999999932, 0.0001282919999999986, 0.00012879200000000257, 0.00012873600000000082, 0.0001286659999999995, 0.00012870800000000168, 0.00012886100000000095, 0.00012868000000000254, 0.00012902799999999978, 0.00012890299999999966, 0.00012908300000000206, 0.00012872300000000073, 0.00012819399999999814, 0.00012848600000000057, 0.00012890299999999966, 0.00012877799999999953, 0.00012895800000000193, 0.0001288339999999978, 0.00012812499999999977, 0.00012891699999999923, 0.00012852799999999928, 0.00012856899999999852, 0.00012841699999999873, 0.00012894500000000184, 0.00012862500000000027, 0.0001291119999999972, 0.0001288049999999992, 0.00012911200000000067, 0.00012816699999999848, 0.00012842999999999882, 0.0001289590000000014, 0.00012845800000000143, 0.00012829099999999913, 0.00012868099999999855, 0.00012884700000000138, 0.00012819499999999762, 0.00012816699999999848, 0.00012919399999999914, 0.00012845800000000143, 0.0001282079999999977, 0.00012840299999999916, 0.00012895800000000193, 0.00012913900000000034, 0.00012891699999999923, 0.00012902799999999978, 0.00012858400000000103]</msg>
<status status="PASS" starttime="20201112 12:43:18.219" endtime="20201112 12:43:18.221"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.214" endtime="20201112 12:43:18.222"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.224" endtime="20201112 12:43:18.225"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.227" endtime="20201112 12:43:18.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.226" endtime="20201112 12:43:18.247"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.222" endtime="20201112 12:43:18.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.856" endtime="20201112 12:43:18.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:17.855" endtime="20201112 12:43:18.248"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.256" endtime="20201112 12:43:18.276"></status>
</kw>
<msg timestamp="20201112 12:43:18.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.255" endtime="20201112 12:43:18.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.277" endtime="20201112 12:43:18.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.280" endtime="20201112 12:43:18.281"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.252" endtime="20201112 12:43:18.282"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.250" endtime="20201112 12:43:18.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.289" endtime="20201112 12:43:18.575"></status>
</kw>
<msg timestamp="20201112 12:43:18.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.287" endtime="20201112 12:43:18.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021508486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021638764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.579" endtime="20201112 12:43:18.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.587" endtime="20201112 12:43:18.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.285" endtime="20201112 12:43:18.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.283" endtime="20201112 12:43:18.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.594" level="INFO">${RESULT} = [{'time': 0.021638764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013027800000000103, 'source_diff': 0.00013027800000000103}, {'time': 0.021797028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:18.591" endtime="20201112 12:43:18.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:18.607" level="INFO">${ACCURACY} = {'time': [0.021638764, 0.021797028, 0.021947486, 0.022092042, 0.022241639, 0.022404056, 0.022546542, 0.022691264, 0.022843764, 0.023000264, 0.02314375, 0.023303264, 0.023463806, 0.023608306, 0.0237688...</msg>
<status status="PASS" starttime="20201112 12:43:18.595" endtime="20201112 12:43:18.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.611" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201112 12:43:18.610" endtime="20201112 12:43:18.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.613" level="INFO">VALUE: [0.00013027800000000103, 0.00013011099999999873, 0.00012977799999999706, 0.00013009799999999863, 0.00012954199999999985, 0.0001299029999999972, 0.0001296530000000004, 0.00012995799999999946, 0.00012968099999999955, 0.0001293469999999984, 0.0001299439999999999, 0.00012916699999999948, 0.00012919499999999862, 0.0001301119999999982, 0.00012990300000000066, 0.00012958399999999856, 0.00012969499999999912, 0.00012923600000000132, 0.00013001399999999774, 0.0001299859999999986, 0.00012941699999999973, 0.0001298469999999989, 0.00012916699999999948, 0.00012983299999999934, 0.00013000000000000164, 0.00012973600000000182, 0.00012987499999999805, 0.00013004200000000035, 0.0001296249999999978, 0.00012972199999999878, 0.00012936199999999745, 0.00012945800000000243, 0.00012912500000000077, 0.0001291110000000012, 0.00013019400000000014, 0.00012963899999999737, 0.0001296530000000004, 0.00012923600000000132, 0.0001296660000000005, 0.00012961099999999823, 0.00012977800000000053, 0.00012931899999999927, 0.00012994500000000284, 0.0001292919999999996, 0.000129472000000002, 0.00012945800000000243, 0.00012961099999999823, 0.00012965199999999746, 0.0001293469999999984, 0.00012963900000000084]</msg>
<status status="PASS" starttime="20201112 12:43:18.612" endtime="20201112 12:43:18.614"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.608" endtime="20201112 12:43:18.615"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.617" endtime="20201112 12:43:18.618"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:18.620" endtime="20201112 12:43:18.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.619" endtime="20201112 12:43:18.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.615" endtime="20201112 12:43:18.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.249" endtime="20201112 12:43:18.641"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.248" endtime="20201112 12:43:18.641"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.650" endtime="20201112 12:43:18.669"></status>
</kw>
<msg timestamp="20201112 12:43:18.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.648" endtime="20201112 12:43:18.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:18.671" endtime="20201112 12:43:18.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.673" endtime="20201112 12:43:18.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.646" endtime="20201112 12:43:18.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.644" endtime="20201112 12:43:18.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.682" endtime="20201112 12:43:18.968"></status>
</kw>
<msg timestamp="20201112 12:43:18.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.680" endtime="20201112 12:43:18.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:18.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021628972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:18.972" endtime="20201112 12:43:18.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:18.980" endtime="20201112 12:43:18.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.678" endtime="20201112 12:43:18.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.676" endtime="20201112 12:43:18.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:18.986" level="INFO">${RESULT} = [{'time': 0.021760069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013109700000000016, 'source_diff': 0.00013109700000000016}, {'time': 0.021912278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:18.983" endtime="20201112 12:43:18.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.001" level="INFO">${ACCURACY} = {'time': [0.021760069, 0.021912278, 0.022070847, 0.022218333, 0.022372847, 0.022521458, 0.022677903, 0.022826431, 0.022986972, 0.023143431, 0.023293, 0.023445458, 0.023592, 0.023754569, 0.023904028, 0...</msg>
<status status="PASS" starttime="20201112 12:43:18.987" endtime="20201112 12:43:19.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.005" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.004" endtime="20201112 12:43:19.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.007" level="INFO">VALUE: [0.00013109700000000016, 0.00013059699999999966, 0.00013102800000000178, 0.00013052699999999834, 0.0001310140000000022, 0.0001307080000000002, 0.0001307639999999985, 0.00013031999999999974, 0.0001305140000000017, 0.0001304029999999977, 0.0001303890000000016, 0.0001302079999999997, 0.00013083299999999687, 0.00013065199999999846, 0.00013094500000000037, 0.00013063899999999837, 0.00013031900000000027, 0.00013016700000000048, 0.00013101399999999874, 0.0001305830000000001, 0.00013031999999999974, 0.000130263999999998, 0.0001309440000000009, 0.00013087499999999905, 0.0001307639999999985, 0.00013076299999999902, 0.00013095800000000046, 0.0001301379999999984, 0.00013041700000000073, 0.0001310279999999983, 0.00013052699999999834, 0.00013102800000000178, 0.00013077799999999806, 0.0001301530000000009, 0.00013101399999999874, 0.0001306799999999976, 0.0001309029999999982, 0.0001310830000000006, 0.0001310409999999984, 0.00013045799999999996, 0.0001305830000000001, 0.0001308469999999999, 0.0001305270000000018, 0.00013027800000000103, 0.0001303469999999994, 0.0001308469999999999, 0.000130263999999998, 0.00013055600000000042, 0.00013034800000000235, 0.00013015299999999744]</msg>
<status status="PASS" starttime="20201112 12:43:19.006" endtime="20201112 12:43:19.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.002" endtime="20201112 12:43:19.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.011" endtime="20201112 12:43:19.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.014" endtime="20201112 12:43:19.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.013" endtime="20201112 12:43:19.034"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.009" endtime="20201112 12:43:19.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.642" endtime="20201112 12:43:19.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:18.642" endtime="20201112 12:43:19.035"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.043" endtime="20201112 12:43:19.063"></status>
</kw>
<msg timestamp="20201112 12:43:19.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.042" endtime="20201112 12:43:19.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.065" endtime="20201112 12:43:19.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.067" endtime="20201112 12:43:19.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.039" endtime="20201112 12:43:19.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.038" endtime="20201112 12:43:19.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.076" endtime="20201112 12:43:19.362"></status>
</kw>
<msg timestamp="20201112 12:43:19.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021452278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.074" endtime="20201112 12:43:19.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021452278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021584069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.367" endtime="20201112 12:43:19.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.375" endtime="20201112 12:43:19.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.072" endtime="20201112 12:43:19.378"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.070" endtime="20201112 12:43:19.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.382" level="INFO">${RESULT} = [{'time': 0.021584069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013179099999999916, 'source_diff': 0.00013179099999999916}, {'time': 0.021740389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:19.379" endtime="20201112 12:43:19.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.395" level="INFO">${ACCURACY} = {'time': [0.021584069, 0.021740389, 0.021893833, 0.022052472, 0.022200889, 0.022353403, 0.022510972, 0.022657458, 0.022813958, 0.022966569, 0.023128972, 0.023283542, 0.023440986, 0.023586514, 0.023738...</msg>
<status status="PASS" starttime="20201112 12:43:19.383" endtime="20201112 12:43:19.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.400" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.399" endtime="20201112 12:43:19.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.402" level="INFO">VALUE: [0.00013179099999999916, 0.00013129199999999813, 0.00013183300000000134, 0.00013137499999999955, 0.0001312080000000007, 0.0001312090000000002, 0.000131263999999999, 0.00013141599999999878, 0.00013208299999999812, 0.00013161100000000023, 0.00013173600000000035, 0.0001317090000000007, 0.00013113899999999887, 0.0001320279999999993, 0.0001318470000000009, 0.00013188899999999962, 0.00013186100000000048, 0.0001312769999999991, 0.00013170799999999774, 0.000132166999999999, 0.0001318340000000008, 0.00013109700000000016, 0.00013188899999999962, 0.0001315279999999988, 0.0001321250000000003, 0.00013113899999999887, 0.00013197199999999756, 0.00013209800000000063, 0.0001320279999999993, 0.00013197199999999756, 0.00013172200000000078, 0.00013151399999999924, 0.00013119500000000062, 0.00013206899999999855, 0.0001316530000000024, 0.00013205599999999845, 0.0001315830000000011, 0.00013209700000000116, 0.00013158400000000056, 0.0001313470000000004, 0.0001321380000000004, 0.00013183300000000134, 0.0001314579999999975, 0.0001317920000000021, 0.0001311530000000019, 0.0001317080000000012, 0.00013184699999999744, 0.00013206999999999802, 0.0001317080000000012, 0.0001312090000000002]</msg>
<status status="PASS" starttime="20201112 12:43:19.401" endtime="20201112 12:43:19.403"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.396" endtime="20201112 12:43:19.403"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.405" endtime="20201112 12:43:19.407"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.409" endtime="20201112 12:43:19.428"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.407" endtime="20201112 12:43:19.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.404" endtime="20201112 12:43:19.429"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.036" endtime="20201112 12:43:19.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.035" endtime="20201112 12:43:19.430"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.438" endtime="20201112 12:43:19.458"></status>
</kw>
<msg timestamp="20201112 12:43:19.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.437" endtime="20201112 12:43:19.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.459" endtime="20201112 12:43:19.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.462" endtime="20201112 12:43:19.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.434" endtime="20201112 12:43:19.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.432" endtime="20201112 12:43:19.464"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.471" endtime="20201112 12:43:19.757"></status>
</kw>
<msg timestamp="20201112 12:43:19.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.469" endtime="20201112 12:43:19.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021556056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021688778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.761" endtime="20201112 12:43:19.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.769" endtime="20201112 12:43:19.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.467" endtime="20201112 12:43:19.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.465" endtime="20201112 12:43:19.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:19.775" level="INFO">${RESULT} = [{'time': 0.021688778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001327219999999983, 'source_diff': 0.0001327219999999983}, {'time': 0.021840083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:19.772" endtime="20201112 12:43:19.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:19.788" level="INFO">${ACCURACY} = {'time': [0.021688778, 0.021840083, 0.021993528, 0.022146042, 0.022295625, 0.022443111, 0.022591611, 0.022755153, 0.022904611, 0.023057125, 0.023211708, 0.023363236, 0.023511694, 0.023676222, 0.023831...</msg>
<status status="PASS" starttime="20201112 12:43:19.776" endtime="20201112 12:43:19.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.792" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201112 12:43:19.791" endtime="20201112 12:43:19.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.794" level="INFO">VALUE: [0.0001327219999999983, 0.00013222200000000128, 0.0001327779999999966, 0.00013308400000000206, 0.00013263900000000037, 0.00013238900000000012, 0.00013219400000000214, 0.00013255599999999895, 0.00013251399999999677, 0.0001330830000000026, 0.0001323470000000014, 0.00013270799999999874, 0.00013251300000000077, 0.00013263900000000037, 0.000132264, 0.00013291599999999681, 0.00013256899999999905, 0.00013301399999999727, 0.00013256899999999905, 0.0001330280000000003, 0.0001321250000000003, 0.00013277800000000006, 0.00013294399999999942, 0.00013263900000000037, 0.0001325409999999999, 0.00013298599999999813, 0.00013301399999999727, 0.00013305499999999998, 0.00013304199999999988, 0.0001330969999999987, 0.00013266600000000003, 0.0001323340000000013, 0.0001322770000000001, 0.00013251400000000024, 0.0001330410000000004, 0.00013233300000000184, 0.00013315300000000044, 0.00013265299999999994, 0.0001329030000000002, 0.00013238900000000012, 0.00013251400000000024, 0.000132264, 0.00013230499999999923, 0.0001327640000000005, 0.0001331389999999974, 0.0001329030000000002, 0.00013233300000000184, 0.0001326669999999995, 0.00013308299999999912, 0.00013283299999999887]</msg>
<status status="PASS" starttime="20201112 12:43:19.793" endtime="20201112 12:43:19.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.789" endtime="20201112 12:43:19.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.798" endtime="20201112 12:43:19.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:19.801" endtime="20201112 12:43:19.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.800" endtime="20201112 12:43:19.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.796" endtime="20201112 12:43:19.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.431" endtime="20201112 12:43:19.822"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.430" endtime="20201112 12:43:19.822"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.831" endtime="20201112 12:43:19.850"></status>
</kw>
<msg timestamp="20201112 12:43:19.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.829" endtime="20201112 12:43:19.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:19.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:19.852" endtime="20201112 12:43:19.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.854" endtime="20201112 12:43:19.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.827" endtime="20201112 12:43:19.856"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.825" endtime="20201112 12:43:19.857"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:19.863" endtime="20201112 12:43:20.149"></status>
</kw>
<msg timestamp="20201112 12:43:20.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:19.862" endtime="20201112 12:43:20.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021515875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021650458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.153" endtime="20201112 12:43:20.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.162" endtime="20201112 12:43:20.163"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.859" endtime="20201112 12:43:20.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.857" endtime="20201112 12:43:20.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.168" level="INFO">${RESULT} = [{'time': 0.021650458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013458300000000062, 'source_diff': 0.00013458300000000062}, {'time': 0.021810778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:20.165" endtime="20201112 12:43:20.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.181" level="INFO">${ACCURACY} = {'time': [0.021650458, 0.021810778, 0.021973139, 0.022132681, 0.022295069, 0.022453625, 0.022601111, 0.022751625, 0.022910181, 0.023074583, 0.023229167, 0.023387583, 0.023537139, 0.023693611, 0.023857...</msg>
<status status="PASS" starttime="20201112 12:43:20.169" endtime="20201112 12:43:20.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.185" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.184" endtime="20201112 12:43:20.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.188" level="INFO">VALUE: [0.00013458300000000062, 0.0001334449999999994, 0.0001339449999999999, 0.000133570000000003, 0.00013393000000000085, 0.00013318100000000305, 0.00013334699999999894, 0.00013355599999999995, 0.0001332090000000022, 0.0001334579999999995, 0.00013356999999999952, 0.0001333609999999985, 0.00013384699999999944, 0.00013362499999999833, 0.00013412499999999883, 0.00013370799999999974, 0.00013355599999999995, 0.00013327800000000056, 0.00013362499999999833, 0.00013312499999999783, 0.00013387499999999858, 0.000133860999999999, 0.0001333609999999985, 0.0001331389999999974, 0.00013413799999999892, 0.0001333479999999984, 0.0001334579999999995, 0.0001334030000000007, 0.0001340969999999997, 0.00013326299999999805, 0.00013366600000000103, 0.00013386199999999848, 0.00013347200000000253, 0.0001337640000000015, 0.00013363799999999842, 0.0001334030000000007, 0.00013370799999999974, 0.00013362499999999833, 0.00013412499999999883, 0.00013369499999999965, 0.00013358299999999962, 0.0001334999999999982, 0.00013383299999999987, 0.00013402799999999784, 0.00013327800000000056, 0.00013370799999999974, 0.00013402799999999784, 0.00013369400000000017, 0.0001335280000000008, 0.00013388900000000162]</msg>
<status status="PASS" starttime="20201112 12:43:20.187" endtime="20201112 12:43:20.189"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.182" endtime="20201112 12:43:20.189"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.191" endtime="20201112 12:43:20.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.195" endtime="20201112 12:43:20.214"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.193" endtime="20201112 12:43:20.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.190" endtime="20201112 12:43:20.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.823" endtime="20201112 12:43:20.215"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:19.823" endtime="20201112 12:43:20.216"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.224" endtime="20201112 12:43:20.244"></status>
</kw>
<msg timestamp="20201112 12:43:20.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.222" endtime="20201112 12:43:20.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.245" endtime="20201112 12:43:20.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.248" endtime="20201112 12:43:20.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.220" endtime="20201112 12:43:20.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.218" endtime="20201112 12:43:20.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.256" endtime="20201112 12:43:20.543"></status>
</kw>
<msg timestamp="20201112 12:43:20.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.255" endtime="20201112 12:43:20.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021483903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021619528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.547" endtime="20201112 12:43:20.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.555" endtime="20201112 12:43:20.557"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.252" endtime="20201112 12:43:20.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.251" endtime="20201112 12:43:20.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.562" level="INFO">${RESULT} = [{'time': 0.021619528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013562500000000033, 'source_diff': 0.00013562500000000033}, {'time': 0.021785847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:20.559" endtime="20201112 12:43:20.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.576" level="INFO">${ACCURACY} = {'time': [0.021619528, 0.021785847, 0.021949278, 0.022103819, 0.02226025, 0.022407764, 0.022570347, 0.022732694, 0.022892264, 0.023046694, 0.02320625, 0.023361694, 0.023526222, 0.023691611, 0.02385615...</msg>
<status status="PASS" starttime="20201112 12:43:20.563" endtime="20201112 12:43:20.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.581" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.580" endtime="20201112 12:43:20.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.583" level="INFO">VALUE: [0.00013562500000000033, 0.00013502799999999884, 0.00013466699999999804, 0.00013416600000000153, 0.00013480599999999773, 0.00013469500000000065, 0.0001350410000000024, 0.00013455500000000148, 0.0001348329999999974, 0.0001350129999999998, 0.00013450000000000267, 0.00013477699999999912, 0.00013451399999999877, 0.00013505500000000198, 0.00013450000000000267, 0.00013494400000000142, 0.00013419500000000015, 0.00013438899999999865, 0.00013447200000000006, 0.00013494399999999795, 0.0001348190000000013, 0.00013488899999999915, 0.00013458299999999715, 0.00013444400000000092, 0.000134958000000001, 0.00013433399999999984, 0.0001348190000000013, 0.00013429199999999766, 0.00013451400000000224, 0.00013494399999999795, 0.00013433300000000037, 0.00013505599999999798, 0.00013424999999999895, 0.00013506900000000155, 0.000134861, 0.0001341250000000023, 0.00013455600000000095, 0.00013494400000000142, 0.00013480599999999773, 0.00013488900000000262, 0.00013488900000000262, 0.0001348060000000012, 0.0001350840000000006, 0.00013419500000000015, 0.00013506899999999808, 0.00013508399999999712, 0.00013470800000000074, 0.0001344450000000004, 0.00013462499999999933, 0.00013433399999999984]</msg>
<status status="PASS" starttime="20201112 12:43:20.582" endtime="20201112 12:43:20.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.577" endtime="20201112 12:43:20.584"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.587" endtime="20201112 12:43:20.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.590" endtime="20201112 12:43:20.609"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.588" endtime="20201112 12:43:20.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.585" endtime="20201112 12:43:20.610"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.216" endtime="20201112 12:43:20.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.216" endtime="20201112 12:43:20.611"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.619" endtime="20201112 12:43:20.639"></status>
</kw>
<msg timestamp="20201112 12:43:20.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.618" endtime="20201112 12:43:20.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:20.640" endtime="20201112 12:43:20.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.643" endtime="20201112 12:43:20.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.615" endtime="20201112 12:43:20.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.613" endtime="20201112 12:43:20.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.652" endtime="20201112 12:43:20.938"></status>
</kw>
<msg timestamp="20201112 12:43:20.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.650" endtime="20201112 12:43:20.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021564861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021701097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:20.942" endtime="20201112 12:43:20.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.950" endtime="20201112 12:43:20.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.648" endtime="20201112 12:43:20.952"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.646" endtime="20201112 12:43:20.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:20.957" level="INFO">${RESULT} = [{'time': 0.021701097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013623599999999791, 'source_diff': 0.00013623599999999791}, {'time': 0.021869292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:20.953" endtime="20201112 12:43:20.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:20.969" level="INFO">${ACCURACY} = {'time': [0.021701097, 0.021869292, 0.022032847, 0.02219625, 0.022356819, 0.022516222, 0.022678778, 0.022842153, 0.022992722, 0.023154153, 0.023317694, 0.023472111, 0.023639625, 0.023804028, 0.0239615...</msg>
<status status="PASS" starttime="20201112 12:43:20.957" endtime="20201112 12:43:20.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.974" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201112 12:43:20.973" endtime="20201112 12:43:20.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:20.976" level="INFO">VALUE: [0.00013623599999999791, 0.00013569499999999818, 0.00013570800000000174, 0.000135861000000001, 0.00013552699999999987, 0.00013526399999999952, 0.0001356389999999999, 0.00013522200000000081, 0.00013580499999999926, 0.00013601400000000027, 0.00013531899999999833, 0.00013592999999999938, 0.0001353060000000017, 0.0001355840000000011, 0.00013530599999999823, 0.00013575000000000045, 0.00013523600000000038, 0.00013608399999999812, 0.0001350970000000007, 0.00013576400000000002, 0.00013586200000000048, 0.0001360000000000007, 0.00013555600000000195, 0.00013537500000000008, 0.0001353610000000005, 0.00013555600000000195, 0.00013566600000000303, 0.00013551399999999977, 0.00013511100000000026, 0.00013530599999999823, 0.0001355419999999989, 0.00013547200000000106, 0.00013512499999999983, 0.00013548600000000063, 0.00013607000000000202, 0.00013573600000000088, 0.00013565299999999947, 0.00013512499999999983, 0.0001360000000000007, 0.00013594399999999895, 0.000135861000000001, 0.0001359450000000019, 0.00013568100000000208, 0.00013523600000000038, 0.0001355000000000002, 0.00013558299999999815, 0.00013511199999999973, 0.00013531899999999833, 0.0001360549999999995, 0.00013555599999999848]</msg>
<status status="PASS" starttime="20201112 12:43:20.975" endtime="20201112 12:43:20.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.970" endtime="20201112 12:43:20.981"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:20.983" endtime="20201112 12:43:20.984"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:20.987" endtime="20201112 12:43:21.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.985" endtime="20201112 12:43:21.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.982" endtime="20201112 12:43:21.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.612" endtime="20201112 12:43:21.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:20.611" endtime="20201112 12:43:21.008"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.016" endtime="20201112 12:43:21.036"></status>
</kw>
<msg timestamp="20201112 12:43:21.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.014" endtime="20201112 12:43:21.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.037" endtime="20201112 12:43:21.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.040" endtime="20201112 12:43:21.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.012" endtime="20201112 12:43:21.042"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.010" endtime="20201112 12:43:21.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.049" endtime="20201112 12:43:21.335"></status>
</kw>
<msg timestamp="20201112 12:43:21.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.047" endtime="20201112 12:43:21.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021766014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021903278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.339" endtime="20201112 12:43:21.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.347" endtime="20201112 12:43:21.348"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.045" endtime="20201112 12:43:21.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.043" endtime="20201112 12:43:21.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.353" level="INFO">${RESULT} = [{'time': 0.021903278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013726400000000152, 'source_diff': 0.00013726400000000152}, {'time': 0.022066583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:21.350" endtime="20201112 12:43:21.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.366" level="INFO">${ACCURACY} = {'time': [0.021903278, 0.022066583, 0.022233972, 0.022385556, 0.022536, 0.022703514, 0.022863944, 0.023024458, 0.023186931, 0.023341417, 0.023494833, 0.023659347, 0.023815833, 0.023969292, 0.024127778...</msg>
<status status="PASS" starttime="20201112 12:43:21.354" endtime="20201112 12:43:21.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.370" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.369" endtime="20201112 12:43:21.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.373" level="INFO">VALUE: [0.00013726400000000152, 0.00013637500000000108, 0.0001370550000000005, 0.00013618100000000258, 0.00013693099999999986, 0.00013623600000000138, 0.00013694399999999995, 0.00013641600000000031, 0.00013712500000000183, 0.00013666700000000004, 0.00013645799999999902, 0.0001369719999999991, 0.0001370550000000005, 0.00013629199999999966, 0.00013690300000000072, 0.00013648600000000163, 0.00013637500000000108, 0.00013616699999999954, 0.00013690200000000124, 0.00013699999999999823, 0.0001363610000000015, 0.00013698600000000213, 0.0001361520000000005, 0.00013648599999999816, 0.00013705599999999998, 0.00013666600000000056, 0.00013622199999999834, 0.00013620800000000224, 0.00013673700000000136, 0.00013677799999999712, 0.00013687500000000158, 0.00013709699999999922, 0.00013637500000000108, 0.0001364450000000024, 0.00013637500000000108, 0.00013620800000000224, 0.0001366809999999996, 0.00013697300000000204, 0.00013693000000000038, 0.0001361809999999991, 0.0001361809999999991, 0.00013698600000000213, 0.0001370000000000017, 0.0001368879999999982, 0.00013662500000000133, 0.00013690300000000072, 0.0001366109999999983, 0.00013637500000000108, 0.00013631899999999933, 0.00013638900000000065]</msg>
<status status="PASS" starttime="20201112 12:43:21.371" endtime="20201112 12:43:21.373"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.367" endtime="20201112 12:43:21.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.376" endtime="20201112 12:43:21.378"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.380" endtime="20201112 12:43:21.399"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.378" endtime="20201112 12:43:21.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.375" endtime="20201112 12:43:21.400"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.008" endtime="20201112 12:43:21.401"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.008" endtime="20201112 12:43:21.401"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.410" endtime="20201112 12:43:21.430"></status>
</kw>
<msg timestamp="20201112 12:43:21.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.408" endtime="20201112 12:43:21.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.432" endtime="20201112 12:43:21.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.434" endtime="20201112 12:43:21.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.406" endtime="20201112 12:43:21.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.403" endtime="20201112 12:43:21.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.443" endtime="20201112 12:43:21.730"></status>
</kw>
<msg timestamp="20201112 12:43:21.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02299475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:21.441" endtime="20201112 12:43:21.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02299475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023133028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:21.735" endtime="20201112 12:43:21.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.743" endtime="20201112 12:43:21.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.439" endtime="20201112 12:43:21.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.437" endtime="20201112 12:43:21.745"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:21.749" level="INFO">${RESULT} = [{'time': 0.023133028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013827799999999862, 'source_diff': 0.00013827799999999862}, {'time': 0.023284264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:21.746" endtime="20201112 12:43:21.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:21.762" level="INFO">${ACCURACY} = {'time': [0.023133028, 0.023284264, 0.023445764, 0.02360925, 0.023774792, 0.023928306, 0.024085792, 0.024238236, 0.024395736, 0.024565264, 0.024723653, 0.024893194, 0.025062764, 0.025215222, 0.0253708...</msg>
<status status="PASS" starttime="20201112 12:43:21.750" endtime="20201112 12:43:21.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.766" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201112 12:43:21.765" endtime="20201112 12:43:21.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.769" level="INFO">VALUE: [0.00013827799999999862, 0.0001371109999999988, 0.00013770800000000027, 0.0001375139999999983, 0.00013769500000000018, 0.00013780600000000073, 0.00013719500000000315, 0.0001379720000000001, 0.00013773600000000288, 0.00013763899999999843, 0.0001371390000000014, 0.00013727700000000162, 0.00013734700000000294, 0.00013802799999999837, 0.00013804099999999847, 0.00013719499999999968, 0.00013762500000000233, 0.00013786099999999954, 0.00013774999999999898, 0.00013791699999999782, 0.00013773599999999941, 0.0001376940000000007, 0.00013711100000000226, 0.00013734699999999947, 0.0001371520000000015, 0.00013736099999999904, 0.0001380550000000015, 0.0001378049999999978, 0.00013805599999999751, 0.00013794500000000043, 0.00013791599999999835, 0.00013812499999999936, 0.000137555000000001, 0.00013770899999999975, 0.0001375420000000009, 0.00013776400000000202, 0.00013770800000000027, 0.00013723599999999891, 0.0001370550000000005, 0.00013723599999999891, 0.00013787500000000258, 0.0001371940000000002, 0.00013804099999999847, 0.00013805600000000098, 0.00013793100000000086, 0.00013774999999999898, 0.0001371659999999976, 0.00013738899999999818, 0.00013734699999999947, 0.00013718000000000063]</msg>
<status status="PASS" starttime="20201112 12:43:21.767" endtime="20201112 12:43:21.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.763" endtime="20201112 12:43:21.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.772" endtime="20201112 12:43:21.774"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:21.776" endtime="20201112 12:43:21.795"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.774" endtime="20201112 12:43:21.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.771" endtime="20201112 12:43:21.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.402" endtime="20201112 12:43:21.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.401" endtime="20201112 12:43:21.797"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.805" endtime="20201112 12:43:21.825"></status>
</kw>
<msg timestamp="20201112 12:43:21.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.803" endtime="20201112 12:43:21.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:21.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:21.826" endtime="20201112 12:43:21.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.829" endtime="20201112 12:43:21.830"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.801" endtime="20201112 12:43:21.831"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.799" endtime="20201112 12:43:21.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:21.838" endtime="20201112 12:43:22.124"></status>
</kw>
<msg timestamp="20201112 12:43:22.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021600167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:21.836" endtime="20201112 12:43:22.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021600167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021739778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.128" endtime="20201112 12:43:22.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.136" endtime="20201112 12:43:22.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.834" endtime="20201112 12:43:22.138"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.832" endtime="20201112 12:43:22.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.142" level="INFO">${RESULT} = [{'time': 0.021739778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001396110000000013, 'source_diff': 0.0001396110000000013}, {'time': 0.021897028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:22.139" endtime="20201112 12:43:22.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.157" level="INFO">${ACCURACY} = {'time': [0.021739778, 0.021897028, 0.022049625, 0.022209069, 0.022362653, 0.022531028, 0.022688583, 0.022859028, 0.023025458, 0.023180944, 0.0233365, 0.023492931, 0.023657486, 0.023822875, 0.02398143...</msg>
<status status="PASS" starttime="20201112 12:43:22.143" endtime="20201112 12:43:22.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.161" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.160" endtime="20201112 12:43:22.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.163" level="INFO">VALUE: [0.0001396110000000013, 0.00013866699999999857, 0.00013876399999999955, 0.00013813800000000293, 0.00013883400000000087, 0.0001389720000000011, 0.00013842999999999842, 0.00013883400000000087, 0.00013829099999999872, 0.00013819399999999774, 0.00013823599999999991, 0.00013855600000000148, 0.00013854199999999844, 0.0001381810000000011, 0.00013880600000000173, 0.00013863899999999943, 0.00013900000000000023, 0.0001382079999999973, 0.0001389309999999984, 0.0001383749999999996, 0.0001388750000000001, 0.00013833400000000037, 0.00013831899999999786, 0.0001383749999999996, 0.0001386110000000003, 0.00013831900000000133, 0.00013833400000000037, 0.00013834700000000047, 0.00013898600000000066, 0.00013913899999999993, 0.00013854199999999844, 0.00013842999999999842, 0.00013873600000000041, 0.00013881899999999836, 0.00013881900000000183, 0.00013876399999999955, 0.0001388750000000001, 0.0001384590000000005, 0.0001383049999999983, 0.00013823599999999991, 0.00013844400000000145, 0.00013900000000000023, 0.00013831900000000133, 0.00013829200000000166, 0.00013834700000000047, 0.00013863899999999943, 0.000138862, 0.00013848600000000016, 0.0001390689999999986, 0.0001388750000000001]</msg>
<status status="PASS" starttime="20201112 12:43:22.162" endtime="20201112 12:43:22.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.158" endtime="20201112 12:43:22.165"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.167" endtime="20201112 12:43:22.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.170" endtime="20201112 12:43:22.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.169" endtime="20201112 12:43:22.190"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.165" endtime="20201112 12:43:22.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.797" endtime="20201112 12:43:22.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:21.797" endtime="20201112 12:43:22.191"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.200" endtime="20201112 12:43:22.220"></status>
</kw>
<msg timestamp="20201112 12:43:22.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.198" endtime="20201112 12:43:22.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.221" endtime="20201112 12:43:22.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.223" endtime="20201112 12:43:22.225"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.196" endtime="20201112 12:43:22.226"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.194" endtime="20201112 12:43:22.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.232" endtime="20201112 12:43:22.519"></status>
</kw>
<msg timestamp="20201112 12:43:22.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021501458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.231" endtime="20201112 12:43:22.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021501458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.523" endtime="20201112 12:43:22.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.531" endtime="20201112 12:43:22.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.228" endtime="20201112 12:43:22.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.227" endtime="20201112 12:43:22.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.538" level="INFO">${RESULT} = [{'time': 0.021641139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013968099999999914, 'source_diff': 0.00013968099999999914}, {'time': 0.021807417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:22.534" endtime="20201112 12:43:22.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.550" level="INFO">${ACCURACY} = {'time': [0.021641139, 0.021807417, 0.021962861, 0.022119361, 0.022275903, 0.022448403, 0.022601847, 0.022758347, 0.022914889, 0.023085278, 0.023240833, 0.02340225, 0.023561875, 0.023727208, 0.0238897...</msg>
<status status="PASS" starttime="20201112 12:43:22.539" endtime="20201112 12:43:22.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.555" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.554" endtime="20201112 12:43:22.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.557" level="INFO">VALUE: [0.00013968099999999914, 0.00013936099999999757, 0.00014005500000000004, 0.00013955499999999954, 0.0001392919999999992, 0.00013999999999999777, 0.00013994400000000295, 0.0001395140000000003, 0.0001398750000000011, 0.00013943100000000236, 0.00013923599999999745, 0.00013918099999999864, 0.0001398750000000011, 0.00013973599999999795, 0.00014000000000000123, 0.00013952799999999987, 0.0001391810000000021, 0.00013933299999999843, 0.00013973599999999795, 0.00013986099999999807, 0.00013925000000000048, 0.0001393200000000018, 0.00013920800000000177, 0.00013948600000000116, 0.00013968099999999914, 0.00013975000000000098, 0.00013950000000000073, 0.0001391110000000008, 0.0001398750000000011, 0.00013959699999999825, 0.00013959700000000172, 0.00013959700000000172, 0.000139862000000001, 0.0001392919999999992, 0.00013986100000000154, 0.00014005599999999951, 0.00013986099999999807, 0.00013947300000000107, 0.00013925000000000048, 0.00013998600000000166, 0.00013970800000000227, 0.00013992999999999992, 0.00013980500000000326, 0.00014004199999999994, 0.00013934700000000147, 0.00013923600000000091, 0.00013965200000000053, 0.00013987499999999764, 0.0001396110000000013, 0.00013949999999999727]</msg>
<status status="PASS" starttime="20201112 12:43:22.556" endtime="20201112 12:43:22.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.551" endtime="20201112 12:43:22.559"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.561" endtime="20201112 12:43:22.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.564" endtime="20201112 12:43:22.583"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.563" endtime="20201112 12:43:22.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.559" endtime="20201112 12:43:22.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.192" endtime="20201112 12:43:22.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.192" endtime="20201112 12:43:22.585"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.593" endtime="20201112 12:43:22.613"></status>
</kw>
<msg timestamp="20201112 12:43:22.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.592" endtime="20201112 12:43:22.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.615" endtime="20201112 12:43:22.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.617" endtime="20201112 12:43:22.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.589" endtime="20201112 12:43:22.619"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.587" endtime="20201112 12:43:22.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.626" endtime="20201112 12:43:22.912"></status>
</kw>
<msg timestamp="20201112 12:43:22.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.624" endtime="20201112 12:43:22.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021484639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:22.916" endtime="20201112 12:43:22.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.924" endtime="20201112 12:43:22.926"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.622" endtime="20201112 12:43:22.927"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.620" endtime="20201112 12:43:22.927"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:22.931" level="INFO">${RESULT} = [{'time': 0.021626069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014143000000000142, 'source_diff': 0.00014143000000000142}, {'time': 0.021784361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:22.928" endtime="20201112 12:43:22.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:22.944" level="INFO">${ACCURACY} = {'time': [0.021626069, 0.021784361, 0.021948764, 0.022113292, 0.022283667, 0.022457111, 0.022618583, 0.022779111, 0.022944514, 0.023099069, 0.023262472, 0.023435014, 0.023604389, 0.023758931, 0.023931...</msg>
<status status="PASS" starttime="20201112 12:43:22.932" endtime="20201112 12:43:22.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.948" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201112 12:43:22.947" endtime="20201112 12:43:22.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:22.951" level="INFO">VALUE: [0.00014143000000000142, 0.0001410279999999979, 0.00014091699999999735, 0.00014072299999999885, 0.00014030599999999976, 0.00014087499999999864, 0.00014077700000000165, 0.00014077800000000112, 0.00014036099999999857, 0.00014072199999999938, 0.00014079099999999775, 0.00014095800000000006, 0.0001406249999999984, 0.00014040300000000075, 0.0001404729999999986, 0.0001410270000000019, 0.00014049999999999827, 0.0001406660000000011, 0.000141040999999998, 0.00014072199999999938, 0.00014059699999999925, 0.00014061099999999882, 0.0001406110000000023, 0.00014049999999999827, 0.00014023699999999792, 0.00014065299999999753, 0.00014065200000000153, 0.0001411110000000028, 0.00014061200000000176, 0.00014007000000000255, 0.00014055500000000054, 0.000140653000000001, 0.00014063900000000143, 0.00014036099999999857, 0.00014074999999999852, 0.00014018099999999964, 0.00014016700000000007, 0.00014048699999999817, 0.00014040300000000075, 0.00014058400000000262, 0.00014018099999999964, 0.00014072199999999938, 0.00014059699999999925, 0.00014073600000000241, 0.0001401110000000018, 0.00014105499999999757, 0.00014081999999999983, 0.00014086099999999907, 0.00014041700000000032, 0.00014022200000000234]</msg>
<status status="PASS" starttime="20201112 12:43:22.949" endtime="20201112 12:43:22.951"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.945" endtime="20201112 12:43:22.952"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.954" endtime="20201112 12:43:22.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:22.957" endtime="20201112 12:43:22.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.956" endtime="20201112 12:43:22.977"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.952" endtime="20201112 12:43:22.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.586" endtime="20201112 12:43:22.978"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.585" endtime="20201112 12:43:22.978"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:22.987" endtime="20201112 12:43:23.007"></status>
</kw>
<msg timestamp="20201112 12:43:23.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:22.985" endtime="20201112 12:43:23.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.008" endtime="20201112 12:43:23.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.011" endtime="20201112 12:43:23.012"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.983" endtime="20201112 12:43:23.013"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.981" endtime="20201112 12:43:23.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.019" endtime="20201112 12:43:23.305"></status>
</kw>
<msg timestamp="20201112 12:43:23.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.018" endtime="20201112 12:43:23.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021677958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.309" endtime="20201112 12:43:23.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.317" endtime="20201112 12:43:23.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.015" endtime="20201112 12:43:23.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.014" endtime="20201112 12:43:23.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.324" level="INFO">${RESULT} = [{'time': 0.021677958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014251399999999984, 'source_diff': 0.00014251399999999984}, {'time': 0.021833153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:23.320" endtime="20201112 12:43:23.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.336" level="INFO">${ACCURACY} = {'time': [0.021677958, 0.021833153, 0.022002681, 0.022169069, 0.022336611, 0.022508, 0.0226765, 0.022834931, 0.022990486, 0.023163875, 0.023333417, 0.023504833, 0.023679278, 0.023838861, 0.024003278, ...</msg>
<status status="PASS" starttime="20201112 12:43:23.325" endtime="20201112 12:43:23.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.341" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.340" endtime="20201112 12:43:23.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.343" level="INFO">VALUE: [0.00014251399999999984, 0.00014136099999999957, 0.00014168100000000114, 0.00014165199999999906, 0.00014149999999999927, 0.00014137499999999914, 0.00014127799999999816, 0.0001414310000000009, 0.00014140300000000175, 0.00014180600000000126, 0.00014169499999999724, 0.00014166599999999863, 0.0001419310000000014, 0.00014140299999999828, 0.00014190299999999878, 0.0001415140000000023, 0.00014141600000000185, 0.00014147200000000013, 0.00014142999999999795, 0.00014108300000000018, 0.00014137499999999914, 0.00014116700000000107, 0.00014179100000000222, 0.00014149999999999927, 0.00014165299999999853, 0.00014157000000000058, 0.0001415409999999985, 0.0001413889999999987, 0.00014155600000000101, 0.0001411249999999989, 0.0001420829999999977, 0.00014126400000000205, 0.00014209699999999728, 0.00014123599999999945, 0.00014123699999999892, 0.00014206899999999814, 0.00014179199999999823, 0.0001418470000000005, 0.00014170799999999734, 0.00014122199999999988, 0.00014124999999999902, 0.00014184799999999997, 0.0001419730000000001, 0.00014197200000000063, 0.0001416669999999981, 0.00014205599999999804, 0.0001411660000000016, 0.0001410980000000027, 0.00014209700000000075, 0.00014111099999999932]</msg>
<status status="PASS" starttime="20201112 12:43:23.342" endtime="20201112 12:43:23.344"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.337" endtime="20201112 12:43:23.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.347" endtime="20201112 12:43:23.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.350" endtime="20201112 12:43:23.369"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.349" endtime="20201112 12:43:23.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.345" endtime="20201112 12:43:23.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.979" endtime="20201112 12:43:23.371"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:22.979" endtime="20201112 12:43:23.371"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.379" endtime="20201112 12:43:23.399"></status>
</kw>
<msg timestamp="20201112 12:43:23.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.378" endtime="20201112 12:43:23.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.401" endtime="20201112 12:43:23.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.403" endtime="20201112 12:43:23.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.375" endtime="20201112 12:43:23.405"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.373" endtime="20201112 12:43:23.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.412" endtime="20201112 12:43:23.699"></status>
</kw>
<msg timestamp="20201112 12:43:23.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.411" endtime="20201112 12:43:23.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021578486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.703" endtime="20201112 12:43:23.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.711" endtime="20201112 12:43:23.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.408" endtime="20201112 12:43:23.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.407" endtime="20201112 12:43:23.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:23.717" level="INFO">${RESULT} = [{'time': 0.021721458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014297199999999816, 'source_diff': 0.00014297199999999816}, {'time': 0.021879694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:23.714" endtime="20201112 12:43:23.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:23.732" level="INFO">${ACCURACY} = {'time': [0.021721458, 0.021879694, 0.022038181, 0.022198722, 0.022365111, 0.022537611, 0.022693056, 0.022853458, 0.023017, 0.023180472, 0.023341014, 0.023502417, 0.023666931, 0.023823333, 0.023984792...</msg>
<status status="PASS" starttime="20201112 12:43:23.718" endtime="20201112 12:43:23.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.736" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201112 12:43:23.735" endtime="20201112 12:43:23.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.739" level="INFO">VALUE: [0.00014297199999999816, 0.0001422080000000013, 0.0001424730000000006, 0.00014259700000000125, 0.00014290299999999978, 0.00014277799999999966, 0.0001426120000000003, 0.00014252699999999993, 0.00014222200000000088, 0.00014247200000000113, 0.00014265299999999953, 0.00014258400000000115, 0.00014259799999999725, 0.00014227699999999968, 0.00014263899999999996, 0.0001428890000000002, 0.00014290299999999978, 0.0001425409999999995, 0.0001426250000000004, 0.0001428470000000015, 0.00014272200000000138, 0.0001428059999999988, 0.00014277700000000018, 0.00014219400000000174, 0.00014216700000000207, 0.00014284699999999803, 0.00014272300000000085, 0.00014254100000000297, 0.00014273599999999748, 0.00014245800000000156, 0.0001429310000000024, 0.00014311199999999732, 0.00014266700000000257, 0.00014209700000000075, 0.00014211100000000032, 0.00014276400000000009, 0.00014255600000000201, 0.0001423889999999997, 0.0001428340000000014, 0.00014229100000000272, 0.000142138, 0.00014283299999999846, 0.00014263899999999996, 0.00014305600000000251, 0.00014213899999999946, 0.00014276400000000009, 0.00014201399999999934, 0.00014241699999999885, 0.00014225000000000002, 0.0001429999999999973]</msg>
<status status="PASS" starttime="20201112 12:43:23.737" endtime="20201112 12:43:23.739"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.733" endtime="20201112 12:43:23.740"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.742" endtime="20201112 12:43:23.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:23.745" endtime="20201112 12:43:23.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.744" endtime="20201112 12:43:23.765"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.740" endtime="20201112 12:43:23.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.372" endtime="20201112 12:43:23.766"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.371" endtime="20201112 12:43:23.766"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.775" endtime="20201112 12:43:23.795"></status>
</kw>
<msg timestamp="20201112 12:43:23.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.773" endtime="20201112 12:43:23.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:23.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:23.796" endtime="20201112 12:43:23.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.799" endtime="20201112 12:43:23.800"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.771" endtime="20201112 12:43:23.801"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.769" endtime="20201112 12:43:23.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:23.807" endtime="20201112 12:43:24.094"></status>
</kw>
<msg timestamp="20201112 12:43:24.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021500569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:23.806" endtime="20201112 12:43:24.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021500569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021644986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.099" endtime="20201112 12:43:24.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.107" endtime="20201112 12:43:24.108"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.803" endtime="20201112 12:43:24.109"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.802" endtime="20201112 12:43:24.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.113" level="INFO">${RESULT} = [{'time': 0.021644986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014441700000000085, 'source_diff': 0.00014441700000000085}, {'time': 0.021809264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:24.110" endtime="20201112 12:43:24.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.126" level="INFO">${ACCURACY} = {'time': [0.021644986, 0.021809264, 0.021971681, 0.022145139, 0.022308597, 0.022467139, 0.022633556, 0.022807056, 0.022964458, 0.023139889, 0.023297375, 0.023461903, 0.023634292, 0.023797806, 0.023957...</msg>
<status status="PASS" starttime="20201112 12:43:24.114" endtime="20201112 12:43:24.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.130" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.129" endtime="20201112 12:43:24.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.133" level="INFO">VALUE: [0.00014441700000000085, 0.0001439029999999973, 0.00014327800000000016, 0.00014311100000000132, 0.000144041000000001, 0.00014406999999999962, 0.00014386199999999807, 0.0001431669999999996, 0.0001438890000000012, 0.00014384699999999903, 0.00014397199999999916, 0.0001432089999999983, 0.0001436250000000014, 0.0001431669999999996, 0.0001437219999999989, 0.0001438189999999999, 0.00014376400000000109, 0.0001434730000000016, 0.00014390199999999784, 0.0001434020000000008, 0.00014309699999999828, 0.0001433059999999993, 0.00014329199999999973, 0.00014344399999999952, 0.00014344399999999952, 0.00014362499999999792, 0.00014344400000000299, 0.00014356899999999964, 0.00014318000000000317, 0.00014376400000000109, 0.0001433059999999993, 0.0001431250000000009, 0.00014384699999999903, 0.00014398599999999873, 0.0001439999999999983, 0.00014315300000000003, 0.00014388899999999774, 0.0001434860000000017, 0.0001431799999999997, 0.00014381999999999937, 0.00014347199999999866, 0.0001438189999999999, 0.00014379200000000023, 0.0001434999999999978, 0.00014372200000000238, 0.0001431799999999997, 0.0001438059999999998, 0.00014331999999999886, 0.00014373599999999848, 0.00014406999999999962]</msg>
<status status="PASS" starttime="20201112 12:43:24.131" endtime="20201112 12:43:24.133"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.127" endtime="20201112 12:43:24.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.136" endtime="20201112 12:43:24.138"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.140" endtime="20201112 12:43:24.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.138" endtime="20201112 12:43:24.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.135" endtime="20201112 12:43:24.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.767" endtime="20201112 12:43:24.160"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:23.767" endtime="20201112 12:43:24.161"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.169" endtime="20201112 12:43:24.189"></status>
</kw>
<msg timestamp="20201112 12:43:24.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.168" endtime="20201112 12:43:24.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.191" endtime="20201112 12:43:24.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.193" endtime="20201112 12:43:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.165" endtime="20201112 12:43:24.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.163" endtime="20201112 12:43:24.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.202" endtime="20201112 12:43:24.489"></status>
</kw>
<msg timestamp="20201112 12:43:24.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.200" endtime="20201112 12:43:24.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021653042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021798653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.493" endtime="20201112 12:43:24.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.501" endtime="20201112 12:43:24.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.198" endtime="20201112 12:43:24.503"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.196" endtime="20201112 12:43:24.504"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.508" level="INFO">${RESULT} = [{'time': 0.021798653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014561100000000035, 'source_diff': 0.00014561100000000035}, {'time': 0.021964806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:24.504" endtime="20201112 12:43:24.508"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.521" level="INFO">${ACCURACY} = {'time': [0.021798653, 0.021964806, 0.022122361, 0.022282833, 0.022443208, 0.022619681, 0.022778236, 0.022954583, 0.023114125, 0.023281528, 0.023441069, 0.023616472, 0.023793806, 0.023960347, 0.024128...</msg>
<status status="PASS" starttime="20201112 12:43:24.509" endtime="20201112 12:43:24.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.525" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.524" endtime="20201112 12:43:24.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.527" level="INFO">VALUE: [0.00014561100000000035, 0.0001445280000000014, 0.00014433299999999996, 0.000144138999999998, 0.0001447219999999999, 0.00014458399999999968, 0.00014440300000000128, 0.00014445800000000009, 0.00014415299999999756, 0.00014423599999999898, 0.00014416599999999766, 0.00014447199999999966, 0.00014487499999999917, 0.00014430500000000082, 0.00014493000000000145, 0.00014477799999999819, 0.00014479200000000123, 0.0001447089999999998, 0.0001448479999999995, 0.00014504099999999853, 0.00014445899999999956, 0.00014512499999999942, 0.00014483300000000046, 0.00014415300000000103, 0.00014465299999999806, 0.00014482000000000037, 0.0001445830000000002, 0.0001445830000000002, 0.00014420799999999984, 0.00014462499999999892, 0.00014416600000000113, 0.0001450830000000007, 0.00014433399999999943, 0.00014434699999999953, 0.00014415200000000156, 0.00014429200000000073, 0.00014477799999999819, 0.00014415300000000103, 0.0001448340000000034, 0.000144138999999998, 0.00014443100000000042, 0.0001445549999999976, 0.00014429200000000073, 0.0001445280000000014, 0.00014406999999999962, 0.00014416600000000113, 0.00014468100000000067, 0.00014424999999999855, 0.0001441800000000007, 0.00014502700000000243]</msg>
<status status="PASS" starttime="20201112 12:43:24.526" endtime="20201112 12:43:24.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.521" endtime="20201112 12:43:24.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.531" endtime="20201112 12:43:24.532"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.534" endtime="20201112 12:43:24.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.533" endtime="20201112 12:43:24.554"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.529" endtime="20201112 12:43:24.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.161" endtime="20201112 12:43:24.555"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.161" endtime="20201112 12:43:24.555"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.564" endtime="20201112 12:43:24.584"></status>
</kw>
<msg timestamp="20201112 12:43:24.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.562" endtime="20201112 12:43:24.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.585" endtime="20201112 12:43:24.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.588" endtime="20201112 12:43:24.589"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.560" endtime="20201112 12:43:24.590"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.558" endtime="20201112 12:43:24.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.597" endtime="20201112 12:43:24.882"></status>
</kw>
<msg timestamp="20201112 12:43:24.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.595" endtime="20201112 12:43:24.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021568611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021714347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.886" endtime="20201112 12:43:24.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.894" endtime="20201112 12:43:24.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.593" endtime="20201112 12:43:24.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.591" endtime="20201112 12:43:24.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:24.900" level="INFO">${RESULT} = [{'time': 0.021714347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000145735999999997, 'source_diff': 0.000145735999999997}, {'time': 0.021891472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201112 12:43:24.897" endtime="20201112 12:43:24.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:24.913" level="INFO">${ACCURACY} = {'time': [0.021714347, 0.021891472, 0.022067903, 0.022228403, 0.022398889, 0.022571431, 0.02273975, 0.022906264, 0.023074694, 0.023239181, 0.023411597, 0.023581111, 0.023753458, 0.023914958, 0.0240754...</msg>
<status status="PASS" starttime="20201112 12:43:24.901" endtime="20201112 12:43:24.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.918" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201112 12:43:24.917" endtime="20201112 12:43:24.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.920" level="INFO">VALUE: [0.000145735999999997, 0.00014554099999999903, 0.0001455419999999985, 0.00014604200000000248, 0.000145445000000001, 0.00014566699999999863, 0.000145832999999998, 0.0001454999999999998, 0.00014554099999999903, 0.00014541700000000185, 0.00014548600000000023, 0.00014601399999999987, 0.0001457220000000009, 0.00014583300000000146, 0.00014598599999999726, 0.00014587500000000017, 0.00014507000000000062, 0.00014587500000000017, 0.0001459450000000015, 0.00014534700000000053, 0.00014572300000000038, 0.00014551399999999937, 0.00014565299999999906, 0.00014511099999999985, 0.00014559800000000025, 0.00014512499999999942, 0.00014602799999999944, 0.0001450969999999968, 0.00014545900000000056, 0.00014533300000000096, 0.00014595799999999812, 0.00014563800000000002, 0.00014538899999999924, 0.00014529099999999878, 0.00014594399999999855, 0.00014565299999999906, 0.00014547200000000066, 0.00014563900000000296, 0.00014562499999999992, 0.00014565299999999906, 0.00014586200000000007, 0.00014524999999999955, 0.000145832999999998, 0.00014576399999999962, 0.00014570799999999787, 0.00014527799999999869, 0.00014541700000000185, 0.00014580499999999885, 0.00014552699999999946, 0.0001454029999999988]</msg>
<status status="PASS" starttime="20201112 12:43:24.919" endtime="20201112 12:43:24.921"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.914" endtime="20201112 12:43:24.921"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.923" endtime="20201112 12:43:24.925"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:24.927" endtime="20201112 12:43:24.946"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.925" endtime="20201112 12:43:24.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.922" endtime="20201112 12:43:24.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.556" endtime="20201112 12:43:24.947"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.555" endtime="20201112 12:43:24.948"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.956" endtime="20201112 12:43:24.976"></status>
</kw>
<msg timestamp="20201112 12:43:24.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.954" endtime="20201112 12:43:24.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:24.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:24.978" endtime="20201112 12:43:24.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.980" endtime="20201112 12:43:24.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.952" endtime="20201112 12:43:24.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.950" endtime="20201112 12:43:24.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:24.989" endtime="20201112 12:43:25.275"></status>
</kw>
<msg timestamp="20201112 12:43:25.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:24.988" endtime="20201112 12:43:25.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021527667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.279" endtime="20201112 12:43:25.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.287" endtime="20201112 12:43:25.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.985" endtime="20201112 12:43:25.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.983" endtime="20201112 12:43:25.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.293" level="INFO">${RESULT} = [{'time': 0.021674556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014688900000000074, 'source_diff': 0.00014688900000000074}, {'time': 0.021846653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:25.290" endtime="20201112 12:43:25.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.307" level="INFO">${ACCURACY} = {'time': [0.021674556, 0.021846653, 0.022025069, 0.022184569, 0.022356097, 0.022521472, 0.022688014, 0.022863389, 0.023031958, 0.023207347, 0.023367736, 0.023543236, 0.023716583, 0.023885097, 0.024058...</msg>
<status status="PASS" starttime="20201112 12:43:25.294" endtime="20201112 12:43:25.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.312" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.311" endtime="20201112 12:43:25.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.314" level="INFO">VALUE: [0.00014688900000000074, 0.000146139, 0.00014620800000000184, 0.00014666600000000016, 0.00014649999999999733, 0.00014665300000000006, 0.0001464719999999982, 0.00014691699999999988, 0.0001466520000000006, 0.00014665300000000006, 0.0001465419999999995, 0.0001464029999999998, 0.00014675000000000105, 0.00014619400000000227, 0.000146139, 0.00014615299999999956, 0.00014676400000000062, 0.00014658400000000169, 0.00014604099999999953, 0.00014609700000000128, 0.00014688800000000127, 0.00014608299999999824, 0.0001469580000000026, 0.00014677800000000019, 0.0001466939999999993, 0.0001466939999999993, 0.0001469030000000003, 0.0001460549999999991, 0.00014679199999999976, 0.00014708400000000219, 0.0001465000000000008, 0.00014615299999999956, 0.00014684799999999804, 0.0001469719999999987, 0.00014611100000000085, 0.00014626400000000012, 0.000146139, 0.00014619500000000174, 0.00014629199999999926, 0.00014684700000000203, 0.0001466520000000006, 0.00014609800000000076, 0.00014651400000000037, 0.00014695799999999912, 0.0001466390000000005, 0.00014688900000000074, 0.0001465000000000008, 0.00014670800000000234, 0.0001463329999999985, 0.00014706899999999967]</msg>
<status status="PASS" starttime="20201112 12:43:25.313" endtime="20201112 12:43:25.315"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.308" endtime="20201112 12:43:25.315"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.318" endtime="20201112 12:43:25.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.321" endtime="20201112 12:43:25.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.319" endtime="20201112 12:43:25.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.316" endtime="20201112 12:43:25.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.949" endtime="20201112 12:43:25.342"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:24.948" endtime="20201112 12:43:25.342"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.350" endtime="20201112 12:43:25.371"></status>
</kw>
<msg timestamp="20201112 12:43:25.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.349" endtime="20201112 12:43:25.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.372" endtime="20201112 12:43:25.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.374" endtime="20201112 12:43:25.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.346" endtime="20201112 12:43:25.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.344" endtime="20201112 12:43:25.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.383" endtime="20201112 12:43:25.670"></status>
</kw>
<msg timestamp="20201112 12:43:25.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021460292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.382" endtime="20201112 12:43:25.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021460292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.674" endtime="20201112 12:43:25.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.682" endtime="20201112 12:43:25.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.379" endtime="20201112 12:43:25.684"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.378" endtime="20201112 12:43:25.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:25.688" level="INFO">${RESULT} = [{'time': 0.021608556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014826400000000212, 'source_diff': 0.00014826400000000212}, {'time': 0.021783708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:25.685" endtime="20201112 12:43:25.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:25.701" level="INFO">${ACCURACY} = {'time': [0.021608556, 0.021783708, 0.021960069, 0.022128528, 0.022300042, 0.022465417, 0.022642833, 0.022815347, 0.022980694, 0.023161097, 0.023324556, 0.023496069, 0.023675472, 0.023843847, 0.024013...</msg>
<status status="PASS" starttime="20201112 12:43:25.689" endtime="20201112 12:43:25.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.705" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201112 12:43:25.704" endtime="20201112 12:43:25.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.708" level="INFO">VALUE: [0.00014826400000000212, 0.00014756900000000017, 0.00014727699999999774, 0.00014748600000000223, 0.00014804199999999754, 0.00014783400000000294, 0.00014802700000000196, 0.00014779100000000128, 0.00014748599999999876, 0.00014786099999999913, 0.00014744499999999952, 0.0001480000000000023, 0.00014718000000000023, 0.0001477220000000029, 0.00014786200000000208, 0.00014781900000000042, 0.00014725000000000155, 0.00014780600000000033, 0.000147139000000001, 0.00014751400000000137, 0.00014765300000000106, 0.00014786099999999913, 0.00014752799999999747, 0.0001474030000000008, 0.00014744400000000005, 0.00014787500000000217, 0.0001471939999999998, 0.00014794500000000002, 0.00014794500000000002, 0.00014808300000000024, 0.00014708299999999924, 0.00014726400000000112, 0.00014758299999999974, 0.00014770899999999934, 0.0001479030000000013, 0.0001475550000000006, 0.00014768000000000073, 0.00014720799999999937, 0.0001472229999999984, 0.00014769499999999977, 0.00014745799999999962, 0.00014730599999999983, 0.00014802800000000144, 0.00014763800000000202, 0.0001474719999999992, 0.000147348000000002, 0.0001472090000000023, 0.0001476529999999976, 0.00014744499999999952, 0.0001475000000000018]</msg>
<status status="PASS" starttime="20201112 12:43:25.706" endtime="20201112 12:43:25.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.702" endtime="20201112 12:43:25.709"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.711" endtime="20201112 12:43:25.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:25.715" endtime="20201112 12:43:25.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.713" endtime="20201112 12:43:25.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.710" endtime="20201112 12:43:25.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.343" endtime="20201112 12:43:25.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.342" endtime="20201112 12:43:25.736"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.744" endtime="20201112 12:43:25.764"></status>
</kw>
<msg timestamp="20201112 12:43:25.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.743" endtime="20201112 12:43:25.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:25.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:25.766" endtime="20201112 12:43:25.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.768" endtime="20201112 12:43:25.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.740" endtime="20201112 12:43:25.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.738" endtime="20201112 12:43:25.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:25.777" endtime="20201112 12:43:26.064"></status>
</kw>
<msg timestamp="20201112 12:43:26.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021466903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:25.776" endtime="20201112 12:43:26.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021466903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021615972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.068" endtime="20201112 12:43:26.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.076" endtime="20201112 12:43:26.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.773" endtime="20201112 12:43:26.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.771" endtime="20201112 12:43:26.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.083" level="INFO">${RESULT} = [{'time': 0.021615972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014906900000000167, 'source_diff': 0.00014906900000000167}, {'time': 0.021795194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.079" endtime="20201112 12:43:26.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.095" level="INFO">${ACCURACY} = {'time': [0.021615972, 0.021795194, 0.021969542, 0.022141972, 0.022303431, 0.022475931, 0.022642292, 0.022805847, 0.022985097, 0.023153653, 0.023320111, 0.0234945, 0.023657028, 0.023824486, 0.02399291...</msg>
<status status="PASS" starttime="20201112 12:43:26.084" endtime="20201112 12:43:26.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.100" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.099" endtime="20201112 12:43:26.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.102" level="INFO">VALUE: [0.00014906900000000167, 0.0001485970000000003, 0.00014838900000000224, 0.00014863899999999902, 0.00014862499999999945, 0.00014897300000000016, 0.0001485000000000028, 0.00014816600000000166, 0.00014894399999999808, 0.00014877799999999872, 0.00014862499999999945, 0.00014902800000000244, 0.0001484030000000018, 0.00014894399999999808, 0.0001483749999999992, 0.00014827799999999822, 0.00014836099999999963, 0.00014891700000000188, 0.0001481520000000021, 0.00014826399999999865, 0.00014891599999999894, 0.00014845800000000062, 0.00014881900000000142, 0.0001481659999999982, 0.00014837500000000267, 0.00014816600000000166, 0.00014831900000000092, 0.00014866699999999816, 0.000148429999999998, 0.00014895799999999765, 0.0001490139999999994, 0.00014863899999999902, 0.00014861099999999988, 0.00014813899999999852, 0.0001484030000000018, 0.0001484030000000018, 0.0001489590000000006, 0.00014876400000000262, 0.00014876399999999915, 0.00014834799999999954, 0.00014848599999999976, 0.00014808300000000024, 0.00014824999999999908, 0.00014830600000000083, 0.00014813899999999852, 0.00014883400000000047, 0.00014820800000000037, 0.00014833399999999997, 0.00014858300000000074, 0.00014816699999999766]</msg>
<status status="PASS" starttime="20201112 12:43:26.101" endtime="20201112 12:43:26.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.096" endtime="20201112 12:43:26.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.133" endtime="20201112 12:43:26.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.136" endtime="20201112 12:43:26.155"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.135" endtime="20201112 12:43:26.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.131" endtime="20201112 12:43:26.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.737" endtime="20201112 12:43:26.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:25.736" endtime="20201112 12:43:26.157"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.165" endtime="20201112 12:43:26.186"></status>
</kw>
<msg timestamp="20201112 12:43:26.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.164" endtime="20201112 12:43:26.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.187" endtime="20201112 12:43:26.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.190" endtime="20201112 12:43:26.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.161" endtime="20201112 12:43:26.192"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.159" endtime="20201112 12:43:26.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.199" endtime="20201112 12:43:26.485"></status>
</kw>
<msg timestamp="20201112 12:43:26.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.197" endtime="20201112 12:43:26.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021571444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021721792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.489" endtime="20201112 12:43:26.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.497" endtime="20201112 12:43:26.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.195" endtime="20201112 12:43:26.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.193" endtime="20201112 12:43:26.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.503" level="INFO">${RESULT} = [{'time': 0.021721792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015034800000000154, 'source_diff': 0.00015034800000000154}, {'time': 0.021903958, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.500" endtime="20201112 12:43:26.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.516" level="INFO">${ACCURACY} = {'time': [0.021721792, 0.021903958, 0.022073347, 0.022247833, 0.022426306, 0.022608722, 0.022786083, 0.022960514, 0.023126972, 0.023291528, 0.023466833, 0.023634306, 0.023800764, 0.023980208, 0.024160...</msg>
<status status="PASS" starttime="20201112 12:43:26.504" endtime="20201112 12:43:26.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.521" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.520" endtime="20201112 12:43:26.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.523" level="INFO">VALUE: [0.00015034800000000154, 0.00014965200000000012, 0.00014995799999999865, 0.000149139000000003, 0.00014966699999999916, 0.000149833000000002, 0.0001494859999999973, 0.0001493330000000015, 0.00014952799999999947, 0.00015012499999999748, 0.00014938899999999977, 0.00014927799999999922, 0.00014918099999999823, 0.00014972199999999797, 0.00014954099999999956, 0.00014983299999999852, 0.00014915300000000256, 0.00014927699999999974, 0.00014927799999999922, 0.00014958399999999775, 0.00014987499999999723, 0.00014975000000000058, 0.00014927699999999974, 0.0001495139999999999, 0.0001497919999999993, 0.00015004100000000006, 0.00014955499999999913, 0.00014951300000000042, 0.00014945899999999762, 0.00014983299999999852, 0.0001496949999999983, 0.00014913899999999952, 0.00014980599999999886, 0.0001498620000000006, 0.00014927699999999974, 0.00014940199999999987, 0.00014908299999999777, 0.0001493330000000015, 0.0001493750000000002, 0.00014990200000000037, 0.00014981899999999895, 0.0001499169999999994, 0.00014926300000000017, 0.0001494169999999989, 0.00014947199999999772, 0.00014908300000000124, 0.0001492230000000004, 0.0001496659999999997, 0.00014973599999999754, 0.00014952800000000294]</msg>
<status status="PASS" starttime="20201112 12:43:26.522" endtime="20201112 12:43:26.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.517" endtime="20201112 12:43:26.524"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.527" endtime="20201112 12:43:26.528"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.530" endtime="20201112 12:43:26.549"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.528" endtime="20201112 12:43:26.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.525" endtime="20201112 12:43:26.550"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.158" endtime="20201112 12:43:26.551"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.157" endtime="20201112 12:43:26.551"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.559" endtime="20201112 12:43:26.580"></status>
</kw>
<msg timestamp="20201112 12:43:26.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.558" endtime="20201112 12:43:26.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.581" endtime="20201112 12:43:26.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.584" endtime="20201112 12:43:26.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.555" endtime="20201112 12:43:26.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.553" endtime="20201112 12:43:26.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.593" endtime="20201112 12:43:26.878"></status>
</kw>
<msg timestamp="20201112 12:43:26.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.591" endtime="20201112 12:43:26.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021603944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021755653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:26.882" endtime="20201112 12:43:26.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.890" endtime="20201112 12:43:26.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.589" endtime="20201112 12:43:26.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.587" endtime="20201112 12:43:26.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:26.897" level="INFO">${RESULT} = [{'time': 0.021755653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015170899999999987, 'source_diff': 0.00015170899999999987}, {'time': 0.021926708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:26.894" endtime="20201112 12:43:26.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:26.911" level="INFO">${ACCURACY} = {'time': [0.021755653, 0.021926708, 0.022098208, 0.022276514, 0.022455986, 0.022639375, 0.02281075, 0.02298925, 0.023165667, 0.023345139, 0.023519528, 0.023688042, 0.023859444, 0.024041833, 0.02421633...</msg>
<status status="PASS" starttime="20201112 12:43:26.898" endtime="20201112 12:43:26.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.915" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201112 12:43:26.915" endtime="20201112 12:43:26.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.918" level="INFO">VALUE: [0.00015170899999999987, 0.00015076400000000115, 0.00015081899999999995, 0.00015076400000000115, 0.00015100000000000183, 0.00015087499999999823, 0.00015069399999999983, 0.00015094400000000008, 0.0001504590000000021, 0.00015068099999999973, 0.00015027800000000022, 0.00015093099999999998, 0.0001510270000000015, 0.00015017999999999976, 0.00015099999999999836, 0.00015022200000000194, 0.0001500689999999992, 0.00015083299999999952, 0.00015054100000000056, 0.0001502369999999975, 0.00015062499999999798, 0.0001510690000000002, 0.00015026400000000065, 0.00015054200000000004, 0.00015075000000000158, 0.00015098600000000226, 0.00015025000000000108, 0.0001503469999999986, 0.00015065299999999712, 0.00015066700000000016, 0.0001500970000000018, 0.00015009699999999834, 0.00015047199999999872, 0.0001503889999999973, 0.0001505140000000009, 0.00015008299999999877, 0.00015072199999999897, 0.00015088900000000127, 0.00015022199999999847, 0.00015090300000000084, 0.00015077800000000072, 0.0001509439999999966, 0.00015099999999999836, 0.00015088900000000127, 0.00015081899999999995, 0.00015063900000000102, 0.00015008300000000224, 0.00015009699999999834, 0.0001507920000000003, 0.00015020900000000184]</msg>
<status status="PASS" starttime="20201112 12:43:26.917" endtime="20201112 12:43:26.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.912" endtime="20201112 12:43:26.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.921" endtime="20201112 12:43:26.923"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:26.925" endtime="20201112 12:43:26.944"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.923" endtime="20201112 12:43:26.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.920" endtime="20201112 12:43:26.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.552" endtime="20201112 12:43:26.945"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.551" endtime="20201112 12:43:26.946"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.954" endtime="20201112 12:43:26.975"></status>
</kw>
<msg timestamp="20201112 12:43:26.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.953" endtime="20201112 12:43:26.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:26.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:26.976" endtime="20201112 12:43:26.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.979" endtime="20201112 12:43:26.980"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.950" endtime="20201112 12:43:26.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.948" endtime="20201112 12:43:26.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:26.987" endtime="20201112 12:43:27.274"></status>
</kw>
<msg timestamp="20201112 12:43:27.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02150775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:26.986" endtime="20201112 12:43:27.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02150775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021659431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:27.278" endtime="20201112 12:43:27.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.286" endtime="20201112 12:43:27.288"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.983" endtime="20201112 12:43:27.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.982" endtime="20201112 12:43:27.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.293" level="INFO">${RESULT} = [{'time': 0.021659431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015168100000000073, 'source_diff': 0.00015168100000000073}, {'time': 0.021843583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.290" endtime="20201112 12:43:27.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.306" level="INFO">${ACCURACY} = {'time': [0.021659431, 0.021843583, 0.022025111, 0.022202417, 0.022378889, 0.02254825, 0.022730806, 0.022908194, 0.023081653, 0.023253083, 0.023430569, 0.023600958, 0.023771472, 0.023947833, 0.0241233...</msg>
<status status="PASS" starttime="20201112 12:43:27.294" endtime="20201112 12:43:27.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.310" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.309" endtime="20201112 12:43:27.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.312" level="INFO">VALUE: [0.00015168100000000073, 0.00015163899999999855, 0.00015181900000000095, 0.0001513889999999983, 0.00015172199999999997, 0.00015181899999999748, 0.00015190299999999837, 0.00015177699999999877, 0.00015186099999999966, 0.0001520140000000024, 0.00015149999999999886, 0.0001518889999999988, 0.00015201399999999893, 0.00015131900000000045, 0.00015140200000000187, 0.00015112500000000195, 0.0001518880000000028, 0.0001513339999999995, 0.00015165299999999812, 0.00015113900000000152, 0.00015144400000000058, 0.00015165299999999812, 0.00015126399999999818, 0.0001513889999999983, 0.0001520279999999985, 0.0001516530000000016, 0.000151430000000001, 0.00015188799999999933, 0.0001519300000000015, 0.0001517499999999991, 0.00015106999999999968, 0.00015145800000000015, 0.00015181900000000095, 0.0001521109999999999, 0.000151834, 0.0001513469999999996, 0.00015134799999999907, 0.00015120899999999937, 0.00015207000000000068, 0.00015143100000000048, 0.00015108299999999977, 0.00015151399999999843, 0.00015118100000000023, 0.0001510690000000002, 0.00015191699999999794, 0.00015127799999999775, 0.00015109800000000229, 0.00015180600000000086, 0.00015140299999999787, 0.00015209700000000034]</msg>
<status status="PASS" starttime="20201112 12:43:27.311" endtime="20201112 12:43:27.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.307" endtime="20201112 12:43:27.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.316" endtime="20201112 12:43:27.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.320" endtime="20201112 12:43:27.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.318" endtime="20201112 12:43:27.339"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.314" endtime="20201112 12:43:27.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.947" endtime="20201112 12:43:27.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:26.946" endtime="20201112 12:43:27.340"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.349" endtime="20201112 12:43:27.369"></status>
</kw>
<msg timestamp="20201112 12:43:27.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.347" endtime="20201112 12:43:27.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.371" endtime="20201112 12:43:27.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.373" endtime="20201112 12:43:27.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.345" endtime="20201112 12:43:27.375"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.343" endtime="20201112 12:43:27.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.382" endtime="20201112 12:43:27.668"></status>
</kw>
<msg timestamp="20201112 12:43:27.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.381" endtime="20201112 12:43:27.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021648222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:27.673" endtime="20201112 12:43:27.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.681" endtime="20201112 12:43:27.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.378" endtime="20201112 12:43:27.683"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.376" endtime="20201112 12:43:27.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:27.687" level="INFO">${RESULT} = [{'time': 0.021648222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015358300000000227, 'source_diff': 0.00015358300000000227}, {'time': 0.021824417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:27.684" endtime="20201112 12:43:27.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:27.700" level="INFO">${ACCURACY} = {'time': [0.021648222, 0.021824417, 0.021990944, 0.022172347, 0.022352833, 0.022535194, 0.022718639, 0.022899083, 0.023083486, 0.023250944, 0.023436361, 0.023605833, 0.023781292, 0.023960764, 0.024131...</msg>
<status status="PASS" starttime="20201112 12:43:27.688" endtime="20201112 12:43:27.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.704" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201112 12:43:27.703" endtime="20201112 12:43:27.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.707" level="INFO">VALUE: [0.00015358300000000227, 0.00015304199999999907, 0.00015237499999999973, 0.00015298599999999732, 0.0001523470000000006, 0.00015295800000000165, 0.00015215299999999862, 0.00015291599999999947, 0.0001522080000000009, 0.00015237499999999973, 0.0001528889999999998, 0.00015283299999999805, 0.0001523059999999979, 0.0001528889999999998, 0.0001521669999999982, 0.00015230499999999841, 0.00015251399999999943, 0.000152527999999999, 0.00015290300000000284, 0.00015288800000000033, 0.0001530279999999995, 0.0001529860000000008, 0.00015204199999999807, 0.0001525140000000029, 0.0001522499999999996, 0.00015232000000000093, 0.0001522499999999996, 0.00015276399999999968, 0.0001529439999999986, 0.00015213899999999905, 0.00015237499999999973, 0.00015237499999999973, 0.0001525699999999977, 0.00015233300000000102, 0.00015282000000000143, 0.00015280499999999891, 0.00015300000000000036, 0.00015218099999999776, 0.00015240299999999887, 0.00015227800000000222, 0.00015236100000000016, 0.00015286200000000014, 0.00015287500000000023, 0.00015247200000000072, 0.00015269400000000183, 0.00015231899999999798, 0.00015287500000000023, 0.00015276399999999968, 0.00015238900000000277, 0.00015255599999999814]</msg>
<status status="PASS" starttime="20201112 12:43:27.705" endtime="20201112 12:43:27.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.701" endtime="20201112 12:43:27.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.710" endtime="20201112 12:43:27.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:27.714" endtime="20201112 12:43:27.733"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.712" endtime="20201112 12:43:27.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.709" endtime="20201112 12:43:27.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.341" endtime="20201112 12:43:27.734"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.341" endtime="20201112 12:43:27.734"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.743" endtime="20201112 12:43:27.764"></status>
</kw>
<msg timestamp="20201112 12:43:27.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.742" endtime="20201112 12:43:27.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:27.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:27.765" endtime="20201112 12:43:27.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.768" endtime="20201112 12:43:27.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.739" endtime="20201112 12:43:27.770"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.737" endtime="20201112 12:43:27.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:27.776" endtime="20201112 12:43:28.063"></status>
</kw>
<msg timestamp="20201112 12:43:28.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:27.775" endtime="20201112 12:43:28.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0216465, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021800139, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:28.067" endtime="20201112 12:43:28.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.075" endtime="20201112 12:43:28.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.772" endtime="20201112 12:43:28.078"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.771" endtime="20201112 12:43:28.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.082" level="INFO">${RESULT} = [{'time': 0.021800139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015363900000000055, 'source_diff': 0.00015363900000000055}, {'time': 0.021976375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:28.079" endtime="20201112 12:43:28.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.095" level="INFO">${ACCURACY} = {'time': [0.021800139, 0.021976375, 0.022142792, 0.022313347, 0.022479722, 0.022650264, 0.022822653, 0.023003056, 0.0231785, 0.023350028, 0.023526389, 0.023699833, 0.023885319, 0.024067597, 0.02424809...</msg>
<status status="PASS" starttime="20201112 12:43:28.083" endtime="20201112 12:43:28.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.099" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.098" endtime="20201112 12:43:28.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.102" level="INFO">VALUE: [0.00015363900000000055, 0.0001533890000000003, 0.00015320900000000137, 0.00015359700000000184, 0.00015356899999999923, 0.0001535829999999988, 0.0001539029999999969, 0.0001531950000000018, 0.00015318100000000223, 0.00015395899999999865, 0.0001534860000000013, 0.00015369399999999936, 0.00015327700000000027, 0.00015351400000000043, 0.00015327799999999975, 0.0001533470000000016, 0.00015387499999999776, 0.0001531799999999993, 0.00015333399999999803, 0.00015369400000000283, 0.00015395799999999918, 0.00015331900000000245, 0.00015319399999999886, 0.00015319499999999833, 0.0001530829999999983, 0.00015390300000000037, 0.00015369499999999883, 0.00015381899999999948, 0.0001539439999999996, 0.0001535829999999988, 0.00015333299999999855, 0.00015318000000000276, 0.00015365200000000065, 0.00015398599999999832, 0.00015313900000000005, 0.00015398599999999832, 0.0001539999999999979, 0.00015393000000000004, 0.0001536669999999997, 0.00015365300000000012, 0.0001538059999999994, 0.0001537219999999985, 0.00015326400000000018, 0.00015395899999999865, 0.00015331899999999898, 0.00015345800000000215, 0.00015394500000000255, 0.00015374999999999764, 0.00015377799999999678, 0.00015313900000000005]</msg>
<status status="PASS" starttime="20201112 12:43:28.100" endtime="20201112 12:43:28.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.096" endtime="20201112 12:43:28.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.105" endtime="20201112 12:43:28.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.108" endtime="20201112 12:43:28.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.107" endtime="20201112 12:43:28.128"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.103" endtime="20201112 12:43:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.735" endtime="20201112 12:43:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:27.735" endtime="20201112 12:43:28.129"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.138" endtime="20201112 12:43:28.158"></status>
</kw>
<msg timestamp="20201112 12:43:28.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.136" endtime="20201112 12:43:28.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.160" endtime="20201112 12:43:28.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.162" endtime="20201112 12:43:28.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.134" endtime="20201112 12:43:28.164"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.132" endtime="20201112 12:43:28.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.171" endtime="20201112 12:43:28.458"></status>
</kw>
<msg timestamp="20201112 12:43:28.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.170" endtime="20201112 12:43:28.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021522097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021676917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.462" endtime="20201112 12:43:28.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.470" endtime="20201112 12:43:28.471"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.167" endtime="20201112 12:43:28.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.165" endtime="20201112 12:43:28.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.476" level="INFO">${RESULT} = [{'time': 0.021676917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015481999999999996, 'source_diff': 0.00015481999999999996}, {'time': 0.021847069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:28.473" endtime="20201112 12:43:28.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.490" level="INFO">${ACCURACY} = {'time': [0.021676917, 0.021847069, 0.022015556, 0.022194958, 0.022366444, 0.022534861, 0.022711222, 0.022882736, 0.02306925, 0.023242639, 0.023419, 0.023586472, 0.023760917, 0.023937347, 0.024123736,...</msg>
<status status="PASS" starttime="20201112 12:43:28.477" endtime="20201112 12:43:28.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.495" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.494" endtime="20201112 12:43:28.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.497" level="INFO">VALUE: [0.00015481999999999996, 0.00015450000000000186, 0.00015465299999999765, 0.00015501400000000193, 0.00015454099999999762, 0.00015462499999999851, 0.0001544440000000001, 0.00015455500000000066, 0.0001543059999999999, 0.0001549310000000005, 0.0001541670000000002, 0.00015463900000000155, 0.00015408399999999878, 0.00015451400000000143, 0.00015481900000000048, 0.0001544860000000023, 0.0001546110000000024, 0.00015455500000000066, 0.00015484699999999962, 0.0001549860000000028, 0.0001549999999999989, 0.00015411099999999844, 0.00015419399999999986, 0.00015484699999999962, 0.00015506900000000073, 0.00015441700000000044, 0.00015474999999999864, 0.00015455500000000066, 0.00015456900000000023, 0.00015404200000000007, 0.00015487500000000223, 0.00015436200000000164, 0.0001543890000000013, 0.00015423599999999857, 0.00015423600000000204, 0.00015455500000000066, 0.00015423599999999857, 0.00015404200000000007, 0.00015484800000000257, 0.00015420799999999943, 0.00015429200000000032, 0.0001547219999999995, 0.00015445800000000315, 0.00015469400000000036, 0.0001549029999999979, 0.00015456899999999676, 0.00015413900000000105, 0.00015415199999999768, 0.0001541670000000002, 0.00015463899999999808]</msg>
<status status="PASS" starttime="20201112 12:43:28.496" endtime="20201112 12:43:28.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.491" endtime="20201112 12:43:28.499"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.501" endtime="20201112 12:43:28.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.505" endtime="20201112 12:43:28.524"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.503" endtime="20201112 12:43:28.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.499" endtime="20201112 12:43:28.525"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.130" endtime="20201112 12:43:28.526"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.130" endtime="20201112 12:43:28.526"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.534" endtime="20201112 12:43:28.555"></status>
</kw>
<msg timestamp="20201112 12:43:28.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.533" endtime="20201112 12:43:28.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.556" endtime="20201112 12:43:28.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.559" endtime="20201112 12:43:28.560"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.530" endtime="20201112 12:43:28.561"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.528" endtime="20201112 12:43:28.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.568" endtime="20201112 12:43:28.854"></status>
</kw>
<msg timestamp="20201112 12:43:28.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.566" endtime="20201112 12:43:28.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021580597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021737222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.858" endtime="20201112 12:43:28.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.866" endtime="20201112 12:43:28.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.564" endtime="20201112 12:43:28.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.562" endtime="20201112 12:43:28.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:28.872" level="INFO">${RESULT} = [{'time': 0.021737222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015662500000000051, 'source_diff': 0.00015662500000000051}, {'time': 0.021910347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:28.869" endtime="20201112 12:43:28.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:28.885" level="INFO">${ACCURACY} = {'time': [0.021737222, 0.021910347, 0.022095806, 0.022273292, 0.022442694, 0.022627083, 0.022806556, 0.022982931, 0.023163347, 0.023348833, 0.023535208, 0.023719556, 0.023901944, 0.024078486, 0.024255...</msg>
<status status="PASS" starttime="20201112 12:43:28.873" endtime="20201112 12:43:28.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.890" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201112 12:43:28.889" endtime="20201112 12:43:28.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.892" level="INFO">VALUE: [0.00015662500000000051, 0.00015523599999999957, 0.00015602799999999903, 0.0001558480000000001, 0.0001555830000000008, 0.00015588899999999933, 0.0001556809999999978, 0.00015537500000000273, 0.00015506900000000073, 0.00015513899999999858, 0.00015542999999999807, 0.0001555700000000007, 0.00015548599999999982, 0.00015523599999999957, 0.00015573600000000007, 0.00015519500000000033, 0.00015591699999999847, 0.00015580599999999792, 0.00015595800000000118, 0.00015609700000000087, 0.00015515199999999868, 0.00015554200000000157, 0.00015588899999999933, 0.00015587499999999976, 0.0001557090000000004, 0.00015545800000000068, 0.0001557220000000005, 0.0001553609999999997, 0.0001560700000000012, 0.00015538899999999883, 0.00015569400000000136, 0.00015548599999999982, 0.00015520800000000043, 0.0001557090000000004, 0.00015591600000000247, 0.00015527700000000227, 0.00015520800000000043, 0.00015529200000000132, 0.00015597200000000075, 0.0001557639999999992, 0.00015518100000000076, 0.00015588899999999933, 0.00015513899999999858, 0.00015524999999999914, 0.00015594500000000108, 0.00015609700000000087, 0.0001559029999999989, 0.00015533400000000003, 0.00015555599999999767, 0.00015515300000000162]</msg>
<status status="PASS" starttime="20201112 12:43:28.891" endtime="20201112 12:43:28.893"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.886" endtime="20201112 12:43:28.893"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.895" endtime="20201112 12:43:28.897"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:28.899" endtime="20201112 12:43:28.918"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.897" endtime="20201112 12:43:28.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.894" endtime="20201112 12:43:28.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.527" endtime="20201112 12:43:28.919"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.526" endtime="20201112 12:43:28.920"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.928" endtime="20201112 12:43:28.949"></status>
</kw>
<msg timestamp="20201112 12:43:28.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.927" endtime="20201112 12:43:28.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:28.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:28.950" endtime="20201112 12:43:28.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.953" endtime="20201112 12:43:28.954"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.924" endtime="20201112 12:43:28.955"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.922" endtime="20201112 12:43:28.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:28.961" endtime="20201112 12:43:29.248"></status>
</kw>
<msg timestamp="20201112 12:43:29.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:28.960" endtime="20201112 12:43:29.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021682875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.252" endtime="20201112 12:43:29.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.260" endtime="20201112 12:43:29.261"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.957" endtime="20201112 12:43:29.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.956" endtime="20201112 12:43:29.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.266" level="INFO">${RESULT} = [{'time': 0.021682875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015706899999999926, 'source_diff': 0.00015706899999999926}, {'time': 0.021862972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:29.263" endtime="20201112 12:43:29.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.279" level="INFO">${ACCURACY} = {'time': [0.021682875, 0.021862972, 0.022037417, 0.022212847, 0.02239725, 0.022569778, 0.022744181, 0.022915681, 0.023091125, 0.023262528, 0.023436944, 0.023622431, 0.023803847, 0.023990403, 0.0241716...</msg>
<status status="PASS" starttime="20201112 12:43:29.267" endtime="20201112 12:43:29.279"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.283" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.282" endtime="20201112 12:43:29.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.286" level="INFO">VALUE: [0.00015706899999999926, 0.00015662500000000051, 0.00015655599999999867, 0.00015630500000000241, 0.00015680599999999892, 0.00015619499999999786, 0.00015680599999999892, 0.00015645900000000115, 0.00015623600000000057, 0.00015701400000000046, 0.00015654099999999962, 0.00015701400000000046, 0.00015670799999999846, 0.00015713900000000058, 0.0001566380000000006, 0.00015694399999999914, 0.00015687500000000076, 0.00015620800000000143, 0.0001561800000000023, 0.0001569310000000025, 0.00015665299999999965, 0.00015680499999999944, 0.00015613899999999958, 0.0001565000000000004, 0.00015655599999999867, 0.0001568060000000024, 0.00015631900000000198, 0.00015687500000000076, 0.00015661100000000094, 0.00015656999999999824, 0.0001565000000000004, 0.00015676300000000074, 0.0001569579999999987, 0.00015661100000000094, 0.00015618100000000176, 0.0001565000000000004, 0.00015708299999999883, 0.00015675000000000064, 0.00015684699999999815, 0.00015644500000000158, 0.00015694399999999914, 0.00015647200000000125, 0.000156916, 0.0001562639999999997, 0.00015683300000000205, 0.00015606900000000173, 0.00015647200000000125, 0.00015687500000000076, 0.00015617999999999882, 0.0001564449999999981]</msg>
<status status="PASS" starttime="20201112 12:43:29.285" endtime="20201112 12:43:29.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.280" endtime="20201112 12:43:29.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.289" endtime="20201112 12:43:29.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.293" endtime="20201112 12:43:29.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.291" endtime="20201112 12:43:29.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.288" endtime="20201112 12:43:29.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.921" endtime="20201112 12:43:29.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:28.920" endtime="20201112 12:43:29.314"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.323" endtime="20201112 12:43:29.343"></status>
</kw>
<msg timestamp="20201112 12:43:29.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.321" endtime="20201112 12:43:29.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.345" endtime="20201112 12:43:29.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.347" endtime="20201112 12:43:29.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.319" endtime="20201112 12:43:29.349"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.316" endtime="20201112 12:43:29.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.356" endtime="20201112 12:43:29.643"></status>
</kw>
<msg timestamp="20201112 12:43:29.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.354" endtime="20201112 12:43:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021973292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022130875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.647" endtime="20201112 12:43:29.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.655" endtime="20201112 12:43:29.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.352" endtime="20201112 12:43:29.657"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.350" endtime="20201112 12:43:29.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:29.662" level="INFO">${RESULT} = [{'time': 0.022130875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001575830000000028, 'source_diff': 0.0001575830000000028}, {'time': 0.022305125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:29.658" endtime="20201112 12:43:29.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:29.674" level="INFO">${ACCURACY} = {'time': [0.022130875, 0.022305125, 0.022489472, 0.022668889, 0.022857306, 0.023040736, 0.023221069, 0.023409444, 0.023593861, 0.023771222, 0.023955722, 0.024142097, 0.024323569, 0.024504944, 0.024677...</msg>
<status status="PASS" starttime="20201112 12:43:29.663" endtime="20201112 12:43:29.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.679" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201112 12:43:29.678" endtime="20201112 12:43:29.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.681" level="INFO">VALUE: [0.0001575830000000028, 0.00015727800000000028, 0.0001574160000000005, 0.00015747200000000225, 0.00015745900000000215, 0.00015780500000000044, 0.00015779100000000088, 0.0001574160000000005, 0.00015717999999999982, 0.00015730499999999994, 0.00015791599999999753, 0.00015731900000000298, 0.00015798599999999885, 0.00015725000000000114, 0.00015773699999999807, 0.00015762500000000151, 0.00015772199999999903, 0.00015768100000000326, 0.0001571939999999994, 0.00015793000000000057, 0.0001574449999999991, 0.00015754100000000062, 0.0001576809999999998, 0.00015776399999999774, 0.00015763899999999761, 0.00015788899999999786, 0.00015722199999999853, 0.00015738899999999736, 0.00015788900000000133, 0.00015747199999999878, 0.00015798599999999885, 0.00015754100000000062, 0.00015730499999999994, 0.00015775000000000164, 0.00015727800000000028, 0.00015737500000000126, 0.00015729199999999985, 0.00015744399999999964, 0.0001576809999999998, 0.00015787500000000176, 0.00015758299999999933, 0.00015704200000000307, 0.00015730499999999994, 0.0001576809999999998, 0.00015712500000000101, 0.00015755499999999673, 0.0001573749999999978, 0.0001575000000000014, 0.00015712500000000101, 0.00015730599999999942]</msg>
<status status="PASS" starttime="20201112 12:43:29.680" endtime="20201112 12:43:29.682"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.675" endtime="20201112 12:43:29.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.685" endtime="20201112 12:43:29.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:29.688" endtime="20201112 12:43:29.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.687" endtime="20201112 12:43:29.708"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.683" endtime="20201112 12:43:29.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.315" endtime="20201112 12:43:29.709"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.314" endtime="20201112 12:43:29.709"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.718" endtime="20201112 12:43:29.739"></status>
</kw>
<msg timestamp="20201112 12:43:29.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.716" endtime="20201112 12:43:29.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:29.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:29.740" endtime="20201112 12:43:29.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.742" endtime="20201112 12:43:29.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.713" endtime="20201112 12:43:29.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.711" endtime="20201112 12:43:29.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:29.751" endtime="20201112 12:43:30.037"></status>
</kw>
<msg timestamp="20201112 12:43:30.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:29.750" endtime="20201112 12:43:30.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021688083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021847306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.041" endtime="20201112 12:43:30.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.049" endtime="20201112 12:43:30.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.747" endtime="20201112 12:43:30.051"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.746" endtime="20201112 12:43:30.051"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:30.055" level="INFO">${RESULT} = [{'time': 0.021847306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000159223, 'source_diff': 0.000159223}, {'time': 0.022037444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000158249999999...</msg>
<status status="PASS" starttime="20201112 12:43:30.052" endtime="20201112 12:43:30.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.069" level="INFO">${ACCURACY} = {'time': [0.021847306, 0.022037444, 0.022210972, 0.022389347, 0.022569792, 0.022754278, 0.022933667, 0.023124056, 0.023313472, 0.023502931, 0.023683292, 0.02386175, 0.024042264, 0.024222667, 0.0244080...</msg>
<status status="PASS" starttime="20201112 12:43:30.056" endtime="20201112 12:43:30.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.074" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.073" endtime="20201112 12:43:30.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.076" level="INFO">VALUE: [0.000159223, 0.00015824999999999867, 0.00015874999999999917, 0.00015862499999999904, 0.0001585000000000024, 0.00015849999999999892, 0.00015901400000000246, 0.0001588200000000005, 0.00015813899999999811, 0.0001585000000000024, 0.00015813900000000158, 0.0001586940000000009, 0.00015827800000000128, 0.0001581810000000003, 0.00015880599999999745, 0.00015823600000000257, 0.00015899999999999942, 0.00015854100000000163, 0.0001585969999999999, 0.0001586810000000008, 0.00015815300000000115, 0.00015861099999999947, 0.00015884700000000015, 0.00015832, 0.0001586810000000008, 0.00015869399999999742, 0.00015874999999999917, 0.00015820899999999943, 0.00015886099999999972, 0.00015868000000000132, 0.00015875000000000264, 0.00015895900000000018, 0.00015827800000000128, 0.00015838900000000183, 0.0001585689999999973, 0.00015812499999999854, 0.00015827800000000128, 0.00015899999999999942, 0.00015869500000000036, 0.00015861099999999947, 0.00015898699999999932, 0.0001590559999999977, 0.00015899999999999942, 0.00015890299999999843, 0.0001587770000000023, 0.00015855600000000067, 0.00015875000000000264, 0.00015848599999999935, 0.00015811199999999845, 0.00015823700000000204]</msg>
<status status="PASS" starttime="20201112 12:43:30.075" endtime="20201112 12:43:30.077"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.070" endtime="20201112 12:43:30.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.080" endtime="20201112 12:43:30.081"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.083" endtime="20201112 12:43:30.102"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.081" endtime="20201112 12:43:30.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.078" endtime="20201112 12:43:30.103"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.710" endtime="20201112 12:43:30.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:29.709" endtime="20201112 12:43:30.104"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.112" endtime="20201112 12:43:30.133"></status>
</kw>
<msg timestamp="20201112 12:43:30.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.111" endtime="20201112 12:43:30.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.135" endtime="20201112 12:43:30.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.137" endtime="20201112 12:43:30.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.108" endtime="20201112 12:43:30.139"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.106" endtime="20201112 12:43:30.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.146" endtime="20201112 12:43:30.433"></status>
</kw>
<msg timestamp="20201112 12:43:30.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:30.144" endtime="20201112 12:43:30.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02175925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:30.437" endtime="20201112 12:43:30.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.445" endtime="20201112 12:43:30.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.142" endtime="20201112 12:43:30.447"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.140" endtime="20201112 12:43:30.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:30.452" level="INFO">${RESULT} = [{'time': 0.02175925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001605140000000005, 'source_diff': 0.0001605140000000005}, {'time': 0.021951389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201112 12:43:30.448" endtime="20201112 12:43:30.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.464" level="INFO">${ACCURACY} = {'time': [0.02175925, 0.021951389, 0.022128778, 0.022315139, 0.022491639, 0.022666028, 0.022841556, 0.023022889, 0.023199347, 0.023380806, 0.023565167, 0.023741597, 0.023921083, 0.024101458, 0.0242868...</msg>
<status status="PASS" starttime="20201112 12:43:30.453" endtime="20201112 12:43:30.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.469" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.468" endtime="20201112 12:43:30.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.471" level="INFO">VALUE: [0.0001605140000000005, 0.00015994500000000161, 0.00015919500000000086, 0.0001594580000000012, 0.00015986100000000072, 0.00015962500000000004, 0.00015981999999999802, 0.00015943100000000154, 0.0001595139999999995, 0.000159223, 0.00015929200000000185, 0.00015915299999999868, 0.00015911099999999997, 0.000160014, 0.00015979199999999888, 0.00015908300000000083, 0.0001594299999999986, 0.0001594169999999985, 0.00015930499999999848, 0.00016004099999999966, 0.0001597779999999993, 0.00015955499999999873, 0.00016000000000000042, 0.00015916700000000172, 0.00015933300000000108, 0.00015986100000000072, 0.000159916000000003, 0.00015962500000000004, 0.00015979199999999888, 0.0001594169999999985, 0.0001593749999999998, 0.00015984700000000115, 0.00015977699999999984, 0.000159013999999999, 0.00015986100000000072, 0.0001598750000000003, 0.00015956900000000176, 0.00015922200000000053, 0.00015998700000000032, 0.00015948599999999688, 0.00015916700000000172, 0.00015929200000000185, 0.000159320000000001, 0.00015961100000000047, 0.0001597360000000006, 0.00015993000000000257, 0.0001598750000000003, 0.0001595550000000022, 0.0001590970000000004, 0.00015954100000000263]</msg>
<status status="PASS" starttime="20201112 12:43:30.470" endtime="20201112 12:43:30.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.465" endtime="20201112 12:43:30.472"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.475" endtime="20201112 12:43:30.476"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.478" endtime="20201112 12:43:30.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.477" endtime="20201112 12:43:30.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.473" endtime="20201112 12:43:30.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.105" endtime="20201112 12:43:30.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.104" endtime="20201112 12:43:30.499"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.507" endtime="20201112 12:43:30.528"></status>
</kw>
<msg timestamp="20201112 12:43:30.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.506" endtime="20201112 12:43:30.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.530" endtime="20201112 12:43:30.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.533" endtime="20201112 12:43:30.534"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.503" endtime="20201112 12:43:30.535"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.501" endtime="20201112 12:43:30.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.542" endtime="20201112 12:43:30.829"></status>
</kw>
<msg timestamp="20201112 12:43:30.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.541" endtime="20201112 12:43:30.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021557444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021719014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.833" endtime="20201112 12:43:30.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.841" endtime="20201112 12:43:30.843"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.538" endtime="20201112 12:43:30.844"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.536" endtime="20201112 12:43:30.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:30.848" level="INFO">${RESULT} = [{'time': 0.021719014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016156999999999977, 'source_diff': 0.00016156999999999977}, {'time': 0.021900194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:30.845" endtime="20201112 12:43:30.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:30.861" level="INFO">${ACCURACY} = {'time': [0.021719014, 0.021900194, 0.022081597, 0.022263986, 0.022455417, 0.022645875, 0.022835292, 0.023016639, 0.023199069, 0.023380597, 0.023568889, 0.023759347, 0.023952694, 0.024127167, 0.024304...</msg>
<status status="PASS" starttime="20201112 12:43:30.849" endtime="20201112 12:43:30.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.865" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201112 12:43:30.864" endtime="20201112 12:43:30.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.867" level="INFO">VALUE: [0.00016156999999999977, 0.0001601940000000024, 0.000161014000000001, 0.00016075000000000117, 0.00016077799999999684, 0.00016044399999999917, 0.00016063900000000061, 0.00016068099999999932, 0.0001607910000000004, 0.00016084699999999869, 0.0001604719999999983, 0.0001607910000000004, 0.00016086100000000172, 0.00016033400000000156, 0.00016050000000000092, 0.00016013900000000011, 0.00016099999999999795, 0.0001607499999999977, 0.00016041700000000297, 0.0001605689999999993, 0.0001609580000000027, 0.0001608750000000013, 0.00016073599999999813, 0.00016025000000000067, 0.00016034700000000165, 0.00016048600000000135, 0.00016100000000000142, 0.00016054100000000016, 0.00016072299999999803, 0.000161014000000001, 0.0001605140000000005, 0.00016062499999999758, 0.00016025000000000067, 0.0001600840000000013, 0.00016045799999999874, 0.00016108299999999937, 0.00016012500000000054, 0.00016011100000000097, 0.00016059699999999844, 0.00016066600000000028, 0.00016067999999999985, 0.00016044399999999917, 0.00016076400000000074, 0.00016081999999999902, 0.00016100000000000142, 0.00016033299999999862, 0.00016013800000000064, 0.000161014000000001, 0.00016050000000000092, 0.00016106999999999927]</msg>
<status status="PASS" starttime="20201112 12:43:30.866" endtime="20201112 12:43:30.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.862" endtime="20201112 12:43:30.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.871" endtime="20201112 12:43:30.872"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:30.874" endtime="20201112 12:43:30.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.873" endtime="20201112 12:43:30.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.869" endtime="20201112 12:43:30.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.500" endtime="20201112 12:43:30.895"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.499" endtime="20201112 12:43:30.895"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.904" endtime="20201112 12:43:30.925"></status>
</kw>
<msg timestamp="20201112 12:43:30.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.902" endtime="20201112 12:43:30.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:30.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:30.926" endtime="20201112 12:43:30.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.929" endtime="20201112 12:43:30.930"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.900" endtime="20201112 12:43:30.931"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.898" endtime="20201112 12:43:30.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:30.937" endtime="20201112 12:43:31.224"></status>
</kw>
<msg timestamp="20201112 12:43:31.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021516167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:30.936" endtime="20201112 12:43:31.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021516167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021678486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.228" endtime="20201112 12:43:31.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.236" endtime="20201112 12:43:31.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.933" endtime="20201112 12:43:31.238"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.932" endtime="20201112 12:43:31.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.243" level="INFO">${RESULT} = [{'time': 0.021678486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016231900000000105, 'source_diff': 0.00016231900000000105}, {'time': 0.021864722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:31.240" endtime="20201112 12:43:31.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:31.255" level="INFO">${ACCURACY} = {'time': [0.021678486, 0.021864722, 0.022048042, 0.022229569, 0.022420986, 0.022610472, 0.022803875, 0.022986236, 0.023166681, 0.023353208, 0.023544625, 0.023721042, 0.023914472, 0.024100972, 0.024282...</msg>
<status status="PASS" starttime="20201112 12:43:31.244" endtime="20201112 12:43:31.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.260" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201112 12:43:31.259" endtime="20201112 12:43:31.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.262" level="INFO">VALUE: [0.00016231900000000105, 0.00016119399999999992, 0.0001616949999999999, 0.00016113800000000164, 0.00016105500000000023, 0.00016194400000000067, 0.00016116700000000025, 0.00016163900000000161, 0.00016193100000000057, 0.00016144400000000017, 0.0001613889999999979, 0.00016195899999999971, 0.0001612079999999995, 0.00016115299999999722, 0.00016165299999999772, 0.00016195799999999677, 0.00016113900000000111, 0.00016105500000000023, 0.0001616659999999978, 0.00016116600000000078, 0.00016130599999999995, 0.0001617780000000013, 0.00016179200000000088, 0.00016137499999999833, 0.00016176399999999827, 0.0001618889999999984, 0.00016136099999999876, 0.00016179200000000088, 0.00016183400000000306, 0.00016184699999999969, 0.00016112500000000154, 0.00016109699999999894, 0.00016106999999999927, 0.00016158299999999987, 0.0001613750000000018, 0.0001610689999999998, 0.000162014000000002, 0.0001615140000000015, 0.00016181899999999708, 0.00016131999999999952, 0.00016143100000000007, 0.00016157000000000324, 0.00016112499999999808, 0.00016150000000000192, 0.00016150000000000192, 0.00016183300000000012, 0.00016120899999999896, 0.00016138900000000136, 0.00016145799999999974, 0.00016162499999999858]</msg>
<status status="PASS" starttime="20201112 12:43:31.261" endtime="20201112 12:43:31.267"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.256" endtime="20201112 12:43:31.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.270" endtime="20201112 12:43:31.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.273" endtime="20201112 12:43:31.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.272" endtime="20201112 12:43:31.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.268" endtime="20201112 12:43:31.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.896" endtime="20201112 12:43:31.294"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:30.896" endtime="20201112 12:43:31.294"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.303" endtime="20201112 12:43:31.324"></status>
</kw>
<msg timestamp="20201112 12:43:31.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.301" endtime="20201112 12:43:31.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.325" endtime="20201112 12:43:31.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.328" endtime="20201112 12:43:31.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.299" endtime="20201112 12:43:31.330"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.297" endtime="20201112 12:43:31.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.336" endtime="20201112 12:43:31.624"></status>
</kw>
<msg timestamp="20201112 12:43:31.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:31.335" endtime="20201112 12:43:31.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021523958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0216875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:43:31.628" endtime="20201112 12:43:31.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.636" endtime="20201112 12:43:31.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.332" endtime="20201112 12:43:31.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.331" endtime="20201112 12:43:31.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:31.643" level="INFO">${RESULT} = [{'time': 0.0216875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016354199999999916, 'source_diff': 0.00016354199999999916}, {'time': 0.021867639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:31.640" endtime="20201112 12:43:31.643"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:31.657" level="INFO">${ACCURACY} = {'time': [0.0216875, 0.021867639, 0.022052069, 0.022229486, 0.022421958, 0.022601417, 0.022783903, 0.022977292, 0.023171681, 0.023351069, 0.023536486, 0.023721014, 0.023906347, 0.02409975, 0.02427525,...</msg>
<status status="PASS" starttime="20201112 12:43:31.644" endtime="20201112 12:43:31.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.661" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201112 12:43:31.660" endtime="20201112 12:43:31.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.664" level="INFO">VALUE: [0.00016354199999999916, 0.00016254200000000163, 0.00016248599999999988, 0.0001620279999999981, 0.00016245799999999727, 0.00016251399999999902, 0.0001627499999999997, 0.0001620560000000007, 0.00016280599999999798, 0.0001627219999999971, 0.00016287499999999983, 0.0001628889999999994, 0.00016248599999999988, 0.00016240299999999847, 0.00016268100000000132, 0.00016304199999999866, 0.00016237499999999933, 0.0001628750000000033, 0.00016212499999999908, 0.00016273600000000013, 0.00016209699999999994, 0.00016293100000000157, 0.0001627499999999997, 0.0001620690000000008, 0.00016209699999999994, 0.0001627499999999997, 0.00016302800000000256, 0.00016243100000000107, 0.00016287499999999983, 0.0001623889999999989, 0.00016231999999999705, 0.00016291699999999854, 0.00016291599999999906, 0.00016268099999999786, 0.00016290299999999897, 0.00016208300000000037, 0.00016301399999999952, 0.00016279099999999894, 0.00016273600000000013, 0.00016213899999999865, 0.00016287499999999983, 0.00016223599999999963, 0.0001624170000000015, 0.00016276399999999927, 0.00016212499999999908, 0.0001630699999999978, 0.00016286100000000026, 0.00016255500000000173, 0.00016273600000000013, 0.00016262499999999958]</msg>
<status status="PASS" starttime="20201112 12:43:31.662" endtime="20201112 12:43:31.665"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.658" endtime="20201112 12:43:31.665"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.667" endtime="20201112 12:43:31.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:31.671" endtime="20201112 12:43:31.690"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.669" endtime="20201112 12:43:31.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.666" endtime="20201112 12:43:31.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.295" endtime="20201112 12:43:31.691"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.294" endtime="20201112 12:43:31.692"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.700" endtime="20201112 12:43:31.721"></status>
</kw>
<msg timestamp="20201112 12:43:31.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.698" endtime="20201112 12:43:31.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:31.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:31.723" endtime="20201112 12:43:31.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.725" endtime="20201112 12:43:31.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.696" endtime="20201112 12:43:31.727"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.694" endtime="20201112 12:43:31.728"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:31.734" endtime="20201112 12:43:32.021"></status>
</kw>
<msg timestamp="20201112 12:43:32.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:31.732" endtime="20201112 12:43:32.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021629167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.025" endtime="20201112 12:43:32.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.033" endtime="20201112 12:43:32.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.730" endtime="20201112 12:43:32.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.728" endtime="20201112 12:43:32.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.040" level="INFO">${RESULT} = [{'time': 0.021629167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016365299999999972, 'source_diff': 0.00016365299999999972}, {'time': 0.021815306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:32.037" endtime="20201112 12:43:32.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.053" level="INFO">${ACCURACY} = {'time': [0.021629167, 0.021815306, 0.021992792, 0.022188167, 0.022365528, 0.022554917, 0.022741472, 0.022931653, 0.023126083, 0.023318444, 0.023506847, 0.023694278, 0.023881625, 0.024074986, 0.024261...</msg>
<status status="PASS" starttime="20201112 12:43:32.041" endtime="20201112 12:43:32.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.057" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.056" endtime="20201112 12:43:32.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.059" level="INFO">VALUE: [0.00016365299999999972, 0.00016387500000000083, 0.00016365299999999972, 0.00016316700000000225, 0.00016383399999999812, 0.00016307000000000127, 0.00016337500000000033, 0.00016366699999999929, 0.00016379099999999994, 0.0001632630000000003, 0.0001636659999999998, 0.0001639309999999991, 0.00016323600000000063, 0.00016304199999999866, 0.0001632080000000015, 0.00016342999999999913, 0.0001631110000000005, 0.00016336100000000076, 0.00016384800000000116, 0.00016345900000000121, 0.000163611000000001, 0.00016332000000000152, 0.00016377799999999984, 0.00016340299999999947, 0.00016397300000000128, 0.00016366699999999929, 0.00016354199999999916, 0.00016361099999999754, 0.00016366700000000275, 0.0001640280000000001, 0.00016344499999999818, 0.00016391699999999954, 0.00016384800000000116, 0.00016365299999999972, 0.0001630980000000004, 0.00016384700000000169, 0.0001637219999999981, 0.00016348600000000088, 0.00016327799999999934, 0.0001635279999999996, 0.00016304199999999866, 0.00016323600000000063, 0.00016326400000000324, 0.0001637919999999994, 0.00016370799999999852, 0.00016351400000000002, 0.0001640280000000001, 0.00016333299999999815, 0.00016316700000000225, 0.00016322200000000106]</msg>
<status status="PASS" starttime="20201112 12:43:32.058" endtime="20201112 12:43:32.060"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.053" endtime="20201112 12:43:32.061"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.063" endtime="20201112 12:43:32.064"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.066" endtime="20201112 12:43:32.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.065" endtime="20201112 12:43:32.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.061" endtime="20201112 12:43:32.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.692" endtime="20201112 12:43:32.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:31.692" endtime="20201112 12:43:32.087"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.096" endtime="20201112 12:43:32.117"></status>
</kw>
<msg timestamp="20201112 12:43:32.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.094" endtime="20201112 12:43:32.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.118" endtime="20201112 12:43:32.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.121" endtime="20201112 12:43:32.122"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.092" endtime="20201112 12:43:32.123"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.090" endtime="20201112 12:43:32.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.130" endtime="20201112 12:43:32.416"></status>
</kw>
<msg timestamp="20201112 12:43:32.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021593306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.128" endtime="20201112 12:43:32.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021593306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021758083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.420" endtime="20201112 12:43:32.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.428" endtime="20201112 12:43:32.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.126" endtime="20201112 12:43:32.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.124" endtime="20201112 12:43:32.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.435" level="INFO">${RESULT} = [{'time': 0.021758083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016477700000000137, 'source_diff': 0.00016477700000000137}, {'time': 0.021943236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:32.432" endtime="20201112 12:43:32.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.448" level="INFO">${ACCURACY} = {'time': [0.021758083, 0.021943236, 0.022129653, 0.022321958, 0.022506444, 0.022702806, 0.022882167, 0.023064611, 0.023242931, 0.023423431, 0.023611903, 0.023799194, 0.023991625, 0.024186014, 0.024381...</msg>
<status status="PASS" starttime="20201112 12:43:32.436" endtime="20201112 12:43:32.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.452" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.451" endtime="20201112 12:43:32.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.454" level="INFO">VALUE: [0.00016477700000000137, 0.0001644720000000023, 0.00016418099999999936, 0.00016483299999999965, 0.00016409700000000194, 0.00016416699999999979, 0.00016459799999999844, 0.00016484699999999922, 0.00016420900000000196, 0.00016448700000000135, 0.0001649859999999989, 0.0001641249999999976, 0.00016491700000000054, 0.00016465299999999725, 0.0001641110000000015, 0.00016434699999999872, 0.00016423600000000163, 0.00016440300000000047, 0.00016415300000000022, 0.00016487499999999836, 0.00016459799999999844, 0.0001647920000000004, 0.00016415200000000074, 0.0001645280000000006, 0.0001645410000000007, 0.00016461099999999854, 0.00016483399999999912, 0.00016441600000000056, 0.00016486099999999879, 0.0001644859999999984, 0.0001645280000000006, 0.00016490300000000097, 0.00016398600000000138, 0.00016455500000000026, 0.00016418099999999936, 0.00016495799999999977, 0.00016490300000000097, 0.0001649029999999975, 0.00016440300000000047, 0.00016415199999999727, 0.00016436099999999829, 0.0001645829999999994, 0.00016484699999999922, 0.0001643890000000009, 0.00016431899999999958, 0.00016449999999999798, 0.00016452700000000112, 0.00016427800000000034, 0.00016409700000000194, 0.00016484699999999922]</msg>
<status status="PASS" starttime="20201112 12:43:32.453" endtime="20201112 12:43:32.455"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.448" endtime="20201112 12:43:32.456"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.458" endtime="20201112 12:43:32.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.461" endtime="20201112 12:43:32.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.460" endtime="20201112 12:43:32.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.456" endtime="20201112 12:43:32.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.088" endtime="20201112 12:43:32.482"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.088" endtime="20201112 12:43:32.482"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.491" endtime="20201112 12:43:32.512"></status>
</kw>
<msg timestamp="20201112 12:43:32.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.489" endtime="20201112 12:43:32.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.513" endtime="20201112 12:43:32.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.516" endtime="20201112 12:43:32.517"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.487" endtime="20201112 12:43:32.518"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.484" endtime="20201112 12:43:32.518"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.525" endtime="20201112 12:43:32.811"></status>
</kw>
<msg timestamp="20201112 12:43:32.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.523" endtime="20201112 12:43:32.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021590639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021756417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.815" endtime="20201112 12:43:32.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.823" endtime="20201112 12:43:32.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.521" endtime="20201112 12:43:32.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.519" endtime="20201112 12:43:32.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:32.830" level="INFO">${RESULT} = [{'time': 0.021756417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016577800000000184, 'source_diff': 0.00016577800000000184}, {'time': 0.021950542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:32.826" endtime="20201112 12:43:32.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:32.842" level="INFO">${ACCURACY} = {'time': [0.021756417, 0.021950542, 0.022147875, 0.02233625, 0.022514611, 0.022703986, 0.022891458, 0.023077778, 0.023273153, 0.023458556, 0.023638917, 0.023830361, 0.024023708, 0.024215167, 0.0244045...</msg>
<status status="PASS" starttime="20201112 12:43:32.831" endtime="20201112 12:43:32.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.847" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201112 12:43:32.846" endtime="20201112 12:43:32.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.849" level="INFO">VALUE: [0.00016577800000000184, 0.0001653479999999992, 0.00016545800000000027, 0.00016551399999999855, 0.00016513900000000165, 0.0001652639999999983, 0.00016523599999999916, 0.00016595900000000025, 0.0001659310000000011, 0.00016533399999999962, 0.0001659029999999985, 0.0001657920000000014, 0.00016548600000000288, 0.00016579199999999794, 0.00016530600000000048, 0.0001657220000000001, 0.0001650829999999999, 0.0001659440000000012, 0.00016509700000000294, 0.00016511099999999904, 0.00016556900000000083, 0.0001651249999999986, 0.00016554200000000116, 0.00016586099999999979, 0.0001656249999999991, 0.00016526299999999883, 0.00016509799999999894, 0.00016551399999999855, 0.0001655830000000004, 0.00016569400000000095, 0.00016541700000000104, 0.00016544500000000018, 0.00016513900000000165, 0.00016587500000000283, 0.0001659029999999985, 0.00016556900000000083, 0.0001657220000000001, 0.00016584700000000022, 0.00016527800000000134, 0.00016595800000000077, 0.00016520800000000002, 0.0001659029999999985, 0.00016499999999999848, 0.0001655410000000017, 0.00016501399999999805, 0.00016537500000000233, 0.00016520800000000002, 0.00016595800000000077, 0.00016590199999999902, 0.00016586099999999979]</msg>
<status status="PASS" starttime="20201112 12:43:32.848" endtime="20201112 12:43:32.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.843" endtime="20201112 12:43:32.851"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.853" endtime="20201112 12:43:32.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:32.856" endtime="20201112 12:43:32.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.855" endtime="20201112 12:43:32.876"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.851" endtime="20201112 12:43:32.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.483" endtime="20201112 12:43:32.877"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.482" endtime="20201112 12:43:32.877"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.885" endtime="20201112 12:43:32.907"></status>
</kw>
<msg timestamp="20201112 12:43:32.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.884" endtime="20201112 12:43:32.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:32.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:32.908" endtime="20201112 12:43:32.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.911" endtime="20201112 12:43:32.912"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.881" endtime="20201112 12:43:32.913"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.879" endtime="20201112 12:43:32.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:32.919" endtime="20201112 12:43:33.206"></status>
</kw>
<msg timestamp="20201112 12:43:33.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:32.918" endtime="20201112 12:43:33.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021497139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021664278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.210" endtime="20201112 12:43:33.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.218" endtime="20201112 12:43:33.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.915" endtime="20201112 12:43:33.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.914" endtime="20201112 12:43:33.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.224" level="INFO">${RESULT} = [{'time': 0.021664278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016713900000000018, 'source_diff': 0.00016713900000000018}, {'time': 0.0218525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:33.221" endtime="20201112 12:43:33.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.238" level="INFO">${ACCURACY} = {'time': [0.021664278, 0.0218525, 0.022031861, 0.022219264, 0.02240375, 0.022597, 0.022790472, 0.022971889, 0.023162319, 0.023347694, 0.02354, 0.023727458, 0.023911792, 0.024099194, 0.024287653, 0.024...</msg>
<status status="PASS" starttime="20201112 12:43:33.225" endtime="20201112 12:43:33.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.243" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.242" endtime="20201112 12:43:33.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.245" level="INFO">VALUE: [0.00016713900000000018, 0.00016659700000000097, 0.00016615299999999875, 0.00016670799999999805, 0.00016691699999999907, 0.00016602799999999862, 0.00016623600000000016, 0.00016698599999999744, 0.0001666380000000002, 0.00016687500000000036, 0.00016608299999999743, 0.00016675000000000023, 0.00016609799999999994, 0.00016669400000000195, 0.00016683399999999765, 0.00016613899999999918, 0.00016683300000000165, 0.0001669029999999995, 0.00016631900000000158, 0.000166402999999999, 0.00016649999999999998, 0.00016670799999999805, 0.00016669400000000195, 0.00016647199999999737, 0.0001665419999999987, 0.00016633400000000062, 0.00016655599999999826, 0.00016615299999999875, 0.00016669399999999848, 0.00016611100000000004, 0.0001667639999999998, 0.00016688899999999993, 0.0001669449999999982, 0.00016681900000000208, 0.00016690200000000002, 0.00016643000000000213, 0.0001666380000000002, 0.0001665700000000013, 0.00016673700000000014, 0.00016655600000000173, 0.00016704200000000266, 0.00016656899999999836, 0.00016669399999999848, 0.00016659700000000097, 0.00016633399999999715, 0.0001667220000000011, 0.000166709000000001, 0.00016611100000000004, 0.00016647300000000032, 0.00016648699999999989]</msg>
<status status="PASS" starttime="20201112 12:43:33.244" endtime="20201112 12:43:33.246"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.239" endtime="20201112 12:43:33.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.249" endtime="20201112 12:43:33.250"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.252" endtime="20201112 12:43:33.271"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.251" endtime="20201112 12:43:33.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.247" endtime="20201112 12:43:33.272"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.878" endtime="20201112 12:43:33.273"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:32.877" endtime="20201112 12:43:33.273"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.281" endtime="20201112 12:43:33.303"></status>
</kw>
<msg timestamp="20201112 12:43:33.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.280" endtime="20201112 12:43:33.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.304" endtime="20201112 12:43:33.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.307" endtime="20201112 12:43:33.308"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.277" endtime="20201112 12:43:33.309"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.275" endtime="20201112 12:43:33.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.316" endtime="20201112 12:43:33.603"></status>
</kw>
<msg timestamp="20201112 12:43:33.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.314" endtime="20201112 12:43:33.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021506931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.607" endtime="20201112 12:43:33.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.615" endtime="20201112 12:43:33.617"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.311" endtime="20201112 12:43:33.618"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.310" endtime="20201112 12:43:33.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:33.622" level="INFO">${RESULT} = [{'time': 0.021674778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016784699999999875, 'source_diff': 0.00016784699999999875}, {'time': 0.021857014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:33.619" endtime="20201112 12:43:33.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:33.636" level="INFO">${ACCURACY} = {'time': [0.021674778, 0.021857014, 0.022043431, 0.022234778, 0.022429194, 0.022623597, 0.022804139, 0.023000486, 0.023183847, 0.023383222, 0.023573667, 0.023769056, 0.023957403, 0.024145889, 0.024343...</msg>
<status status="PASS" starttime="20201112 12:43:33.623" endtime="20201112 12:43:33.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.641" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201112 12:43:33.640" endtime="20201112 12:43:33.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.643" level="INFO">VALUE: [0.00016784699999999875, 0.00016716699999999932, 0.00016795899999999878, 0.00016723600000000116, 0.00016750000000000098, 0.00016747199999999837, 0.00016770800000000252, 0.0001679030000000005, 0.0001679579999999993, 0.00016747199999999837, 0.00016759799999999797, 0.0001678480000000017, 0.00016766699999999982, 0.00016725000000000073, 0.00016766599999999687, 0.0001677640000000008, 0.0001679860000000019, 0.0001674449999999987, 0.00016794500000000268, 0.00016780600000000298, 0.0001675419999999997, 0.00016744399999999923, 0.00016770800000000252, 0.0001678610000000018, 0.00016709700000000147, 0.0001677220000000021, 0.00016741699999999957, 0.00016722199999999812, 0.00016733299999999868, 0.00016766699999999982, 0.000167709000000002, 0.00016729199999999944, 0.00016765300000000025, 0.00016720800000000202, 0.00016784700000000222, 0.00016733300000000215, 0.00016748599999999794, 0.0001673189999999991, 0.00016711099999999757, 0.0001675419999999997, 0.00016773600000000166, 0.000167403, 0.00016744399999999923, 0.00016762499999999764, 0.0001675419999999997, 0.00016737500000000086, 0.00016797300000000182, 0.00016797200000000234, 0.0001673610000000013, 0.00016705600000000223]</msg>
<status status="PASS" starttime="20201112 12:43:33.642" endtime="20201112 12:43:33.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.637" endtime="20201112 12:43:33.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.647" endtime="20201112 12:43:33.648"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:33.650" endtime="20201112 12:43:33.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.649" endtime="20201112 12:43:33.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.645" endtime="20201112 12:43:33.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.274" endtime="20201112 12:43:33.671"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.273" endtime="20201112 12:43:33.671"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.680" endtime="20201112 12:43:33.701"></status>
</kw>
<msg timestamp="20201112 12:43:33.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.678" endtime="20201112 12:43:33.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:33.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:33.703" endtime="20201112 12:43:33.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.705" endtime="20201112 12:43:33.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.675" endtime="20201112 12:43:33.707"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.673" endtime="20201112 12:43:33.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:33.714" endtime="20201112 12:43:34.001"></status>
</kw>
<msg timestamp="20201112 12:43:34.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:33.712" endtime="20201112 12:43:34.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021905403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.005" endtime="20201112 12:43:34.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.013" endtime="20201112 12:43:34.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.710" endtime="20201112 12:43:34.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.708" endtime="20201112 12:43:34.016"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.020" level="INFO">${RESULT} = [{'time': 0.021905403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016948599999999994, 'source_diff': 0.00016948599999999994}, {'time': 0.022097528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.017" endtime="20201112 12:43:34.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.033" level="INFO">${ACCURACY} = {'time': [0.021905403, 0.022097528, 0.022282, 0.022481361, 0.022671708, 0.022856097, 0.023056486, 0.023244944, 0.023441319, 0.023630667, 0.023824056, 0.024006611, 0.024199833, 0.024398292, 0.024591681...</msg>
<status status="PASS" starttime="20201112 12:43:34.021" endtime="20201112 12:43:34.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.038" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.037" endtime="20201112 12:43:34.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.040" level="INFO">VALUE: [0.00016948599999999994, 0.00016834700000000272, 0.00016816700000000032, 0.00016840299999999753, 0.00016840199999999805, 0.00016808299999999943, 0.00016816700000000032, 0.00016870800000000005, 0.00016884699999999975, 0.0001683610000000023, 0.00016802800000000062, 0.00016902800000000162, 0.00016852700000000165, 0.0001687359999999992, 0.0001680420000000002, 0.00016898599999999944, 0.00016813900000000118, 0.00016877800000000137, 0.00016852799999999765, 0.00016852800000000112, 0.00016893100000000064, 0.00016823600000000216, 0.00016869400000000048, 0.00016905600000000076, 0.00016837500000000186, 0.0001687640000000018, 0.00016887500000000236, 0.00016872199999999962, 0.00016874999999999876, 0.00016809700000000247, 0.0001682640000000013, 0.00016865200000000177, 0.00016837500000000186, 0.00016816700000000032, 0.00016897199999999987, 0.0001688619999999988, 0.00016822199999999912, 0.00016802800000000062, 0.00016891599999999812, 0.0001687359999999992, 0.00016902800000000162, 0.0001688610000000028, 0.00016884699999999975, 0.00016852800000000112, 0.00016869499999999996, 0.00016820799999999955, 0.0001682640000000013, 0.00016808299999999943, 0.00016876399999999833, 0.00016870800000000005]</msg>
<status status="PASS" starttime="20201112 12:43:34.039" endtime="20201112 12:43:34.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.034" endtime="20201112 12:43:34.042"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.044" endtime="20201112 12:43:34.045"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.047" endtime="20201112 12:43:34.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.046" endtime="20201112 12:43:34.067"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.042" endtime="20201112 12:43:34.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.672" endtime="20201112 12:43:34.068"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:33.671" endtime="20201112 12:43:34.068"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.077" endtime="20201112 12:43:34.098"></status>
</kw>
<msg timestamp="20201112 12:43:34.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.075" endtime="20201112 12:43:34.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.100" endtime="20201112 12:43:34.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.102" endtime="20201112 12:43:34.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.073" endtime="20201112 12:43:34.104"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.071" endtime="20201112 12:43:34.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.111" endtime="20201112 12:43:34.398"></status>
</kw>
<msg timestamp="20201112 12:43:34.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.109" endtime="20201112 12:43:34.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021661458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021831417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.402" endtime="20201112 12:43:34.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.410" endtime="20201112 12:43:34.411"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.107" endtime="20201112 12:43:34.412"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.105" endtime="20201112 12:43:34.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.416" level="INFO">${RESULT} = [{'time': 0.021831417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001699589999999973, 'source_diff': 0.0001699589999999973}, {'time': 0.022020431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:34.413" endtime="20201112 12:43:34.416"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.429" level="INFO">${ACCURACY} = {'time': [0.021831417, 0.022020431, 0.022206847, 0.022402194, 0.022589653, 0.022773069, 0.022964375, 0.023152847, 0.023353167, 0.023537514, 0.023724903, 0.023914375, 0.024113736, 0.024306, 0.024489472...</msg>
<status status="PASS" starttime="20201112 12:43:34.417" endtime="20201112 12:43:34.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.433" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.432" endtime="20201112 12:43:34.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.436" level="INFO">VALUE: [0.0001699589999999973, 0.00016933400000000015, 0.00016922199999999665, 0.00016908300000000043, 0.00016927800000000187, 0.00016990199999999955, 0.00016976399999999933, 0.00016965300000000225, 0.00016905600000000076, 0.00016958299999999746, 0.0001698199999999976, 0.00016972200000000062, 0.0001696389999999992, 0.00016908300000000043, 0.00016966600000000234, 0.00016907000000000033, 0.00016954099999999875, 0.0001697779999999989, 0.00016930500000000154, 0.00016906900000000086, 0.00016919500000000046, 0.00016994399999999826, 0.00016952800000000212, 0.0001692359999999997, 0.00016988899999999946, 0.00016961100000000007, 0.00016980499999999857, 0.0001695840000000004, 0.00016952799999999865, 0.00016955499999999832, 0.00016912499999999914, 0.00016954199999999822, 0.00016926399999999883, 0.00016943000000000166, 0.0001691389999999987, 0.00016938899999999896, 0.00016902800000000162, 0.00017005600000000176, 0.00016986100000000032, 0.00016962499999999964, 0.00016990299999999903, 0.00016926399999999883, 0.00016943100000000114, 0.00016968099999999792, 0.00016938899999999896, 0.00016938899999999896, 0.00016980499999999857, 0.0001699450000000012, 0.00017001399999999958, 0.000169097]</msg>
<status status="PASS" starttime="20201112 12:43:34.434" endtime="20201112 12:43:34.437"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.430" endtime="20201112 12:43:34.437"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.439" endtime="20201112 12:43:34.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.443" endtime="20201112 12:43:34.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.441" endtime="20201112 12:43:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.438" endtime="20201112 12:43:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.069" endtime="20201112 12:43:34.463"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.069" endtime="20201112 12:43:34.463"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.472" endtime="20201112 12:43:34.493"></status>
</kw>
<msg timestamp="20201112 12:43:34.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.470" endtime="20201112 12:43:34.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.495" endtime="20201112 12:43:34.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.497" endtime="20201112 12:43:34.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.468" endtime="20201112 12:43:34.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.466" endtime="20201112 12:43:34.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.506" endtime="20201112 12:43:34.794"></status>
</kw>
<msg timestamp="20201112 12:43:34.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.505" endtime="20201112 12:43:34.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021546028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021716917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.798" endtime="20201112 12:43:34.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.806" endtime="20201112 12:43:34.807"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.502" endtime="20201112 12:43:34.808"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.501" endtime="20201112 12:43:34.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:34.812" level="INFO">${RESULT} = [{'time': 0.021716917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017088900000000046, 'source_diff': 0.00017088900000000046}, {'time': 0.021902139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:34.809" endtime="20201112 12:43:34.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:34.826" level="INFO">${ACCURACY} = {'time': [0.021716917, 0.021902139, 0.0220885, 0.022285847, 0.022488194, 0.022687569, 0.022888014, 0.023087375, 0.023288736, 0.023491111, 0.023691472, 0.023892847, 0.024094222, 0.024279597, 0.02448097...</msg>
<status status="PASS" starttime="20201112 12:43:34.813" endtime="20201112 12:43:34.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.831" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201112 12:43:34.830" endtime="20201112 12:43:34.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.833" level="INFO">VALUE: [0.00017088900000000046, 0.00017015300000000275, 0.00017033300000000168, 0.0001701389999999997, 0.0001704299999999992, 0.0001705970000000015, 0.0001710420000000032, 0.0001705689999999989, 0.00017069400000000248, 0.0001707779999999999, 0.0001709580000000023, 0.00017036099999999735, 0.00017008299999999796, 0.0001702909999999995, 0.000170097000000001, 0.00017026399999999983, 0.00017104100000000025, 0.00017083300000000218, 0.00017002799999999915, 0.00017059800000000097, 0.00017043100000000214, 0.00017008300000000143, 0.00017094400000000273, 0.00017070799999999858, 0.00017004199999999872, 0.0001702779999999994, 0.00017016700000000232, 0.00017034699999999778, 0.00017069400000000248, 0.00017104199999999972, 0.00017080599999999904, 0.00017026399999999983, 0.0001709580000000023, 0.0001706109999999976, 0.00017066699999999935, 0.00017084699999999828, 0.0001704169999999991, 0.00017034699999999778, 0.00017026399999999983, 0.00017036100000000082, 0.00017094399999999926, 0.0001700840000000009, 0.00017004199999999872, 0.00017055499999999932, 0.0001707230000000011, 0.00017006900000000186, 0.00017083400000000165, 0.00017076400000000033, 0.00017072200000000162, 0.00017059699999999803]</msg>
<status status="PASS" starttime="20201112 12:43:34.832" endtime="20201112 12:43:34.834"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.827" endtime="20201112 12:43:34.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.837" endtime="20201112 12:43:34.838"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:34.840" endtime="20201112 12:43:34.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.839" endtime="20201112 12:43:34.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.835" endtime="20201112 12:43:34.860"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.464" endtime="20201112 12:43:34.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.464" endtime="20201112 12:43:34.861"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.869" endtime="20201112 12:43:34.891"></status>
</kw>
<msg timestamp="20201112 12:43:34.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.868" endtime="20201112 12:43:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:34.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:34.892" endtime="20201112 12:43:34.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.895" endtime="20201112 12:43:34.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.865" endtime="20201112 12:43:34.897"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.863" endtime="20201112 12:43:34.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:34.903" endtime="20201112 12:43:35.190"></status>
</kw>
<msg timestamp="20201112 12:43:35.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021496639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:34.902" endtime="20201112 12:43:35.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021496639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.194" endtime="20201112 12:43:35.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.203" endtime="20201112 12:43:35.204"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.900" endtime="20201112 12:43:35.205"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.898" endtime="20201112 12:43:35.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.209" level="INFO">${RESULT} = [{'time': 0.021668708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017206899999999692, 'source_diff': 0.00017206899999999692}, {'time': 0.021858819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.206" endtime="20201112 12:43:35.209"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.222" level="INFO">${ACCURACY} = {'time': [0.021668708, 0.021858819, 0.022050208, 0.022236694, 0.022430069, 0.022632417, 0.022828708, 0.023025097, 0.023227458, 0.023413861, 0.023606306, 0.023793611, 0.023982069, 0.024169514, 0.024361...</msg>
<status status="PASS" starttime="20201112 12:43:35.210" endtime="20201112 12:43:35.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.226" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.225" endtime="20201112 12:43:35.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.229" level="INFO">VALUE: [0.00017206899999999692, 0.00017127700000000093, 0.00017133300000000268, 0.0001720130000000021, 0.00017113800000000123, 0.00017170899999999906, 0.00017186099999999885, 0.00017134700000000225, 0.00017172199999999915, 0.00017195799999999983, 0.0001717780000000009, 0.00017162499999999817, 0.00017119400000000298, 0.00017116699999999985, 0.00017133399999999868, 0.00017131899999999964, 0.00017151400000000108, 0.00017152800000000065, 0.00017148700000000142, 0.0001712780000000004, 0.00017176400000000133, 0.00017168000000000044, 0.0001710139999999971, 0.0001711390000000007, 0.00017168099999999992, 0.00017190300000000103, 0.00017180600000000004, 0.00017155500000000032, 0.0001717780000000009, 0.00017152800000000065, 0.00017170799999999958, 0.00017168000000000044, 0.00017190300000000103, 0.00017187499999999842, 0.00017131899999999964, 0.0001711390000000007, 0.00017194400000000026, 0.00017137499999999792, 0.00017108299999999896, 0.00017118099999999942, 0.00017104199999999972, 0.00017144399999999976, 0.0001713889999999975, 0.00017166700000000035, 0.00017170799999999958, 0.000171694, 0.00017112499999999767, 0.00017144499999999924, 0.00017120899999999856, 0.0001717499999999983]</msg>
<status status="PASS" starttime="20201112 12:43:35.227" endtime="20201112 12:43:35.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.223" endtime="20201112 12:43:35.230"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.232" endtime="20201112 12:43:35.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.235" endtime="20201112 12:43:35.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.234" endtime="20201112 12:43:35.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.231" endtime="20201112 12:43:35.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.862" endtime="20201112 12:43:35.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:34.861" endtime="20201112 12:43:35.257"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.265" endtime="20201112 12:43:35.287"></status>
</kw>
<msg timestamp="20201112 12:43:35.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.263" endtime="20201112 12:43:35.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.288" endtime="20201112 12:43:35.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.290" endtime="20201112 12:43:35.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.261" endtime="20201112 12:43:35.293"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.259" endtime="20201112 12:43:35.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.299" endtime="20201112 12:43:35.586"></status>
</kw>
<msg timestamp="20201112 12:43:35.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.298" endtime="20201112 12:43:35.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.590" endtime="20201112 12:43:35.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.598" endtime="20201112 12:43:35.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.295" endtime="20201112 12:43:35.600"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.294" endtime="20201112 12:43:35.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:35.605" level="INFO">${RESULT} = [{'time': 0.021889736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017313899999999924, 'source_diff': 0.00017313899999999924}, {'time': 0.022084875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.602" endtime="20201112 12:43:35.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:35.618" level="INFO">${ACCURACY} = {'time': [0.021889736, 0.022084875, 0.022281222, 0.022469694, 0.022662, 0.022854403, 0.023051778, 0.023238236, 0.023435597, 0.023633889, 0.023838306, 0.024033583, 0.024227986, 0.024416361, 0.024608819...</msg>
<status status="PASS" starttime="20201112 12:43:35.606" endtime="20201112 12:43:35.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.623" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201112 12:43:35.622" endtime="20201112 12:43:35.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.625" level="INFO">VALUE: [0.00017313899999999924, 0.00017286099999999985, 0.00017284700000000028, 0.00017212499999999867, 0.00017288900000000246, 0.00017263899999999874, 0.00017263899999999874, 0.00017291699999999813, 0.0001729439999999978, 0.00017230600000000054, 0.00017220899999999956, 0.00017209699999999953, 0.00017281900000000114, 0.0001723750000000024, 0.00017270800000000058, 0.00017287499999999942, 0.0001727780000000019, 0.0001721390000000017, 0.0001721390000000017, 0.00017231899999999717, 0.00017294500000000074, 0.0001723200000000001, 0.00017213899999999824, 0.00017226399999999836, 0.00017204100000000125, 0.0001721659999999979, 0.0001726390000000022, 0.00017220899999999956, 0.0001729720000000004, 0.00017222199999999965, 0.00017291599999999865, 0.0001728200000000006, 0.00017233399999999968, 0.0001724309999999972, 0.00017206899999999692, 0.000173000000000003, 0.00017199999999999854, 0.00017286099999999985, 0.00017244500000000024, 0.00017281899999999767, 0.00017262499999999917, 0.00017213899999999824, 0.00017299999999999954, 0.00017270800000000058, 0.00017281899999999767, 0.0001723750000000024, 0.00017205499999999735, 0.00017240300000000153, 0.00017238899999999502, 0.0001726390000000022]</msg>
<status status="PASS" starttime="20201112 12:43:35.624" endtime="20201112 12:43:35.626"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.619" endtime="20201112 12:43:35.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.629" endtime="20201112 12:43:35.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:35.632" endtime="20201112 12:43:35.651"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.630" endtime="20201112 12:43:35.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.627" endtime="20201112 12:43:35.652"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.257" endtime="20201112 12:43:35.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.257" endtime="20201112 12:43:35.653"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.662" endtime="20201112 12:43:35.683"></status>
</kw>
<msg timestamp="20201112 12:43:35.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.660" endtime="20201112 12:43:35.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:35.685" endtime="20201112 12:43:35.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.687" endtime="20201112 12:43:35.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.657" endtime="20201112 12:43:35.689"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.655" endtime="20201112 12:43:35.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.696" endtime="20201112 12:43:35.982"></status>
</kw>
<msg timestamp="20201112 12:43:35.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.695" endtime="20201112 12:43:35.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:35.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021911083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022085403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:35.987" endtime="20201112 12:43:35.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:35.995" endtime="20201112 12:43:35.996"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.692" endtime="20201112 12:43:35.997"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.690" endtime="20201112 12:43:35.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.001" level="INFO">${RESULT} = [{'time': 0.022085403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017431999999999864, 'source_diff': 0.00017431999999999864}, {'time': 0.022282556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:35.998" endtime="20201112 12:43:36.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.014" level="INFO">${ACCURACY} = {'time': [0.022085403, 0.022282556, 0.022472958, 0.022677319, 0.022867819, 0.023062194, 0.023258597, 0.023462986, 0.023663333, 0.023853819, 0.024054236, 0.024247569, 0.024444958, 0.024645389, 0.024846...</msg>
<status status="PASS" starttime="20201112 12:43:36.002" endtime="20201112 12:43:36.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.018" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.017" endtime="20201112 12:43:36.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.021" level="INFO">VALUE: [0.00017431999999999864, 0.00017369499999999802, 0.0001734720000000009, 0.00017370800000000158, 0.00017386100000000085, 0.00017398600000000097, 0.00017354099999999928, 0.00017345800000000133, 0.000173791000000003, 0.0001738469999999978, 0.00017317999999999847, 0.00017391599999999965, 0.00017359699999999756, 0.00017352799999999918, 0.000173889, 0.000173889, 0.00017394500000000174, 0.00017323600000000022, 0.000173889, 0.0001735139999999996, 0.00017394400000000226, 0.00017312499999999967, 0.0001736110000000006, 0.0001735269999999997, 0.00017359700000000103, 0.0001732780000000024, 0.0001735690000000019, 0.00017370799999999811, 0.00017370799999999811, 0.00017313899999999924, 0.00017348699999999995, 0.0001739300000000027, 0.00017313899999999924, 0.00017341599999999915, 0.0001736659999999994, 0.0001735560000000018, 0.00017398700000000045, 0.00017406899999999892, 0.00017323600000000022, 0.00017348600000000047, 0.00017380600000000204, 0.00017380600000000204, 0.00017391699999999913, 0.00017318000000000194, 0.00017334700000000078, 0.000173582999999998, 0.00017372199999999768, 0.0001731390000000027, 0.0001738469999999978, 0.00017350000000000004]</msg>
<status status="PASS" starttime="20201112 12:43:36.020" endtime="20201112 12:43:36.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.015" endtime="20201112 12:43:36.022"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.024" endtime="20201112 12:43:36.026"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.028" endtime="20201112 12:43:36.047"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.026" endtime="20201112 12:43:36.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.023" endtime="20201112 12:43:36.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.654" endtime="20201112 12:43:36.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:35.653" endtime="20201112 12:43:36.049"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.057" endtime="20201112 12:43:36.079"></status>
</kw>
<msg timestamp="20201112 12:43:36.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.055" endtime="20201112 12:43:36.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.080" endtime="20201112 12:43:36.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.083" endtime="20201112 12:43:36.084"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.053" endtime="20201112 12:43:36.085"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.051" endtime="20201112 12:43:36.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.091" endtime="20201112 12:43:36.378"></status>
</kw>
<msg timestamp="20201112 12:43:36.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.090" endtime="20201112 12:43:36.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021519375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021694236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.382" endtime="20201112 12:43:36.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.390" endtime="20201112 12:43:36.392"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.087" endtime="20201112 12:43:36.393"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.086" endtime="20201112 12:43:36.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.397" level="INFO">${RESULT} = [{'time': 0.021694236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017486099999999838, 'source_diff': 0.00017486099999999838}, {'time': 0.021886347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:36.394" endtime="20201112 12:43:36.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.411" level="INFO">${ACCURACY} = {'time': [0.021694236, 0.021886347, 0.022090708, 0.022280236, 0.022474514, 0.022676889, 0.02287925, 0.023079625, 0.023275069, 0.023475431, 0.023668778, 0.023859167, 0.024051625, 0.024247, 0.02444725, ...</msg>
<status status="PASS" starttime="20201112 12:43:36.398" endtime="20201112 12:43:36.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.416" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.415" endtime="20201112 12:43:36.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.418" level="INFO">VALUE: [0.00017486099999999838, 0.000174889000000001, 0.0001740140000000001, 0.0001744439999999993, 0.00017458300000000246, 0.00017449999999999757, 0.00017420799999999861, 0.0001740829999999985, 0.00017474999999999782, 0.00017402800000000315, 0.00017452800000000018, 0.00017404199999999925, 0.00017481899999999967, 0.00017469399999999954, 0.00017486100000000185, 0.0001743049999999996, 0.0001745270000000007, 0.0001747639999999974, 0.0001741110000000011, 0.0001747500000000013, 0.00017400000000000054, 0.00017488899999999752, 0.00017445800000000233, 0.00017459699999999856, 0.00017479099999999706, 0.00017486100000000185, 0.00017491700000000013, 0.00017459699999999856, 0.00017501300000000164, 0.00017479100000000053, 0.00017440300000000006, 0.0001741110000000011, 0.00017409699999999806, 0.0001740690000000024, 0.00017405499999999935, 0.00017481899999999967, 0.00017466699999999988, 0.00017459699999999856, 0.0001743469999999983, 0.00017476299999999792, 0.00017486100000000185, 0.0001744439999999993, 0.00017420800000000208, 0.00017402799999999968, 0.0001742919999999995, 0.00017450000000000104, 0.0001745140000000006, 0.00017413900000000024, 0.0001747639999999974, 0.0001748059999999961]</msg>
<status status="PASS" starttime="20201112 12:43:36.417" endtime="20201112 12:43:36.423"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.412" endtime="20201112 12:43:36.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.426" endtime="20201112 12:43:36.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.430" endtime="20201112 12:43:36.449"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.428" endtime="20201112 12:43:36.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.425" endtime="20201112 12:43:36.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.049" endtime="20201112 12:43:36.450"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.049" endtime="20201112 12:43:36.451"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.459" endtime="20201112 12:43:36.481"></status>
</kw>
<msg timestamp="20201112 12:43:36.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.457" endtime="20201112 12:43:36.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.482" endtime="20201112 12:43:36.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.485" endtime="20201112 12:43:36.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.455" endtime="20201112 12:43:36.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.453" endtime="20201112 12:43:36.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.493" endtime="20201112 12:43:36.782"></status>
</kw>
<msg timestamp="20201112 12:43:36.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02151975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:36.492" endtime="20201112 12:43:36.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02151975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021695875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:36.786" endtime="20201112 12:43:36.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.794" endtime="20201112 12:43:36.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.489" endtime="20201112 12:43:36.796"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.488" endtime="20201112 12:43:36.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:36.801" level="INFO">${RESULT} = [{'time': 0.021695875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001761249999999992, 'source_diff': 0.0001761249999999992}, {'time': 0.021885931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201112 12:43:36.797" endtime="20201112 12:43:36.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:36.813" level="INFO">${ACCURACY} = {'time': [0.021695875, 0.021885931, 0.022086361, 0.022289681, 0.022496028, 0.022702389, 0.022900806, 0.02309525, 0.023289583, 0.023486972, 0.023681444, 0.023879833, 0.024081194, 0.024283583, 0.0244808...</msg>
<status status="PASS" starttime="20201112 12:43:36.801" endtime="20201112 12:43:36.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.818" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201112 12:43:36.817" endtime="20201112 12:43:36.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.820" level="INFO">VALUE: [0.0001761249999999992, 0.00017590300000000156, 0.00017572199999999968, 0.0001758059999999971, 0.00017507000000000286, 0.0001753890000000015, 0.00017523699999999823, 0.0001756530000000013, 0.00017519400000000004, 0.00017545799999999986, 0.00017565199999999836, 0.000175583, 0.00017569400000000054, 0.00017547199999999943, 0.00017556900000000042, 0.0001751249999999982, 0.00017590200000000208, 0.00017512500000000167, 0.00017583300000000024, 0.00017583300000000024, 0.0001755270000000017, 0.0001759310000000007, 0.000175889000000002, 0.00017570800000000011, 0.0001758339999999997, 0.00017508300000000296, 0.00017583300000000024, 0.0001755140000000016, 0.00017538899999999802, 0.00017534800000000225, 0.00017590300000000156, 0.00017593000000000122, 0.00017540300000000106, 0.00017530499999999713, 0.00017563900000000174, 0.00017551399999999814, 0.0001753339999999992, 0.0001756530000000013, 0.0001755980000000025, 0.00017541599999999768, 0.00017576400000000186, 0.0001759859999999995, 0.00017538899999999802, 0.0001753330000000032, 0.00017545899999999934, 0.00017531999999999964, 0.00017552800000000118, 0.00017538899999999802, 0.00017552800000000118, 0.00017554199999999381]</msg>
<status status="PASS" starttime="20201112 12:43:36.819" endtime="20201112 12:43:36.821"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.814" endtime="20201112 12:43:36.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.824" endtime="20201112 12:43:36.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:36.827" endtime="20201112 12:43:36.846"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.825" endtime="20201112 12:43:36.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.822" endtime="20201112 12:43:36.847"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.451" endtime="20201112 12:43:36.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.451" endtime="20201112 12:43:36.848"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.856" endtime="20201112 12:43:36.878"></status>
</kw>
<msg timestamp="20201112 12:43:36.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.855" endtime="20201112 12:43:36.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:36.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:36.880" endtime="20201112 12:43:36.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.882" endtime="20201112 12:43:36.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.852" endtime="20201112 12:43:36.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.850" endtime="20201112 12:43:36.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:36.891" endtime="20201112 12:43:37.177"></status>
</kw>
<msg timestamp="20201112 12:43:37.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:36.889" endtime="20201112 12:43:37.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021477139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021654278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.181" endtime="20201112 12:43:37.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.189" endtime="20201112 12:43:37.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.887" endtime="20201112 12:43:37.191"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.885" endtime="20201112 12:43:37.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.195" level="INFO">${RESULT} = [{'time': 0.021654278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017713899999999977, 'source_diff': 0.00017713899999999977}, {'time': 0.021847361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:37.192" endtime="20201112 12:43:37.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.208" level="INFO">${ACCURACY} = {'time': [0.021654278, 0.021847361, 0.022039778, 0.022237194, 0.022442556, 0.022637972, 0.022827306, 0.023016708, 0.023211167, 0.023417458, 0.023621806, 0.023815181, 0.024007569, 0.024212931, 0.024409...</msg>
<status status="PASS" starttime="20201112 12:43:37.197" endtime="20201112 12:43:37.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.213" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.212" endtime="20201112 12:43:37.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.215" level="INFO">VALUE: [0.00017713899999999977, 0.00017609700000000006, 0.0001764029999999986, 0.00017672199999999721, 0.00017693099999999823, 0.00017663899999999927, 0.0001761249999999992, 0.00017656900000000142, 0.00017687499999999995, 0.00017687499999999995, 0.00017645900000000034, 0.00017674999999999982, 0.00017636099999999988, 0.0001765700000000009, 0.0001763189999999977, 0.00017652699999999924, 0.00017606900000000092, 0.00017652800000000218, 0.0001766249999999997, 0.0001767639999999994, 0.00017695800000000136, 0.00017638799999999955, 0.000176276999999999, 0.00017622299999999966, 0.0001761660000000019, 0.0001769029999999991, 0.00017668000000000197, 0.00017626400000000236, 0.00017606899999999745, 0.00017677799999999896, 0.0001764310000000012, 0.0001761249999999992, 0.00017669400000000154, 0.00017602699999999874, 0.0001767500000000033, 0.00017647200000000043, 0.0001763890000000025, 0.0001768050000000021, 0.00017683300000000124, 0.00017655500000000185, 0.00017670800000000111, 0.00017663899999999927, 0.00017602800000000168, 0.00017626400000000236, 0.00017640300000000206, 0.00017640300000000206, 0.0001763340000000002, 0.00017649999999999957, 0.0001761249999999992, 0.0001763050000000016]</msg>
<status status="PASS" starttime="20201112 12:43:37.214" endtime="20201112 12:43:37.216"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.209" endtime="20201112 12:43:37.216"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.219" endtime="20201112 12:43:37.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.222" endtime="20201112 12:43:37.241"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.220" endtime="20201112 12:43:37.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.217" endtime="20201112 12:43:37.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.849" endtime="20201112 12:43:37.243"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:36.848" endtime="20201112 12:43:37.243"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.251" endtime="20201112 12:43:37.273"></status>
</kw>
<msg timestamp="20201112 12:43:37.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.250" endtime="20201112 12:43:37.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.275" endtime="20201112 12:43:37.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.277" endtime="20201112 12:43:37.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.247" endtime="20201112 12:43:37.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.245" endtime="20201112 12:43:37.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.286" endtime="20201112 12:43:37.572"></status>
</kw>
<msg timestamp="20201112 12:43:37.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021590306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.284" endtime="20201112 12:43:37.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021590306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021768056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.576" endtime="20201112 12:43:37.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.584" endtime="20201112 12:43:37.585"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.282" endtime="20201112 12:43:37.586"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.280" endtime="20201112 12:43:37.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.590" level="INFO">${RESULT} = [{'time': 0.021768056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017775000000000082, 'source_diff': 0.00017775000000000082}, {'time': 0.021964167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:37.587" endtime="20201112 12:43:37.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:37.603" level="INFO">${ACCURACY} = {'time': [0.021768056, 0.021964167, 0.022166569, 0.022375889, 0.022579236, 0.022772542, 0.022978958, 0.02318625, 0.023391583, 0.023588958, 0.023798278, 0.023990736, 0.024192083, 0.024396444, 0.0245907...</msg>
<status status="PASS" starttime="20201112 12:43:37.591" endtime="20201112 12:43:37.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.607" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201112 12:43:37.606" endtime="20201112 12:43:37.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.610" level="INFO">VALUE: [0.00017775000000000082, 0.000177583999999998, 0.00017736100000000088, 0.0001771250000000002, 0.0001776799999999995, 0.00017793099999999923, 0.00017794399999999932, 0.0001779579999999989, 0.00017744399999999882, 0.0001776250000000007, 0.00017772199999999821, 0.00017801399999999717, 0.00017720799999999814, 0.0001774579999999984, 0.0001773609999999974, 0.00017784699999999834, 0.00017787500000000095, 0.00017781999999999867, 0.0001774310000000022, 0.00017794500000000227, 0.00017798599999999803, 0.00017756899999999895, 0.00017694500000000127, 0.0001772639999999999, 0.00017705600000000182, 0.00017737500000000045, 0.00017777799999999996, 0.00017734699999999784, 0.00017711100000000063, 0.0001779579999999989, 0.00017731900000000217, 0.0001776250000000007, 0.0001776799999999995, 0.0001772639999999999, 0.00017787500000000095, 0.00017779199999999953, 0.00017738900000000002, 0.000177179999999999, 0.00017783300000000224, 0.00017730499999999913, 0.00017795900000000184, 0.00017775000000000082, 0.0001773059999999986, 0.00017775000000000082, 0.00017719499999999805, 0.0001779310000000027, 0.00017777799999999996, 0.00017752700000000024, 0.00017790199999999715, 0.0001778199999999952]</msg>
<status status="PASS" starttime="20201112 12:43:37.608" endtime="20201112 12:43:37.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.604" endtime="20201112 12:43:37.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.613" endtime="20201112 12:43:37.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:37.617" endtime="20201112 12:43:37.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.615" endtime="20201112 12:43:37.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.612" endtime="20201112 12:43:37.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.244" endtime="20201112 12:43:37.638"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.243" endtime="20201112 12:43:37.638"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.647" endtime="20201112 12:43:37.669"></status>
</kw>
<msg timestamp="20201112 12:43:37.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.645" endtime="20201112 12:43:37.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:37.671" endtime="20201112 12:43:37.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.673" endtime="20201112 12:43:37.674"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.643" endtime="20201112 12:43:37.675"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.640" endtime="20201112 12:43:37.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.682" endtime="20201112 12:43:37.969"></status>
</kw>
<msg timestamp="20201112 12:43:37.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.680" endtime="20201112 12:43:37.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:37.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022773875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:37.973" endtime="20201112 12:43:37.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:37.981" endtime="20201112 12:43:37.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.678" endtime="20201112 12:43:37.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.676" endtime="20201112 12:43:37.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:37.987" level="INFO">${RESULT} = [{'time': 0.022773875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017848599999999853, 'source_diff': 0.00017848599999999853}, {'time': 0.022984917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:37.984" endtime="20201112 12:43:37.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.002" level="INFO">${ACCURACY} = {'time': [0.022773875, 0.022984917, 0.02319225, 0.023388681, 0.023596917, 0.023798333, 0.024004667, 0.024207028, 0.024410361, 0.024613694, 0.024813917, 0.025019306, 0.025210681, 0.025421, 0.025615486,...</msg>
<status status="PASS" starttime="20201112 12:43:37.988" endtime="20201112 12:43:38.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.006" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.005" endtime="20201112 12:43:38.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.008" level="INFO">VALUE: [0.00017848599999999853, 0.00017852800000000071, 0.00017854200000000028, 0.00017825000000000132, 0.00017854199999999681, 0.0001785410000000008, 0.0001788060000000001, 0.0001788609999999989, 0.00017887499999999848, 0.00017892999999999729, 0.00017861100000000213, 0.00017815300000000034, 0.0001781669999999999, 0.0001784030000000006, 0.00017847199999999896, 0.0001783609999999984, 0.00017808299999999902, 0.0001788060000000001, 0.00017875000000000182, 0.0001787909999999976, 0.0001779730000000014, 0.00017829100000000056, 0.00017855599999999985, 0.00017893000000000076, 0.00017872199999999921, 0.000178583999999999, 0.00017869400000000008, 0.00017879200000000053, 0.00017865300000000084, 0.00017838900000000102, 0.00017894400000000033, 0.00017888800000000205, 0.00017813900000000077, 0.00017879100000000106, 0.00017855500000000038, 0.00017854099999999734, 0.00017850000000000157, 0.00017854099999999734, 0.00017901400000000164, 0.00017887500000000195, 0.0001782640000000009, 0.0001788609999999989, 0.00017823699999999776, 0.0001782920000000035, 0.0001789999999999986, 0.00017855600000000332, 0.0001782500000000048, 0.00017873599999999878, 0.00017874999999999835, 0.00017892999999999382]</msg>
<status status="PASS" starttime="20201112 12:43:38.007" endtime="20201112 12:43:38.009"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.002" endtime="20201112 12:43:38.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.012" endtime="20201112 12:43:38.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.015" endtime="20201112 12:43:38.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.014" endtime="20201112 12:43:38.035"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.010" endtime="20201112 12:43:38.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.639" endtime="20201112 12:43:38.036"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:37.638" endtime="20201112 12:43:38.036"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.045" endtime="20201112 12:43:38.067"></status>
</kw>
<msg timestamp="20201112 12:43:38.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.043" endtime="20201112 12:43:38.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:38.068" endtime="20201112 12:43:38.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.071" endtime="20201112 12:43:38.072"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.040" endtime="20201112 12:43:38.073"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.039" endtime="20201112 12:43:38.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.079" endtime="20201112 12:43:38.365"></status>
</kw>
<msg timestamp="20201112 12:43:38.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.078" endtime="20201112 12:43:38.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021730542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021910333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:38.369" endtime="20201112 12:43:38.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.378" endtime="20201112 12:43:38.379"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.075" endtime="20201112 12:43:38.380"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.074" endtime="20201112 12:43:38.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:38.384" level="INFO">${RESULT} = [{'time': 0.021910333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00017979100000000206, 'source_diff': 0.00017979100000000206}, {'time': 0.022114403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201112 12:43:38.381" endtime="20201112 12:43:38.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201112 12:43:38.397" level="INFO">${ACCURACY} = {'time': [0.021910333, 0.022114403, 0.022320764, 0.022529111, 0.0227305, 0.022933875, 0.023129306, 0.023325639, 0.023531986, 0.023738389, 0.023949694, 0.024152042, 0.024363375, 0.024571736, 0.02477909...</msg>
<status status="PASS" starttime="20201112 12:43:38.385" endtime="20201112 12:43:38.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.401" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201112 12:43:38.400" endtime="20201112 12:43:38.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.404" level="INFO">VALUE: [0.00017979100000000206, 0.00017902800000000121, 0.00017911099999999916, 0.00017956900000000095, 0.0001794580000000004, 0.00017955600000000085, 0.00017906999999999992, 0.00017937499999999898, 0.00017908300000000002, 0.00017979199999999806, 0.00017913799999999883, 0.0001794999999999991, 0.00017943100000000073, 0.00017956900000000095, 0.0001798190000000012, 0.0001796389999999988, 0.00017966599999999847, 0.00017911099999999916, 0.00017954199999999781, 0.00017951400000000214, 0.00017980500000000163, 0.0001799030000000021, 0.00017932000000000017, 0.00017973599999999978, 0.00017902799999999774, 0.00017894400000000033, 0.00017976399999999892, 0.00017954200000000128, 0.00017983300000000077, 0.0001793060000000006, 0.00017961099999999966, 0.00017943100000000073, 0.00017913900000000177, 0.0001797640000000024, 0.00017954099999999834, 0.00017974999999999935, 0.00017918100000000048, 0.0001799030000000021, 0.00017944400000000083, 0.00017980499999999816, 0.00017902699999999827, 0.00017970799999999718, 0.0001790969999999996, 0.00017920800000000014, 0.00017915299999999787, 0.0001794999999999991, 0.00017908300000000002, 0.00017934699999999637, 0.00017924999999999885, 0.00017924999999999885]</msg>
<status status="PASS" starttime="20201112 12:43:38.402" endtime="20201112 12:43:38.404"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.398" endtime="20201112 12:43:38.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:38.407" endtime="20201112 12:43:38.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.410" endtime="20201112 12:43:38.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.409" endtime="20201112 12:43:38.430"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.405" endtime="20201112 12:43:38.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.037" endtime="20201112 12:43:38.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.036" endtime="20201112 12:43:38.431"></status>
</kw>
<status status="PASS" starttime="20201112 12:42:59.056" endtime="20201112 12:43:38.431"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:38.436" endtime="20201112 12:43:38.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.434" endtime="20201112 12:43:38.456"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.433" endtime="20201112 12:43:38.456"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:42:58.988" endtime="20201112 12:43:38.457" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:42:17.893" endtime="20201112 12:43:38.461"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201112 12:43:38.518" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201112 12:43:38.526" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201112 12:43:39.636" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201112 12:43:38.517" endtime="20201112 12:43:39.637"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.639" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201112 12:43:39.638" endtime="20201112 12:43:39.640"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.515" endtime="20201112 12:43:39.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.642" endtime="20201112 12:43:39.825"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.641" endtime="20201112 12:43:39.826"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.838" endtime="20201112 12:43:39.850"></status>
</kw>
<msg timestamp="20201112 12:43:39.851" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.836" endtime="20201112 12:43:39.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.853" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.852" endtime="20201112 12:43:39.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.856" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:39.854" endtime="20201112 12:43:39.857"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:39.834" endtime="20201112 12:43:39.857"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:39.832" endtime="20201112 12:43:39.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.831" endtime="20201112 12:43:39.858"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:39.863" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:39.861" endtime="20201112 12:43:39.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.859" endtime="20201112 12:43:39.863"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.830" endtime="20201112 12:43:39.864"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.829" endtime="20201112 12:43:39.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.865" endtime="20201112 12:43:39.867"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.828" endtime="20201112 12:43:39.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.868" endtime="20201112 12:43:39.869"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.826" endtime="20201112 12:43:39.870"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:38.514" endtime="20201112 12:43:39.870"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:39.876" endtime="20201112 12:43:39.896"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.875" endtime="20201112 12:43:39.896"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.909" endtime="20201112 12:43:39.921"></status>
</kw>
<msg timestamp="20201112 12:43:39.922" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.908" endtime="20201112 12:43:39.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.924" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['saml10-xpro', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201112 12:43:39.923" endtime="20201112 12:43:39.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201112 12:43:39.927" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201112 12:43:39.925" endtime="20201112 12:43:39.927"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:39.905" endtime="20201112 12:43:39.928"></status>
</kw>
<status status="FAIL" starttime="20201112 12:43:39.903" endtime="20201112 12:43:39.929"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.901" endtime="20201112 12:43:39.929"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201112 12:43:39.932" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201112 12:43:39.932" endtime="20201112 12:43:39.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.930" endtime="20201112 12:43:39.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.901" endtime="20201112 12:43:39.933"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.900" endtime="20201112 12:43:39.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.934" endtime="20201112 12:43:39.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.899" endtime="20201112 12:43:39.936"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.897" endtime="20201112 12:43:39.937"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.874" endtime="20201112 12:43:39.937"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:39.941" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:39.950" endtime="20201112 12:43:42.055"></status>
</kw>
<msg timestamp="20201112 12:43:42.057" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 362592, 'wakeups': [372642, 382640, 392640, 402640, 412640, 422640, 43...</msg>
<status status="PASS" starttime="20201112 12:43:39.948" endtime="20201112 12:43:42.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.062" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 362592, 'wakeups': [372642, 382640, 392640, 402640, 412640, 422640, 43...</msg>
<status status="PASS" starttime="20201112 12:43:42.059" endtime="20201112 12:43:42.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.065" endtime="20201112 12:43:42.069"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.946" endtime="20201112 12:43:42.070"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.943" endtime="20201112 12:43:42.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.076" level="INFO">${RESULT} = {'wakeups': [372642, 382640, 392640, 402640, 412640, 422640, 432640, 442640, 452640, 462640, 472640, 482640, 492640, 502640, 512640, 522640, 532640, 542640, 552640, 562640, 572640, 582640, 592640, 602...</msg>
<status status="PASS" starttime="20201112 12:43:42.072" endtime="20201112 12:43:42.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.084" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:42.082" endtime="20201112 12:43:42.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.089" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:42.087" endtime="20201112 12:43:42.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.078" endtime="20201112 12:43:42.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.096" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:42.095" endtime="20201112 12:43:42.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.098" level="INFO">VALUE: 362592</msg>
<status status="PASS" starttime="20201112 12:43:42.097" endtime="20201112 12:43:42.098"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.091" endtime="20201112 12:43:42.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.102" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:42.101" endtime="20201112 12:43:42.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.104" level="INFO">VALUE: [372642, 382640, 392640, 402640, 412640, 422640, 432640, 442640, 452640, 462640, 472640, 482640, 492640, 502640, 512640, 522640, 532640, 542640, 552640, 562640, 572640, 582640, 592640, 602640, 612640, 622640, 632640, 642640, 652640, 662640, 672640, 682640, 692640, 702640, 712640, 722640, 732640, 742640, 752640, 762640, 772640, 782640, 792640, 802640, 812640, 822640, 832640, 842640, 852640, 862640, 872640, 882640, 892640, 902640, 912640, 922640, 932640, 942640, 952640, 962640, 972640, 982640, 992640, 1002640, 1012640, 1022640, 1032640, 1042640, 1052640, 1062640, 1072640, 1082640, 1092640, 1102640, 1112640, 1122640, 1132640, 1142640, 1152640, 1162640, 1172640, 1182640, 1192640, 1202640, 1212640, 1222640, 1232640, 1242640, 1252640, 1262640, 1272640, 1282640, 1292640, 1302640, 1312640, 1322640, 1332640, 1342640, 1352640, 1362640]</msg>
<status status="PASS" starttime="20201112 12:43:42.103" endtime="20201112 12:43:42.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.099" endtime="20201112 12:43:42.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.112" endtime="20201112 12:43:42.408"></status>
</kw>
<msg timestamp="20201112 12:43:42.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064375458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074391514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.110" endtime="20201112 12:43:42.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.064375458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074391514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:42.412" endtime="20201112 12:43:42.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.419" endtime="20201112 12:43:42.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.108" endtime="20201112 12:43:42.421"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.106" endtime="20201112 12:43:42.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:42.446" level="INFO">${RESULT} = {'time': [0.064375458, 0.074391514, 0.084357208, 0.094324014, 0.104291069, 0.114258208, 0.124225514, 0.134192764, 0.144159986, 0.154127375, 0.164094931, 0.174061792, 0.184028403, 0.193995986, 0.203964...</msg>
<status status="PASS" starttime="20201112 12:43:42.422" endtime="20201112 12:43:42.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.450" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:42.449" endtime="20201112 12:43:42.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.453" level="INFO">VALUE: 0.064375458</msg>
<status status="PASS" starttime="20201112 12:43:42.452" endtime="20201112 12:43:42.453"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.447" endtime="20201112 12:43:42.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.458" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:42.457" endtime="20201112 12:43:42.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:42.460" level="INFO">VALUE: [0.074391514, 0.084357208, 0.094324014, 0.104291069, 0.114258208, 0.124225514, 0.134192764, 0.144159986, 0.154127375, 0.164094931, 0.174061792, 0.184028403, 0.193995986, 0.203964097, 0.21393225, 0.2239005, 0.233868986, 0.243837181, 0.253805403, 0.263774125, 0.273742375, 0.283710681, 0.293679556, 0.303647958, 0.313616653, 0.32358525, 0.333553722, 0.343521569, 0.353488875, 0.363456569, 0.373423736, 0.383391736, 0.39335975, 0.403326792, 0.413293875, 0.4232605, 0.433227389, 0.443194681, 0.453162, 0.463129417, 0.473096903, 0.483064486, 0.493031556, 0.502998764, 0.512965722, 0.522933236, 0.532900639, 0.542868625, 0.552836347, 0.562803458, 0.572770708, 0.58273825, 0.592706028, 0.602673528, 0.612641042, 0.622608389, 0.632575889, 0.642543472, 0.652511222, 0.66247825, 0.672445639, 0.682412833, 0.692380278, 0.702347819, 0.712315514, 0.722283292, 0.732250778, 0.742218556, 0.752186611, 0.762154514, 0.772123069, 0.782091986, 0.792060514, 0.8020285, 0.811995986, 0.821963361, 0.831930542, 0.841897833, 0.851865292, 0.861832681, 0.871800097, 0.881767833, 0.891735125, 0.901703264, 0.911671569, 0.921639597, 0.931607431, 0.941575639, 0.951543306, 0.961511042, 0.971478028, 0.981445139, 0.991412611, 1.001380389, 1.011347833, 1.021316139, 1.031283931, 1.041252486, 1.051220347, 1.061188014] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:42.459" endtime="20201112 12:43:42.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.454" endtime="20201112 12:43:42.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.463" endtime="20201112 12:43:42.465"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:42.467" endtime="20201112 12:43:42.486"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.465" endtime="20201112 12:43:42.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.462" endtime="20201112 12:43:42.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.941" endtime="20201112 12:43:42.487"></status>
</kw>
<msg timestamp="20201112 12:43:42.488" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:42.495" endtime="20201112 12:43:44.608"></status>
</kw>
<msg timestamp="20201112 12:43:44.609" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2916293, 'wakeups': [2926344, 2936341, 2946341, 2956341, 2966341, 2976...</msg>
<status status="PASS" starttime="20201112 12:43:42.494" endtime="20201112 12:43:44.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.614" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 2916293, 'wakeups': [2926344, 2936341, 2946341, 2956341, 2966341, 2976...</msg>
<status status="PASS" starttime="20201112 12:43:44.611" endtime="20201112 12:43:44.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.617" endtime="20201112 12:43:44.620"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.491" endtime="20201112 12:43:44.621"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.489" endtime="20201112 12:43:44.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:44.627" level="INFO">${RESULT} = {'wakeups': [2926344, 2936341, 2946341, 2956341, 2966341, 2976341, 2986341, 2996341, 3006341, 3016341, 3026341, 3036341, 3046341, 3056341, 3066341, 3076341, 3086341, 3096341, 3106341, 3116341, 3126341...</msg>
<status status="PASS" starttime="20201112 12:43:44.623" endtime="20201112 12:43:44.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.637" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:44.633" endtime="20201112 12:43:44.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.642" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:44.640" endtime="20201112 12:43:44.643"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.629" endtime="20201112 12:43:44.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.650" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:44.649" endtime="20201112 12:43:44.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.652" level="INFO">VALUE: 2916293</msg>
<status status="PASS" starttime="20201112 12:43:44.651" endtime="20201112 12:43:44.653"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.645" endtime="20201112 12:43:44.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.657" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:44.656" endtime="20201112 12:43:44.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.659" level="INFO">VALUE: [2926344, 2936341, 2946341, 2956341, 2966341, 2976341, 2986341, 2996341, 3006341, 3016341, 3026341, 3036341, 3046341, 3056341, 3066341, 3076341, 3086341, 3096341, 3106341, 3116341, 3126341, 3136341, 3146341, 3156341, 3166341, 3176341, 3186341, 3196341, 3206341, 3216341, 3226341, 3236341, 3246341, 3256341, 3266341, 3276341, 3286341, 3296341, 3306341, 3316341, 3326341, 3336341, 3346341, 3356341, 3366341, 3376341, 3386341, 3396341, 3406341, 3416341, 3426341, 3436341, 3446341, 3456341, 3466341, 3476341, 3486341, 3496341, 3506341, 3516341, 3526341, 3536341, 3546341, 3556341, 3566341, 3576341, 3586341, 3596341, 3606341, 3616341, 3626341, 3636341, 3646341, 3656341, 3666341, 3676341, 3686341, 3696341, 3706341, 3716341, 3726341, 3736341, 3746341, 3756341, 3766341, 3776341, 3786341, 3796341, 3806341, 3816341, 3826341, 3836341, 3846341, 3856341, 3866341, 3876341, 3886341, 3896341, 3906341, 3916341]</msg>
<status status="PASS" starttime="20201112 12:43:44.658" endtime="20201112 12:43:44.660"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.654" endtime="20201112 12:43:44.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.666" endtime="20201112 12:43:44.971"></status>
</kw>
<msg timestamp="20201112 12:43:44.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029533972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.665" endtime="20201112 12:43:44.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:44.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029533972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:44.975" endtime="20201112 12:43:44.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:44.983" endtime="20201112 12:43:44.984"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.662" endtime="20201112 12:43:44.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:44.661" endtime="20201112 12:43:44.985"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:45.009" level="INFO">${RESULT} = {'time': [0.019515958, 0.029533972, 0.039499889, 0.049468472, 0.059436319, 0.069404542, 0.079372889, 0.089341611, 0.099310236, 0.109279111, 0.119247847, 0.129216361, 0.13918475, 0.149153444, 0.1591211...</msg>
<status status="PASS" starttime="20201112 12:43:44.986" endtime="20201112 12:43:45.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.013" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:45.012" endtime="20201112 12:43:45.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.015" level="INFO">VALUE: 0.019515958</msg>
<status status="PASS" starttime="20201112 12:43:45.015" endtime="20201112 12:43:45.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.009" endtime="20201112 12:43:45.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.021" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:45.020" endtime="20201112 12:43:45.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:45.023" level="INFO">VALUE: [0.029533972, 0.039499889, 0.049468472, 0.059436319, 0.069404542, 0.079372889, 0.089341611, 0.099310236, 0.109279111, 0.119247847, 0.129216361, 0.13918475, 0.149153444, 0.159121139, 0.169089014, 0.179057111, 0.189025639, 0.198993764, 0.208961917, 0.218930167, 0.228898361, 0.238867194, 0.248835694, 0.258804403, 0.268773625, 0.278742417, 0.288711236, 0.298680653, 0.308649486, 0.31861725, 0.328584944, 0.338552597, 0.348520792, 0.358489611, 0.368458028, 0.378426542, 0.388395528, 0.398364278, 0.408332806, 0.418301361, 0.428269542, 0.438237778, 0.448206569, 0.458174917, 0.468143778, 0.478112694, 0.488081611, 0.498050764, 0.508019736, 0.517988736, 0.527957361, 0.537926417, 0.547895458, 0.557863986, 0.567831583, 0.577799306, 0.587767097, 0.597734694, 0.607702097, 0.617669722, 0.627637431, 0.637604278, 0.647570847, 0.657538375, 0.667505958, 0.677473514, 0.687441222, 0.697408347, 0.707375306, 0.717341681, 0.727308583, 0.737275417, 0.747243, 0.757210569, 0.767178028, 0.777145333, 0.787112528, 0.797080347, 0.807048014, 0.817014972, 0.826982083, 0.836949292, 0.846916569, 0.856883889, 0.866851014, 0.876818458, 0.886785778, 0.896753069, 0.906720722, 0.916688694, 0.926656167, 0.936623486, 0.946591139, 0.956558, 0.966525083, 0.976492306, 0.986459444, 0.996426486, 1.006393639, 1.016361] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:45.022" endtime="20201112 12:43:45.024"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.017" endtime="20201112 12:43:45.024"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.026" endtime="20201112 12:43:45.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:45.030" endtime="20201112 12:43:45.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.028" endtime="20201112 12:43:45.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.025" endtime="20201112 12:43:45.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:42.488" endtime="20201112 12:43:45.050"></status>
</kw>
<msg timestamp="20201112 12:43:45.051" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:45.058" endtime="20201112 12:43:47.170"></status>
</kw>
<msg timestamp="20201112 12:43:47.172" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5487696, 'wakeups': [5497747, 5507744, 5517744, 5527744, 5537744, 5547...</msg>
<status status="PASS" starttime="20201112 12:43:45.057" endtime="20201112 12:43:47.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.177" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 5487696, 'wakeups': [5497747, 5507744, 5517744, 5527744, 5537744, 5547...</msg>
<status status="PASS" starttime="20201112 12:43:47.174" endtime="20201112 12:43:47.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.180" endtime="20201112 12:43:47.183"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.054" endtime="20201112 12:43:47.184"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.052" endtime="20201112 12:43:47.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.190" level="INFO">${RESULT} = {'wakeups': [5497747, 5507744, 5517744, 5527744, 5537744, 5547744, 5557744, 5567744, 5577744, 5587744, 5597744, 5607744, 5617744, 5627744, 5637744, 5647744, 5657744, 5667744, 5677744, 5687744, 5697744...</msg>
<status status="PASS" starttime="20201112 12:43:47.186" endtime="20201112 12:43:47.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.198" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:47.196" endtime="20201112 12:43:47.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.203" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:47.201" endtime="20201112 12:43:47.203"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.192" endtime="20201112 12:43:47.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.207" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:47.206" endtime="20201112 12:43:47.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.209" level="INFO">VALUE: 5487696</msg>
<status status="PASS" starttime="20201112 12:43:47.208" endtime="20201112 12:43:47.210"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.204" endtime="20201112 12:43:47.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.214" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:47.213" endtime="20201112 12:43:47.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.216" level="INFO">VALUE: [5497747, 5507744, 5517744, 5527744, 5537744, 5547744, 5557744, 5567744, 5577744, 5587744, 5597744, 5607744, 5617744, 5627744, 5637744, 5647744, 5657744, 5667744, 5677744, 5687744, 5697744, 5707744, 5717744, 5727744, 5737744, 5747744, 5757744, 5767744, 5777744, 5787744, 5797744, 5807744, 5817744, 5827744, 5837744, 5847744, 5857744, 5867744, 5877744, 5887744, 5897744, 5907744, 5917744, 5927744, 5937744, 5947744, 5957744, 5967744, 5977744, 5987744, 5997744, 6007744, 6017744, 6027744, 6037744, 6047744, 6057744, 6067744, 6077744, 6087744, 6097744, 6107744, 6117744, 6127744, 6137744, 6147744, 6157744, 6167744, 6177744, 6187744, 6197744, 6207744, 6217744, 6227744, 6237744, 6247744, 6257744, 6267744, 6277744, 6287744, 6297744, 6307744, 6317744, 6327744, 6337744, 6347744, 6357744, 6367744, 6377744, 6387744, 6397744, 6407744, 6417744, 6427744, 6437744, 6447744, 6457744, 6467744, 6477744, 6487744]</msg>
<status status="PASS" starttime="20201112 12:43:47.215" endtime="20201112 12:43:47.217"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.211" endtime="20201112 12:43:47.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.229" endtime="20201112 12:43:47.520"></status>
</kw>
<msg timestamp="20201112 12:43:47.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029576, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:47.228" endtime="20201112 12:43:47.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019558444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029576, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:43:47.524" endtime="20201112 12:43:47.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.531" endtime="20201112 12:43:47.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.224" endtime="20201112 12:43:47.533"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.218" endtime="20201112 12:43:47.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:47.557" level="INFO">${RESULT} = {'time': [0.019558444, 0.029576, 0.039540667, 0.049508083, 0.059475681, 0.069443472, 0.079411708, 0.089380597, 0.099349028, 0.109316917, 0.119284764, 0.129253139, 0.139221403, 0.149189028, 0.159157208...</msg>
<status status="PASS" starttime="20201112 12:43:47.534" endtime="20201112 12:43:47.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.561" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201112 12:43:47.560" endtime="20201112 12:43:47.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.563" level="INFO">VALUE: 0.019558444</msg>
<status status="PASS" starttime="20201112 12:43:47.562" endtime="20201112 12:43:47.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.558" endtime="20201112 12:43:47.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.568" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:47.567" endtime="20201112 12:43:47.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:47.570" level="INFO">VALUE: [0.029576, 0.039540667, 0.049508083, 0.059475681, 0.069443472, 0.079411708, 0.089380597, 0.099349028, 0.109316917, 0.119284764, 0.129253139, 0.139221403, 0.149189028, 0.159157208, 0.169125014, 0.179093042, 0.189061431, 0.199029875, 0.208998236, 0.218966181, 0.228934, 0.238902347, 0.248870639, 0.258838861, 0.268806736, 0.278775083, 0.288743722, 0.298712292, 0.308680653, 0.318648819, 0.328616861, 0.33858525, 0.348553625, 0.35852225, 0.368491097, 0.378459194, 0.388427486, 0.398395486, 0.408363806, 0.418332264, 0.428300583, 0.438268889, 0.448237111, 0.458205139, 0.46817325, 0.478141042, 0.488109097, 0.498077083, 0.508045333, 0.518013208, 0.527981083, 0.537949153, 0.547917236, 0.557885361, 0.567853944, 0.577822167, 0.587790278, 0.597758458, 0.60772675, 0.617694792, 0.627663139, 0.637631972, 0.647600875, 0.657569028, 0.667537722, 0.677505833, 0.687474194, 0.697442736, 0.707411583, 0.717380653, 0.727349208, 0.73731775, 0.747285931, 0.757253667, 0.767221528, 0.777189194, 0.787157347, 0.797125319, 0.807093069, 0.817060931, 0.82702875, 0.836996236, 0.846963625, 0.856930889, 0.866898556, 0.876866264, 0.886834389, 0.896802694, 0.906771153, 0.916738972, 0.926706972, 0.936675389, 0.946643458, 0.956611472, 0.966579389, 0.976547389, 0.986514806, 0.996482347, 1.006450486, 1.016418972] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:47.569" endtime="20201112 12:43:47.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.564" endtime="20201112 12:43:47.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.573" endtime="20201112 12:43:47.575"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:47.577" endtime="20201112 12:43:47.596"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.575" endtime="20201112 12:43:47.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.572" endtime="20201112 12:43:47.597"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:45.051" endtime="20201112 12:43:47.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.939" endtime="20201112 12:43:47.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.939" endtime="20201112 12:43:47.598"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:47.600" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:47.610" endtime="20201112 12:43:49.723"></status>
</kw>
<msg timestamp="20201112 12:43:49.724" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8048383, 'wakeups': [8058480, 8068474, 8078474, 8088474, 8098474, 8108...</msg>
<status status="PASS" starttime="20201112 12:43:47.608" endtime="20201112 12:43:49.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 8048383, 'wakeups': [8058480, 8068474, 8078474, 8088474, 8098474, 8108...</msg>
<status status="PASS" starttime="20201112 12:43:49.726" endtime="20201112 12:43:49.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.732" endtime="20201112 12:43:49.735"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.606" endtime="20201112 12:43:49.737"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.602" endtime="20201112 12:43:49.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:49.743" level="INFO">${RESULT} = {'wakeups': [8058480, 8068474, 8078474, 8088474, 8098474, 8108474, 8118474, 8128474, 8138474, 8148474, 8158474, 8168474, 8178474, 8188474, 8198474, 8208474, 8218474, 8228474, 8238474, 8248474, 8258474...</msg>
<status status="PASS" starttime="20201112 12:43:49.739" endtime="20201112 12:43:49.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.751" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:49.749" endtime="20201112 12:43:49.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.755" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:49.753" endtime="20201112 12:43:49.756"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.745" endtime="20201112 12:43:49.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.761" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:49.760" endtime="20201112 12:43:49.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.763" level="INFO">VALUE: 8048383</msg>
<status status="PASS" starttime="20201112 12:43:49.762" endtime="20201112 12:43:49.764"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.758" endtime="20201112 12:43:49.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.768" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:49.767" endtime="20201112 12:43:49.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:49.770" level="INFO">VALUE: [8058480, 8068474, 8078474, 8088474, 8098474, 8108474, 8118474, 8128474, 8138474, 8148474, 8158474, 8168474, 8178474, 8188474, 8198474, 8208474, 8218474, 8228474, 8238474, 8248474, 8258474, 8268474, 8278474, 8288474, 8298474, 8308474, 8318474, 8328474, 8338474, 8348474, 8358474, 8368474, 8378474, 8388474, 8398474, 8408474, 8418474, 8428474, 8438474, 8448474, 8458474, 8468474, 8478474, 8488474, 8498474, 8508474, 8518474, 8528474, 8538474, 8548474, 8558474, 8568474, 8578474, 8588474, 8598474, 8608474, 8618474, 8628474, 8638474, 8648474, 8658474, 8668474, 8678474, 8688474, 8698474, 8708474, 8718474, 8728474, 8738474, 8748474, 8758474, 8768474, 8778474, 8788474, 8798474, 8808474, 8818474, 8828474, 8838474, 8848474, 8858474, 8868474, 8878474, 8888474, 8898474, 8908474, 8918474, 8928474, 8938474, 8948474, 8958474, 8968474, 8978474, 8988474, 8998474, 9008474, 9018474, 9028474, 9038474, 9048474]</msg>
<status status="PASS" starttime="20201112 12:43:49.769" endtime="20201112 12:43:49.771"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.765" endtime="20201112 12:43:49.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:49.777" endtime="20201112 12:43:50.068"></status>
</kw>
<msg timestamp="20201112 12:43:50.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024478569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034540875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:49.776" endtime="20201112 12:43:50.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024478569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034540875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:50.072" endtime="20201112 12:43:50.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.079" endtime="20201112 12:43:50.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.773" endtime="20201112 12:43:50.082"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:49.772" endtime="20201112 12:43:50.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:50.106" level="INFO">${RESULT} = {'time': [0.024478569, 0.034540875, 0.044502125, 0.054469028, 0.064436375, 0.074403444, 0.084370528, 0.094338097, 0.104305806, 0.114273139, 0.124241181, 0.134209278, 0.144176708, 0.154145, 0.164113833...</msg>
<status status="PASS" starttime="20201112 12:43:50.083" endtime="20201112 12:43:50.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.111" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:50.110" endtime="20201112 12:43:50.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.113" level="INFO">VALUE: 0.024478569</msg>
<status status="PASS" starttime="20201112 12:43:50.112" endtime="20201112 12:43:50.113"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.107" endtime="20201112 12:43:50.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.118" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:50.117" endtime="20201112 12:43:50.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:50.120" level="INFO">VALUE: [0.034540875, 0.044502125, 0.054469028, 0.064436375, 0.074403444, 0.084370528, 0.094338097, 0.104305806, 0.114273139, 0.124241181, 0.134209278, 0.144176708, 0.154145, 0.164113833, 0.174083292, 0.184052375, 0.194020903, 0.203989694, 0.213959167, 0.223928403, 0.233897556, 0.243866486, 0.253834958, 0.263803639, 0.273772875, 0.283742042, 0.293711736, 0.303681708, 0.313651319, 0.323620389, 0.333590444, 0.343560306, 0.353530528, 0.363499972, 0.373469431, 0.383438847, 0.393408236, 0.403377486, 0.413346528, 0.423315319, 0.433284458, 0.44325325, 0.453221958, 0.463190611, 0.473159514, 0.483128694, 0.493097472, 0.503066486, 0.513035569, 0.523005278, 0.532974278, 0.542943625, 0.552913319, 0.562883181, 0.572852736, 0.582822028, 0.592790819, 0.602759736, 0.612728181, 0.622697167, 0.632665736, 0.642634361, 0.652603278, 0.662572528, 0.672541556, 0.68251, 0.692478153, 0.702446569, 0.712414389, 0.722382306, 0.732350486, 0.742319028, 0.752287444, 0.762255403, 0.7722235, 0.782191958, 0.792160333, 0.802129444, 0.812098597, 0.822067681, 0.832036639, 0.842005417, 0.851973778, 0.86194175, 0.871909528, 0.881877403, 0.891845264, 0.901813028, 0.9117805, 0.921748181, 0.931715931, 0.941684042, 0.951652028, 0.961620472, 0.971588347, 0.981556014, 0.991523889, 1.001492167, 1.011459889, 1.021427319] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:50.119" endtime="20201112 12:43:50.120"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.114" endtime="20201112 12:43:50.121"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.123" endtime="20201112 12:43:50.124"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:50.126" endtime="20201112 12:43:50.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.125" endtime="20201112 12:43:50.146"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.121" endtime="20201112 12:43:50.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.601" endtime="20201112 12:43:50.147"></status>
</kw>
<msg timestamp="20201112 12:43:50.147" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:50.155" endtime="20201112 12:43:52.279"></status>
</kw>
<msg timestamp="20201112 12:43:52.280" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10601399, 'wakeups': [10611496, 10621490, 10631490, 10641490, 10651490...</msg>
<status status="PASS" starttime="20201112 12:43:50.154" endtime="20201112 12:43:52.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.286" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 10601399, 'wakeups': [10611496, 10621490, 10631490, 10641490, 10651490...</msg>
<status status="PASS" starttime="20201112 12:43:52.282" endtime="20201112 12:43:52.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.288" endtime="20201112 12:43:52.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.151" endtime="20201112 12:43:52.292"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.149" endtime="20201112 12:43:52.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.299" level="INFO">${RESULT} = {'wakeups': [10611496, 10621490, 10631490, 10641490, 10651490, 10661490, 10671490, 10681490, 10691490, 10701490, 10711490, 10721490, 10731490, 10741490, 10751490, 10761490, 10771490, 10781490, 1079149...</msg>
<status status="PASS" starttime="20201112 12:43:52.295" endtime="20201112 12:43:52.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.312" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:52.310" endtime="20201112 12:43:52.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.314" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:52.313" endtime="20201112 12:43:52.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.300" endtime="20201112 12:43:52.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.320" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:52.318" endtime="20201112 12:43:52.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.322" level="INFO">VALUE: 10601399</msg>
<status status="PASS" starttime="20201112 12:43:52.321" endtime="20201112 12:43:52.322"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.316" endtime="20201112 12:43:52.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.327" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:52.326" endtime="20201112 12:43:52.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.329" level="INFO">VALUE: [10611496, 10621490, 10631490, 10641490, 10651490, 10661490, 10671490, 10681490, 10691490, 10701490, 10711490, 10721490, 10731490, 10741490, 10751490, 10761490, 10771490, 10781490, 10791490, 10801490, 10811490, 10821490, 10831490, 10841490, 10851490, 10861490, 10871490, 10881490, 10891490, 10901490, 10911490, 10921490, 10931490, 10941490, 10951490, 10961490, 10971490, 10981490, 10991490, 11001490, 11011490, 11021490, 11031490, 11041490, 11051490, 11061490, 11071490, 11081490, 11091490, 11101490, 11111490, 11121490, 11131490, 11141490, 11151490, 11161490, 11171490, 11181490, 11191490, 11201490, 11211490, 11221490, 11231490, 11241490, 11251490, 11261490, 11271490, 11281490, 11291490, 11301490, 11311490, 11321490, 11331490, 11341490, 11351490, 11361490, 11371490, 11381490, 11391490, 11401490, 11411490, 11421490, 11431490, 11441490, 11451490, 11461490, 11471490, 11481490, 11491490, 11501490, 11511490, 11521490, 11531490, 11541490, 11551490, 11561490, 11571490, 11581490, 11591490, 11601490]</msg>
<status status="PASS" starttime="20201112 12:43:52.328" endtime="20201112 12:43:52.329"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.324" endtime="20201112 12:43:52.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.336" endtime="20201112 12:43:52.626"></status>
</kw>
<msg timestamp="20201112 12:43:52.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029735722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:52.335" endtime="20201112 12:43:52.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01967125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029735722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:43:52.630" endtime="20201112 12:43:52.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.637" endtime="20201112 12:43:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.332" endtime="20201112 12:43:52.639"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.331" endtime="20201112 12:43:52.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:52.663" level="INFO">${RESULT} = {'time': [0.01967125, 0.029735722, 0.039698431, 0.049666833, 0.059635444, 0.069604111, 0.079572417, 0.089540847, 0.099508986, 0.109477069, 0.119445361, 0.129413458, 0.139381222, 0.149349306, 0.159317,...</msg>
<status status="PASS" starttime="20201112 12:43:52.641" endtime="20201112 12:43:52.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.667" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:52.666" endtime="20201112 12:43:52.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.669" level="INFO">VALUE: 0.01967125</msg>
<status status="PASS" starttime="20201112 12:43:52.668" endtime="20201112 12:43:52.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.664" endtime="20201112 12:43:52.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.674" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:52.673" endtime="20201112 12:43:52.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:52.678" level="INFO">VALUE: [0.029735722, 0.039698431, 0.049666833, 0.059635444, 0.069604111, 0.079572417, 0.089540847, 0.099508986, 0.109477069, 0.119445361, 0.129413458, 0.139381222, 0.149349306, 0.159317, 0.169284431, 0.179251472, 0.189219639, 0.19918725, 0.20915475, 0.219122792, 0.229090833, 0.239058806, 0.249026472, 0.258994069, 0.268961778, 0.278929875, 0.288898111, 0.298866028, 0.308834083, 0.318801986, 0.328770139, 0.338738694, 0.348706847, 0.358675583, 0.368644528, 0.378613361, 0.388582153, 0.398550708, 0.40851975, 0.418488972, 0.428458042, 0.438426833, 0.448395653, 0.458364375, 0.468332722, 0.478300875, 0.488269917, 0.498239, 0.508208208, 0.518177056, 0.528145681, 0.538114153, 0.548083472, 0.558052653, 0.568021722, 0.577990625, 0.587959597, 0.597928944, 0.607897903, 0.617866806, 0.62783575, 0.637804819, 0.647773514, 0.657742486, 0.667711347, 0.677680667, 0.687649986, 0.697619361, 0.707588958, 0.717558167, 0.727527597, 0.737497014, 0.747466806, 0.75743575, 0.767405514, 0.777375083, 0.787344472, 0.797313431, 0.807282153, 0.817251208, 0.827220417, 0.837189625, 0.847158875, 0.857127708, 0.867097125, 0.877066458, 0.887035153, 0.897004375, 0.906974, 0.916943722, 0.926913514, 0.936883556, 0.946853222, 0.956823, 0.966792361, 0.976761778, 0.986731222, 0.996701278, 1.006670861, 1.016640722] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:52.676" endtime="20201112 12:43:52.678"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.671" endtime="20201112 12:43:52.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.681" endtime="20201112 12:43:52.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:52.684" endtime="20201112 12:43:52.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.683" endtime="20201112 12:43:52.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.679" endtime="20201112 12:43:52.705"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:50.148" endtime="20201112 12:43:52.705"></status>
</kw>
<msg timestamp="20201112 12:43:52.705" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:52.713" endtime="20201112 12:43:54.836"></status>
</kw>
<msg timestamp="20201112 12:43:54.837" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13167287, 'wakeups': [13177384, 13187378, 13197378, 13207378, 13217378...</msg>
<status status="PASS" starttime="20201112 12:43:52.711" endtime="20201112 12:43:54.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.843" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 13167287, 'wakeups': [13177384, 13187378, 13197378, 13207378, 13217378...</msg>
<status status="PASS" starttime="20201112 12:43:54.840" endtime="20201112 12:43:54.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.845" endtime="20201112 12:43:54.848"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.709" endtime="20201112 12:43:54.850"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.707" endtime="20201112 12:43:54.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:54.856" level="INFO">${RESULT} = {'wakeups': [13177384, 13187378, 13197378, 13207378, 13217378, 13227378, 13237378, 13247378, 13257378, 13267378, 13277378, 13287378, 13297378, 13307378, 13317378, 13327378, 13337378, 13347378, 1335737...</msg>
<status status="PASS" starttime="20201112 12:43:54.852" endtime="20201112 12:43:54.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.864" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:54.862" endtime="20201112 12:43:54.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.868" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:54.867" endtime="20201112 12:43:54.868"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.858" endtime="20201112 12:43:54.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.873" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:54.872" endtime="20201112 12:43:54.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.875" level="INFO">VALUE: 13167287</msg>
<status status="PASS" starttime="20201112 12:43:54.874" endtime="20201112 12:43:54.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.870" endtime="20201112 12:43:54.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.880" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:54.879" endtime="20201112 12:43:54.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:54.882" level="INFO">VALUE: [13177384, 13187378, 13197378, 13207378, 13217378, 13227378, 13237378, 13247378, 13257378, 13267378, 13277378, 13287378, 13297378, 13307378, 13317378, 13327378, 13337378, 13347378, 13357378, 13367378, 13377378, 13387378, 13397378, 13407378, 13417378, 13427378, 13437378, 13447378, 13457378, 13467378, 13477378, 13487378, 13497378, 13507378, 13517378, 13527378, 13537378, 13547378, 13557378, 13567378, 13577378, 13587378, 13597378, 13607378, 13617378, 13627378, 13637378, 13647378, 13657378, 13667378, 13677378, 13687378, 13697378, 13707378, 13717378, 13727378, 13737378, 13747378, 13757378, 13767378, 13777378, 13787378, 13797378, 13807378, 13817378, 13827378, 13837378, 13847378, 13857378, 13867378, 13877378, 13887378, 13897378, 13907378, 13917378, 13927378, 13937378, 13947378, 13957378, 13967378, 13977378, 13987378, 13997378, 14007378, 14017378, 14027378, 14037378, 14047378, 14057378, 14067378, 14077378, 14087378, 14097378, 14107378, 14117378, 14127378, 14137378, 14147378, 14157378, 14167378]</msg>
<status status="PASS" starttime="20201112 12:43:54.881" endtime="20201112 12:43:54.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.876" endtime="20201112 12:43:54.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:54.889" endtime="20201112 12:43:55.181"></status>
</kw>
<msg timestamp="20201112 12:43:55.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029736069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:54.888" endtime="20201112 12:43:55.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019669681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029736069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:55.184" endtime="20201112 12:43:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.192" endtime="20201112 12:43:55.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.885" endtime="20201112 12:43:55.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:54.884" endtime="20201112 12:43:55.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:55.262" level="INFO">${RESULT} = {'time': [0.019669681, 0.029736069, 0.039700694, 0.049671069, 0.059641014, 0.069610806, 0.079580431, 0.089550403, 0.09952025, 0.109490056, 0.119459972, 0.12943, 0.139399431, 0.149368528, 0.159337319, ...</msg>
<status status="PASS" starttime="20201112 12:43:55.195" endtime="20201112 12:43:55.263"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.267" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201112 12:43:55.266" endtime="20201112 12:43:55.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.269" level="INFO">VALUE: 0.019669681</msg>
<status status="PASS" starttime="20201112 12:43:55.268" endtime="20201112 12:43:55.270"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.263" endtime="20201112 12:43:55.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.275" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:55.274" endtime="20201112 12:43:55.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:55.277" level="INFO">VALUE: [0.029736069, 0.039700694, 0.049671069, 0.059641014, 0.069610806, 0.079580431, 0.089550403, 0.09952025, 0.109490056, 0.119459972, 0.12943, 0.139399431, 0.149368528, 0.159337319, 0.169306181, 0.179275069, 0.189243958, 0.199212944, 0.209181833, 0.219150542, 0.229119125, 0.239087917, 0.249057056, 0.259025806, 0.268994444, 0.278963625, 0.288933444, 0.298903194, 0.308872819, 0.318841917, 0.328810764, 0.338779611, 0.348748528, 0.358717958, 0.368687514, 0.378657306, 0.388626903, 0.398596042, 0.408564431, 0.418533194, 0.428501819, 0.438470583, 0.448439722, 0.458409014, 0.468378153, 0.478347125, 0.488316403, 0.498285417, 0.508255069, 0.518224, 0.528192875, 0.538161875, 0.548130972, 0.558100056, 0.568068736, 0.578037333, 0.588006125, 0.597974833, 0.607943458, 0.617911792, 0.627880514, 0.637849333, 0.647818403, 0.657787111, 0.667756306, 0.677725042, 0.687694083, 0.697662917, 0.707632069, 0.717600958, 0.727570097, 0.737538264, 0.747506347, 0.757473958, 0.767441931, 0.777410292, 0.787378903, 0.797347875, 0.807316958, 0.817285472, 0.827254014, 0.837222681, 0.847191361, 0.857159986, 0.867129125, 0.877098958, 0.887068625, 0.897038222, 0.907007347, 0.916976111, 0.926944819, 0.93691275, 0.946881042, 0.956848694, 0.966816708, 0.976785431, 0.986753944, 0.996722236, 1.006690583, 1.016659306] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:55.276" endtime="20201112 12:43:55.277"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.271" endtime="20201112 12:43:55.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.280" endtime="20201112 12:43:55.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:55.283" endtime="20201112 12:43:55.302"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.282" endtime="20201112 12:43:55.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.278" endtime="20201112 12:43:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:52.706" endtime="20201112 12:43:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.599" endtime="20201112 12:43:55.304"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:47.598" endtime="20201112 12:43:55.305"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:43:55.307" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:55.315" endtime="20201112 12:43:57.429"></status>
</kw>
<msg timestamp="20201112 12:43:57.430" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15777605, 'wakeups': [15787752, 15797746, 15807746, 15817746, 15827746...</msg>
<status status="PASS" starttime="20201112 12:43:55.313" endtime="20201112 12:43:57.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.433" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 15777605, 'wakeups': [15787752, 15797746, 15807746, 15817746, 15827746...</msg>
<status status="PASS" starttime="20201112 12:43:57.431" endtime="20201112 12:43:57.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.434" endtime="20201112 12:43:57.435"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.311" endtime="20201112 12:43:57.436"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.309" endtime="20201112 12:43:57.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.439" level="INFO">${RESULT} = {'wakeups': [15787752, 15797746, 15807746, 15817746, 15827746, 15837746, 15847746, 15857747, 15867747, 15877746, 15887746, 15897746, 15907747, 15917747, 15927747, 15937747, 15947746, 15957746, 1596774...</msg>
<status status="PASS" starttime="20201112 12:43:57.437" endtime="20201112 12:43:57.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.443" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:57.442" endtime="20201112 12:43:57.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.445" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:57.444" endtime="20201112 12:43:57.445"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.440" endtime="20201112 12:43:57.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.450" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:57.449" endtime="20201112 12:43:57.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.452" level="INFO">VALUE: 15777605</msg>
<status status="PASS" starttime="20201112 12:43:57.451" endtime="20201112 12:43:57.452"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.446" endtime="20201112 12:43:57.452"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.457" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:57.456" endtime="20201112 12:43:57.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.459" level="INFO">VALUE: [15787752, 15797746, 15807746, 15817746, 15827746, 15837746, 15847746, 15857747, 15867747, 15877746, 15887746, 15897746, 15907747, 15917747, 15927747, 15937747, 15947746, 15957746, 15967746, 15977746, 15987746, 15997746, 16007746, 16017746, 16027746, 16037746, 16047747, 16057746, 16067746, 16077746, 16087746, 16097747, 16107747, 16117746, 16127746, 16137746, 16147746, 16157747, 16167747, 16177746, 16187746, 16197746, 16207746, 16217746, 16227746, 16237746, 16247746, 16257746, 16267746, 16277746, 16287747, 16297747, 16307747, 16317746, 16327746, 16337747, 16347747, 16357747, 16367747, 16377747, 16387746, 16397746, 16407746, 16417746, 16427747, 16437747, 16447746, 16457746, 16467746, 16477746, 16487746, 16497747, 16507746, 16517746, 16527746, 16537746, 16547746, 16557747, 16567747, 16577747, 16587747, 16597746, 16607746, 16617746, 16627746, 16637746, 16647747, 16657747, 16667747, 16677746, 16687746, 16697746, 16707746, 16717746, 16727747, 16737746, 16747746, 16757747, 16767747, 16777746]</msg>
<status status="PASS" starttime="20201112 12:43:57.458" endtime="20201112 12:43:57.460"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.453" endtime="20201112 12:43:57.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.471" endtime="20201112 12:43:57.763"></status>
</kw>
<msg timestamp="20201112 12:43:57.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032836778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.465" endtime="20201112 12:43:57.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022721792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032836778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:43:57.767" endtime="20201112 12:43:57.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.774" endtime="20201112 12:43:57.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.462" endtime="20201112 12:43:57.776"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.461" endtime="20201112 12:43:57.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:57.800" level="INFO">${RESULT} = {'time': [0.022721792, 0.032836778, 0.042799472, 0.052768931, 0.062738306, 0.072708056, 0.082678306, 0.092649278, 0.102619792, 0.112588181, 0.122556403, 0.132525236, 0.142495194, 0.152464847, 0.162433...</msg>
<status status="PASS" starttime="20201112 12:43:57.777" endtime="20201112 12:43:57.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.804" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:57.803" endtime="20201112 12:43:57.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.806" level="INFO">VALUE: 0.022721792</msg>
<status status="PASS" starttime="20201112 12:43:57.805" endtime="20201112 12:43:57.806"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.800" endtime="20201112 12:43:57.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.811" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:43:57.810" endtime="20201112 12:43:57.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:57.813" level="INFO">VALUE: [0.032836778, 0.042799472, 0.052768931, 0.062738306, 0.072708056, 0.082678306, 0.092649278, 0.102619792, 0.112588181, 0.122556403, 0.132525236, 0.142495194, 0.152464847, 0.1624335, 0.172402097, 0.182370694, 0.192338417, 0.202307181, 0.212275736, 0.222244431, 0.232212889, 0.242181444, 0.252150333, 0.262118889, 0.272087583, 0.282056847, 0.292026264, 0.301993528, 0.311962014, 0.321930444, 0.331898819, 0.341868069, 0.351836014, 0.361803458, 0.371772472, 0.381741458, 0.391711208, 0.401681736, 0.411650097, 0.421617944, 0.431586569, 0.441555181, 0.451523625, 0.461491833, 0.471460875, 0.481429847, 0.491398681, 0.501367694, 0.511336917, 0.521307167, 0.531277514, 0.541246444, 0.551215097, 0.561183708, 0.571153722, 0.581124083, 0.591093125, 0.601062458, 0.611032139, 0.621000847, 0.630969222, 0.640938431, 0.650907347, 0.660876792, 0.670846042, 0.680813833, 0.690781514, 0.700750333, 0.710718778, 0.720687194, 0.730656542, 0.740626611, 0.750595167, 0.7605645, 0.770534, 0.780503306, 0.790472806, 0.800442792, 0.810411806, 0.820380486, 0.830349444, 0.840317625, 0.850286583, 0.860255611, 0.870224472, 0.880193986, 0.890163819, 0.900132472, 0.910100722, 0.920068153, 0.930037486, 0.940006736, 0.949975625, 0.959944708, 0.969913597, 0.979881014, 0.989849778, 0.999819083, 1.009786792, 1.019753778] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:43:57.812" endtime="20201112 12:43:57.814"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.807" endtime="20201112 12:43:57.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.817" endtime="20201112 12:43:57.818"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:43:57.820" endtime="20201112 12:43:57.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.819" endtime="20201112 12:43:57.840"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.815" endtime="20201112 12:43:57.841"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.308" endtime="20201112 12:43:57.841"></status>
</kw>
<msg timestamp="20201112 12:43:57.841" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:57.849" endtime="20201112 12:43:59.972"></status>
</kw>
<msg timestamp="20201112 12:43:59.973" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18319802, 'wakeups': [18329949, 18339943, 18349943, 18359944, 18369943...</msg>
<status status="PASS" starttime="20201112 12:43:57.848" endtime="20201112 12:43:59.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.979" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 18319802, 'wakeups': [18329949, 18339943, 18349943, 18359944, 18369943...</msg>
<status status="PASS" starttime="20201112 12:43:59.976" endtime="20201112 12:43:59.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:43:59.980" endtime="20201112 12:43:59.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.845" endtime="20201112 12:43:59.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.843" endtime="20201112 12:43:59.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:43:59.985" level="INFO">${RESULT} = {'wakeups': [18329949, 18339943, 18349943, 18359944, 18369943, 18379943, 18389944, 18399944, 18409944, 18419943, 18429943, 18439943, 18449943, 18459944, 18469943, 18479943, 18489943, 18499943, 1850994...</msg>
<status status="PASS" starttime="20201112 12:43:59.983" endtime="20201112 12:43:59.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.989" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:43:59.988" endtime="20201112 12:43:59.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.991" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:43:59.990" endtime="20201112 12:43:59.992"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.986" endtime="20201112 12:43:59.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.996" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:43:59.995" endtime="20201112 12:43:59.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:43:59.998" level="INFO">VALUE: 18319802</msg>
<status status="PASS" starttime="20201112 12:43:59.997" endtime="20201112 12:43:59.998"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.993" endtime="20201112 12:43:59.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.004" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:00.002" endtime="20201112 12:44:00.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.006" level="INFO">VALUE: [18329949, 18339943, 18349943, 18359944, 18369943, 18379943, 18389944, 18399944, 18409944, 18419943, 18429943, 18439943, 18449943, 18459944, 18469943, 18479943, 18489943, 18499943, 18509944, 18519944, 18529944, 18539943, 18549943, 18559943, 18569944, 18579944, 18589944, 18599944, 18609943, 18619944, 18629944, 18639943, 18649943, 18659943, 18669944, 18679944, 18689943, 18699943, 18709943, 18719944, 18729944, 18739944, 18749944, 18759943, 18769943, 18779943, 18789943, 18799944, 18809944, 18819944, 18829943, 18839943, 18849943, 18859943, 18869943, 18879943, 18889943, 18899943, 18909944, 18919943, 18929943, 18939943, 18949943, 18959944, 18969944, 18979944, 18989944, 18999943, 19009943, 19019944, 19029944, 19039944, 19049944, 19059943, 19069943, 19079943, 19089943, 19099943, 19109944, 19119944, 19129944, 19139944, 19149943, 19159943, 19169944, 19179944, 19189943, 19199943, 19209943, 19219944, 19229944, 19239943, 19249943, 19259944, 19269943, 19279943, 19289943, 19299944, 19309944, 19319943]</msg>
<status status="PASS" starttime="20201112 12:44:00.005" endtime="20201112 12:44:00.006"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:59.999" endtime="20201112 12:44:00.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.013" endtime="20201112 12:44:00.305"></status>
</kw>
<msg timestamp="20201112 12:44:00.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029524278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.012" endtime="20201112 12:44:00.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029524278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:00.309" endtime="20201112 12:44:00.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.316" endtime="20201112 12:44:00.318"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.009" endtime="20201112 12:44:00.319"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.007" endtime="20201112 12:44:00.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:00.342" level="INFO">${RESULT} = {'time': [0.019410764, 0.029524278, 0.039485861, 0.049454736, 0.059423889, 0.069391472, 0.079360667, 0.089330167, 0.099298403, 0.109265847, 0.119232861, 0.129200931, 0.139168889, 0.149137625, 0.159105...</msg>
<status status="PASS" starttime="20201112 12:44:00.320" endtime="20201112 12:44:00.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.347" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:00.346" endtime="20201112 12:44:00.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.349" level="INFO">VALUE: 0.019410764</msg>
<status status="PASS" starttime="20201112 12:44:00.348" endtime="20201112 12:44:00.350"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.344" endtime="20201112 12:44:00.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.354" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:00.353" endtime="20201112 12:44:00.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:00.357" level="INFO">VALUE: [0.029524278, 0.039485861, 0.049454736, 0.059423889, 0.069391472, 0.079360667, 0.089330167, 0.099298403, 0.109265847, 0.119232861, 0.129200931, 0.139168889, 0.149137625, 0.159105917, 0.169073111, 0.179041708, 0.189010194, 0.198979403, 0.208948806, 0.218917431, 0.228884917, 0.238852222, 0.248820458, 0.258789583, 0.268758514, 0.278726611, 0.288694708, 0.298661819, 0.308628847, 0.318597597, 0.328564639, 0.338531181, 0.348499139, 0.358467778, 0.368437042, 0.378404833, 0.388372083, 0.398340889, 0.408309681, 0.418278514, 0.428246278, 0.438214181, 0.448181375, 0.458148097, 0.468116083, 0.478084111, 0.488052194, 0.498020931, 0.507988556, 0.517955361, 0.527921333, 0.537888972, 0.547856194, 0.557823611, 0.567790806, 0.577757764, 0.587724792, 0.597693208, 0.607660542, 0.617626639, 0.627594472, 0.637561931, 0.647530222, 0.6574985, 0.667466292, 0.677434181, 0.687401125, 0.697367792, 0.707335875, 0.717303889, 0.727271181, 0.737239125, 0.747206083, 0.757173, 0.767140958, 0.777109028, 0.787077042, 0.797045833, 0.807015083, 0.816983736, 0.826952194, 0.836919444, 0.846885708, 0.856854167, 0.866823042, 0.876789847, 0.886756708, 0.896724333, 0.906692361, 0.916661083, 0.926627806, 0.936594361, 0.94656225, 0.956530389, 0.966496944, 0.976464153, 0.986431708, 0.996400139, 1.006367194, 1.016334125] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:00.356" endtime="20201112 12:44:00.357"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.351" endtime="20201112 12:44:00.357"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.360" endtime="20201112 12:44:00.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:00.363" endtime="20201112 12:44:00.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.361" endtime="20201112 12:44:00.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.358" endtime="20201112 12:44:00.383"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:57.842" endtime="20201112 12:44:00.384"></status>
</kw>
<msg timestamp="20201112 12:44:00.384" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:00.392" endtime="20201112 12:44:02.515"></status>
</kw>
<msg timestamp="20201112 12:44:02.516" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20870671, 'wakeups': [20880817, 20890813, 20900813, 20910813, 20920812...</msg>
<status status="PASS" starttime="20201112 12:44:00.390" endtime="20201112 12:44:02.517"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.522" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20870671, 'wakeups': [20880817, 20890813, 20900813, 20910813, 20920812...</msg>
<status status="PASS" starttime="20201112 12:44:02.518" endtime="20201112 12:44:02.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.524" endtime="20201112 12:44:02.528"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.388" endtime="20201112 12:44:02.529"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.386" endtime="20201112 12:44:02.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.535" level="INFO">${RESULT} = {'wakeups': [20880817, 20890813, 20900813, 20910813, 20920812, 20930813, 20940812, 20950813, 20960813, 20970813, 20980813, 20990813, 21000813, 21010813, 21020813, 21030813, 21040812, 21050812, 2106081...</msg>
<status status="PASS" starttime="20201112 12:44:02.531" endtime="20201112 12:44:02.536"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.541" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:02.540" endtime="20201112 12:44:02.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.543" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:02.542" endtime="20201112 12:44:02.543"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.537" endtime="20201112 12:44:02.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.555" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:02.554" endtime="20201112 12:44:02.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.558" level="INFO">VALUE: 20870671</msg>
<status status="PASS" starttime="20201112 12:44:02.557" endtime="20201112 12:44:02.558"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.552" endtime="20201112 12:44:02.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.562" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:02.561" endtime="20201112 12:44:02.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.564" level="INFO">VALUE: [20880817, 20890813, 20900813, 20910813, 20920812, 20930813, 20940812, 20950813, 20960813, 20970813, 20980813, 20990813, 21000813, 21010813, 21020813, 21030813, 21040812, 21050812, 21060812, 21070813, 21080813, 21090812, 21100812, 21110812, 21120812, 21130812, 21140812, 21150812, 21160812, 21170812, 21180812, 21190813, 21200813, 21210813, 21220813, 21230812, 21240812, 21250813, 21260812, 21270813, 21280812, 21290812, 21300812, 21310812, 21320812, 21330812, 21340812, 21350812, 21360812, 21370812, 21380812, 21390812, 21400812, 21410812, 21420812, 21430812, 21440813, 21450812, 21460812, 21470812, 21480812, 21490812, 21500812, 21510812, 21520812, 21530812, 21540812, 21550812, 21560813, 21570813, 21580813, 21590812, 21600813, 21610812, 21620813, 21630812, 21640812, 21650812, 21660813, 21670812, 21680812, 21690812, 21700812, 21710813, 21720813, 21730813, 21740813, 21750812, 21760812, 21770812, 21780813, 21790813, 21800813, 21810812, 21820812, 21830812, 21840812, 21850812, 21860812, 21870812]</msg>
<status status="PASS" starttime="20201112 12:44:02.563" endtime="20201112 12:44:02.565"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.559" endtime="20201112 12:44:02.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.571" endtime="20201112 12:44:02.862"></status>
</kw>
<msg timestamp="20201112 12:44:02.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019478264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029591528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.570" endtime="20201112 12:44:02.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019478264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029591528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:02.866" endtime="20201112 12:44:02.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.873" endtime="20201112 12:44:02.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.568" endtime="20201112 12:44:02.875"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.566" endtime="20201112 12:44:02.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:02.899" level="INFO">${RESULT} = {'time': [0.019478264, 0.029591528, 0.039555944, 0.049524361, 0.059491764, 0.069459792, 0.079429111, 0.089397722, 0.099366875, 0.109334597, 0.119302583, 0.129270833, 0.139238972, 0.14920675, 0.1591748...</msg>
<status status="PASS" starttime="20201112 12:44:02.877" endtime="20201112 12:44:02.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.904" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201112 12:44:02.903" endtime="20201112 12:44:02.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.906" level="INFO">VALUE: 0.019478264</msg>
<status status="PASS" starttime="20201112 12:44:02.905" endtime="20201112 12:44:02.906"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.900" endtime="20201112 12:44:02.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.911" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:02.910" endtime="20201112 12:44:02.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:02.913" level="INFO">VALUE: [0.029591528, 0.039555944, 0.049524361, 0.059491764, 0.069459792, 0.079429111, 0.089397722, 0.099366875, 0.109334597, 0.119302583, 0.129270833, 0.139238972, 0.14920675, 0.159174889, 0.169142861, 0.179110153, 0.189077056, 0.199044764, 0.209013167, 0.218981833, 0.228949361, 0.238916792, 0.248885306, 0.258853278, 0.268821319, 0.278789917, 0.288758264, 0.298726806, 0.308695403, 0.318664181, 0.328633639, 0.338602833, 0.348570625, 0.358538194, 0.368505722, 0.378472778, 0.388441278, 0.398410417, 0.408378167, 0.418346139, 0.428313417, 0.438281611, 0.448249778, 0.458218347, 0.468186486, 0.478154111, 0.488122319, 0.498090639, 0.5080585, 0.518026236, 0.527994819, 0.537963153, 0.547931417, 0.557899389, 0.567867389, 0.577835944, 0.587804417, 0.597771236, 0.607739444, 0.617707653, 0.627675944, 0.637644444, 0.647612819, 0.657581097, 0.667549306, 0.677517056, 0.68748525, 0.697454139, 0.707423542, 0.717392486, 0.727361347, 0.737329444, 0.747298181, 0.757265861, 0.767234778, 0.777202694, 0.787171597, 0.797140403, 0.807109778, 0.817077833, 0.827046653, 0.837015806, 0.846985056, 0.856955083, 0.866923694, 0.876892194, 0.886860792, 0.89682875, 0.906797083, 0.916765556, 0.926734417, 0.936702597, 0.946669611, 0.956636514, 0.966604361, 0.976573361, 0.986541097, 0.996509014, 1.006477236, 1.016445972] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:02.912" endtime="20201112 12:44:02.914"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.907" endtime="20201112 12:44:02.914"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.917" endtime="20201112 12:44:02.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:02.920" endtime="20201112 12:44:02.939"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.918" endtime="20201112 12:44:02.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.915" endtime="20201112 12:44:02.940"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:00.384" endtime="20201112 12:44:02.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.306" endtime="20201112 12:44:02.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:55.305" endtime="20201112 12:44:02.941"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:02.944" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:02.951" endtime="20201112 12:44:05.074"></status>
</kw>
<msg timestamp="20201112 12:44:05.075" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23438881, 'wakeups': [23449083, 23459077, 23469077, 23479077, 23489077...</msg>
<status status="PASS" starttime="20201112 12:44:02.950" endtime="20201112 12:44:05.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.081" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 23438881, 'wakeups': [23449083, 23459077, 23469077, 23479077, 23489077...</msg>
<status status="PASS" starttime="20201112 12:44:05.078" endtime="20201112 12:44:05.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.083" endtime="20201112 12:44:05.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.947" endtime="20201112 12:44:05.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.945" endtime="20201112 12:44:05.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.090" level="INFO">${RESULT} = {'wakeups': [23449083, 23459077, 23469077, 23479077, 23489077, 23499077, 23509077, 23519077, 23529077, 23539077, 23549077, 23559077, 23569077, 23579077, 23589077, 23599077, 23609077, 23619077, 2362907...</msg>
<status status="PASS" starttime="20201112 12:44:05.089" endtime="20201112 12:44:05.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.094" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:05.093" endtime="20201112 12:44:05.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.097" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:05.096" endtime="20201112 12:44:05.097"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.091" endtime="20201112 12:44:05.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.102" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:05.100" endtime="20201112 12:44:05.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.104" level="INFO">VALUE: 23438881</msg>
<status status="PASS" starttime="20201112 12:44:05.103" endtime="20201112 12:44:05.105"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.098" endtime="20201112 12:44:05.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.109" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:05.108" endtime="20201112 12:44:05.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.111" level="INFO">VALUE: [23449083, 23459077, 23469077, 23479077, 23489077, 23499077, 23509077, 23519077, 23529077, 23539077, 23549077, 23559077, 23569077, 23579077, 23589077, 23599077, 23609077, 23619077, 23629077, 23639077, 23649077, 23659077, 23669077, 23679077, 23689077, 23699077, 23709077, 23719077, 23729077, 23739077, 23749077, 23759077, 23769077, 23779077, 23789077, 23799077, 23809077, 23819077, 23829077, 23839077, 23849077, 23859077, 23869077, 23879077, 23889077, 23899077, 23909077, 23919077, 23929077, 23939077, 23949077, 23959077, 23969077, 23979077, 23989077, 23999077, 24009077, 24019077, 24029077, 24039077, 24049077, 24059077, 24069077, 24079077, 24089077, 24099077, 24109077, 24119077, 24129077, 24139077, 24149077, 24159077, 24169077, 24179077, 24189077, 24199077, 24209077, 24219077, 24229077, 24239077, 24249077, 24259077, 24269077, 24279077, 24289077, 24299077, 24309077, 24319077, 24329077, 24339077, 24349077, 24359077, 24369077, 24379077, 24389077, 24399077, 24409077, 24419077, 24429077, 24439077]</msg>
<status status="PASS" starttime="20201112 12:44:05.110" endtime="20201112 12:44:05.112"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.106" endtime="20201112 12:44:05.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.119" endtime="20201112 12:44:05.421"></status>
</kw>
<msg timestamp="20201112 12:44:05.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032306625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.117" endtime="20201112 12:44:05.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022138903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032306625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:05.425" endtime="20201112 12:44:05.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.432" endtime="20201112 12:44:05.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.115" endtime="20201112 12:44:05.434"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.113" endtime="20201112 12:44:05.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:05.458" level="INFO">${RESULT} = {'time': [0.022138903, 0.032306625, 0.042268625, 0.052236514, 0.062204208, 0.072171944, 0.08214025, 0.092108389, 0.102076278, 0.112044333, 0.122011569, 0.131979278, 0.14194725, 0.151915778, 0.16188461...</msg>
<status status="PASS" starttime="20201112 12:44:05.435" endtime="20201112 12:44:05.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.462" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:05.461" endtime="20201112 12:44:05.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.464" level="INFO">VALUE: 0.022138903</msg>
<status status="PASS" starttime="20201112 12:44:05.464" endtime="20201112 12:44:05.465"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.459" endtime="20201112 12:44:05.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.470" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:05.469" endtime="20201112 12:44:05.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:05.472" level="INFO">VALUE: [0.032306625, 0.042268625, 0.052236514, 0.062204208, 0.072171944, 0.08214025, 0.092108389, 0.102076278, 0.112044333, 0.122011569, 0.131979278, 0.14194725, 0.151915778, 0.161884611, 0.171853486, 0.181821875, 0.191790319, 0.201759139, 0.211728319, 0.221697319, 0.231666, 0.241634931, 0.251603431, 0.261572569, 0.271541569, 0.281510542, 0.291479, 0.301447278, 0.311415528, 0.321384056, 0.331352833, 0.341321056, 0.351290083, 0.361259694, 0.371228361, 0.381196889, 0.39116625, 0.401134653, 0.411103042, 0.421071472, 0.431039917, 0.441008472, 0.450977042, 0.460945542, 0.470914639, 0.480883472, 0.490851931, 0.500820528, 0.510789472, 0.520758458, 0.530727486, 0.540695625, 0.550664611, 0.560633222, 0.570601097, 0.580569625, 0.590538639, 0.600507292, 0.61047625, 0.620445069, 0.630414181, 0.640383792, 0.650353444, 0.660322514, 0.670291542, 0.6802605, 0.690229014, 0.700197722, 0.710166347, 0.720135472, 0.730104139, 0.740072764, 0.750041736, 0.760010514, 0.769978944, 0.779947431, 0.789915681, 0.799884153, 0.809851903, 0.819820111, 0.82978825, 0.839757528, 0.849726986, 0.859696639, 0.869666222, 0.879634764, 0.88960375, 0.899572486, 0.909541792, 0.919510639, 0.929479208, 0.939448708, 0.949418361, 0.959388208, 0.969357708, 0.979327319, 0.989296806, 0.999265903, 1.009234972, 1.019203681] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:05.471" endtime="20201112 12:44:05.473"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.466" endtime="20201112 12:44:05.473"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.475" endtime="20201112 12:44:05.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:05.479" endtime="20201112 12:44:05.498"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.477" endtime="20201112 12:44:05.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.474" endtime="20201112 12:44:05.499"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.944" endtime="20201112 12:44:05.500"></status>
</kw>
<msg timestamp="20201112 12:44:05.500" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:05.508" endtime="20201112 12:44:07.631"></status>
</kw>
<msg timestamp="20201112 12:44:07.633" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26003784, 'wakeups': [26013986, 26023980, 26033980, 26043980, 26053980...</msg>
<status status="PASS" starttime="20201112 12:44:05.506" endtime="20201112 12:44:07.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.638" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 26003784, 'wakeups': [26013986, 26023980, 26033980, 26043980, 26053980...</msg>
<status status="PASS" starttime="20201112 12:44:07.635" endtime="20201112 12:44:07.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.641" endtime="20201112 12:44:07.644"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.503" endtime="20201112 12:44:07.645"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.502" endtime="20201112 12:44:07.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:07.650" level="INFO">${RESULT} = {'wakeups': [26013986, 26023980, 26033980, 26043980, 26053980, 26063980, 26073980, 26083980, 26093980, 26103980, 26113980, 26123980, 26133980, 26143980, 26153980, 26163980, 26173980, 26183980, 2619398...</msg>
<status status="PASS" starttime="20201112 12:44:07.648" endtime="20201112 12:44:07.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.654" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:07.653" endtime="20201112 12:44:07.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.656" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:07.655" endtime="20201112 12:44:07.656"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.650" endtime="20201112 12:44:07.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.660" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:07.659" endtime="20201112 12:44:07.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.662" level="INFO">VALUE: 26003784</msg>
<status status="PASS" starttime="20201112 12:44:07.661" endtime="20201112 12:44:07.663"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.657" endtime="20201112 12:44:07.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.667" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:07.666" endtime="20201112 12:44:07.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.669" level="INFO">VALUE: [26013986, 26023980, 26033980, 26043980, 26053980, 26063980, 26073980, 26083980, 26093980, 26103980, 26113980, 26123980, 26133980, 26143980, 26153980, 26163980, 26173980, 26183980, 26193980, 26203980, 26213980, 26223980, 26233980, 26243980, 26253980, 26263980, 26273980, 26283980, 26293980, 26303980, 26313980, 26323980, 26333980, 26343980, 26353980, 26363980, 26373980, 26383980, 26393980, 26403980, 26413980, 26423980, 26433980, 26443980, 26453980, 26463980, 26473980, 26483980, 26493980, 26503980, 26513980, 26523980, 26533980, 26543980, 26553980, 26563980, 26573980, 26583980, 26593980, 26603980, 26613980, 26623980, 26633980, 26643980, 26653980, 26663980, 26673980, 26683980, 26693980, 26703980, 26713980, 26723980, 26733980, 26743980, 26753980, 26763980, 26773980, 26783980, 26793980, 26803980, 26813980, 26823980, 26833980, 26843980, 26853980, 26863980, 26873980, 26883980, 26893980, 26903980, 26913980, 26923980, 26933980, 26943980, 26953980, 26963980, 26973980, 26983980, 26993980, 27003980]</msg>
<status status="PASS" starttime="20201112 12:44:07.668" endtime="20201112 12:44:07.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.664" endtime="20201112 12:44:07.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.676" endtime="20201112 12:44:07.968"></status>
</kw>
<msg timestamp="20201112 12:44:07.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030070361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.675" endtime="20201112 12:44:07.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:07.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019901681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030070361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:07.972" endtime="20201112 12:44:07.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:07.979" endtime="20201112 12:44:07.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.672" endtime="20201112 12:44:07.985"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:07.671" endtime="20201112 12:44:07.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:08.009" level="INFO">${RESULT} = {'time': [0.019901681, 0.030070361, 0.040033319, 0.050002417, 0.059971444, 0.069940083, 0.079909153, 0.089878361, 0.099847486, 0.109817292, 0.119786972, 0.129755389, 0.139723569, 0.149691972, 0.159660...</msg>
<status status="PASS" starttime="20201112 12:44:07.987" endtime="20201112 12:44:08.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.013" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:08.012" endtime="20201112 12:44:08.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.015" level="INFO">VALUE: 0.019901681</msg>
<status status="PASS" starttime="20201112 12:44:08.014" endtime="20201112 12:44:08.015"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.010" endtime="20201112 12:44:08.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.020" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:08.019" endtime="20201112 12:44:08.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:08.022" level="INFO">VALUE: [0.030070361, 0.040033319, 0.050002417, 0.059971444, 0.069940083, 0.079909153, 0.089878361, 0.099847486, 0.109817292, 0.119786972, 0.129755389, 0.139723569, 0.149691972, 0.159660306, 0.169628944, 0.179597556, 0.189566028, 0.199534389, 0.209502917, 0.219470778, 0.229438194, 0.239405625, 0.249373681, 0.259341681, 0.269309208, 0.279277361, 0.289245181, 0.299212639, 0.309181403, 0.319150278, 0.329118486, 0.339086389, 0.349054611, 0.359022819, 0.368990625, 0.378958514, 0.388926125, 0.398894014, 0.408861667, 0.418829444, 0.428797514, 0.43876525, 0.448733125, 0.458701083, 0.468669014, 0.478636917, 0.488604792, 0.498572306, 0.508539944, 0.5185075, 0.528475208, 0.538442986, 0.548411208, 0.558379389, 0.568347764, 0.578316444, 0.588285264, 0.598253653, 0.608221778, 0.618190236, 0.628158319, 0.63812675, 0.648095042, 0.658063472, 0.668032778, 0.678000986, 0.687969472, 0.697938069, 0.707906528, 0.717874847, 0.727843319, 0.737812319, 0.747780931, 0.757748958, 0.767717125, 0.777684861, 0.787652639, 0.797620486, 0.807588194, 0.817556736, 0.827525319, 0.837493569, 0.847461444, 0.857429278, 0.867396292, 0.877363028, 0.887330764, 0.897298764, 0.907266639, 0.917234708, 0.927202889, 0.937171167, 0.947139056, 0.957107278, 0.967075375, 0.977044306, 0.987012792, 0.996980806, 1.006948903, 1.016916833] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:08.021" endtime="20201112 12:44:08.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.017" endtime="20201112 12:44:08.023"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.025" endtime="20201112 12:44:08.027"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:08.029" endtime="20201112 12:44:08.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.027" endtime="20201112 12:44:08.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.024" endtime="20201112 12:44:08.049"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:05.500" endtime="20201112 12:44:08.050"></status>
</kw>
<msg timestamp="20201112 12:44:08.050" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:08.058" endtime="20201112 12:44:10.182"></status>
</kw>
<msg timestamp="20201112 12:44:10.183" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28562537, 'wakeups': [28572739, 28582733, 28592733, 28602733, 28612733...</msg>
<status status="PASS" starttime="20201112 12:44:08.056" endtime="20201112 12:44:10.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.189" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28562537, 'wakeups': [28572739, 28582733, 28592733, 28602733, 28612733...</msg>
<status status="PASS" starttime="20201112 12:44:10.185" endtime="20201112 12:44:10.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.191" endtime="20201112 12:44:10.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.053" endtime="20201112 12:44:10.195"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.052" endtime="20201112 12:44:10.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.199" level="INFO">${RESULT} = {'wakeups': [28572739, 28582733, 28592733, 28602733, 28612733, 28622733, 28632733, 28642733, 28652733, 28662733, 28672733, 28682733, 28692733, 28702733, 28712733, 28722733, 28732733, 28742733, 2875273...</msg>
<status status="PASS" starttime="20201112 12:44:10.197" endtime="20201112 12:44:10.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.204" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:10.203" endtime="20201112 12:44:10.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.205" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:10.205" endtime="20201112 12:44:10.206"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.200" endtime="20201112 12:44:10.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.210" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:10.209" endtime="20201112 12:44:10.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.212" level="INFO">VALUE: 28562537</msg>
<status status="PASS" starttime="20201112 12:44:10.211" endtime="20201112 12:44:10.213"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.207" endtime="20201112 12:44:10.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.217" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:10.216" endtime="20201112 12:44:10.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.219" level="INFO">VALUE: [28572739, 28582733, 28592733, 28602733, 28612733, 28622733, 28632733, 28642733, 28652733, 28662733, 28672733, 28682733, 28692733, 28702733, 28712733, 28722733, 28732733, 28742733, 28752733, 28762733, 28772733, 28782733, 28792733, 28802733, 28812733, 28822733, 28832733, 28842733, 28852733, 28862733, 28872733, 28882733, 28892733, 28902733, 28912733, 28922733, 28932733, 28942733, 28952733, 28962733, 28972733, 28982733, 28992733, 29002733, 29012733, 29022733, 29032733, 29042733, 29052733, 29062733, 29072733, 29082733, 29092733, 29102733, 29112733, 29122733, 29132733, 29142733, 29152733, 29162733, 29172733, 29182733, 29192733, 29202733, 29212733, 29222733, 29232733, 29242733, 29252733, 29262733, 29272733, 29282733, 29292733, 29302733, 29312733, 29322733, 29332733, 29342733, 29352733, 29362733, 29372733, 29382733, 29392733, 29402733, 29412733, 29422733, 29432733, 29442733, 29452733, 29462733, 29472733, 29482733, 29492733, 29502733, 29512733, 29522733, 29532733, 29542733, 29552733, 29562733]</msg>
<status status="PASS" starttime="20201112 12:44:10.218" endtime="20201112 12:44:10.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.214" endtime="20201112 12:44:10.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.226" endtime="20201112 12:44:10.526"></status>
</kw>
<msg timestamp="20201112 12:44:10.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02042975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030598639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:10.225" endtime="20201112 12:44:10.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02042975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030598639, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201112 12:44:10.530" endtime="20201112 12:44:10.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.537" endtime="20201112 12:44:10.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.222" endtime="20201112 12:44:10.539"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.221" endtime="20201112 12:44:10.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:10.564" level="INFO">${RESULT} = {'time': [0.02042975, 0.030598639, 0.040562139, 0.050530375, 0.060498375, 0.070466653, 0.080434889, 0.090402486, 0.100370153, 0.110338458, 0.120306361, 0.130273986, 0.140241486, 0.1502095, 0.160177653...</msg>
<status status="PASS" starttime="20201112 12:44:10.540" endtime="20201112 12:44:10.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.568" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201112 12:44:10.567" endtime="20201112 12:44:10.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.570" level="INFO">VALUE: 0.02042975</msg>
<status status="PASS" starttime="20201112 12:44:10.569" endtime="20201112 12:44:10.571"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.565" endtime="20201112 12:44:10.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.575" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:10.574" endtime="20201112 12:44:10.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:10.578" level="INFO">VALUE: [0.030598639, 0.040562139, 0.050530375, 0.060498375, 0.070466653, 0.080434889, 0.090402486, 0.100370153, 0.110338458, 0.120306361, 0.130273986, 0.140241486, 0.1502095, 0.160177653, 0.170146, 0.180114625, 0.190083181, 0.200052139, 0.210020458, 0.219988792, 0.229957, 0.239924931, 0.249893014, 0.259861444, 0.269829528, 0.279797403, 0.289765639, 0.299733181, 0.309701278, 0.319669306, 0.329637931, 0.339605861, 0.349573681, 0.359540917, 0.369508236, 0.379475806, 0.389443708, 0.399411833, 0.40938, 0.41934775, 0.429315819, 0.439283639, 0.449250972, 0.459219319, 0.469186972, 0.47915425, 0.489121347, 0.499088458, 0.509055417, 0.519022444, 0.528989917, 0.538958028, 0.548925889, 0.558893903, 0.568861417, 0.578828792, 0.588796139, 0.598763417, 0.608730917, 0.618698875, 0.628667278, 0.638634833, 0.648602806, 0.658571611, 0.668540458, 0.678509806, 0.688478458, 0.698447708, 0.708417264, 0.71838675, 0.728355694, 0.73832425, 0.748293333, 0.758263167, 0.768232861, 0.77820325, 0.788173222, 0.798142806, 0.80811225, 0.818081611, 0.828051444, 0.838021208, 0.847990792, 0.857961319, 0.867931292, 0.877900458, 0.887869708, 0.897839139, 0.907808278, 0.917777222, 0.927746069, 0.937714972, 0.947684194, 0.957653486, 0.967622917, 0.977591306, 0.987559972, 0.997529042, 1.007498417, 1.017468083] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:10.577" endtime="20201112 12:44:10.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.572" endtime="20201112 12:44:10.579"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.581" endtime="20201112 12:44:10.582"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:10.584" endtime="20201112 12:44:10.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.583" endtime="20201112 12:44:10.604"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.579" endtime="20201112 12:44:10.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:08.050" endtime="20201112 12:44:10.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.942" endtime="20201112 12:44:10.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:02.941" endtime="20201112 12:44:10.605"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:10.608" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:10.616" endtime="20201112 12:44:12.739"></status>
</kw>
<msg timestamp="20201112 12:44:12.740" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31128049, 'wakeups': [31138307, 31148304, 31158305, 31168305, 31178305...</msg>
<status status="PASS" starttime="20201112 12:44:10.614" endtime="20201112 12:44:12.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 31128049, 'wakeups': [31138307, 31148304, 31158305, 31168305, 31178305...</msg>
<status status="PASS" starttime="20201112 12:44:12.742" endtime="20201112 12:44:12.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.748" endtime="20201112 12:44:12.751"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.612" endtime="20201112 12:44:12.752"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.610" endtime="20201112 12:44:12.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:12.755" level="INFO">${RESULT} = {'wakeups': [31138307, 31148304, 31158305, 31168305, 31178305, 31188305, 31198301, 31208304, 31218305, 31228305, 31238305, 31248305, 31258305, 31268305, 31278305, 31288305, 31298305, 31308305, 3131830...</msg>
<status status="PASS" starttime="20201112 12:44:12.753" endtime="20201112 12:44:12.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.759" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:12.758" endtime="20201112 12:44:12.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.761" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:12.760" endtime="20201112 12:44:12.761"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.756" endtime="20201112 12:44:12.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.767" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:12.766" endtime="20201112 12:44:12.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.769" level="INFO">VALUE: 31128049</msg>
<status status="PASS" starttime="20201112 12:44:12.768" endtime="20201112 12:44:12.769"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.762" endtime="20201112 12:44:12.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.774" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:12.773" endtime="20201112 12:44:12.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:12.776" level="INFO">VALUE: [31138307, 31148304, 31158305, 31168305, 31178305, 31188305, 31198301, 31208304, 31218305, 31228305, 31238305, 31248305, 31258305, 31268305, 31278305, 31288305, 31298305, 31308305, 31318305, 31328305, 31338305, 31348305, 31358305, 31368305, 31378305, 31388301, 31398304, 31408305, 31418305, 31428305, 31438301, 31448304, 31458305, 31468305, 31478305, 31488301, 31498304, 31508305, 31518305, 31528305, 31538305, 31548305, 31558305, 31568305, 31578305, 31588305, 31598305, 31608305, 31618305, 31628305, 31638305, 31648305, 31658305, 31668305, 31678305, 31688305, 31698305, 31708305, 31718301, 31728304, 31738305, 31748305, 31758305, 31768301, 31778304, 31788301, 31798304, 31808301, 31818304, 31828305, 31838305, 31848305, 31858305, 31868305, 31878305, 31888305, 31898305, 31908305, 31918305, 31928305, 31938305, 31948305, 31958305, 31968305, 31978305, 31988301, 31998304, 32008305, 32018305, 32028305, 32038305, 32048305, 32058305, 32068305, 32078305, 32088305, 32098305, 32108305, 32118301, 32128304]</msg>
<status status="PASS" starttime="20201112 12:44:12.775" endtime="20201112 12:44:12.777"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.770" endtime="20201112 12:44:12.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:12.783" endtime="20201112 12:44:13.074"></status>
</kw>
<msg timestamp="20201112 12:44:13.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032423847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:12.782" endtime="20201112 12:44:13.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022198236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032423847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:13.077" endtime="20201112 12:44:13.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.085" endtime="20201112 12:44:13.086"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.779" endtime="20201112 12:44:13.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:12.778" endtime="20201112 12:44:13.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:13.110" level="INFO">${RESULT} = {'time': [0.022198236, 0.032423847, 0.042390681, 0.052361708, 0.062330889, 0.072299917, 0.082268708, 0.09223425, 0.102206278, 0.112176653, 0.122146014, 0.132115208, 0.142084264, 0.152053444, 0.1620220...</msg>
<status status="PASS" starttime="20201112 12:44:13.088" endtime="20201112 12:44:13.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.115" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:13.114" endtime="20201112 12:44:13.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.117" level="INFO">VALUE: 0.022198236</msg>
<status status="PASS" starttime="20201112 12:44:13.116" endtime="20201112 12:44:13.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.111" endtime="20201112 12:44:13.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.123" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:13.121" endtime="20201112 12:44:13.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:13.125" level="INFO">VALUE: [0.032423847, 0.042390681, 0.052361708, 0.062330889, 0.072299917, 0.082268708, 0.09223425, 0.102206278, 0.112176653, 0.122146014, 0.132115208, 0.142084264, 0.152053444, 0.162022014, 0.171990639, 0.181959333, 0.191929056, 0.201899097, 0.211868167, 0.221837375, 0.231806472, 0.241775181, 0.251744236, 0.261713306, 0.271682181, 0.281647569, 0.291619042, 0.30158875, 0.311557944, 0.321527097, 0.331492111, 0.341464347, 0.351434931, 0.361404139, 0.371373528, 0.381338806, 0.391310694, 0.401280222, 0.411248792, 0.421217931, 0.431186833, 0.441154875, 0.451123194, 0.461091625, 0.471059958, 0.481028417, 0.490997208, 0.500965264, 0.510933639, 0.520901764, 0.530870514, 0.540838806, 0.550806792, 0.560775417, 0.570744403, 0.58071325, 0.590682, 0.600650833, 0.610615681, 0.620587556, 0.630556986, 0.640526, 0.650494472, 0.660459486, 0.670430139, 0.680395903, 0.690366958, 0.700332514, 0.710303181, 0.720271792, 0.730239694, 0.740207583, 0.75017575, 0.760143944, 0.770112458, 0.780080653, 0.790049486, 0.800018139, 0.809986806, 0.819955167, 0.829923361, 0.839891528, 0.849859611, 0.859828417, 0.869796903, 0.879762403, 0.889734222, 0.899705014, 0.909674139, 0.919643417, 0.929613306, 0.939582681, 0.949551639, 0.959520569, 0.969489944, 0.979459486, 0.989428403, 0.999398222, 1.009364194, 1.019336278] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:13.124" endtime="20201112 12:44:13.125"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.118" endtime="20201112 12:44:13.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.128" endtime="20201112 12:44:13.134"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:13.136" endtime="20201112 12:44:13.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.135" endtime="20201112 12:44:13.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.126" endtime="20201112 12:44:13.157"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.609" endtime="20201112 12:44:13.157"></status>
</kw>
<msg timestamp="20201112 12:44:13.157" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:13.165" endtime="20201112 12:44:15.289"></status>
</kw>
<msg timestamp="20201112 12:44:15.290" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33685586, 'wakeups': [33695843, 33705841, 33715842, 33725842, 33735838...</msg>
<status status="PASS" starttime="20201112 12:44:13.163" endtime="20201112 12:44:15.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33685586, 'wakeups': [33695843, 33705841, 33715842, 33725842, 33735838...</msg>
<status status="PASS" starttime="20201112 12:44:15.292" endtime="20201112 12:44:15.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.298" endtime="20201112 12:44:15.301"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.161" endtime="20201112 12:44:15.303"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.159" endtime="20201112 12:44:15.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.308" level="INFO">${RESULT} = {'wakeups': [33695843, 33705841, 33715842, 33725842, 33735838, 33745841, 33755842, 33765842, 33775838, 33785841, 33795842, 33805842, 33815842, 33825842, 33835842, 33845842, 33855842, 33865842, 3387584...</msg>
<status status="PASS" starttime="20201112 12:44:15.305" endtime="20201112 12:44:15.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.312" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:15.311" endtime="20201112 12:44:15.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.314" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:15.313" endtime="20201112 12:44:15.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.309" endtime="20201112 12:44:15.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.319" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:15.318" endtime="20201112 12:44:15.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.321" level="INFO">VALUE: 33685586</msg>
<status status="PASS" starttime="20201112 12:44:15.320" endtime="20201112 12:44:15.321"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.315" endtime="20201112 12:44:15.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.325" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:15.324" endtime="20201112 12:44:15.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.328" level="INFO">VALUE: [33695843, 33705841, 33715842, 33725842, 33735838, 33745841, 33755842, 33765842, 33775838, 33785841, 33795842, 33805842, 33815842, 33825842, 33835842, 33845842, 33855842, 33865842, 33875842, 33885842, 33895842, 33905838, 33915841, 33925842, 33935842, 33945838, 33955841, 33965842, 33975842, 33985842, 33995842, 34005842, 34015842, 34025842, 34035842, 34045842, 34055842, 34065842, 34075842, 34085842, 34095842, 34105842, 34115842, 34125838, 34135841, 34145842, 34155842, 34165842, 34175838, 34185841, 34195842, 34205838, 34215841, 34225838, 34235841, 34245842, 34255842, 34265842, 34275842, 34285842, 34295842, 34305842, 34315842, 34325842, 34335842, 34345842, 34355842, 34365842, 34375842, 34385838, 34395841, 34405842, 34415842, 34425842, 34435842, 34445842, 34455842, 34465842, 34475842, 34485842, 34495842, 34505842, 34515842, 34525842, 34535842, 34545842, 34555842, 34565838, 34575841, 34585842, 34595842, 34605842, 34615842, 34625838, 34635841, 34645842, 34655842, 34665842, 34675842, 34685842]</msg>
<status status="PASS" starttime="20201112 12:44:15.327" endtime="20201112 12:44:15.328"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.322" endtime="20201112 12:44:15.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.336" endtime="20201112 12:44:15.635"></status>
</kw>
<msg timestamp="20201112 12:44:15.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029731958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.333" endtime="20201112 12:44:15.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029731958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:15.639" endtime="20201112 12:44:15.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.647" endtime="20201112 12:44:15.648"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.331" endtime="20201112 12:44:15.649"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.329" endtime="20201112 12:44:15.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:15.673" level="INFO">${RESULT} = {'time': [0.019507111, 0.029731958, 0.039698972, 0.049668903, 0.059637361, 0.069603111, 0.079574958, 0.089545, 0.099514347, 0.109480236, 0.119452431, 0.129423194, 0.139392861, 0.149362667, 0.159332153...</msg>
<status status="PASS" starttime="20201112 12:44:15.650" endtime="20201112 12:44:15.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.678" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:15.677" endtime="20201112 12:44:15.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.680" level="INFO">VALUE: 0.019507111</msg>
<status status="PASS" starttime="20201112 12:44:15.679" endtime="20201112 12:44:15.680"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.674" endtime="20201112 12:44:15.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.685" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:15.684" endtime="20201112 12:44:15.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:15.687" level="INFO">VALUE: [0.029731958, 0.039698972, 0.049668903, 0.059637361, 0.069603111, 0.079574958, 0.089545, 0.099514347, 0.109480236, 0.119452431, 0.129423194, 0.139392861, 0.149362667, 0.159332153, 0.169301625, 0.179271056, 0.18924075, 0.199210569, 0.209179667, 0.219149264, 0.229118458, 0.239083847, 0.249056, 0.2590265, 0.268995403, 0.278960972, 0.288932319, 0.29890275, 0.308872, 0.318840653, 0.32880925, 0.338777583, 0.348746014, 0.358714597, 0.368683139, 0.378651847, 0.388621236, 0.398590569, 0.408559833, 0.418528931, 0.428497986, 0.438466958, 0.448435264, 0.458400292, 0.468371611, 0.478340792, 0.488309403, 0.498278042, 0.508243028, 0.518214125, 0.528183347, 0.538147847, 0.548118792, 0.558084417, 0.5680555, 0.578025153, 0.587993111, 0.597961125, 0.607929653, 0.617898014, 0.627866458, 0.637834778, 0.647803111, 0.657771431, 0.667739319, 0.677707306, 0.687675375, 0.697643819, 0.707611625, 0.717575958, 0.727546611, 0.737515917, 0.747484181, 0.757452333, 0.767421042, 0.777389458, 0.787358472, 0.797327514, 0.807296264, 0.817265222, 0.827233653, 0.837202194, 0.847170833, 0.857139222, 0.867107, 0.877074958, 0.887043181, 0.897007958, 0.906978917, 0.916948694, 0.926916819, 0.936884972, 0.946852833, 0.956817333, 0.966788083, 0.976757014, 0.986725861, 0.996694194, 1.00666275, 1.016631653] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:15.686" endtime="20201112 12:44:15.688"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.681" endtime="20201112 12:44:15.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.690" endtime="20201112 12:44:15.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:15.694" endtime="20201112 12:44:15.713"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.692" endtime="20201112 12:44:15.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.689" endtime="20201112 12:44:15.714"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:13.158" endtime="20201112 12:44:15.715"></status>
</kw>
<msg timestamp="20201112 12:44:15.715" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:15.724" endtime="20201112 12:44:17.877"></status>
</kw>
<msg timestamp="20201112 12:44:17.877" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36252628, 'wakeups': [36262886, 36272883, 36282884, 36292884, 36302884...</msg>
<status status="PASS" starttime="20201112 12:44:15.721" endtime="20201112 12:44:17.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.881" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36252628, 'wakeups': [36262886, 36272883, 36282884, 36292884, 36302884...</msg>
<status status="PASS" starttime="20201112 12:44:17.878" endtime="20201112 12:44:17.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.882" endtime="20201112 12:44:17.883"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.719" endtime="20201112 12:44:17.884"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.717" endtime="20201112 12:44:17.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:17.887" level="INFO">${RESULT} = {'wakeups': [36262886, 36272883, 36282884, 36292884, 36302884, 36312884, 36322884, 36332884, 36342884, 36352884, 36362884, 36372884, 36382884, 36392884, 36402884, 36412884, 36422884, 36432884, 3644288...</msg>
<status status="PASS" starttime="20201112 12:44:17.885" endtime="20201112 12:44:17.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.891" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:17.890" endtime="20201112 12:44:17.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.893" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:17.892" endtime="20201112 12:44:17.894"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.888" endtime="20201112 12:44:17.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.898" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:17.897" endtime="20201112 12:44:17.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.900" level="INFO">VALUE: 36252628</msg>
<status status="PASS" starttime="20201112 12:44:17.899" endtime="20201112 12:44:17.900"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.895" endtime="20201112 12:44:17.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.905" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:17.904" endtime="20201112 12:44:17.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:17.907" level="INFO">VALUE: [36262886, 36272883, 36282884, 36292884, 36302884, 36312884, 36322884, 36332884, 36342884, 36352884, 36362884, 36372884, 36382884, 36392884, 36402884, 36412884, 36422884, 36432884, 36442880, 36452883, 36462884, 36472884, 36482884, 36492884, 36502884, 36512884, 36522884, 36532884, 36542884, 36552884, 36562884, 36572884, 36582884, 36592884, 36602884, 36612884, 36622884, 36632884, 36642884, 36652884, 36662884, 36672880, 36682883, 36692884, 36702884, 36712884, 36722884, 36732884, 36742884, 36752884, 36762880, 36772883, 36782884, 36792884, 36802884, 36812884, 36822880, 36832883, 36842884, 36852884, 36862884, 36872884, 36882884, 36892884, 36902884, 36912884, 36922884, 36932884, 36942884, 36952884, 36962884, 36972884, 36982880, 36992883, 37002884, 37012884, 37022884, 37032884, 37042884, 37052884, 37062884, 37072884, 37082884, 37092884, 37102884, 37112884, 37122884, 37132884, 37142884, 37152884, 37162884, 37172884, 37182884, 37192884, 37202884, 37212884, 37222884, 37232884, 37242884, 37252884]</msg>
<status status="PASS" starttime="20201112 12:44:17.906" endtime="20201112 12:44:17.908"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.902" endtime="20201112 12:44:17.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:17.916" endtime="20201112 12:44:18.206"></status>
</kw>
<msg timestamp="20201112 12:44:18.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031251, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:17.914" endtime="20201112 12:44:18.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031251, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201112 12:44:18.210" endtime="20201112 12:44:18.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.218" endtime="20201112 12:44:18.219"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.910" endtime="20201112 12:44:18.220"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:17.909" endtime="20201112 12:44:18.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:18.244" level="INFO">${RESULT} = {'time': [0.021026722, 0.031251, 0.041216111, 0.051184875, 0.061152778, 0.071120958, 0.081089125, 0.091057736, 0.101026028, 0.110994028, 0.120962306, 0.130930111, 0.140898653, 0.150866847, 0.160835069...</msg>
<status status="PASS" starttime="20201112 12:44:18.221" endtime="20201112 12:44:18.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.254" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201112 12:44:18.253" endtime="20201112 12:44:18.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.256" level="INFO">VALUE: 0.021026722</msg>
<status status="PASS" starttime="20201112 12:44:18.255" endtime="20201112 12:44:18.256"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.250" endtime="20201112 12:44:18.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.261" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:18.260" endtime="20201112 12:44:18.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:18.263" level="INFO">VALUE: [0.031251, 0.041216111, 0.051184875, 0.061152778, 0.071120958, 0.081089125, 0.091057736, 0.101026028, 0.110994028, 0.120962306, 0.130930111, 0.140898653, 0.150866847, 0.160835069, 0.170803028, 0.180771028, 0.190738819, 0.200707222, 0.210671958, 0.220642667, 0.230611861, 0.240579972, 0.25054825, 0.260516319, 0.270484639, 0.280453486, 0.290421597, 0.300389986, 0.310358139, 0.320326639, 0.330294931, 0.340263014, 0.350231278, 0.360199667, 0.370167375, 0.380135778, 0.390104514, 0.4000735, 0.410041889, 0.420010361, 0.429978847, 0.439943042, 0.449913431, 0.459882722, 0.469850792, 0.479818806, 0.489786611, 0.499754069, 0.50972125, 0.519688778, 0.529652903, 0.539623514, 0.549592208, 0.559560264, 0.569528472, 0.579496972, 0.589461333, 0.599431736, 0.609400542, 0.619368861, 0.629337306, 0.639305278, 0.64927375, 0.659242333, 0.669211111, 0.679179667, 0.689148472, 0.699116528, 0.709084528, 0.719053458, 0.729022125, 0.738990458, 0.748955028, 0.758926278, 0.768896125, 0.778865125, 0.788833944, 0.798802208, 0.808770403, 0.818738847, 0.828706903, 0.838675181, 0.848644056, 0.858612514, 0.868581306, 0.878549639, 0.888517903, 0.898486153, 0.908453847, 0.918421986, 0.928390181, 0.938357986, 0.948326014, 0.958294306, 0.968262653, 0.978231375, 0.988199625, 0.998167917, 1.008136042, 1.018103444] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:18.262" endtime="20201112 12:44:18.264"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.257" endtime="20201112 12:44:18.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.266" endtime="20201112 12:44:18.268"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:18.270" endtime="20201112 12:44:18.289"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.268" endtime="20201112 12:44:18.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.265" endtime="20201112 12:44:18.290"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:15.715" endtime="20201112 12:44:18.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.607" endtime="20201112 12:44:18.291"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:10.606" endtime="20201112 12:44:18.291"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:18.294" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:18.301" endtime="20201112 12:44:20.430"></status>
</kw>
<msg timestamp="20201112 12:44:20.431" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38838587, 'wakeups': [38848910, 38858902, 38868902, 38878902, 38888902...</msg>
<status status="PASS" starttime="20201112 12:44:18.300" endtime="20201112 12:44:20.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.437" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 38838587, 'wakeups': [38848910, 38858902, 38868902, 38878902, 38888902...</msg>
<status status="PASS" starttime="20201112 12:44:20.433" endtime="20201112 12:44:20.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.439" endtime="20201112 12:44:20.442"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.297" endtime="20201112 12:44:20.444"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.295" endtime="20201112 12:44:20.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.450" level="INFO">${RESULT} = {'wakeups': [38848910, 38858902, 38868902, 38878902, 38888902, 38898902, 38908902, 38918902, 38928902, 38938902, 38948902, 38958902, 38968902, 38978902, 38988902, 38998902, 39008902, 39018902, 3902890...</msg>
<status status="PASS" starttime="20201112 12:44:20.446" endtime="20201112 12:44:20.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.459" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:20.457" endtime="20201112 12:44:20.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.464" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:20.462" endtime="20201112 12:44:20.464"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.452" endtime="20201112 12:44:20.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.471" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:20.469" endtime="20201112 12:44:20.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.474" level="INFO">VALUE: 38838587</msg>
<status status="PASS" starttime="20201112 12:44:20.473" endtime="20201112 12:44:20.474"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.467" endtime="20201112 12:44:20.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.478" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:20.477" endtime="20201112 12:44:20.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.481" level="INFO">VALUE: [38848910, 38858902, 38868902, 38878902, 38888902, 38898902, 38908902, 38918902, 38928902, 38938902, 38948902, 38958902, 38968902, 38978902, 38988902, 38998902, 39008902, 39018902, 39028902, 39038902, 39048902, 39058902, 39068902, 39078902, 39088902, 39098902, 39108902, 39118902, 39128902, 39138902, 39148902, 39158902, 39168902, 39178902, 39188902, 39198902, 39208902, 39218902, 39228902, 39238902, 39248902, 39258902, 39268902, 39278902, 39288902, 39298902, 39308902, 39318902, 39328902, 39338902, 39348902, 39358902, 39368902, 39378902, 39388902, 39398902, 39408902, 39418902, 39428902, 39438902, 39448902, 39458902, 39468902, 39478902, 39488902, 39498902, 39508902, 39518902, 39528902, 39538902, 39548902, 39558902, 39568902, 39578902, 39588902, 39598902, 39608902, 39618902, 39628902, 39638902, 39648902, 39658902, 39668902, 39678902, 39688902, 39698902, 39708902, 39718902, 39728902, 39738902, 39748902, 39758902, 39768902, 39778902, 39788902, 39798902, 39808902, 39818902, 39828902, 39838902]</msg>
<status status="PASS" starttime="20201112 12:44:20.480" endtime="20201112 12:44:20.481"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.475" endtime="20201112 12:44:20.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.488" endtime="20201112 12:44:20.779"></status>
</kw>
<msg timestamp="20201112 12:44:20.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032637153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.486" endtime="20201112 12:44:20.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022347167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032637153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:20.783" endtime="20201112 12:44:20.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.791" endtime="20201112 12:44:20.792"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.484" endtime="20201112 12:44:20.793"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.482" endtime="20201112 12:44:20.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:20.817" level="INFO">${RESULT} = {'time': [0.022347167, 0.032637153, 0.042596889, 0.052565208, 0.062533306, 0.072501208, 0.082470069, 0.092438042, 0.102406889, 0.112375306, 0.122343861, 0.132312694, 0.142281056, 0.152249222, 0.162217...</msg>
<status status="PASS" starttime="20201112 12:44:20.794" endtime="20201112 12:44:20.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.822" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:20.821" endtime="20201112 12:44:20.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.824" level="INFO">VALUE: 0.022347167</msg>
<status status="PASS" starttime="20201112 12:44:20.823" endtime="20201112 12:44:20.824"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.818" endtime="20201112 12:44:20.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.829" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:20.828" endtime="20201112 12:44:20.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:20.832" level="INFO">VALUE: [0.032637153, 0.042596889, 0.052565208, 0.062533306, 0.072501208, 0.082470069, 0.092438042, 0.102406889, 0.112375306, 0.122343861, 0.132312694, 0.142281056, 0.152249222, 0.162217528, 0.172185514, 0.182153681, 0.192122264, 0.202091708, 0.212060194, 0.222028833, 0.231997722, 0.241966403, 0.251935319, 0.261904264, 0.271872458, 0.281840333, 0.291809264, 0.301777403, 0.311745986, 0.321714903, 0.331683847, 0.341652125, 0.351620167, 0.361588778, 0.371556972, 0.381525792, 0.391494764, 0.401464, 0.411433347, 0.421402556, 0.431370931, 0.441339597, 0.451308194, 0.461276889, 0.471245806, 0.481214458, 0.491182889, 0.501151667, 0.511119986, 0.521088583, 0.531057264, 0.541026583, 0.550994722, 0.560963139, 0.570931167, 0.580898986, 0.590866847, 0.600834958, 0.610803556, 0.620771986, 0.630740014, 0.640709042, 0.650677556, 0.660645778, 0.670613958, 0.680582472, 0.690550514, 0.700519028, 0.710487375, 0.720456028, 0.730425125, 0.740394278, 0.750363417, 0.760332708, 0.770302125, 0.780271278, 0.790240292, 0.800209431, 0.810179278, 0.820148361, 0.830116736, 0.840086069, 0.850055347, 0.860025194, 0.8699935, 0.879962278, 0.889930792, 0.899899, 0.909867125, 0.919835708, 0.929803972, 0.939772153, 0.949740639, 0.959709028, 0.969678361, 0.979646375, 0.989615014, 0.999583597, 1.009551625, 1.01952025] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:20.831" endtime="20201112 12:44:20.833"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.825" endtime="20201112 12:44:20.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.835" endtime="20201112 12:44:20.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:20.839" endtime="20201112 12:44:20.858"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.837" endtime="20201112 12:44:20.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.834" endtime="20201112 12:44:20.859"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.294" endtime="20201112 12:44:20.860"></status>
</kw>
<msg timestamp="20201112 12:44:20.860" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:20.868" endtime="20201112 12:44:23.034"></status>
</kw>
<msg timestamp="20201112 12:44:23.035" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41413514, 'wakeups': [41423837, 41433829, 41443829, 41453829, 41463829...</msg>
<status status="PASS" starttime="20201112 12:44:20.866" endtime="20201112 12:44:23.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.037" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 41413514, 'wakeups': [41423837, 41433829, 41443829, 41453829, 41463829...</msg>
<status status="PASS" starttime="20201112 12:44:23.036" endtime="20201112 12:44:23.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.038" endtime="20201112 12:44:23.040"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.864" endtime="20201112 12:44:23.041"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.862" endtime="20201112 12:44:23.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.044" level="INFO">${RESULT} = {'wakeups': [41423837, 41433829, 41443829, 41453829, 41463829, 41473829, 41483829, 41493829, 41503829, 41513829, 41523829, 41533829, 41543829, 41553829, 41563829, 41573829, 41583829, 41593829, 4160382...</msg>
<status status="PASS" starttime="20201112 12:44:23.042" endtime="20201112 12:44:23.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.048" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:23.047" endtime="20201112 12:44:23.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.050" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:23.049" endtime="20201112 12:44:23.050"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.044" endtime="20201112 12:44:23.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.054" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:23.053" endtime="20201112 12:44:23.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.056" level="INFO">VALUE: 41413514</msg>
<status status="PASS" starttime="20201112 12:44:23.055" endtime="20201112 12:44:23.057"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.051" endtime="20201112 12:44:23.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.061" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:23.060" endtime="20201112 12:44:23.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.063" level="INFO">VALUE: [41423837, 41433829, 41443829, 41453829, 41463829, 41473829, 41483829, 41493829, 41503829, 41513829, 41523829, 41533829, 41543829, 41553829, 41563829, 41573829, 41583829, 41593829, 41603829, 41613829, 41623829, 41633829, 41643829, 41653829, 41663829, 41673829, 41683829, 41693829, 41703829, 41713829, 41723829, 41733829, 41743829, 41753829, 41763829, 41773829, 41783829, 41793829, 41803829, 41813829, 41823829, 41833829, 41843829, 41853829, 41863829, 41873829, 41883829, 41893829, 41903829, 41913829, 41923829, 41933829, 41943829, 41953829, 41963829, 41973829, 41983829, 41993829, 42003829, 42013829, 42023829, 42033829, 42043829, 42053829, 42063829, 42073829, 42083829, 42093829, 42103829, 42113829, 42123829, 42133829, 42143829, 42153829, 42163829, 42173829, 42183829, 42193829, 42203829, 42213829, 42223829, 42233829, 42243829, 42253829, 42263829, 42273829, 42283829, 42293829, 42303829, 42313829, 42323829, 42333829, 42343829, 42353829, 42363829, 42373829, 42383829, 42393829, 42403829, 42413829]</msg>
<status status="PASS" starttime="20201112 12:44:23.062" endtime="20201112 12:44:23.064"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.058" endtime="20201112 12:44:23.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.071" endtime="20201112 12:44:23.363"></status>
</kw>
<msg timestamp="20201112 12:44:23.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030177472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.069" endtime="20201112 12:44:23.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019885806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030177472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:23.367" endtime="20201112 12:44:23.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.374" endtime="20201112 12:44:23.376"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.067" endtime="20201112 12:44:23.377"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.065" endtime="20201112 12:44:23.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:23.400" level="INFO">${RESULT} = {'time': [0.019885806, 0.030177472, 0.040139069, 0.050108472, 0.060078458, 0.070048597, 0.080018222, 0.089987639, 0.099956792, 0.109926306, 0.119895625, 0.129865333, 0.139834111, 0.149803111, 0.159772...</msg>
<status status="PASS" starttime="20201112 12:44:23.378" endtime="20201112 12:44:23.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.404" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:23.403" endtime="20201112 12:44:23.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.406" level="INFO">VALUE: 0.019885806</msg>
<status status="PASS" starttime="20201112 12:44:23.405" endtime="20201112 12:44:23.407"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.401" endtime="20201112 12:44:23.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.412" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:23.411" endtime="20201112 12:44:23.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:23.414" level="INFO">VALUE: [0.030177472, 0.040139069, 0.050108472, 0.060078458, 0.070048597, 0.080018222, 0.089987639, 0.099956792, 0.109926306, 0.119895625, 0.129865333, 0.139834111, 0.149803111, 0.159772097, 0.169740972, 0.179709347, 0.189677764, 0.199646097, 0.209614792, 0.219583097, 0.229551556, 0.239520819, 0.249489861, 0.259458806, 0.269427472, 0.279396403, 0.289364542, 0.299333014, 0.309301944, 0.319271111, 0.329240486, 0.339209153, 0.349177736, 0.359146611, 0.369115375, 0.379084417, 0.389053403, 0.399022514, 0.408992014, 0.418961, 0.428929639, 0.438898167, 0.448866472, 0.458835208, 0.468804875, 0.478773708, 0.488742111, 0.498711389, 0.508680764, 0.518649958, 0.528619153, 0.538587681, 0.548556694, 0.558526139, 0.568494333, 0.578463306, 0.588432333, 0.598401306, 0.608370583, 0.618339528, 0.628308847, 0.638277792, 0.648246792, 0.658215847, 0.668184861, 0.678154014, 0.688122597, 0.698091083, 0.708059903, 0.718028875, 0.727997139, 0.737965625, 0.747934181, 0.757903083, 0.767871806, 0.777840583, 0.787809847, 0.797779167, 0.807748403, 0.817717444, 0.827687056, 0.837656139, 0.847625, 0.857595083, 0.867564542, 0.877533931, 0.887503292, 0.897472736, 0.907441625, 0.917410431, 0.927379681, 0.937349194, 0.947319069, 0.957289431, 0.967259208, 0.977229611, 0.987199625, 0.997169181, 1.007138472, 1.017108097] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:23.413" endtime="20201112 12:44:23.414"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.408" endtime="20201112 12:44:23.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.417" endtime="20201112 12:44:23.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:23.420" endtime="20201112 12:44:23.439"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.418" endtime="20201112 12:44:23.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.415" endtime="20201112 12:44:23.440"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:20.861" endtime="20201112 12:44:23.441"></status>
</kw>
<msg timestamp="20201112 12:44:23.441" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:23.449" endtime="20201112 12:44:25.573"></status>
</kw>
<msg timestamp="20201112 12:44:25.574" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44003385, 'wakeups': [44013708, 44023700, 44033700, 44043700, 44053700...</msg>
<status status="PASS" starttime="20201112 12:44:23.447" endtime="20201112 12:44:25.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.579" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44003385, 'wakeups': [44013708, 44023700, 44033700, 44043700, 44053700...</msg>
<status status="PASS" starttime="20201112 12:44:25.577" endtime="20201112 12:44:25.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.580" endtime="20201112 12:44:25.581"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.445" endtime="20201112 12:44:25.582"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.443" endtime="20201112 12:44:25.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.585" level="INFO">${RESULT} = {'wakeups': [44013708, 44023700, 44033700, 44043700, 44053700, 44063700, 44073700, 44083700, 44093700, 44103700, 44113700, 44123700, 44133700, 44143700, 44153700, 44163700, 44173700, 44183700, 4419370...</msg>
<status status="PASS" starttime="20201112 12:44:25.583" endtime="20201112 12:44:25.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.589" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:25.588" endtime="20201112 12:44:25.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.591" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:25.590" endtime="20201112 12:44:25.591"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.586" endtime="20201112 12:44:25.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.596" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:25.595" endtime="20201112 12:44:25.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.598" level="INFO">VALUE: 44003385</msg>
<status status="PASS" starttime="20201112 12:44:25.597" endtime="20201112 12:44:25.598"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.592" endtime="20201112 12:44:25.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.602" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:25.602" endtime="20201112 12:44:25.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.605" level="INFO">VALUE: [44013708, 44023700, 44033700, 44043700, 44053700, 44063700, 44073700, 44083700, 44093700, 44103700, 44113700, 44123700, 44133700, 44143700, 44153700, 44163700, 44173700, 44183700, 44193700, 44203700, 44213700, 44223700, 44233700, 44243700, 44253700, 44263700, 44273700, 44283700, 44293700, 44303700, 44313700, 44323700, 44333700, 44343700, 44353700, 44363700, 44373700, 44383700, 44393700, 44403700, 44413700, 44423700, 44433700, 44443700, 44453700, 44463700, 44473700, 44483700, 44493700, 44503700, 44513700, 44523700, 44533700, 44543700, 44553700, 44563700, 44573700, 44583700, 44593700, 44603700, 44613700, 44623700, 44633700, 44643700, 44653700, 44663700, 44673700, 44683700, 44693700, 44703700, 44713700, 44723700, 44733700, 44743700, 44753700, 44763700, 44773700, 44783700, 44793700, 44803700, 44813700, 44823700, 44833700, 44843700, 44853700, 44863700, 44873700, 44883700, 44893700, 44903700, 44913700, 44923700, 44933700, 44943700, 44953700, 44963700, 44973700, 44983700, 44993700, 45003700]</msg>
<status status="PASS" starttime="20201112 12:44:25.604" endtime="20201112 12:44:25.605"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.599" endtime="20201112 12:44:25.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.612" endtime="20201112 12:44:25.902"></status>
</kw>
<msg timestamp="20201112 12:44:25.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030740014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.610" endtime="20201112 12:44:25.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020450278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030740014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:25.906" endtime="20201112 12:44:25.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.914" endtime="20201112 12:44:25.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.608" endtime="20201112 12:44:25.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.606" endtime="20201112 12:44:25.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:25.942" level="INFO">${RESULT} = {'time': [0.020450278, 0.030740014, 0.040701111, 0.05067025, 0.060639056, 0.070608181, 0.080577764, 0.090546583, 0.100514597, 0.110482292, 0.120451083, 0.130419847, 0.140388583, 0.150357639, 0.1603265...</msg>
<status status="PASS" starttime="20201112 12:44:25.918" endtime="20201112 12:44:25.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.946" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201112 12:44:25.945" endtime="20201112 12:44:25.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.948" level="INFO">VALUE: 0.020450278</msg>
<status status="PASS" starttime="20201112 12:44:25.947" endtime="20201112 12:44:25.948"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.943" endtime="20201112 12:44:25.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.953" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:25.952" endtime="20201112 12:44:25.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:25.955" level="INFO">VALUE: [0.030740014, 0.040701111, 0.05067025, 0.060639056, 0.070608181, 0.080577764, 0.090546583, 0.100514597, 0.110482292, 0.120451083, 0.130419847, 0.140388583, 0.150357639, 0.160326514, 0.170295722, 0.180264708, 0.190234056, 0.200202694, 0.210170764, 0.220139083, 0.230108083, 0.240077056, 0.250046333, 0.260015167, 0.269983861, 0.279952847, 0.289921972, 0.299891722, 0.309861139, 0.319830278, 0.329798889, 0.339767792, 0.349736236, 0.359704889, 0.369673875, 0.379642167, 0.389610667, 0.399578611, 0.409547056, 0.419515208, 0.429483, 0.439450722, 0.449418444, 0.459386708, 0.469355028, 0.479323153, 0.489291472, 0.499259542, 0.509227444, 0.519195903, 0.529163708, 0.539131819, 0.549100208, 0.559068764, 0.569037417, 0.579006569, 0.588975722, 0.598944111, 0.608913167, 0.618882014, 0.628850653, 0.638819611, 0.648786958, 0.658755208, 0.668723861, 0.678692028, 0.688659847, 0.698627681, 0.708595264, 0.718563347, 0.728531111, 0.738499361, 0.748467611, 0.7584355, 0.76840425, 0.778373194, 0.788342542, 0.798311542, 0.808280486, 0.818249264, 0.828218042, 0.838186944, 0.848155583, 0.858124236, 0.868092778, 0.878060972, 0.888029708, 0.897998861, 0.907968583, 0.917937875, 0.927906986, 0.937875347, 0.947843472, 0.95781125, 0.9677795, 0.977747611, 0.9877155, 0.997683, 1.007651042, 1.017619292] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:25.954" endtime="20201112 12:44:25.956"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.949" endtime="20201112 12:44:25.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.958" endtime="20201112 12:44:25.960"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:25.962" endtime="20201112 12:44:25.981"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.960" endtime="20201112 12:44:25.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.957" endtime="20201112 12:44:25.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:23.441" endtime="20201112 12:44:25.982"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.292" endtime="20201112 12:44:25.983"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:18.291" endtime="20201112 12:44:25.983"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:25.985" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:25.993" endtime="20201112 12:44:28.117"></status>
</kw>
<msg timestamp="20201112 12:44:28.118" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46555151, 'wakeups': [46565542, 46575538, 46585538, 46595538, 46605538...</msg>
<status status="PASS" starttime="20201112 12:44:25.992" endtime="20201112 12:44:28.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.124" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 46555151, 'wakeups': [46565542, 46575538, 46585538, 46595538, 46605538...</msg>
<status status="PASS" starttime="20201112 12:44:28.120" endtime="20201112 12:44:28.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.126" endtime="20201112 12:44:28.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.989" endtime="20201112 12:44:28.130"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.987" endtime="20201112 12:44:28.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.134" level="INFO">${RESULT} = {'wakeups': [46565542, 46575538, 46585538, 46595538, 46605538, 46615538, 46625538, 46635536, 46645535, 46655537, 46665536, 46675535, 46685537, 46695538, 46705538, 46715536, 46725537, 46735536, 4674553...</msg>
<status status="PASS" starttime="20201112 12:44:28.132" endtime="20201112 12:44:28.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.139" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:28.138" endtime="20201112 12:44:28.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.141" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:28.140" endtime="20201112 12:44:28.141"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.135" endtime="20201112 12:44:28.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.147" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:28.145" endtime="20201112 12:44:28.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.149" level="INFO">VALUE: 46555151</msg>
<status status="PASS" starttime="20201112 12:44:28.148" endtime="20201112 12:44:28.149"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.142" endtime="20201112 12:44:28.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.153" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:28.152" endtime="20201112 12:44:28.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.155" level="INFO">VALUE: [46565542, 46575538, 46585538, 46595538, 46605538, 46615538, 46625538, 46635536, 46645535, 46655537, 46665536, 46675535, 46685537, 46695538, 46705538, 46715536, 46725537, 46735536, 46745535, 46755537, 46765538, 46775538, 46785538, 46795538, 46805538, 46815536, 46825537, 46835538, 46845538, 46855538, 46865536, 46875535, 46885537, 46895538, 46905538, 46915536, 46925537, 46935536, 46945535, 46955535, 46965535, 46975537, 46985536, 46995537, 47005538, 47015538, 47025538, 47035538, 47045538, 47055538, 47065538, 47075538, 47085538, 47095538, 47105538, 47115538, 47125538, 47135538, 47145538, 47155538, 47165538, 47175538, 47185536, 47195537, 47205536, 47215537, 47225536, 47235535, 47245537, 47255536, 47265537, 47275536, 47285535, 47295535, 47305537, 47315536, 47325537, 47335538, 47345536, 47355535, 47365535, 47375535, 47385537, 47395538, 47405538, 47415538, 47425538, 47435538, 47445538, 47455538, 47465538, 47475538, 47485538, 47495538, 47505538, 47515538, 47525536, 47535535, 47545535, 47555537]</msg>
<status status="PASS" starttime="20201112 12:44:28.154" endtime="20201112 12:44:28.156"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.150" endtime="20201112 12:44:28.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.162" endtime="20201112 12:44:28.453"></status>
</kw>
<msg timestamp="20201112 12:44:28.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032603389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.161" endtime="20201112 12:44:28.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022245083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032603389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:28.457" endtime="20201112 12:44:28.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.465" endtime="20201112 12:44:28.466"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.159" endtime="20201112 12:44:28.467"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.157" endtime="20201112 12:44:28.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:28.490" level="INFO">${RESULT} = {'time': [0.022245083, 0.032603389, 0.0425685, 0.052537986, 0.062507861, 0.072477958, 0.082447819, 0.092417639, 0.102385167, 0.112353931, 0.122326083, 0.132293903, 0.142262097, 0.152233375, 0.16220354...</msg>
<status status="PASS" starttime="20201112 12:44:28.468" endtime="20201112 12:44:28.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.495" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:28.494" endtime="20201112 12:44:28.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.497" level="INFO">VALUE: 0.022245083</msg>
<status status="PASS" starttime="20201112 12:44:28.496" endtime="20201112 12:44:28.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.491" endtime="20201112 12:44:28.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.502" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:28.501" endtime="20201112 12:44:28.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:28.505" level="INFO">VALUE: [0.032603389, 0.0425685, 0.052537986, 0.062507861, 0.072477958, 0.082447819, 0.092417639, 0.102385167, 0.112353931, 0.122326083, 0.132293903, 0.142262097, 0.152233375, 0.162203542, 0.172173375, 0.182141444, 0.192112361, 0.202080681, 0.212048708, 0.222019764, 0.231989375, 0.241958653, 0.251927264, 0.261895639, 0.271864403, 0.281831319, 0.291801014, 0.301770931, 0.311739778, 0.321708972, 0.33167625, 0.341644722, 0.3516165, 0.361586569, 0.371555889, 0.381522764, 0.391493319, 0.401461347, 0.411429083, 0.421397708, 0.431366, 0.441336667, 0.451304389, 0.461274319, 0.471244681, 0.481213889, 0.491183417, 0.501152833, 0.511122667, 0.521092069, 0.531062056, 0.541031958, 0.551001375, 0.560971417, 0.570940736, 0.580909875, 0.590879028, 0.600847722, 0.610816569, 0.620785333, 0.630754056, 0.640723111, 0.650689875, 0.660659431, 0.670627319, 0.680597236, 0.690564972, 0.700533014, 0.710503917, 0.720470931, 0.730440194, 0.740407597, 0.750374681, 0.760342819, 0.770312833, 0.780279944, 0.790249403, 0.800219306, 0.810185792, 0.820153361, 0.830121861, 0.840090444, 0.850061486, 0.8600315, 0.870000028, 0.879968167, 0.889936681, 0.899905444, 0.909874125, 0.919843222, 0.929812125, 0.939781458, 0.949750514, 0.959719958, 0.969689556, 0.979658792, 0.989626403, 0.999594236, 1.009563222, 1.019534764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:28.504" endtime="20201112 12:44:28.505"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.498" endtime="20201112 12:44:28.506"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.508" endtime="20201112 12:44:28.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:28.511" endtime="20201112 12:44:28.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.510" endtime="20201112 12:44:28.531"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.507" endtime="20201112 12:44:28.532"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.986" endtime="20201112 12:44:28.532"></status>
</kw>
<msg timestamp="20201112 12:44:28.532" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:28.540" endtime="20201112 12:44:30.663"></status>
</kw>
<msg timestamp="20201112 12:44:30.665" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49110433, 'wakeups': [49120824, 49130818, 49140819, 49150820, 49160820...</msg>
<status status="PASS" starttime="20201112 12:44:28.539" endtime="20201112 12:44:30.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.670" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 49110433, 'wakeups': [49120824, 49130818, 49140819, 49150820, 49160820...</msg>
<status status="PASS" starttime="20201112 12:44:30.667" endtime="20201112 12:44:30.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.673" endtime="20201112 12:44:30.676"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.536" endtime="20201112 12:44:30.677"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.534" endtime="20201112 12:44:30.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:30.683" level="INFO">${RESULT} = {'wakeups': [49120824, 49130818, 49140819, 49150820, 49160820, 49170820, 49180820, 49190820, 49200820, 49210820, 49220818, 49230819, 49240820, 49250820, 49260820, 49270820, 49280820, 49290820, 4930082...</msg>
<status status="PASS" starttime="20201112 12:44:30.680" endtime="20201112 12:44:30.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.689" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:30.688" endtime="20201112 12:44:30.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.691" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:30.690" endtime="20201112 12:44:30.692"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.685" endtime="20201112 12:44:30.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.696" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:30.695" endtime="20201112 12:44:30.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.698" level="INFO">VALUE: 49110433</msg>
<status status="PASS" starttime="20201112 12:44:30.697" endtime="20201112 12:44:30.698"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.693" endtime="20201112 12:44:30.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.703" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:30.702" endtime="20201112 12:44:30.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:30.709" level="INFO">VALUE: [49120824, 49130818, 49140819, 49150820, 49160820, 49170820, 49180820, 49190820, 49200820, 49210820, 49220818, 49230819, 49240820, 49250820, 49260820, 49270820, 49280820, 49290820, 49300820, 49310820, 49320818, 49330819, 49340818, 49350819, 49360820, 49370820, 49380820, 49390818, 49400819, 49410820, 49420820, 49430820, 49440820, 49450820, 49460818, 49470817, 49480817, 49490819, 49500820, 49510820, 49520820, 49530820, 49540818, 49550819, 49560820, 49570820, 49580820, 49590820, 49600820, 49610820, 49620820, 49630820, 49640820, 49650820, 49660820, 49670820, 49680820, 49690818, 49700817, 49710817, 49720817, 49730817, 49740819, 49750818, 49760817, 49770817, 49780817, 49790817, 49800819, 49810820, 49820820, 49830818, 49840817, 49850817, 49860819, 49870818, 49880817, 49890819, 49900820, 49910820, 49920818, 49930817, 49940817, 49950817, 49960817, 49970817, 49980819, 49990820, 50000818, 50010817, 50020817, 50030817, 50040817, 50050819, 50060820, 50070820, 50080820, 50090820, 50100820, 50110820]</msg>
<status status="PASS" starttime="20201112 12:44:30.708" endtime="20201112 12:44:30.710"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.699" endtime="20201112 12:44:30.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:30.718" endtime="20201112 12:44:31.009"></status>
</kw>
<msg timestamp="20201112 12:44:31.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029868958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:30.715" endtime="20201112 12:44:31.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019511486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029868958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:31.013" endtime="20201112 12:44:31.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.021" endtime="20201112 12:44:31.022"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.712" endtime="20201112 12:44:31.023"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:30.711" endtime="20201112 12:44:31.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:31.046" level="INFO">${RESULT} = {'time': [0.019511486, 0.029868958, 0.039830375, 0.049799417, 0.059768597, 0.069736292, 0.079703931, 0.089672222, 0.099640264, 0.109608292, 0.119576694, 0.129542833, 0.139511736, 0.149480903, 0.159449...</msg>
<status status="PASS" starttime="20201112 12:44:31.024" endtime="20201112 12:44:31.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.051" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:31.050" endtime="20201112 12:44:31.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.053" level="INFO">VALUE: 0.019511486</msg>
<status status="PASS" starttime="20201112 12:44:31.052" endtime="20201112 12:44:31.053"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.047" endtime="20201112 12:44:31.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.059" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:31.058" endtime="20201112 12:44:31.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:31.061" level="INFO">VALUE: [0.029868958, 0.039830375, 0.049799417, 0.059768597, 0.069736292, 0.079703931, 0.089672222, 0.099640264, 0.109608292, 0.119576694, 0.129542833, 0.139511736, 0.149480903, 0.159449375, 0.169418167, 0.179387014, 0.189356097, 0.199325014, 0.209293778, 0.219262069, 0.229228208, 0.239198125, 0.249166028, 0.259135986, 0.269106264, 0.279075542, 0.289044458, 0.299011069, 0.308981125, 0.318950625, 0.328918931, 0.338887028, 0.348855167, 0.358823472, 0.368789764, 0.378757014, 0.388726556, 0.398698569, 0.408668903, 0.418637819, 0.428606819, 0.438575375, 0.448541861, 0.458511458, 0.468481181, 0.478450153, 0.488418931, 0.498387792, 0.508356125, 0.518325083, 0.528294, 0.538262361, 0.548230792, 0.558199778, 0.568169278, 0.578138139, 0.588107319, 0.598074625, 0.608042222, 0.618010833, 0.627979375, 0.637948444, 0.647918181, 0.657885736, 0.667853542, 0.677822597, 0.687791083, 0.697759639, 0.7077305, 0.717699986, 0.727668694, 0.737635278, 0.747602972, 0.757571819, 0.767542264, 0.777509931, 0.787478306, 0.797449417, 0.807419583, 0.817387917, 0.827354583, 0.837323111, 0.847291833, 0.857260042, 0.867228597, 0.877196722, 0.887166694, 0.897135542, 0.907102181, 0.91706925, 0.927037167, 0.937004903, 0.946972944, 0.956943819, 0.966914069, 0.976883014, 0.986852181, 0.996821542, 1.006790764, 1.016759764] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:31.060" endtime="20201112 12:44:31.062"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.055" endtime="20201112 12:44:31.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.064" endtime="20201112 12:44:31.066"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:31.068" endtime="20201112 12:44:31.087"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.066" endtime="20201112 12:44:31.088"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.063" endtime="20201112 12:44:31.089"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:28.533" endtime="20201112 12:44:31.089"></status>
</kw>
<msg timestamp="20201112 12:44:31.089" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:31.098" endtime="20201112 12:44:33.222"></status>
</kw>
<msg timestamp="20201112 12:44:33.223" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51677112, 'wakeups': [51687502, 51697497, 51707496, 51717498, 51727499...</msg>
<status status="PASS" starttime="20201112 12:44:31.097" endtime="20201112 12:44:33.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.229" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 51677112, 'wakeups': [51687502, 51697497, 51707496, 51717498, 51727499...</msg>
<status status="PASS" starttime="20201112 12:44:33.225" endtime="20201112 12:44:33.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.231" endtime="20201112 12:44:33.234"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.093" endtime="20201112 12:44:33.235"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.091" endtime="20201112 12:44:33.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.242" level="INFO">${RESULT} = {'wakeups': [51687502, 51697497, 51707496, 51717498, 51727499, 51737499, 51747497, 51757496, 51767498, 51777499, 51787499, 51797497, 51807496, 51817496, 51827498, 51837499, 51847499, 51857497, 5186749...</msg>
<status status="PASS" starttime="20201112 12:44:33.238" endtime="20201112 12:44:33.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.246" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:33.245" endtime="20201112 12:44:33.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.248" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:33.247" endtime="20201112 12:44:33.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.243" endtime="20201112 12:44:33.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.253" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:33.252" endtime="20201112 12:44:33.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.255" level="INFO">VALUE: 51677112</msg>
<status status="PASS" starttime="20201112 12:44:33.254" endtime="20201112 12:44:33.255"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.249" endtime="20201112 12:44:33.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.259" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:33.258" endtime="20201112 12:44:33.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.261" level="INFO">VALUE: [51687502, 51697497, 51707496, 51717498, 51727499, 51737499, 51747497, 51757496, 51767498, 51777499, 51787499, 51797497, 51807496, 51817496, 51827498, 51837499, 51847499, 51857497, 51867498, 51877497, 51887496, 51897498, 51907499, 51917499, 51927497, 51937496, 51947496, 51957496, 51967496, 51977498, 51987499, 51997499, 52007499, 52017499, 52027499, 52037499, 52047499, 52057499, 52067499, 52077499, 52087499, 52097499, 52107499, 52117499, 52127499, 52137499, 52147499, 52157499, 52167497, 52177496, 52187498, 52197497, 52207496, 52217498, 52227499, 52237499, 52247499, 52257497, 52267496, 52277496, 52287498, 52297497, 52307496, 52317498, 52327499, 52337499, 52347497, 52357498, 52367499, 52377499, 52387499, 52397499, 52407497, 52417496, 52427496, 52437498, 52447499, 52457497, 52467496, 52477498, 52487497, 52497498, 52507499, 52517499, 52527499, 52537499, 52547497, 52557498, 52567499, 52577499, 52587499, 52597499, 52607499, 52617499, 52627499, 52637499, 52647497, 52657498, 52667499, 52677497]</msg>
<status status="PASS" starttime="20201112 12:44:33.260" endtime="20201112 12:44:33.262"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.256" endtime="20201112 12:44:33.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.269" endtime="20201112 12:44:33.559"></status>
</kw>
<msg timestamp="20201112 12:44:33.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021393792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031749083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.267" endtime="20201112 12:44:33.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021393792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031749083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:33.563" endtime="20201112 12:44:33.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.570" endtime="20201112 12:44:33.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.264" endtime="20201112 12:44:33.572"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.263" endtime="20201112 12:44:33.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:33.596" level="INFO">${RESULT} = {'time': [0.021393792, 0.031749083, 0.041710347, 0.051676792, 0.061645944, 0.071614569, 0.081582389, 0.091547694, 0.101513236, 0.111482042, 0.121450361, 0.131418333, 0.141383903, 0.151350708, 0.161318...</msg>
<status status="PASS" starttime="20201112 12:44:33.574" endtime="20201112 12:44:33.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.601" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201112 12:44:33.600" endtime="20201112 12:44:33.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.603" level="INFO">VALUE: 0.021393792</msg>
<status status="PASS" starttime="20201112 12:44:33.602" endtime="20201112 12:44:33.603"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.597" endtime="20201112 12:44:33.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.608" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:33.607" endtime="20201112 12:44:33.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:33.610" level="INFO">VALUE: [0.031749083, 0.041710347, 0.051676792, 0.061645944, 0.071614569, 0.081582389, 0.091547694, 0.101513236, 0.111482042, 0.121450361, 0.131418333, 0.141383903, 0.151350708, 0.161318139, 0.17128775, 0.181256056, 0.191223986, 0.201189542, 0.211158181, 0.221124653, 0.231090639, 0.241059806, 0.251028569, 0.260995958, 0.270961694, 0.280928153, 0.290895458, 0.300862556, 0.31083, 0.320799389, 0.330767306, 0.340734542, 0.350702333, 0.360670125, 0.370637542, 0.380604764, 0.390572028, 0.400539403, 0.410507264, 0.420474917, 0.430442611, 0.440409972, 0.450377736, 0.460345056, 0.47031225, 0.480279153, 0.490246889, 0.500214653, 0.510180208, 0.520147083, 0.530116222, 0.540082556, 0.550049319, 0.560019514, 0.569988278, 0.579955667, 0.589923139, 0.599888458, 0.609855514, 0.619823542, 0.629793361, 0.639759958, 0.649726153, 0.659695542, 0.669663681, 0.679631056, 0.689596056, 0.699564458, 0.709532319, 0.719499347, 0.729466861, 0.739434292, 0.749399347, 0.759365, 0.769331833, 0.779300861, 0.789269431, 0.7992345, 0.809200139, 0.819169069, 0.829134889, 0.839103236, 0.849071194, 0.859038444, 0.869006083, 0.8789735, 0.888938444, 0.898906486, 0.908874389, 0.918841611, 0.928808181, 0.938774625, 0.948741444, 0.958708514, 0.968675764, 0.978642681, 0.988607389, 0.99857475, 1.008542736, 1.018506903] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:33.609" endtime="20201112 12:44:33.611"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.604" endtime="20201112 12:44:33.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.613" endtime="20201112 12:44:33.614"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:33.616" endtime="20201112 12:44:33.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.615" endtime="20201112 12:44:33.636"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.612" endtime="20201112 12:44:33.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:31.090" endtime="20201112 12:44:33.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.984" endtime="20201112 12:44:33.637"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:25.983" endtime="20201112 12:44:33.638"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:33.640" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:33.648" endtime="20201112 12:44:35.771"></status>
</kw>
<msg timestamp="20201112 12:44:35.772" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54235271, 'wakeups': [54245718, 54255720, 54265725, 54275720, 54285720...</msg>
<status status="PASS" starttime="20201112 12:44:33.646" endtime="20201112 12:44:35.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.783" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 54235271, 'wakeups': [54245718, 54255720, 54265725, 54275720, 54285720...</msg>
<status status="PASS" starttime="20201112 12:44:35.774" endtime="20201112 12:44:35.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.785" endtime="20201112 12:44:35.789"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.644" endtime="20201112 12:44:35.790"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.642" endtime="20201112 12:44:35.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:35.796" level="INFO">${RESULT} = {'wakeups': [54245718, 54255720, 54265725, 54275720, 54285720, 54295725, 54305725, 54315725, 54325725, 54335725, 54345720, 54355720, 54365719, 54375720, 54385720, 54395720, 54405720, 54415720, 5442572...</msg>
<status status="PASS" starttime="20201112 12:44:35.792" endtime="20201112 12:44:35.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.801" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:35.800" endtime="20201112 12:44:35.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.803" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:35.802" endtime="20201112 12:44:35.803"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.797" endtime="20201112 12:44:35.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.808" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:35.806" endtime="20201112 12:44:35.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.811" level="INFO">VALUE: 54235271</msg>
<status status="PASS" starttime="20201112 12:44:35.810" endtime="20201112 12:44:35.811"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.804" endtime="20201112 12:44:35.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.815" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:35.814" endtime="20201112 12:44:35.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:35.817" level="INFO">VALUE: [54245718, 54255720, 54265725, 54275720, 54285720, 54295725, 54305725, 54315725, 54325725, 54335725, 54345720, 54355720, 54365719, 54375720, 54385720, 54395720, 54405720, 54415720, 54425720, 54435719, 54445720, 54455720, 54465720, 54475720, 54485725, 54495720, 54505720, 54515720, 54525720, 54535725, 54545725, 54555719, 54565719, 54575720, 54585725, 54595720, 54605720, 54615720, 54625720, 54635720, 54645720, 54655725, 54665725, 54675719, 54685720, 54695720, 54705725, 54715725, 54725719, 54735720, 54745720, 54755725, 54765725, 54775725, 54785725, 54795720, 54805725, 54815720, 54825725, 54835720, 54845720, 54855719, 54865720, 54875725, 54885720, 54895725, 54905720, 54915720, 54925720, 54935725, 54945725, 54955725, 54965719, 54975720, 54985720, 54995725, 55005720, 55015720, 55025725, 55035725, 55045720, 55055720, 55065725, 55075725, 55085719, 55095720, 55105725, 55115720, 55125720, 55135725, 55145719, 55155720, 55165720, 55175725, 55185720, 55195720, 55205725, 55215720, 55225720, 55235720]</msg>
<status status="PASS" starttime="20201112 12:44:35.816" endtime="20201112 12:44:35.818"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.812" endtime="20201112 12:44:35.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:35.824" endtime="20201112 12:44:36.116"></status>
</kw>
<msg timestamp="20201112 12:44:36.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0326985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:35.823" endtime="20201112 12:44:36.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022285194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0326985, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201112 12:44:36.120" endtime="20201112 12:44:36.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.127" endtime="20201112 12:44:36.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.821" endtime="20201112 12:44:36.129"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:35.819" endtime="20201112 12:44:36.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:36.152" level="INFO">${RESULT} = {'time': [0.022285194, 0.0326985, 0.042667847, 0.052641667, 0.062604667, 0.072573125, 0.082547278, 0.092515167, 0.102482375, 0.112449639, 0.122417181, 0.132378736, 0.142346347, 0.152313708, 0.1622815,...</msg>
<status status="PASS" starttime="20201112 12:44:36.130" endtime="20201112 12:44:36.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.157" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:36.156" endtime="20201112 12:44:36.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.159" level="INFO">VALUE: 0.022285194</msg>
<status status="PASS" starttime="20201112 12:44:36.158" endtime="20201112 12:44:36.159"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.154" endtime="20201112 12:44:36.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.164" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:36.163" endtime="20201112 12:44:36.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:36.167" level="INFO">VALUE: [0.0326985, 0.042667847, 0.052641667, 0.062604667, 0.072573125, 0.082547278, 0.092515167, 0.102482375, 0.112449639, 0.122417181, 0.132378736, 0.142346347, 0.152313708, 0.1622815, 0.172248806, 0.182216361, 0.192183806, 0.202151861, 0.212119653, 0.222087153, 0.232055458, 0.242023125, 0.251990736, 0.261958236, 0.271931278, 0.281893417, 0.291861292, 0.301828931, 0.3117965, 0.321769778, 0.331737389, 0.341699306, 0.351667167, 0.361634972, 0.37160775, 0.381569917, 0.391537403, 0.401504944, 0.411472125, 0.421439611, 0.431406917, 0.441379375, 0.45134625, 0.461307514, 0.471275306, 0.481242972, 0.491215681, 0.501182722, 0.511144944, 0.521112861, 0.531080319, 0.541053708, 0.551021986, 0.560990472, 0.570958681, 0.580921278, 0.590894667, 0.600857583, 0.610830778, 0.620793181, 0.630760833, 0.640728069, 0.650696083, 0.660668986, 0.670631472, 0.680604375, 0.690567139, 0.700535153, 0.710503194, 0.720476458, 0.730444278, 0.740412319, 0.750373847, 0.760341528, 0.770308764, 0.780281208, 0.790242972, 0.800210431, 0.810183028, 0.820150292, 0.830112569, 0.8400805, 0.85005375, 0.860021792, 0.869983903, 0.879952236, 0.889925389, 0.899887611, 0.909855042, 0.919828125, 0.929790208, 0.939758722, 0.949726764, 0.959700292, 0.969662708, 0.979630833, 0.989603944, 0.999566417, 1.009534375, 1.019501861] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:36.166" endtime="20201112 12:44:36.168"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.161" endtime="20201112 12:44:36.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.170" endtime="20201112 12:44:36.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:36.174" endtime="20201112 12:44:36.193"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.172" endtime="20201112 12:44:36.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.169" endtime="20201112 12:44:36.194"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.641" endtime="20201112 12:44:36.194"></status>
</kw>
<msg timestamp="20201112 12:44:36.194" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:36.203" endtime="20201112 12:44:38.327"></status>
</kw>
<msg timestamp="20201112 12:44:38.328" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56799203, 'wakeups': [56809662, 56819652, 56829657, 56839657, 56849652...</msg>
<status status="PASS" starttime="20201112 12:44:36.202" endtime="20201112 12:44:38.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.334" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 56799203, 'wakeups': [56809662, 56819652, 56829657, 56839657, 56849652...</msg>
<status status="PASS" starttime="20201112 12:44:38.331" endtime="20201112 12:44:38.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.336" endtime="20201112 12:44:38.340"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.199" endtime="20201112 12:44:38.341"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.197" endtime="20201112 12:44:38.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.347" level="INFO">${RESULT} = {'wakeups': [56809662, 56819652, 56829657, 56839657, 56849652, 56859652, 56869657, 56879652, 56889657, 56899651, 56909652, 56919652, 56929652, 56939657, 56949657, 56959652, 56969652, 56979657, 5698965...</msg>
<status status="PASS" starttime="20201112 12:44:38.343" endtime="20201112 12:44:38.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.354" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:38.353" endtime="20201112 12:44:38.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.356" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:38.355" endtime="20201112 12:44:38.356"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.349" endtime="20201112 12:44:38.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.361" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:38.360" endtime="20201112 12:44:38.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.363" level="INFO">VALUE: 56799203</msg>
<status status="PASS" starttime="20201112 12:44:38.362" endtime="20201112 12:44:38.363"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.357" endtime="20201112 12:44:38.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.368" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:38.367" endtime="20201112 12:44:38.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.370" level="INFO">VALUE: [56809662, 56819652, 56829657, 56839657, 56849652, 56859652, 56869657, 56879652, 56889657, 56899651, 56909652, 56919652, 56929652, 56939657, 56949657, 56959652, 56969652, 56979657, 56989652, 56999652, 57009657, 57019657, 57029652, 57039652, 57049657, 57059652, 57069652, 57079657, 57089652, 57099657, 57109652, 57119657, 57129652, 57139652, 57149657, 57159652, 57169652, 57179652, 57189657, 57199657, 57209657, 57219657, 57229652, 57239652, 57249652, 57259657, 57269657, 57279652, 57289657, 57299652, 57309652, 57319652, 57329657, 57339651, 57349652, 57359657, 57369657, 57379657, 57389652, 57399652, 57409652, 57419652, 57429652, 57439657, 57449652, 57459652, 57469657, 57479652, 57489652, 57499657, 57509652, 57519652, 57529657, 57539651, 57549652, 57559652, 57569657, 57579652, 57589652, 57599657, 57609657, 57619652, 57629652, 57639652, 57649652, 57659652, 57669657, 57679652, 57689652, 57699652, 57709657, 57719652, 57729652, 57739652, 57749652, 57759652, 57769657, 57779652, 57789657, 57799657]</msg>
<status status="PASS" starttime="20201112 12:44:38.369" endtime="20201112 12:44:38.370"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.364" endtime="20201112 12:44:38.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.377" endtime="20201112 12:44:38.668"></status>
</kw>
<msg timestamp="20201112 12:44:38.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031090042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.375" endtime="20201112 12:44:38.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020665139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031090042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:38.671" endtime="20201112 12:44:38.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.679" endtime="20201112 12:44:38.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.373" endtime="20201112 12:44:38.681"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.371" endtime="20201112 12:44:38.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:38.704" level="INFO">${RESULT} = {'time': [0.020665139, 0.031090042, 0.041047097, 0.051020611, 0.060988431, 0.070950722, 0.080918625, 0.090892042, 0.100854708, 0.110828472, 0.120790486, 0.130758681, 0.140726236, 0.150693889, 0.160666...</msg>
<status status="PASS" starttime="20201112 12:44:38.682" endtime="20201112 12:44:38.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.709" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:38.708" endtime="20201112 12:44:38.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.711" level="INFO">VALUE: 0.020665139</msg>
<status status="PASS" starttime="20201112 12:44:38.710" endtime="20201112 12:44:38.711"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.705" endtime="20201112 12:44:38.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.716" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:38.715" endtime="20201112 12:44:38.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:38.718" level="INFO">VALUE: [0.031090042, 0.041047097, 0.051020611, 0.060988431, 0.070950722, 0.080918625, 0.090892042, 0.100854708, 0.110828472, 0.120790486, 0.130758681, 0.140726236, 0.150693889, 0.160666958, 0.170634611, 0.180597347, 0.190565194, 0.200538361, 0.210500486, 0.220468097, 0.230441347, 0.240409042, 0.250371417, 0.260339194, 0.270311819, 0.280273819, 0.290242125, 0.300215944, 0.310178097, 0.320150889, 0.330112556, 0.340085347, 0.350047069, 0.3600145, 0.369987528, 0.379949319, 0.389916069, 0.399882861, 0.409855167, 0.419821972, 0.429788833, 0.439755625, 0.4497165, 0.459683514, 0.469650722, 0.479623611, 0.489590361, 0.499551653, 0.509523403, 0.519484514, 0.529451222, 0.539418347, 0.549391, 0.559351986, 0.569319653, 0.579291667, 0.58925875, 0.599225875, 0.609186903, 0.619153792, 0.629120653, 0.639087611, 0.649054625, 0.659027097, 0.668988514, 0.678955986, 0.688928486, 0.698890375, 0.708857806, 0.718830667, 0.728792389, 0.738759208, 0.748730806, 0.758691639, 0.768659736, 0.778627236, 0.788600778, 0.798563056, 0.808530514, 0.818503708, 0.828471556, 0.838433917, 0.848401278, 0.858368958, 0.868337514, 0.878305361, 0.888278556, 0.898240736, 0.908208708, 0.918176069, 0.928149292, 0.938111528, 0.948079472, 0.958047042, 0.968014681, 0.977982681, 0.987955931, 0.997919, 1.007892528, 1.017860569] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:38.717" endtime="20201112 12:44:38.719"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.712" endtime="20201112 12:44:38.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.722" endtime="20201112 12:44:38.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:38.725" endtime="20201112 12:44:38.744"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.723" endtime="20201112 12:44:38.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.720" endtime="20201112 12:44:38.745"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:36.195" endtime="20201112 12:44:38.746"></status>
</kw>
<msg timestamp="20201112 12:44:38.746" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:38.754" endtime="20201112 12:44:40.878"></status>
</kw>
<msg timestamp="20201112 12:44:40.880" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59358810, 'wakeups': [59369258, 59379259, 59389259, 59399259, 59409259...</msg>
<status status="PASS" starttime="20201112 12:44:38.752" endtime="20201112 12:44:40.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.885" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 59358810, 'wakeups': [59369258, 59379259, 59389259, 59399259, 59409259...</msg>
<status status="PASS" starttime="20201112 12:44:40.882" endtime="20201112 12:44:40.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.888" endtime="20201112 12:44:40.891"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.750" endtime="20201112 12:44:40.892"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.748" endtime="20201112 12:44:40.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:40.898" level="INFO">${RESULT} = {'wakeups': [59369258, 59379259, 59389259, 59399259, 59409259, 59419259, 59429259, 59439259, 59449264, 59459259, 59469264, 59479264, 59489259, 59499259, 59509259, 59519259, 59529264, 59539264, 5954925...</msg>
<status status="PASS" starttime="20201112 12:44:40.894" endtime="20201112 12:44:40.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.906" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:40.904" endtime="20201112 12:44:40.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.909" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:40.908" endtime="20201112 12:44:40.909"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.900" endtime="20201112 12:44:40.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.914" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:40.913" endtime="20201112 12:44:40.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.915" level="INFO">VALUE: 59358810</msg>
<status status="PASS" starttime="20201112 12:44:40.915" endtime="20201112 12:44:40.916"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.910" endtime="20201112 12:44:40.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.920" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:40.919" endtime="20201112 12:44:40.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:40.922" level="INFO">VALUE: [59369258, 59379259, 59389259, 59399259, 59409259, 59419259, 59429259, 59439259, 59449264, 59459259, 59469264, 59479264, 59489259, 59499259, 59509259, 59519259, 59529264, 59539264, 59549259, 59559259, 59569264, 59579259, 59589259, 59599264, 59609258, 59619259, 59629259, 59639259, 59649264, 59659259, 59669259, 59679259, 59689259, 59699264, 59709264, 59719264, 59729259, 59739259, 59749259, 59759259, 59769258, 59779259, 59789259, 59799259, 59809264, 59819259, 59829259, 59839264, 59849259, 59859259, 59869264, 59879264, 59889259, 59899259, 59909259, 59919259, 59929264, 59939264, 59949264, 59959258, 59969259, 59979259, 59989259, 59999259, 60009259, 60019259, 60029264, 60039259, 60049259, 60059264, 60069264, 60079264, 60089259, 60099259, 60109264, 60119259, 60129259, 60139259, 60149264, 60159258, 60169259, 60179259, 60189259, 60199259, 60209264, 60219259, 60229259, 60239259, 60249259, 60259259, 60269259, 60279259, 60289259, 60299264, 60309259, 60319259, 60329259, 60339264, 60349258, 60359259]</msg>
<status status="PASS" starttime="20201112 12:44:40.921" endtime="20201112 12:44:40.923"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.917" endtime="20201112 12:44:40.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:40.944" endtime="20201112 12:44:41.235"></status>
</kw>
<msg timestamp="20201112 12:44:41.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030933014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:40.943" endtime="20201112 12:44:41.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030933014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:41.239" endtime="20201112 12:44:41.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.246" endtime="20201112 12:44:41.248"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.940" endtime="20201112 12:44:41.249"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:40.924" endtime="20201112 12:44:41.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:41.273" level="INFO">${RESULT} = {'time': [0.020520319, 0.030933014, 0.040900806, 0.050868764, 0.060836528, 0.070804167, 0.080771819, 0.090739917, 0.100707944, 0.110681347, 0.120643389, 0.130616556, 0.140584319, 0.150546611, 0.160514...</msg>
<status status="PASS" starttime="20201112 12:44:41.250" endtime="20201112 12:44:41.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.277" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201112 12:44:41.276" endtime="20201112 12:44:41.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.279" level="INFO">VALUE: 0.020520319</msg>
<status status="PASS" starttime="20201112 12:44:41.278" endtime="20201112 12:44:41.279"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.273" endtime="20201112 12:44:41.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.284" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:41.283" endtime="20201112 12:44:41.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:41.286" level="INFO">VALUE: [0.030933014, 0.040900806, 0.050868764, 0.060836528, 0.070804167, 0.080771819, 0.090739917, 0.100707944, 0.110681347, 0.120643389, 0.130616556, 0.140584319, 0.150546611, 0.1605145, 0.170482111, 0.180449889, 0.190423069, 0.200390403, 0.210352556, 0.22031975, 0.230292861, 0.240254583, 0.250221083, 0.2601935, 0.270155236, 0.280123472, 0.290091736, 0.300059569, 0.310032625, 0.319994403, 0.329961417, 0.339927639, 0.349894208, 0.359867153, 0.369835347, 0.379803403, 0.389766194, 0.399734431, 0.409702653, 0.419670778, 0.429638486, 0.439606667, 0.449574653, 0.459542806, 0.469516083, 0.479478444, 0.489445958, 0.49941925, 0.509382069, 0.519350153, 0.529323556, 0.539292222, 0.54925525, 0.559223347, 0.569192083, 0.57916075, 0.589134306, 0.599102486, 0.609070708, 0.619032972, 0.629002139, 0.638970764, 0.648939083, 0.658907736, 0.668876194, 0.678844694, 0.688818403, 0.698781569, 0.70875025, 0.718724333, 0.728692847, 0.738661139, 0.748624333, 0.758592833, 0.768566861, 0.778530306, 0.788498875, 0.798467625, 0.808441986, 0.81840475, 0.82837375, 0.838342194, 0.848310819, 0.858279569, 0.868254194, 0.87821775, 0.888186194, 0.898154639, 0.908123597, 0.918091944, 0.928059847, 0.938028403, 0.947996861, 0.957971056, 0.967934472, 0.977903611, 0.987872583, 0.997846681, 1.007809653, 1.01777875] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:41.285" endtime="20201112 12:44:41.287"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.280" endtime="20201112 12:44:41.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.289" endtime="20201112 12:44:41.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:41.293" endtime="20201112 12:44:41.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.291" endtime="20201112 12:44:41.313"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.288" endtime="20201112 12:44:41.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:38.746" endtime="20201112 12:44:41.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.639" endtime="20201112 12:44:41.314"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:33.638" endtime="20201112 12:44:41.314"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:41.317" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:41.325" endtime="20201112 12:44:43.449"></status>
</kw>
<msg timestamp="20201112 12:44:43.450" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61937758, 'wakeups': [61948297, 61958290, 61968290, 61978290, 61988290...</msg>
<status status="PASS" starttime="20201112 12:44:41.323" endtime="20201112 12:44:43.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.456" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 61937758, 'wakeups': [61948297, 61958290, 61968290, 61978290, 61988290...</msg>
<status status="PASS" starttime="20201112 12:44:43.452" endtime="20201112 12:44:43.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.458" endtime="20201112 12:44:43.461"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.321" endtime="20201112 12:44:43.462"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.319" endtime="20201112 12:44:43.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:43.465" level="INFO">${RESULT} = {'wakeups': [61948297, 61958290, 61968290, 61978290, 61988290, 61998290, 62008293, 62018293, 62028290, 62038290, 62048293, 62058293, 62068290, 62078290, 62088293, 62098293, 62108293, 62118290, 6212829...</msg>
<status status="PASS" starttime="20201112 12:44:43.463" endtime="20201112 12:44:43.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.469" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:43.468" endtime="20201112 12:44:43.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.471" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:43.470" endtime="20201112 12:44:43.472"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.466" endtime="20201112 12:44:43.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.477" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:43.476" endtime="20201112 12:44:43.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.479" level="INFO">VALUE: 61937758</msg>
<status status="PASS" starttime="20201112 12:44:43.478" endtime="20201112 12:44:43.480"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.473" endtime="20201112 12:44:43.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.484" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:43.483" endtime="20201112 12:44:43.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.486" level="INFO">VALUE: [61948297, 61958290, 61968290, 61978290, 61988290, 61998290, 62008293, 62018293, 62028290, 62038290, 62048293, 62058293, 62068290, 62078290, 62088293, 62098293, 62108293, 62118290, 62128290, 62138293, 62148290, 62158290, 62168293, 62178290, 62188290, 62198290, 62208293, 62218293, 62228290, 62238290, 62248290, 62258290, 62268293, 62278290, 62288290, 62298293, 62308290, 62318290, 62328293, 62338290, 62348290, 62358293, 62368293, 62378290, 62388290, 62398290, 62408290, 62418293, 62428293, 62438293, 62448290, 62458293, 62468293, 62478290, 62488290, 62498290, 62508290, 62518293, 62528293, 62538293, 62548290, 62558290, 62568290, 62578293, 62588293, 62598293, 62608290, 62618293, 62628293, 62638290, 62648290, 62658293, 62668293, 62678293, 62688293, 62698293, 62708293, 62718293, 62728293, 62738293, 62748293, 62758290, 62768290, 62778290, 62788290, 62798290, 62808290, 62818290, 62828290, 62838293, 62848293, 62858293, 62868290, 62878290, 62888293, 62898290, 62908290, 62918293, 62928293, 62938290]</msg>
<status status="PASS" starttime="20201112 12:44:43.485" endtime="20201112 12:44:43.487"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.481" endtime="20201112 12:44:43.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.493" endtime="20201112 12:44:43.784"></status>
</kw>
<msg timestamp="20201112 12:44:43.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023406486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033911639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:43.492" endtime="20201112 12:44:43.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023406486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033911639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:43.787" endtime="20201112 12:44:43.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.795" endtime="20201112 12:44:43.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.489" endtime="20201112 12:44:43.797"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.488" endtime="20201112 12:44:43.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:43.821" level="INFO">${RESULT} = {'time': [0.023406486, 0.033911639, 0.043873111, 0.053840958, 0.063808722, 0.073777278, 0.083745681, 0.093716722, 0.103684694, 0.113649694, 0.123618583, 0.133590097, 0.143558639, 0.153524167, 0.163492...</msg>
<status status="PASS" starttime="20201112 12:44:43.798" endtime="20201112 12:44:43.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.826" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:43.825" endtime="20201112 12:44:43.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.828" level="INFO">VALUE: 0.023406486</msg>
<status status="PASS" starttime="20201112 12:44:43.827" endtime="20201112 12:44:43.828"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.822" endtime="20201112 12:44:43.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.834" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:43.832" endtime="20201112 12:44:43.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:43.836" level="INFO">VALUE: [0.033911639, 0.043873111, 0.053840958, 0.063808722, 0.073777278, 0.083745681, 0.093716722, 0.103684694, 0.113649694, 0.123618583, 0.133590097, 0.143558639, 0.153524167, 0.163492625, 0.173464028, 0.183432611, 0.193401361, 0.203366542, 0.213334514, 0.22330575, 0.233271125, 0.243239806, 0.253211111, 0.263175875, 0.273143625, 0.283111736, 0.293083111, 0.303050931, 0.313015972, 0.322984694, 0.332953431, 0.342921931, 0.352893611, 0.362859167, 0.372827833, 0.382799375, 0.392764542, 0.402733389, 0.412705375, 0.422671208, 0.432640111, 0.442611819, 0.452580625, 0.462545931, 0.472513917, 0.482482111, 0.492450639, 0.502422139, 0.512389972, 0.522358014, 0.532322833, 0.542293569, 0.552261292, 0.562225486, 0.57219275, 0.582160458, 0.592128111, 0.602099375, 0.612067278, 0.622035333, 0.632000167, 0.641967903, 0.651935528, 0.661906556, 0.671874514, 0.681842639, 0.691808417, 0.701780444, 0.711749222, 0.721714639, 0.731683486, 0.741655139, 0.751624542, 0.761593375, 0.771562667, 0.781531472, 0.791500903, 0.80147, 0.811438292, 0.821406875, 0.831376042, 0.841341583, 0.851310056, 0.861278097, 0.871246417, 0.881214278, 0.891181931, 0.901149875, 0.911118514, 0.921089958, 0.931058194, 0.941026667, 0.950991986, 0.960960153, 0.970931361, 0.980896986, 0.990865083, 1.000836569, 1.010804931, 1.020770042] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:43.835" endtime="20201112 12:44:43.836"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.829" endtime="20201112 12:44:43.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.839" endtime="20201112 12:44:43.840"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:43.842" endtime="20201112 12:44:43.861"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.841" endtime="20201112 12:44:43.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.837" endtime="20201112 12:44:43.862"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.318" endtime="20201112 12:44:43.863"></status>
</kw>
<msg timestamp="20201112 12:44:43.863" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:43.871" endtime="20201112 12:44:45.994"></status>
</kw>
<msg timestamp="20201112 12:44:45.996" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64491654, 'wakeups': [64502192, 64512186, 64522186, 64532189, 64542186...</msg>
<status status="PASS" starttime="20201112 12:44:43.869" endtime="20201112 12:44:45.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.001" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 64491654, 'wakeups': [64502192, 64512186, 64522186, 64532189, 64542186...</msg>
<status status="PASS" starttime="20201112 12:44:45.998" endtime="20201112 12:44:46.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.004" endtime="20201112 12:44:46.007"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.867" endtime="20201112 12:44:46.008"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.865" endtime="20201112 12:44:46.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:46.014" level="INFO">${RESULT} = {'wakeups': [64502192, 64512186, 64522186, 64532189, 64542186, 64552186, 64562189, 64572189, 64582186, 64592189, 64602186, 64612186, 64622189, 64632186, 64642186, 64652189, 64662186, 64672189, 6468218...</msg>
<status status="PASS" starttime="20201112 12:44:46.011" endtime="20201112 12:44:46.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.023" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:46.022" endtime="20201112 12:44:46.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.025" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:46.024" endtime="20201112 12:44:46.025"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.020" endtime="20201112 12:44:46.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.030" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:46.029" endtime="20201112 12:44:46.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.032" level="INFO">VALUE: 64491654</msg>
<status status="PASS" starttime="20201112 12:44:46.031" endtime="20201112 12:44:46.032"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.027" endtime="20201112 12:44:46.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.037" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:46.036" endtime="20201112 12:44:46.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.039" level="INFO">VALUE: [64502192, 64512186, 64522186, 64532189, 64542186, 64552186, 64562189, 64572189, 64582186, 64592189, 64602186, 64612186, 64622189, 64632186, 64642186, 64652189, 64662186, 64672189, 64682186, 64692186, 64702189, 64712189, 64722186, 64732186, 64742189, 64752186, 64762189, 64772189, 64782189, 64792186, 64802186, 64812189, 64822189, 64832189, 64842186, 64852189, 64862186, 64872189, 64882186, 64892186, 64902189, 64912186, 64922189, 64932186, 64942186, 64952189, 64962189, 64972186, 64982186, 64992186, 65002186, 65012186, 65022189, 65032189, 65042186, 65052189, 65062186, 65072186, 65082189, 65092186, 65102189, 65112189, 65122186, 65132186, 65142186, 65152189, 65162189, 65172186, 65182186, 65192189, 65202189, 65212186, 65222186, 65232189, 65242189, 65252186, 65262186, 65272186, 65282189, 65292186, 65302189, 65312189, 65322189, 65332186, 65342189, 65352189, 65362186, 65372189, 65382189, 65392189, 65402189, 65412189, 65422186, 65432189, 65442186, 65452189, 65462186, 65472186, 65482189, 65492189]</msg>
<status status="PASS" starttime="20201112 12:44:46.038" endtime="20201112 12:44:46.039"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.033" endtime="20201112 12:44:46.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.046" endtime="20201112 12:44:46.339"></status>
</kw>
<msg timestamp="20201112 12:44:46.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030005764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:46.044" endtime="20201112 12:44:46.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030005764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:46.342" endtime="20201112 12:44:46.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.350" endtime="20201112 12:44:46.351"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.042" endtime="20201112 12:44:46.352"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.040" endtime="20201112 12:44:46.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:46.375" level="INFO">${RESULT} = {'time': [0.019500542, 0.030005764, 0.039969972, 0.049939417, 0.059911583, 0.069878042, 0.079847486, 0.089819153, 0.099787861, 0.109753889, 0.119725847, 0.129691583, 0.139660264, 0.149632514, 0.159598...</msg>
<status status="PASS" starttime="20201112 12:44:46.353" endtime="20201112 12:44:46.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.380" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:46.379" endtime="20201112 12:44:46.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.382" level="INFO">VALUE: 0.019500542</msg>
<status status="PASS" starttime="20201112 12:44:46.381" endtime="20201112 12:44:46.382"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.376" endtime="20201112 12:44:46.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.387" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:46.386" endtime="20201112 12:44:46.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:46.389" level="INFO">VALUE: [0.030005764, 0.039969972, 0.049939417, 0.059911583, 0.069878042, 0.079847486, 0.089819153, 0.099787861, 0.109753889, 0.119725847, 0.129691583, 0.139660264, 0.149632514, 0.159598542, 0.169567472, 0.179539375, 0.189504375, 0.199475569, 0.209441014, 0.219409472, 0.229380361, 0.239348486, 0.249313319, 0.259281375, 0.269252417, 0.279218111, 0.289190153, 0.299159236, 0.309128361, 0.319094792, 0.329063708, 0.339035778, 0.349004333, 0.358973125, 0.368938528, 0.378910278, 0.388875639, 0.398847181, 0.408813097, 0.418782236, 0.428754, 0.438719542, 0.448691264, 0.458657, 0.468625722, 0.478597389, 0.488565764, 0.498531278, 0.508500181, 0.518468958, 0.528437486, 0.538405778, 0.548377139, 0.55834575, 0.568311028, 0.578282472, 0.588247681, 0.598215681, 0.608187306, 0.6181525, 0.628124389, 0.638092583, 0.648057972, 0.65802675, 0.667996292, 0.677968667, 0.687937611, 0.697903264, 0.707871847, 0.717844, 0.727812583, 0.737778153, 0.747747486, 0.757720514, 0.767689958, 0.777656611, 0.787626417, 0.797596125, 0.807569347, 0.817535944, 0.827507514, 0.837476264, 0.847445444, 0.857412, 0.867384653, 0.877353667, 0.887319486, 0.897291347, 0.907259847, 0.917228319, 0.927196486, 0.937164792, 0.947129889, 0.95710125, 0.967066208, 0.977037819, 0.987003194, 0.996972403, 1.006944278, 1.016912597] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:46.388" endtime="20201112 12:44:46.390"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.383" endtime="20201112 12:44:46.390"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.392" endtime="20201112 12:44:46.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:46.396" endtime="20201112 12:44:46.415"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.394" endtime="20201112 12:44:46.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.391" endtime="20201112 12:44:46.416"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:43.864" endtime="20201112 12:44:46.416"></status>
</kw>
<msg timestamp="20201112 12:44:46.417" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:46.425" endtime="20201112 12:44:48.549"></status>
</kw>
<msg timestamp="20201112 12:44:48.551" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67054421, 'wakeups': [67064960, 67074953, 67084956, 67094953, 67104953...</msg>
<status status="PASS" starttime="20201112 12:44:46.423" endtime="20201112 12:44:48.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.557" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67054421, 'wakeups': [67064960, 67074953, 67084956, 67094953, 67104953...</msg>
<status status="PASS" starttime="20201112 12:44:48.553" endtime="20201112 12:44:48.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.559" endtime="20201112 12:44:48.563"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.420" endtime="20201112 12:44:48.564"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.419" endtime="20201112 12:44:48.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.571" level="INFO">${RESULT} = {'wakeups': [67064960, 67074953, 67084956, 67094953, 67104953, 67114953, 67124953, 67134956, 67144953, 67154953, 67164956, 67174953, 67184956, 67194953, 67204956, 67214953, 67224956, 67234953, 6724495...</msg>
<status status="PASS" starttime="20201112 12:44:48.566" endtime="20201112 12:44:48.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.575" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:48.574" endtime="20201112 12:44:48.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.577" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:48.576" endtime="20201112 12:44:48.578"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.572" endtime="20201112 12:44:48.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.582" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:48.581" endtime="20201112 12:44:48.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.584" level="INFO">VALUE: 67054421</msg>
<status status="PASS" starttime="20201112 12:44:48.583" endtime="20201112 12:44:48.584"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.579" endtime="20201112 12:44:48.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.589" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:48.588" endtime="20201112 12:44:48.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.592" level="INFO">VALUE: [67064960, 67074953, 67084956, 67094953, 67104953, 67114953, 67124953, 67134956, 67144953, 67154953, 67164956, 67174953, 67184956, 67194953, 67204956, 67214953, 67224956, 67234953, 67244956, 67254953, 67264956, 67274953, 67284953, 67294956, 67304953, 67314956, 67324953, 67334956, 67344953, 67354956, 67364953, 67374956, 67384953, 67394956, 67404953, 67414953, 67424956, 67434953, 67444956, 67454953, 67464953, 67474953, 67484953, 67494953, 67504956, 67514953, 67524956, 67534956, 67544953, 67554956, 67564953, 67574953, 67584953, 67594956, 67604953, 67614953, 67624956, 67634953, 67644956, 67654953, 67664953, 67674953, 67684956, 67694953, 67704953, 67714956, 67724953, 67734956, 67744953, 67754956, 67764953, 67774956, 67784953, 67794953, 67804956, 67814956, 67824956, 67834953, 67844953, 67854953, 67864953, 67874953, 67884953, 67894956, 67904953, 67914956, 67924953, 67934956, 67944953, 67954956, 67964953, 67974956, 67984953, 67994953, 68004956, 68014953, 68024953, 68034953, 68044956, 68054956]</msg>
<status status="PASS" starttime="20201112 12:44:48.590" endtime="20201112 12:44:48.592"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.585" endtime="20201112 12:44:48.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.599" endtime="20201112 12:44:48.889"></status>
</kw>
<msg timestamp="20201112 12:44:48.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020449528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030955069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:48.597" endtime="20201112 12:44:48.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020449528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030955069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:48.893" endtime="20201112 12:44:48.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.901" endtime="20201112 12:44:48.902"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.595" endtime="20201112 12:44:48.903"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.593" endtime="20201112 12:44:48.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:48.927" level="INFO">${RESULT} = {'time': [0.020449528, 0.030955069, 0.040917708, 0.050890056, 0.060855944, 0.070825347, 0.080794639, 0.090763806, 0.100735903, 0.110701792, 0.120670417, 0.130642722, 0.140608736, 0.150580972, 0.160547...</msg>
<status status="PASS" starttime="20201112 12:44:48.904" endtime="20201112 12:44:48.928"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.932" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201112 12:44:48.931" endtime="20201112 12:44:48.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.934" level="INFO">VALUE: 0.020449528</msg>
<status status="PASS" starttime="20201112 12:44:48.933" endtime="20201112 12:44:48.934"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.928" endtime="20201112 12:44:48.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.939" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:48.938" endtime="20201112 12:44:48.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:48.941" level="INFO">VALUE: [0.030955069, 0.040917708, 0.050890056, 0.060855944, 0.070825347, 0.080794639, 0.090763806, 0.100735903, 0.110701792, 0.120670417, 0.130642722, 0.140608736, 0.150580972, 0.160547486, 0.170519819, 0.180485708, 0.190458056, 0.200424444, 0.210396681, 0.220361958, 0.230333681, 0.240299319, 0.250267403, 0.260238736, 0.270203764, 0.280174736, 0.290139028, 0.300109778, 0.310074833, 0.320046069, 0.330011389, 0.339982625, 0.349948028, 0.359919167, 0.369885167, 0.379854125, 0.389826194, 0.399790833, 0.409762319, 0.419728403, 0.429697333, 0.439665931, 0.449634833, 0.459603681, 0.469575472, 0.479541764, 0.489514375, 0.499483278, 0.509448847, 0.519420625, 0.529385625, 0.539354042, 0.549322667, 0.559294208, 0.569259681, 0.579227681, 0.589199556, 0.599165306, 0.609137694, 0.619104611, 0.629074722, 0.639044389, 0.649016931, 0.658983361, 0.668953139, 0.67892625, 0.688892861, 0.698865708, 0.708832014, 0.718804514, 0.728771208, 0.738744111, 0.748710667, 0.758680292, 0.768652833, 0.778622694, 0.788592639, 0.798559333, 0.808528931, 0.818498806, 0.828468167, 0.838437708, 0.848407097, 0.858380014, 0.868346625, 0.878318639, 0.888285222, 0.898258069, 0.908224833, 0.918197542, 0.928164694, 0.938138097, 0.948105181, 0.958074889, 0.968047667, 0.978014639, 0.987984931, 0.997954847, 1.007927847, 1.01789725] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:48.940" endtime="20201112 12:44:48.941"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.935" endtime="20201112 12:44:48.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.944" endtime="20201112 12:44:48.945"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:48.947" endtime="20201112 12:44:48.967"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.946" endtime="20201112 12:44:48.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.943" endtime="20201112 12:44:48.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:46.417" endtime="20201112 12:44:48.968"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.315" endtime="20201112 12:44:48.969"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:41.315" endtime="20201112 12:44:48.969"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3 Times</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201112 12:44:48.971" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:48.979" endtime="20201112 12:44:51.103"></status>
</kw>
<msg timestamp="20201112 12:44:51.104" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69616516, 'wakeups': [69627136, 69637117, 69647116, 69657116, 696671...</msg>
<status status="PASS" starttime="20201112 12:44:48.978" endtime="20201112 12:44:51.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.110" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 69616516, 'wakeups': [69627136, 69637117, 69647116, 69657116, 696671...</msg>
<status status="PASS" starttime="20201112 12:44:51.106" endtime="20201112 12:44:51.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.112" endtime="20201112 12:44:51.115"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.975" endtime="20201112 12:44:51.117"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.973" endtime="20201112 12:44:51.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:51.123" level="INFO">${RESULT} = {'wakeups': [69627136, 69637117, 69647116, 69657116, 69667116, 69677116, 69687116, 69697116, 69707116, 69717116, 69727116, 69737116, 69747116, 69757116, 69767116, 69777116, 69787119, 69797116, 6980711...</msg>
<status status="PASS" starttime="20201112 12:44:51.119" endtime="20201112 12:44:51.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.129" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:51.128" endtime="20201112 12:44:51.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.131" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:51.130" endtime="20201112 12:44:51.132"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.125" endtime="20201112 12:44:51.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.137" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:51.136" endtime="20201112 12:44:51.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.139" level="INFO">VALUE: 69616516</msg>
<status status="PASS" starttime="20201112 12:44:51.139" endtime="20201112 12:44:51.140"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.133" endtime="20201112 12:44:51.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.144" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:51.143" endtime="20201112 12:44:51.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.146" level="INFO">VALUE: [69627136, 69637117, 69647116, 69657116, 69667116, 69677116, 69687116, 69697116, 69707116, 69717116, 69727116, 69737116, 69747116, 69757116, 69767116, 69777116, 69787119, 69797116, 69807116, 69817116, 69827116, 69837116, 69847116, 69857116, 69867116, 69877116, 69887116, 69897116, 69907116, 69917116, 69927116, 69937119, 69947116, 69957116, 69967116, 69977116, 69987116, 69997116, 70007119, 70017116, 70027116, 70037116, 70047116, 70057116, 70067116, 70077119, 70087116, 70097116, 70107116, 70117116, 70127116, 70137116, 70147116, 70157116, 70167116, 70177119, 70187116, 70197116, 70207116, 70217116, 70227116, 70237116, 70247116, 70257119, 70267116, 70277116, 70287116, 70297116, 70307116, 70317116, 70327116, 70337116, 70347116, 70357116, 70367116, 70377116, 70387116, 70397116, 70407116, 70417116, 70427116, 70437116, 70447116, 70457116, 70467116, 70477116, 70487116, 70497116, 70507116, 70517116, 70527116, 70537116, 70547116, 70557116, 70567116, 70577116, 70587116, 70597116, 70607116, 70617116]</msg>
<status status="PASS" starttime="20201112 12:44:51.145" endtime="20201112 12:44:51.147"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.141" endtime="20201112 12:44:51.147"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.154" endtime="20201112 12:44:51.445"></status>
</kw>
<msg timestamp="20201112 12:44:51.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033321736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.152" endtime="20201112 12:44:51.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022735028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033321736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:51.449" endtime="20201112 12:44:51.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.457" endtime="20201112 12:44:51.458"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.149" endtime="20201112 12:44:51.459"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.148" endtime="20201112 12:44:51.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:51.482" level="INFO">${RESULT} = {'time': [0.022735028, 0.033321736, 0.043273597, 0.053241778, 0.063211375, 0.073180653, 0.083150278, 0.09311925, 0.103089125, 0.113058764, 0.123028042, 0.132997306, 0.142966944, 0.152936417, 0.1629053...</msg>
<status status="PASS" starttime="20201112 12:44:51.460" endtime="20201112 12:44:51.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.487" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:51.485" endtime="20201112 12:44:51.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.489" level="INFO">VALUE: 0.022735028</msg>
<status status="PASS" starttime="20201112 12:44:51.488" endtime="20201112 12:44:51.489"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.483" endtime="20201112 12:44:51.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.494" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:51.493" endtime="20201112 12:44:51.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:51.496" level="INFO">VALUE: [0.033321736, 0.043273597, 0.053241778, 0.063211375, 0.073180653, 0.083150278, 0.09311925, 0.103089125, 0.113058764, 0.123028042, 0.132997306, 0.142966944, 0.152936417, 0.162905333, 0.172874472, 0.1828435, 0.192815111, 0.202782778, 0.212752333, 0.222722208, 0.232691486, 0.242661, 0.252630931, 0.262600597, 0.272570417, 0.282540431, 0.292510208, 0.302479958, 0.312449792, 0.322419611, 0.332389083, 0.342360847, 0.352328389, 0.362297694, 0.372266847, 0.382236139, 0.392205278, 0.402174639, 0.412145556, 0.422111931, 0.432081264, 0.442050236, 0.452019278, 0.46198875, 0.471958944, 0.481931083, 0.491898889, 0.501868625, 0.511838556, 0.521807903, 0.531776944, 0.541745458, 0.551714, 0.561682694, 0.571651375, 0.581622264, 0.591588597, 0.601557292, 0.61152625, 0.621495542, 0.631464736, 0.641433611, 0.651401931, 0.661372639, 0.671339097, 0.68130725, 0.691274847, 0.701243333, 0.711211556, 0.721179972, 0.731148403, 0.741116861, 0.751085194, 0.761053583, 0.771022167, 0.780989819, 0.790957319, 0.800924694, 0.810892569, 0.820860361, 0.830828264, 0.840796458, 0.850764514, 0.860732917, 0.870700833, 0.880668306, 0.890635375, 0.900602819, 0.910570625, 0.920538708, 0.930506347, 0.940474681, 0.950443125, 0.960411056, 0.970380097, 0.980348708, 0.990317181, 1.000285625, 1.010254417, 1.020223056] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:51.495" endtime="20201112 12:44:51.497"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.490" endtime="20201112 12:44:51.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.500" endtime="20201112 12:44:51.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:51.503" endtime="20201112 12:44:51.522"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.501" endtime="20201112 12:44:51.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.498" endtime="20201112 12:44:51.523"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.972" endtime="20201112 12:44:51.524"></status>
</kw>
<msg timestamp="20201112 12:44:51.524" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:51.532" endtime="20201112 12:44:53.656"></status>
</kw>
<msg timestamp="20201112 12:44:53.657" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72177222, 'wakeups': [72187843, 72197823, 72207822, 72217822, 722278...</msg>
<status status="PASS" starttime="20201112 12:44:51.530" endtime="20201112 12:44:53.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.663" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 72177222, 'wakeups': [72187843, 72197823, 72207822, 72217822, 722278...</msg>
<status status="PASS" starttime="20201112 12:44:53.659" endtime="20201112 12:44:53.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.666" endtime="20201112 12:44:53.669"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.528" endtime="20201112 12:44:53.670"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.526" endtime="20201112 12:44:53.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:53.676" level="INFO">${RESULT} = {'wakeups': [72187843, 72197823, 72207822, 72217822, 72227822, 72237822, 72247822, 72257822, 72267825, 72277822, 72287822, 72297822, 72307822, 72317822, 72327825, 72337822, 72347822, 72357822, 7236782...</msg>
<status status="PASS" starttime="20201112 12:44:53.672" endtime="20201112 12:44:53.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.683" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:53.682" endtime="20201112 12:44:53.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.685" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:53.684" endtime="20201112 12:44:53.685"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.678" endtime="20201112 12:44:53.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.692" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:53.690" endtime="20201112 12:44:53.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.695" level="INFO">VALUE: 72177222</msg>
<status status="PASS" starttime="20201112 12:44:53.693" endtime="20201112 12:44:53.695"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.687" endtime="20201112 12:44:53.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.700" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:53.699" endtime="20201112 12:44:53.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:53.703" level="INFO">VALUE: [72187843, 72197823, 72207822, 72217822, 72227822, 72237822, 72247822, 72257822, 72267825, 72277822, 72287822, 72297822, 72307822, 72317822, 72327825, 72337822, 72347822, 72357822, 72367822, 72377822, 72387825, 72397822, 72407822, 72417822, 72427822, 72437822, 72447822, 72457822, 72467822, 72477822, 72487822, 72497822, 72507822, 72517822, 72527822, 72537822, 72547822, 72557822, 72567822, 72577825, 72587822, 72597822, 72607822, 72617822, 72627822, 72637822, 72647825, 72657822, 72667822, 72677825, 72687822, 72697825, 72707822, 72717822, 72727822, 72737822, 72747822, 72757825, 72767822, 72777822, 72787822, 72797822, 72807822, 72817822, 72827825, 72837822, 72847822, 72857822, 72867822, 72877822, 72887822, 72897822, 72907822, 72917822, 72927822, 72937822, 72947822, 72957822, 72967822, 72977825, 72987822, 72997822, 73007822, 73017822, 73027822, 73037825, 73047822, 73057822, 73067822, 73077822, 73087822, 73097822, 73107822, 73117822, 73127822, 73137822, 73147822, 73157822, 73167822, 73177822]</msg>
<status status="PASS" starttime="20201112 12:44:53.702" endtime="20201112 12:44:53.704"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.696" endtime="20201112 12:44:53.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:53.712" endtime="20201112 12:44:54.003"></status>
</kw>
<msg timestamp="20201112 12:44:54.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030389236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:53.709" endtime="20201112 12:44:54.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019802722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030389236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:54.007" endtime="20201112 12:44:54.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.014" endtime="20201112 12:44:54.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.706" endtime="20201112 12:44:54.016"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:53.705" endtime="20201112 12:44:54.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:54.040" level="INFO">${RESULT} = {'time': [0.019802722, 0.030389236, 0.040338819, 0.050307125, 0.060275708, 0.070244833, 0.080213819, 0.090182361, 0.100150792, 0.110121292, 0.120088069, 0.130056986, 0.140026014, 0.149995139, 0.159964...</msg>
<status status="PASS" starttime="20201112 12:44:54.018" endtime="20201112 12:44:54.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.045" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:54.044" endtime="20201112 12:44:54.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.047" level="INFO">VALUE: 0.019802722</msg>
<status status="PASS" starttime="20201112 12:44:54.046" endtime="20201112 12:44:54.048"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.042" endtime="20201112 12:44:54.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.052" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:54.051" endtime="20201112 12:44:54.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:54.054" level="INFO">VALUE: [0.030389236, 0.040338819, 0.050307125, 0.060275708, 0.070244833, 0.080213819, 0.090182361, 0.100150792, 0.110121292, 0.120088069, 0.130056986, 0.140026014, 0.149995139, 0.159964319, 0.169935528, 0.179903056, 0.189872069, 0.199840778, 0.209809903, 0.219778958, 0.229749986, 0.23971675, 0.249685431, 0.259654167, 0.269623056, 0.279592444, 0.289560861, 0.299529722, 0.309498722, 0.319467611, 0.329436486, 0.339405583, 0.349374542, 0.359343389, 0.369312722, 0.379282014, 0.389250944, 0.399219778, 0.409188972, 0.419160222, 0.429127056, 0.439096153, 0.449065194, 0.459033986, 0.469003097, 0.478971958, 0.488943375, 0.498910167, 0.508878806, 0.518849847, 0.528816333, 0.538787472, 0.548753597, 0.558722708, 0.568691583, 0.578660639, 0.588629833, 0.598601847, 0.6085685, 0.61853725, 0.628505889, 0.638475208, 0.648443694, 0.6584125, 0.668383194, 0.678349556, 0.688318528, 0.698287014, 0.708255569, 0.718224097, 0.728192, 0.738159639, 0.748127333, 0.758095972, 0.768065111, 0.778034042, 0.788003042, 0.797971944, 0.807940569, 0.81791175, 0.827878722, 0.837848111, 0.847817931, 0.857787778, 0.867757306, 0.877728875, 0.887695792, 0.897665403, 0.907634819, 0.917604347, 0.927573347, 0.937542194, 0.947511014, 0.957479542, 0.96744725, 0.977415403, 0.987383625, 0.997352625, 1.007322528, 1.017291528] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:54.053" endtime="20201112 12:44:54.055"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.049" endtime="20201112 12:44:54.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.058" endtime="20201112 12:44:54.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:54.061" endtime="20201112 12:44:54.080"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.059" endtime="20201112 12:44:54.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.056" endtime="20201112 12:44:54.081"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:51.524" endtime="20201112 12:44:54.082"></status>
</kw>
<msg timestamp="20201112 12:44:54.082" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:54.090" endtime="20201112 12:44:56.215"></status>
</kw>
<msg timestamp="20201112 12:44:56.216" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74744284, 'wakeups': [74754905, 74764888, 74774884, 74784884, 747948...</msg>
<status status="PASS" starttime="20201112 12:44:54.088" endtime="20201112 12:44:56.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.222" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 74744284, 'wakeups': [74754905, 74764888, 74774884, 74784884, 747948...</msg>
<status status="PASS" starttime="20201112 12:44:56.219" endtime="20201112 12:44:56.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.225" endtime="20201112 12:44:56.228"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.085" endtime="20201112 12:44:56.229"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.084" endtime="20201112 12:44:56.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:56.235" level="INFO">${RESULT} = {'wakeups': [74754905, 74764888, 74774884, 74784884, 74794884, 74804884, 74814884, 74824884, 74834884, 74844884, 74854884, 74864884, 74874884, 74884887, 74894884, 74904884, 74914884, 74924884, 7493488...</msg>
<status status="PASS" starttime="20201112 12:44:56.232" endtime="20201112 12:44:56.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.240" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201112 12:44:56.239" endtime="20201112 12:44:56.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.242" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201112 12:44:56.241" endtime="20201112 12:44:56.242"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.237" endtime="20201112 12:44:56.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.247" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:56.246" endtime="20201112 12:44:56.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.249" level="INFO">VALUE: 74744284</msg>
<status status="PASS" starttime="20201112 12:44:56.248" endtime="20201112 12:44:56.250"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.244" endtime="20201112 12:44:56.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.254" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:56.253" endtime="20201112 12:44:56.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.256" level="INFO">VALUE: [74754905, 74764888, 74774884, 74784884, 74794884, 74804884, 74814884, 74824884, 74834884, 74844884, 74854884, 74864884, 74874884, 74884887, 74894884, 74904884, 74914884, 74924884, 74934884, 74944884, 74954884, 74964884, 74974884, 74984884, 74994884, 75004884, 75014884, 75024884, 75034884, 75044884, 75054884, 75064884, 75074884, 75084884, 75094884, 75104884, 75114884, 75124884, 75134884, 75144884, 75154884, 75164884, 75174884, 75184884, 75194884, 75204884, 75214884, 75224884, 75234884, 75244884, 75254884, 75264884, 75274884, 75284884, 75294884, 75304887, 75314884, 75324884, 75334884, 75344884, 75354884, 75364884, 75374884, 75384884, 75394884, 75404884, 75414884, 75424884, 75434884, 75444884, 75454884, 75464884, 75474884, 75484884, 75494884, 75504884, 75514884, 75524884, 75534887, 75544884, 75554884, 75564884, 75574884, 75584884, 75594884, 75604884, 75614884, 75624884, 75634884, 75644887, 75654884, 75664884, 75674884, 75684887, 75694884, 75704884, 75714884, 75724884, 75734884, 75744884]</msg>
<status status="PASS" starttime="20201112 12:44:56.255" endtime="20201112 12:44:56.257"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.251" endtime="20201112 12:44:56.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.263" endtime="20201112 12:44:56.555"></status>
</kw>
<msg timestamp="20201112 12:44:56.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031227208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.262" endtime="20201112 12:44:56.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031227208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201112 12:44:56.559" endtime="20201112 12:44:56.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.566" endtime="20201112 12:44:56.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.259" endtime="20201112 12:44:56.568"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.258" endtime="20201112 12:44:56.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201112 12:44:56.592" level="INFO">${RESULT} = {'time': [0.020640069, 0.031227208, 0.041179667, 0.051145806, 0.061114917, 0.071084458, 0.081053764, 0.091023097, 0.10099225, 0.110960917, 0.120929986, 0.130899764, 0.140869861, 0.150839319, 0.1608108...</msg>
<status status="PASS" starttime="20201112 12:44:56.569" endtime="20201112 12:44:56.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.597" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201112 12:44:56.596" endtime="20201112 12:44:56.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.599" level="INFO">VALUE: 0.020640069</msg>
<status status="PASS" starttime="20201112 12:44:56.598" endtime="20201112 12:44:56.599"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.593" endtime="20201112 12:44:56.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.604" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201112 12:44:56.603" endtime="20201112 12:44:56.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201112 12:44:56.606" level="INFO">VALUE: [0.031227208, 0.041179667, 0.051145806, 0.061114917, 0.071084458, 0.081053764, 0.091023097, 0.10099225, 0.110960917, 0.120929986, 0.130899764, 0.140869861, 0.150839319, 0.160810806, 0.170778292, 0.180748181, 0.190717194, 0.200685944, 0.210655014, 0.220624014, 0.23059275, 0.240562056, 0.250531403, 0.260500611, 0.270469722, 0.280438958, 0.29040825, 0.300377889, 0.310348153, 0.320318208, 0.33028825, 0.340258389, 0.350228333, 0.360198056, 0.370167264, 0.380137153, 0.390107278, 0.400076611, 0.410046319, 0.420016014, 0.429985417, 0.439954958, 0.449925042, 0.459895236, 0.469865736, 0.479836167, 0.489806167, 0.499775625, 0.509745444, 0.519714361, 0.529683667, 0.539653097, 0.549622847, 0.559593375, 0.569563278, 0.579535306, 0.589502361, 0.599471639, 0.609441028, 0.619410333, 0.629379639, 0.639349792, 0.649320083, 0.659289625, 0.669259389, 0.679229375, 0.689199778, 0.699170597, 0.709141292, 0.719111875, 0.729082, 0.73905225, 0.749022722, 0.758992653, 0.76896275, 0.778932528, 0.788902208, 0.798872056, 0.808844111, 0.818811444, 0.828781153, 0.838751472, 0.848722194, 0.858692361, 0.868662861, 0.8786325, 0.888601389, 0.898570667, 0.908540444, 0.918512097, 0.928478792, 0.938447778, 0.948416069, 0.958387222, 0.968353694, 0.978322236, 0.988290347, 0.998258361, 1.008226597, 1.018195264] # exclude start event</msg>
<status status="PASS" starttime="20201112 12:44:56.605" endtime="20201112 12:44:56.607"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.600" endtime="20201112 12:44:56.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201112 12:44:56.609" endtime="20201112 12:44:56.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201112 12:44:56.613" endtime="20201112 12:44:56.632"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.611" endtime="20201112 12:44:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:56.608" endtime="20201112 12:44:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:54.082" endtime="20201112 12:44:56.633"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.970" endtime="20201112 12:44:56.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:44:48.969" endtime="20201112 12:44:56.634"></status>
</kw>
<status status="PASS" starttime="20201112 12:43:39.938" endtime="20201112 12:44:56.634"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_saml10-xpro</tag>
</tags>
<status status="PASS" starttime="20201112 12:43:39.871" endtime="20201112 12:44:56.635" critical="yes"></status>
</test>
<status status="PASS" starttime="20201112 12:43:38.471" endtime="20201112 12:44:56.638"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">saml10-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201112 12:41:52.908" endtime="20201112 12:44:56.655"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_saml10-xpro</stat>
<stat pass="1" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
